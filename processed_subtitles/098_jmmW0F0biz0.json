{
  "text": "Here are five things to know about neural \nnetworks in under five minutes. Number one:  \nneural networks are composed of node layers. There \nis an input node layer, there is a hidden layer,  \nand there is an output layer. And these neural \nnetworks reflect the behavior of the human brain,  \nallowing computer programs to recognize patterns \nand solve common problems in the fields of AI and  \ndeep learning. In fact, we should be describing \nthis as an artificial neural network, or an  ANN,\nto distinguish it from the very un-artificial \nneural network that's operating in our heads. Now,  \nthink of each node, or artificial neuron, as its own \nlinear regression model. That's number two.  \nLinear regression is a mathematical model that's \nused to predict future events. The weights of the  \nconnections between the nodes determines how much \ninfluence each input has on the output. So each  \nnode is composed of input data, weights, a bias, \nor a threshold, and then an output. Now data is  \npassed from one layer in the neural network to the \nnext in what is known as a feed forward network -- \nnumber three. To illustrate this, let's consider \nwhat a single node in our neural network might  \nlook like to decide -- should we go surfing. The \ndecision to go or not is our predicted outcome  \nor known as our yhat. Let's assume there are \nthree factors influencing our decision. Are the  \nwave's good, 1 for yes or 0 for no.  The waves \nare pumping, so x1 equals 1, 1 for yes.  Is the  \nlineup empty, well unfortunately not, so that gets a \n0. And then let's consider is it shark-free out  \nthere, that's x3 and yes, no shark attacks have \nbeen reported. Now to each decision we assign a  \nweight based on its importance on a scale of 0 \nto 5. So let's say that the waves, we're going to  \nscore that one, eh, so this is important, let's \ngive it a 5. And for the crowds, that's w2.  \nEh, not so important, we'll give that a 2. \nAnd sharks, well, we'll give that a score of a  \n4. Now we can plug in these values into the \nformula to get the desired output. So yhat equals  \n(1 * 5) + (0 * 2) + (1 * 4), then \nminus 3, that's our threshold, and that gives us  \na value of 6. Six is greater than 0, so the \noutput of this node is 1 -- we're going surfing.  \nAnd if we adjust the weights or the threshold, \nwe can achieve different outcomes.\n Number four.  Well, yes, but but but number four, neural networks \nrely on training data to learn and improve their  \naccuracy over time. We leverage supervised learning \non labeled datasets to train the algorithm.  \nAs we train the model, we want to evaluate its \naccuracy using something called a cost function.\nUltimately, the goal is to minimize our cost function to \nensure the correctness of fit for any given  \nobservation, and that happens as the model adjusts \nits weights and biases to fit the training data  \nset, through what's known as gradient descent, \nallowing the model to determine the direction  \nto take to reduce errors, or more specifically, \nminimize the cost function. And then finally,  \nnumber five: there are multiple types of neural \nnetworks beyond the feed forward neural network  \nthat we've described here. For example, there are \nconvolutional neural networks, known as CNNs, which  \nhave a unique architecture that's well suited \nfor identifying patterns like image recognition.  \nAnd there are recurrent neural networks, or RNNs, \nwhich are identified by their feedback loops and  \nRNNs are primarily leveraged using time series \ndata to make predictions about future events like  \nsales forecasting.  So, five things in five minutes.   \nTo learn more about neural networks, check out these videos.\nThanks for watching.\nIf you have any questions, please drop us a line below. And \nif you want to see more videos like this \nin the future, please Like and Subscribe.\n",
  "words": [
    "five",
    "things",
    "know",
    "neural",
    "networks",
    "five",
    "minutes",
    "number",
    "one",
    "neural",
    "networks",
    "composed",
    "node",
    "layers",
    "input",
    "node",
    "layer",
    "hidden",
    "layer",
    "output",
    "layer",
    "neural",
    "networks",
    "reflect",
    "behavior",
    "human",
    "brain",
    "allowing",
    "computer",
    "programs",
    "recognize",
    "patterns",
    "solve",
    "common",
    "problems",
    "fields",
    "ai",
    "deep",
    "learning",
    "fact",
    "describing",
    "artificial",
    "neural",
    "network",
    "ann",
    "distinguish",
    "neural",
    "network",
    "operating",
    "heads",
    "think",
    "node",
    "artificial",
    "neuron",
    "linear",
    "regression",
    "model",
    "number",
    "two",
    "linear",
    "regression",
    "mathematical",
    "model",
    "used",
    "predict",
    "future",
    "events",
    "weights",
    "connections",
    "nodes",
    "determines",
    "much",
    "influence",
    "input",
    "output",
    "node",
    "composed",
    "input",
    "data",
    "weights",
    "bias",
    "threshold",
    "output",
    "data",
    "passed",
    "one",
    "layer",
    "neural",
    "network",
    "next",
    "known",
    "feed",
    "forward",
    "network",
    "number",
    "three",
    "illustrate",
    "let",
    "consider",
    "single",
    "node",
    "neural",
    "network",
    "might",
    "look",
    "like",
    "decide",
    "go",
    "surfing",
    "decision",
    "go",
    "predicted",
    "outcome",
    "known",
    "yhat",
    "let",
    "assume",
    "three",
    "factors",
    "influencing",
    "decision",
    "wave",
    "good",
    "1",
    "yes",
    "0",
    "waves",
    "pumping",
    "x1",
    "equals",
    "1",
    "1",
    "yes",
    "lineup",
    "empty",
    "well",
    "unfortunately",
    "gets",
    "let",
    "consider",
    "x3",
    "yes",
    "shark",
    "attacks",
    "reported",
    "decision",
    "assign",
    "weight",
    "based",
    "importance",
    "scale",
    "0",
    "let",
    "say",
    "waves",
    "going",
    "score",
    "one",
    "eh",
    "important",
    "let",
    "give",
    "crowds",
    "w2",
    "eh",
    "important",
    "give",
    "sharks",
    "well",
    "give",
    "score",
    "plug",
    "values",
    "formula",
    "get",
    "desired",
    "output",
    "yhat",
    "equals",
    "1",
    "5",
    "0",
    "2",
    "1",
    "4",
    "minus",
    "3",
    "threshold",
    "gives",
    "us",
    "value",
    "six",
    "greater",
    "0",
    "output",
    "node",
    "1",
    "going",
    "surfing",
    "adjust",
    "weights",
    "threshold",
    "achieve",
    "different",
    "outcomes",
    "number",
    "four",
    "well",
    "yes",
    "number",
    "four",
    "neural",
    "networks",
    "rely",
    "training",
    "data",
    "learn",
    "improve",
    "accuracy",
    "time",
    "leverage",
    "supervised",
    "learning",
    "labeled",
    "datasets",
    "train",
    "algorithm",
    "train",
    "model",
    "want",
    "evaluate",
    "accuracy",
    "using",
    "something",
    "called",
    "cost",
    "function",
    "ultimately",
    "goal",
    "minimize",
    "cost",
    "function",
    "ensure",
    "correctness",
    "fit",
    "given",
    "observation",
    "happens",
    "model",
    "adjusts",
    "weights",
    "biases",
    "fit",
    "training",
    "data",
    "set",
    "known",
    "gradient",
    "descent",
    "allowing",
    "model",
    "determine",
    "direction",
    "take",
    "reduce",
    "errors",
    "specifically",
    "minimize",
    "cost",
    "function",
    "finally",
    "number",
    "five",
    "multiple",
    "types",
    "neural",
    "networks",
    "beyond",
    "feed",
    "forward",
    "neural",
    "network",
    "described",
    "example",
    "convolutional",
    "neural",
    "networks",
    "known",
    "cnns",
    "unique",
    "architecture",
    "well",
    "suited",
    "identifying",
    "patterns",
    "like",
    "image",
    "recognition",
    "recurrent",
    "neural",
    "networks",
    "rnns",
    "identified",
    "feedback",
    "loops",
    "rnns",
    "primarily",
    "leveraged",
    "using",
    "time",
    "series",
    "data",
    "make",
    "predictions",
    "future",
    "events",
    "like",
    "sales",
    "forecasting",
    "five",
    "things",
    "five",
    "minutes",
    "learn",
    "neural",
    "networks",
    "check",
    "videos",
    "thanks",
    "watching",
    "questions",
    "please",
    "drop",
    "us",
    "line",
    "want",
    "see",
    "videos",
    "like",
    "future",
    "please",
    "like",
    "subscribe"
  ],
  "keywords": [
    "five",
    "things",
    "neural",
    "networks",
    "minutes",
    "number",
    "one",
    "composed",
    "node",
    "input",
    "layer",
    "output",
    "allowing",
    "patterns",
    "learning",
    "artificial",
    "network",
    "linear",
    "regression",
    "model",
    "future",
    "events",
    "weights",
    "data",
    "threshold",
    "known",
    "feed",
    "forward",
    "three",
    "let",
    "consider",
    "like",
    "go",
    "surfing",
    "decision",
    "yhat",
    "1",
    "yes",
    "0",
    "waves",
    "equals",
    "well",
    "going",
    "score",
    "eh",
    "important",
    "give",
    "us",
    "four",
    "training",
    "learn",
    "accuracy",
    "time",
    "train",
    "want",
    "using",
    "cost",
    "function",
    "minimize",
    "fit",
    "rnns",
    "videos",
    "please"
  ]
}