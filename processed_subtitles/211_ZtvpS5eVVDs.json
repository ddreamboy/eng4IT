{
  "text": "hello this is Matthew from simply learn\nand today we're gonna go through a\ncomplete end-to-end journey on what it\ntakes to set up a dev ops team we're\ngonna go through what we need to be able\nto do to go to dev ops what the\narguments are on why you need to do dev\nops and they will actually go through\nwith all the individual tools you need\nto be able to successfully implement dev\nops within your organization in addition\nto that we're also going to take time\nand go through each of those tools so\nyou get a good understanding of a\nstep-by-step instructions on how to do\nbasic setup of each of those tools so\nlet's get started so what was dev ops\nbefore so what was the process that we\ntook were doing delivery before dev ops\nwell it was a model called waterfall and\nwaterfall was a very traditional\napproach to actually building out\nsolutions and the reason why it's called\nwaterfall is that you bring out all the\nindividual requirements and individual\nsections of a project and they cascade\noff each other\nso if we look at the breakdown we have\nrequirements design we have\nimplementation we have verification we\nhave maintenance you'll have user\nacceptance testing and this is all based\non the software development lifecycle\nmodel SDLC and it's been around for\nquite some time and it's still used by a\nlot of companies today the challenge\nyou've had with the waterfall model is\nthat it really is a very long drawn out\nmodel for actually building and\ndelivering solutions so it took a very\nlong time to actually write code and\nthen deploy the code it was very\ndifficult to actually identify problems\nwithin the code and provide feedback to\nthe development team on what to fix and\nthis really was a very time-consuming\nwe're talking about months sometimes\nyears for projects to be actually go\nthrough a waterfall model process so\nalong came a new method of being able to\ndo delivery and it's called agile and\nthe agile approach is a way of being\nable to take the actual work that's done\nin a waterfall model and compress it\ndown into small iterations and what we\nwould do is a fundamental changes that\nyou would actually take a team\nthat were disparate and as part of the\nindividual cascades within a waterful\nproject and as you bring them together\nso you have your requirements team and\nperson design developer and release\nmanagement team all together in one\ngroup working on an iteration the great\nthing about agile is that you took a\nprocess that was weeks um or months or\neven years in length as it was with\nwaterfall and you reduce it down to two\nor four week Sprint's by depending on\nthe cadence for your team typically you\nhave a two week spring and then the goal\nis is that at the end of each sprint or\nsometimes every other sprint you would\ndo a software release and so that\ncustomers were getting the software much\nfaster the problem that we still ran\ninto though with agile is fundamentally\nsimilar to what we were having with\nwaterfall you have your DevOps person\nworking on code on their system and\nyou'd be working great on their computer\nand then you have the operations person\nwho's migrating the code from the\ndevelopers environment the test\nenvironment - for the production\nenvironment and you would run into\nissues where the code simply wasn't\nworking there's a lot of reasons why\nthat would happen the actual developer\nenvironment would often be very\ndifferent or would have different\ndependencies in it so the the hardware\nthat the software there may be\nadditional applications that were\ninstalled on the operating system that\nsimply hadn't been transferred over to\nthe operations environment and so what\nyou would have is a disconnect between\nthe developer environment and the\noperations environment making it\ndifficult and try to roll out codes\nyou'd run into a program where that when\nyou rolled out code you'd have to have a\nrollback plan in case the code wouldn't\nwork in production and so each release\nbecame a vent wherever I got very\nstressed about the actual event of\nreleasing code because you didn't know\nwhether it was going to work so dev amps\nreally looks to address and solve a lot\nof these problems so the key word that\nyou'll often hear with DevOps is\ncontinuous integration and what that\nmeans is essentially that as it dove\nis working on their coat the coat is\nconstantly being tested against not just\nthe actual code itself with unit testing\nbut the environment with which it's\ngoing to be released in and the goal\nfrom a DevOps model is that the\nbreakdown of communication that happens\nwith waterfall and agile with dev\ndevelopers and operations teams aren't\nworking in the same brand is being\nremoved and you're able to provide a\ncontinuous and contiguous environment\nbetween the developer and the apple\nactual operating model so the reality is\nwhen the developer is working on their\ncode they're actually working in an\nenvironment that is identical to the\nproduction environment and so when the\nactual operations person comes try to do\nreleases for the code and you can see\nsome teams are doing as many as 22 even\nup to 50 releases to production\nenvironments every single day you're\nable to guarantee that the actual code\nitself will work and releases go from\nbeing a stressful event to a byproduct\nof good testing and good setup and\nstructure for how you actually build out\nyour solutions so what we're seeing here\nso the goal is that as a developer and\nas an Operations person that the code is\nworking continuously in both\nenvironments you have continuous\nintegration and continuous delivery so\nsimply put what we're able to do is\nwe're able to eliminate the problem of\nthe operation environment not being in\nsync with the development environment\nand this is a improvement on edge on\nthis is not to say that waterfall or\nagile are wrong as delivery models what\nit is is just a maturity of the ability\nto deliver solutions and DevOps is just\nanother rung in that maturity curve\nusing tools that are available to us now\nthat 5 10 years ago simply weren't\navailable so the goal is for you as a\nteam to move to a dev ops model where\nyou can implement continuous releases on\nyour software as long as you're using\nthe tools that are available and the\ngood news is those tools are open source\ntools so let's go through\nsome of the benefits of why you'd want\nto go and use DevOps so you know\nessentially what's in it for you so\nlet's over the next few slides we're\ngonna go through what is DevOps we're\ngonna go through the benefits of DevOps\nso in the last few slides you've\nactually seen you know what is DevOps\nand the benefits of DevOps along with\nthe lifecycle but we're also going to\nstart digging into the tools that you\nhave that are useful for DevOps\nand we're going to focus in on seven\ntools that can provide an end-to-end\ninfrastructure for delivering DevOps\nsolutions with there are significantly\nmore tools available on the market but\nthese are seven of the most popular for\neach of their categories so DevOps\nreally is an essential collaboration\nbetween the development team and the\noperations team these are teams that\nhave in past been somewhat at conflict\nwith each other and what you have now is\nan opportunity where those teams can can\nnow work continuously with each other\nthe expectation with DevOps is that it\nwill continue to mature indeed you're\nactually even seeing some groups which\nare now called dev sac ops where they're\nintegrating security as part of the\ndelivery between the development team\nand the operations team the bottom line\nis a DevOps engineer is highly in demand\nthe demand for DevOps engineer is\nliterally going through the roof with\nsalaries going ups exponentially around\nthat so let's dig into some of the\nbenefits of DevOps it's not just a new\ncatchphrase it's actually got\nsignificant value and how you can speed\nup delivery of your software so the\nbenefits of DevOps can really broken up\ninto a number of key areas first of all\nwe have continuous delivery of software\nwhich allows you to continuously release\nnew features with the security and\nunderstanding that the software going\nout is of high quality it allows the\nteams that are working on the software\ndelivery within your organization to\nmore effectively collaborate with each\nother so that you're all talking from\nthe same page and understanding of what\nneeds to be delivered the deployment\nprocess itself moves from being an event\nwhere there's a lot of stress and\nthere's a lot of contingency plans to\nbeing a much easier deployment the\nefficiency within the actual code that\nyou're writing the ability to scale up\nusing the different tools are available\nallows you to be able to bring in and\nscale up and reduce the teams you have\nrunning the software as needed errors\ncan be fixed much earlier and more\nquickly and can be caught before\nanything gets pushed out to the\nproduction environment and fundamentally\nwhat we're looking for is improving the\nsecurity of the actual releases so the\nactual concept of security is Center to\nall the work you're doing and then\nfinally what really allows you to reduce\nthe number of errors is that there is\nmuch less manual intervention there is a\ngreater reliance on scripted\nenvironments that you can actually test\nand validate for their security\nreliability and uptime efficiency so\nlet's talk a little bit about the life\ncycle of a DevOps so the very first step\nthat you're take is to actually build\nout a build and test environment and\nthis is a continuous building testing\nbrand and this is merge away the first\nstep of your source code once you move\nthrough that and you're looking at\ncontinuous integration which means that\nevery time somebody checks in their code\nthey're validating that the code\nactually can run in the production\nenvironment once you've actually been\npassed the end continuous integration\nand the testing that you have with your\ncode you're looking at continuous\ndeployment if the code works and is\navailable to be released into the\nproduction environment let's go ahead\nand release it and once you actually\nhave release code then you want to be\nable to validate that your environment\nis working efficiently you may release\ncode that is a new feature within your\napplication and customers may then graft\nit immediately to that new feature if\nthey do you want to be able to ensure\nthat the code is working and more\nimportantly but the infrastructure is\nthere to support and then finally you're\nlooking at software released as a\ncontinuous event and then you go back to\nthe beginning you start working on more\ncode you run it through your build\nenvironment and continuous integration\ndeployment continuous monitoring and\nkeep that cycle\nmoving so let's dig into the tools that\nyou as a DevOps engineer would need to\nlearn if we break down the environment\nthat we have all the way from source\ncode management to software release and\nthere are a number of key tools that you\nwant to be able to use so for instance\nsource code management can get is an\nopen source tool that you would want to\nused from managing your code the\ncontinuous build and test environment\nwill be managed with mavin and selenium\nintegration with the environments that\nyou're working on is managed through\njenkins the actual deployment to your\nproduction environment will be managed\nwith products such as ansible and docker\nand then the monitoring of your network\nwould be used with tools like Nettie O's\nthe thing that you have to remember with\nall these tools is that they're\nopen-source tools there is no licensing\nthat you have to you a purchase some of\nthe tools will have a pro level\nlicensing that you can choose to select\nbut to get started\nall of these are open source tools you\ncan actually start using for free right\nnow so let's dig in to get so let's look\nat the the challenge that git is able to\naddress so before git and you if you had\na team of developers that were working\non different pieces of code one the key\nproblems you have is that there was no\ncollaboration between the team and the\nthe challenge you have is that with\nversion control it was difficult and\noften required I'm having to check in\ntwo large environments or you had very\nyou know quasi version control\nenvironments it was time consuming\noften there were problems that were\nwould happen if this the version control\nserver would crash and there wasn't a\nbackup then you'd have to kind of\nessentially go back to square zero to\nsee whether or not you actually had to\ndo the work again so let's look at what\ngit does to actually solve this so first\nof all one of the things that it does is\nit makes team collaboration much easier\nthe software itself is more effectively\ndocumented and more and more effectively\nmaintained the actual code that actually\ngets worked on by each developer in a\ngate environment is the complete code so\nit makes it much easier for backups and\nfor sharing content amongst each and\nso the way in which get is able to\naccomplish this is that it is\nessentially a distributed version\ncontrol solution and what that means is\nthat when you have multiple developers\nyes you do have a git remote hub that\nyou connect and are able to upload and\ndownload different branches of the code\nthat you're working on but essentially\nas a developer when you actually have\nthe code you actually have all of the\ncode and you're able to imagine firm\nyour local PC or your local development\nmachine and without having to worry too\nmuch about the network or the server\ngoing down so some of the key things in\nwhich get is really good at it is you\nknow a software management tool is\ndesigned from the ground up to merge\ncode development it does track the\nchanges on that code easily and\neffectively makes it easy for use\ndeveloper to track your code the ability\nfor multiple developers to work together\nis much easier in comparison to other\nsolutions and and this is really the the\nkey success point with a kit is that it\nallows for nonlinear code development so\nyou can actually have people working on\ndifferent areas of the code that may be\nreleased at different times because of\nwhat they're working on so if we\nactually break down the architecture of\nget it really calls into four key areas\nof a working directory a local staging\narea a local repository and a remote\nrepository so the process you'll go\nthrough is you would add files to the\nstaging area from your working directory\nthis would be usually they get add\ncommand and then from your staging area\nwhen you're ready to actually then\ncommit those files to a local repository\nyou use the git commit command and then\nfrom there you would actually then push\nyour local repository out to the remote\nrepository for a final commit to the\nremote repository and this allows them\nthe rest of the team to pull down your\nlatest final changes so you can be\nworking on your code locally and you can\nbe using your local eat local staging\narea and local repository and when\nyou're ready to commit your work\ncommitted and Anna Souza's committed the\nrest of the teams and then pulled out\nthe latest changes that you have worked\non and this allows for a complete and\nholistic check out round check-in\nprocess and then sometimes you want to\nbe able to go through and then take the\nchecked out code that you cram that\nyou're pulling out and merge it with\nyour local code and the merge process\nalways ensure that you are working on\nthe latest and best version of the code\nand everybody on the team is being\nconsistent with the communication of the\nactual code that's being delivered okay\nso what we're gonna do is we're going to\nvalidate that we have get running on a\ncomputer we're gonna vent create a\ndirectory and a file to that directory\nmake some changes to that file and then\nuse the commit commands to be able to\ncheck in the files and validate to\nensure being made so first thing we do\nis we're gonna see if we have git\ninstalled and still have do you just use\nthe command git version and what you'll\nget - - version I'm not even give you\nthe version number and now we're gonna\ncreate a new folder so m'kay dirt green\nand they'll create a new folder and\nwe'll move our cursor into the green\nfolder by changing the directory and we\ncan go back into Windows and we can\nvalidate that that directory is actually\nthere so here we go\nlook we should see if there's the green\nfolder if I double click into that\nyou'll see there's nothing in the folder\nright now so what we have to do is we\nactually have to add the folder as part\nof a git project and so we're going to\nuse our get in the in it and\nthey'll actually initialize the folder\nand make it a git repository and so\nlet's go ahead and create a file though\nactually go inside of that new\ninitialized folder and you'll see that\nthere's a dot git folder that's been\nadded so the new text file we're gonna\ncreate it's gonna be code class and\nthey'll let you be class dot txt the\nextension is hidden by default in the\ntext file we're just gonna type in the\ntext welcome to simply learn and save\nthat now let's go ahead and check the\nstatus on all of that file in gate so to\ndo git status and you'll see that it\nsays yes there's a file there but it\nhasn't been committed to the repository\nthat's why it's in red\nso we have to do is commit the file to\nthe repository and it won't be able to\ntrack any changes that we do to that\nfile so let's go ahead and commit the\nfile so we do commit and class txt and\nthey'll add back to the repository and\nthere we are it's added and the final\nstep is we want to do is commit it and\nto get so it's to get commit - and like\nand this will be our first commit and\nthis is the description and so it she\nshows us committing the file it's the\nonly item in the folder so now we can go\nover to the file that we just created\nand we can make some changes to it so\nopen up the file so it says welcome to\nsimply learn let's put in some text\nafterwards that says this is my demo and\nwe'll save that close that and now if we\ngo back to get we can do a compare and\ncontrast between the original file that\nwe committed and the new updates that\nwe've just done and we can check the\ndifference by using git diff and what\nyou'll see is the red text was the\noriginal text and the green text is now\nthe new text that's been added and so\nthat shows you how you can she go and\ncreate a new git repository go through\nadding files committing the files into\nthe repository and being able to see the\ndifferent version controls let's move on\nto mavin so when I use mavin so so why\nuse married well this look at some of\nthe things that you were done in the\npast have you actually building out the\ntasks so let's break down what you would\nhave done before using mavin if you were\nto create a game or football using Java\nyou would actually have to go out and\nfor your actual game you'd have to\ncollect all the different components\nneeded within the Java environment and\nto make sure that everything would work\ncorrectly and if you make the slightest\nmistake you wouldn't get the right\noutput that you needed the actual\nprocess of building and deploying a\nproject really would take quite a lot of\ntime after mavin mavin allows you to be\nable to take templates that are stored\nlocally and be able to use those to be\nable to improve the efficiency of being\nable to build out your environment by\nremoving dependencies within the\napplication it makes it a lot easier\nif you'd be able to focus on just\nwriting the code for your game or your\nsolution rather than having to manage\nthe environment within which that\nsolution would be deployed now the focus\nwithin mavin is that it is an automation\ntool and it's used for projects to have\na short period of time so as you're\nstarting on your environment for\nbuilding out solutions mavin is great to\nget started with and then if you need to\nhave longer-term projects then you can\nlook at other alternative tools on the\nmarket so four key areas that you want\nto focus on why mavin can help you is\nthat it does allow for efficient some\nparallel builds to be run concurrently\nit's really easy to use you can get up\nand started with math very quickly you\ndo have fast access to new features and\nnew configurations quickly within your\nenvironment and the build process that\nwill allow you to be able to visualize\nyour code happens very quickly the\nactual architecture of mavin is that the\nexecution and commands are managed\nthrough what's known as a pom file the\npom file itself is a project object\nmodel and it's an XML file that actually\nhas the details for the project and the\nconfiguration for the build environment\non file itself will then fetch\ndependencies from the local repository\nand will apply any plugins that you may\nhave also included within your mapping\nenvironment the goal is that your\nsoftware is build much more controlled\nat Manor so what we can do now is we're\ngoing to show you how to go through and\nrun your very first project using maven\nthe first steps you can have to do is\nmake sure that you have the latest JDK\ninstalled on your computer so we're\ngonna go ahead and open up our web\nbrowser and get this installed on your\ncomputer so we're going to type in JDK\ndownload into our Chrome web browser and\ngo to the oracle website which allows us\nto learn download the JDK because we're\nrunning this on Windows we're going to\ndownload the Windows version of the JDK\nand once you have that installed\nthe next step is to actually then go\nahead and download the Maven files so\nit's going to take us to the Maven\napache\norg website where you can go ahead and\ndownload the version of maven that you\nneed for your operating system we're\ngoing to go ahead and download the zip\nfile instead of just an executable file\nnow this will give you more control over\nhow you install it onto your Windows PC\nafter the file has been downloaded we\nwant to go ahead and extract the entire\nfile so you have the unzipped folder\nrunning on your computer\nso one of the things that we're gonna\nhave to do is go through and set a\nnumber of system variables for the JDK\ninfinite path to your mavim files and to\ndo that you want to go into your control\npanel and select the system security and\nthen system settings and then go into\nadvanced system settings this will give\nyou access to the Edit system variable\nsetting that you're looking for\nso we're gonna go down to the path\nvariable and you'll see already that we\nhave pasted in the link to the JDK right\nthere underneath the variable value if\nyou've been stole the JDK it's likely\nthat's already installed this path for\nyou correctly\nthe good news it's actually fairly easy\nto install the path to man and to the\nJDK because all you have to do is copy\nthe path for where the folder is located\non your system and just paste it into\nthe variable value under the Edit\nSystems variable fault and file system\nand that should now get us all the files\nand you can see that we have our\nextracted folder already on our desktop\nthere and the system path is now set to\nwhere the moment folder is located so we\nalso have to go into system protection\nand\n[Music]\nset the system off - ummm folder now we\nhave to go ahead and do a user variable\nthat also part links to the path of\nmavin files\nso what we're doing right now is we're\njust validating that all the files have\nbeen extracted correctly they have which\nis good we can now go ahead and link to\nthese moment folder all right so now\nwhat we do is we're going to move over\nto command prompt this is where we're\ngoing to do most of our work from here\non out first come on we're going to do\nis MV so we go ahead and create a new\nuser variable and we're going to type in\nwe're gonna cause one enter - and then\nwe'll put in the path to the apache\nmoment folder you should be able to use\nm2 - home for your price but if it's not\nyou can always use the verbal name map\nand - home and that will do exactly the\nsame as empty I'm going to both here\njust so we have a backup\nso we're gonna open up command prompt\nand we're going to see if Maybin is in\nstore we do that by writing MVN - -\nversion and here we are yes so now we're\ngoing to go ahead and create our first\nmaven project and the first part of\ncreating maven project is actually the\ndirectory in which we will store the\nfiles that will be used to create for\nour project so we're just going to go\nahead into the folder and we're gonna\ncreate new directory and we're going to\ncall this one and we're gonna call it\nsimply learn and we can just copy the\npath for them so I'm gonna write this\nthe correct path for it so I'm gonna\nchange directory CD and you copy the\nfile location over alright we are now\nmoved ourselves over to the simply\nlearned folder and we'll be able to\ninstall the pom file which is what all\nthe instructions for mavin are stored in\ninto this area so to do that we're\nactually going to use a template that's\nalready been created by mavin and this\nis going to be the MVN archetype\ntemplate and so you just - mbm :\ngenerate and this will go ahead and\ncreate all the files for us\nso this can be quite a few files and\nthey're all being downloaded from the\nevent website and so it can take some\ntime but as you see we've gone ahead and\nall the files have downloaded and we\nhave everything up and running correctly\ninside of our environment on online and\ncome on prompt so we'll have some values\nthat we do have to say it\nthe first one is group ID and we're\ngoing to call this one comm math and\nthen the next one is going to be\nartifact ID and this is going to be MAV\nma v - project hit return and then\nversion is going to be 1.0 - snapshot\nwhich is put in the same value for this\nversion 1.0 - snapshot and the package\nwe're going to take call this one comb\nmath dot demo and then we'll select yes\nso wife to create the environment and it\nwill build the environment for us and\nwhat we have now so we have this screen\nwhich shows everything is up and running\nfor us and we have a successful build\nand so let's go into the main folder and\njust see that we have our simply lim\nfolder let's open up and see what's in\nthere so we double click into that\ndirectory yep and there we are sty and\nsee some of our files so it's the same\nproject names as ma v - project and then\nwe have our pom file that's in there\nwhich is fantastic under the source\nfolder we'll actually see the demo and\nwe have our app under the demo app\nwe have our test file as well so in the\nmain folder we have a file that's called\nthe pom file and that really is the most\nimportant file that you need for your\nproject you'll now go and you'd be able\nto set all your settings inside of that\npom file but that's it that's what we\nhave done here is we've gone through and\nwe've gone through all the setup that\nallows you to make sure you have the\nright files running on your computer the\nright files to download from the Maven\nwebsite how to install all the files the\nsettings you need to make on your\nWindows computer and then all the\nsettings that need to be done in the\ncommand line to be able to run the\napplication and then from here you can\nactually start running maven now let's\nlook at selenium as we get started\nlooking at testing so before selenium if\nyou want to run testing and particularly\nyou want to do sequential testing it\nwould take up a lot of time you'd have\nto run one test then the second test and\nthen all the other tests and the actual\ntime elapsed would be quite significant\nwith Selim you're actually able to do\nparallel testing so instead of looking\nat the amount of time you take to\nachieve run a test and run the tests\nsequentially the length of time to\nactually run your tests is based on the\nlength of the longest running test of\nwhich in this example the longest\nrunning test is two minutes now one of\nthe things that you'll notice with\nselenium is that its focus is on web\napplications and it is an open source\ntool and it's really good at regression\nand functional testing of web\napplications if you're doing a mobile\napplication or if you're doing an IOT\napplication there are other tools you\ncan use on the market as well but if you\nare new to DevOps and you're setting up\nyour first DevOps environment selenium\nis a great place to start and web\napplications are mature and allow you to\nbe able to test out and validate the\nconcept of continuous testing in your\nenvironment so four key takeaways for\nselenium it really is fast and it's fast\nexecution it's highly accurate so you\ncan always validate that what you're\ndoing will work correctly and feedback\ncan be sent straight back to the\nbut if their code doesn't pass the test\nallows you to script in the multiple\nlanguages again it's a great way for you\nto test and the focus is on web\napplications but you can test in\nmultiple languages useful web\napplications and most importantly allows\nfor parallel test execution which speeds\nup the whole test process significantly\nI want you to break down the\narchitecture of selenium and what you'll\nfind is the actual libraries that you\ncan use for selenium run in c-sharp Java\nPython JavaScript PHP these are the\ncommon languages used to build out web\napplications the actual webdriver itself\nis an API driver which is fantastic\nbecause it makes it easier for you to\nintegrate selenium with applications\nthrough API and you can run the solution\nthrough different web browsers the most\npopular being firefox chrome and edge so\nto focus the selenium webdriver codes\nare being used to build out the client\nlibraries that make it LOM to allow you\nto be able to build solutions across\nmultiple web application environments\nthe webdriver application interface is\nyou to integrate with the application to\nmake it easy for testing the webdriver\nservice provides an immutable stateless\nenvironment that makes it very easy for\nyou to be able to use protocol such as\nJSON to wire up your test environment\nthe driver manages the communication\nbetween the browsers and the wire\nprotocol that's used for JSON within the\nweb browser itself and then the actual\ncommands are then run through the web\nbrowser for you to be able to get your\nresults okay so before we had to get\ninto the setup of so any of the first\nthings we want to do is we want to make\nsure that we have the right version of\nJava installed and so I'm just using\ncommand window here I'm going to type in\nJava and she what it see now is I do\nhave Java installed which is fantastic\nOh as you'd have to go and download Java\nfrom Oracle's website the next step is\nto validate by have Eclipse installed\nand I'm just typing Eclipse and there we\nare I have the clips installed you can\nactually download eclipse from the\neclipse website the third step I want to\ncheck is to validate that I\na browser driver installed so I'm using\nGoogle's Chrome and for my main browser\nbut you can actually go out and download\nthe chromium driver and that's the\nactual core engine that powers Chrome\ninteresting enough being used in the new\nMicrosoft edge web browser so you get to\ngo and download the latest chromium\ndriver and install that and then the\nfinal stage is to go to the selenium web\nsite and download the jar files\nthemselves so just do a google search on\nselenium download and here we have the\nselenium hq2 org website when you take\nstraight to a download page and we want\nto download the latest version and we've\ngone ahead and done that already so we\nhave everything running and now the next\nstep is for us to install all of this\ngreat content okay so before we had to\nget into the setup of so any of the\nfirst things we want to do is we want to\nmake sure that we have the right version\nof driver install and so I'm just using\ncommand window here I'm going to type in\nJava and she what I see now is I do have\nJava installed which is fantastic oh as\nyou'd have to go and download Java from\nOracle's website the next step is to\nvalidate I have Eclipse installed and\nI'm just typing Eclipse and there we are\nI have the clips and so you can actually\ndownload eclipse from the Eclipse\nwebsite the third step I want to check\nis to validate that I have a browser\ndriver installed so I'm using Google's\nChrome for my main browser but you can\nactually go out and download the\nchromium driver and that's the actual\ncore engine that powers Chrome\ninteresting enough being used in the new\nMicrosoft edge web browser so you get to\ngo and download the latest chromium\ndriver and install that and then the\nfinal stage is to go to the selenium web\nsite and download the jar files\nthemselves so just do a google search on\nselenium download and here we have the\nselenium hq2 org website and you take\nstraight to the download page and we\nwant to download the latest version and\nwe've gone ahead and done that already\nso we have everything running and now\nthe next step is for us to install\nall of this great content so we're just\ngoing to go ahead and open up the\nEclipse environment and it takes a\nmoment to launch eclipse\nI'm going to go ahead and create a new\nproject and we're going to call our\nproject XYZ I think that should be fine\nand this is just a test after all and\nwe're gonna go ahead and create a new\nclass file by right-clicking and select\nnew class and we're gonna go in here and\ngive the class file a name of simply\nlearn and let's see the finish button\nbeing selected so maybe we need to\nselect some other options here oh you\nknow I think it could be the package\nname yeah let me go ahead and change the\npackage name and I'm going to change\nthat to qwe qwf yep and the finish\nbutton has now been highlighted I can\nselect that I can go select that let's\nlike finish and we now have a test page\nas up and running and but what we have\nto do is validate that selenium is\nactually part of the project so to do\nthat when you go to the source to the\nactual sauce XYZ file and right click on\nit and we want to validate that all the\nfiles are there correctly and so going\nto see that we have the libraries are\nthere yep there's selenium if it's not\nthere you can say add external files and\nfind the selenium jar file sect open and\nthey'll would load that in there and\nthen you hit apply in close and they\nwould apply it to your project and now\nwe can actually start writing the code\npart so we're gonna put this code in the\npublic static void section and the first\ncommand is going to be a system dot set\nproperty and we want to make sure that\nwe're configuring the webdriver for\nchromium correctly so we're gonna do\nwebdriver and chrome driver and then the\nargument is actually going to be the\nfull path full network path to the\nchromium driver that you have on your PC\nso let's see we have chrome here we want\nto copy that path and so I paste that in\nand then after we\npaste it in the path we have to make\nsure that we also put a link to the\nactual file that we want to execute\nwhich in this case is chrome driver\nExe\nand then we want to make sure that the\nweb driver is pointing to the new Chrome\ndriver\nand you'll notice that there's a couple\nof red colors on here which means that\nwe don't have all of the public classes\nimported correctly so you can write\nclear commitments like import the\nwebdriver and just select that real\nquick and that adds the import correctly\nat the top of the page and same for\nchrome driver and that's just a very\nquick way and when you're working\nEclipse to import additional files so\nbefore we actually start our test we\nwant to make sure that we've actually\ncleared out any potential browser\ncookies that would be within the\ncriminal driver so for that we're just\ngoing to go ahead and we're going to\nwrite a script that allows us to remove\nthe cookies\nso I want to drive a duck marriage and\nthen delete all cookies\nand the next line we're going to do is\nto actually have the webpage that we're\ngoing to connect to open up in\nfull-screen mode and for that to happen\nwe're going to go and actually use the\nwindow property which wishes what I was\nwriting before by mistake and so this\nwill allow us to go fullscreen and now\nwe need to pull in a web page so we're\ngonna get the get command and what we're\ngoing to do is we're actually just gonna\npull in a web page from Amazon I would\ntrade you something to have here so I'm\njust going to go to amazon web page and\nso I'm just gonna copy the URL and you\nknow just need to copy HTTP wwm\nseungyeon or calm wherever you're\nlocated and so you can see that I've\npulled in the Amazon Web page and then\nline 18 and she allows me to go and\nconnect so here we are we have the\nAmazon Web page so I'm pulling in and\nthen what I also want to do is I want to\nlook for a specific ID in one of the\nelements and so I have the driver which\nis called fide and element and that\nallows me to look for any element that\nbeyond the actual page so here we have\nthe HTML in the console screen and I can\nactually then paste out an ID from the\nelement that I want to use\nso the find element is just the ID for\neach element and most of them have them\nbecause they needed for the JavaScript\nand CSS so let's see there's quite a few\nIDs and we can select any of those so\nwhat we have here is we have two tab\nsearch text box and then what that\nactually does is that finds the ID for\nthe text box used for searching and then\nwe're gonna use the st. key command\nwhich allows us to actually pre fill in\nthe search box and we're going to use\nthe test of puma shoes this is a fixed\nstring but you can actually put a\nvariable in here if you want to pull\nstrings from a database or an XML file\nand then the next line on line 19 which\nshows how long actually gonna run the\nactual script for the search which is\nonly 10 seconds and then once the 10\nseconds has elapsed we'll actually quit\nthis script which actually causes the\nweb browser and takes us back into a\nscreen hint let's test that make sure\nit's working and everything's looking\ngood the web browser opens which is what\nwe expect it goes to Amazon fantastic\nright now and she goes to the search\nscreen and should fill in the Puma shoes\nthere we get puma shoes and wait 10\nseconds and it closes and that's exactly\nwhat we were expecting now you can\nactually change the unit of time that\nyou would have for the actual test so if\nyou wanted to see what was happening so\nlonger than 10 seconds you can actually\nchange the actual time or the actual\nmetric and so in this instance we got it\nsays seconds and see unit of time or you\ncould do minutes or hours or\nmicroseconds and you can change the\nkeyword as well so it could be jigsaws\nor anything you want to check but if\nyou're actually building your own\napplication you want to be able to test\nyour own data against your own\napplication that's where you put in that\nspecific data\nso let's look at the center the heart of\nyour DevOps environment and that Center\nis with Jenkins\nso before Jenkins people would\ndevelopers would work on their code and\nthe code would then be checked into a\nsource repository you would then check\nfor any issues and then you would then\nsend that code over to the operations\nteam and there would be a delay for\nactually delivering software so the item\nchallenges developers hand is that if\nthey wanted to run any tests they had to\nwait until their software was built and\nthere was a lot of problems in providing\nfeedback and particularly had large\nteams working on software who actually\nhad the error the actual delivery of\nsoftware was often delayed because of\nthese key problems\nso after Jenkins what we actually have\nis the ability to be able to streamline\nthis whole process the build test and\ndeploy happens continuously and are able\nto then notify developers and the actual\nspecific developer of any errors that\nare detected being able to speed up the\ndelivery process much more efficiently\nthe focus of Jenkins is that it\nautomates a continuous development\ntesting and deployment environment and\nit's open source\nJenkins is easy to install and configure\nit's been around for many years now and\nit is very mature\nthere are many plugins that you can use\nwithin Jenkins to be able to have the\nJenkins product work with your\nenvironment if there isn't a plug-in you\ncan actually extend by you can actually\nwrite your own plugins if a plug-in\ndoesn't exist so you can actually\ncontinue and extend and invest in the\nJenkins ecosystem and it can be easily\ndistributed across multiple machines so\nlet's break out the architecture of\nJenkins so checking such as a remote\nsource code repository and it then pulls\nout the code every time there is a\ncommit from and into the server master\nthe server that master will then have a\nslave that will run on either Windows\nLinux or Mac OS to be able to just we\njust load across those environments and\nafter it's actually gone\ntrue and run his tests ill then send out\na report the goal of a report is to\ncommunicate back to the team what has\npassed and what has failed the actual\ncheck-in process okay so we're gonna go\nahead and show you how to install\nJenkins on your local PC so the first\nthing you want to do is check that you\nhave Java installed so we're just gonna\ngo into our system and see whether or\nnot we have the Java JDK installed you\nended up by going into system properties\nsecondly advanced and environment\nsettings and there we have Java JDK\ninstalled and you want to just double\ncheck on the system variables to make\nsure that you have the Java and score\nhome installed correctly as well and we\nhave that consult and under path also\nmake sure you have a link to the Java\nJDK as well so we have everything\ninstalled and what we're going to do is\nwe're gonna open up the command window\nand just do a door check right there\nso about command window and we're just\ngoing to check that we have Gerrans sort\nso we do Java - version and we have a\nversion number comes back if we do have\nJava installed we'll and get a Java\nversion number come back with a a Venera\nall right so everything that's good so\nnext thing you want to do is to go to\nthe Jenkins website and download the\nfiles so we're gonna go to Jenkins dot\nIO and that's the official drinkin's\nwebsite and if you want to download you\njust go to Jenkins io / download or you\ncan just type into your search bar\ndownload Jenkins and they'll give you a\nlink straight to the download page and\none of things that you'll see is that\nthere's lots of different versions for\nJenkins because Jenkins runs on pretty\nmuch most operating systems including\nWindows Linux and Mac OS but we want to\nselect the Windows version so we've\nalready gone ahead and downloaded zip\nfile which contains all of the files\nthat we need for Jenkins and so that's\nthe zip file and we've expanded it and\nwhat we want to do now is double click\nthe installer file and we'll go ahead\nand install that\nso we've already installed this so one\nthings that we'll get is a message to\nASCII we want to repair you did she get\na install message because it would be a\nfresh install for you and but once\nyou've done that has all the files and\nall\ntwo things correctly installed onto your\nWindows computer and we do all my\ncommands for Jenkins through a web page\nthat's run locally on your PC and so\nyou're gonna type in localhost colon\n8080 and when you do that they'll\nactually take you to Jenkins running\nlocally on your PC and here we have our\nJenkins dashboard and we've already gone\nin and created some sample jobs and you\ncan see those listed on the throwing on\nthe right-hand side of the screen so\nlet's go through some of the things you\nwould want to set up here so first of\nall let's go into the manage Jenkins\nscreen and that will achieve so we'll go\nto the manage Jenkins tab on the left\nhand side to do some standard\nconfiguration settings so we're going to\nthe configuration systems and if you\nwant to if you're like remotely\nconnecting to a remote Jenkins\nenvironment you can actually install a\nJDK remotely but on that machine if you\nwant to now we already have the JDK\nenvironment already set up so yeah\nthat's good here it's going to do that\nbut you also see as you go through the\nlist of applications that you have\nGradle ant mavin docker\nget and other tools that you would use\nin DevOps environments there are many\nother tools you can install through\nplugins as well let's have a look at one\nmore setting here with the security the\ndefault security is Jenkins own user\ndatabase that probably is not allowed\nwithin your company due to security\nrestrictions and so you can choose LDAP\nwhich allows you to connect with your\nActive Directory configuration again\nbecause there are so many plugins for\nJenkins there are plugins for sam'l\nauthentication as well as auth\nso let's go ahead and start a new build\nnew build job and so it's like a new\nitem and we to select demo one from that\ncreate a new item and we're going to use\njust a freestyle project because I just\nwant to demo how you can actually create\na bill it's like okay description oh\ngosh what can we write here we can put\nin Snoopy demo and we're not gonna use\nsource code for this one we can do that\nin the next demo but let's go we want to\ngo down to is the\nuptime and we're going to build and we\ncan just two and four win excuse me this\nmagic wand and so let's just put in a\nvery simple command and so I'm going to\ntype in echo open quotes hello world and\nthen we'll put in the timestamp so put\nin date first and then time as part of\nour output those quotes and we're gonna\nsay that also save and that's our simple\nprojects so we want to do now is we want\nto actually go and select the build now\ncommand to actually run this project\nbuilt now take a couple of minutes for\nit to run and here we are this is our\nproject and go geez now see the\ndifferent builds that have happened and\nif you look on the build history you'll\nsee the latest history shows when the\nbuild was executed and if you click on\nthat you can actually start getting\ninformation such as the console output\nwhat she provide information that we\nwere asking for so for instance we have\nits first so we can see that the build\nwas successful and we see the output\nincludes the hello all and date and time\nso we're gonna go ahead and create one\nmore project where we can actually\nconnect to a github and use the git\ncommand tool to be able to build a real\nproject so we're gonna go ahead and\ncreate a new item and we're gonna call\nthis one\nJenkins it's freestyle project and our\ndescription is demo using git and so\nwe're actually going to connect to\ngithub and so to do that we're gonna go\nin to source code management tab and we\ncan stay get and so we select that we\ncan actually now connect to github so to\ndo that you go to your github account\nand you want to go in and select the\nclone or download and you get the URL\nlink from there so copy that\ngo back to Jenkins and add that in the\nrepository URL so you paste that in and\nthen for potentials we want to add in\nJenkins credentials and so just make\nsure you have those selected correctly\nand we've sect add and then we just pull\nthose from the drop-down and let's not\nchange any of the other settings and\nthen from the build we\nyou're going to be building a java\napplication so it's a slightly different\nset of build commands so we want to type\nin Java C book compile and then space\nand the file name is simply Java and you\nwant to put Java and space is simply on\na new line\nsave that it's again it's a really\nsimple application but it gives you the\nunderstanding of what you need to do\nhere and so we saved it and this now go\nahead and see if everything's working\nwe'll do the build now and see what\nhappens and here is our first build we\nselect that we can go to the concert\noutput for details and what we can\nactually see we scroll down is that the\nfinished add the fish output at the very\nend says success which means everything\nwas built correctly and so that's how\nyou're able to connect Jenkins with a\ngit repository and the thing that's\ngreat with working with Jenkins is that\nit connects to so many different systems\nand really does become the central point\nof your DevOps tool set so let's start\nlooking at the operation side of the dev\nops environment and let's focus in on\ndocker so before darker the problem you\nhad as a developer if you're working on\na virtual machine the actual virtual\nmachine was a your VM was a very complex\npiece of software so first of all VMs\nhave not been around for very long and\nwe're talking about less than ten years\nand the typical way of having a VM is\nthat it's very heavy for usage on your\ncomputer you essentially are running\neverything of the VM plus the the tools\nto run the PM on your computer with\ndocker what you're able to control is\nthe actual development environment\nyou're working in you don't have to be\nencumbered by all the additional\nextraneous processing that a vm\nenvironment has you're really stripped\ndown to just the bare minimum that you\nneed to have to run the environment\nusing a containerized solution known as\ncalm so doctor is essentially an OS\nlevel virtualization software it is a\nmaturity of the solutions that were\nstarted with virtual environment and\nthere are other solutions out there doc\nhas become de facto\ncontainers solution that you can use for\nbuilding out and guaranteed that what\nyou the developer is building is going\nto be the same as what the operations\nteam will use so doctor itself is highly\nscalable and efficient and you can have\nmany docker environments running on a\nsingle piece of hardware the boot up\ntime is incredibly short you can reuse\nthe data volumes very very easily it's\nnot complicated and the actual\napplications are completely isolated\nthis is like a perfect sandbox\nenvironment so let's take through the\narchitecture of Dhaka so there are\nreally two parts to documents the docket\nengine there's the docket client the\ndocket engine is comprised of the docker\nCLI which connects with the server\ndaemon the docker client will then issue\nthe commands to the docker daemon and\nthen the docket demon will then interact\nwith the system to be able to provide\nthe tasks and tools needed for you to be\nable to build out your solution the\nactual images that docker uses are\ninstructions for creating docker\ncontainers and the actual docker\ncontainer itself is a lightweight\npackage it contains all the dependencies\nneeded to run an application now once\nyou have created a container that is of\nvalue to your team you want to be able\nto store that container so that other\nteam members can use it and this is\nwhere you would use a docker registry to\nbe able to host and distribute multiple\ndocker images so in this video we're\ngoing to go ahead and see how we can get\ndocker installed and running so we're\ngonna go ahead and open up our terminal\nwindow and we want to date whether or\nnot docker is installed if you haven't\ninstalled this docker you can go ahead\nand use the following command and that\nis to enter in sudo apt install Danka\nand that will go ahead and run the\ncommand to install docker now I already\nhave dr. installed on my system so I'm\nnot going to do that right now so I'm\njust going to delete that out but what I\nam going to do is check to see what\ndocker images I have installed on my\nsystem and to do that I'm going to type\nin sudo docker images and when I run\nthis will actually show how many images\nI have\nright now I don't have any images at all\nso when we go ahead and install an image\nthere are two ways you can create an\nimage for your dog environment one is to\nget one from docker hub and the other is\nto create your own image and let's go\nahead and get one from docker hub and so\nthe command line that we want to write\nis suno docker pull Redis : and after\nthe colon we can actually write the name\nof the actual file that we're going to\nbe connecting to from Daka so I'm gonna\ngo ahead and go to docker hub and I've\nalready logged in with my user ID in\naccount so I'm gonna go to docker hub\ndocker calm is the website address and\nI've already logged in with my simple\nown account and what you can actually\nsee is different repositories that I\nhave already created below but we\nclicked the Explorer button and I can\nsee the the Redis image and these are\nall the different commands that I can\nactually use all the different\nvariations that I can create so I can i\nI can do 500 I can do a 32-bit version I\ncan do a 4.0 version or a 3.8 version or\nif I select latest that will allow me to\njust pull the latest version even if\nit's updated so I'm going to go back to\nmy command line and dude latest and\nwhat's gonna happen now is that we're\ngonna pull the files live over the\nInternet and create the docker image so\nit's gonna take just a few minutes of\ncourse if your internet speed is faster\nand this will happen a lot faster\noh yeah we have everything downloaded\nwhich is great and so let's just go and\ncheck and see if the image has been\nadded to darker so we do sudo docket\nimages and now you can actually see that\nwe have the lettuce Rattus Rattus image\nand it's given the default image ID and\nthere's the size of the docker image and\nthe tag is latest so it's the latest\nversion of Redis and I'm just checking\nto see if there's any other images\nrunning and no there isn't\nso let's go ahead and now create a\ncontainer and so the command for that is\nsudo docker run - d/p 0.00\nthink it's dot 80 colon 80 space Redis\ncolon latest and let's run that got an\nerror message okay now you know that\nit's a real demo this is really life so\nI'm just going to clear the screen and\nlet's write that in again and so sudo\ndocker run - D - P and in 0.0.0.0 colon\n8080 radius dog lead colitis and there\nwe are everything's up and running\nawesome so let's just go ahead and check\nthat we actually have the image running\nin docker so sudo docker PS and there\nyou can see that we actually have the\nlatest reddest version and it was\ncreated 16 seconds ago we have a new\ncontainer ID for it and there's our port\nthat we've created and let's see if we\ncan view all the running containers and\nsudo docker PS - hey there we are and we\ncreated that container 42 seconds ago\none of these young notice is the name\nfor the dock is created automatically by\nDaka\nand here we have stupefied Engelbart's\nis the name let's change their names to\nsomething that's more meaningful for the\nwork that we're doing so that's actually\nfairly easy to do and it's gonna be our\nfinal tasks here so we're going to type\nsudo darker and the command is renamed\nand we want to copy over the old name\nand then we put in the old name and they\ndo a space and then you put in what you\nwant the new name to be in which case\nwe're gonna make it simply learn we run\nthat command that's good now let's\nvalidate that's everything has been\nchanged so we do sudo\nyes - a and just PS and there we are\neverything has been renamed and that\ngets you started working with dr. now\nlet's move on to ansible so before\nansible the ability to be able to deploy\nsoftware across a network was pretty\nhard and you know you couldn't guarantee\nthat your web servers were all\nconsistent and that the database\nenvironments were consistent this was\nokay if you had a small environment but\nonce you actually start getting into\nmore complex environments it became very\ndifficult to manage ansible is code that\nallows you to be able to consistently\nand reliably create and stand up the\nenvironments that you need to be able to\nstore your code for production so\nwhether or not you require one server\nenvironment or you need a thousand\nserver environments using tools like\nansible will allow you to be able to\nconsistently deploy out environments\nthat all look the same\nso essentially ansible is a\nconfiguration management tool and it\nallows you to be able to deploy\nautomatically to a large variety of\nenvironments the actual tool itself is a\npush based configuration tool it is an\nagentless tool so there is no\ncommunication coming back about the\nhealth of the environment and we\nactually have tools that we'll cover\nlater on the video that cover that as\nwell does have a consistency of its\nproduct performance so you know that if\nyou're using ansible that it's going to\nwork it's just a very consistent product\nand it uses SSH for very secure\nconnections so it doesn't matter whether\nor not you have one or a thousand pieces\nof hardware you're looking to configure\nyou can actually be rest assured that\nthere will be no security infringement\nbecause of the use of SSH and we're\nlooking to the architecture of ansible\nit's a very simple architecture there is\nthe antral management node that has\nplaybooks which contains the\ninstructions that you would have for\nyour environment and that PlayBook is\nthen pushed out to all the different\nnodes that contain the hardware that you\nwish to configure the actual module\ncollection is the configuration code\nitself and the playbooks are the\ninstructions of that configuration and\nthen the inventory is the document\nthe different groups and hardware within\nthose groups that you can be pushing out\nto so we're going to go ahead and\ninstall ansible on to system here and\nwe're actually running our environment\nin a Linux environment right now and so\nwe have a must return an extended note\nbut we're just going to go into our\nterminal window and we're gonna do\neverything on the master node so the\nfirst steps we want to do is actually go\nahead and install ansible and we can do\nthat by installing sudo yum install\nansible - why and it's goes ahead and\ndownloads all the files that we need and\nstarts to run the installation\nand let's go ahead and see if it's\ninstalled correctly so we type in VI\n- etc - and so all slash hosts and there\nwe see we actually have a default\nansible hosts already up and running\nwhich is fantastic and we want to grab\nthis IP address which is ansible servers\nand then the IP address with the\npassword and root access and the IP will\nbe specific to your local clients so\nthis is my client system so by typing my\nconfig I'll actually see that the IP\naddress matches up and then you want to\nmake sure that your IP address is\ncorrect for your environment and so this\nis essentially a node in the ansible\nenvironment and this is the IP address\nand the password for that node so can\naccess affect them correctly so I'm\ngonna hit colon at the bottom of the\nscreen and I guess I was actually into\nansible and we're going to do now is\ncreate a playbook to be able to run a\nsample script so we're gonna call it VI\nsample dot yml and here we have a sample\nplaybook we have the name we have the\nhost we have the right user and we have\nthe task and in the task you have to see\nthat we're looking to create a virtual\nweb page with the content of welcome so\nthat we actually see that the web page\nis loading and all of this is written\nwith a very basic XML format called\nweimar which sounds for yet another\nmarkup language but it's very flexible\nand it's very easy to learn so let's see\nif we can go ahead and actually run this\nplaybook so you can actually see it in\naction\nand so we're going to type in ansible -\nplaybook and the sample dot yml and this\nwill run the sample white male script -\n- syntax - check every time a pencil\n- playbook sampled so I had some issues\nthere so I'm going to try that again and\nthere so go in and writes the command\nagain so ants will - playbook sampled\naway Mel - syntax - check and then run\nthe actual playbook itself and let's see\nif it works yes everything's working and\nit'll take a moment for everything to\ninitialize and now what we want to be\nable to do is go back to web browser and\nsee whether or not we were able to\ncreate that default web page with the\nword welcome in it because that was the\ncommand that we created in our playbook\nand there we are there's the word\nwelcome exactly as we planned and we can\ngo back and we can review the playbook\nthat we created just to validate that so\nlet's go back into screen here and let's\ngo in and look at the llamo page and\nthere we go we see that the word welcome\nis there exactly as we expected now step\ninto our final area which is network\nmonitoring using a tool called Nagios so\nbefore you had no years sometimes you\ndidn't know whether or not your network\nwas working in fact the worst case\nscenario was when your customers caught\nup is it hey your website's not working\nyou know the challenges you had is that\nyou didn't know how the usage of the\nserver was being managed you didn't know\nwhether you up to 80% usage utilization\non that server of you were at 50% it was\ndifficult to get that information easily\nwith Nagios you're able to set up email\nnotifications and other notifications\nthat allow you to stay ahead of issues\nthat you would have within your\nenvironment so with this example if\nyou're looking for memory utilization\nyou can receive a notification telling\nyou that your memory is almost full on a\nparticular server and that you should be\nsetting up a new server in this instance\nuse Hansel to set up another server so\nagain it's an as with the other tools\nthat we\ncovering Nagios is an open-source tool\nand it's specifically for monitoring\nsystems servers and networks within your\ninfrastructure very easy to use it has\ncomprehensive monitoring tools that you\ncould set control it is highly available\nand it is designed specifically a\nproblem remediation you want to set it\nup so there is the eyes and ears of your\nnetwork without you having to constantly\nmonitor your network so the way that\nNegus works is that it's just constantly\nchecking out your environment so the\nknow your server is constantly checking\nthe status of your systems and then is\nable to create visualization tools all\nof that data so you can actually then\nmake quick responses or you can even\nsend out alerts such as an email or push\nnotification alert in this video we're\ngoing to take you through the steps that\nyou need to follow if you want to set up\nNagios and the dashboard now gives\nprovides to be a help to help monitor\nyour network so the first thing you want\nto do is go to NASSCOM and you can\neither download the application or you\ncan actually do what we're gonna do here\nis actually just log into the actual\napplication running on the nine years\nwebsite so for that you want to go to\nnow use na demos doc Magoo's comm and\nyou can use the administration or normal\nuser access IDs that Nagios provides and\nwe've gone ahead and we've actually pre\nfilled in our ID with no years admin and\nnow you must admin for the username and\npassword of course so that brings us\ninto the Nagios dashboard and what\nyou're gonna notice that there are three\ndistinct areas that you should want to\nfocus on you have the fixed sources\nwhich is all your actual fiscal hardware\nthat you're monitoring you have alert\nsummary and abnormal behavior so let's\ngo check out the fixed sources so we\nhave to default fixed sources here and\nwhy don't you can go one in Tulsa and\nand you can go ahead and set up\nadditional sources but what you'll see\nis that this surprise a quick dashboard\nof the activity in the last 30 minutes\nthe amount of usage on the disk you can\ngo ahead and do the behavior tab and you\ncan modify how you're monitoring and\nupdating the actual sauce\nso and then the data from these reports\nwill be from these sources well actually\nthen user reports queries and alerts\nthat you'll use so we'll go back to the\nboard and here is though to fix sources\nso this look at lo summary when you\nexpand it out and the other summary\nprovides just a overview of the alerts\nthat are being managed the others that\nyou see here are the default alerts that\nhave been created as part of the test\nenvironment it's very easy to create\nalerts and in this instance you can see\nthat the Chicago sauce is being used to\nmerge the alert what you can do is when\nyou're actually setting up your own\nsources you'll see that the alert will\nthen point specifically to the source\nthat it's pulling the data from so in\nthe PowerPoint in the presentation that\nwe just went through you actually see\nhow Nagios and aji is the center of\ncollecting all the information but it's\nactually pulling information from the\ndifferent networks and environments you\nhave and then it stores that data\nlocally to be able to create the\nvisualizations and the alerts and we\nhave here just a quick overview of an\nalert here inside of the summary which\nactually shows green which shows that\nthe alert is actually good now there are\nthree different types of colors there's\ngreen yellow and gray but you can see we\nhave no critical alerts right now and\nyou'll see the same thing happening and\nabnormal behavior as well where actually\ngoes ahead and shows you the different\ncolors that are available the thing\nthat's great is but as soon as a warning\nstatus is created then allows you to\ntrigger an email notification that gets\nsent out to you and has information in\nthe email which you can then action so\nthe alerts are very important in the\nalert again are pulling information from\nthe fixed sources so they have no\nbehavior is just gonna zero in and show\nany specific I've known behavior that\nwould be happening with your fixed\nsources and so in this instance it's\naround bandwidth and everything is green\nso everything's looking good so we're\ngoing to the source tab but we're gonna\nlook at the bandwidth graph and this is\na more detailed visualization of the\nbandwidth that have playing through the\nChicago fixed source again you can\ncreate your own fix sources and you'll\nbe able to see the actual usage such as\nthe bandwidth graph for that fixed\nsource on this screen and the\nthe screen we have just kind of the the\nmost popular information that most\nnetwork engineers are looking to assess\non how a network is being used so you\nhit a Mickey suck reports and we can\nactually come in and we can either\ncreate our own custom report or you can\nuse one of the many saved reports are\nalready there if your new scenarios\nuse the save reports because you'll be\nable to get in and get the great\nvisualization tools that Nagios provides\nvery quickly and be able to then action\nthe information visually from what\nyou're looking at these reports are\nabsolutely fantastic and it was a really\ngood to send to other team members that\nwould have an interest in understanding\nthe network usage and the different\nareas that you're imagining now if you\nwant to get really specific on the type\nof data that you want in the report you\ncan actually go in and create a query\nand the query can be customized to\nreally however you want it to it to work\nthe points of view are very specific\ninsights into different data points that\ninteract and they're very easy to create\nand a lot of them have been created as\nyou can see on the screen already and as\nyou can see on the left hand side there\nis an edit button that allows you to\nedit and modify those points of view\nvery quickly now we're going to go ahead\nand create one right now and we're just\ngoing to put one in and put the limiter\nfor IP address we're gonna change the\ndead lifetime united to alice days a\nweek so we did 24 hours is fine so we'll\njust go ahead and we'll see what we have\non the screen and as you can see there\nare just a lot already created select\none will edit the FTP and we'll see what\nthe only time for that is and it all\nlooks good to a query will show all the\nsaved queries you've created but you can\nactually go in and modify a query very\neasy you can go in and create a query\nand really essentially ask it to pull\nany kind of information that you would\nbe looking at analyzing that has been\ncaptured by now yes and there's a\ndictionary you can use that no use has\non their website that allows you to get\nbetter access in on sunny\nthe querying constructs you can put\ntogether the alerts in my opinion are\nthe most important part because these\nare the attractions are interact with\nthe data sources and\nwill trigger alerts that get sent to you\nso go back to the presentation again you\ncan see that we're analyzing a lot of\ndata but it's the data that gets sent\nhere as an alert that allows you to\nimmediately understand why you need to\nbe able to go in and check out your\nnetwork and this is why you're really\nusing negatives because you need to have\nthose alerts and so what we're going to\ndo here is we're going through the steps\nyou used to create an alert and we're\njust gonna do a light here that is gonna\nbe on analyzing bytes of traffic and the\nfinal step is to actually go ahead and\nsave the alert and really put in what\nthe alert notification model method is\ngoing to be and the default is to use an\nemail which is great but you can use an\nAggie ice alert or as you know SMP a\nsimple Network protocol or just use it\nand a command email is definitely the\neasiest one to use and so getting\nstarted I would recommend you use email\nso we're gonna go ahead and we're gonna\ncreate one and you want on workflow and\nwe're going to set up the way which we\ngonna manage this so yeah thresholds\ngonna be 34 bytes or with a critical\nthreshold of 50 bytes which is very\nsmall\nI expect an alert to be triggered\nbecause of this and we're just going to\nuse the default emails to send out and\nyou'll see by default that the new alert\nis now in painting and and the reason\nwhy we have impending is that it's just\nthere to be reviewed by the system to\nmake sure it meets all the standards I\ndon't think there'll be a problem and\nI'm just looking at some of the other\ndifferent commands we have here so we go\nback and we can get alerts from other\nnegatives networks which connects to\ndifferent networks right from this\nconfiguration screen and the same thing\nwith the SMP receiver we can use simple\nnetwork management protocol to connect\nto other receivers and the command tab\nallows us to create scripts that can be\ntriggered from alerts that get created\nso you may want to have something that\ntriggers a rebuild of a network\nenvironment which would allow you to\nauthenticate through other systems now\nof course there are other things you can\nset up in the negev dashboard so you\nknow things like information work\nprofile you know defaults here\nsuch as language and your username you\nhave the same thing for a system\nadministrator where you can get you go\nin and set defaults for the sysadmin\nthere's LDAP AD integration for simple\nand for sam'l authentication go back to\nthe main dashboard if we scroll down\nyou'll actually see that till we have an\nalert has been approved that's the alert\nthat creating forum and it's now saying\ncritical and because more than 50 bytes\nof information have been sent over our\ntest Network and the fix source of\nChicago surprise - 50 bytes is very easy\nto do so it's good to see that the\nsystem is working correctly and this is\nhow our new years of brandman works and\nfrom here the next step is for you to be\nable to set up and configure Negi OHS -\nwrong with your infrastructure that's it\nwe covered everything that you need to\nstart up your DevOps environment and we\nencourage you to be able to go through\nand play with the different tools if you\nhave any questions please post them in\nthe comments below we always respond to\nquestions that you have there we have a\nteam of people from looking at those\nquestions today and if you like this\nvideo we have a significant number of\nother videos and all you have to do is\neither go throughout the yo cat blog or\nhit this sub subscribe and like button\nand you'll be notified when new videos\ndrop have a great day in DevOps land\nhi there if you like this video\nsubscribe to the simple learn YouTube\nchannel and click here to watch similar\nvideos de nerd up and get certified\nclick here\n",
  "words": [
    "hello",
    "matthew",
    "simply",
    "learn",
    "today",
    "gon",
    "na",
    "go",
    "complete",
    "journey",
    "takes",
    "set",
    "dev",
    "ops",
    "team",
    "gon",
    "na",
    "go",
    "need",
    "able",
    "go",
    "dev",
    "ops",
    "arguments",
    "need",
    "dev",
    "ops",
    "actually",
    "go",
    "individual",
    "tools",
    "need",
    "able",
    "successfully",
    "implement",
    "dev",
    "ops",
    "within",
    "organization",
    "addition",
    "also",
    "going",
    "take",
    "time",
    "go",
    "tools",
    "get",
    "good",
    "understanding",
    "instructions",
    "basic",
    "setup",
    "tools",
    "let",
    "get",
    "started",
    "dev",
    "ops",
    "process",
    "took",
    "delivery",
    "dev",
    "ops",
    "well",
    "model",
    "called",
    "waterfall",
    "waterfall",
    "traditional",
    "approach",
    "actually",
    "building",
    "solutions",
    "reason",
    "called",
    "waterfall",
    "bring",
    "individual",
    "requirements",
    "individual",
    "sections",
    "project",
    "cascade",
    "look",
    "breakdown",
    "requirements",
    "design",
    "implementation",
    "verification",
    "maintenance",
    "user",
    "acceptance",
    "testing",
    "based",
    "software",
    "development",
    "lifecycle",
    "model",
    "sdlc",
    "around",
    "quite",
    "time",
    "still",
    "used",
    "lot",
    "companies",
    "today",
    "challenge",
    "waterfall",
    "model",
    "really",
    "long",
    "drawn",
    "model",
    "actually",
    "building",
    "delivering",
    "solutions",
    "took",
    "long",
    "time",
    "actually",
    "write",
    "code",
    "deploy",
    "code",
    "difficult",
    "actually",
    "identify",
    "problems",
    "within",
    "code",
    "provide",
    "feedback",
    "development",
    "team",
    "fix",
    "really",
    "talking",
    "months",
    "sometimes",
    "years",
    "projects",
    "actually",
    "go",
    "waterfall",
    "model",
    "process",
    "along",
    "came",
    "new",
    "method",
    "able",
    "delivery",
    "called",
    "agile",
    "agile",
    "approach",
    "way",
    "able",
    "take",
    "actual",
    "work",
    "done",
    "waterfall",
    "model",
    "compress",
    "small",
    "iterations",
    "would",
    "fundamental",
    "changes",
    "would",
    "actually",
    "take",
    "team",
    "disparate",
    "part",
    "individual",
    "cascades",
    "within",
    "waterful",
    "project",
    "bring",
    "together",
    "requirements",
    "team",
    "person",
    "design",
    "developer",
    "release",
    "management",
    "team",
    "together",
    "one",
    "group",
    "working",
    "iteration",
    "great",
    "thing",
    "agile",
    "took",
    "process",
    "weeks",
    "um",
    "months",
    "even",
    "years",
    "length",
    "waterfall",
    "reduce",
    "two",
    "four",
    "week",
    "sprint",
    "depending",
    "cadence",
    "team",
    "typically",
    "two",
    "week",
    "spring",
    "goal",
    "end",
    "sprint",
    "sometimes",
    "every",
    "sprint",
    "would",
    "software",
    "release",
    "customers",
    "getting",
    "software",
    "much",
    "faster",
    "problem",
    "still",
    "ran",
    "though",
    "agile",
    "fundamentally",
    "similar",
    "waterfall",
    "devops",
    "person",
    "working",
    "code",
    "system",
    "working",
    "great",
    "computer",
    "operations",
    "person",
    "migrating",
    "code",
    "developers",
    "environment",
    "test",
    "environment",
    "production",
    "environment",
    "would",
    "run",
    "issues",
    "code",
    "simply",
    "working",
    "lot",
    "reasons",
    "would",
    "happen",
    "actual",
    "developer",
    "environment",
    "would",
    "often",
    "different",
    "would",
    "different",
    "dependencies",
    "hardware",
    "software",
    "may",
    "additional",
    "applications",
    "installed",
    "operating",
    "system",
    "simply",
    "transferred",
    "operations",
    "environment",
    "would",
    "disconnect",
    "developer",
    "environment",
    "operations",
    "environment",
    "making",
    "difficult",
    "try",
    "roll",
    "codes",
    "run",
    "program",
    "rolled",
    "code",
    "rollback",
    "plan",
    "case",
    "code",
    "would",
    "work",
    "production",
    "release",
    "became",
    "vent",
    "wherever",
    "got",
    "stressed",
    "actual",
    "event",
    "releasing",
    "code",
    "know",
    "whether",
    "going",
    "work",
    "dev",
    "amps",
    "really",
    "looks",
    "address",
    "solve",
    "lot",
    "problems",
    "key",
    "word",
    "often",
    "hear",
    "devops",
    "continuous",
    "integration",
    "means",
    "essentially",
    "dove",
    "working",
    "coat",
    "coat",
    "constantly",
    "tested",
    "actual",
    "code",
    "unit",
    "testing",
    "environment",
    "going",
    "released",
    "goal",
    "devops",
    "model",
    "breakdown",
    "communication",
    "happens",
    "waterfall",
    "agile",
    "dev",
    "developers",
    "operations",
    "teams",
    "working",
    "brand",
    "removed",
    "able",
    "provide",
    "continuous",
    "contiguous",
    "environment",
    "developer",
    "apple",
    "actual",
    "operating",
    "model",
    "reality",
    "developer",
    "working",
    "code",
    "actually",
    "working",
    "environment",
    "identical",
    "production",
    "environment",
    "actual",
    "operations",
    "person",
    "comes",
    "try",
    "releases",
    "code",
    "see",
    "teams",
    "many",
    "22",
    "even",
    "50",
    "releases",
    "production",
    "environments",
    "every",
    "single",
    "day",
    "able",
    "guarantee",
    "actual",
    "code",
    "work",
    "releases",
    "go",
    "stressful",
    "event",
    "byproduct",
    "good",
    "testing",
    "good",
    "setup",
    "structure",
    "actually",
    "build",
    "solutions",
    "seeing",
    "goal",
    "developer",
    "operations",
    "person",
    "code",
    "working",
    "continuously",
    "environments",
    "continuous",
    "integration",
    "continuous",
    "delivery",
    "simply",
    "put",
    "able",
    "able",
    "eliminate",
    "problem",
    "operation",
    "environment",
    "sync",
    "development",
    "environment",
    "improvement",
    "edge",
    "say",
    "waterfall",
    "agile",
    "wrong",
    "delivery",
    "models",
    "maturity",
    "ability",
    "deliver",
    "solutions",
    "devops",
    "another",
    "rung",
    "maturity",
    "curve",
    "using",
    "tools",
    "available",
    "us",
    "5",
    "10",
    "years",
    "ago",
    "simply",
    "available",
    "goal",
    "team",
    "move",
    "dev",
    "ops",
    "model",
    "implement",
    "continuous",
    "releases",
    "software",
    "long",
    "using",
    "tools",
    "available",
    "good",
    "news",
    "tools",
    "open",
    "source",
    "tools",
    "let",
    "go",
    "benefits",
    "want",
    "go",
    "use",
    "devops",
    "know",
    "essentially",
    "let",
    "next",
    "slides",
    "gon",
    "na",
    "go",
    "devops",
    "gon",
    "na",
    "go",
    "benefits",
    "devops",
    "last",
    "slides",
    "actually",
    "seen",
    "know",
    "devops",
    "benefits",
    "devops",
    "along",
    "lifecycle",
    "also",
    "going",
    "start",
    "digging",
    "tools",
    "useful",
    "devops",
    "going",
    "focus",
    "seven",
    "tools",
    "provide",
    "infrastructure",
    "delivering",
    "devops",
    "solutions",
    "significantly",
    "tools",
    "available",
    "market",
    "seven",
    "popular",
    "categories",
    "devops",
    "really",
    "essential",
    "collaboration",
    "development",
    "team",
    "operations",
    "team",
    "teams",
    "past",
    "somewhat",
    "conflict",
    "opportunity",
    "teams",
    "work",
    "continuously",
    "expectation",
    "devops",
    "continue",
    "mature",
    "indeed",
    "actually",
    "even",
    "seeing",
    "groups",
    "called",
    "dev",
    "sac",
    "ops",
    "integrating",
    "security",
    "part",
    "delivery",
    "development",
    "team",
    "operations",
    "team",
    "bottom",
    "line",
    "devops",
    "engineer",
    "highly",
    "demand",
    "demand",
    "devops",
    "engineer",
    "literally",
    "going",
    "roof",
    "salaries",
    "going",
    "ups",
    "exponentially",
    "around",
    "let",
    "dig",
    "benefits",
    "devops",
    "new",
    "catchphrase",
    "actually",
    "got",
    "significant",
    "value",
    "speed",
    "delivery",
    "software",
    "benefits",
    "devops",
    "really",
    "broken",
    "number",
    "key",
    "areas",
    "first",
    "continuous",
    "delivery",
    "software",
    "allows",
    "continuously",
    "release",
    "new",
    "features",
    "security",
    "understanding",
    "software",
    "going",
    "high",
    "quality",
    "allows",
    "teams",
    "working",
    "software",
    "delivery",
    "within",
    "organization",
    "effectively",
    "collaborate",
    "talking",
    "page",
    "understanding",
    "needs",
    "delivered",
    "deployment",
    "process",
    "moves",
    "event",
    "lot",
    "stress",
    "lot",
    "contingency",
    "plans",
    "much",
    "easier",
    "deployment",
    "efficiency",
    "within",
    "actual",
    "code",
    "writing",
    "ability",
    "scale",
    "using",
    "different",
    "tools",
    "available",
    "allows",
    "able",
    "bring",
    "scale",
    "reduce",
    "teams",
    "running",
    "software",
    "needed",
    "errors",
    "fixed",
    "much",
    "earlier",
    "quickly",
    "caught",
    "anything",
    "gets",
    "pushed",
    "production",
    "environment",
    "fundamentally",
    "looking",
    "improving",
    "security",
    "actual",
    "releases",
    "actual",
    "concept",
    "security",
    "center",
    "work",
    "finally",
    "really",
    "allows",
    "reduce",
    "number",
    "errors",
    "much",
    "less",
    "manual",
    "intervention",
    "greater",
    "reliance",
    "scripted",
    "environments",
    "actually",
    "test",
    "validate",
    "security",
    "reliability",
    "uptime",
    "efficiency",
    "let",
    "talk",
    "little",
    "bit",
    "life",
    "cycle",
    "devops",
    "first",
    "step",
    "take",
    "actually",
    "build",
    "build",
    "test",
    "environment",
    "continuous",
    "building",
    "testing",
    "brand",
    "merge",
    "away",
    "first",
    "step",
    "source",
    "code",
    "move",
    "looking",
    "continuous",
    "integration",
    "means",
    "every",
    "time",
    "somebody",
    "checks",
    "code",
    "validating",
    "code",
    "actually",
    "run",
    "production",
    "environment",
    "actually",
    "passed",
    "end",
    "continuous",
    "integration",
    "testing",
    "code",
    "looking",
    "continuous",
    "deployment",
    "code",
    "works",
    "available",
    "released",
    "production",
    "environment",
    "let",
    "go",
    "ahead",
    "release",
    "actually",
    "release",
    "code",
    "want",
    "able",
    "validate",
    "environment",
    "working",
    "efficiently",
    "may",
    "release",
    "code",
    "new",
    "feature",
    "within",
    "application",
    "customers",
    "may",
    "graft",
    "immediately",
    "new",
    "feature",
    "want",
    "able",
    "ensure",
    "code",
    "working",
    "importantly",
    "infrastructure",
    "support",
    "finally",
    "looking",
    "software",
    "released",
    "continuous",
    "event",
    "go",
    "back",
    "beginning",
    "start",
    "working",
    "code",
    "run",
    "build",
    "environment",
    "continuous",
    "integration",
    "deployment",
    "continuous",
    "monitoring",
    "keep",
    "cycle",
    "moving",
    "let",
    "dig",
    "tools",
    "devops",
    "engineer",
    "would",
    "need",
    "learn",
    "break",
    "environment",
    "way",
    "source",
    "code",
    "management",
    "software",
    "release",
    "number",
    "key",
    "tools",
    "want",
    "able",
    "use",
    "instance",
    "source",
    "code",
    "management",
    "get",
    "open",
    "source",
    "tool",
    "would",
    "want",
    "used",
    "managing",
    "code",
    "continuous",
    "build",
    "test",
    "environment",
    "managed",
    "mavin",
    "selenium",
    "integration",
    "environments",
    "working",
    "managed",
    "jenkins",
    "actual",
    "deployment",
    "production",
    "environment",
    "managed",
    "products",
    "ansible",
    "docker",
    "monitoring",
    "network",
    "would",
    "used",
    "tools",
    "like",
    "nettie",
    "thing",
    "remember",
    "tools",
    "tools",
    "licensing",
    "purchase",
    "tools",
    "pro",
    "level",
    "licensing",
    "choose",
    "select",
    "get",
    "started",
    "open",
    "source",
    "tools",
    "actually",
    "start",
    "using",
    "free",
    "right",
    "let",
    "dig",
    "get",
    "let",
    "look",
    "challenge",
    "git",
    "able",
    "address",
    "git",
    "team",
    "developers",
    "working",
    "different",
    "pieces",
    "code",
    "one",
    "key",
    "problems",
    "collaboration",
    "team",
    "challenge",
    "version",
    "control",
    "difficult",
    "often",
    "required",
    "check",
    "two",
    "large",
    "environments",
    "know",
    "quasi",
    "version",
    "control",
    "environments",
    "time",
    "consuming",
    "often",
    "problems",
    "would",
    "happen",
    "version",
    "control",
    "server",
    "would",
    "crash",
    "backup",
    "kind",
    "essentially",
    "go",
    "back",
    "square",
    "zero",
    "see",
    "whether",
    "actually",
    "work",
    "let",
    "look",
    "git",
    "actually",
    "solve",
    "first",
    "one",
    "things",
    "makes",
    "team",
    "collaboration",
    "much",
    "easier",
    "software",
    "effectively",
    "documented",
    "effectively",
    "maintained",
    "actual",
    "code",
    "actually",
    "gets",
    "worked",
    "developer",
    "gate",
    "environment",
    "complete",
    "code",
    "makes",
    "much",
    "easier",
    "backups",
    "sharing",
    "content",
    "amongst",
    "way",
    "get",
    "able",
    "accomplish",
    "essentially",
    "distributed",
    "version",
    "control",
    "solution",
    "means",
    "multiple",
    "developers",
    "yes",
    "git",
    "remote",
    "hub",
    "connect",
    "able",
    "upload",
    "download",
    "different",
    "branches",
    "code",
    "working",
    "essentially",
    "developer",
    "actually",
    "code",
    "actually",
    "code",
    "able",
    "imagine",
    "firm",
    "local",
    "pc",
    "local",
    "development",
    "machine",
    "without",
    "worry",
    "much",
    "network",
    "server",
    "going",
    "key",
    "things",
    "get",
    "really",
    "good",
    "know",
    "software",
    "management",
    "tool",
    "designed",
    "ground",
    "merge",
    "code",
    "development",
    "track",
    "changes",
    "code",
    "easily",
    "effectively",
    "makes",
    "easy",
    "use",
    "developer",
    "track",
    "code",
    "ability",
    "multiple",
    "developers",
    "work",
    "together",
    "much",
    "easier",
    "comparison",
    "solutions",
    "really",
    "key",
    "success",
    "point",
    "kit",
    "allows",
    "nonlinear",
    "code",
    "development",
    "actually",
    "people",
    "working",
    "different",
    "areas",
    "code",
    "may",
    "released",
    "different",
    "times",
    "working",
    "actually",
    "break",
    "architecture",
    "get",
    "really",
    "calls",
    "four",
    "key",
    "areas",
    "working",
    "directory",
    "local",
    "staging",
    "area",
    "local",
    "repository",
    "remote",
    "repository",
    "process",
    "go",
    "would",
    "add",
    "files",
    "staging",
    "area",
    "working",
    "directory",
    "would",
    "usually",
    "get",
    "add",
    "command",
    "staging",
    "area",
    "ready",
    "actually",
    "commit",
    "files",
    "local",
    "repository",
    "use",
    "git",
    "commit",
    "command",
    "would",
    "actually",
    "push",
    "local",
    "repository",
    "remote",
    "repository",
    "final",
    "commit",
    "remote",
    "repository",
    "allows",
    "rest",
    "team",
    "pull",
    "latest",
    "final",
    "changes",
    "working",
    "code",
    "locally",
    "using",
    "local",
    "eat",
    "local",
    "staging",
    "area",
    "local",
    "repository",
    "ready",
    "commit",
    "work",
    "committed",
    "anna",
    "souza",
    "committed",
    "rest",
    "teams",
    "pulled",
    "latest",
    "changes",
    "worked",
    "allows",
    "complete",
    "holistic",
    "check",
    "round",
    "process",
    "sometimes",
    "want",
    "able",
    "go",
    "take",
    "checked",
    "code",
    "cram",
    "pulling",
    "merge",
    "local",
    "code",
    "merge",
    "process",
    "always",
    "ensure",
    "working",
    "latest",
    "best",
    "version",
    "code",
    "everybody",
    "team",
    "consistent",
    "communication",
    "actual",
    "code",
    "delivered",
    "okay",
    "gon",
    "na",
    "going",
    "validate",
    "get",
    "running",
    "computer",
    "gon",
    "na",
    "vent",
    "create",
    "directory",
    "file",
    "directory",
    "make",
    "changes",
    "file",
    "use",
    "commit",
    "commands",
    "able",
    "check",
    "files",
    "validate",
    "ensure",
    "made",
    "first",
    "thing",
    "gon",
    "na",
    "see",
    "git",
    "installed",
    "still",
    "use",
    "command",
    "git",
    "version",
    "get",
    "version",
    "even",
    "give",
    "version",
    "number",
    "gon",
    "na",
    "create",
    "new",
    "folder",
    "dirt",
    "green",
    "create",
    "new",
    "folder",
    "move",
    "cursor",
    "green",
    "folder",
    "changing",
    "directory",
    "go",
    "back",
    "windows",
    "validate",
    "directory",
    "actually",
    "go",
    "look",
    "see",
    "green",
    "folder",
    "double",
    "click",
    "see",
    "nothing",
    "folder",
    "right",
    "actually",
    "add",
    "folder",
    "part",
    "git",
    "project",
    "going",
    "use",
    "get",
    "actually",
    "initialize",
    "folder",
    "make",
    "git",
    "repository",
    "let",
    "go",
    "ahead",
    "create",
    "file",
    "though",
    "actually",
    "go",
    "inside",
    "new",
    "initialized",
    "folder",
    "see",
    "dot",
    "git",
    "folder",
    "added",
    "new",
    "text",
    "file",
    "gon",
    "na",
    "create",
    "gon",
    "na",
    "code",
    "class",
    "let",
    "class",
    "dot",
    "txt",
    "extension",
    "hidden",
    "default",
    "text",
    "file",
    "gon",
    "na",
    "type",
    "text",
    "welcome",
    "simply",
    "learn",
    "save",
    "let",
    "go",
    "ahead",
    "check",
    "status",
    "file",
    "gate",
    "git",
    "status",
    "see",
    "says",
    "yes",
    "file",
    "committed",
    "repository",
    "red",
    "commit",
    "file",
    "repository",
    "wo",
    "able",
    "track",
    "changes",
    "file",
    "let",
    "go",
    "ahead",
    "commit",
    "file",
    "commit",
    "class",
    "txt",
    "add",
    "back",
    "repository",
    "added",
    "final",
    "step",
    "want",
    "commit",
    "get",
    "get",
    "commit",
    "like",
    "first",
    "commit",
    "description",
    "shows",
    "us",
    "committing",
    "file",
    "item",
    "folder",
    "go",
    "file",
    "created",
    "make",
    "changes",
    "open",
    "file",
    "says",
    "welcome",
    "simply",
    "learn",
    "let",
    "put",
    "text",
    "afterwards",
    "says",
    "demo",
    "save",
    "close",
    "go",
    "back",
    "get",
    "compare",
    "contrast",
    "original",
    "file",
    "committed",
    "new",
    "updates",
    "done",
    "check",
    "difference",
    "using",
    "git",
    "diff",
    "see",
    "red",
    "text",
    "original",
    "text",
    "green",
    "text",
    "new",
    "text",
    "added",
    "shows",
    "go",
    "create",
    "new",
    "git",
    "repository",
    "go",
    "adding",
    "files",
    "committing",
    "files",
    "repository",
    "able",
    "see",
    "different",
    "version",
    "controls",
    "let",
    "move",
    "mavin",
    "use",
    "mavin",
    "use",
    "married",
    "well",
    "look",
    "things",
    "done",
    "past",
    "actually",
    "building",
    "tasks",
    "let",
    "break",
    "would",
    "done",
    "using",
    "mavin",
    "create",
    "game",
    "football",
    "using",
    "java",
    "would",
    "actually",
    "go",
    "actual",
    "game",
    "collect",
    "different",
    "components",
    "needed",
    "within",
    "java",
    "environment",
    "make",
    "sure",
    "everything",
    "would",
    "work",
    "correctly",
    "make",
    "slightest",
    "mistake",
    "would",
    "get",
    "right",
    "output",
    "needed",
    "actual",
    "process",
    "building",
    "deploying",
    "project",
    "really",
    "would",
    "take",
    "quite",
    "lot",
    "time",
    "mavin",
    "mavin",
    "allows",
    "able",
    "take",
    "templates",
    "stored",
    "locally",
    "able",
    "use",
    "able",
    "improve",
    "efficiency",
    "able",
    "build",
    "environment",
    "removing",
    "dependencies",
    "within",
    "application",
    "makes",
    "lot",
    "easier",
    "able",
    "focus",
    "writing",
    "code",
    "game",
    "solution",
    "rather",
    "manage",
    "environment",
    "within",
    "solution",
    "would",
    "deployed",
    "focus",
    "within",
    "mavin",
    "automation",
    "tool",
    "used",
    "projects",
    "short",
    "period",
    "time",
    "starting",
    "environment",
    "building",
    "solutions",
    "mavin",
    "great",
    "get",
    "started",
    "need",
    "projects",
    "look",
    "alternative",
    "tools",
    "market",
    "four",
    "key",
    "areas",
    "want",
    "focus",
    "mavin",
    "help",
    "allow",
    "efficient",
    "parallel",
    "builds",
    "run",
    "concurrently",
    "really",
    "easy",
    "use",
    "get",
    "started",
    "math",
    "quickly",
    "fast",
    "access",
    "new",
    "features",
    "new",
    "configurations",
    "quickly",
    "within",
    "environment",
    "build",
    "process",
    "allow",
    "able",
    "visualize",
    "code",
    "happens",
    "quickly",
    "actual",
    "architecture",
    "mavin",
    "execution",
    "commands",
    "managed",
    "known",
    "pom",
    "file",
    "pom",
    "file",
    "project",
    "object",
    "model",
    "xml",
    "file",
    "actually",
    "details",
    "project",
    "configuration",
    "build",
    "environment",
    "file",
    "fetch",
    "dependencies",
    "local",
    "repository",
    "apply",
    "plugins",
    "may",
    "also",
    "included",
    "within",
    "mapping",
    "environment",
    "goal",
    "software",
    "build",
    "much",
    "controlled",
    "manor",
    "going",
    "show",
    "go",
    "run",
    "first",
    "project",
    "using",
    "maven",
    "first",
    "steps",
    "make",
    "sure",
    "latest",
    "jdk",
    "installed",
    "computer",
    "gon",
    "na",
    "go",
    "ahead",
    "open",
    "web",
    "browser",
    "get",
    "installed",
    "computer",
    "going",
    "type",
    "jdk",
    "download",
    "chrome",
    "web",
    "browser",
    "go",
    "oracle",
    "website",
    "allows",
    "us",
    "learn",
    "download",
    "jdk",
    "running",
    "windows",
    "going",
    "download",
    "windows",
    "version",
    "jdk",
    "installed",
    "next",
    "step",
    "actually",
    "go",
    "ahead",
    "download",
    "maven",
    "files",
    "going",
    "take",
    "us",
    "maven",
    "apache",
    "org",
    "website",
    "go",
    "ahead",
    "download",
    "version",
    "maven",
    "need",
    "operating",
    "system",
    "going",
    "go",
    "ahead",
    "download",
    "zip",
    "file",
    "instead",
    "executable",
    "file",
    "give",
    "control",
    "install",
    "onto",
    "windows",
    "pc",
    "file",
    "downloaded",
    "want",
    "go",
    "ahead",
    "extract",
    "entire",
    "file",
    "unzipped",
    "folder",
    "running",
    "computer",
    "one",
    "things",
    "gon",
    "na",
    "go",
    "set",
    "number",
    "system",
    "variables",
    "jdk",
    "infinite",
    "path",
    "mavim",
    "files",
    "want",
    "go",
    "control",
    "panel",
    "select",
    "system",
    "security",
    "system",
    "settings",
    "go",
    "advanced",
    "system",
    "settings",
    "give",
    "access",
    "edit",
    "system",
    "variable",
    "setting",
    "looking",
    "gon",
    "na",
    "go",
    "path",
    "variable",
    "see",
    "already",
    "pasted",
    "link",
    "jdk",
    "right",
    "underneath",
    "variable",
    "value",
    "stole",
    "jdk",
    "likely",
    "already",
    "installed",
    "path",
    "correctly",
    "good",
    "news",
    "actually",
    "fairly",
    "easy",
    "install",
    "path",
    "man",
    "jdk",
    "copy",
    "path",
    "folder",
    "located",
    "system",
    "paste",
    "variable",
    "value",
    "edit",
    "systems",
    "variable",
    "fault",
    "file",
    "system",
    "get",
    "us",
    "files",
    "see",
    "extracted",
    "folder",
    "already",
    "desktop",
    "system",
    "path",
    "set",
    "moment",
    "folder",
    "located",
    "also",
    "go",
    "system",
    "protection",
    "music",
    "set",
    "system",
    "ummm",
    "folder",
    "go",
    "ahead",
    "user",
    "variable",
    "also",
    "part",
    "links",
    "path",
    "mavin",
    "files",
    "right",
    "validating",
    "files",
    "extracted",
    "correctly",
    "good",
    "go",
    "ahead",
    "link",
    "moment",
    "folder",
    "right",
    "going",
    "move",
    "command",
    "prompt",
    "going",
    "work",
    "first",
    "come",
    "going",
    "mv",
    "go",
    "ahead",
    "create",
    "new",
    "user",
    "variable",
    "going",
    "type",
    "gon",
    "na",
    "cause",
    "one",
    "enter",
    "put",
    "path",
    "apache",
    "moment",
    "folder",
    "able",
    "use",
    "m2",
    "home",
    "price",
    "always",
    "use",
    "verbal",
    "name",
    "map",
    "home",
    "exactly",
    "empty",
    "going",
    "backup",
    "gon",
    "na",
    "open",
    "command",
    "prompt",
    "going",
    "see",
    "maybin",
    "store",
    "writing",
    "mvn",
    "version",
    "yes",
    "going",
    "go",
    "ahead",
    "create",
    "first",
    "maven",
    "project",
    "first",
    "part",
    "creating",
    "maven",
    "project",
    "actually",
    "directory",
    "store",
    "files",
    "used",
    "create",
    "project",
    "going",
    "go",
    "ahead",
    "folder",
    "gon",
    "na",
    "create",
    "new",
    "directory",
    "going",
    "call",
    "one",
    "gon",
    "na",
    "call",
    "simply",
    "learn",
    "copy",
    "path",
    "gon",
    "na",
    "write",
    "correct",
    "path",
    "gon",
    "na",
    "change",
    "directory",
    "cd",
    "copy",
    "file",
    "location",
    "alright",
    "moved",
    "simply",
    "learned",
    "folder",
    "able",
    "install",
    "pom",
    "file",
    "instructions",
    "mavin",
    "stored",
    "area",
    "actually",
    "going",
    "use",
    "template",
    "already",
    "created",
    "mavin",
    "going",
    "mvn",
    "archetype",
    "template",
    "mbm",
    "generate",
    "go",
    "ahead",
    "create",
    "files",
    "us",
    "quite",
    "files",
    "downloaded",
    "event",
    "website",
    "take",
    "time",
    "see",
    "gone",
    "ahead",
    "files",
    "downloaded",
    "everything",
    "running",
    "correctly",
    "inside",
    "environment",
    "online",
    "come",
    "prompt",
    "values",
    "say",
    "first",
    "one",
    "group",
    "id",
    "going",
    "call",
    "one",
    "comm",
    "math",
    "next",
    "one",
    "going",
    "artifact",
    "id",
    "going",
    "mav",
    "v",
    "project",
    "hit",
    "return",
    "version",
    "going",
    "snapshot",
    "put",
    "value",
    "version",
    "snapshot",
    "package",
    "going",
    "take",
    "call",
    "one",
    "comb",
    "math",
    "dot",
    "demo",
    "select",
    "yes",
    "wife",
    "create",
    "environment",
    "build",
    "environment",
    "us",
    "screen",
    "shows",
    "everything",
    "running",
    "us",
    "successful",
    "build",
    "let",
    "go",
    "main",
    "folder",
    "see",
    "simply",
    "lim",
    "folder",
    "let",
    "open",
    "see",
    "double",
    "click",
    "directory",
    "yep",
    "sty",
    "see",
    "files",
    "project",
    "names",
    "v",
    "project",
    "pom",
    "file",
    "fantastic",
    "source",
    "folder",
    "actually",
    "see",
    "demo",
    "app",
    "demo",
    "app",
    "test",
    "file",
    "well",
    "main",
    "folder",
    "file",
    "called",
    "pom",
    "file",
    "really",
    "important",
    "file",
    "need",
    "project",
    "go",
    "able",
    "set",
    "settings",
    "inside",
    "pom",
    "file",
    "done",
    "gone",
    "gone",
    "setup",
    "allows",
    "make",
    "sure",
    "right",
    "files",
    "running",
    "computer",
    "right",
    "files",
    "download",
    "maven",
    "website",
    "install",
    "files",
    "settings",
    "need",
    "make",
    "windows",
    "computer",
    "settings",
    "need",
    "done",
    "command",
    "line",
    "able",
    "run",
    "application",
    "actually",
    "start",
    "running",
    "maven",
    "let",
    "look",
    "selenium",
    "get",
    "started",
    "looking",
    "testing",
    "selenium",
    "want",
    "run",
    "testing",
    "particularly",
    "want",
    "sequential",
    "testing",
    "would",
    "take",
    "lot",
    "time",
    "run",
    "one",
    "test",
    "second",
    "test",
    "tests",
    "actual",
    "time",
    "elapsed",
    "would",
    "quite",
    "significant",
    "selim",
    "actually",
    "able",
    "parallel",
    "testing",
    "instead",
    "looking",
    "amount",
    "time",
    "take",
    "achieve",
    "run",
    "test",
    "run",
    "tests",
    "sequentially",
    "length",
    "time",
    "actually",
    "run",
    "tests",
    "based",
    "length",
    "longest",
    "running",
    "test",
    "example",
    "longest",
    "running",
    "test",
    "two",
    "minutes",
    "one",
    "things",
    "notice",
    "selenium",
    "focus",
    "web",
    "applications",
    "open",
    "source",
    "tool",
    "really",
    "good",
    "regression",
    "functional",
    "testing",
    "web",
    "applications",
    "mobile",
    "application",
    "iot",
    "application",
    "tools",
    "use",
    "market",
    "well",
    "new",
    "devops",
    "setting",
    "first",
    "devops",
    "environment",
    "selenium",
    "great",
    "place",
    "start",
    "web",
    "applications",
    "mature",
    "allow",
    "able",
    "test",
    "validate",
    "concept",
    "continuous",
    "testing",
    "environment",
    "four",
    "key",
    "takeaways",
    "selenium",
    "really",
    "fast",
    "fast",
    "execution",
    "highly",
    "accurate",
    "always",
    "validate",
    "work",
    "correctly",
    "feedback",
    "sent",
    "straight",
    "back",
    "code",
    "pass",
    "test",
    "allows",
    "script",
    "multiple",
    "languages",
    "great",
    "way",
    "test",
    "focus",
    "web",
    "applications",
    "test",
    "multiple",
    "languages",
    "useful",
    "web",
    "applications",
    "importantly",
    "allows",
    "parallel",
    "test",
    "execution",
    "speeds",
    "whole",
    "test",
    "process",
    "significantly",
    "want",
    "break",
    "architecture",
    "selenium",
    "find",
    "actual",
    "libraries",
    "use",
    "selenium",
    "run",
    "java",
    "python",
    "javascript",
    "php",
    "common",
    "languages",
    "used",
    "build",
    "web",
    "applications",
    "actual",
    "webdriver",
    "api",
    "driver",
    "fantastic",
    "makes",
    "easier",
    "integrate",
    "selenium",
    "applications",
    "api",
    "run",
    "solution",
    "different",
    "web",
    "browsers",
    "popular",
    "firefox",
    "chrome",
    "edge",
    "focus",
    "selenium",
    "webdriver",
    "codes",
    "used",
    "build",
    "client",
    "libraries",
    "make",
    "lom",
    "allow",
    "able",
    "build",
    "solutions",
    "across",
    "multiple",
    "web",
    "application",
    "environments",
    "webdriver",
    "application",
    "interface",
    "integrate",
    "application",
    "make",
    "easy",
    "testing",
    "webdriver",
    "service",
    "provides",
    "immutable",
    "stateless",
    "environment",
    "makes",
    "easy",
    "able",
    "use",
    "protocol",
    "json",
    "wire",
    "test",
    "environment",
    "driver",
    "manages",
    "communication",
    "browsers",
    "wire",
    "protocol",
    "used",
    "json",
    "within",
    "web",
    "browser",
    "actual",
    "commands",
    "run",
    "web",
    "browser",
    "able",
    "get",
    "results",
    "okay",
    "get",
    "setup",
    "first",
    "things",
    "want",
    "want",
    "make",
    "sure",
    "right",
    "version",
    "java",
    "installed",
    "using",
    "command",
    "window",
    "going",
    "type",
    "java",
    "see",
    "java",
    "installed",
    "fantastic",
    "oh",
    "go",
    "download",
    "java",
    "oracle",
    "website",
    "next",
    "step",
    "validate",
    "eclipse",
    "installed",
    "typing",
    "eclipse",
    "clips",
    "installed",
    "actually",
    "download",
    "eclipse",
    "eclipse",
    "website",
    "third",
    "step",
    "want",
    "check",
    "validate",
    "browser",
    "driver",
    "installed",
    "using",
    "google",
    "chrome",
    "main",
    "browser",
    "actually",
    "go",
    "download",
    "chromium",
    "driver",
    "actual",
    "core",
    "engine",
    "powers",
    "chrome",
    "interesting",
    "enough",
    "used",
    "new",
    "microsoft",
    "edge",
    "web",
    "browser",
    "get",
    "go",
    "download",
    "latest",
    "chromium",
    "driver",
    "install",
    "final",
    "stage",
    "go",
    "selenium",
    "web",
    "site",
    "download",
    "jar",
    "files",
    "google",
    "search",
    "selenium",
    "download",
    "selenium",
    "hq2",
    "org",
    "website",
    "take",
    "straight",
    "download",
    "page",
    "want",
    "download",
    "latest",
    "version",
    "gone",
    "ahead",
    "done",
    "already",
    "everything",
    "running",
    "next",
    "step",
    "us",
    "install",
    "great",
    "content",
    "okay",
    "get",
    "setup",
    "first",
    "things",
    "want",
    "want",
    "make",
    "sure",
    "right",
    "version",
    "driver",
    "install",
    "using",
    "command",
    "window",
    "going",
    "type",
    "java",
    "see",
    "java",
    "installed",
    "fantastic",
    "oh",
    "go",
    "download",
    "java",
    "oracle",
    "website",
    "next",
    "step",
    "validate",
    "eclipse",
    "installed",
    "typing",
    "eclipse",
    "clips",
    "actually",
    "download",
    "eclipse",
    "eclipse",
    "website",
    "third",
    "step",
    "want",
    "check",
    "validate",
    "browser",
    "driver",
    "installed",
    "using",
    "google",
    "chrome",
    "main",
    "browser",
    "actually",
    "go",
    "download",
    "chromium",
    "driver",
    "actual",
    "core",
    "engine",
    "powers",
    "chrome",
    "interesting",
    "enough",
    "used",
    "new",
    "microsoft",
    "edge",
    "web",
    "browser",
    "get",
    "go",
    "download",
    "latest",
    "chromium",
    "driver",
    "install",
    "final",
    "stage",
    "go",
    "selenium",
    "web",
    "site",
    "download",
    "jar",
    "files",
    "google",
    "search",
    "selenium",
    "download",
    "selenium",
    "hq2",
    "org",
    "website",
    "take",
    "straight",
    "download",
    "page",
    "want",
    "download",
    "latest",
    "version",
    "gone",
    "ahead",
    "done",
    "already",
    "everything",
    "running",
    "next",
    "step",
    "us",
    "install",
    "great",
    "content",
    "going",
    "go",
    "ahead",
    "open",
    "eclipse",
    "environment",
    "takes",
    "moment",
    "launch",
    "eclipse",
    "going",
    "go",
    "ahead",
    "create",
    "new",
    "project",
    "going",
    "call",
    "project",
    "xyz",
    "think",
    "fine",
    "test",
    "gon",
    "na",
    "go",
    "ahead",
    "create",
    "new",
    "class",
    "file",
    "select",
    "new",
    "class",
    "gon",
    "na",
    "go",
    "give",
    "class",
    "file",
    "name",
    "simply",
    "learn",
    "let",
    "see",
    "finish",
    "button",
    "selected",
    "maybe",
    "need",
    "select",
    "options",
    "oh",
    "know",
    "think",
    "could",
    "package",
    "name",
    "yeah",
    "let",
    "go",
    "ahead",
    "change",
    "package",
    "name",
    "going",
    "change",
    "qwe",
    "qwf",
    "yep",
    "finish",
    "button",
    "highlighted",
    "select",
    "go",
    "select",
    "let",
    "like",
    "finish",
    "test",
    "page",
    "running",
    "validate",
    "selenium",
    "actually",
    "part",
    "project",
    "go",
    "source",
    "actual",
    "sauce",
    "xyz",
    "file",
    "right",
    "click",
    "want",
    "validate",
    "files",
    "correctly",
    "going",
    "see",
    "libraries",
    "yep",
    "selenium",
    "say",
    "add",
    "external",
    "files",
    "find",
    "selenium",
    "jar",
    "file",
    "sect",
    "open",
    "would",
    "load",
    "hit",
    "apply",
    "close",
    "would",
    "apply",
    "project",
    "actually",
    "start",
    "writing",
    "code",
    "part",
    "gon",
    "na",
    "put",
    "code",
    "public",
    "static",
    "void",
    "section",
    "first",
    "command",
    "going",
    "system",
    "dot",
    "set",
    "property",
    "want",
    "make",
    "sure",
    "configuring",
    "webdriver",
    "chromium",
    "correctly",
    "gon",
    "na",
    "webdriver",
    "chrome",
    "driver",
    "argument",
    "actually",
    "going",
    "full",
    "path",
    "full",
    "network",
    "path",
    "chromium",
    "driver",
    "pc",
    "let",
    "see",
    "chrome",
    "want",
    "copy",
    "path",
    "paste",
    "paste",
    "path",
    "make",
    "sure",
    "also",
    "put",
    "link",
    "actual",
    "file",
    "want",
    "execute",
    "case",
    "chrome",
    "driver",
    "exe",
    "want",
    "make",
    "sure",
    "web",
    "driver",
    "pointing",
    "new",
    "chrome",
    "driver",
    "notice",
    "couple",
    "red",
    "colors",
    "means",
    "public",
    "classes",
    "imported",
    "correctly",
    "write",
    "clear",
    "commitments",
    "like",
    "import",
    "webdriver",
    "select",
    "real",
    "quick",
    "adds",
    "import",
    "correctly",
    "top",
    "page",
    "chrome",
    "driver",
    "quick",
    "way",
    "working",
    "eclipse",
    "import",
    "additional",
    "files",
    "actually",
    "start",
    "test",
    "want",
    "make",
    "sure",
    "actually",
    "cleared",
    "potential",
    "browser",
    "cookies",
    "would",
    "within",
    "criminal",
    "driver",
    "going",
    "go",
    "ahead",
    "going",
    "write",
    "script",
    "allows",
    "us",
    "remove",
    "cookies",
    "want",
    "drive",
    "duck",
    "marriage",
    "delete",
    "cookies",
    "next",
    "line",
    "going",
    "actually",
    "webpage",
    "going",
    "connect",
    "open",
    "mode",
    "happen",
    "going",
    "go",
    "actually",
    "use",
    "window",
    "property",
    "wishes",
    "writing",
    "mistake",
    "allow",
    "us",
    "go",
    "fullscreen",
    "need",
    "pull",
    "web",
    "page",
    "gon",
    "na",
    "get",
    "get",
    "command",
    "going",
    "actually",
    "gon",
    "na",
    "pull",
    "web",
    "page",
    "amazon",
    "would",
    "trade",
    "something",
    "going",
    "go",
    "amazon",
    "web",
    "page",
    "gon",
    "na",
    "copy",
    "url",
    "know",
    "need",
    "copy",
    "http",
    "wwm",
    "seungyeon",
    "calm",
    "wherever",
    "located",
    "see",
    "pulled",
    "amazon",
    "web",
    "page",
    "line",
    "18",
    "allows",
    "go",
    "connect",
    "amazon",
    "web",
    "page",
    "pulling",
    "also",
    "want",
    "want",
    "look",
    "specific",
    "id",
    "one",
    "elements",
    "driver",
    "called",
    "fide",
    "element",
    "allows",
    "look",
    "element",
    "beyond",
    "actual",
    "page",
    "html",
    "console",
    "screen",
    "actually",
    "paste",
    "id",
    "element",
    "want",
    "use",
    "find",
    "element",
    "id",
    "element",
    "needed",
    "javascript",
    "css",
    "let",
    "see",
    "quite",
    "ids",
    "select",
    "two",
    "tab",
    "search",
    "text",
    "box",
    "actually",
    "finds",
    "id",
    "text",
    "box",
    "used",
    "searching",
    "gon",
    "na",
    "use",
    "key",
    "command",
    "allows",
    "us",
    "actually",
    "pre",
    "fill",
    "search",
    "box",
    "going",
    "use",
    "test",
    "puma",
    "shoes",
    "fixed",
    "string",
    "actually",
    "put",
    "variable",
    "want",
    "pull",
    "strings",
    "database",
    "xml",
    "file",
    "next",
    "line",
    "line",
    "19",
    "shows",
    "long",
    "actually",
    "gon",
    "na",
    "run",
    "actual",
    "script",
    "search",
    "10",
    "seconds",
    "10",
    "seconds",
    "elapsed",
    "actually",
    "quit",
    "script",
    "actually",
    "causes",
    "web",
    "browser",
    "takes",
    "us",
    "back",
    "screen",
    "hint",
    "let",
    "test",
    "make",
    "sure",
    "working",
    "everything",
    "looking",
    "good",
    "web",
    "browser",
    "opens",
    "expect",
    "goes",
    "amazon",
    "fantastic",
    "right",
    "goes",
    "search",
    "screen",
    "fill",
    "puma",
    "shoes",
    "get",
    "puma",
    "shoes",
    "wait",
    "10",
    "seconds",
    "closes",
    "exactly",
    "expecting",
    "actually",
    "change",
    "unit",
    "time",
    "would",
    "actual",
    "test",
    "wanted",
    "see",
    "happening",
    "longer",
    "10",
    "seconds",
    "actually",
    "change",
    "actual",
    "time",
    "actual",
    "metric",
    "instance",
    "got",
    "says",
    "seconds",
    "see",
    "unit",
    "time",
    "could",
    "minutes",
    "hours",
    "microseconds",
    "change",
    "keyword",
    "well",
    "could",
    "jigsaws",
    "anything",
    "want",
    "check",
    "actually",
    "building",
    "application",
    "want",
    "able",
    "test",
    "data",
    "application",
    "put",
    "specific",
    "data",
    "let",
    "look",
    "center",
    "heart",
    "devops",
    "environment",
    "center",
    "jenkins",
    "jenkins",
    "people",
    "would",
    "developers",
    "would",
    "work",
    "code",
    "code",
    "would",
    "checked",
    "source",
    "repository",
    "would",
    "check",
    "issues",
    "would",
    "send",
    "code",
    "operations",
    "team",
    "would",
    "delay",
    "actually",
    "delivering",
    "software",
    "item",
    "challenges",
    "developers",
    "hand",
    "wanted",
    "run",
    "tests",
    "wait",
    "software",
    "built",
    "lot",
    "problems",
    "providing",
    "feedback",
    "particularly",
    "large",
    "teams",
    "working",
    "software",
    "actually",
    "error",
    "actual",
    "delivery",
    "software",
    "often",
    "delayed",
    "key",
    "problems",
    "jenkins",
    "actually",
    "ability",
    "able",
    "streamline",
    "whole",
    "process",
    "build",
    "test",
    "deploy",
    "happens",
    "continuously",
    "able",
    "notify",
    "developers",
    "actual",
    "specific",
    "developer",
    "errors",
    "detected",
    "able",
    "speed",
    "delivery",
    "process",
    "much",
    "efficiently",
    "focus",
    "jenkins",
    "automates",
    "continuous",
    "development",
    "testing",
    "deployment",
    "environment",
    "open",
    "source",
    "jenkins",
    "easy",
    "install",
    "configure",
    "around",
    "many",
    "years",
    "mature",
    "many",
    "plugins",
    "use",
    "within",
    "jenkins",
    "able",
    "jenkins",
    "product",
    "work",
    "environment",
    "actually",
    "extend",
    "actually",
    "write",
    "plugins",
    "exist",
    "actually",
    "continue",
    "extend",
    "invest",
    "jenkins",
    "ecosystem",
    "easily",
    "distributed",
    "across",
    "multiple",
    "machines",
    "let",
    "break",
    "architecture",
    "jenkins",
    "checking",
    "remote",
    "source",
    "code",
    "repository",
    "pulls",
    "code",
    "every",
    "time",
    "commit",
    "server",
    "master",
    "server",
    "master",
    "slave",
    "run",
    "either",
    "windows",
    "linux",
    "mac",
    "os",
    "able",
    "load",
    "across",
    "environments",
    "actually",
    "gone",
    "true",
    "run",
    "tests",
    "ill",
    "send",
    "report",
    "goal",
    "report",
    "communicate",
    "back",
    "team",
    "passed",
    "failed",
    "actual",
    "process",
    "okay",
    "gon",
    "na",
    "go",
    "ahead",
    "show",
    "install",
    "jenkins",
    "local",
    "pc",
    "first",
    "thing",
    "want",
    "check",
    "java",
    "installed",
    "gon",
    "na",
    "go",
    "system",
    "see",
    "whether",
    "java",
    "jdk",
    "installed",
    "ended",
    "going",
    "system",
    "properties",
    "secondly",
    "advanced",
    "environment",
    "settings",
    "java",
    "jdk",
    "installed",
    "want",
    "double",
    "check",
    "system",
    "variables",
    "make",
    "sure",
    "java",
    "score",
    "home",
    "installed",
    "correctly",
    "well",
    "consult",
    "path",
    "also",
    "make",
    "sure",
    "link",
    "java",
    "jdk",
    "well",
    "everything",
    "installed",
    "going",
    "gon",
    "na",
    "open",
    "command",
    "window",
    "door",
    "check",
    "right",
    "command",
    "window",
    "going",
    "check",
    "gerrans",
    "sort",
    "java",
    "version",
    "version",
    "number",
    "comes",
    "back",
    "java",
    "installed",
    "get",
    "java",
    "version",
    "number",
    "come",
    "back",
    "venera",
    "right",
    "everything",
    "good",
    "next",
    "thing",
    "want",
    "go",
    "jenkins",
    "website",
    "download",
    "files",
    "gon",
    "na",
    "go",
    "jenkins",
    "dot",
    "io",
    "official",
    "drinkin",
    "website",
    "want",
    "download",
    "go",
    "jenkins",
    "io",
    "download",
    "type",
    "search",
    "bar",
    "download",
    "jenkins",
    "give",
    "link",
    "straight",
    "download",
    "page",
    "one",
    "things",
    "see",
    "lots",
    "different",
    "versions",
    "jenkins",
    "jenkins",
    "runs",
    "pretty",
    "much",
    "operating",
    "systems",
    "including",
    "windows",
    "linux",
    "mac",
    "os",
    "want",
    "select",
    "windows",
    "version",
    "already",
    "gone",
    "ahead",
    "downloaded",
    "zip",
    "file",
    "contains",
    "files",
    "need",
    "jenkins",
    "zip",
    "file",
    "expanded",
    "want",
    "double",
    "click",
    "installer",
    "file",
    "go",
    "ahead",
    "install",
    "already",
    "installed",
    "one",
    "things",
    "get",
    "message",
    "ascii",
    "want",
    "repair",
    "get",
    "install",
    "message",
    "would",
    "fresh",
    "install",
    "done",
    "files",
    "two",
    "things",
    "correctly",
    "installed",
    "onto",
    "windows",
    "computer",
    "commands",
    "jenkins",
    "web",
    "page",
    "run",
    "locally",
    "pc",
    "gon",
    "na",
    "type",
    "localhost",
    "colon",
    "8080",
    "actually",
    "take",
    "jenkins",
    "running",
    "locally",
    "pc",
    "jenkins",
    "dashboard",
    "already",
    "gone",
    "created",
    "sample",
    "jobs",
    "see",
    "listed",
    "throwing",
    "side",
    "screen",
    "let",
    "go",
    "things",
    "would",
    "want",
    "set",
    "first",
    "let",
    "go",
    "manage",
    "jenkins",
    "screen",
    "achieve",
    "go",
    "manage",
    "jenkins",
    "tab",
    "left",
    "hand",
    "side",
    "standard",
    "configuration",
    "settings",
    "going",
    "configuration",
    "systems",
    "want",
    "like",
    "remotely",
    "connecting",
    "remote",
    "jenkins",
    "environment",
    "actually",
    "install",
    "jdk",
    "remotely",
    "machine",
    "want",
    "already",
    "jdk",
    "environment",
    "already",
    "set",
    "yeah",
    "good",
    "going",
    "also",
    "see",
    "go",
    "list",
    "applications",
    "gradle",
    "ant",
    "mavin",
    "docker",
    "get",
    "tools",
    "would",
    "use",
    "devops",
    "environments",
    "many",
    "tools",
    "install",
    "plugins",
    "well",
    "let",
    "look",
    "one",
    "setting",
    "security",
    "default",
    "security",
    "jenkins",
    "user",
    "database",
    "probably",
    "allowed",
    "within",
    "company",
    "due",
    "security",
    "restrictions",
    "choose",
    "ldap",
    "allows",
    "connect",
    "active",
    "directory",
    "configuration",
    "many",
    "plugins",
    "jenkins",
    "plugins",
    "sam",
    "l",
    "authentication",
    "well",
    "auth",
    "let",
    "go",
    "ahead",
    "start",
    "new",
    "build",
    "new",
    "build",
    "job",
    "like",
    "new",
    "item",
    "select",
    "demo",
    "one",
    "create",
    "new",
    "item",
    "going",
    "use",
    "freestyle",
    "project",
    "want",
    "demo",
    "actually",
    "create",
    "bill",
    "like",
    "okay",
    "description",
    "oh",
    "gosh",
    "write",
    "put",
    "snoopy",
    "demo",
    "gon",
    "na",
    "use",
    "source",
    "code",
    "one",
    "next",
    "demo",
    "let",
    "go",
    "want",
    "go",
    "uptime",
    "going",
    "build",
    "two",
    "four",
    "win",
    "excuse",
    "magic",
    "wand",
    "let",
    "put",
    "simple",
    "command",
    "going",
    "type",
    "echo",
    "open",
    "quotes",
    "hello",
    "world",
    "put",
    "timestamp",
    "put",
    "date",
    "first",
    "time",
    "part",
    "output",
    "quotes",
    "gon",
    "na",
    "say",
    "also",
    "save",
    "simple",
    "projects",
    "want",
    "want",
    "actually",
    "go",
    "select",
    "build",
    "command",
    "actually",
    "run",
    "project",
    "built",
    "take",
    "couple",
    "minutes",
    "run",
    "project",
    "go",
    "geez",
    "see",
    "different",
    "builds",
    "happened",
    "look",
    "build",
    "history",
    "see",
    "latest",
    "history",
    "shows",
    "build",
    "executed",
    "click",
    "actually",
    "start",
    "getting",
    "information",
    "console",
    "output",
    "provide",
    "information",
    "asking",
    "instance",
    "first",
    "see",
    "build",
    "successful",
    "see",
    "output",
    "includes",
    "hello",
    "date",
    "time",
    "gon",
    "na",
    "go",
    "ahead",
    "create",
    "one",
    "project",
    "actually",
    "connect",
    "github",
    "use",
    "git",
    "command",
    "tool",
    "able",
    "build",
    "real",
    "project",
    "gon",
    "na",
    "go",
    "ahead",
    "create",
    "new",
    "item",
    "gon",
    "na",
    "call",
    "one",
    "jenkins",
    "freestyle",
    "project",
    "description",
    "demo",
    "using",
    "git",
    "actually",
    "going",
    "connect",
    "github",
    "gon",
    "na",
    "go",
    "source",
    "code",
    "management",
    "tab",
    "stay",
    "get",
    "select",
    "actually",
    "connect",
    "github",
    "go",
    "github",
    "account",
    "want",
    "go",
    "select",
    "clone",
    "download",
    "get",
    "url",
    "link",
    "copy",
    "go",
    "back",
    "jenkins",
    "add",
    "repository",
    "url",
    "paste",
    "potentials",
    "want",
    "add",
    "jenkins",
    "credentials",
    "make",
    "sure",
    "selected",
    "correctly",
    "sect",
    "add",
    "pull",
    "let",
    "change",
    "settings",
    "build",
    "going",
    "building",
    "java",
    "application",
    "slightly",
    "different",
    "set",
    "build",
    "commands",
    "want",
    "type",
    "java",
    "c",
    "book",
    "compile",
    "space",
    "file",
    "name",
    "simply",
    "java",
    "want",
    "put",
    "java",
    "space",
    "simply",
    "new",
    "line",
    "save",
    "really",
    "simple",
    "application",
    "gives",
    "understanding",
    "need",
    "saved",
    "go",
    "ahead",
    "see",
    "everything",
    "working",
    "build",
    "see",
    "happens",
    "first",
    "build",
    "select",
    "go",
    "concert",
    "output",
    "details",
    "actually",
    "see",
    "scroll",
    "finished",
    "add",
    "fish",
    "output",
    "end",
    "says",
    "success",
    "means",
    "everything",
    "built",
    "correctly",
    "able",
    "connect",
    "jenkins",
    "git",
    "repository",
    "thing",
    "great",
    "working",
    "jenkins",
    "connects",
    "many",
    "different",
    "systems",
    "really",
    "become",
    "central",
    "point",
    "devops",
    "tool",
    "set",
    "let",
    "start",
    "looking",
    "operation",
    "side",
    "dev",
    "ops",
    "environment",
    "let",
    "focus",
    "docker",
    "darker",
    "problem",
    "developer",
    "working",
    "virtual",
    "machine",
    "actual",
    "virtual",
    "machine",
    "vm",
    "complex",
    "piece",
    "software",
    "first",
    "vms",
    "around",
    "long",
    "talking",
    "less",
    "ten",
    "years",
    "typical",
    "way",
    "vm",
    "heavy",
    "usage",
    "computer",
    "essentially",
    "running",
    "everything",
    "vm",
    "plus",
    "tools",
    "run",
    "pm",
    "computer",
    "docker",
    "able",
    "control",
    "actual",
    "development",
    "environment",
    "working",
    "encumbered",
    "additional",
    "extraneous",
    "processing",
    "vm",
    "environment",
    "really",
    "stripped",
    "bare",
    "minimum",
    "need",
    "run",
    "environment",
    "using",
    "containerized",
    "solution",
    "known",
    "calm",
    "doctor",
    "essentially",
    "os",
    "level",
    "virtualization",
    "software",
    "maturity",
    "solutions",
    "started",
    "virtual",
    "environment",
    "solutions",
    "doc",
    "become",
    "de",
    "facto",
    "containers",
    "solution",
    "use",
    "building",
    "guaranteed",
    "developer",
    "building",
    "going",
    "operations",
    "team",
    "use",
    "doctor",
    "highly",
    "scalable",
    "efficient",
    "many",
    "docker",
    "environments",
    "running",
    "single",
    "piece",
    "hardware",
    "boot",
    "time",
    "incredibly",
    "short",
    "reuse",
    "data",
    "volumes",
    "easily",
    "complicated",
    "actual",
    "applications",
    "completely",
    "isolated",
    "like",
    "perfect",
    "sandbox",
    "environment",
    "let",
    "take",
    "architecture",
    "dhaka",
    "really",
    "two",
    "parts",
    "documents",
    "docket",
    "engine",
    "docket",
    "client",
    "docket",
    "engine",
    "comprised",
    "docker",
    "cli",
    "connects",
    "server",
    "daemon",
    "docker",
    "client",
    "issue",
    "commands",
    "docker",
    "daemon",
    "docket",
    "demon",
    "interact",
    "system",
    "able",
    "provide",
    "tasks",
    "tools",
    "needed",
    "able",
    "build",
    "solution",
    "actual",
    "images",
    "docker",
    "uses",
    "instructions",
    "creating",
    "docker",
    "containers",
    "actual",
    "docker",
    "container",
    "lightweight",
    "package",
    "contains",
    "dependencies",
    "needed",
    "run",
    "application",
    "created",
    "container",
    "value",
    "team",
    "want",
    "able",
    "store",
    "container",
    "team",
    "members",
    "use",
    "would",
    "use",
    "docker",
    "registry",
    "able",
    "host",
    "distribute",
    "multiple",
    "docker",
    "images",
    "video",
    "going",
    "go",
    "ahead",
    "see",
    "get",
    "docker",
    "installed",
    "running",
    "gon",
    "na",
    "go",
    "ahead",
    "open",
    "terminal",
    "window",
    "want",
    "date",
    "whether",
    "docker",
    "installed",
    "installed",
    "docker",
    "go",
    "ahead",
    "use",
    "following",
    "command",
    "enter",
    "sudo",
    "apt",
    "install",
    "danka",
    "go",
    "ahead",
    "run",
    "command",
    "install",
    "docker",
    "already",
    "installed",
    "system",
    "going",
    "right",
    "going",
    "delete",
    "going",
    "check",
    "see",
    "docker",
    "images",
    "installed",
    "system",
    "going",
    "type",
    "sudo",
    "docker",
    "images",
    "run",
    "actually",
    "show",
    "many",
    "images",
    "right",
    "images",
    "go",
    "ahead",
    "install",
    "image",
    "two",
    "ways",
    "create",
    "image",
    "dog",
    "environment",
    "one",
    "get",
    "one",
    "docker",
    "hub",
    "create",
    "image",
    "let",
    "go",
    "ahead",
    "get",
    "one",
    "docker",
    "hub",
    "command",
    "line",
    "want",
    "write",
    "suno",
    "docker",
    "pull",
    "redis",
    "colon",
    "actually",
    "write",
    "name",
    "actual",
    "file",
    "going",
    "connecting",
    "daka",
    "gon",
    "na",
    "go",
    "ahead",
    "go",
    "docker",
    "hub",
    "already",
    "logged",
    "user",
    "id",
    "account",
    "gon",
    "na",
    "go",
    "docker",
    "hub",
    "docker",
    "calm",
    "website",
    "address",
    "already",
    "logged",
    "simple",
    "account",
    "actually",
    "see",
    "different",
    "repositories",
    "already",
    "created",
    "clicked",
    "explorer",
    "button",
    "see",
    "redis",
    "image",
    "different",
    "commands",
    "actually",
    "use",
    "different",
    "variations",
    "create",
    "500",
    "version",
    "version",
    "version",
    "select",
    "latest",
    "allow",
    "pull",
    "latest",
    "version",
    "even",
    "updated",
    "going",
    "go",
    "back",
    "command",
    "line",
    "dude",
    "latest",
    "gon",
    "na",
    "happen",
    "gon",
    "na",
    "pull",
    "files",
    "live",
    "internet",
    "create",
    "docker",
    "image",
    "gon",
    "na",
    "take",
    "minutes",
    "course",
    "internet",
    "speed",
    "faster",
    "happen",
    "lot",
    "faster",
    "oh",
    "yeah",
    "everything",
    "downloaded",
    "great",
    "let",
    "go",
    "check",
    "see",
    "image",
    "added",
    "darker",
    "sudo",
    "docket",
    "images",
    "actually",
    "see",
    "lettuce",
    "rattus",
    "rattus",
    "image",
    "given",
    "default",
    "image",
    "id",
    "size",
    "docker",
    "image",
    "tag",
    "latest",
    "latest",
    "version",
    "redis",
    "checking",
    "see",
    "images",
    "running",
    "let",
    "go",
    "ahead",
    "create",
    "container",
    "command",
    "sudo",
    "docker",
    "run",
    "think",
    "dot",
    "80",
    "colon",
    "80",
    "space",
    "redis",
    "colon",
    "latest",
    "let",
    "run",
    "got",
    "error",
    "message",
    "okay",
    "know",
    "real",
    "demo",
    "really",
    "life",
    "going",
    "clear",
    "screen",
    "let",
    "write",
    "sudo",
    "docker",
    "run",
    "p",
    "colon",
    "8080",
    "radius",
    "dog",
    "lead",
    "colitis",
    "everything",
    "running",
    "awesome",
    "let",
    "go",
    "ahead",
    "check",
    "actually",
    "image",
    "running",
    "docker",
    "sudo",
    "docker",
    "ps",
    "see",
    "actually",
    "latest",
    "reddest",
    "version",
    "created",
    "16",
    "seconds",
    "ago",
    "new",
    "container",
    "id",
    "port",
    "created",
    "let",
    "see",
    "view",
    "running",
    "containers",
    "sudo",
    "docker",
    "ps",
    "hey",
    "created",
    "container",
    "42",
    "seconds",
    "ago",
    "one",
    "young",
    "notice",
    "name",
    "dock",
    "created",
    "automatically",
    "daka",
    "stupefied",
    "engelbart",
    "name",
    "let",
    "change",
    "names",
    "something",
    "meaningful",
    "work",
    "actually",
    "fairly",
    "easy",
    "gon",
    "na",
    "final",
    "tasks",
    "going",
    "type",
    "sudo",
    "darker",
    "command",
    "renamed",
    "want",
    "copy",
    "old",
    "name",
    "put",
    "old",
    "name",
    "space",
    "put",
    "want",
    "new",
    "name",
    "case",
    "gon",
    "na",
    "make",
    "simply",
    "learn",
    "run",
    "command",
    "good",
    "let",
    "validate",
    "everything",
    "changed",
    "sudo",
    "yes",
    "ps",
    "everything",
    "renamed",
    "gets",
    "started",
    "working",
    "let",
    "move",
    "ansible",
    "ansible",
    "ability",
    "able",
    "deploy",
    "software",
    "across",
    "network",
    "pretty",
    "hard",
    "know",
    "could",
    "guarantee",
    "web",
    "servers",
    "consistent",
    "database",
    "environments",
    "consistent",
    "okay",
    "small",
    "environment",
    "actually",
    "start",
    "getting",
    "complex",
    "environments",
    "became",
    "difficult",
    "manage",
    "ansible",
    "code",
    "allows",
    "able",
    "consistently",
    "reliably",
    "create",
    "stand",
    "environments",
    "need",
    "able",
    "store",
    "code",
    "production",
    "whether",
    "require",
    "one",
    "server",
    "environment",
    "need",
    "thousand",
    "server",
    "environments",
    "using",
    "tools",
    "like",
    "ansible",
    "allow",
    "able",
    "consistently",
    "deploy",
    "environments",
    "look",
    "essentially",
    "ansible",
    "configuration",
    "management",
    "tool",
    "allows",
    "able",
    "deploy",
    "automatically",
    "large",
    "variety",
    "environments",
    "actual",
    "tool",
    "push",
    "based",
    "configuration",
    "tool",
    "agentless",
    "tool",
    "communication",
    "coming",
    "back",
    "health",
    "environment",
    "actually",
    "tools",
    "cover",
    "later",
    "video",
    "cover",
    "well",
    "consistency",
    "product",
    "performance",
    "know",
    "using",
    "ansible",
    "going",
    "work",
    "consistent",
    "product",
    "uses",
    "ssh",
    "secure",
    "connections",
    "matter",
    "whether",
    "one",
    "thousand",
    "pieces",
    "hardware",
    "looking",
    "configure",
    "actually",
    "rest",
    "assured",
    "security",
    "infringement",
    "use",
    "ssh",
    "looking",
    "architecture",
    "ansible",
    "simple",
    "architecture",
    "antral",
    "management",
    "node",
    "playbooks",
    "contains",
    "instructions",
    "would",
    "environment",
    "playbook",
    "pushed",
    "different",
    "nodes",
    "contain",
    "hardware",
    "wish",
    "configure",
    "actual",
    "module",
    "collection",
    "configuration",
    "code",
    "playbooks",
    "instructions",
    "configuration",
    "inventory",
    "document",
    "different",
    "groups",
    "hardware",
    "within",
    "groups",
    "pushing",
    "going",
    "go",
    "ahead",
    "install",
    "ansible",
    "system",
    "actually",
    "running",
    "environment",
    "linux",
    "environment",
    "right",
    "must",
    "return",
    "extended",
    "note",
    "going",
    "go",
    "terminal",
    "window",
    "gon",
    "na",
    "everything",
    "master",
    "node",
    "first",
    "steps",
    "want",
    "actually",
    "go",
    "ahead",
    "install",
    "ansible",
    "installing",
    "sudo",
    "yum",
    "install",
    "ansible",
    "goes",
    "ahead",
    "downloads",
    "files",
    "need",
    "starts",
    "run",
    "installation",
    "let",
    "go",
    "ahead",
    "see",
    "installed",
    "correctly",
    "type",
    "vi",
    "etc",
    "slash",
    "hosts",
    "see",
    "actually",
    "default",
    "ansible",
    "hosts",
    "already",
    "running",
    "fantastic",
    "want",
    "grab",
    "ip",
    "address",
    "ansible",
    "servers",
    "ip",
    "address",
    "password",
    "root",
    "access",
    "ip",
    "specific",
    "local",
    "clients",
    "client",
    "system",
    "typing",
    "config",
    "actually",
    "see",
    "ip",
    "address",
    "matches",
    "want",
    "make",
    "sure",
    "ip",
    "address",
    "correct",
    "environment",
    "essentially",
    "node",
    "ansible",
    "environment",
    "ip",
    "address",
    "password",
    "node",
    "access",
    "affect",
    "correctly",
    "gon",
    "na",
    "hit",
    "colon",
    "bottom",
    "screen",
    "guess",
    "actually",
    "ansible",
    "going",
    "create",
    "playbook",
    "able",
    "run",
    "sample",
    "script",
    "gon",
    "na",
    "call",
    "vi",
    "sample",
    "dot",
    "yml",
    "sample",
    "playbook",
    "name",
    "host",
    "right",
    "user",
    "task",
    "task",
    "see",
    "looking",
    "create",
    "virtual",
    "web",
    "page",
    "content",
    "welcome",
    "actually",
    "see",
    "web",
    "page",
    "loading",
    "written",
    "basic",
    "xml",
    "format",
    "called",
    "weimar",
    "sounds",
    "yet",
    "another",
    "markup",
    "language",
    "flexible",
    "easy",
    "learn",
    "let",
    "see",
    "go",
    "ahead",
    "actually",
    "run",
    "playbook",
    "actually",
    "see",
    "action",
    "going",
    "type",
    "ansible",
    "playbook",
    "sample",
    "dot",
    "yml",
    "run",
    "sample",
    "white",
    "male",
    "script",
    "syntax",
    "check",
    "every",
    "time",
    "pencil",
    "playbook",
    "sampled",
    "issues",
    "going",
    "try",
    "go",
    "writes",
    "command",
    "ants",
    "playbook",
    "sampled",
    "away",
    "mel",
    "syntax",
    "check",
    "run",
    "actual",
    "playbook",
    "let",
    "see",
    "works",
    "yes",
    "everything",
    "working",
    "take",
    "moment",
    "everything",
    "initialize",
    "want",
    "able",
    "go",
    "back",
    "web",
    "browser",
    "see",
    "whether",
    "able",
    "create",
    "default",
    "web",
    "page",
    "word",
    "welcome",
    "command",
    "created",
    "playbook",
    "word",
    "welcome",
    "exactly",
    "planned",
    "go",
    "back",
    "review",
    "playbook",
    "created",
    "validate",
    "let",
    "go",
    "back",
    "screen",
    "let",
    "go",
    "look",
    "llamo",
    "page",
    "go",
    "see",
    "word",
    "welcome",
    "exactly",
    "expected",
    "step",
    "final",
    "area",
    "network",
    "monitoring",
    "using",
    "tool",
    "called",
    "nagios",
    "years",
    "sometimes",
    "know",
    "whether",
    "network",
    "working",
    "fact",
    "worst",
    "case",
    "scenario",
    "customers",
    "caught",
    "hey",
    "website",
    "working",
    "know",
    "challenges",
    "know",
    "usage",
    "server",
    "managed",
    "know",
    "whether",
    "80",
    "usage",
    "utilization",
    "server",
    "50",
    "difficult",
    "get",
    "information",
    "easily",
    "nagios",
    "able",
    "set",
    "email",
    "notifications",
    "notifications",
    "allow",
    "stay",
    "ahead",
    "issues",
    "would",
    "within",
    "environment",
    "example",
    "looking",
    "memory",
    "utilization",
    "receive",
    "notification",
    "telling",
    "memory",
    "almost",
    "full",
    "particular",
    "server",
    "setting",
    "new",
    "server",
    "instance",
    "use",
    "hansel",
    "set",
    "another",
    "server",
    "tools",
    "covering",
    "nagios",
    "tool",
    "specifically",
    "monitoring",
    "systems",
    "servers",
    "networks",
    "within",
    "infrastructure",
    "easy",
    "use",
    "comprehensive",
    "monitoring",
    "tools",
    "could",
    "set",
    "control",
    "highly",
    "available",
    "designed",
    "specifically",
    "problem",
    "remediation",
    "want",
    "set",
    "eyes",
    "ears",
    "network",
    "without",
    "constantly",
    "monitor",
    "network",
    "way",
    "negus",
    "works",
    "constantly",
    "checking",
    "environment",
    "know",
    "server",
    "constantly",
    "checking",
    "status",
    "systems",
    "able",
    "create",
    "visualization",
    "tools",
    "data",
    "actually",
    "make",
    "quick",
    "responses",
    "even",
    "send",
    "alerts",
    "email",
    "push",
    "notification",
    "alert",
    "video",
    "going",
    "take",
    "steps",
    "need",
    "follow",
    "want",
    "set",
    "nagios",
    "dashboard",
    "gives",
    "provides",
    "help",
    "help",
    "monitor",
    "network",
    "first",
    "thing",
    "want",
    "go",
    "nasscom",
    "either",
    "download",
    "application",
    "actually",
    "gon",
    "na",
    "actually",
    "log",
    "actual",
    "application",
    "running",
    "nine",
    "years",
    "website",
    "want",
    "go",
    "use",
    "na",
    "demos",
    "doc",
    "magoo",
    "comm",
    "use",
    "administration",
    "normal",
    "user",
    "access",
    "ids",
    "nagios",
    "provides",
    "gone",
    "ahead",
    "actually",
    "pre",
    "filled",
    "id",
    "years",
    "admin",
    "must",
    "admin",
    "username",
    "password",
    "course",
    "brings",
    "us",
    "nagios",
    "dashboard",
    "gon",
    "na",
    "notice",
    "three",
    "distinct",
    "areas",
    "want",
    "focus",
    "fixed",
    "sources",
    "actual",
    "fiscal",
    "hardware",
    "monitoring",
    "alert",
    "summary",
    "abnormal",
    "behavior",
    "let",
    "go",
    "check",
    "fixed",
    "sources",
    "default",
    "fixed",
    "sources",
    "go",
    "one",
    "tulsa",
    "go",
    "ahead",
    "set",
    "additional",
    "sources",
    "see",
    "surprise",
    "quick",
    "dashboard",
    "activity",
    "last",
    "30",
    "minutes",
    "amount",
    "usage",
    "disk",
    "go",
    "ahead",
    "behavior",
    "tab",
    "modify",
    "monitoring",
    "updating",
    "actual",
    "sauce",
    "data",
    "reports",
    "sources",
    "well",
    "actually",
    "user",
    "reports",
    "queries",
    "alerts",
    "use",
    "go",
    "back",
    "board",
    "though",
    "fix",
    "sources",
    "look",
    "lo",
    "summary",
    "expand",
    "summary",
    "provides",
    "overview",
    "alerts",
    "managed",
    "others",
    "see",
    "default",
    "alerts",
    "created",
    "part",
    "test",
    "environment",
    "easy",
    "create",
    "alerts",
    "instance",
    "see",
    "chicago",
    "sauce",
    "used",
    "merge",
    "alert",
    "actually",
    "setting",
    "sources",
    "see",
    "alert",
    "point",
    "specifically",
    "source",
    "pulling",
    "data",
    "powerpoint",
    "presentation",
    "went",
    "actually",
    "see",
    "nagios",
    "aji",
    "center",
    "collecting",
    "information",
    "actually",
    "pulling",
    "information",
    "different",
    "networks",
    "environments",
    "stores",
    "data",
    "locally",
    "able",
    "create",
    "visualizations",
    "alerts",
    "quick",
    "overview",
    "alert",
    "inside",
    "summary",
    "actually",
    "shows",
    "green",
    "shows",
    "alert",
    "actually",
    "good",
    "three",
    "different",
    "types",
    "colors",
    "green",
    "yellow",
    "gray",
    "see",
    "critical",
    "alerts",
    "right",
    "see",
    "thing",
    "happening",
    "abnormal",
    "behavior",
    "well",
    "actually",
    "goes",
    "ahead",
    "shows",
    "different",
    "colors",
    "available",
    "thing",
    "great",
    "soon",
    "warning",
    "status",
    "created",
    "allows",
    "trigger",
    "email",
    "notification",
    "gets",
    "sent",
    "information",
    "email",
    "action",
    "alerts",
    "important",
    "alert",
    "pulling",
    "information",
    "fixed",
    "sources",
    "behavior",
    "gon",
    "na",
    "zero",
    "show",
    "specific",
    "known",
    "behavior",
    "would",
    "happening",
    "fixed",
    "sources",
    "instance",
    "around",
    "bandwidth",
    "everything",
    "green",
    "everything",
    "looking",
    "good",
    "going",
    "source",
    "tab",
    "gon",
    "na",
    "look",
    "bandwidth",
    "graph",
    "detailed",
    "visualization",
    "bandwidth",
    "playing",
    "chicago",
    "fixed",
    "source",
    "create",
    "fix",
    "sources",
    "able",
    "see",
    "actual",
    "usage",
    "bandwidth",
    "graph",
    "fixed",
    "source",
    "screen",
    "screen",
    "kind",
    "popular",
    "information",
    "network",
    "engineers",
    "looking",
    "assess",
    "network",
    "used",
    "hit",
    "mickey",
    "suck",
    "reports",
    "actually",
    "come",
    "either",
    "create",
    "custom",
    "report",
    "use",
    "one",
    "many",
    "saved",
    "reports",
    "already",
    "new",
    "scenarios",
    "use",
    "save",
    "reports",
    "able",
    "get",
    "get",
    "great",
    "visualization",
    "tools",
    "nagios",
    "provides",
    "quickly",
    "able",
    "action",
    "information",
    "visually",
    "looking",
    "reports",
    "absolutely",
    "fantastic",
    "really",
    "good",
    "send",
    "team",
    "members",
    "would",
    "interest",
    "understanding",
    "network",
    "usage",
    "different",
    "areas",
    "imagining",
    "want",
    "get",
    "really",
    "specific",
    "type",
    "data",
    "want",
    "report",
    "actually",
    "go",
    "create",
    "query",
    "query",
    "customized",
    "really",
    "however",
    "want",
    "work",
    "points",
    "view",
    "specific",
    "insights",
    "different",
    "data",
    "points",
    "interact",
    "easy",
    "create",
    "lot",
    "created",
    "see",
    "screen",
    "already",
    "see",
    "left",
    "hand",
    "side",
    "edit",
    "button",
    "allows",
    "edit",
    "modify",
    "points",
    "view",
    "quickly",
    "going",
    "go",
    "ahead",
    "create",
    "one",
    "right",
    "going",
    "put",
    "one",
    "put",
    "limiter",
    "ip",
    "address",
    "gon",
    "na",
    "change",
    "dead",
    "lifetime",
    "united",
    "alice",
    "days",
    "week",
    "24",
    "hours",
    "fine",
    "go",
    "ahead",
    "see",
    "screen",
    "see",
    "lot",
    "already",
    "created",
    "select",
    "one",
    "edit",
    "ftp",
    "see",
    "time",
    "looks",
    "good",
    "query",
    "show",
    "saved",
    "queries",
    "created",
    "actually",
    "go",
    "modify",
    "query",
    "easy",
    "go",
    "create",
    "query",
    "really",
    "essentially",
    "ask",
    "pull",
    "kind",
    "information",
    "would",
    "looking",
    "analyzing",
    "captured",
    "yes",
    "dictionary",
    "use",
    "use",
    "website",
    "allows",
    "get",
    "better",
    "access",
    "sunny",
    "querying",
    "constructs",
    "put",
    "together",
    "alerts",
    "opinion",
    "important",
    "part",
    "attractions",
    "interact",
    "data",
    "sources",
    "trigger",
    "alerts",
    "get",
    "sent",
    "go",
    "back",
    "presentation",
    "see",
    "analyzing",
    "lot",
    "data",
    "data",
    "gets",
    "sent",
    "alert",
    "allows",
    "immediately",
    "understand",
    "need",
    "able",
    "go",
    "check",
    "network",
    "really",
    "using",
    "negatives",
    "need",
    "alerts",
    "going",
    "going",
    "steps",
    "used",
    "create",
    "alert",
    "gon",
    "na",
    "light",
    "gon",
    "na",
    "analyzing",
    "bytes",
    "traffic",
    "final",
    "step",
    "actually",
    "go",
    "ahead",
    "save",
    "alert",
    "really",
    "put",
    "alert",
    "notification",
    "model",
    "method",
    "going",
    "default",
    "use",
    "email",
    "great",
    "use",
    "aggie",
    "ice",
    "alert",
    "know",
    "smp",
    "simple",
    "network",
    "protocol",
    "use",
    "command",
    "email",
    "definitely",
    "easiest",
    "one",
    "use",
    "getting",
    "started",
    "would",
    "recommend",
    "use",
    "email",
    "gon",
    "na",
    "go",
    "ahead",
    "gon",
    "na",
    "create",
    "one",
    "want",
    "workflow",
    "going",
    "set",
    "way",
    "gon",
    "na",
    "manage",
    "yeah",
    "thresholds",
    "gon",
    "na",
    "34",
    "bytes",
    "critical",
    "threshold",
    "50",
    "bytes",
    "small",
    "expect",
    "alert",
    "triggered",
    "going",
    "use",
    "default",
    "emails",
    "send",
    "see",
    "default",
    "new",
    "alert",
    "painting",
    "reason",
    "impending",
    "reviewed",
    "system",
    "make",
    "sure",
    "meets",
    "standards",
    "think",
    "problem",
    "looking",
    "different",
    "commands",
    "go",
    "back",
    "get",
    "alerts",
    "negatives",
    "networks",
    "connects",
    "different",
    "networks",
    "right",
    "configuration",
    "screen",
    "thing",
    "smp",
    "receiver",
    "use",
    "simple",
    "network",
    "management",
    "protocol",
    "connect",
    "receivers",
    "command",
    "tab",
    "allows",
    "us",
    "create",
    "scripts",
    "triggered",
    "alerts",
    "get",
    "created",
    "may",
    "want",
    "something",
    "triggers",
    "rebuild",
    "network",
    "environment",
    "would",
    "allow",
    "authenticate",
    "systems",
    "course",
    "things",
    "set",
    "negev",
    "dashboard",
    "know",
    "things",
    "like",
    "information",
    "work",
    "profile",
    "know",
    "defaults",
    "language",
    "username",
    "thing",
    "system",
    "administrator",
    "get",
    "go",
    "set",
    "defaults",
    "sysadmin",
    "ldap",
    "ad",
    "integration",
    "simple",
    "sam",
    "l",
    "authentication",
    "go",
    "back",
    "main",
    "dashboard",
    "scroll",
    "actually",
    "see",
    "till",
    "alert",
    "approved",
    "alert",
    "creating",
    "forum",
    "saying",
    "critical",
    "50",
    "bytes",
    "information",
    "sent",
    "test",
    "network",
    "fix",
    "source",
    "chicago",
    "surprise",
    "50",
    "bytes",
    "easy",
    "good",
    "see",
    "system",
    "working",
    "correctly",
    "new",
    "years",
    "brandman",
    "works",
    "next",
    "step",
    "able",
    "set",
    "configure",
    "negi",
    "ohs",
    "wrong",
    "infrastructure",
    "covered",
    "everything",
    "need",
    "start",
    "devops",
    "environment",
    "encourage",
    "able",
    "go",
    "play",
    "different",
    "tools",
    "questions",
    "please",
    "post",
    "comments",
    "always",
    "respond",
    "questions",
    "team",
    "people",
    "looking",
    "questions",
    "today",
    "like",
    "video",
    "significant",
    "number",
    "videos",
    "either",
    "go",
    "throughout",
    "yo",
    "cat",
    "blog",
    "hit",
    "sub",
    "subscribe",
    "like",
    "button",
    "notified",
    "new",
    "videos",
    "drop",
    "great",
    "day",
    "devops",
    "land",
    "hi",
    "like",
    "video",
    "subscribe",
    "simple",
    "learn",
    "youtube",
    "channel",
    "click",
    "watch",
    "similar",
    "videos",
    "de",
    "nerd",
    "get",
    "certified",
    "click"
  ],
  "keywords": [
    "simply",
    "learn",
    "gon",
    "na",
    "go",
    "set",
    "dev",
    "ops",
    "team",
    "need",
    "able",
    "actually",
    "tools",
    "within",
    "also",
    "going",
    "take",
    "time",
    "get",
    "good",
    "understanding",
    "instructions",
    "setup",
    "let",
    "started",
    "process",
    "delivery",
    "well",
    "model",
    "called",
    "waterfall",
    "building",
    "solutions",
    "project",
    "look",
    "user",
    "testing",
    "software",
    "development",
    "around",
    "quite",
    "used",
    "lot",
    "really",
    "long",
    "write",
    "code",
    "deploy",
    "difficult",
    "problems",
    "provide",
    "years",
    "new",
    "agile",
    "way",
    "actual",
    "work",
    "done",
    "would",
    "changes",
    "part",
    "person",
    "developer",
    "release",
    "management",
    "one",
    "working",
    "great",
    "thing",
    "even",
    "two",
    "four",
    "goal",
    "every",
    "much",
    "problem",
    "devops",
    "system",
    "computer",
    "operations",
    "developers",
    "environment",
    "test",
    "production",
    "run",
    "happen",
    "often",
    "different",
    "hardware",
    "may",
    "applications",
    "installed",
    "event",
    "know",
    "whether",
    "address",
    "key",
    "continuous",
    "integration",
    "means",
    "essentially",
    "teams",
    "releases",
    "see",
    "many",
    "50",
    "environments",
    "build",
    "put",
    "ability",
    "using",
    "available",
    "us",
    "10",
    "move",
    "open",
    "source",
    "benefits",
    "want",
    "use",
    "next",
    "start",
    "focus",
    "security",
    "line",
    "value",
    "number",
    "areas",
    "first",
    "allows",
    "page",
    "deployment",
    "easier",
    "writing",
    "running",
    "needed",
    "fixed",
    "quickly",
    "gets",
    "looking",
    "validate",
    "step",
    "merge",
    "ahead",
    "application",
    "back",
    "monitoring",
    "break",
    "instance",
    "tool",
    "managed",
    "mavin",
    "selenium",
    "jenkins",
    "ansible",
    "docker",
    "network",
    "like",
    "select",
    "right",
    "git",
    "version",
    "control",
    "check",
    "server",
    "things",
    "makes",
    "solution",
    "multiple",
    "yes",
    "remote",
    "hub",
    "connect",
    "download",
    "local",
    "pc",
    "easy",
    "architecture",
    "directory",
    "area",
    "repository",
    "add",
    "files",
    "command",
    "commit",
    "final",
    "pull",
    "latest",
    "locally",
    "pulling",
    "okay",
    "create",
    "file",
    "make",
    "commands",
    "give",
    "folder",
    "green",
    "windows",
    "click",
    "dot",
    "text",
    "class",
    "default",
    "type",
    "welcome",
    "save",
    "says",
    "shows",
    "item",
    "created",
    "demo",
    "java",
    "sure",
    "everything",
    "correctly",
    "output",
    "manage",
    "allow",
    "access",
    "pom",
    "configuration",
    "plugins",
    "show",
    "maven",
    "jdk",
    "web",
    "browser",
    "chrome",
    "website",
    "install",
    "downloaded",
    "path",
    "settings",
    "edit",
    "variable",
    "setting",
    "already",
    "link",
    "copy",
    "paste",
    "systems",
    "moment",
    "name",
    "call",
    "change",
    "gone",
    "id",
    "hit",
    "screen",
    "main",
    "fantastic",
    "tests",
    "minutes",
    "sent",
    "script",
    "webdriver",
    "driver",
    "provides",
    "window",
    "oh",
    "eclipse",
    "chromium",
    "search",
    "button",
    "could",
    "quick",
    "amazon",
    "specific",
    "element",
    "tab",
    "seconds",
    "data",
    "send",
    "colon",
    "dashboard",
    "sample",
    "simple",
    "information",
    "usage",
    "docket",
    "images",
    "container",
    "video",
    "sudo",
    "image",
    "playbook",
    "ip",
    "nagios",
    "email",
    "alerts",
    "alert",
    "sources",
    "behavior",
    "reports",
    "query",
    "bytes"
  ]
}