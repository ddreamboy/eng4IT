{
  "text": "if you're looking to break into devops\nor want to level up your skills you're\nin the right place today I'm sharing the\ncomplete devops road map I'll walk you\nthrough the essential skills you need\nthe tools I personally recommend and how\nmuch time you should spend on each\nassuming you dedicate 3 to 5 hours of\nstudying every day this road map should\ntake you about 10 to 14 months to\ncomplete let's Jump Right\nIn first off we have Linux fundamentals\nLinux is the backbone of servers and Dev\nvment environments as a devops engineer\nyou'll be setting up and maintaining the\ninfrastructure where applications run\nmost servers use Linux so getting\ncomfortable with it especially the\ncommand line is crucial I recommend\nstarting with learning bash which is the\nmost commonly used shell and scripting\nlanguage in Linux spend about 2 to 3\nweeks on this make sure to learn basic\nLinux commands for working with the file\nsystem permissions and ownership\nprocesses and signals as well as\nmanaging packages next you need to learn\nnetworking Concepts networking is all\nabout how computers communicate with\neach other think IP addresses and\nprotocols you need to understand how\ndata moves around security and\ntroubleshoot network issues to get\nhands-on experience I recommend using\nwihar dedicate around two weeks on this\nmake sure to learn Concepts like OSI and\ntcpip models IP addressing and\nsubnetting DNS and DHCP networking\nprotocols like HTTP https FTP and SSH\nfirewalls and security groups and basic\nNetwork troubleshooting using tools like\nPing trace route and net stat now let's\ntalk about git git is a version control\nsystem that lets you track changes in\nyour code and collaborate with others\nit's essential for working on projects\nwith a team and managing your code\neffectively spend one to two weeks\ngetting comfortable with Git make sure\nto learn basic git commands like clone\ncommit push and pull branching and\nmerging resolving merge conf\nworking with remote repositories and so\non after that you should dive into\nprogramming languages programming\nlanguages like python Ruby and go are\nused to automate tasks and manage\nconfigurations while there are several\nother languages I personally recommend\npython for its Simplicity powerful\nlibraries and versatility dedicate four\nto 6 weeks to build a solid foundation\nin Python make sure to Learn Python\nsyntax and data structures like lists\ndictionaries sets and topples modules\nand packages learn how to write and\nexecute Python scripts work with files\nhandle errors write automation scripts\nand so on by the way to help you on this\njourney I've created a free\nsupplementary PDF that breaks down the\nspecific Concepts you need to learn for\neach skill it's a great resource to\nreview your progress find gaps in your\nknowledge and prepare for interviews you\ncan find the link in the description box\nalso I have a bunch of tutorials on this\nchannel and complete courses on my\nwebsite if you're looking for structured\nlearning again links are in the\ndescription box moving on let's talk\nabout Cloud providers Cloud providers\nlike AWS Azure and Google Cloud platform\noffer a range of services for building\nand deploying applications if you're\njust starting out I recommend focusing\non one cloud provider and AWS is a great\nchoice because it's the most widely used\nspend about 4 to 6 weeks on this make\nsure to learn how to launch configure\nand manage virtual servers store and\nmanage data get familiar with is\nmanaging users groups and roles and how\nto set up and manage isolated networks\nnext up is containerization\ncontainerization is all about packaging\nan application and its dependencies into\na container to ensure it runs the same\neverywhere Docker is the go-to tool for\nthis spend about 3 to four weeks getting\ncomfortable with Docker learn how to\ncreate Docker images get familiar with\nstarting stopping and managing\ncontainers learn how to write Docker\nfiles explore how to define and run\nmulticontainer applications using Docker\ncompos and so on now let's dive into\ncontinuous integration and deployment or\ncicd cicd automates the integration and\ndeployment of code changes allowing for\nfrequent and reliable releases genkins\nis a powerful tool for setting up cicd\npipelines but other popular tools\ninclude gitlab cicd Circle CI and Travis\nC if you're starting out just focus on\nJenkins for its versatility and strong\nCommunity Support dedicate 3 to four\nweeks on this make sure to understand\nhow to create and manage Jenkins\npipelines get familiar with writing\nJenkins files learn how to integrate\nautomated tests into your pipelines\nunderstand how to automate the build\nprocess for your applications explore\nhow to automate the deployment of your\napplications to various environments and\nso on moving forward let's discuss\norchestration and management\norchestration tools like kubernetes and\nHelm help automate the deployment\nscaling and management of containerized\napplications these tools are essential\nfor managing complex applications in\nproduction start with kubernetes and\nspend about four to 6 weeks on it make\nsure to learn about the overall\narchitecture including the master node\nand worker nodes and how they interact\nunderstand the key components such as\npods services and deployments get\nfamiliar with managing resources learn\nhow to scale your applications as well\nas the networking model in kubernetes\nnext we have networking and\ninfrastructure services this involves\nsetting up and managing services like\nreverse Proxes forward Proxes caching\nservers firewalls and load balancers I\nrecommend using engine X for handling\nreverse Proxes and load balancing give\nthis about 3 to 4 weeks of your time\nlearn how to set up and configure engine\nX as a reverse proxy understand how to\nconfigure it to act as a forward proxy\nexplore caching strategies to improve\nthe performance and how to configure\nfirewalls and security groups now let's\ntalk about configuration management\nconfiguration management tools like\nanible puppet and Chef automate the\ndeployment configuration and management\nof servers and applications if you're\nstarting out just focus on anible due to\nits Simplicity and Powerful features\nspend 3 to four weeks on this learn how\nto write anible playbooks understand how\nto use roles and modules learn to manage\nvariables and templates and so on moving\non let's discuss infrastructure as code\nor IAC IAC involves managing and\nprovisioning Computing infrastructure\nthrough machine readable configuration\nfiles popular tools include terraform\nAWS cloud formation and palumi if you're\nstarting out just focus on terraform for\nits flexibility and widespread use\ndedicate 3 to four weeks to build a\nsolid foundation in terraform understand\nthe basic concepts like providers and\nresources get familiar with writing\nterraform configuration files learn how\nto use terraform modules as well as\nadvanced concepts such as workspaces and\nremote State finally let's talk about\nmonitoring and logging monitoring and\nlogin tools such as Prometheus Graff elk\nstack and fluent D track the performance\nand health of your applications and\ninfrastructure if you're starting out\njust focus on Prometheus and grafana\nspend about 3 to four weeks on these\ntools learn the architecture and data\nmodel of Prometheus get familiar with\ncollecting metrics from various sources\nlearn how to write queries to extract\nand analyze metrics data understand how\nto set up alerts and so on so if you\ndedicate 3 to 5 hours every day you can\nfollow this road map and pick up all the\nskills you need to become a devops\nengineer in about 10 to 14 months if you\nhave any questions please let me know in\nthe comments below and I'll do my best\nto answer you right here or in my future\nvideos If you enjoyed this video please\ngive it a like And subscribe for more\nuseful content thanks for watching\n",
  "words": [
    "looking",
    "break",
    "devops",
    "want",
    "level",
    "skills",
    "right",
    "place",
    "today",
    "sharing",
    "complete",
    "devops",
    "road",
    "map",
    "walk",
    "essential",
    "skills",
    "need",
    "tools",
    "personally",
    "recommend",
    "much",
    "time",
    "spend",
    "assuming",
    "dedicate",
    "3",
    "5",
    "hours",
    "studying",
    "every",
    "day",
    "road",
    "map",
    "take",
    "10",
    "14",
    "months",
    "complete",
    "let",
    "jump",
    "right",
    "first",
    "linux",
    "fundamentals",
    "linux",
    "backbone",
    "servers",
    "dev",
    "vment",
    "environments",
    "devops",
    "engineer",
    "setting",
    "maintaining",
    "infrastructure",
    "applications",
    "run",
    "servers",
    "use",
    "linux",
    "getting",
    "comfortable",
    "especially",
    "command",
    "line",
    "crucial",
    "recommend",
    "starting",
    "learning",
    "bash",
    "commonly",
    "used",
    "shell",
    "scripting",
    "language",
    "linux",
    "spend",
    "2",
    "3",
    "weeks",
    "make",
    "sure",
    "learn",
    "basic",
    "linux",
    "commands",
    "working",
    "file",
    "system",
    "permissions",
    "ownership",
    "processes",
    "signals",
    "well",
    "managing",
    "packages",
    "next",
    "need",
    "learn",
    "networking",
    "concepts",
    "networking",
    "computers",
    "communicate",
    "think",
    "ip",
    "addresses",
    "protocols",
    "need",
    "understand",
    "data",
    "moves",
    "around",
    "security",
    "troubleshoot",
    "network",
    "issues",
    "get",
    "experience",
    "recommend",
    "using",
    "wihar",
    "dedicate",
    "around",
    "two",
    "weeks",
    "make",
    "sure",
    "learn",
    "concepts",
    "like",
    "osi",
    "tcpip",
    "models",
    "ip",
    "addressing",
    "subnetting",
    "dns",
    "dhcp",
    "networking",
    "protocols",
    "like",
    "http",
    "https",
    "ftp",
    "ssh",
    "firewalls",
    "security",
    "groups",
    "basic",
    "network",
    "troubleshooting",
    "using",
    "tools",
    "like",
    "ping",
    "trace",
    "route",
    "net",
    "stat",
    "let",
    "talk",
    "git",
    "git",
    "version",
    "control",
    "system",
    "lets",
    "track",
    "changes",
    "code",
    "collaborate",
    "others",
    "essential",
    "working",
    "projects",
    "team",
    "managing",
    "code",
    "effectively",
    "spend",
    "one",
    "two",
    "weeks",
    "getting",
    "comfortable",
    "git",
    "make",
    "sure",
    "learn",
    "basic",
    "git",
    "commands",
    "like",
    "clone",
    "commit",
    "push",
    "pull",
    "branching",
    "merging",
    "resolving",
    "merge",
    "conf",
    "working",
    "remote",
    "repositories",
    "dive",
    "programming",
    "languages",
    "programming",
    "languages",
    "like",
    "python",
    "ruby",
    "go",
    "used",
    "automate",
    "tasks",
    "manage",
    "configurations",
    "several",
    "languages",
    "personally",
    "recommend",
    "python",
    "simplicity",
    "powerful",
    "libraries",
    "versatility",
    "dedicate",
    "four",
    "6",
    "weeks",
    "build",
    "solid",
    "foundation",
    "python",
    "make",
    "sure",
    "learn",
    "python",
    "syntax",
    "data",
    "structures",
    "like",
    "lists",
    "dictionaries",
    "sets",
    "topples",
    "modules",
    "packages",
    "learn",
    "write",
    "execute",
    "python",
    "scripts",
    "work",
    "files",
    "handle",
    "errors",
    "write",
    "automation",
    "scripts",
    "way",
    "help",
    "journey",
    "created",
    "free",
    "supplementary",
    "pdf",
    "breaks",
    "specific",
    "concepts",
    "need",
    "learn",
    "skill",
    "great",
    "resource",
    "review",
    "progress",
    "find",
    "gaps",
    "knowledge",
    "prepare",
    "interviews",
    "find",
    "link",
    "description",
    "box",
    "also",
    "bunch",
    "tutorials",
    "channel",
    "complete",
    "courses",
    "website",
    "looking",
    "structured",
    "learning",
    "links",
    "description",
    "box",
    "moving",
    "let",
    "talk",
    "cloud",
    "providers",
    "cloud",
    "providers",
    "like",
    "aws",
    "azure",
    "google",
    "cloud",
    "platform",
    "offer",
    "range",
    "services",
    "building",
    "deploying",
    "applications",
    "starting",
    "recommend",
    "focusing",
    "one",
    "cloud",
    "provider",
    "aws",
    "great",
    "choice",
    "widely",
    "used",
    "spend",
    "4",
    "6",
    "weeks",
    "make",
    "sure",
    "learn",
    "launch",
    "configure",
    "manage",
    "virtual",
    "servers",
    "store",
    "manage",
    "data",
    "get",
    "familiar",
    "managing",
    "users",
    "groups",
    "roles",
    "set",
    "manage",
    "isolated",
    "networks",
    "next",
    "containerization",
    "containerization",
    "packaging",
    "application",
    "dependencies",
    "container",
    "ensure",
    "runs",
    "everywhere",
    "docker",
    "tool",
    "spend",
    "3",
    "four",
    "weeks",
    "getting",
    "comfortable",
    "docker",
    "learn",
    "create",
    "docker",
    "images",
    "get",
    "familiar",
    "starting",
    "stopping",
    "managing",
    "containers",
    "learn",
    "write",
    "docker",
    "files",
    "explore",
    "define",
    "run",
    "multicontainer",
    "applications",
    "using",
    "docker",
    "compos",
    "let",
    "dive",
    "continuous",
    "integration",
    "deployment",
    "cicd",
    "cicd",
    "automates",
    "integration",
    "deployment",
    "code",
    "changes",
    "allowing",
    "frequent",
    "reliable",
    "releases",
    "genkins",
    "powerful",
    "tool",
    "setting",
    "cicd",
    "pipelines",
    "popular",
    "tools",
    "include",
    "gitlab",
    "cicd",
    "circle",
    "ci",
    "travis",
    "c",
    "starting",
    "focus",
    "jenkins",
    "versatility",
    "strong",
    "community",
    "support",
    "dedicate",
    "3",
    "four",
    "weeks",
    "make",
    "sure",
    "understand",
    "create",
    "manage",
    "jenkins",
    "pipelines",
    "get",
    "familiar",
    "writing",
    "jenkins",
    "files",
    "learn",
    "integrate",
    "automated",
    "tests",
    "pipelines",
    "understand",
    "automate",
    "build",
    "process",
    "applications",
    "explore",
    "automate",
    "deployment",
    "applications",
    "various",
    "environments",
    "moving",
    "forward",
    "let",
    "discuss",
    "orchestration",
    "management",
    "orchestration",
    "tools",
    "like",
    "kubernetes",
    "helm",
    "help",
    "automate",
    "deployment",
    "scaling",
    "management",
    "containerized",
    "applications",
    "tools",
    "essential",
    "managing",
    "complex",
    "applications",
    "production",
    "start",
    "kubernetes",
    "spend",
    "four",
    "6",
    "weeks",
    "make",
    "sure",
    "learn",
    "overall",
    "architecture",
    "including",
    "master",
    "node",
    "worker",
    "nodes",
    "interact",
    "understand",
    "key",
    "components",
    "pods",
    "services",
    "deployments",
    "get",
    "familiar",
    "managing",
    "resources",
    "learn",
    "scale",
    "applications",
    "well",
    "networking",
    "model",
    "kubernetes",
    "next",
    "networking",
    "infrastructure",
    "services",
    "involves",
    "setting",
    "managing",
    "services",
    "like",
    "reverse",
    "proxes",
    "forward",
    "proxes",
    "caching",
    "servers",
    "firewalls",
    "load",
    "balancers",
    "recommend",
    "using",
    "engine",
    "x",
    "handling",
    "reverse",
    "proxes",
    "load",
    "balancing",
    "give",
    "3",
    "4",
    "weeks",
    "time",
    "learn",
    "set",
    "configure",
    "engine",
    "x",
    "reverse",
    "proxy",
    "understand",
    "configure",
    "act",
    "forward",
    "proxy",
    "explore",
    "caching",
    "strategies",
    "improve",
    "performance",
    "configure",
    "firewalls",
    "security",
    "groups",
    "let",
    "talk",
    "configuration",
    "management",
    "configuration",
    "management",
    "tools",
    "like",
    "anible",
    "puppet",
    "chef",
    "automate",
    "deployment",
    "configuration",
    "management",
    "servers",
    "applications",
    "starting",
    "focus",
    "anible",
    "due",
    "simplicity",
    "powerful",
    "features",
    "spend",
    "3",
    "four",
    "weeks",
    "learn",
    "write",
    "anible",
    "playbooks",
    "understand",
    "use",
    "roles",
    "modules",
    "learn",
    "manage",
    "variables",
    "templates",
    "moving",
    "let",
    "discuss",
    "infrastructure",
    "code",
    "iac",
    "iac",
    "involves",
    "managing",
    "provisioning",
    "computing",
    "infrastructure",
    "machine",
    "readable",
    "configuration",
    "files",
    "popular",
    "tools",
    "include",
    "terraform",
    "aws",
    "cloud",
    "formation",
    "palumi",
    "starting",
    "focus",
    "terraform",
    "flexibility",
    "widespread",
    "use",
    "dedicate",
    "3",
    "four",
    "weeks",
    "build",
    "solid",
    "foundation",
    "terraform",
    "understand",
    "basic",
    "concepts",
    "like",
    "providers",
    "resources",
    "get",
    "familiar",
    "writing",
    "terraform",
    "configuration",
    "files",
    "learn",
    "use",
    "terraform",
    "modules",
    "well",
    "advanced",
    "concepts",
    "workspaces",
    "remote",
    "state",
    "finally",
    "let",
    "talk",
    "monitoring",
    "logging",
    "monitoring",
    "login",
    "tools",
    "prometheus",
    "graff",
    "elk",
    "stack",
    "fluent",
    "track",
    "performance",
    "health",
    "applications",
    "infrastructure",
    "starting",
    "focus",
    "prometheus",
    "grafana",
    "spend",
    "3",
    "four",
    "weeks",
    "tools",
    "learn",
    "architecture",
    "data",
    "model",
    "prometheus",
    "get",
    "familiar",
    "collecting",
    "metrics",
    "various",
    "sources",
    "learn",
    "write",
    "queries",
    "extract",
    "analyze",
    "metrics",
    "data",
    "understand",
    "set",
    "alerts",
    "dedicate",
    "3",
    "5",
    "hours",
    "every",
    "day",
    "follow",
    "road",
    "map",
    "pick",
    "skills",
    "need",
    "become",
    "devops",
    "engineer",
    "10",
    "14",
    "months",
    "questions",
    "please",
    "let",
    "know",
    "comments",
    "best",
    "answer",
    "right",
    "future",
    "videos",
    "enjoyed",
    "video",
    "please",
    "give",
    "like",
    "subscribe",
    "useful",
    "content",
    "thanks",
    "watching"
  ],
  "keywords": [
    "looking",
    "devops",
    "skills",
    "right",
    "complete",
    "road",
    "map",
    "essential",
    "need",
    "tools",
    "personally",
    "recommend",
    "time",
    "spend",
    "dedicate",
    "3",
    "5",
    "hours",
    "every",
    "day",
    "10",
    "14",
    "months",
    "let",
    "linux",
    "servers",
    "environments",
    "engineer",
    "setting",
    "infrastructure",
    "applications",
    "run",
    "use",
    "getting",
    "comfortable",
    "starting",
    "learning",
    "used",
    "weeks",
    "make",
    "sure",
    "learn",
    "basic",
    "commands",
    "working",
    "system",
    "well",
    "managing",
    "packages",
    "next",
    "networking",
    "concepts",
    "ip",
    "protocols",
    "understand",
    "data",
    "around",
    "security",
    "network",
    "get",
    "using",
    "two",
    "like",
    "firewalls",
    "groups",
    "talk",
    "git",
    "track",
    "changes",
    "code",
    "one",
    "remote",
    "dive",
    "programming",
    "languages",
    "python",
    "automate",
    "manage",
    "simplicity",
    "powerful",
    "versatility",
    "four",
    "6",
    "build",
    "solid",
    "foundation",
    "modules",
    "write",
    "scripts",
    "files",
    "help",
    "great",
    "find",
    "description",
    "box",
    "moving",
    "cloud",
    "providers",
    "aws",
    "services",
    "4",
    "configure",
    "familiar",
    "roles",
    "set",
    "containerization",
    "docker",
    "tool",
    "create",
    "explore",
    "integration",
    "deployment",
    "cicd",
    "pipelines",
    "popular",
    "include",
    "focus",
    "jenkins",
    "writing",
    "various",
    "forward",
    "discuss",
    "orchestration",
    "management",
    "kubernetes",
    "architecture",
    "resources",
    "model",
    "involves",
    "reverse",
    "proxes",
    "caching",
    "load",
    "engine",
    "x",
    "give",
    "proxy",
    "performance",
    "configuration",
    "anible",
    "iac",
    "terraform",
    "monitoring",
    "prometheus",
    "metrics",
    "please"
  ]
}