{
  "text": "welcome to today's webinar on teaching\npredictive modeling with jump Pro the\npresenter today is Ross matusalem he's a\nacademic Ambassador a statistical\nscientist that we have the pleasure of\nhaving on our team at John\nRoss are you available and ready to go\nindeed I am Kevin thanks uh everybody\njust a couple announcements for those\nwho are just joining now before we get\ngoing\num this is the third webinar in our\nspring semester webinar series which is\noccurring every other Tuesday at 1 pm\nEastern Time U.S we have a couple more\nwebinars coming up here so next up two\nweeks from today we're starting a\ntwo-part series on multivariate methods\nso these are things like principal\ncomponent analysis factor analysis\nstructural equation modeling and then\nwe'll finish up on April 4th with uh\ngenomics research methods in Jump Pro 17\nso jump Pro 17 which just came out this\npast fall has some new Tools in it\nspecifically for analyzing genomics data\nso we'll take a look at that to register\nfor these webinars head on over to\njump.com\nacademic webinars\nif you need more help learning jump\nafter today please don't hesitate to\nreach out to academic jump.com we can\narrange one-on-one support you know you\ncan hop on a quick Zoom with me or Kevin\nor another one of our colleagues to\nanswer some questions and show you how\nsome of the tools work or we can do\num formal or informal group workshops\nfor you your colleagues your students if\nyou want to arrange something like that\nit's totally complementary just reach\nout to academic jump.com\nforeign\njump in a course or thinking about using\njump in a course please head on over to\njump.com teach for our library of free\nteaching materials which includes a wide\nrange of materials including case\nstudies sample data sets and video\ntutorials and a number of other things\nas well and actually today towards the\nend we'll take a look at some of the\nmaterials specific to today's topic\nand uh finally as Kevin mentioned please\nif you could use the Q a window for any\nquestions that you have today so we do\nhave the chat window it's just kind of\nhard to keep track of all the questions\nand which ones haven't haven't been\nanswered yet when they're in the chat so\nif you could look for that little\noverlapping speech bubble icon and pull\nup your q a panel in Zoom type any\nquestions you have in there throughout\nthat would be great Kevin will answer as\nmany questions as he can as we go along\nand I'll stop a couple times to field\nquestions live as well\nso thanks everybody for coming and let's\nmove on over to jump to talk about\nteaching predictive modeling with jump\nPro uh our goal today is to show you\neverything you need to know so that you\ncan start using jump Pro to teach\npredictive modeling in your course uh\njump Pro as we're going to see it's an\nend-to-end predictive modeling tool so\nin addition to all the predictive\nmodeling algorithms you might expect you\ncan at the early stages get your data in\nprepare it explore it maybe even do some\nfeature engineering all the way through\nmodel validation and model deployment so\nit's really a complete package that it\ncould be used for an entire semester\nlong or even a longer sequence of\ncourses in predictive modeling I should\nmention it's also used pretty\nextensively in Industry from Financial\nServices to Market Research to retail\nalso high-tech research and development\nand Manufacturing so this is a tool that\nstudents can absolutely use once they\nget out there into the real world I do\nwant to just issue a couple quick\ncaveats before we get started one in one\nhour we're not going to have enough time\nto go too deep into any specific\nmodeling technique that we are going to\nsee at least I think four different ones\num in uh in the examples that we have\nqueued up but of course as we've\nmentioned we're here to help you with\nspecific needs and specific questions\njust email academic jump.com\nand then uh finally I am in Jump pro\nversion\n17.0 right now which came out this past\nOctober and I do want to highlight that\num predictive modeling while in standard\njump there are a number of features that\nenable basic predictive modeling\napplications this really is an area\nwhere jump Pro is the appropriate tool\nso if you uh are at a university that\ndoesn't have a license for jump Pro you\nmight be able to use the jump student\nsubscription to teach some predictive\nmodeling Basics but really to to do the\ntopic Justice uh jump Pro is is the tool\nyou want and as I go along today I might\nsay jump you know jump does this jump\nhas this feature but really what I'm\ngoing to be showing you is is Jump Pro\nso please forgive me if I don't use the\npro uh every time there\nall right so let's actually get started\nwe're going to give you an idea of uh\nhow predictive modeling Works in Jump\nPro and in fact of course you always\nnotice right when you get started\nmisspellings there we go\num and we're going to take a look at how\nto build and validate models how to\ncompare multiple models and how to\ndeploy and then also some of these\nupfront things like screening your data\nand doing some feature engineering but\nbefore we get into all those things I\nwant to boost your intuition for just\nwhat type of predictive modeling tool\njump Pro is\nSo today we're going to take a look at\nthese data this is a version of the\nequity.jump sample data set which you\ncan find under help and Sample index or\nin previous versions of jump uh sample\nLibrary\nhere we have\n5960 home equity loan applicants\nincluding things like the amount of loan\nthat they requested the amount that they\nhad due on their mortgage and so forth\nand our key outcome variable is whether\nor not that person ultimately defaulted\nand our goal at this data set is to\ncreate a predictive model that can\naccurately assign default probabilities\nto new applicants so we can use that to\nmake decisions about whether we should\nactually issue the loan or not\nso let's just build a quick model here\njust to show you how predictive modeling\nin Jump Pro works\nso let's say I wanted to build a neural\nnetwork model using all of these factors\nto the right to predict that default\nvariable\nso I'll go to analyze predictive\nmodeling and choose my tool of choice\nsay that I want to predict default using\nthese predictors right here\nI'll click ok to get into the neural net\nconfiguration let's say uh to validate\nour model and we'll talk about model\nvalidation a fair bit today I want to\nuse a k-fold validation procedure\nI want to do a multi-layer neural\nnetwork\nand I will click go with the remaining\ndefaults\nand here's our output\nso in just a couple clicks I fit a\nmulti-layer neural net we can actually\nif I go to the diagram under this red\ntriangle menu and if you're new to jump\nyou're going to see me click on a lot of\nred triangles they're just context\nsensitive menus that provide more\noptions\nwe can actually see a quick diagram of\nthe neural net that I just fit here\nup above we can see that We performed\nour k-fold validation automatically and\nI have a number of Statistics that tell\nme how well my model is doing today\nwe're going to be looking mostly at\nentropy R square which is just a value\nthat ranges from zero to one where one\nis uh representative of perfect\npredictions and uh zero means no better\nthan just guessing the base rate\nso let's take a look actually at\nour model visually here we have a tool\nthat we're going to look at a fair bit\ncalled the prediction profiler so in\nthis profiler and here let me get off\nthe bottom of the screen for us\nwe have on the y-axis the predicted\nprobability of default on the top and\nthen of not defaulting on the bottom and\nthen we have all the different\npredictors that we entered into the\nmodel and we can just change the value\nof any one of these predictors to see\nhow the prediction out of the model\nchanges for example as I increase the\nvalue of the home we can see that we\nactually observe an increased predicted\nprobability of default\nor same goes for looking at the number\nof delinquent lines of credit somebody\nhas so that is the number of lines of\ncredit where they've failed to meet make\nthe minimum monthly payment\nand so if any of us are at all familiar\nwith neural networks we know that\nthey're often considered Black Box\nmodels hard to actually understand the\nnature of the relationships between the\nfactors and the response but here we can\nactually see a nice visual tool that\ngives us some idea of the shape of those\nrelationships and uh how they change\ndepending on the values of other factors\nall right so in a few clicks I've built\na multi-layer neural network I've done\nk-fold cross-validation on it I've\npulled up an interactive visual\nrepresentation of the model now let's\nsay I actually want to use this model we\nultimately don't want to forget the last\nmile here where we have a new set of\nloan applications so here's 1 000 new\napplications with all of the applicant\ninformation but\num we don't yet know if they'll ever\ndefault or not\nso in a few more clicks\nwe can publish our model\nand choose to\nscore those new loan applications\nand so now in these new applications we\nhave a predicted probability of default\nfor all of them save for the ones that\nwe're actually missing some of our\napplication information here\nand so if I just click in this\ninteractive histogram for example I can\nfind the approximately 100 individuals\nwho are most likely to default\nso I'm hoping that working through this\nvery quick example of building and\nvalidating and deploying a neural net\nmodel gives you an idea for how\npredictive modeling Works in Jump it's\nall through a point-and-click interface\nit involves\num interactive Graphics it allows for\nautomatic model validation and tuning\nand it makes actually working with the\nmodels after they're built pretty easy\nuh I really do think that jump Pro is a\ngreat tool for introducing students to\npredictive modeling Concepts and\ntechniques without the software getting\nin the way too much I mean certainly if\nin your course or your curriculum coding\nis maybe a secondary learning objective\nor maybe it occurs later in a curriculum\nor perhaps not at all a tool like jump\nPro can make really powerful predictive\nmodeling techniques accessible to uh to\nthose students so those students that\nmight not necessarily know how to code\nor not be prepared to learn coding at\nthe same time that they're learning all\nof these techniques\nso let me close all this down and then\nwe're going to get into the details of\nhow all of this works in Jump Pro here\nso we'll go ahead and save our\njournal and data set and we'll close\neverything else\nso let's talk about the predictive\nmodeling capabilities in Jump Pro in\ngeneral I should mention that we will be\nposting this recording to our jump\nacademic webinar Library I think\nKevin if you haven't already if you\ncould post that in the chat just the\nlink to that that would be helpful for\neveryone and you'll be able to download\nThis Journal as well which will have\nsome helpful information in links\none of those will take you to jump.com\nwhere under the capabilities menu you're\ngoing to find predictive modeling and\nmachine learning and that's really the\ncapabilities that we're focusing on\ntoday and you'll find a pretty full list\nof all of the different predictive\nmodeling algorithms and additional tools\nand capabilities for example uh cross\nvalidation techniques\num the you know model validation\nstatistics and graphs and so forth so go\nahead and have a look at that at your\nleisure what I want to do is actually\ngive you just a quick condensed list of\nthe different types of models and other\ncapabilities\nso jump Pro includes all of your linear\nmodels uh and in particular uh relevant\nhere the regularized or penalized\nregression techniques like lasso we just\nsaw neural Nets we also have common\nalgorithms naive Bayes K nearest\nneighbors support Vector machines and\nthen a variety of algorithms based on\ndecision trees so your classification\nand regression trees uh what we call\nbootstrap Force you may also know it as\nrandom Forest boosted trees and then\neven via an add-in which you can click\nhere to download uh XG boost so stream\ngradient boosting you'll see I'm not\ngoing to show that today but you can\ninstall just a simple add-in it's like a\nmacro and jump to get the XG boost\ncapabilities as well\nand so in addition to these algorithms\nwe have a number of tools for automated\nautomated model validation and tuning\ntools from model uh comparisons when you\nuse multiple techniques and want to see\nwhich one performs the best we'll see\nthat that's pretty easy to do\nalso we're going to take a look at a\ntool called the decision threshold\nExplorer which allows us when we have a\ncategorical outcome or that is for\nclassification models where should we\nset our decision threshold for\nclassification\nthen we already saw a little bit about\nscoring new observations and we'll see a\nlittle bit more of that as well and then\nsome of the upfront tools for data\nscreening and feature engineering so I\njust want to do at the outset make very\nclear that while we're not going to see\nreally everything today that jump again\nit really is a full featured and\nend-to-end predictive modeling tool\nso now let's actually get into building\nand validating models\nand when you want to get started\nbuilding a predictive model and jump Pro\nyou're going to go to really one of two\nplaces if you want to use a regression\ntechnique maybe regularized regression\nagain like a lasso model you'll want to\ngo to analyze fit model\nand in particular and we'll see this in\na moment there's a particular way to set\nthat up so that you get to the um the\ntype of regression tool that will allow\nyou to fit those models\nwhat we're going to start though is an\nanalyze predictive modeling\nso you'll find that right under fit\nmodel and here's where you're going to\nsee all the I mean traditionally\nreferred to as you know machine learning\nor maybe data mining tools so your\nneural networks\npartition is our classification\nregression tree tool and so forth all\nthe way down as well as some additional\ntools uh that are really specific to a\npredictive modeling context\nso let's actually get started with one\nof these I'm going to choose for us\num a classification tree here and use\nthis the you know the process of going\nthrough and building one as an\nopportunity to teach you a little bit\nabout just how predictive modeling\nplatforms uh work in general\nin Jump\nso I've launched the predictive modeling\nplatform partition here\nand you see on the left list of columns\nyou see on the right a list of roles\nthat these columns or variables can play\nin the analysis now the very first thing\nthat I want to point out is that if you\nlaunch a tool for the very first time in\njump you may of course Wonder well what\nare these options maybe you know what is\nthis buy down here I see something about\ninformative missing what does that mean\nyou always have these questions\ninitially and the easiest way to get\nthem answered right when you need to\nis to click help in the model launch\nWindows so this button can sneak by\nfolks especially newer users there's\nalways going to be a help button inside\nthese tools that you can click on to\ntake you right to the relevant\ndocumentation to learn how you should\nset your analysis up in the first place\nso if you're ever feeling Unsure how to\nget started just click that help button\nnow most of the predicted modeling\nPlatforms in this launch window work the\nsame way you would select the thing that\nyou want to predict so that's loan\ndefaults and put it in the Y response\nrole\nand then all of your predictors and put\nthem into the X Factor role you can see\nwe have a little scroll bar there but we\nhave all 12 of our predictors here\nnow uh of course in uh predictive\nmodeling we either can build a\nclassification model or a regression\nmodel and when you launch these you\ndon't have to tell jump which one it's\nsupposed to be doing jump will know\nbased on what we call the modeling type\nof the data if you look at default here\nyou're going to see these three red bars\nand these indicate that jump is treating\nthis as a nominal variable so unordered\ncategories if you look at say something\nlike loan you can see the blue triangle\nthis means that jump is considering that\nto be a continuous variable and So based\non whether the modeling type of your\ndata is set to nominal or continuous or\nordinal or there are some other modeling\ntypes as well jump will know the\nappropriate type of model to build and\nif you ever need to change that you can\ngo into your data table in the columns\nlist on the left here and just click\nright on one of the icons to set the\nmodel and type them it's actually one of\na number of different pieces of metadata\nthat you can associate with a column and\nyou can always change those by by\nclicking on your column header and just\ngoing to column info but I'll spare us\nthat for now I just wanted to point that\nout before we get rolling here\nokay so I have set up the most basic\nwhat I want to predict and what I want\nto use to predict it\nso I'm just going to click OK for now to\nhighlight the next thing to know about\npredictive modeling and jump and that is\nwhen you launch one of these tools\ninstead of just producing the final\nmodel output for you it is going to\nprovide you with uh some kind of control\nwindow for you to build the model\nyourself though we're about to see ways\nin which it can be fully automated as\nwell so uh without getting too much into\ndecision trees I do just want to give a\nquick idea of what's how they work for\nthose who don't know about them\nuh right here we're looking at a\nrepresentation of all of our data we can\nsee that in red about 20 percent of our\nuh nearly 6 000 rows of data were\ndefaulted loans meaning about 80 percent\nwere not we actually just see the 80 20\nsplit blue and red represented up here\ngraphically\nnow when I click split what the\nalgorithm does is finds a cut point\nalong one of our predictors that uh\nmaximally explains the probability of\ndefault so if we look here we can see\nthat it has split on debt to income\nratio where if your debt to income ratio\nis greater than or equal to 43.68 or in\nsome cases we have missing data we're\ngoing to address that a little bit\nuh your default probability is quite\nhigh it's actually at about 63 percent\nwhereas if you are lower than that 43.68\non your debt to income ratio you have a\npretty low default probability about\npoint zero seven so seven percent\nand so that's how this algorithm works\nit builds out a tree where you\nuh iteratively split or this is where we\nget the name partition you recursively\npartition the data into groups based on\nthese different cut points and then you\ndevelop predictions by just following\nthe tree down so if somebody has a low\ndebt to income ratio you might end up\nover here and then you might ask\nyourself well how many delinquent lines\nof credit do they have let's say they\nhave none so here we have delinquent\nlines of credit less than two and we\nwould derive our prediction right here\nand say that the predicted probability\nof default is oh just over five percent\nthat's just a little bit about how\ndecision trees work and if you teach\npredictive modeling this is uh likely to\nbe one of the topics in your course\nnow uh if you know much about predictive\nmodeling you know that one of the\nbiggest things is that all these\nalgorithms they have some way of either\nlearning incrementally or you have\nmultiple different settings that you\nneed to specify and you often want to be\nable to tune your model in order to\nfigure out the best settings to get the\nmost accurate predictions and so the\nnext thing to highlight here is that all\nof the predictive modeling Platforms in\nJump have some kind of built-in\ncapability for model tuning and model\nvalidation so for our purposes here we\nactually want to know what's the best\nnumber of splits in the tree without\ngetting into the details if you're at\nall again familiar with predicted model\nwe know that if we just kept splitting\nthe tree indefinitely until we had maybe\ntens or even hundreds of splits we'd\nprobably end up over fitting our data\nwe'd have a tree that's fit to the noise\nnot just the signal\nso let's see how in the context of this\ntool we would use one of these built-in\ncapabilities uh to determine the number\nof splits in the tree\nso I'll go to analyze predictive\nmodeling and partition again\nthis case I'm going to click recall\nwhich is going to populate defaults in\nour predictors back into the response\nand Factor roles\nand in this case we have a little box\nhere that says uh the proportion of data\nthat we want to hold back as a\nvalidation set and so I'm going to say\nthat I want to take 30 percent of our\ndata and withhold it so every time we\nmake a split we're going to use just the\n4159 observations\nuh in the training set to decide where\nthat split should be and then we'll test\nhow good the model is at predicting data\nthat it hasn't seen yet on the remaining\n30 so about 1800.\nso you can see if I request a single\nsplit this\nbox up here populates with some\ninformation telling us in this R square\ncolumn where this is stands for entropy\nR square it's a version of R square\nthat's useful for categorical data uh\nhow well we're doing where again higher\nvalues are better and so now I have this\ngo button and I can click go\nand it looks like jump in this case has\nlanded on a 15 split tree\nthe split history graph is actually just\nshowing across all the numbers of splits\nthat it tested which was all the way out\nto 25 splits\num in blue how well did we do in\npredicting the training data and in red\nthe validation data and so if I zoom in\na little bit here we can see a slight\ndifference but not a particularly large\none I don't think we're dealing with\nmuch overfitting here we can see that\nwhere performs on the training data\nalways Rises as it always will as we\ncreate a model more complexity we seemed\nto Peak in our ability to predict the\nevalidation data at 15 splits\nso we're going to actually see well\nreally we already did if you remember\nwhen I launched that neural network\nplatform at the beginning and selected\nk-fold validation there was a way of\nusing that technique to\num perform automatic model validation in\nthis case to stop the fitting algorithm\nfor the neural net here we see another\nexample of one of these built-in tools\nwhere we can ask jump to withhold a\nrandom set of our data and validate it\nand stop the algorithm automatically\nso um\nsometimes we want to do uh use those\ntools that is if we're just working\ninside partition and we're just trying\nto teach our students the basic idea of\nwithholding some data and what that does\nfor us this might be valuable as we move\non maybe further in a course or in a\ncurriculum we may get towards fitting\nmultiple models and uh needing to\ncompare them their performance all\nagainst the same test set of data or we\nmay start talking about the need to\nimpose certain constraints on how we\nrandomize the data into the training and\nvalidation sets and so forth\nand so if that describes your situation\nyou should be aware that there's a\nspecific tool in Jump Pro for making\nthese you know training and validation\ndata splits\nso let's see how that works first I'm\ngoing to point out I actually have a\ncolumn like that already in my data set\nhere so this validation column is\ndividing data into a training set a\nvalidation set and this is actually also\na third set the test set where in the\ncontext of uh partition we're about to\nsee you would make splits using the\ntraining set decide when to stop\nsplitting based on performance on the\nvalidation set and then use this third\nset the test as a final test of how well\nthe model generalizes to unseen data\nso let's actually create a column like\nthat I'm going to go to analyze\npredictive modeling down here I'll find\nthe make validation column utility\nwhen I launched that I have some options\nfor restricting the randomization of\nrows in our data table to the different\ngroups for example stratification just\nmeans to do stratified random sampling\nso for example I could say stratify on\ndefault so that the training validation\nand test sets have the same proportion\nof defaulted loans in them\ngrouping columns are particularly good\nwhen you have blocking structures or\nrepeated measures so for example if you\nhave multiple measures per individual\nwhat you want to do is randomly assign\nall the rows for a particular individual\nto one set or another you don't want the\nsame individual appearing in the\ntraining and validation sets or else you\nget leakage\nso you could Group by that individual\nand then cut point is good for uh\noftentimes time ordered data so if you\njust want to withhold the most recent\ntwo months of data and train on\neverything before that you could have a\nTime column is a coupling\nso I'm going to put default and\nstratification you also notice that we\nhave an option down here for making a\nvalidation column which is your basic\nholdout validation as we've kind of been\nworking with so far if you want to do\nk-fold validation you can make a k-fold\nvalidation column as well I'm going to\nstick with just hold out validation for\nour purposes here\num when you eventually get your hands on\nthis journal you can click this link\nright here that says validation methods\ndocumentation to learn about how hold\nout and k-fold validation are\nimplemented in all of Jump's various\ntools it's going to drop you right at\nthis page where it says validation and\njump modeling and talk about a few\ndifferent modeling or excuse me\nvalidation schemes and if you click\nforward you'll go through the different\npages here to see which schemes are\nsupported and which modeling platform\nand then also clicking forward you can\nsee\njust very explicitly which platforms\nsupport hold back versus k-fold\nvalidation\nso I'm not going to get too deep into\nthat for now these are great resources\nif you're wondering which validation\nmethods are available depending on which\nuh modeling technique you're using\nso just to get back to where we were I'm\ncreating a three-way holdout validation\ncolumn I'm going to stratify on default\nso I'll click ok\nnext I specify how much data goes into\neach group so in my training set let's\nsay I want 0.6 so 60 and then 20 percent\neach in my validation in test sets so it\nlooks like nearly 3 600 in the training\nset and then both the validation and\ntests they'll have nearly 1200.\nif you want to reproduce the exact same\nsplits a subsequent time enter a random\nseed here and then enter the same random\nseed every time and the splits will be\nthe same and I know that that can be\nimportant in teaching because oftentimes\nwhen you are producing some kind of\nexample for the students you need your\nnumerical results to exactly match\nwhat's in a textbook or what's in an\nexample that you showed them previously\nand here in other places in Jump setting\na random seat is the is the best way to\ndo that\nso I'll click go and now you can see in\nour table we have this training\nvalidation test split it's different\nfrom the one before you can see when I\nclick on training and validation two\nthose are distributed across all three\ngroups and validation one\nbut one thing that's nice and uh in\nparticular uh helping students\nunderstand some of the the reasons that\nwe want to be careful and how we\nrandomly assign data to these validation\ngroups is by using one of these columns\nyou can use all jumps other tools to\nactually explore how the randomization\nwas done and if it was uh I suppose\nwe'll use the term effective here so for\nexample we stratified on default let's\nactually take a look at the breakdown of\nthat variable across the three groups\nthat we just created if you've never\nseen this before this is graph Builder\nit's just a drag and drop graphing tool\nso I'm going to drag default to the\ny-axis the validation 2 to the X and\nthen change up here the graph element to\na mosaic plot\nwhere if you're not familiar it's just\nshowing us here the breakdown across all\nthree groups almost like a stacked bar\nchart of uh the defaults and then the\nwidth is showing the size of each group\nso the training group is 60 of our data\nso it's width is 60 of the total\nand we can see quite clearly we have\nthat nice 80 20 split uh across all\nthree groups\nnow oftentimes uh if we have a large\nenough data we would expect let's say\nthat the the mean of some of these\npredictors for example debt to income\nratio should be approximately equal\nacross the validation groups again\nassuming random assignment and a um you\nknow a large enough sample so we could\ncheck something like that too to help\nboost our students intuitions maybe I'll\ngo to analyze tabulate so this is a drag\nand drop tool much like graph Builder\nbut for creating uh crosstabs or summary\ntables\nso let's go ahead and say I want to look\nat\nall of my continuous predictors\nand I don't want to look at their sum\nvalue I want to look at their mean value\nand I'm going to break that out by this\nvalidation column that we\njust created and so now I can just look\nin a quick tabular way to see that all\nof the means of all these different\ngroups are approximately equal and it\nlooks like that they are\nany difference can probably be just\nattributed to that randomization\nso that's just to highlight some other\njunk tools that you may find useful when\nyou know just using jump in general in\nyour course but also when working with\nthese validation columns and helping\nstudents actually understand what just\nhappened and what we would expect to see\nwhen our training validation and test\nsplits have been done appropriately\nforeign\nfor now though and use this additional\nor this uh excuse me original validation\ncolumn\nand I'm going to relaunch the partition\nplatform\nand now we'll put our default in y our\npredictors in X as we did before but now\ngoing to take the validation column and\nput it into this validation rule which\nyou're going to see all over jump\nso let me click OK you'll notice now we\nhave all three of our groups in this\ntable up here\nand again I have this go button which\nwill allow me to continue splitting the\ntree until performance on the validation\nset levels off\nI ended up with a 21 split tree here\nblue represents the training data red\nrepresents the validation data and\norange now represents the final test\ndata and so we stop splitting again more\nvalidation performance peaked and then\nwe did a final test right here and it\nlooks like our entropy R squares about\n0.458 which should take some domain\nknowledge and expectations about what\ncounts as quote unquote good here but in\nthis context we might say that that's\nnot too bad\nso now let's uh work with this model a\nlittle bit more one of the nice things\nabout\num jump uh specifically in the classroom\nis that students don't necessarily need\nto know everything that they might want\nto request or get out of their analysis\nup front these red triangles that I\nmentioned before contain all the\nadditional options so you can always go\nto the red triangle to request more\ninformation so for example if I wanted\nto look at some further fit statistics I\nmight go to show fit details\nand here I have multiple measures of\nmodel performance so here right at the\ntop is the one that's actually depicted\nin that graph but we might also look at\nsomething like generalized our square or\nthe misclassification rate here assuming\na threshold of 0.5\ndown below we have confusion Matrix we\ncan see you know where the model is\ndoing better or worse it is it is it\ncommitting more false positives or false\nnegatives\njust to highlight a few additional\noptions\ngraphically to assess classification\nperformance at least we might want to\nlook at an Roc curve so here on the\nbottom right we have the ROC curve for\nthe test set now if you're not familiar\nwith these without getting into the\ndetails the diagonal here represents\nessentially random guessing and the\nfarther that a curve gets up into the\ncorner here the better the model is at\ndistinguishing between the two\ncategories we often use an area under\nthe curve where to capture the overall\naccuracy where one would be perfect and\nwe see about 0.91 which is pretty good\nnow of course uh as we saw with the\nneural net we might want to use that\ninteractive profiler to visualize the\nmodel so I can request that as well\nso again we have the predicted\nprobability of default on the y-axis and\nthen all the values of our predictors on\nthe X and so I can see for example\nthere's a giant jump in default\nprobability right we get to a number of\ndelinquent uh credit lines of six or\nmore I can see actually as we cross that\nthreshold how other effects kind of\nenter or leave based on what branch of\nthe decision tree that we're in so for\nexample as I go up to six we can see if\nI scroll down here the number of recent\ninquiries\ndoesn't seem to matter but once we're at\na lower number of delinquent credit\nlines it does look like that number of\ninquiries matters a bit\nso I do want to highlight that this\nprediction profiler is actually a full\nfeatured tool for exploring your model\nit has a red triangle of its own with a\nnumber of uh different options for\nexample optimizing for particular\num response uh profile\num you might use it to actually simulate\noutcomes or one thing I actually like to\ndo for predictive modeling especially\nwith kind of more black box like models\nis actually go to this assess variable\nimportance where without getting into\nthe details of all these you can get\nwhat we call marginal model plots\nwhich are at the bottom here and a\nmarginal model plot actually essentially\ndepicts the average effect of a\nparticular Factor across many randomly\nresampled values of the other factors so\nwe can see this General spike in default\nprobability for a number of delinquent\ncredit lines it's six like we saw before\nwe can see for the number of recent\ninquiries there's a general uptick here\nat around four but with these um these\nconfidence bands around here we can see\nthat once we're into this range where on\naverage it's flat we can see a big\neffect or\num or not depending on maybe some of the\nvalues of the other factors so these\nmarginal model plots I like they they\ncan be somewhat of a peak into a the\naverage effect in an otherwise maybe\nopaque model\nso that's just um one example of some of\nthe additional things you can find under\nthe profiler here\nlast thing I want to point out here\nfor your categorical responses I\nmentioned this before we have a tool for\nexploring decision thresholds so that is\nnow that I have this model\nif I'm ultimately going to use it and I\nneed to set a cutoff point you know\npredicted probability of default of 0.7\nand now I will no longer issue a loan\nwhere should I actually set that\nthreshold\nso as of jump Pro 17 all of the\num predictive modeling tools if you use\na categorical response have this this is\na decision threshold tool in them\nactually if you're still on 16 or before\nI will show you where this tool lives\nthere but here you can find it right\nunder the red triangle\nso we have a number of different things\nlet me try to focus us here actually I\nwant to get down let's go to the test\ndata instead and I'm going to get off\nthe bottom of the screen I'm going to\nclose a couple of these things down and\ntalk about what we're seeing here\nso in this graph that I just made bigger\nwe have all of the data in the test set\nup top here are all the people who did\nnot default and below that are the\npeople who did default\nso what we're looking at here in the\nblue\nif we were to set the uh the decision\nThreshold at just the middle of the\nscale 0.5 here are all the people who\nwould be specified as not defaulting and\nwe are correct that they didn't default\nto actually realize now we're specifying\nprobability in terms of not defaulting\nso just to make that clear here\nso that means then all these people who\ndid default if they were over that\nthreshold we would have predicted that\nthey didn't we would have been wrong\nthat would have been a false negative\nand so that's why it's in red here\nhowever here we would have had the\npredicted probability below that\nthreshold and it turns out the people\ndid default so we would have been\ncorrect\nnow we have all the corresponding\nstatistics if you're familiar with\nclassification models you might be used\nto seeing so these are the actual counts\nand rates of the different decisions so\nthe true positives true negatives false\npositives and false negatives and what's\nnice about this tool is I can actually\njust change the probability threshold\nand see how those values change so for\nexample is I increase the threshold\nto about let's say 0.9 I can see that\nwhen people actually would have\ndefaulted I would\nbelieve that they wouldn't and in fact\nissue them alone only seven and a half\npercent of the time so I'm being nice\nand conservative here and not giving\nloans out to people who uh might default\nand what would that do uh for the people\nwho ultimately didn't default well\nunfortunately I would deny nearly 25\npercent of their applications but 75\nwould still make it through\nand so I can adjust the decision\nthreshold and actually see how these\nstatistics change\nin order to help better understand the\nconsequences of setting the Threshold at\ndifferent values\nnow without getting into the details we\nhave a number of additional graphs and\nmetrics that might be useful and all of\nthem update in real time for example in\nthis graph on the right I have the\nmisclassification rates for both\ncategories yes and no so if I wanted to\nfind a point at which the two rates are\napproximately equal I could just find\nthe point where they cross over and it\nlooks like that's a\ndecision threshold of about 0.88\nand if I were to do that I would achieve\nthe following you know true positives\nand false negatives and sensitivity and\nspecificity and so forth\nso this decision threshold tool is a\ngreat uh way for making visual the\nconsequences of setting the thresholds\nwhen we're doing these classification\nmodels\nnow I mentioned that uh you know we we\nhave we're going to see a number of\ndifferent\num predictive modeling tools today I do\njust want to show a couple more before\nI'll pause and take a couple questions\nhere\num just to give you an idea of how\neverything that we just went over with\nrespect to that one partition tool\nactually applies broadly to a number of\nother tools so let's actually fit a\nlinear model here so let's go to this\nfit model tool that I mentioned before\nso just like before you get a launch\nwindow\nwe'll say that we want to predict\ndefault now because we're in a linear\nmodel we need to build out our model\neffects so for example I could just\nclick the add button to add 12 main\neffects to our model or select any two\nand click cross to add the two-way\ninteraction\nI'm actually going to delete those and\nuse a helpful model Macro for example\nfactorial to degree where our degree was\nset to two meaning that we're going to\nget all the main effects and two-way\ninteractions here so that's a that's a\nlot of possible effects a great use for\nsomething like regularized regression\nas I mentioned up here you want to use\nthe generalized regression personality\nso I'm going to go to generalized\nregression\ncan specify maybe that I want\nprobabilities stated in probability of\nuh yes defaulting and click run\nand just like we did before we get a\ncontrol window\nwhere I could select maybe a lasso model\nor an elastic net model\nand validation so I could do hold back\nor k-fold or had I put our validation\ncolumn into the launch dialog have done\nthat so maybe we'll do hold back\nvalidation and use a third of our data\nand click go\nand now jump has run a lasso model where\nWe've Ended up with just 63 of those\nparameters in the model\na number of statistical outputs and\ngraphs as you might expect we won't get\ninto the details and of course going to\nthe red triangle gives you all the other\nthings you might want for example\npulling up the profiler\nor pulling up an Roc curve and so forth\nso that's just a quick primer on linear\nmodeling we already saw\num neural net modeling briefly let's\nalso take a look at one more\nand that's going to be\nlet's go with a boosted tree here so\nthis is a more advanced technique based\noff of\num the decision tree technique\nthe launch looks very similar so I'll\nput my default as my response my\npredictors as my X\nand we will use let's say our validation\ncolumn for validation I'll click ok now\none thing you're going to notice here is\nour control window looks a little\ndifferent and that's because this\nparticular algorithm has a lot of\nsettings or what we call hyper\nparameters that need to be set and when\nthat's the case you'll often get an\noption to either just manually specify\nwhat you want them to be or if I could\njust back out of this\nyou can use what we call a tuning table\nto\nrun the algorithm multiple times at\nmultiple settings and then return the\none that performs the best this table\nwithout getting into it was actually put\ntogether just using a doe tool yeah full\nfactorial design and I'm doing a grid\nsearch over three of our hyper\nparameters here\nso now if I go to analyze\nbootstrap forest and I'll click recall\nright here\nI can click use tuning design table\nforeign\noh I must have selected something\nincorrect there let's try that one more\ntime\nwe go boost a tree of course here we go\nmake sure to start on the table that you\nactually want to model\nso we'll click recall here\nand we'll use our tuning design table\nyour tuning table there we go\nand so what jump is doing is now running\nI believe it's 18 uh different instances\nthe boosted tree algorithm and will\nreturn\nthe model that performed the best\naccording to the validation statistic\nand in this case here we can see the\nhyper parameter values for that model\nand as we might expect going to the red\ntriangle things like our Roc curve or\nour profiler or our decision threshold\ntool so I just wanted to point out the\nexistence of these tuning design tables\nso I know for some especially in data\nscience doing something like a grid\nsearch is a pretty core\ncomponent of the curriculum there\nso uh with that Kevin I see we\n've spent a lot of time just going over\nall the different uh ins and outs of the\npredictive modeling platforms I'm gonna\ngo ahead and pause and see if there are\njust a couple questions we might take\nlive before we talk about a couple more\nthings okay we just had a question come\nin so there's no questions the whole\ntime and either we interpret that as\nyou're doing such a phenomenal job that\nno one has any questions or you're doing\na horrible job and you're confusing\neverybody I'm gonna go with the with the\nformer\num there was a question that popped up\nis somebody's asking if you can force a\nsplit\nin Partition\num yes you can so uh I'm uh for the sake\nof time I'm not going to show it because\nit's uh relatively straightforward when\nyou uh are in the partition platform\nevery single node in the tree has a red\ntriangle and if you go to the red\ntriangle you will find the options to\nforce a split is it can you can you\num I know you can choose the variable to\nsplit by but can you pick the this\nperson is wondering like I want to\nactually pick the split location not\njust the variable to split\noops we are there let's find out very\nbriefly here\nso we will stay on decision tree click\nOK so you can go to split specific uh\nand here you will choose the value and\nthen you can go with the optimal value\nperfect perfect thank you\nall right let's see well I see a couple\nother questions Kevin that are in the\nopen we have uh five open questions\nthere\num one of them I see can we see how to\nsave the model to python code I think\nthat's possible that is one of the\nplaces we are going next so in this for\nthe interest of uh time here\num Kevin I'll let you get to those in\nthe Q a while I keep\none thing I want to point out briefly\nbefore we leave just the using the\nmodeling platforms behind is the\nexistence of a tool that allows you to\nrun multiple algorithms simultaneously\nif you're not sure which one is actually\nthe most promising for a particular data\nset\nthis is called Model screening and it\nactually lives under the predictive\nmodeling menu\nthe setup is kind of the same in that I\nwill specify what I want to predict and\nthe predictors that I have and then if I\nhave it I could do a validation column\nor do k-fold cross-validation what's\nnice is down here I can select which\nmethods I want to try and jump will\nautomatically call out to all of these\ndifferent methods and I'm going to\ndeselect some just so that things run\nnice and fast here\nit will call out to all of them with\ndefault settings and then return as we\nare about to see\na table that will allow us to compare\nthese models to choose at least you know\none or two candidate techniques that\nseem like were we to go in and actually\nfully tune those models would perform\nthe best and so here on our test set we\ncan see the winner was boosted tree\nfollowed by the boosted neural net and\nthe actual plane decision tree down at\nthe bottom\nand under the details all of those\nmodels are actually living here I'm not\ngoing to get into them now but what I\nwould typically do is actually then\nstart working with one of these models\nor even just launch it directly in its\nown tool\nthe model screening tool especially\nlet's say for a student project if they\nwant to they have multiple techniques\nthey've learned and want to identify the\none that they might want to use they\ncould go to model screening first to\nvery easily uh just basically throw\ntheir data into multiple algorithms and\nsee which one deserves their their\nattention\nand if you are in uh jump uh Pro 16 this\nis where you're going to find the\ndecision threshold tool living and it\nhad not yet been implemented at all the\nindividual modeling platforms so instead\nyou will find it\num living right here under the red\ntriangle\nso I just want to point out the\nexistence that tool sometimes it's very\nhandy to be able to just run multiple of\nthese algorithms at the same time\nbriefly about model comparison and\ndeployment so that is once you fit maybe\nmultiple models what tools are available\nto you to continue working with them\nso let's actually pull up I'm going to\npull up our original let's see 21 Split\nDecision tree here I did this briefly at\nthe outset there are multiple ways for\nexporting and working with the model if\nyou're using jump in the classroom I\nhighly recommend using this formula\nDepot tool that we saw before and you're\ngoing to be able to write a model\ndirectly to it by using\nthe publish prediction formula option\nthat you're going to find Under the Red\nTriangle sometimes it's under save\ncolumns other times when they're shorter\nred triangle menus it'll actually be a\ntop level option but when I do it\nautomatically puts the formula for that\nmodel into this formula Depot window\nwhich you can actually save so now the\nmodel is independent of any one\nparticular data table you can always\nactually just create a new formula Depot\nby going to\num the new menu as well actually it's\nsomewhere may have been moved\nanyway we have our formula Depot now we\nhave one model living in it let's say\nthat we want to compare the performance\nof that model versus a couple others so\nlet's take this boosted tree model so\nI'll just run that again quickly\nand I will go to save columns publish\nprediction formula and that's been added\nto our formula Depot and let's do one\nmore I'm going to do the neural net\nmodel that we were working with before\nand I will\nunder the appropriate red triangle here\ngo to publish prediction formula\nall right I have multiple models that\nI've built and tuned and they're living\nthis formula Depot\nif I want to know which model performed\nwith the best overall I can find out by\ngoing to the red triangle and going to\nmodel comparison and I'll say I want to\ncompare all three of these models\njump hopefully says hey do you want to\nuse that validation column when\nComputing all the fit statistics and\nI'll say yes please\nuh yes I forgot to change something on\none of these uh\nthese particular formulas here\nall right we may need to let's see just\nso it doesn't wait because it's trying\nto turn on something let me pull this\nback up\nand we'll actually just take a look\ndirectly at\na formula Depot that I have available\nright here\nso let's see let me bring up our\nJournal again as well\nthere we go\nso if we go to the red triangle and go\nto model comparison\nonce we get our table opened up there it\nis get back to where we were\nwe'll say that we want to compare these\nthree models\nwith our validation column\nand now we have our table out so for the\ntraining validation test sets we have a\nvariety of fit measures\nwe're looking at our entropy R square\nand maybe even down here in the\nvalidation or excuse me the test set and\nsee that the boosted tree did in fact\noutperform the uh boosted neural net\nthat we tried and the bootstrap for us\nin use case\nand then of course other ways in which\nwe might want to compare these models\nfor example looking at the ROC curves\nor perhaps maybe a lift curve or even\ntaking a look at the profiler and I'll\nalso point out that here is where you\ncan create a average model across the\nthree and actually compare that to The\nOriginals as well to see if maybe an\nensemble of these three models\noutperforms uh any model on its own\nnow finally oh I closed that down too\nearly we did have a question about this\nso I'll bring it back quickly here\nfinally for model deployment we already\nsaw that you can for any given model\njust go to run script and run it on a\ntable and it will automatically score\nthe observations in that table but you\ncan also go to something like generate\npython code or generate SAS code and it\nwill generate the code that implements\nthat model and so we actually do have a\nnumber of people who whether in teaching\nor research or out there in Industry use\njump alongside something like Python and\nmay actually want to take this model and\nimport it into a python library to\ncontinue working with it here's all the\ncode that you would need to do that\nso I see we're starting to run up on\ntime\nso I'm just going to highlight a couple\nthings in preparing for modeling uh\nthat's worth being aware of you know I\nmentioned before and I think a lot of us\nlooking at the poll results have a fair\nbit of jump experience so you probably\nknow about a lot of other tools in Jump\nwhen it comes to predictive modeling you\nmight particularly uh be interested in\nthe tools for exploring outliers or\nexploring missing values at the outset\nof a modeling exercise\ndata Integrity of course is kind of the\none of the first considerations before\nactual model building if you'd like to\ntake a closer look at those tools we're\nhappy to show them to you again you can\nalways email academicatjump.com\nso now finally we will take a quick\nquick look at the formula editor here\nwhich is great for as it says feature\nengineering\nso this is another commonly taught thing\nin data science and predictive modeling\nthe fact that we might actually want to\nuse some of the raw values we have to\nderive new variables that might be\nbetter predictors than the raw variables\nthemselves let's take one example here\nwe have the mortgage due on somebody's\nhome and we have the currently assessed\nvalue of their home so the difference\nbetween these two let's say so the value\nof their home minus the mortgage that\nthey have due would be the equity that\nthey have in their home and maybe we\nwant to enter Equity as a potential\npredictor\nso I'm going to just ask junk to create\nthat for me quickly here I'm going to\nright click after having selected these\ntwo columns and when you right click on\nany column you're going to find this new\nformula column option where you can\nperform Transformations for example or\nin this case I'm going to take the\ndifference between the two so now I have\nvalue minus mortgage due and this\nrepresents the equity that somebody has\nnow if I right click and go to formula\nyou can see what happened is Jump just\nwrote a column formula just a simple one\nvalue minus mortgage due to compute this\nfor us\nover on the left we see a really large\nrange of different operations or\nfunctions that we can put into a formula\nfor example here number of different\ntransformations\nor maybe we want to do comparisons\nor conditionals\nor compute different statistics for\nexample do something minus the uh the\nthe mean value of another column uh\nmaybe in this case what I'm going to do\nactually is just while this is\nhighlighted I'm going to take the value\nminus mortgage due\nand put that over the value and so this\nis actually going to be the percent\nequity that they have in their home so\nI'll click ok\nand now we have those values here\nso if you're teaching things like screen\nyour data or\num feature engineering up front just\nknow that jump has tools for you to do\nthat easily as well\nnow finally to wrap up and then we'll\nhang out and take what remaining\nquestions we have I do want to highlight\nthe teaching resources that you might\nfind helpful for integrating jump Pro\ninto your course to maybe complement\nwhat you're doing or even just lighten\nyour your load a little bit\nso let's actually just pull up a browser\nhere\nand go to jump.com teach\nwhere you're going to find all of our\nfree teaching materials they're broken\nout by course topic\nso uh in this case you might want to as\nthis little link implies down here go to\nthe analytics and data science materials\nand you're going to find a number of\ndifferent categories for example books\nthat you might use in your course\nI do want to highlight the step-by-step\nguides so if you click on recommended\nguides and videos you're going to see\nlinks where each one takes you to a\nquick instructional video and one page\nguide on how to do that analysis in job\nso for example if I click on\nclassification trees\nwe are going to go to a page in what's\nknown as our learning library that will\nshow us in just uh you know a short I\nthink about three minute video how to do\nclassification trees\nso here's that video I could play it\nright here\nor also click view guide to go to a\none-page PDF summary of that video with\nClick by click instructions and\nscreenshots\nthese are really handy things to give to\nyour students in advance to avoid\ngetting a lot of questions about just\nyou know how do I do X in Jump\nif you want to go to the complete\nlibrary of these videos just go to\njump.com learn\nnow finally if we back up just a little\nbit you'll notice another particularly\nuh well utilized resource that's our\ncase study Library\nso let's take a look at the recommended\ncase studies\nin fact I'm going to look at this one\nhere sticking with classification trees\non credit card marketing\nso if we look down to the credit card\nmarketing case study we're going to find\na PDF that takes us to a real world\npredictive modeling problem with a\nworked example and exercises for\nstudents to do so it begins with just\nthe problem background and the data\nprogresses through a number of\nscreenshots with instructions for how to\nactually perform these analyzes and\nlittle bits of additional interpretation\njust the basics of how to interpret the\nresults\nthough we try to be relatively light on\nthat so that you have the freedom in\nyour course to explain things how you\nwant\nat the end of each one of these we get\nall the way to the bottom you will\nactually find uh one or more exercises\nfor students to apply some of the\ntechniques they just learned in a new\ncontext here\nback in the case study Library you'll\nnotice that each one comes bundled with\nthe data set where you can just click\ndownload the data\nin this page that we're looking at with\nall of these case studies on it is our\ncase study library and you can find it\nat jump.com cases\nso that's all that I have planned for\ntoday so if you take away nothing else\nit's just that jump Pro is it's really a\nfull-featured end-to-end predictive\nmodeling tool what makes it special is\nthat it provides point-and-click you\nknow Visual and interactive interface to\nreally powerful predictive modeling\nmethods and fits very nicely in uh\ncourse or curriculum where uh maybe\nstudents are not as comfortable with\ncoding or coding isn't necessarily one\nof the primary learning objectives so it\ntakes these powerful techniques and\nmakes them accessible to that kind of\nstudent population\n",
  "words": [
    "welcome",
    "today",
    "webinar",
    "teaching",
    "predictive",
    "modeling",
    "jump",
    "pro",
    "presenter",
    "today",
    "ross",
    "matusalem",
    "academic",
    "ambassador",
    "statistical",
    "scientist",
    "pleasure",
    "team",
    "john",
    "ross",
    "available",
    "ready",
    "go",
    "indeed",
    "kevin",
    "thanks",
    "uh",
    "everybody",
    "couple",
    "announcements",
    "joining",
    "get",
    "going",
    "um",
    "third",
    "webinar",
    "spring",
    "semester",
    "webinar",
    "series",
    "occurring",
    "every",
    "tuesday",
    "1",
    "pm",
    "eastern",
    "time",
    "couple",
    "webinars",
    "coming",
    "next",
    "two",
    "weeks",
    "today",
    "starting",
    "series",
    "multivariate",
    "methods",
    "things",
    "like",
    "principal",
    "component",
    "analysis",
    "factor",
    "analysis",
    "structural",
    "equation",
    "modeling",
    "finish",
    "april",
    "4th",
    "uh",
    "genomics",
    "research",
    "methods",
    "jump",
    "pro",
    "17",
    "jump",
    "pro",
    "17",
    "came",
    "past",
    "fall",
    "new",
    "tools",
    "specifically",
    "analyzing",
    "genomics",
    "data",
    "take",
    "look",
    "register",
    "webinars",
    "head",
    "academic",
    "webinars",
    "need",
    "help",
    "learning",
    "jump",
    "today",
    "please",
    "hesitate",
    "reach",
    "academic",
    "arrange",
    "support",
    "know",
    "hop",
    "quick",
    "zoom",
    "kevin",
    "another",
    "one",
    "colleagues",
    "answer",
    "questions",
    "show",
    "tools",
    "work",
    "um",
    "formal",
    "informal",
    "group",
    "workshops",
    "colleagues",
    "students",
    "want",
    "arrange",
    "something",
    "like",
    "totally",
    "complementary",
    "reach",
    "academic",
    "foreign",
    "jump",
    "course",
    "thinking",
    "using",
    "jump",
    "course",
    "please",
    "head",
    "teach",
    "library",
    "free",
    "teaching",
    "materials",
    "includes",
    "wide",
    "range",
    "materials",
    "including",
    "case",
    "studies",
    "sample",
    "data",
    "sets",
    "video",
    "tutorials",
    "number",
    "things",
    "well",
    "actually",
    "today",
    "towards",
    "end",
    "take",
    "look",
    "materials",
    "specific",
    "today",
    "topic",
    "uh",
    "finally",
    "kevin",
    "mentioned",
    "please",
    "could",
    "use",
    "q",
    "window",
    "questions",
    "today",
    "chat",
    "window",
    "kind",
    "hard",
    "keep",
    "track",
    "questions",
    "ones",
    "answered",
    "yet",
    "chat",
    "could",
    "look",
    "little",
    "overlapping",
    "speech",
    "bubble",
    "icon",
    "pull",
    "q",
    "panel",
    "zoom",
    "type",
    "questions",
    "throughout",
    "would",
    "great",
    "kevin",
    "answer",
    "many",
    "questions",
    "go",
    "along",
    "stop",
    "couple",
    "times",
    "field",
    "questions",
    "live",
    "well",
    "thanks",
    "everybody",
    "coming",
    "let",
    "move",
    "jump",
    "talk",
    "teaching",
    "predictive",
    "modeling",
    "jump",
    "pro",
    "uh",
    "goal",
    "today",
    "show",
    "everything",
    "need",
    "know",
    "start",
    "using",
    "jump",
    "pro",
    "teach",
    "predictive",
    "modeling",
    "course",
    "uh",
    "jump",
    "pro",
    "going",
    "see",
    "predictive",
    "modeling",
    "tool",
    "addition",
    "predictive",
    "modeling",
    "algorithms",
    "might",
    "expect",
    "early",
    "stages",
    "get",
    "data",
    "prepare",
    "explore",
    "maybe",
    "even",
    "feature",
    "engineering",
    "way",
    "model",
    "validation",
    "model",
    "deployment",
    "really",
    "complete",
    "package",
    "could",
    "used",
    "entire",
    "semester",
    "long",
    "even",
    "longer",
    "sequence",
    "courses",
    "predictive",
    "modeling",
    "mention",
    "also",
    "used",
    "pretty",
    "extensively",
    "industry",
    "financial",
    "services",
    "market",
    "research",
    "retail",
    "also",
    "research",
    "development",
    "manufacturing",
    "tool",
    "students",
    "absolutely",
    "use",
    "get",
    "real",
    "world",
    "want",
    "issue",
    "couple",
    "quick",
    "caveats",
    "get",
    "started",
    "one",
    "one",
    "hour",
    "going",
    "enough",
    "time",
    "go",
    "deep",
    "specific",
    "modeling",
    "technique",
    "going",
    "see",
    "least",
    "think",
    "four",
    "different",
    "ones",
    "um",
    "uh",
    "examples",
    "queued",
    "course",
    "mentioned",
    "help",
    "specific",
    "needs",
    "specific",
    "questions",
    "email",
    "academic",
    "uh",
    "finally",
    "jump",
    "pro",
    "version",
    "right",
    "came",
    "past",
    "october",
    "want",
    "highlight",
    "um",
    "predictive",
    "modeling",
    "standard",
    "jump",
    "number",
    "features",
    "enable",
    "basic",
    "predictive",
    "modeling",
    "applications",
    "really",
    "area",
    "jump",
    "pro",
    "appropriate",
    "tool",
    "uh",
    "university",
    "license",
    "jump",
    "pro",
    "might",
    "able",
    "use",
    "jump",
    "student",
    "subscription",
    "teach",
    "predictive",
    "modeling",
    "basics",
    "really",
    "topic",
    "justice",
    "uh",
    "jump",
    "pro",
    "tool",
    "want",
    "go",
    "along",
    "today",
    "might",
    "say",
    "jump",
    "know",
    "jump",
    "jump",
    "feature",
    "really",
    "going",
    "showing",
    "jump",
    "pro",
    "please",
    "forgive",
    "use",
    "pro",
    "uh",
    "every",
    "time",
    "right",
    "let",
    "actually",
    "get",
    "started",
    "going",
    "give",
    "idea",
    "uh",
    "predictive",
    "modeling",
    "works",
    "jump",
    "pro",
    "fact",
    "course",
    "always",
    "notice",
    "right",
    "get",
    "started",
    "misspellings",
    "go",
    "um",
    "going",
    "take",
    "look",
    "build",
    "validate",
    "models",
    "compare",
    "multiple",
    "models",
    "deploy",
    "also",
    "upfront",
    "things",
    "like",
    "screening",
    "data",
    "feature",
    "engineering",
    "get",
    "things",
    "want",
    "boost",
    "intuition",
    "type",
    "predictive",
    "modeling",
    "tool",
    "jump",
    "pro",
    "today",
    "going",
    "take",
    "look",
    "data",
    "version",
    "sample",
    "data",
    "set",
    "find",
    "help",
    "sample",
    "index",
    "previous",
    "versions",
    "jump",
    "uh",
    "sample",
    "library",
    "5960",
    "home",
    "equity",
    "loan",
    "applicants",
    "including",
    "things",
    "like",
    "amount",
    "loan",
    "requested",
    "amount",
    "due",
    "mortgage",
    "forth",
    "key",
    "outcome",
    "variable",
    "whether",
    "person",
    "ultimately",
    "defaulted",
    "goal",
    "data",
    "set",
    "create",
    "predictive",
    "model",
    "accurately",
    "assign",
    "default",
    "probabilities",
    "new",
    "applicants",
    "use",
    "make",
    "decisions",
    "whether",
    "actually",
    "issue",
    "loan",
    "let",
    "build",
    "quick",
    "model",
    "show",
    "predictive",
    "modeling",
    "jump",
    "pro",
    "works",
    "let",
    "say",
    "wanted",
    "build",
    "neural",
    "network",
    "model",
    "using",
    "factors",
    "right",
    "predict",
    "default",
    "variable",
    "go",
    "analyze",
    "predictive",
    "modeling",
    "choose",
    "tool",
    "choice",
    "say",
    "want",
    "predict",
    "default",
    "using",
    "predictors",
    "right",
    "click",
    "ok",
    "get",
    "neural",
    "net",
    "configuration",
    "let",
    "say",
    "uh",
    "validate",
    "model",
    "talk",
    "model",
    "validation",
    "fair",
    "bit",
    "today",
    "want",
    "use",
    "validation",
    "procedure",
    "want",
    "neural",
    "network",
    "click",
    "go",
    "remaining",
    "defaults",
    "output",
    "couple",
    "clicks",
    "fit",
    "neural",
    "net",
    "actually",
    "go",
    "diagram",
    "red",
    "triangle",
    "menu",
    "new",
    "jump",
    "going",
    "see",
    "click",
    "lot",
    "red",
    "triangles",
    "context",
    "sensitive",
    "menus",
    "provide",
    "options",
    "actually",
    "see",
    "quick",
    "diagram",
    "neural",
    "net",
    "fit",
    "see",
    "performed",
    "validation",
    "automatically",
    "number",
    "statistics",
    "tell",
    "well",
    "model",
    "today",
    "going",
    "looking",
    "mostly",
    "entropy",
    "r",
    "square",
    "value",
    "ranges",
    "zero",
    "one",
    "one",
    "uh",
    "representative",
    "perfect",
    "predictions",
    "uh",
    "zero",
    "means",
    "better",
    "guessing",
    "base",
    "rate",
    "let",
    "take",
    "look",
    "actually",
    "model",
    "visually",
    "tool",
    "going",
    "look",
    "fair",
    "bit",
    "called",
    "prediction",
    "profiler",
    "profiler",
    "let",
    "get",
    "bottom",
    "screen",
    "us",
    "predicted",
    "probability",
    "default",
    "top",
    "defaulting",
    "bottom",
    "different",
    "predictors",
    "entered",
    "model",
    "change",
    "value",
    "one",
    "predictors",
    "see",
    "prediction",
    "model",
    "changes",
    "example",
    "increase",
    "value",
    "home",
    "see",
    "actually",
    "observe",
    "increased",
    "predicted",
    "probability",
    "default",
    "goes",
    "looking",
    "number",
    "delinquent",
    "lines",
    "credit",
    "somebody",
    "number",
    "lines",
    "credit",
    "failed",
    "meet",
    "make",
    "minimum",
    "monthly",
    "payment",
    "us",
    "familiar",
    "neural",
    "networks",
    "know",
    "often",
    "considered",
    "black",
    "box",
    "models",
    "hard",
    "actually",
    "understand",
    "nature",
    "relationships",
    "factors",
    "response",
    "actually",
    "see",
    "nice",
    "visual",
    "tool",
    "gives",
    "us",
    "idea",
    "shape",
    "relationships",
    "uh",
    "change",
    "depending",
    "values",
    "factors",
    "right",
    "clicks",
    "built",
    "neural",
    "network",
    "done",
    "pulled",
    "interactive",
    "visual",
    "representation",
    "model",
    "let",
    "say",
    "actually",
    "want",
    "use",
    "model",
    "ultimately",
    "want",
    "forget",
    "last",
    "mile",
    "new",
    "set",
    "loan",
    "applications",
    "1",
    "000",
    "new",
    "applications",
    "applicant",
    "information",
    "um",
    "yet",
    "know",
    "ever",
    "default",
    "clicks",
    "publish",
    "model",
    "choose",
    "score",
    "new",
    "loan",
    "applications",
    "new",
    "applications",
    "predicted",
    "probability",
    "default",
    "save",
    "ones",
    "actually",
    "missing",
    "application",
    "information",
    "click",
    "interactive",
    "histogram",
    "example",
    "find",
    "approximately",
    "100",
    "individuals",
    "likely",
    "default",
    "hoping",
    "working",
    "quick",
    "example",
    "building",
    "validating",
    "deploying",
    "neural",
    "net",
    "model",
    "gives",
    "idea",
    "predictive",
    "modeling",
    "works",
    "jump",
    "interface",
    "involves",
    "um",
    "interactive",
    "graphics",
    "allows",
    "automatic",
    "model",
    "validation",
    "tuning",
    "makes",
    "actually",
    "working",
    "models",
    "built",
    "pretty",
    "easy",
    "uh",
    "really",
    "think",
    "jump",
    "pro",
    "great",
    "tool",
    "introducing",
    "students",
    "predictive",
    "modeling",
    "concepts",
    "techniques",
    "without",
    "software",
    "getting",
    "way",
    "much",
    "mean",
    "certainly",
    "course",
    "curriculum",
    "coding",
    "maybe",
    "secondary",
    "learning",
    "objective",
    "maybe",
    "occurs",
    "later",
    "curriculum",
    "perhaps",
    "tool",
    "like",
    "jump",
    "pro",
    "make",
    "really",
    "powerful",
    "predictive",
    "modeling",
    "techniques",
    "accessible",
    "uh",
    "students",
    "students",
    "might",
    "necessarily",
    "know",
    "code",
    "prepared",
    "learn",
    "coding",
    "time",
    "learning",
    "techniques",
    "let",
    "close",
    "going",
    "get",
    "details",
    "works",
    "jump",
    "pro",
    "go",
    "ahead",
    "save",
    "journal",
    "data",
    "set",
    "close",
    "everything",
    "else",
    "let",
    "talk",
    "predictive",
    "modeling",
    "capabilities",
    "jump",
    "pro",
    "general",
    "mention",
    "posting",
    "recording",
    "jump",
    "academic",
    "webinar",
    "library",
    "think",
    "kevin",
    "already",
    "could",
    "post",
    "chat",
    "link",
    "would",
    "helpful",
    "everyone",
    "able",
    "download",
    "journal",
    "well",
    "helpful",
    "information",
    "links",
    "one",
    "take",
    "capabilities",
    "menu",
    "going",
    "find",
    "predictive",
    "modeling",
    "machine",
    "learning",
    "really",
    "capabilities",
    "focusing",
    "today",
    "find",
    "pretty",
    "full",
    "list",
    "different",
    "predictive",
    "modeling",
    "algorithms",
    "additional",
    "tools",
    "capabilities",
    "example",
    "uh",
    "cross",
    "validation",
    "techniques",
    "um",
    "know",
    "model",
    "validation",
    "statistics",
    "graphs",
    "forth",
    "go",
    "ahead",
    "look",
    "leisure",
    "want",
    "actually",
    "give",
    "quick",
    "condensed",
    "list",
    "different",
    "types",
    "models",
    "capabilities",
    "jump",
    "pro",
    "includes",
    "linear",
    "models",
    "uh",
    "particular",
    "uh",
    "relevant",
    "regularized",
    "penalized",
    "regression",
    "techniques",
    "like",
    "lasso",
    "saw",
    "neural",
    "nets",
    "also",
    "common",
    "algorithms",
    "naive",
    "bayes",
    "k",
    "nearest",
    "neighbors",
    "support",
    "vector",
    "machines",
    "variety",
    "algorithms",
    "based",
    "decision",
    "trees",
    "classification",
    "regression",
    "trees",
    "uh",
    "call",
    "bootstrap",
    "force",
    "may",
    "also",
    "know",
    "random",
    "forest",
    "boosted",
    "trees",
    "even",
    "via",
    "click",
    "download",
    "uh",
    "xg",
    "boost",
    "stream",
    "gradient",
    "boosting",
    "see",
    "going",
    "show",
    "today",
    "install",
    "simple",
    "like",
    "macro",
    "jump",
    "get",
    "xg",
    "boost",
    "capabilities",
    "well",
    "addition",
    "algorithms",
    "number",
    "tools",
    "automated",
    "automated",
    "model",
    "validation",
    "tuning",
    "tools",
    "model",
    "uh",
    "comparisons",
    "use",
    "multiple",
    "techniques",
    "want",
    "see",
    "one",
    "performs",
    "best",
    "see",
    "pretty",
    "easy",
    "also",
    "going",
    "take",
    "look",
    "tool",
    "called",
    "decision",
    "threshold",
    "explorer",
    "allows",
    "us",
    "categorical",
    "outcome",
    "classification",
    "models",
    "set",
    "decision",
    "threshold",
    "classification",
    "already",
    "saw",
    "little",
    "bit",
    "scoring",
    "new",
    "observations",
    "see",
    "little",
    "bit",
    "well",
    "upfront",
    "tools",
    "data",
    "screening",
    "feature",
    "engineering",
    "want",
    "outset",
    "make",
    "clear",
    "going",
    "see",
    "really",
    "everything",
    "today",
    "jump",
    "really",
    "full",
    "featured",
    "predictive",
    "modeling",
    "tool",
    "let",
    "actually",
    "get",
    "building",
    "validating",
    "models",
    "want",
    "get",
    "started",
    "building",
    "predictive",
    "model",
    "jump",
    "pro",
    "going",
    "go",
    "really",
    "one",
    "two",
    "places",
    "want",
    "use",
    "regression",
    "technique",
    "maybe",
    "regularized",
    "regression",
    "like",
    "lasso",
    "model",
    "want",
    "go",
    "analyze",
    "fit",
    "model",
    "particular",
    "see",
    "moment",
    "particular",
    "way",
    "set",
    "get",
    "um",
    "type",
    "regression",
    "tool",
    "allow",
    "fit",
    "models",
    "going",
    "start",
    "though",
    "analyze",
    "predictive",
    "modeling",
    "find",
    "right",
    "fit",
    "model",
    "going",
    "see",
    "mean",
    "traditionally",
    "referred",
    "know",
    "machine",
    "learning",
    "maybe",
    "data",
    "mining",
    "tools",
    "neural",
    "networks",
    "partition",
    "classification",
    "regression",
    "tree",
    "tool",
    "forth",
    "way",
    "well",
    "additional",
    "tools",
    "uh",
    "really",
    "specific",
    "predictive",
    "modeling",
    "context",
    "let",
    "actually",
    "get",
    "started",
    "one",
    "going",
    "choose",
    "us",
    "um",
    "classification",
    "tree",
    "use",
    "know",
    "process",
    "going",
    "building",
    "one",
    "opportunity",
    "teach",
    "little",
    "bit",
    "predictive",
    "modeling",
    "platforms",
    "uh",
    "work",
    "general",
    "jump",
    "launched",
    "predictive",
    "modeling",
    "platform",
    "partition",
    "see",
    "left",
    "list",
    "columns",
    "see",
    "right",
    "list",
    "roles",
    "columns",
    "variables",
    "play",
    "analysis",
    "first",
    "thing",
    "want",
    "point",
    "launch",
    "tool",
    "first",
    "time",
    "jump",
    "may",
    "course",
    "wonder",
    "well",
    "options",
    "maybe",
    "know",
    "buy",
    "see",
    "something",
    "informative",
    "missing",
    "mean",
    "always",
    "questions",
    "initially",
    "easiest",
    "way",
    "get",
    "answered",
    "right",
    "need",
    "click",
    "help",
    "model",
    "launch",
    "windows",
    "button",
    "sneak",
    "folks",
    "especially",
    "newer",
    "users",
    "always",
    "going",
    "help",
    "button",
    "inside",
    "tools",
    "click",
    "take",
    "right",
    "relevant",
    "documentation",
    "learn",
    "set",
    "analysis",
    "first",
    "place",
    "ever",
    "feeling",
    "unsure",
    "get",
    "started",
    "click",
    "help",
    "button",
    "predicted",
    "modeling",
    "platforms",
    "launch",
    "window",
    "work",
    "way",
    "would",
    "select",
    "thing",
    "want",
    "predict",
    "loan",
    "defaults",
    "put",
    "response",
    "role",
    "predictors",
    "put",
    "x",
    "factor",
    "role",
    "see",
    "little",
    "scroll",
    "bar",
    "12",
    "predictors",
    "uh",
    "course",
    "uh",
    "predictive",
    "modeling",
    "either",
    "build",
    "classification",
    "model",
    "regression",
    "model",
    "launch",
    "tell",
    "jump",
    "one",
    "supposed",
    "jump",
    "know",
    "based",
    "call",
    "modeling",
    "type",
    "data",
    "look",
    "default",
    "going",
    "see",
    "three",
    "red",
    "bars",
    "indicate",
    "jump",
    "treating",
    "nominal",
    "variable",
    "unordered",
    "categories",
    "look",
    "say",
    "something",
    "like",
    "loan",
    "see",
    "blue",
    "triangle",
    "means",
    "jump",
    "considering",
    "continuous",
    "variable",
    "based",
    "whether",
    "modeling",
    "type",
    "data",
    "set",
    "nominal",
    "continuous",
    "ordinal",
    "modeling",
    "types",
    "well",
    "jump",
    "know",
    "appropriate",
    "type",
    "model",
    "build",
    "ever",
    "need",
    "change",
    "go",
    "data",
    "table",
    "columns",
    "list",
    "left",
    "click",
    "right",
    "one",
    "icons",
    "set",
    "model",
    "type",
    "actually",
    "one",
    "number",
    "different",
    "pieces",
    "metadata",
    "associate",
    "column",
    "always",
    "change",
    "clicking",
    "column",
    "header",
    "going",
    "column",
    "info",
    "spare",
    "us",
    "wanted",
    "point",
    "get",
    "rolling",
    "okay",
    "set",
    "basic",
    "want",
    "predict",
    "want",
    "use",
    "predict",
    "going",
    "click",
    "ok",
    "highlight",
    "next",
    "thing",
    "know",
    "predictive",
    "modeling",
    "jump",
    "launch",
    "one",
    "tools",
    "instead",
    "producing",
    "final",
    "model",
    "output",
    "going",
    "provide",
    "uh",
    "kind",
    "control",
    "window",
    "build",
    "model",
    "though",
    "see",
    "ways",
    "fully",
    "automated",
    "well",
    "uh",
    "without",
    "getting",
    "much",
    "decision",
    "trees",
    "want",
    "give",
    "quick",
    "idea",
    "work",
    "know",
    "uh",
    "right",
    "looking",
    "representation",
    "data",
    "see",
    "red",
    "20",
    "percent",
    "uh",
    "nearly",
    "6",
    "000",
    "rows",
    "data",
    "defaulted",
    "loans",
    "meaning",
    "80",
    "percent",
    "actually",
    "see",
    "80",
    "20",
    "split",
    "blue",
    "red",
    "represented",
    "graphically",
    "click",
    "split",
    "algorithm",
    "finds",
    "cut",
    "point",
    "along",
    "one",
    "predictors",
    "uh",
    "maximally",
    "explains",
    "probability",
    "default",
    "look",
    "see",
    "split",
    "debt",
    "income",
    "ratio",
    "debt",
    "income",
    "ratio",
    "greater",
    "equal",
    "cases",
    "missing",
    "data",
    "going",
    "address",
    "little",
    "bit",
    "uh",
    "default",
    "probability",
    "quite",
    "high",
    "actually",
    "63",
    "percent",
    "whereas",
    "lower",
    "debt",
    "income",
    "ratio",
    "pretty",
    "low",
    "default",
    "probability",
    "point",
    "zero",
    "seven",
    "seven",
    "percent",
    "algorithm",
    "works",
    "builds",
    "tree",
    "uh",
    "iteratively",
    "split",
    "get",
    "name",
    "partition",
    "recursively",
    "partition",
    "data",
    "groups",
    "based",
    "different",
    "cut",
    "points",
    "develop",
    "predictions",
    "following",
    "tree",
    "somebody",
    "low",
    "debt",
    "income",
    "ratio",
    "might",
    "end",
    "might",
    "ask",
    "well",
    "many",
    "delinquent",
    "lines",
    "credit",
    "let",
    "say",
    "none",
    "delinquent",
    "lines",
    "credit",
    "less",
    "two",
    "would",
    "derive",
    "prediction",
    "right",
    "say",
    "predicted",
    "probability",
    "default",
    "oh",
    "five",
    "percent",
    "little",
    "bit",
    "decision",
    "trees",
    "work",
    "teach",
    "predictive",
    "modeling",
    "uh",
    "likely",
    "one",
    "topics",
    "course",
    "uh",
    "know",
    "much",
    "predictive",
    "modeling",
    "know",
    "one",
    "biggest",
    "things",
    "algorithms",
    "way",
    "either",
    "learning",
    "incrementally",
    "multiple",
    "different",
    "settings",
    "need",
    "specify",
    "often",
    "want",
    "able",
    "tune",
    "model",
    "order",
    "figure",
    "best",
    "settings",
    "get",
    "accurate",
    "predictions",
    "next",
    "thing",
    "highlight",
    "predictive",
    "modeling",
    "platforms",
    "jump",
    "kind",
    "capability",
    "model",
    "tuning",
    "model",
    "validation",
    "purposes",
    "actually",
    "want",
    "know",
    "best",
    "number",
    "splits",
    "tree",
    "without",
    "getting",
    "details",
    "familiar",
    "predicted",
    "model",
    "know",
    "kept",
    "splitting",
    "tree",
    "indefinitely",
    "maybe",
    "tens",
    "even",
    "hundreds",
    "splits",
    "probably",
    "end",
    "fitting",
    "data",
    "tree",
    "fit",
    "noise",
    "signal",
    "let",
    "see",
    "context",
    "tool",
    "would",
    "use",
    "one",
    "capabilities",
    "uh",
    "determine",
    "number",
    "splits",
    "tree",
    "go",
    "analyze",
    "predictive",
    "modeling",
    "partition",
    "case",
    "going",
    "click",
    "recall",
    "going",
    "populate",
    "defaults",
    "predictors",
    "back",
    "response",
    "factor",
    "roles",
    "case",
    "little",
    "box",
    "says",
    "uh",
    "proportion",
    "data",
    "want",
    "hold",
    "back",
    "validation",
    "set",
    "going",
    "say",
    "want",
    "take",
    "30",
    "percent",
    "data",
    "withhold",
    "every",
    "time",
    "make",
    "split",
    "going",
    "use",
    "4159",
    "observations",
    "uh",
    "training",
    "set",
    "decide",
    "split",
    "test",
    "good",
    "model",
    "predicting",
    "data",
    "seen",
    "yet",
    "remaining",
    "30",
    "see",
    "request",
    "single",
    "split",
    "box",
    "populates",
    "information",
    "telling",
    "us",
    "r",
    "square",
    "column",
    "stands",
    "entropy",
    "r",
    "square",
    "version",
    "r",
    "square",
    "useful",
    "categorical",
    "data",
    "uh",
    "well",
    "higher",
    "values",
    "better",
    "go",
    "button",
    "click",
    "go",
    "looks",
    "like",
    "jump",
    "case",
    "landed",
    "15",
    "split",
    "tree",
    "split",
    "history",
    "graph",
    "actually",
    "showing",
    "across",
    "numbers",
    "splits",
    "tested",
    "way",
    "25",
    "splits",
    "um",
    "blue",
    "well",
    "predicting",
    "training",
    "data",
    "red",
    "validation",
    "data",
    "zoom",
    "little",
    "bit",
    "see",
    "slight",
    "difference",
    "particularly",
    "large",
    "one",
    "think",
    "dealing",
    "much",
    "overfitting",
    "see",
    "performs",
    "training",
    "data",
    "always",
    "rises",
    "always",
    "create",
    "model",
    "complexity",
    "seemed",
    "peak",
    "ability",
    "predict",
    "evalidation",
    "data",
    "15",
    "splits",
    "going",
    "actually",
    "see",
    "well",
    "really",
    "already",
    "remember",
    "launched",
    "neural",
    "network",
    "platform",
    "beginning",
    "selected",
    "validation",
    "way",
    "using",
    "technique",
    "um",
    "perform",
    "automatic",
    "model",
    "validation",
    "case",
    "stop",
    "fitting",
    "algorithm",
    "neural",
    "net",
    "see",
    "another",
    "example",
    "one",
    "tools",
    "ask",
    "jump",
    "withhold",
    "random",
    "set",
    "data",
    "validate",
    "stop",
    "algorithm",
    "automatically",
    "um",
    "sometimes",
    "want",
    "uh",
    "use",
    "tools",
    "working",
    "inside",
    "partition",
    "trying",
    "teach",
    "students",
    "basic",
    "idea",
    "withholding",
    "data",
    "us",
    "might",
    "valuable",
    "move",
    "maybe",
    "course",
    "curriculum",
    "may",
    "get",
    "towards",
    "fitting",
    "multiple",
    "models",
    "uh",
    "needing",
    "compare",
    "performance",
    "test",
    "set",
    "data",
    "may",
    "start",
    "talking",
    "need",
    "impose",
    "certain",
    "constraints",
    "randomize",
    "data",
    "training",
    "validation",
    "sets",
    "forth",
    "describes",
    "situation",
    "aware",
    "specific",
    "tool",
    "jump",
    "pro",
    "making",
    "know",
    "training",
    "validation",
    "data",
    "splits",
    "let",
    "see",
    "works",
    "first",
    "going",
    "point",
    "actually",
    "column",
    "like",
    "already",
    "data",
    "set",
    "validation",
    "column",
    "dividing",
    "data",
    "training",
    "set",
    "validation",
    "set",
    "actually",
    "also",
    "third",
    "set",
    "test",
    "set",
    "context",
    "uh",
    "partition",
    "see",
    "would",
    "make",
    "splits",
    "using",
    "training",
    "set",
    "decide",
    "stop",
    "splitting",
    "based",
    "performance",
    "validation",
    "set",
    "use",
    "third",
    "set",
    "test",
    "final",
    "test",
    "well",
    "model",
    "generalizes",
    "unseen",
    "data",
    "let",
    "actually",
    "create",
    "column",
    "like",
    "going",
    "go",
    "analyze",
    "predictive",
    "modeling",
    "find",
    "make",
    "validation",
    "column",
    "utility",
    "launched",
    "options",
    "restricting",
    "randomization",
    "rows",
    "data",
    "table",
    "different",
    "groups",
    "example",
    "stratification",
    "means",
    "stratified",
    "random",
    "sampling",
    "example",
    "could",
    "say",
    "stratify",
    "default",
    "training",
    "validation",
    "test",
    "sets",
    "proportion",
    "defaulted",
    "loans",
    "grouping",
    "columns",
    "particularly",
    "good",
    "blocking",
    "structures",
    "repeated",
    "measures",
    "example",
    "multiple",
    "measures",
    "per",
    "individual",
    "want",
    "randomly",
    "assign",
    "rows",
    "particular",
    "individual",
    "one",
    "set",
    "another",
    "want",
    "individual",
    "appearing",
    "training",
    "validation",
    "sets",
    "else",
    "get",
    "leakage",
    "could",
    "group",
    "individual",
    "cut",
    "point",
    "good",
    "uh",
    "oftentimes",
    "time",
    "ordered",
    "data",
    "want",
    "withhold",
    "recent",
    "two",
    "months",
    "data",
    "train",
    "everything",
    "could",
    "time",
    "column",
    "coupling",
    "going",
    "put",
    "default",
    "stratification",
    "also",
    "notice",
    "option",
    "making",
    "validation",
    "column",
    "basic",
    "holdout",
    "validation",
    "kind",
    "working",
    "far",
    "want",
    "validation",
    "make",
    "validation",
    "column",
    "well",
    "going",
    "stick",
    "hold",
    "validation",
    "purposes",
    "um",
    "eventually",
    "get",
    "hands",
    "journal",
    "click",
    "link",
    "right",
    "says",
    "validation",
    "methods",
    "documentation",
    "learn",
    "hold",
    "validation",
    "implemented",
    "jump",
    "various",
    "tools",
    "going",
    "drop",
    "right",
    "page",
    "says",
    "validation",
    "jump",
    "modeling",
    "talk",
    "different",
    "modeling",
    "excuse",
    "validation",
    "schemes",
    "click",
    "forward",
    "go",
    "different",
    "pages",
    "see",
    "schemes",
    "supported",
    "modeling",
    "platform",
    "also",
    "clicking",
    "forward",
    "see",
    "explicitly",
    "platforms",
    "support",
    "hold",
    "back",
    "versus",
    "validation",
    "going",
    "get",
    "deep",
    "great",
    "resources",
    "wondering",
    "validation",
    "methods",
    "available",
    "depending",
    "uh",
    "modeling",
    "technique",
    "using",
    "get",
    "back",
    "creating",
    "holdout",
    "validation",
    "column",
    "going",
    "stratify",
    "default",
    "click",
    "ok",
    "next",
    "specify",
    "much",
    "data",
    "goes",
    "group",
    "training",
    "set",
    "let",
    "say",
    "want",
    "60",
    "20",
    "percent",
    "validation",
    "test",
    "sets",
    "looks",
    "like",
    "nearly",
    "3",
    "600",
    "training",
    "set",
    "validation",
    "tests",
    "nearly",
    "want",
    "reproduce",
    "exact",
    "splits",
    "subsequent",
    "time",
    "enter",
    "random",
    "seed",
    "enter",
    "random",
    "seed",
    "every",
    "time",
    "splits",
    "know",
    "important",
    "teaching",
    "oftentimes",
    "producing",
    "kind",
    "example",
    "students",
    "need",
    "numerical",
    "results",
    "exactly",
    "match",
    "textbook",
    "example",
    "showed",
    "previously",
    "places",
    "jump",
    "setting",
    "random",
    "seat",
    "best",
    "way",
    "click",
    "go",
    "see",
    "table",
    "training",
    "validation",
    "test",
    "split",
    "different",
    "one",
    "see",
    "click",
    "training",
    "validation",
    "two",
    "distributed",
    "across",
    "three",
    "groups",
    "validation",
    "one",
    "one",
    "thing",
    "nice",
    "uh",
    "particular",
    "uh",
    "helping",
    "students",
    "understand",
    "reasons",
    "want",
    "careful",
    "randomly",
    "assign",
    "data",
    "validation",
    "groups",
    "using",
    "one",
    "columns",
    "use",
    "jumps",
    "tools",
    "actually",
    "explore",
    "randomization",
    "done",
    "uh",
    "suppose",
    "use",
    "term",
    "effective",
    "example",
    "stratified",
    "default",
    "let",
    "actually",
    "take",
    "look",
    "breakdown",
    "variable",
    "across",
    "three",
    "groups",
    "created",
    "never",
    "seen",
    "graph",
    "builder",
    "drag",
    "drop",
    "graphing",
    "tool",
    "going",
    "drag",
    "default",
    "validation",
    "2",
    "x",
    "change",
    "graph",
    "element",
    "mosaic",
    "plot",
    "familiar",
    "showing",
    "us",
    "breakdown",
    "across",
    "three",
    "groups",
    "almost",
    "like",
    "stacked",
    "bar",
    "chart",
    "uh",
    "defaults",
    "width",
    "showing",
    "size",
    "group",
    "training",
    "group",
    "60",
    "data",
    "width",
    "60",
    "total",
    "see",
    "quite",
    "clearly",
    "nice",
    "80",
    "20",
    "split",
    "uh",
    "across",
    "three",
    "groups",
    "oftentimes",
    "uh",
    "large",
    "enough",
    "data",
    "would",
    "expect",
    "let",
    "say",
    "mean",
    "predictors",
    "example",
    "debt",
    "income",
    "ratio",
    "approximately",
    "equal",
    "across",
    "validation",
    "groups",
    "assuming",
    "random",
    "assignment",
    "um",
    "know",
    "large",
    "enough",
    "sample",
    "could",
    "check",
    "something",
    "like",
    "help",
    "boost",
    "students",
    "intuitions",
    "maybe",
    "go",
    "analyze",
    "tabulate",
    "drag",
    "drop",
    "tool",
    "much",
    "like",
    "graph",
    "builder",
    "creating",
    "uh",
    "crosstabs",
    "summary",
    "tables",
    "let",
    "go",
    "ahead",
    "say",
    "want",
    "look",
    "continuous",
    "predictors",
    "want",
    "look",
    "sum",
    "value",
    "want",
    "look",
    "mean",
    "value",
    "going",
    "break",
    "validation",
    "column",
    "created",
    "look",
    "quick",
    "tabular",
    "way",
    "see",
    "means",
    "different",
    "groups",
    "approximately",
    "equal",
    "looks",
    "like",
    "difference",
    "probably",
    "attributed",
    "randomization",
    "highlight",
    "junk",
    "tools",
    "may",
    "find",
    "useful",
    "know",
    "using",
    "jump",
    "general",
    "course",
    "also",
    "working",
    "validation",
    "columns",
    "helping",
    "students",
    "actually",
    "understand",
    "happened",
    "would",
    "expect",
    "see",
    "training",
    "validation",
    "test",
    "splits",
    "done",
    "appropriately",
    "foreign",
    "though",
    "use",
    "additional",
    "uh",
    "excuse",
    "original",
    "validation",
    "column",
    "going",
    "relaunch",
    "partition",
    "platform",
    "put",
    "default",
    "predictors",
    "x",
    "going",
    "take",
    "validation",
    "column",
    "put",
    "validation",
    "rule",
    "going",
    "see",
    "jump",
    "let",
    "click",
    "ok",
    "notice",
    "three",
    "groups",
    "table",
    "go",
    "button",
    "allow",
    "continue",
    "splitting",
    "tree",
    "performance",
    "validation",
    "set",
    "levels",
    "ended",
    "21",
    "split",
    "tree",
    "blue",
    "represents",
    "training",
    "data",
    "red",
    "represents",
    "validation",
    "data",
    "orange",
    "represents",
    "final",
    "test",
    "data",
    "stop",
    "splitting",
    "validation",
    "performance",
    "peaked",
    "final",
    "test",
    "right",
    "looks",
    "like",
    "entropy",
    "r",
    "squares",
    "take",
    "domain",
    "knowledge",
    "expectations",
    "counts",
    "quote",
    "unquote",
    "good",
    "context",
    "might",
    "say",
    "bad",
    "let",
    "uh",
    "work",
    "model",
    "little",
    "bit",
    "one",
    "nice",
    "things",
    "um",
    "jump",
    "uh",
    "specifically",
    "classroom",
    "students",
    "necessarily",
    "need",
    "know",
    "everything",
    "might",
    "want",
    "request",
    "get",
    "analysis",
    "front",
    "red",
    "triangles",
    "mentioned",
    "contain",
    "additional",
    "options",
    "always",
    "go",
    "red",
    "triangle",
    "request",
    "information",
    "example",
    "wanted",
    "look",
    "fit",
    "statistics",
    "might",
    "go",
    "show",
    "fit",
    "details",
    "multiple",
    "measures",
    "model",
    "performance",
    "right",
    "top",
    "one",
    "actually",
    "depicted",
    "graph",
    "might",
    "also",
    "look",
    "something",
    "like",
    "generalized",
    "square",
    "misclassification",
    "rate",
    "assuming",
    "threshold",
    "confusion",
    "matrix",
    "see",
    "know",
    "model",
    "better",
    "worse",
    "committing",
    "false",
    "positives",
    "false",
    "negatives",
    "highlight",
    "additional",
    "options",
    "graphically",
    "assess",
    "classification",
    "performance",
    "least",
    "might",
    "want",
    "look",
    "roc",
    "curve",
    "bottom",
    "right",
    "roc",
    "curve",
    "test",
    "set",
    "familiar",
    "without",
    "getting",
    "details",
    "diagonal",
    "represents",
    "essentially",
    "random",
    "guessing",
    "farther",
    "curve",
    "gets",
    "corner",
    "better",
    "model",
    "distinguishing",
    "two",
    "categories",
    "often",
    "use",
    "area",
    "curve",
    "capture",
    "overall",
    "accuracy",
    "one",
    "would",
    "perfect",
    "see",
    "pretty",
    "good",
    "course",
    "uh",
    "saw",
    "neural",
    "net",
    "might",
    "want",
    "use",
    "interactive",
    "profiler",
    "visualize",
    "model",
    "request",
    "well",
    "predicted",
    "probability",
    "default",
    "values",
    "predictors",
    "x",
    "see",
    "example",
    "giant",
    "jump",
    "default",
    "probability",
    "right",
    "get",
    "number",
    "delinquent",
    "uh",
    "credit",
    "lines",
    "six",
    "see",
    "actually",
    "cross",
    "threshold",
    "effects",
    "kind",
    "enter",
    "leave",
    "based",
    "branch",
    "decision",
    "tree",
    "example",
    "go",
    "six",
    "see",
    "scroll",
    "number",
    "recent",
    "inquiries",
    "seem",
    "matter",
    "lower",
    "number",
    "delinquent",
    "credit",
    "lines",
    "look",
    "like",
    "number",
    "inquiries",
    "matters",
    "bit",
    "want",
    "highlight",
    "prediction",
    "profiler",
    "actually",
    "full",
    "featured",
    "tool",
    "exploring",
    "model",
    "red",
    "triangle",
    "number",
    "uh",
    "different",
    "options",
    "example",
    "optimizing",
    "particular",
    "um",
    "response",
    "uh",
    "profile",
    "um",
    "might",
    "use",
    "actually",
    "simulate",
    "outcomes",
    "one",
    "thing",
    "actually",
    "like",
    "predictive",
    "modeling",
    "especially",
    "kind",
    "black",
    "box",
    "like",
    "models",
    "actually",
    "go",
    "assess",
    "variable",
    "importance",
    "without",
    "getting",
    "details",
    "get",
    "call",
    "marginal",
    "model",
    "plots",
    "bottom",
    "marginal",
    "model",
    "plot",
    "actually",
    "essentially",
    "depicts",
    "average",
    "effect",
    "particular",
    "factor",
    "across",
    "many",
    "randomly",
    "resampled",
    "values",
    "factors",
    "see",
    "general",
    "spike",
    "default",
    "probability",
    "number",
    "delinquent",
    "credit",
    "lines",
    "six",
    "like",
    "saw",
    "see",
    "number",
    "recent",
    "inquiries",
    "general",
    "uptick",
    "around",
    "four",
    "um",
    "confidence",
    "bands",
    "around",
    "see",
    "range",
    "average",
    "flat",
    "see",
    "big",
    "effect",
    "um",
    "depending",
    "maybe",
    "values",
    "factors",
    "marginal",
    "model",
    "plots",
    "like",
    "somewhat",
    "peak",
    "average",
    "effect",
    "otherwise",
    "maybe",
    "opaque",
    "model",
    "um",
    "one",
    "example",
    "additional",
    "things",
    "find",
    "profiler",
    "last",
    "thing",
    "want",
    "point",
    "categorical",
    "responses",
    "mentioned",
    "tool",
    "exploring",
    "decision",
    "thresholds",
    "model",
    "ultimately",
    "going",
    "use",
    "need",
    "set",
    "cutoff",
    "point",
    "know",
    "predicted",
    "probability",
    "default",
    "longer",
    "issue",
    "loan",
    "actually",
    "set",
    "threshold",
    "jump",
    "pro",
    "17",
    "um",
    "predictive",
    "modeling",
    "tools",
    "use",
    "categorical",
    "response",
    "decision",
    "threshold",
    "tool",
    "actually",
    "still",
    "16",
    "show",
    "tool",
    "lives",
    "find",
    "right",
    "red",
    "triangle",
    "number",
    "different",
    "things",
    "let",
    "try",
    "focus",
    "us",
    "actually",
    "want",
    "get",
    "let",
    "go",
    "test",
    "data",
    "instead",
    "going",
    "get",
    "bottom",
    "screen",
    "going",
    "close",
    "couple",
    "things",
    "talk",
    "seeing",
    "graph",
    "made",
    "bigger",
    "data",
    "test",
    "set",
    "top",
    "people",
    "default",
    "people",
    "default",
    "looking",
    "blue",
    "set",
    "uh",
    "decision",
    "threshold",
    "middle",
    "scale",
    "people",
    "would",
    "specified",
    "defaulting",
    "correct",
    "default",
    "actually",
    "realize",
    "specifying",
    "probability",
    "terms",
    "defaulting",
    "make",
    "clear",
    "means",
    "people",
    "default",
    "threshold",
    "would",
    "predicted",
    "would",
    "wrong",
    "would",
    "false",
    "negative",
    "red",
    "however",
    "would",
    "predicted",
    "probability",
    "threshold",
    "turns",
    "people",
    "default",
    "would",
    "correct",
    "corresponding",
    "statistics",
    "familiar",
    "classification",
    "models",
    "might",
    "used",
    "seeing",
    "actual",
    "counts",
    "rates",
    "different",
    "decisions",
    "true",
    "positives",
    "true",
    "negatives",
    "false",
    "positives",
    "false",
    "negatives",
    "nice",
    "tool",
    "actually",
    "change",
    "probability",
    "threshold",
    "see",
    "values",
    "change",
    "example",
    "increase",
    "threshold",
    "let",
    "say",
    "see",
    "people",
    "actually",
    "would",
    "defaulted",
    "would",
    "believe",
    "would",
    "fact",
    "issue",
    "alone",
    "seven",
    "half",
    "percent",
    "time",
    "nice",
    "conservative",
    "giving",
    "loans",
    "people",
    "uh",
    "might",
    "default",
    "would",
    "uh",
    "people",
    "ultimately",
    "default",
    "well",
    "unfortunately",
    "would",
    "deny",
    "nearly",
    "25",
    "percent",
    "applications",
    "75",
    "would",
    "still",
    "make",
    "adjust",
    "decision",
    "threshold",
    "actually",
    "see",
    "statistics",
    "change",
    "order",
    "help",
    "better",
    "understand",
    "consequences",
    "setting",
    "threshold",
    "different",
    "values",
    "without",
    "getting",
    "details",
    "number",
    "additional",
    "graphs",
    "metrics",
    "might",
    "useful",
    "update",
    "real",
    "time",
    "example",
    "graph",
    "right",
    "misclassification",
    "rates",
    "categories",
    "yes",
    "wanted",
    "find",
    "point",
    "two",
    "rates",
    "approximately",
    "equal",
    "could",
    "find",
    "point",
    "cross",
    "looks",
    "like",
    "decision",
    "threshold",
    "would",
    "achieve",
    "following",
    "know",
    "true",
    "positives",
    "false",
    "negatives",
    "sensitivity",
    "specificity",
    "forth",
    "decision",
    "threshold",
    "tool",
    "great",
    "uh",
    "way",
    "making",
    "visual",
    "consequences",
    "setting",
    "thresholds",
    "classification",
    "models",
    "mentioned",
    "uh",
    "know",
    "going",
    "see",
    "number",
    "different",
    "um",
    "predictive",
    "modeling",
    "tools",
    "today",
    "want",
    "show",
    "couple",
    "pause",
    "take",
    "couple",
    "questions",
    "um",
    "give",
    "idea",
    "everything",
    "went",
    "respect",
    "one",
    "partition",
    "tool",
    "actually",
    "applies",
    "broadly",
    "number",
    "tools",
    "let",
    "actually",
    "fit",
    "linear",
    "model",
    "let",
    "go",
    "fit",
    "model",
    "tool",
    "mentioned",
    "like",
    "get",
    "launch",
    "window",
    "say",
    "want",
    "predict",
    "default",
    "linear",
    "model",
    "need",
    "build",
    "model",
    "effects",
    "example",
    "could",
    "click",
    "add",
    "button",
    "add",
    "12",
    "main",
    "effects",
    "model",
    "select",
    "two",
    "click",
    "cross",
    "add",
    "interaction",
    "actually",
    "going",
    "delete",
    "use",
    "helpful",
    "model",
    "macro",
    "example",
    "factorial",
    "degree",
    "degree",
    "set",
    "two",
    "meaning",
    "going",
    "get",
    "main",
    "effects",
    "interactions",
    "lot",
    "possible",
    "effects",
    "great",
    "use",
    "something",
    "like",
    "regularized",
    "regression",
    "mentioned",
    "want",
    "use",
    "generalized",
    "regression",
    "personality",
    "going",
    "go",
    "generalized",
    "regression",
    "specify",
    "maybe",
    "want",
    "probabilities",
    "stated",
    "probability",
    "uh",
    "yes",
    "defaulting",
    "click",
    "run",
    "like",
    "get",
    "control",
    "window",
    "could",
    "select",
    "maybe",
    "lasso",
    "model",
    "elastic",
    "net",
    "model",
    "validation",
    "could",
    "hold",
    "back",
    "put",
    "validation",
    "column",
    "launch",
    "dialog",
    "done",
    "maybe",
    "hold",
    "back",
    "validation",
    "use",
    "third",
    "data",
    "click",
    "go",
    "jump",
    "run",
    "lasso",
    "model",
    "ended",
    "63",
    "parameters",
    "model",
    "number",
    "statistical",
    "outputs",
    "graphs",
    "might",
    "expect",
    "wo",
    "get",
    "details",
    "course",
    "going",
    "red",
    "triangle",
    "gives",
    "things",
    "might",
    "want",
    "example",
    "pulling",
    "profiler",
    "pulling",
    "roc",
    "curve",
    "forth",
    "quick",
    "primer",
    "linear",
    "modeling",
    "already",
    "saw",
    "um",
    "neural",
    "net",
    "modeling",
    "briefly",
    "let",
    "also",
    "take",
    "look",
    "one",
    "going",
    "let",
    "go",
    "boosted",
    "tree",
    "advanced",
    "technique",
    "based",
    "um",
    "decision",
    "tree",
    "technique",
    "launch",
    "looks",
    "similar",
    "put",
    "default",
    "response",
    "predictors",
    "x",
    "use",
    "let",
    "say",
    "validation",
    "column",
    "validation",
    "click",
    "ok",
    "one",
    "thing",
    "going",
    "notice",
    "control",
    "window",
    "looks",
    "little",
    "different",
    "particular",
    "algorithm",
    "lot",
    "settings",
    "call",
    "hyper",
    "parameters",
    "need",
    "set",
    "case",
    "often",
    "get",
    "option",
    "either",
    "manually",
    "specify",
    "want",
    "could",
    "back",
    "use",
    "call",
    "tuning",
    "table",
    "run",
    "algorithm",
    "multiple",
    "times",
    "multiple",
    "settings",
    "return",
    "one",
    "performs",
    "best",
    "table",
    "without",
    "getting",
    "actually",
    "put",
    "together",
    "using",
    "doe",
    "tool",
    "yeah",
    "full",
    "factorial",
    "design",
    "grid",
    "search",
    "three",
    "hyper",
    "parameters",
    "go",
    "analyze",
    "bootstrap",
    "forest",
    "click",
    "recall",
    "right",
    "click",
    "use",
    "tuning",
    "design",
    "table",
    "foreign",
    "oh",
    "must",
    "selected",
    "something",
    "incorrect",
    "let",
    "try",
    "one",
    "time",
    "go",
    "boost",
    "tree",
    "course",
    "go",
    "make",
    "sure",
    "start",
    "table",
    "actually",
    "want",
    "model",
    "click",
    "recall",
    "use",
    "tuning",
    "design",
    "table",
    "tuning",
    "table",
    "go",
    "jump",
    "running",
    "believe",
    "18",
    "uh",
    "different",
    "instances",
    "boosted",
    "tree",
    "algorithm",
    "return",
    "model",
    "performed",
    "best",
    "according",
    "validation",
    "statistic",
    "case",
    "see",
    "hyper",
    "parameter",
    "values",
    "model",
    "might",
    "expect",
    "going",
    "red",
    "triangle",
    "things",
    "like",
    "roc",
    "curve",
    "profiler",
    "decision",
    "threshold",
    "tool",
    "wanted",
    "point",
    "existence",
    "tuning",
    "design",
    "tables",
    "know",
    "especially",
    "data",
    "science",
    "something",
    "like",
    "grid",
    "search",
    "pretty",
    "core",
    "component",
    "curriculum",
    "uh",
    "kevin",
    "see",
    "spent",
    "lot",
    "time",
    "going",
    "different",
    "uh",
    "ins",
    "outs",
    "predictive",
    "modeling",
    "platforms",
    "gon",
    "na",
    "go",
    "ahead",
    "pause",
    "see",
    "couple",
    "questions",
    "might",
    "take",
    "live",
    "talk",
    "couple",
    "things",
    "okay",
    "question",
    "come",
    "questions",
    "whole",
    "time",
    "either",
    "interpret",
    "phenomenal",
    "job",
    "one",
    "questions",
    "horrible",
    "job",
    "confusing",
    "everybody",
    "gon",
    "na",
    "go",
    "former",
    "um",
    "question",
    "popped",
    "somebody",
    "asking",
    "force",
    "split",
    "partition",
    "um",
    "yes",
    "uh",
    "uh",
    "sake",
    "time",
    "going",
    "show",
    "uh",
    "relatively",
    "straightforward",
    "uh",
    "partition",
    "platform",
    "every",
    "single",
    "node",
    "tree",
    "red",
    "triangle",
    "go",
    "red",
    "triangle",
    "find",
    "options",
    "force",
    "split",
    "um",
    "know",
    "choose",
    "variable",
    "split",
    "pick",
    "person",
    "wondering",
    "like",
    "want",
    "actually",
    "pick",
    "split",
    "location",
    "variable",
    "split",
    "oops",
    "let",
    "find",
    "briefly",
    "stay",
    "decision",
    "tree",
    "click",
    "ok",
    "go",
    "split",
    "specific",
    "uh",
    "choose",
    "value",
    "go",
    "optimal",
    "value",
    "perfect",
    "perfect",
    "thank",
    "right",
    "let",
    "see",
    "well",
    "see",
    "couple",
    "questions",
    "kevin",
    "open",
    "uh",
    "five",
    "open",
    "questions",
    "um",
    "one",
    "see",
    "see",
    "save",
    "model",
    "python",
    "code",
    "think",
    "possible",
    "one",
    "places",
    "going",
    "next",
    "interest",
    "uh",
    "time",
    "um",
    "kevin",
    "let",
    "get",
    "q",
    "keep",
    "one",
    "thing",
    "want",
    "point",
    "briefly",
    "leave",
    "using",
    "modeling",
    "platforms",
    "behind",
    "existence",
    "tool",
    "allows",
    "run",
    "multiple",
    "algorithms",
    "simultaneously",
    "sure",
    "one",
    "actually",
    "promising",
    "particular",
    "data",
    "set",
    "called",
    "model",
    "screening",
    "actually",
    "lives",
    "predictive",
    "modeling",
    "menu",
    "setup",
    "kind",
    "specify",
    "want",
    "predict",
    "predictors",
    "could",
    "validation",
    "column",
    "nice",
    "select",
    "methods",
    "want",
    "try",
    "jump",
    "automatically",
    "call",
    "different",
    "methods",
    "going",
    "deselect",
    "things",
    "run",
    "nice",
    "fast",
    "call",
    "default",
    "settings",
    "return",
    "see",
    "table",
    "allow",
    "us",
    "compare",
    "models",
    "choose",
    "least",
    "know",
    "one",
    "two",
    "candidate",
    "techniques",
    "seem",
    "like",
    "go",
    "actually",
    "fully",
    "tune",
    "models",
    "would",
    "perform",
    "best",
    "test",
    "set",
    "see",
    "winner",
    "boosted",
    "tree",
    "followed",
    "boosted",
    "neural",
    "net",
    "actual",
    "plane",
    "decision",
    "tree",
    "bottom",
    "details",
    "models",
    "actually",
    "living",
    "going",
    "get",
    "would",
    "typically",
    "actually",
    "start",
    "working",
    "one",
    "models",
    "even",
    "launch",
    "directly",
    "tool",
    "model",
    "screening",
    "tool",
    "especially",
    "let",
    "say",
    "student",
    "project",
    "want",
    "multiple",
    "techniques",
    "learned",
    "want",
    "identify",
    "one",
    "might",
    "want",
    "use",
    "could",
    "go",
    "model",
    "screening",
    "first",
    "easily",
    "uh",
    "basically",
    "throw",
    "data",
    "multiple",
    "algorithms",
    "see",
    "one",
    "deserves",
    "attention",
    "uh",
    "jump",
    "uh",
    "pro",
    "16",
    "going",
    "find",
    "decision",
    "threshold",
    "tool",
    "living",
    "yet",
    "implemented",
    "individual",
    "modeling",
    "platforms",
    "instead",
    "find",
    "um",
    "living",
    "right",
    "red",
    "triangle",
    "want",
    "point",
    "existence",
    "tool",
    "sometimes",
    "handy",
    "able",
    "run",
    "multiple",
    "algorithms",
    "time",
    "briefly",
    "model",
    "comparison",
    "deployment",
    "fit",
    "maybe",
    "multiple",
    "models",
    "tools",
    "available",
    "continue",
    "working",
    "let",
    "actually",
    "pull",
    "going",
    "pull",
    "original",
    "let",
    "see",
    "21",
    "split",
    "decision",
    "tree",
    "briefly",
    "outset",
    "multiple",
    "ways",
    "exporting",
    "working",
    "model",
    "using",
    "jump",
    "classroom",
    "highly",
    "recommend",
    "using",
    "formula",
    "depot",
    "tool",
    "saw",
    "going",
    "able",
    "write",
    "model",
    "directly",
    "using",
    "publish",
    "prediction",
    "formula",
    "option",
    "going",
    "find",
    "red",
    "triangle",
    "sometimes",
    "save",
    "columns",
    "times",
    "shorter",
    "red",
    "triangle",
    "menus",
    "actually",
    "top",
    "level",
    "option",
    "automatically",
    "puts",
    "formula",
    "model",
    "formula",
    "depot",
    "window",
    "actually",
    "save",
    "model",
    "independent",
    "one",
    "particular",
    "data",
    "table",
    "always",
    "actually",
    "create",
    "new",
    "formula",
    "depot",
    "going",
    "um",
    "new",
    "menu",
    "well",
    "actually",
    "somewhere",
    "may",
    "moved",
    "anyway",
    "formula",
    "depot",
    "one",
    "model",
    "living",
    "let",
    "say",
    "want",
    "compare",
    "performance",
    "model",
    "versus",
    "couple",
    "others",
    "let",
    "take",
    "boosted",
    "tree",
    "model",
    "run",
    "quickly",
    "go",
    "save",
    "columns",
    "publish",
    "prediction",
    "formula",
    "added",
    "formula",
    "depot",
    "let",
    "one",
    "going",
    "neural",
    "net",
    "model",
    "working",
    "appropriate",
    "red",
    "triangle",
    "go",
    "publish",
    "prediction",
    "formula",
    "right",
    "multiple",
    "models",
    "built",
    "tuned",
    "living",
    "formula",
    "depot",
    "want",
    "know",
    "model",
    "performed",
    "best",
    "overall",
    "find",
    "going",
    "red",
    "triangle",
    "going",
    "model",
    "comparison",
    "say",
    "want",
    "compare",
    "three",
    "models",
    "jump",
    "hopefully",
    "says",
    "hey",
    "want",
    "use",
    "validation",
    "column",
    "computing",
    "fit",
    "statistics",
    "say",
    "yes",
    "please",
    "uh",
    "yes",
    "forgot",
    "change",
    "something",
    "one",
    "uh",
    "particular",
    "formulas",
    "right",
    "may",
    "need",
    "let",
    "see",
    "wait",
    "trying",
    "turn",
    "something",
    "let",
    "pull",
    "back",
    "actually",
    "take",
    "look",
    "directly",
    "formula",
    "depot",
    "available",
    "right",
    "let",
    "see",
    "let",
    "bring",
    "journal",
    "well",
    "go",
    "go",
    "red",
    "triangle",
    "go",
    "model",
    "comparison",
    "get",
    "table",
    "opened",
    "get",
    "back",
    "say",
    "want",
    "compare",
    "three",
    "models",
    "validation",
    "column",
    "table",
    "training",
    "validation",
    "test",
    "sets",
    "variety",
    "fit",
    "measures",
    "looking",
    "entropy",
    "r",
    "square",
    "maybe",
    "even",
    "validation",
    "excuse",
    "test",
    "set",
    "see",
    "boosted",
    "tree",
    "fact",
    "outperform",
    "uh",
    "boosted",
    "neural",
    "net",
    "tried",
    "bootstrap",
    "us",
    "use",
    "case",
    "course",
    "ways",
    "might",
    "want",
    "compare",
    "models",
    "example",
    "looking",
    "roc",
    "curves",
    "perhaps",
    "maybe",
    "lift",
    "curve",
    "even",
    "taking",
    "look",
    "profiler",
    "also",
    "point",
    "create",
    "average",
    "model",
    "across",
    "three",
    "actually",
    "compare",
    "originals",
    "well",
    "see",
    "maybe",
    "ensemble",
    "three",
    "models",
    "outperforms",
    "uh",
    "model",
    "finally",
    "oh",
    "closed",
    "early",
    "question",
    "bring",
    "back",
    "quickly",
    "finally",
    "model",
    "deployment",
    "already",
    "saw",
    "given",
    "model",
    "go",
    "run",
    "script",
    "run",
    "table",
    "automatically",
    "score",
    "observations",
    "table",
    "also",
    "go",
    "something",
    "like",
    "generate",
    "python",
    "code",
    "generate",
    "sas",
    "code",
    "generate",
    "code",
    "implements",
    "model",
    "actually",
    "number",
    "people",
    "whether",
    "teaching",
    "research",
    "industry",
    "use",
    "jump",
    "alongside",
    "something",
    "like",
    "python",
    "may",
    "actually",
    "want",
    "take",
    "model",
    "import",
    "python",
    "library",
    "continue",
    "working",
    "code",
    "would",
    "need",
    "see",
    "starting",
    "run",
    "time",
    "going",
    "highlight",
    "couple",
    "things",
    "preparing",
    "modeling",
    "uh",
    "worth",
    "aware",
    "know",
    "mentioned",
    "think",
    "lot",
    "us",
    "looking",
    "poll",
    "results",
    "fair",
    "bit",
    "jump",
    "experience",
    "probably",
    "know",
    "lot",
    "tools",
    "jump",
    "comes",
    "predictive",
    "modeling",
    "might",
    "particularly",
    "uh",
    "interested",
    "tools",
    "exploring",
    "outliers",
    "exploring",
    "missing",
    "values",
    "outset",
    "modeling",
    "exercise",
    "data",
    "integrity",
    "course",
    "kind",
    "one",
    "first",
    "considerations",
    "actual",
    "model",
    "building",
    "like",
    "take",
    "closer",
    "look",
    "tools",
    "happy",
    "show",
    "always",
    "email",
    "finally",
    "take",
    "quick",
    "quick",
    "look",
    "formula",
    "editor",
    "great",
    "says",
    "feature",
    "engineering",
    "another",
    "commonly",
    "taught",
    "thing",
    "data",
    "science",
    "predictive",
    "modeling",
    "fact",
    "might",
    "actually",
    "want",
    "use",
    "raw",
    "values",
    "derive",
    "new",
    "variables",
    "might",
    "better",
    "predictors",
    "raw",
    "variables",
    "let",
    "take",
    "one",
    "example",
    "mortgage",
    "due",
    "somebody",
    "home",
    "currently",
    "assessed",
    "value",
    "home",
    "difference",
    "two",
    "let",
    "say",
    "value",
    "home",
    "minus",
    "mortgage",
    "due",
    "would",
    "equity",
    "home",
    "maybe",
    "want",
    "enter",
    "equity",
    "potential",
    "predictor",
    "going",
    "ask",
    "junk",
    "create",
    "quickly",
    "going",
    "right",
    "click",
    "selected",
    "two",
    "columns",
    "right",
    "click",
    "column",
    "going",
    "find",
    "new",
    "formula",
    "column",
    "option",
    "perform",
    "transformations",
    "example",
    "case",
    "going",
    "take",
    "difference",
    "two",
    "value",
    "minus",
    "mortgage",
    "due",
    "represents",
    "equity",
    "somebody",
    "right",
    "click",
    "go",
    "formula",
    "see",
    "happened",
    "jump",
    "wrote",
    "column",
    "formula",
    "simple",
    "one",
    "value",
    "minus",
    "mortgage",
    "due",
    "compute",
    "us",
    "left",
    "see",
    "really",
    "large",
    "range",
    "different",
    "operations",
    "functions",
    "put",
    "formula",
    "example",
    "number",
    "different",
    "transformations",
    "maybe",
    "want",
    "comparisons",
    "conditionals",
    "compute",
    "different",
    "statistics",
    "example",
    "something",
    "minus",
    "uh",
    "mean",
    "value",
    "another",
    "column",
    "uh",
    "maybe",
    "case",
    "going",
    "actually",
    "highlighted",
    "going",
    "take",
    "value",
    "minus",
    "mortgage",
    "due",
    "put",
    "value",
    "actually",
    "going",
    "percent",
    "equity",
    "home",
    "click",
    "ok",
    "values",
    "teaching",
    "things",
    "like",
    "screen",
    "data",
    "um",
    "feature",
    "engineering",
    "front",
    "know",
    "jump",
    "tools",
    "easily",
    "well",
    "finally",
    "wrap",
    "hang",
    "take",
    "remaining",
    "questions",
    "want",
    "highlight",
    "teaching",
    "resources",
    "might",
    "find",
    "helpful",
    "integrating",
    "jump",
    "pro",
    "course",
    "maybe",
    "complement",
    "even",
    "lighten",
    "load",
    "little",
    "bit",
    "let",
    "actually",
    "pull",
    "browser",
    "go",
    "teach",
    "going",
    "find",
    "free",
    "teaching",
    "materials",
    "broken",
    "course",
    "topic",
    "uh",
    "case",
    "might",
    "want",
    "little",
    "link",
    "implies",
    "go",
    "analytics",
    "data",
    "science",
    "materials",
    "going",
    "find",
    "number",
    "different",
    "categories",
    "example",
    "books",
    "might",
    "use",
    "course",
    "want",
    "highlight",
    "guides",
    "click",
    "recommended",
    "guides",
    "videos",
    "going",
    "see",
    "links",
    "one",
    "takes",
    "quick",
    "instructional",
    "video",
    "one",
    "page",
    "guide",
    "analysis",
    "job",
    "example",
    "click",
    "classification",
    "trees",
    "going",
    "go",
    "page",
    "known",
    "learning",
    "library",
    "show",
    "us",
    "uh",
    "know",
    "short",
    "think",
    "three",
    "minute",
    "video",
    "classification",
    "trees",
    "video",
    "could",
    "play",
    "right",
    "also",
    "click",
    "view",
    "guide",
    "go",
    "pdf",
    "summary",
    "video",
    "click",
    "click",
    "instructions",
    "screenshots",
    "really",
    "handy",
    "things",
    "give",
    "students",
    "advance",
    "avoid",
    "getting",
    "lot",
    "questions",
    "know",
    "x",
    "jump",
    "want",
    "go",
    "complete",
    "library",
    "videos",
    "go",
    "learn",
    "finally",
    "back",
    "little",
    "bit",
    "notice",
    "another",
    "particularly",
    "uh",
    "well",
    "utilized",
    "resource",
    "case",
    "study",
    "library",
    "let",
    "take",
    "look",
    "recommended",
    "case",
    "studies",
    "fact",
    "going",
    "look",
    "one",
    "sticking",
    "classification",
    "trees",
    "credit",
    "card",
    "marketing",
    "look",
    "credit",
    "card",
    "marketing",
    "case",
    "study",
    "going",
    "find",
    "pdf",
    "takes",
    "us",
    "real",
    "world",
    "predictive",
    "modeling",
    "problem",
    "worked",
    "example",
    "exercises",
    "students",
    "begins",
    "problem",
    "background",
    "data",
    "progresses",
    "number",
    "screenshots",
    "instructions",
    "actually",
    "perform",
    "analyzes",
    "little",
    "bits",
    "additional",
    "interpretation",
    "basics",
    "interpret",
    "results",
    "though",
    "try",
    "relatively",
    "light",
    "freedom",
    "course",
    "explain",
    "things",
    "want",
    "end",
    "one",
    "get",
    "way",
    "bottom",
    "actually",
    "find",
    "uh",
    "one",
    "exercises",
    "students",
    "apply",
    "techniques",
    "learned",
    "new",
    "context",
    "back",
    "case",
    "study",
    "library",
    "notice",
    "one",
    "comes",
    "bundled",
    "data",
    "set",
    "click",
    "download",
    "data",
    "page",
    "looking",
    "case",
    "studies",
    "case",
    "study",
    "library",
    "find",
    "cases",
    "planned",
    "today",
    "take",
    "away",
    "nothing",
    "else",
    "jump",
    "pro",
    "really",
    "predictive",
    "modeling",
    "tool",
    "makes",
    "special",
    "provides",
    "know",
    "visual",
    "interactive",
    "interface",
    "really",
    "powerful",
    "predictive",
    "modeling",
    "methods",
    "fits",
    "nicely",
    "uh",
    "course",
    "curriculum",
    "uh",
    "maybe",
    "students",
    "comfortable",
    "coding",
    "coding",
    "necessarily",
    "one",
    "primary",
    "learning",
    "objectives",
    "takes",
    "powerful",
    "techniques",
    "makes",
    "accessible",
    "kind",
    "student",
    "population"
  ],
  "keywords": [
    "today",
    "teaching",
    "predictive",
    "modeling",
    "jump",
    "pro",
    "academic",
    "go",
    "kevin",
    "uh",
    "couple",
    "get",
    "going",
    "um",
    "every",
    "time",
    "next",
    "two",
    "methods",
    "things",
    "like",
    "analysis",
    "new",
    "tools",
    "data",
    "take",
    "look",
    "need",
    "help",
    "learning",
    "please",
    "know",
    "quick",
    "another",
    "one",
    "questions",
    "show",
    "work",
    "group",
    "students",
    "want",
    "something",
    "course",
    "using",
    "teach",
    "library",
    "materials",
    "case",
    "sample",
    "sets",
    "video",
    "number",
    "well",
    "actually",
    "specific",
    "finally",
    "mentioned",
    "could",
    "use",
    "window",
    "kind",
    "little",
    "pull",
    "type",
    "would",
    "great",
    "stop",
    "let",
    "talk",
    "everything",
    "start",
    "see",
    "tool",
    "algorithms",
    "might",
    "expect",
    "maybe",
    "even",
    "feature",
    "engineering",
    "way",
    "model",
    "validation",
    "really",
    "also",
    "pretty",
    "started",
    "technique",
    "think",
    "different",
    "right",
    "highlight",
    "applications",
    "able",
    "say",
    "give",
    "idea",
    "works",
    "fact",
    "always",
    "notice",
    "build",
    "models",
    "compare",
    "multiple",
    "screening",
    "boost",
    "set",
    "find",
    "home",
    "equity",
    "loan",
    "due",
    "mortgage",
    "forth",
    "variable",
    "create",
    "default",
    "make",
    "wanted",
    "neural",
    "factors",
    "predict",
    "analyze",
    "choose",
    "predictors",
    "click",
    "ok",
    "net",
    "bit",
    "fit",
    "red",
    "triangle",
    "lot",
    "context",
    "options",
    "automatically",
    "statistics",
    "looking",
    "r",
    "square",
    "value",
    "means",
    "better",
    "prediction",
    "profiler",
    "bottom",
    "us",
    "predicted",
    "probability",
    "change",
    "example",
    "delinquent",
    "lines",
    "credit",
    "somebody",
    "familiar",
    "response",
    "nice",
    "values",
    "interactive",
    "information",
    "save",
    "working",
    "building",
    "tuning",
    "techniques",
    "without",
    "getting",
    "much",
    "mean",
    "curriculum",
    "code",
    "details",
    "capabilities",
    "general",
    "already",
    "list",
    "additional",
    "particular",
    "regression",
    "saw",
    "based",
    "decision",
    "trees",
    "classification",
    "call",
    "may",
    "random",
    "boosted",
    "best",
    "threshold",
    "partition",
    "tree",
    "platforms",
    "platform",
    "columns",
    "first",
    "thing",
    "point",
    "launch",
    "button",
    "put",
    "x",
    "three",
    "blue",
    "table",
    "column",
    "percent",
    "split",
    "algorithm",
    "debt",
    "income",
    "ratio",
    "groups",
    "settings",
    "specify",
    "splits",
    "back",
    "says",
    "hold",
    "training",
    "test",
    "good",
    "looks",
    "graph",
    "across",
    "performance",
    "individual",
    "option",
    "represents",
    "false",
    "roc",
    "curve",
    "effects",
    "people",
    "yes",
    "run",
    "briefly",
    "living",
    "formula",
    "depot",
    "minus"
  ]
}