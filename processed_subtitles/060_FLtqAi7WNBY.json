{
  "text": "[Music]\nhello everybody and welcome back I'm\ngoing to apologize right now for this\nlong introduction but what I'm trying to\ndo in this video is teach you software\ndesign at a very fundamental level so\nI've heard you guys loud and clear a lot\nof you are sick of the beginner\ntutorials you're sick of people assuming\nyou know nothing and you want to get\nmore into the intermediate and advanced\nlevel you want to figure out how do I\ndesign software how do I look at some\nsystem some program and come up with\nsome kind of plan some kind of\nimplementation approach or strategy that\nis exactly what I'm gonna be showing you\nhere so on the left hand side of my\nscreen you can see that we have this\nkind of mock software system that I've\njust come up with this completely random\nexample that I just wrote up before this\nvideo and what we're gonna be doing is\nlooking at this block of text here which\nyou can really think of as the client\nyou can think of is this is what the\nclient wants this is what the person\nyou're writing code for wants how do you\ntake simply these four paragraphs here\nand translate that into a fully\nfunctioning software system that is\nexactly what we're gonna be doing here\nso we're gonna look through this we're\ngonna go through the process of picking\nup valuable information and then what\nwe're gonna do is actually draw up a\nclass diagram that has what our plan is\ngoing to be when we start implementing\nthis and that leads me to my next point\nwhich is planning when you want to get\nout of that intermediate or you want to\nmove from kind of intermediate to more\nadvanced you already know how to program\nthe next step is thinking about\ndesigning programs designing software\nit's not enough to be good at\nprogramming what you need to do is\nactually be able to think about the kind\nof overarching architecture of the\nprogram that you're writing you want to\nthink of okay how are these objects\nthese classes this system going to\ninteract with other things and how can I\nthink about all of these things before I\nactually start writing code that is what\nwe are going to be doing here so without\nfurther ado let's go ahead and get\nstarted I'm gonna read through this\ndesign problem here there will be a link\nin the description if you prefer to read\nthrough that yourself I would encourage\nall of you before I go ahead and start\ndoing all of this for you and showing it\nto you that you think about how you\nmight design something that looks like\nthis and if you were immediate thought\nas I have no idea then while this video\nis going to be perfect for you because\nI'm going to\nshow you exactly how we can do this so\nlet's go ahead and read through this so\nthe problem I've had here is a design\nproblem tech with Tim school of\nprogrammers so I just kind of made this\nname up I thought it would make sense I\nassume a lot of you guys are students or\nyou were at one point a student so I\nthink this will relate to a lot of you\nand the idea here is that the tech with\nTim school of programmers needs a new\nsystem to track all of its students\nprofessors and courses so think of this\nas some kind of like you know mini\nUniversity or something and they want a\nsystem or a database or something like\nthat where they can track all of this\ninformation maybe they can ask some type\nof questions about a student they can\ncheck grades they can see who's teaching\na course that's what this really is so\nwe'll go through the details here but it\nwants to keep track of what courses are\noffered who teaches each course and\nwhich students are enrolled in those\ncourses it what else would like to be\nable to track the grades of each of its\nstudents across all courses for each\nstudent and professor the school needs\nto know their address phone number and H\nso immediately even in just this first\nparagraph this has told us a lot we need\na system right because we're just\nthinking about what is it that we\nactually need from the system these are\nreally the requirements that are being\nlisted out here and this system needs to\nkeep track of students it needs to keep\ntrack of professors and it needs to keep\ntrack of courses what else doesn't need\nto keep track of well for each person we\nneed their address their phone number\ntheir name and their age so let's keep\nthat in mind we'll read through the rest\nand then we'll distill all of this ok so\neach course has a maximum and minimum\nnumber of students that they can enroll\nif the minimum number of students is not\nreached then the course will be canceled\neach course is taught by at least one\nprofessor but sometimes may be taught by\nmany so in some situations there may be\nmore than one professor that teaches the\ncourse all right professors are salaried\nemployees at the tech with Tim School of\nprogrammers and therefore we need to\nkeep track of how much they make each\nyear if a professor teaches more than\nfour courses in a semester they are\ngranted a one-time bonus of $20,000 all\nright\nstudents can both can be both local or\ninternational students and full or\npart-time a student is considered a\npart-time student if they are enrolled\nin less than one or two courses during\nany given semester so actually sorry\nthis should say if they are enrolled in\none or two courses during any given\nsemester so essentially you are\npart-time if you were taking two or less\ncourses in a semester the maximum amount\nof courses a student may be enrolled in\nat one time is six students receive\ngrades from each course these grades are\nnumeric in in the range of 0 to 100 any\nstudents that have an above-average\ngrade across our have an average grade\nsorry across all enrolled courses that\nare lower than 60% is said to be on\nacademic probation so I apologize for\nbutchering butchering some of that\nspeech there but the idea here is we\nhave this system it's fairly simple we\nneed to keep track of students\nprofessors those students grades across\nall of the courses there's a few small\nnuances within that but this should be\nsomething that we're gonna be able to\ndesign and hopefully in the next you\nknow 30 45 minutes with me explaining\neverything that I'm doing\nso given this block right given this\ntext what we need to do now is translate\nthis into a program and the first thing\nthat I want to do is start thinking\nabout all the information that I\nactually need to track and all of the\npotential classes I'm going to have in\nmy UML class diagram so we're gonna\ndesign this using an object-oriented\nstyle which is very common and what most\npeople kind of do and this doesn't\nnecessarily mean that what I'm gonna\ndesign here will be the final\nimplementation that we actually program\nup this is just kind of the thing that\nis you know our design this is what we\nthought this is our plan it's totally\nfine if we decide to deviate from this\nlater\nespecially if other things come up but\nwe should at least have some kind of\nidea of what we want to do then we can\nfollow about when we actually start\ncoding so what I'm gonna do is have two\nwindows here one on the left one on the\nright and I'm going to start listing\nfirst of all all of the classes that I\nthink we should actually have based on\nthe information I've seen here and this\nis kind of the first step think about\nall of the objects you might have in a\nsystem all of the main components that\nmight have information within them so\nthe first thing I'm gonna list here is\nstudents right we will probably have a\nstudent class because we're gonna have\nmultiple students the next thing we're\nprobably gonna have is well professors\nnow I don't know if that's how you spell\nprofessors but and we'll put that there\nso we're gonna have a student class and\na professor class because we're gonna\nneed both a student and a professor and\nthis\nhas different information contained in\nit than the professor dis awesome\nalright so student professor next thing\nwe need is probably a course right we're\ngonna have different courses those are\ngonna be taught by professors and those\nare gonna be taught by students and\nafter reading this are not taught by\nstudents or I students will be enrolled\nin that course and after reading this\nfirst paragraph that is kind of what\nI've grabbed from that so I've said okay\nwe need to keep track of students\nprofessors and courses all we need to\nsee what courses are offered who teaches\nthe course who's enrolled keep track of\ngrades okay so that mate brings me to\ngrades so now I need to keep track of\ngreats how am I gonna do that well we'll\nkeep moving and then we'll think about\nhow that's gonna happen so each course\nhas a maximum and minimum number of\nstudents that can enroll if the minimum\nnumber of students has not reached in\nthat course will be canceled each course\nis taught by at least one professor but\nsometimes taught by many okay so that\ndoesn't give me any more classes I don't\nthink right now at least and let's keep\ngoing professors are salaried employees\nat Tech with Tim schooled programmer and\ntherefore we need to keep track of how\nmuch they make a year okay that doesn't\nsays say anything to me students can be\nboth local or international a student is\nconsidered a part-time student if\nthey're enrolled there one or two\ncourses during any given semester that\nthe duh duh okay and now after reading\nall of this what I've determined is we\nhave student we have professor we have\ncourse the only thing we're really\nmissing here is a way of keeping track\nof who is enrolled in what course and\nwhat grades each of these students have\nso what I'm actually going to do is I'm\ngoing to make a class called enroll now\nthis is gonna seem weird but what this\nenroll class is going to do for us and\nit will make more sense as we go through\nthis video is essentially link our\nstudents and our courses so essentially\nwe have a way to say ok this course is\ntaught by this professor and this\nstudent is enrolled in this course the\nreason I want this enroll is because\nthis enroll will essentially tell me if\nfirst of all if this course is active\nright you know is there enough people in\nthis course that this student this\nenrollment was successful that's\nsomething we could keep track of on the\nin rural class and it can keep track of\nthe grade that the student had in the\ncourse we need some way to keep track of\nall of the grades for all of the courses\nfor all of the students and this enroll\nclass could be a way to do this now keep\nin mind that I might change this as we\ngo through and\nI start drawing things out it might make\nmore sense to do something else but this\nis my initial idea and this is where I'm\nstarting from this is my starting ground\nand this is what I'm thinking about\nright now and this is what you should\nthink about when you are reading some\nrequirements that look something like\nthis\nokay so I've settled on these four\nclasses for right now these could change\nagain I'm trying to walk you through the\nprocess as fully as we can so you really\nunderstand and these are the four\nclasses that I think I'm gonna need\nstudent-professor course and this enroll\none is gonna link those courses and\nthose students together and store some\ninformation and it may be like the date\nwe enrolled in the course something like\nthat okay so now that I have that what\nI'm gonna do is I'm gonna spread these\nout and I'm gonna start listing\ninformation that I need to keep track of\nfor students professors and so on so now\nwhat I'm gonna do is start looking at\nwhat information do I need for students\nso down here it says a student can be\nboth local or international full or\npart-time so the first thing I'm gonna\nsay is we'll say local and that will be\na boolean value that's either gonna be\ntrue or false is this student local or\nare they not and in fact what I actually\nmight make this is just international\ninternational I think that's right and\nthis will just tell me if the students\ninternational or not and that will tell\nme if they're local right because it's a\ntrue or false value so we'll keep that\nas an attribute of my student class\nthat's some type of information we're\ngonna need to know and then it says the\nstudent can either be full or part-time\nokay so we could consider that to be an\nattribute of the student whether they're\nfull or part-time but how is that\nattribute derived that is derived based\non the number of courses that they're\nenrolled in during a given semester so\ninstead of making this an attribute what\nI'm actually gonna do is say well\nsomething that I need on my student is\ngonna be a method and the method is\ngonna say is part-time and this will\nsimply return a boolean and what this\nwill do is it will look at this student\nand tell me how many courses are\nenrolled in and if it is greater than\nthe threshold of the part-time student\nthen they will not be a part-time\nstudent right that is what this method\nwill do so things that we start thinking\nabout is how are we gonna implement this\nkind of attribute well we're gonna do\nthat using a method so we can determine\nif a student is full or part-time okay\nso the maximum an amount\ncourses a student may be enrolled in is\nsix students receive grades okay and\nthen what else does it say here if the\naverage grade is lower than 60% they're\non academic probation\nso this one is derived from their grades\nso again since it is a derived attribute\nit's not simply just something that's\ngoing to sit there what I need to do is\nhave a method that tells me hey are they\non probation so we'll say is on\nprobation like that alright so we'll put\nthat there and then this will be boolean\nand what these methods are intending to\ndo is to look at attributes on the\nstudent evaluate them and then give us\nan answer to give us these kind of\nattitudes right are they part-time or\nare they on probation okay so now that\nwe have that let's move to Professor\ndon't worry there's a lot more stuff\nthat I'm gonna add in here but I want to\ntalk about that later so professor what\ndo we need here well a professor we need\nto keep track of their salaries so first\nthing we'll say is salary and this will\nbe a number right we're an int or\nwhatever you want to call it well\nactually probably would be a float\nbecause they could have a decimal point\nsalary so we'll put a salad right there\nwhat else do we need for a professor\nwell there's nothing else on here that\nit really says we need other than their\nage name phone number etc which we'll\nget to in a second so for that I'm gonna\nleave it there now of course what do we\nneed for a course well it doesn't\nspecifically say there's anything we\nreally need for a course but what I'm\ngonna have for a course of course\nis the name I'm gonna have the course\ncode because that's something that we're\nprobably gonna need the name will be a\nstring the code will be a string as well\nactually and then what else do we need\nwe need be minimum and maximum amount of\nstudents in the course we'll save min\nstudents that'll be an int and we'll say\nmax students and that will be an int and\nthen what I'm actually gonna have is\nwell we need to determine is this course\nactive or is it canceled so is this\ngoing on do we have enough students in\nthis course for it to happen so what are\nwe gonna do we're gonna add a method\nthat says is active or will say is\ncanceled just because that goes more\nwith the requirements that we have there\nso we'll say is canceled boolean and\nwhat this will do is look at all of the\nstudents enrolled in this course and\ntell us if there is enough so\nit's canceled or it's not canceled right\nI hope that makes sense okay so we have\nstudent we have professor we have course\nanother thing that I'm thinking we might\nwant to do is have something like the\nstart time for this course it doesn't\nnecessarily say that we need that but if\nI'm thinking about my program in the\nfuture it probably makes sense to have\nsomething like start time right like\nwhen did this course start what you\nmight want to keep track of it so we'll\nsay start and we'll say that's a date\nand then while we're at that we might as\nwell put an end as well and we'll say\nthat that's gonna be a date - so\nhopefully you get the idea that what I'm\ndoing is just going through and picking\nout all the necessary information and\njust listing it out so I can see it\nbefore I actually start drawing anything\nso we have student professor course and\nthen we have enroll okay so enroll what\ndo I need for enroll well this is gonna\nkeep track of how my students are\nenrolled in courses so for enroll what\nI'm gonna do is I'm simply gonna say\ndate so we'll literally say the date is\ngonna be a date so this is when this\nhappened so when did they enroll we're\ngonna need what students enrolled what\ncourse enrolled and then we're also\ngoing to need B grade that the student\ngot in that course this for me is pretty\nmuch gonna keep track of hey this\nstudent is enrolled in this course and\nthis is the grade that they received in\nthis course and that will be a float and\nthen anything else that we might want to\nkeep track of that's specific between a\nstudent and a course but doesn't make\nsense to go in just the student or just\nthe course would be information we put\nin enroll and for now I don't think of\nanything so I'm gonna leave it like this\nand this is kind of the core information\nI need except for this address phone\nnumber name and age now the reason I've\nleft this out is because these are gonna\nrequire some more classes notice that\nfor both a student and a professor we\nhave some shared functionality here we\nhave some shared attributes we have the\naddress the phone number the name and\nthe age so what I'm actually going to do\nis I'm gonna make another class here I'm\ngonna call it person and what this\nperson class is gonna represent is a\nbase class for both the student and the\nprofessor so the student the professor\nhave some shared things that we want to\nknow about them so let's put that into a\nbase class that I'm gonna call person so\ninside of person what I'm gonna do here\nis\nsay okay what do we need well we need\nthe name so actually we're gonna have to\nsay first name oops if we could type\nhere so first name that'll be a string\nwe're gonna say last name that will be a\nstring as well what else do we need we\nneed the age of this person so do I do\nage int like that I'm gonna ask you as a\nquestion here I can't really because\nit's not an interactive environment but\nthink about if this age makes sense to\nput here does it make sense to have an\nattribute called age because we want to\nkeep track of the age right it says we\nneed the age in this person class so\nthink about it for a second okay I'm\nassuming you've thought about it and I'm\ngonna tell you right now that it makes\nno sense to put an attribute called age\nwhich is an int the reason you never put\nan attribute called age on something is\nbecause an age changes and guess what an\nage is derived from your birthdate so on\nthe current date versus your birth date\nthat determines your age so rather than\nkeeping track of the age we want to keep\ntrack of the date of birth which will\ntell us the age right we can very easily\nfind the age if we have the date of\nbirth so this is gonna be a date so that\nwas a little bit of a trick I put in\nthere just to see if I could fool you\nguys okay next thing we need is a phone\nnumber so let's say phone number if we\ncan do this like this so phone number\nand that is gonna be a what is this I\nguess we could call it I'm gonna call it\na string just because we can have like\nthe plus one - yada yada yada\nthere might be a specific attribute we\ncould use for that but a string it's\nfine I think you guys get that all right\nnow we need B address so what is it in\naddress comprised of though is my\nquestion here these address really an\nattribute that I can put can I just put\na dress like that well the answer is yes\nyou can do that but what I usually like\nto do just to make things easier for\nmyself in the future is make a separate\nclass called\naddress and it stores all of the\ninformation in separate fields about the\naddress so this way I can very easily\ngrab information from the address I can\nsort by people that are living in a\ncertain area it just makes things a lot\neasier especially if you're thinking\nabout a database structure in the future\nif you have a bunch of attributes that\ncould be squished in one separate out\ninto individual fields\nlet's look at this address what is an\naddress well we need a country we need\nkind of a state or a province I'll just\ncall it a state but like it could be a\nprovince that might make more sense\nwe're going to need a street\nwe'll need a street number so we could\ncall this the street address and that\ncould be one thanks we need country\nstates we're going to need a city we\nneed the street address and then we need\na postal code or zip code or something\nlike that so let's just go postal code\nnow these country this is gonna be a\nstring almost all of these are gonna be\nstrings actually this is gonna be a\nstring this is gonna be a string I think\nalmost all of these are gonna be strings\nand the postal code will be a string as\nwell so those string and street address\nneeds to be one word okay so now we have\ninformation relate to an address if we\nwanted to add some more information\nabout address like maybe you wanted to\nget really specific and go long gets you\nlatitude something like that you could\ntechnically add that to this class and\nnow what we kind of have and let me go\nover here and make this a bit bigger is\nall of the information that we needed\nout of this problem right here I've kind\nof taken it out I've read through\neverything we needed to and I've said\nthe information I need to store is the\nfollowing I need an address that has all\nof this I need a person that has all\nthat I need a student a professor a\ncourse and in enroll class that stores\nthe date and the grid awesome now the\nnext thing to consider is what we call\nassociations so I've listed all the\nattributes specific to these classes but\nthese classes can associate with each\nother in fact you know the address is\ngoing to belong to a person right each\nperson needs to have an address a\nstudent is going to be enrolled in a\ncourse through this enroll class a\nprofessor is going to be teaching a\ncourse so how do we go about and do that\nwell this is where we use associations\nnow associations are different from\nattributes they are a way of linking two\nobjects together and the next part of\nwhat we're gonna do here is pretty much\ndetermine how we want to associate all\nof these objects and once we draw that\nout and we have the association's don't\nbe focused on the implementation in code\njust be focused on how these objects\ninteract with each other because if we\ncan understand\nand that we can very easily implement\nthat into code later on using whatever\nprogramming language we want and that's\nwhy you'll notice you know I'm not using\nSTR like I've normally would in Python\nI'm just writing things that are\ndescriptive enough that anybody in any\nprogramming language could look at this\nand translate this into some kind of\nworking implementation so let's keep\nthis on the side of our screen here I'll\nmake it a little bit smaller and I'm\ngonna pop up actually one note and start\ndoing some drawing so let me grab my\ndrawing tab and I'll be right back\nalright so I've shut off my camera here\njust to give us the most amount of\nscreen real estate as possible and what\nI'm gonna do is I'm gonna start I'm\ngonna start by apologizing for my\ndrawing skills because they are very\npoor but I'm actually going to draw what\nwe've just kind of done on the left hand\nside of the screen here and put it into\na visual picture so we can actually see\nwhat's going on so I want to draw all of\nthese classes and I'll tell you what all\nof the things that I'm drawing mean and\nthen what we'll do is actually link them\nup just using a lines so essentially I'm\ngonna draw all these little boxes that\nlook like this you know I'm gonna write\nhere this is a person and then I'll put\nin all of the associations for that\nperson then we'll have another class\nover here and what a line like this\nmeans is an association so essentially\nthis person interacts with this other\nclass and what we can do is put little\nnumbers and symbols on this Association\nto tell us what this Association is is\nthis a one-to-one Association which\nmeans one class links to one other class\nor does this mean this one class could\nlook to many other classes is there a\nlimitation on the amount it can link to\nwell that's what we're gonna put here\nand the idea is that you can write two\nnumbers so if you write one number what\nthis states is that is the amount of\nassociations so when I write one this is\nsaying that this person class one of it\ncan link to many which is what the\nAsterix stands for of whatever this\nclass over here might be if I write\nsomething like 1 dot dot - so say let's\nreplace this with 1 dot dot - what this\nmeans is that we could have one or two\nperson classes if I write one dot dot\nasterisks this says the minimum we can\nhave is 1 the maximum we can have is\ninfinite if I write just in asterisks\nwhich is just my crappy star like this\nthis means we can have as many or as\nlittle of whatever is on this side as we\nwant so I hope that makes sense it will\nmake more sense as we go through this\nbut I just wanted to give you a little\ndefinition for we go too far all right\nso let's delete that let's get back into\nthis so the first class and I'm actually\ngonna draw is my person class now\nremember my person class is gonna be a\nbase class so let me just up this pen\nsize a little bit to make a little bit\neasier so let's draw a class like this\nI'm gonna try very hard to keep this\nneat enough that you can read but it is\nhard to do with the drawing tablet so\nwe're gonna say that's person and what\ndoes a person have on it first name last\nname date of birth phone number now just\nto keep this video shorter I'm gonna\navoid writing the actual type of what\nthese are so I'm not gonna write string\nand all that I'm just gonna write the\nactual name of the attribute so we'll\nsay here this is first name okay so what\nI do a little - like this what I'm\nsaying is this is an attribute so I'm\nessentially saying this is some piece of\ninformation that is contained within\nthis class so I'm saying first name I'm\ngonna say a last name like that what\nelse do we need date of birth okay\ndate of birth next we need a phone\nnumber okay so let's go there all right\nI don't think that's too bad thank you\nguys can kind of read that so there we\ngo person first name last name date of\nbirth the phone number\nokay now this a member is the base class\nfor my student and for my professor so\nin order to illustrate that what I'm\ngonna do is I'm gonna draw two more\nclasses underneath this and I'm gonna\nshow you kind of a fancy arrow that we\ncan use to illustrate that this is a\nbase class and this is a generalization\nso I'm going to draw my two classes here\nthis is gonna be one for my student so\nI'll say actually student will go on the\nother side sorry actually maybe not\nlet's just leave student here student\nand this will be professor like that\nokay so we have our student and we have\nour professor now let's write what we\nneed inside of here so for our professor\nwe just had the salary and for our\nstudents we had what is it international\nokay so international\nand then we had two methods on our\nstudent now usually you do a method\nusing a plus sign what this says\nessentially is this is a public method\neveryone else can see this there might\nbe more methods on the student or on the\nprofessor in the future but if they are\nnot public we don't write them down\nbecause we're just interested in what\nyou know all of these classes how\nthey're gonna interact together and what\nthey can see on each other so we have\nstudent and we'll say is part time put\nsome brackets and we'll say on probation\nI'm just gonna write probation just to\nmake it a little bit shorter will write\nprobation and we'll have two brackets\nagain if you can't read any of this look\non the side that's why I typed it out\nnow to illustrate that these are\nactually going to be a generalization so\nthat this is the base class for those\ntwo other classes what you do is you\nsimply do an arrow like this that is not\nfilled in and you just do a little line\nto these two classes so what this says\nessentially is that this student and\nthis professor are derived from this\nperson class so they are children class\nof this base class person now what this\nmeans is essentially that they have all\nof these same attributes and\nfunctionality as this person class so\nany associations that are made between\nperson and some other class will apply\nto both of these classes because they\nare a generalization of this class\nthey're just a specific instance of a\nperson right I hope that makes sense so\nlet's say we had a teaching assistant\nthen all we would do is just go like\nthis and now all we have to add is\nanything specific to the teaching\nassistant if we want them to be a\nderived classroom person so that is as\neasy as that is and this is a very\ncommon thing when you're designing\nsystems to have a base class that\nrepresents kind of the core\nfunctionality and then have specific\ninstances or specific classes underneath\nthat that have the additional\nfunctionality you need so we have\npersons student professor what do we\nneed next we need an address now who\nhasn't addressed well a student and a\nprofessor both have an address so what\nI'm gonna do up here is I'm gonna draw\nmy address like this and just butcher\nall of this once again okay so address\nlike that and let's go here and let's\nwrite what we need for the address\nwe have a country okay we have a city we\nhave a state which I forgot and then I'm\njust gonna put dot dot dot you get the\npoint we have a street address and a\npostal code I don't think I need to go\nthrough all of it I think you guys get\nthe point now what I'm gonna do is\nactually draw our first Association so\nwhat I just did down here is called a\ngeneralization now that means that these\nthings are not associated they are\nactually like the same thing right like\na student is a person and a professor is\na person so that is why they are called\na generalization when we do this kind of\narrow like that now what in association\nis is a solid line between two classes\nthat says hey every time I make one of\nthese classes I can potentially have\nthis one linked up to it in some way and\nnow what I do is I define the\nmultiplicity is what it's called of my\nassociation so essentially how many of\nthese things can be associated together\nwell it turns out that one person can\nactually have multiple addresses right\nthat is very possible that they have\nmultiple addresses so what I'm gonna do\nis I'm gonna say one person here because\nan address can only belong to one person\nwill say one address is unique to one\nperson although in theory that's not\ncorrect you could have brothers or\nsomething that have the same address but\nfor our system we're going to assume\nthat this address object maybe there'll\nbe one that's exactly the same that's\ntotally fine but they will only belong\nto one person they will not be attached\nto two different people in other words\nwe won't have person one here in person\nto here pointing to the same address\nthat won't ever happen they will be two\nunique objects so we're gonna say one\nand then here I'm actually going to say\nasterisks and what I'm gonna do is say\none dot dot which essentially says that\none person must have at least one\naddress but they can have as many as\nthey want so the lower bound is one the\nupper bound is infinite which means this\nperson could have infinite amount of\naddresses we don't know where they're\ngonna live or how many addresses they\nhave and they have to have at least one\nor they have to at least tell us about\none for us to enter them into the system\nso when you see something like this this\nsays that as soon as I make a person I\nmust create an address that is\nassociated with that person and\nsame thing over here on address this\nsays whenever I make an address I must\nhave a person that is associated with\nthat address as easy as it is that is\nthe first Association we need and in\nfact we're actually getting close to\nfinish this program so we have our\nperson our student our professor and our\naddress the next thing we need is a\ncourse now I'm running out of screen\nreal estate a bit so I'm gonna just do\nthe course over here which is kind of on\nthe edge of my drawing tablet so it's\nhard to write accurately but will write\ncourse and then what do we have for a\ncourse well we actually had a bunch I'll\njust write a few of this straightforward\nones here so we had name we had code we\nhad min so I'm just gonna short these\nmin max and then I'll just write we had\na start and end I'll just write the\nmethod is canceled for now but again you\nguys get the point that is the\ninformation we would have had so is\ncancelled with two brackets okay now\nwhat do we need well guess what we have\nprofessors that are teaching courses so\nwe need to have an association between\nour professor and our course so that we\nknow that this professor is teaching\nthis course right so what I'm gonna do\nis simply draw a line from professor to\ncourse I'm gonna say course we'll put\none like that and then on professor how\nmany professors teach a course well it\nsaid at least one professor teaches a\ncourse but sometimes there may be many\nso I'm gonna write one dot dot asterisks\nlike that which essentially says one\ncourse is associated with one or many\nprofessors and every time we make a\nprofessor we must have it associated\nwith a course wait I don't know if that\nsounds correct whenever we have a\nprofessor it must be teaching a course\nthat's not necessarily true\nwe could have a professor that doesn't\nteach a course that is a possibility of\nour system so what I'm gonna do now is\non course go zero dot dot one which\nessentially says we can have one\nprofessor teaching this course but we\nalso might not have any professor sorry\nall the way around a professor might\nteach a course but they also might not\nteach a course and in fact now that I'm\nlooking at it does only one course make\nsense\nbecause what this\nthen is a professor can only teach at\nmost one course no that's actually wrong\nso what I need to do is change this over\nhere now to be a star because it could\nhave a professor could be teaching a\ncourse it could be teaching many courses\nit might not be teaching any at all so\nlet's erase this and let's change this\nto a star now I know that just was like\na big you know run around in circles and\nme doing everything except the right\nanswer but the point here is that that's\nwhat you want to think about I'm\nbringing you through these scenarios so\nthat you can understand how you approach\na problem like this and how you think\nabout those kind of edge cases when you\nmake your associations on here you want\nto be very careful to design for\nflexibility if you think the system in\nthe future might do what you're limiting\nit to be able to do maybe don't limit it\nto do that it's better to have a system\nthat is more flexible than to be super\nrobust and super defined to the\nrequirements because the requirements do\nchange and part of designing is\ndesigning for scalability and\nflexibility all right so the next class\nwe have is enroll and this actually\nhappens to be the last class but this is\nactually one of the more complicated\nones and this is what I'm gonna call an\nassociation class so I'm gonna draw it\nover here and I'm gonna call this and\nroll so let's say enroll like that and\ninside of here we're gonna have a date\nand what else are we gonna have we're\ngonna have the grade the student\nreceived from the course okay so this is\ngonna be what we call an association\nclass now an association class is a\nlittle bit different than a regular\nclass because what it does is link to\nother classes together which means this\nnever exists on its own it always has an\nassociation between a course and a\nstudent and the whole point of it is to\nlink a course and a student together so\nwe draw it a little bit differently than\nwe draw most regular classes so what I'm\ngonna do here is draw an association\nbetween my student and my course it's\ngetting a little bit messy now I\napologize for that but we do have an\nassociation now between the student and\nthe course and let's pick the\nmultiplicity and then I will talk about\nhow enroll actually operates here so the\nmultiplicity could be that a student can\nbe enroll enrolled in\nmultiple courses and a course can have\nmultiple students in it so what I'm\ngonna say here is first of all on this\nside we're gonna put many because a\ncourse can have many students enrolled\nin it it might have zero\nI might have infinite right it might\nhave maximum then what we need to have\nnext is okay well how many courses can a\nstudent be enrolled in well they can be\nenrolled in zero so they could\ntechnically be enrolled in zero courses\nlet me redraw that because I kind of\nbutchered it and a maximum is six so the\nmaximum amount of courses that can be\nenrolled in is six so essentially what\nI've said is that the lower bound is\nzero the maximum is six which means that\ncan be in any range in between that and\nbased on the amount of courses they're\nenrolled in well that is gonna tell us\nif they are part-time or if they are\nfull-time right that is how we're gonna\ndrive that now this is where the\nAssociation class comes in so what I'm\nactually gonna do is draw a dotted line\nand I'll redraw that again just to make\nit more clear actually over here between\nthis Association and the in rural class\nwhat this says is this Association is\nreally enroll hitting course and student\nhitting enroll right so this is just\nlike this enroll class has an\nassociation between course and students\nand we use that to be able to determine\nwhat courses a student is enrolled in\nthat that is the idea behind this\nintermediate class it stores an\nassociation with course it stores an\nassociation with student and then it\nalso stores some attributes on it that\nare very useful for example date this\ntells us that whenever we create an\nassociation between student and course\nwe must pick a date that this happened\nat so we know when the student enrolled\nin this course right that makes a lot of\nsense and you can now determine say if a\nstudent was late to enroll in the course\nbecause on course if you look over here\nwe have the start and the end date\nleft-hand side of my screen and we can\ncompare the date that they enrolled in\nto the start and the end then we have\ngreat well that tells us what grade they\ngot in this enrolled course and since\nthere's an association between course\nand enroll and student and enroll what\nwe can actually have is we can have the\nprofessor update the grade of a student\nso think about how this works right if I\nneed to update the grade of a student\nwell the professor has an association to\ncourse the course has an association to\nenroll and enroll has an association to\nall of the students right so in this way\nwhat I can do is I can have the\nprofessor look at the course look at all\nof the students enrolled and then go\ninto this enroll class and modify the\ngrade this way the professor does not\nactually get to look at any of the\npersonal information of the student to\nupgrade it it's great all it has to do\nis look at this enroll Association class\nand say hey all I need to do here is\nchange the grade and then that will\nautomatically update for the course and\nfor the student and what's great about\nthis is well since every single student\nis associated to the course with an\nenroll class if I want it to do\nsomething like get the average grade of\nthe course all I would do is look at all\nthe associations between student and one\nspecific course look at that enroll\nclass and then grab all of those grades\nso this is the kind of system that I\ndesigned and that we were trying to\ndesign from the beginning something that\nis flexible and that can do a bunch of\noperations that may not have been\ndefined yet but that we probably want to\ndo in the future so that is pretty much\nit for this design I need to erase this\none line here I don't think that was\nsupposed to be there but this is our\nfinalized design and I apologize that is\nsuper messy but the point of this video\nis not to be like you know the most\nperfect the most robust it's to teach\nyou the process of looking at a software\nsystem and designing it from the ground\nup starting from scratch extracting the\nnecessary information translating that\ninformation and then drawing a somewhat\nyou know kind of plan drawing a design\nthat we can actually go ahead now and\nimplement because if you think about it\nnow all you have to do if you want to\nmake this system is look at this and\nstart implementing what I've defined and\nif you actually look at this as not very\ncomplicated right we've broken\neverything down into classes which you\ncan write we've broken it down into\nmethods and we've broken it down into\nattributes so you don't even really have\nto think now when you go about\nprogramming this you just have to look\nat this design and follow it and if\nthere's something that needs to be\nchanged\nmake that change accordingly right if we\nwant to implement person all I do is\nmake a class called person add a\nconstructor that has these four\narguments and there we go I've made\nperson\nall right I want student and professor\nlet's have them extend the person class\nlet's go okay add an international\nattribute add these two methods is\npart-time is on probation professor\nlet's add a salary there we go Oh\nassociations okay great let's handle\nthese associations let's make a private\nfield in each of these that stores the\nassociation between address or something\nlike that right and that is as easy as\nit is to do now the last thing I will\nsay here just because some people might\nbe confused on how these associations\nare implemented when you have a\none-to-one Association you can think of\nthat just like another attribute so let\nme actually I don't want to erase all of\nthis but let me just do something like\nup here in this little area essentially\nlet's say person has a one-to-one\nassociation with address so imagine that\nthis is actually one what that means is\non the person class we have another\nattribute called address I don't need to\nwrite it because the association's infer\nthat and what this is really equal to is\nan address object right it's equal to\nsome instance of address and then that\nway if we want to access the address of\na person I just call person dot address\nnow this is the exact same thing on\naddress so let me erase this if this is\none-to-one then on side of address right\nthis has an attribute that says person\nso this just says person right and then\nit points to a person object and there\nyou go that way the address if it wanted\nto see the person it could the person\nwants to see the address they can write\nthat is how a one-to-one Association\nhappens now sometimes you might not\nstore it on the address side it really\ndepends but now let's say we have this\none-to-many right then what we would do\nis on here we'd have another attribute\nit would be called addresses like that\nand it would just be equal to a list\nthat stored all of the addresses inside\nof it that's as easy as it is and that\nis what I'm talking about when I say\nAssociation it's just a link between\nthese two objects you implement that\nlink however you want but usually it's\ndone just with another attribute\nor with something in the actual class\nitself and that is how you can link\nthese different things together so with\nthat being said that has been this video\nI know this is not you know the most I\ndon't want to say educational but this\nis really just the way of teaching you\nabout how to think about this it's just\nthe way of training your brain to look\nat information break it down and throw\nit into some kind of design that you can\nthen go ahead and implement so like I\nsaid at the beginning if you want to see\nthe code for this leave a like subscribe\nto the channel comment spam me let me\nknow and I will try my best to make a\nvideo where we implement this exact\ndesign so that being said I hope you\nenjoyed if you did leave it like\nsubscribe and I will see you in the next\nYouTube video\n",
  "words": [
    "music",
    "hello",
    "everybody",
    "welcome",
    "back",
    "going",
    "apologize",
    "right",
    "long",
    "introduction",
    "trying",
    "video",
    "teach",
    "software",
    "design",
    "fundamental",
    "level",
    "heard",
    "guys",
    "loud",
    "clear",
    "lot",
    "sick",
    "beginner",
    "tutorials",
    "sick",
    "people",
    "assuming",
    "know",
    "nothing",
    "want",
    "get",
    "intermediate",
    "advanced",
    "level",
    "want",
    "figure",
    "design",
    "software",
    "look",
    "system",
    "program",
    "come",
    "kind",
    "plan",
    "kind",
    "implementation",
    "approach",
    "strategy",
    "exactly",
    "gon",
    "na",
    "showing",
    "left",
    "hand",
    "side",
    "screen",
    "see",
    "kind",
    "mock",
    "software",
    "system",
    "come",
    "completely",
    "random",
    "example",
    "wrote",
    "video",
    "gon",
    "na",
    "looking",
    "block",
    "text",
    "really",
    "think",
    "client",
    "think",
    "client",
    "wants",
    "person",
    "writing",
    "code",
    "wants",
    "take",
    "simply",
    "four",
    "paragraphs",
    "translate",
    "fully",
    "functioning",
    "software",
    "system",
    "exactly",
    "gon",
    "na",
    "gon",
    "na",
    "look",
    "gon",
    "na",
    "go",
    "process",
    "picking",
    "valuable",
    "information",
    "gon",
    "na",
    "actually",
    "draw",
    "class",
    "diagram",
    "plan",
    "going",
    "start",
    "implementing",
    "leads",
    "next",
    "point",
    "planning",
    "want",
    "get",
    "intermediate",
    "want",
    "move",
    "kind",
    "intermediate",
    "advanced",
    "already",
    "know",
    "program",
    "next",
    "step",
    "thinking",
    "designing",
    "programs",
    "designing",
    "software",
    "enough",
    "good",
    "programming",
    "need",
    "actually",
    "able",
    "think",
    "kind",
    "overarching",
    "architecture",
    "program",
    "writing",
    "want",
    "think",
    "okay",
    "objects",
    "classes",
    "system",
    "going",
    "interact",
    "things",
    "think",
    "things",
    "actually",
    "start",
    "writing",
    "code",
    "going",
    "without",
    "ado",
    "let",
    "go",
    "ahead",
    "get",
    "started",
    "gon",
    "na",
    "read",
    "design",
    "problem",
    "link",
    "description",
    "prefer",
    "read",
    "would",
    "encourage",
    "go",
    "ahead",
    "start",
    "showing",
    "think",
    "might",
    "design",
    "something",
    "looks",
    "like",
    "immediate",
    "thought",
    "idea",
    "video",
    "going",
    "perfect",
    "going",
    "show",
    "exactly",
    "let",
    "go",
    "ahead",
    "read",
    "problem",
    "design",
    "problem",
    "tech",
    "tim",
    "school",
    "programmers",
    "kind",
    "made",
    "name",
    "thought",
    "would",
    "make",
    "sense",
    "assume",
    "lot",
    "guys",
    "students",
    "one",
    "point",
    "student",
    "think",
    "relate",
    "lot",
    "idea",
    "tech",
    "tim",
    "school",
    "programmers",
    "needs",
    "new",
    "system",
    "track",
    "students",
    "professors",
    "courses",
    "think",
    "kind",
    "like",
    "know",
    "mini",
    "university",
    "something",
    "want",
    "system",
    "database",
    "something",
    "like",
    "track",
    "information",
    "maybe",
    "ask",
    "type",
    "questions",
    "student",
    "check",
    "grades",
    "see",
    "teaching",
    "course",
    "really",
    "go",
    "details",
    "wants",
    "keep",
    "track",
    "courses",
    "offered",
    "teaches",
    "course",
    "students",
    "enrolled",
    "courses",
    "else",
    "would",
    "like",
    "able",
    "track",
    "grades",
    "students",
    "across",
    "courses",
    "student",
    "professor",
    "school",
    "needs",
    "know",
    "address",
    "phone",
    "number",
    "h",
    "immediately",
    "even",
    "first",
    "paragraph",
    "told",
    "us",
    "lot",
    "need",
    "system",
    "right",
    "thinking",
    "actually",
    "need",
    "system",
    "really",
    "requirements",
    "listed",
    "system",
    "needs",
    "keep",
    "track",
    "students",
    "needs",
    "keep",
    "track",
    "professors",
    "needs",
    "keep",
    "track",
    "courses",
    "else",
    "need",
    "keep",
    "track",
    "well",
    "person",
    "need",
    "address",
    "phone",
    "number",
    "name",
    "age",
    "let",
    "keep",
    "mind",
    "read",
    "rest",
    "distill",
    "ok",
    "course",
    "maximum",
    "minimum",
    "number",
    "students",
    "enroll",
    "minimum",
    "number",
    "students",
    "reached",
    "course",
    "canceled",
    "course",
    "taught",
    "least",
    "one",
    "professor",
    "sometimes",
    "may",
    "taught",
    "many",
    "situations",
    "may",
    "one",
    "professor",
    "teaches",
    "course",
    "right",
    "professors",
    "salaried",
    "employees",
    "tech",
    "tim",
    "school",
    "programmers",
    "therefore",
    "need",
    "keep",
    "track",
    "much",
    "make",
    "year",
    "professor",
    "teaches",
    "four",
    "courses",
    "semester",
    "granted",
    "bonus",
    "right",
    "students",
    "local",
    "international",
    "students",
    "full",
    "student",
    "considered",
    "student",
    "enrolled",
    "less",
    "one",
    "two",
    "courses",
    "given",
    "semester",
    "actually",
    "sorry",
    "say",
    "enrolled",
    "one",
    "two",
    "courses",
    "given",
    "semester",
    "essentially",
    "taking",
    "two",
    "less",
    "courses",
    "semester",
    "maximum",
    "amount",
    "courses",
    "student",
    "may",
    "enrolled",
    "one",
    "time",
    "six",
    "students",
    "receive",
    "grades",
    "course",
    "grades",
    "numeric",
    "range",
    "0",
    "100",
    "students",
    "grade",
    "across",
    "average",
    "grade",
    "sorry",
    "across",
    "enrolled",
    "courses",
    "lower",
    "60",
    "said",
    "academic",
    "probation",
    "apologize",
    "butchering",
    "butchering",
    "speech",
    "idea",
    "system",
    "fairly",
    "simple",
    "need",
    "keep",
    "track",
    "students",
    "professors",
    "students",
    "grades",
    "across",
    "courses",
    "small",
    "nuances",
    "within",
    "something",
    "gon",
    "na",
    "able",
    "design",
    "hopefully",
    "next",
    "know",
    "30",
    "45",
    "minutes",
    "explaining",
    "everything",
    "given",
    "block",
    "right",
    "given",
    "text",
    "need",
    "translate",
    "program",
    "first",
    "thing",
    "want",
    "start",
    "thinking",
    "information",
    "actually",
    "need",
    "track",
    "potential",
    "classes",
    "going",
    "uml",
    "class",
    "diagram",
    "gon",
    "na",
    "design",
    "using",
    "style",
    "common",
    "people",
    "kind",
    "necessarily",
    "mean",
    "gon",
    "na",
    "design",
    "final",
    "implementation",
    "actually",
    "program",
    "kind",
    "thing",
    "know",
    "design",
    "thought",
    "plan",
    "totally",
    "fine",
    "decide",
    "deviate",
    "later",
    "especially",
    "things",
    "come",
    "least",
    "kind",
    "idea",
    "want",
    "follow",
    "actually",
    "start",
    "coding",
    "gon",
    "na",
    "two",
    "windows",
    "one",
    "left",
    "one",
    "right",
    "going",
    "start",
    "listing",
    "first",
    "classes",
    "think",
    "actually",
    "based",
    "information",
    "seen",
    "kind",
    "first",
    "step",
    "think",
    "objects",
    "might",
    "system",
    "main",
    "components",
    "might",
    "information",
    "within",
    "first",
    "thing",
    "gon",
    "na",
    "list",
    "students",
    "right",
    "probably",
    "student",
    "class",
    "gon",
    "na",
    "multiple",
    "students",
    "next",
    "thing",
    "probably",
    "gon",
    "na",
    "well",
    "professors",
    "know",
    "spell",
    "professors",
    "put",
    "gon",
    "na",
    "student",
    "class",
    "professor",
    "class",
    "gon",
    "na",
    "need",
    "student",
    "professor",
    "different",
    "information",
    "contained",
    "professor",
    "dis",
    "awesome",
    "alright",
    "student",
    "professor",
    "next",
    "thing",
    "need",
    "probably",
    "course",
    "right",
    "gon",
    "na",
    "different",
    "courses",
    "gon",
    "na",
    "taught",
    "professors",
    "gon",
    "na",
    "taught",
    "students",
    "reading",
    "taught",
    "students",
    "students",
    "enrolled",
    "course",
    "reading",
    "first",
    "paragraph",
    "kind",
    "grabbed",
    "said",
    "okay",
    "need",
    "keep",
    "track",
    "students",
    "professors",
    "courses",
    "need",
    "see",
    "courses",
    "offered",
    "teaches",
    "course",
    "enrolled",
    "keep",
    "track",
    "grades",
    "okay",
    "mate",
    "brings",
    "grades",
    "need",
    "keep",
    "track",
    "greats",
    "gon",
    "na",
    "well",
    "keep",
    "moving",
    "think",
    "gon",
    "na",
    "happen",
    "course",
    "maximum",
    "minimum",
    "number",
    "students",
    "enroll",
    "minimum",
    "number",
    "students",
    "reached",
    "course",
    "canceled",
    "course",
    "taught",
    "least",
    "one",
    "professor",
    "sometimes",
    "taught",
    "many",
    "okay",
    "give",
    "classes",
    "think",
    "right",
    "least",
    "let",
    "keep",
    "going",
    "professors",
    "salaried",
    "employees",
    "tech",
    "tim",
    "schooled",
    "programmer",
    "therefore",
    "need",
    "keep",
    "track",
    "much",
    "make",
    "year",
    "okay",
    "says",
    "say",
    "anything",
    "students",
    "local",
    "international",
    "student",
    "considered",
    "student",
    "enrolled",
    "one",
    "two",
    "courses",
    "given",
    "semester",
    "duh",
    "duh",
    "okay",
    "reading",
    "determined",
    "student",
    "professor",
    "course",
    "thing",
    "really",
    "missing",
    "way",
    "keeping",
    "track",
    "enrolled",
    "course",
    "grades",
    "students",
    "actually",
    "going",
    "going",
    "make",
    "class",
    "called",
    "enroll",
    "gon",
    "na",
    "seem",
    "weird",
    "enroll",
    "class",
    "going",
    "us",
    "make",
    "sense",
    "go",
    "video",
    "essentially",
    "link",
    "students",
    "courses",
    "essentially",
    "way",
    "say",
    "ok",
    "course",
    "taught",
    "professor",
    "student",
    "enrolled",
    "course",
    "reason",
    "want",
    "enroll",
    "enroll",
    "essentially",
    "tell",
    "first",
    "course",
    "active",
    "right",
    "know",
    "enough",
    "people",
    "course",
    "student",
    "enrollment",
    "successful",
    "something",
    "could",
    "keep",
    "track",
    "rural",
    "class",
    "keep",
    "track",
    "grade",
    "student",
    "course",
    "need",
    "way",
    "keep",
    "track",
    "grades",
    "courses",
    "students",
    "enroll",
    "class",
    "could",
    "way",
    "keep",
    "mind",
    "might",
    "change",
    "go",
    "start",
    "drawing",
    "things",
    "might",
    "make",
    "sense",
    "something",
    "else",
    "initial",
    "idea",
    "starting",
    "starting",
    "ground",
    "thinking",
    "right",
    "think",
    "reading",
    "requirements",
    "look",
    "something",
    "like",
    "okay",
    "settled",
    "four",
    "classes",
    "right",
    "could",
    "change",
    "trying",
    "walk",
    "process",
    "fully",
    "really",
    "understand",
    "four",
    "classes",
    "think",
    "gon",
    "na",
    "need",
    "course",
    "enroll",
    "one",
    "gon",
    "na",
    "link",
    "courses",
    "students",
    "together",
    "store",
    "information",
    "may",
    "like",
    "date",
    "enrolled",
    "course",
    "something",
    "like",
    "okay",
    "gon",
    "na",
    "gon",
    "na",
    "spread",
    "gon",
    "na",
    "start",
    "listing",
    "information",
    "need",
    "keep",
    "track",
    "students",
    "professors",
    "gon",
    "na",
    "start",
    "looking",
    "information",
    "need",
    "students",
    "says",
    "student",
    "local",
    "international",
    "full",
    "first",
    "thing",
    "gon",
    "na",
    "say",
    "say",
    "local",
    "boolean",
    "value",
    "either",
    "gon",
    "na",
    "true",
    "false",
    "student",
    "local",
    "fact",
    "actually",
    "might",
    "make",
    "international",
    "international",
    "think",
    "right",
    "tell",
    "students",
    "international",
    "tell",
    "local",
    "right",
    "true",
    "false",
    "value",
    "keep",
    "attribute",
    "student",
    "class",
    "type",
    "information",
    "gon",
    "na",
    "need",
    "know",
    "says",
    "student",
    "either",
    "full",
    "okay",
    "could",
    "consider",
    "attribute",
    "student",
    "whether",
    "full",
    "attribute",
    "derived",
    "derived",
    "based",
    "number",
    "courses",
    "enrolled",
    "given",
    "semester",
    "instead",
    "making",
    "attribute",
    "actually",
    "gon",
    "na",
    "say",
    "well",
    "something",
    "need",
    "student",
    "gon",
    "na",
    "method",
    "method",
    "gon",
    "na",
    "say",
    "simply",
    "return",
    "boolean",
    "look",
    "student",
    "tell",
    "many",
    "courses",
    "enrolled",
    "greater",
    "threshold",
    "student",
    "student",
    "right",
    "method",
    "things",
    "start",
    "thinking",
    "gon",
    "na",
    "implement",
    "kind",
    "attribute",
    "well",
    "gon",
    "na",
    "using",
    "method",
    "determine",
    "student",
    "full",
    "okay",
    "maximum",
    "amount",
    "courses",
    "student",
    "may",
    "enrolled",
    "six",
    "students",
    "receive",
    "grades",
    "okay",
    "else",
    "say",
    "average",
    "grade",
    "lower",
    "60",
    "academic",
    "probation",
    "one",
    "derived",
    "grades",
    "since",
    "derived",
    "attribute",
    "simply",
    "something",
    "going",
    "sit",
    "need",
    "method",
    "tells",
    "hey",
    "probation",
    "say",
    "probation",
    "like",
    "alright",
    "put",
    "boolean",
    "methods",
    "intending",
    "look",
    "attributes",
    "student",
    "evaluate",
    "give",
    "us",
    "answer",
    "give",
    "us",
    "kind",
    "attitudes",
    "right",
    "probation",
    "okay",
    "let",
    "move",
    "professor",
    "worry",
    "lot",
    "stuff",
    "gon",
    "na",
    "add",
    "want",
    "talk",
    "later",
    "professor",
    "need",
    "well",
    "professor",
    "need",
    "keep",
    "track",
    "salaries",
    "first",
    "thing",
    "say",
    "salary",
    "number",
    "right",
    "int",
    "whatever",
    "want",
    "call",
    "well",
    "actually",
    "probably",
    "would",
    "float",
    "could",
    "decimal",
    "point",
    "salary",
    "put",
    "salad",
    "right",
    "else",
    "need",
    "professor",
    "well",
    "nothing",
    "else",
    "really",
    "says",
    "need",
    "age",
    "name",
    "phone",
    "number",
    "etc",
    "get",
    "second",
    "gon",
    "na",
    "leave",
    "course",
    "need",
    "course",
    "well",
    "specifically",
    "say",
    "anything",
    "really",
    "need",
    "course",
    "gon",
    "na",
    "course",
    "course",
    "name",
    "gon",
    "na",
    "course",
    "code",
    "something",
    "probably",
    "gon",
    "na",
    "need",
    "name",
    "string",
    "code",
    "string",
    "well",
    "actually",
    "else",
    "need",
    "need",
    "minimum",
    "maximum",
    "amount",
    "students",
    "course",
    "save",
    "min",
    "students",
    "int",
    "say",
    "max",
    "students",
    "int",
    "actually",
    "gon",
    "na",
    "well",
    "need",
    "determine",
    "course",
    "active",
    "canceled",
    "going",
    "enough",
    "students",
    "course",
    "happen",
    "gon",
    "na",
    "gon",
    "na",
    "add",
    "method",
    "says",
    "active",
    "say",
    "canceled",
    "goes",
    "requirements",
    "say",
    "canceled",
    "boolean",
    "look",
    "students",
    "enrolled",
    "course",
    "tell",
    "us",
    "enough",
    "canceled",
    "canceled",
    "right",
    "hope",
    "makes",
    "sense",
    "okay",
    "student",
    "professor",
    "course",
    "another",
    "thing",
    "thinking",
    "might",
    "want",
    "something",
    "like",
    "start",
    "time",
    "course",
    "necessarily",
    "say",
    "need",
    "thinking",
    "program",
    "future",
    "probably",
    "makes",
    "sense",
    "something",
    "like",
    "start",
    "time",
    "right",
    "like",
    "course",
    "start",
    "might",
    "want",
    "keep",
    "track",
    "say",
    "start",
    "say",
    "date",
    "might",
    "well",
    "put",
    "end",
    "well",
    "say",
    "gon",
    "na",
    "date",
    "hopefully",
    "get",
    "idea",
    "going",
    "picking",
    "necessary",
    "information",
    "listing",
    "see",
    "actually",
    "start",
    "drawing",
    "anything",
    "student",
    "professor",
    "course",
    "enroll",
    "okay",
    "enroll",
    "need",
    "enroll",
    "well",
    "gon",
    "na",
    "keep",
    "track",
    "students",
    "enrolled",
    "courses",
    "enroll",
    "gon",
    "na",
    "simply",
    "gon",
    "na",
    "say",
    "date",
    "literally",
    "say",
    "date",
    "gon",
    "na",
    "date",
    "happened",
    "enroll",
    "gon",
    "na",
    "need",
    "students",
    "enrolled",
    "course",
    "enrolled",
    "also",
    "going",
    "need",
    "b",
    "grade",
    "student",
    "got",
    "course",
    "pretty",
    "much",
    "gon",
    "na",
    "keep",
    "track",
    "hey",
    "student",
    "enrolled",
    "course",
    "grade",
    "received",
    "course",
    "float",
    "anything",
    "else",
    "might",
    "want",
    "keep",
    "track",
    "specific",
    "student",
    "course",
    "make",
    "sense",
    "go",
    "student",
    "course",
    "would",
    "information",
    "put",
    "enroll",
    "think",
    "anything",
    "gon",
    "na",
    "leave",
    "like",
    "kind",
    "core",
    "information",
    "need",
    "except",
    "address",
    "phone",
    "number",
    "name",
    "age",
    "reason",
    "left",
    "gon",
    "na",
    "require",
    "classes",
    "notice",
    "student",
    "professor",
    "shared",
    "functionality",
    "shared",
    "attributes",
    "address",
    "phone",
    "number",
    "name",
    "age",
    "actually",
    "going",
    "gon",
    "na",
    "make",
    "another",
    "class",
    "gon",
    "na",
    "call",
    "person",
    "person",
    "class",
    "gon",
    "na",
    "represent",
    "base",
    "class",
    "student",
    "professor",
    "student",
    "professor",
    "shared",
    "things",
    "want",
    "know",
    "let",
    "put",
    "base",
    "class",
    "gon",
    "na",
    "call",
    "person",
    "inside",
    "person",
    "gon",
    "na",
    "say",
    "okay",
    "need",
    "well",
    "need",
    "name",
    "actually",
    "gon",
    "na",
    "say",
    "first",
    "name",
    "oops",
    "could",
    "type",
    "first",
    "name",
    "string",
    "gon",
    "na",
    "say",
    "last",
    "name",
    "string",
    "well",
    "else",
    "need",
    "need",
    "age",
    "person",
    "age",
    "int",
    "like",
    "gon",
    "na",
    "ask",
    "question",
    "ca",
    "really",
    "interactive",
    "environment",
    "think",
    "age",
    "makes",
    "sense",
    "put",
    "make",
    "sense",
    "attribute",
    "called",
    "age",
    "want",
    "keep",
    "track",
    "age",
    "right",
    "says",
    "need",
    "age",
    "person",
    "class",
    "think",
    "second",
    "okay",
    "assuming",
    "thought",
    "gon",
    "na",
    "tell",
    "right",
    "makes",
    "sense",
    "put",
    "attribute",
    "called",
    "age",
    "int",
    "reason",
    "never",
    "put",
    "attribute",
    "called",
    "age",
    "something",
    "age",
    "changes",
    "guess",
    "age",
    "derived",
    "birthdate",
    "current",
    "date",
    "versus",
    "birth",
    "date",
    "determines",
    "age",
    "rather",
    "keeping",
    "track",
    "age",
    "want",
    "keep",
    "track",
    "date",
    "birth",
    "tell",
    "us",
    "age",
    "right",
    "easily",
    "find",
    "age",
    "date",
    "birth",
    "gon",
    "na",
    "date",
    "little",
    "bit",
    "trick",
    "put",
    "see",
    "could",
    "fool",
    "guys",
    "okay",
    "next",
    "thing",
    "need",
    "phone",
    "number",
    "let",
    "say",
    "phone",
    "number",
    "like",
    "phone",
    "number",
    "gon",
    "na",
    "guess",
    "could",
    "call",
    "gon",
    "na",
    "call",
    "string",
    "like",
    "plus",
    "one",
    "yada",
    "yada",
    "yada",
    "might",
    "specific",
    "attribute",
    "could",
    "use",
    "string",
    "fine",
    "think",
    "guys",
    "get",
    "right",
    "need",
    "b",
    "address",
    "address",
    "comprised",
    "though",
    "question",
    "address",
    "really",
    "attribute",
    "put",
    "put",
    "dress",
    "like",
    "well",
    "answer",
    "yes",
    "usually",
    "like",
    "make",
    "things",
    "easier",
    "future",
    "make",
    "separate",
    "class",
    "called",
    "address",
    "stores",
    "information",
    "separate",
    "fields",
    "address",
    "way",
    "easily",
    "grab",
    "information",
    "address",
    "sort",
    "people",
    "living",
    "certain",
    "area",
    "makes",
    "things",
    "lot",
    "easier",
    "especially",
    "thinking",
    "database",
    "structure",
    "future",
    "bunch",
    "attributes",
    "could",
    "squished",
    "one",
    "separate",
    "individual",
    "fields",
    "let",
    "look",
    "address",
    "address",
    "well",
    "need",
    "country",
    "need",
    "kind",
    "state",
    "province",
    "call",
    "state",
    "like",
    "could",
    "province",
    "might",
    "make",
    "sense",
    "going",
    "need",
    "street",
    "need",
    "street",
    "number",
    "could",
    "call",
    "street",
    "address",
    "could",
    "one",
    "thanks",
    "need",
    "country",
    "states",
    "going",
    "need",
    "city",
    "need",
    "street",
    "address",
    "need",
    "postal",
    "code",
    "zip",
    "code",
    "something",
    "like",
    "let",
    "go",
    "postal",
    "code",
    "country",
    "gon",
    "na",
    "string",
    "almost",
    "gon",
    "na",
    "strings",
    "actually",
    "gon",
    "na",
    "string",
    "gon",
    "na",
    "string",
    "think",
    "almost",
    "gon",
    "na",
    "strings",
    "postal",
    "code",
    "string",
    "well",
    "string",
    "street",
    "address",
    "needs",
    "one",
    "word",
    "okay",
    "information",
    "relate",
    "address",
    "wanted",
    "add",
    "information",
    "address",
    "like",
    "maybe",
    "wanted",
    "get",
    "really",
    "specific",
    "go",
    "long",
    "gets",
    "latitude",
    "something",
    "like",
    "could",
    "technically",
    "add",
    "class",
    "kind",
    "let",
    "go",
    "make",
    "bit",
    "bigger",
    "information",
    "needed",
    "problem",
    "right",
    "kind",
    "taken",
    "read",
    "everything",
    "needed",
    "said",
    "information",
    "need",
    "store",
    "following",
    "need",
    "address",
    "need",
    "person",
    "need",
    "student",
    "professor",
    "course",
    "enroll",
    "class",
    "stores",
    "date",
    "grid",
    "awesome",
    "next",
    "thing",
    "consider",
    "call",
    "associations",
    "listed",
    "attributes",
    "specific",
    "classes",
    "classes",
    "associate",
    "fact",
    "know",
    "address",
    "going",
    "belong",
    "person",
    "right",
    "person",
    "needs",
    "address",
    "student",
    "going",
    "enrolled",
    "course",
    "enroll",
    "class",
    "professor",
    "going",
    "teaching",
    "course",
    "go",
    "well",
    "use",
    "associations",
    "associations",
    "different",
    "attributes",
    "way",
    "linking",
    "two",
    "objects",
    "together",
    "next",
    "part",
    "gon",
    "na",
    "pretty",
    "much",
    "determine",
    "want",
    "associate",
    "objects",
    "draw",
    "association",
    "focused",
    "implementation",
    "code",
    "focused",
    "objects",
    "interact",
    "understand",
    "easily",
    "implement",
    "code",
    "later",
    "using",
    "whatever",
    "programming",
    "language",
    "want",
    "notice",
    "know",
    "using",
    "str",
    "like",
    "normally",
    "would",
    "python",
    "writing",
    "things",
    "descriptive",
    "enough",
    "anybody",
    "programming",
    "language",
    "could",
    "look",
    "translate",
    "kind",
    "working",
    "implementation",
    "let",
    "keep",
    "side",
    "screen",
    "make",
    "little",
    "bit",
    "smaller",
    "gon",
    "na",
    "pop",
    "actually",
    "one",
    "note",
    "start",
    "drawing",
    "let",
    "grab",
    "drawing",
    "tab",
    "right",
    "back",
    "alright",
    "shut",
    "camera",
    "give",
    "us",
    "amount",
    "screen",
    "real",
    "estate",
    "possible",
    "gon",
    "na",
    "gon",
    "na",
    "start",
    "gon",
    "na",
    "start",
    "apologizing",
    "drawing",
    "skills",
    "poor",
    "actually",
    "going",
    "draw",
    "kind",
    "done",
    "left",
    "hand",
    "side",
    "screen",
    "put",
    "visual",
    "picture",
    "actually",
    "see",
    "going",
    "want",
    "draw",
    "classes",
    "tell",
    "things",
    "drawing",
    "mean",
    "actually",
    "link",
    "using",
    "lines",
    "essentially",
    "gon",
    "na",
    "draw",
    "little",
    "boxes",
    "look",
    "like",
    "know",
    "gon",
    "na",
    "write",
    "person",
    "put",
    "associations",
    "person",
    "another",
    "class",
    "line",
    "like",
    "means",
    "association",
    "essentially",
    "person",
    "interacts",
    "class",
    "put",
    "little",
    "numbers",
    "symbols",
    "association",
    "tell",
    "us",
    "association",
    "association",
    "means",
    "one",
    "class",
    "links",
    "one",
    "class",
    "mean",
    "one",
    "class",
    "could",
    "look",
    "many",
    "classes",
    "limitation",
    "amount",
    "link",
    "well",
    "gon",
    "na",
    "put",
    "idea",
    "write",
    "two",
    "numbers",
    "write",
    "one",
    "number",
    "states",
    "amount",
    "associations",
    "write",
    "one",
    "saying",
    "person",
    "class",
    "one",
    "link",
    "many",
    "asterix",
    "stands",
    "whatever",
    "class",
    "might",
    "write",
    "something",
    "like",
    "1",
    "dot",
    "dot",
    "say",
    "let",
    "replace",
    "1",
    "dot",
    "dot",
    "means",
    "could",
    "one",
    "two",
    "person",
    "classes",
    "write",
    "one",
    "dot",
    "dot",
    "asterisks",
    "says",
    "minimum",
    "1",
    "maximum",
    "infinite",
    "write",
    "asterisks",
    "crappy",
    "star",
    "like",
    "means",
    "many",
    "little",
    "whatever",
    "side",
    "want",
    "hope",
    "makes",
    "sense",
    "make",
    "sense",
    "go",
    "wanted",
    "give",
    "little",
    "definition",
    "go",
    "far",
    "right",
    "let",
    "delete",
    "let",
    "get",
    "back",
    "first",
    "class",
    "actually",
    "gon",
    "na",
    "draw",
    "person",
    "class",
    "remember",
    "person",
    "class",
    "gon",
    "na",
    "base",
    "class",
    "let",
    "pen",
    "size",
    "little",
    "bit",
    "make",
    "little",
    "bit",
    "easier",
    "let",
    "draw",
    "class",
    "like",
    "gon",
    "na",
    "try",
    "hard",
    "keep",
    "neat",
    "enough",
    "read",
    "hard",
    "drawing",
    "tablet",
    "gon",
    "na",
    "say",
    "person",
    "person",
    "first",
    "name",
    "last",
    "name",
    "date",
    "birth",
    "phone",
    "number",
    "keep",
    "video",
    "shorter",
    "gon",
    "na",
    "avoid",
    "writing",
    "actual",
    "type",
    "gon",
    "na",
    "write",
    "string",
    "gon",
    "na",
    "write",
    "actual",
    "name",
    "attribute",
    "say",
    "first",
    "name",
    "okay",
    "little",
    "like",
    "saying",
    "attribute",
    "essentially",
    "saying",
    "piece",
    "information",
    "contained",
    "within",
    "class",
    "saying",
    "first",
    "name",
    "gon",
    "na",
    "say",
    "last",
    "name",
    "like",
    "else",
    "need",
    "date",
    "birth",
    "okay",
    "date",
    "birth",
    "next",
    "need",
    "phone",
    "number",
    "okay",
    "let",
    "go",
    "right",
    "think",
    "bad",
    "thank",
    "guys",
    "kind",
    "read",
    "go",
    "person",
    "first",
    "name",
    "last",
    "name",
    "date",
    "birth",
    "phone",
    "number",
    "okay",
    "member",
    "base",
    "class",
    "student",
    "professor",
    "order",
    "illustrate",
    "gon",
    "na",
    "gon",
    "na",
    "draw",
    "two",
    "classes",
    "underneath",
    "gon",
    "na",
    "show",
    "kind",
    "fancy",
    "arrow",
    "use",
    "illustrate",
    "base",
    "class",
    "generalization",
    "going",
    "draw",
    "two",
    "classes",
    "gon",
    "na",
    "one",
    "student",
    "say",
    "actually",
    "student",
    "go",
    "side",
    "sorry",
    "actually",
    "maybe",
    "let",
    "leave",
    "student",
    "student",
    "professor",
    "like",
    "okay",
    "student",
    "professor",
    "let",
    "write",
    "need",
    "inside",
    "professor",
    "salary",
    "students",
    "international",
    "okay",
    "international",
    "two",
    "methods",
    "student",
    "usually",
    "method",
    "using",
    "plus",
    "sign",
    "says",
    "essentially",
    "public",
    "method",
    "everyone",
    "else",
    "see",
    "might",
    "methods",
    "student",
    "professor",
    "future",
    "public",
    "write",
    "interested",
    "know",
    "classes",
    "gon",
    "na",
    "interact",
    "together",
    "see",
    "student",
    "say",
    "part",
    "time",
    "put",
    "brackets",
    "say",
    "probation",
    "gon",
    "na",
    "write",
    "probation",
    "make",
    "little",
    "bit",
    "shorter",
    "write",
    "probation",
    "two",
    "brackets",
    "ca",
    "read",
    "look",
    "side",
    "typed",
    "illustrate",
    "actually",
    "going",
    "generalization",
    "base",
    "class",
    "two",
    "classes",
    "simply",
    "arrow",
    "like",
    "filled",
    "little",
    "line",
    "two",
    "classes",
    "says",
    "essentially",
    "student",
    "professor",
    "derived",
    "person",
    "class",
    "children",
    "class",
    "base",
    "class",
    "person",
    "means",
    "essentially",
    "attributes",
    "functionality",
    "person",
    "class",
    "associations",
    "made",
    "person",
    "class",
    "apply",
    "classes",
    "generalization",
    "class",
    "specific",
    "instance",
    "person",
    "right",
    "hope",
    "makes",
    "sense",
    "let",
    "say",
    "teaching",
    "assistant",
    "would",
    "go",
    "like",
    "add",
    "anything",
    "specific",
    "teaching",
    "assistant",
    "want",
    "derived",
    "classroom",
    "person",
    "easy",
    "common",
    "thing",
    "designing",
    "systems",
    "base",
    "class",
    "represents",
    "kind",
    "core",
    "functionality",
    "specific",
    "instances",
    "specific",
    "classes",
    "underneath",
    "additional",
    "functionality",
    "need",
    "persons",
    "student",
    "professor",
    "need",
    "next",
    "need",
    "address",
    "addressed",
    "well",
    "student",
    "professor",
    "address",
    "gon",
    "na",
    "gon",
    "na",
    "draw",
    "address",
    "like",
    "butcher",
    "okay",
    "address",
    "like",
    "let",
    "go",
    "let",
    "write",
    "need",
    "address",
    "country",
    "okay",
    "city",
    "state",
    "forgot",
    "gon",
    "na",
    "put",
    "dot",
    "dot",
    "dot",
    "get",
    "point",
    "street",
    "address",
    "postal",
    "code",
    "think",
    "need",
    "go",
    "think",
    "guys",
    "get",
    "point",
    "gon",
    "na",
    "actually",
    "draw",
    "first",
    "association",
    "called",
    "generalization",
    "means",
    "things",
    "associated",
    "actually",
    "like",
    "thing",
    "right",
    "like",
    "student",
    "person",
    "professor",
    "person",
    "called",
    "generalization",
    "kind",
    "arrow",
    "like",
    "association",
    "solid",
    "line",
    "two",
    "classes",
    "says",
    "hey",
    "every",
    "time",
    "make",
    "one",
    "classes",
    "potentially",
    "one",
    "linked",
    "way",
    "define",
    "multiplicity",
    "called",
    "association",
    "essentially",
    "many",
    "things",
    "associated",
    "together",
    "well",
    "turns",
    "one",
    "person",
    "actually",
    "multiple",
    "addresses",
    "right",
    "possible",
    "multiple",
    "addresses",
    "gon",
    "na",
    "gon",
    "na",
    "say",
    "one",
    "person",
    "address",
    "belong",
    "one",
    "person",
    "say",
    "one",
    "address",
    "unique",
    "one",
    "person",
    "although",
    "theory",
    "correct",
    "could",
    "brothers",
    "something",
    "address",
    "system",
    "going",
    "assume",
    "address",
    "object",
    "maybe",
    "one",
    "exactly",
    "totally",
    "fine",
    "belong",
    "one",
    "person",
    "attached",
    "two",
    "different",
    "people",
    "words",
    "wo",
    "person",
    "one",
    "person",
    "pointing",
    "address",
    "wo",
    "ever",
    "happen",
    "two",
    "unique",
    "objects",
    "gon",
    "na",
    "say",
    "one",
    "actually",
    "going",
    "say",
    "asterisks",
    "gon",
    "na",
    "say",
    "one",
    "dot",
    "dot",
    "essentially",
    "says",
    "one",
    "person",
    "must",
    "least",
    "one",
    "address",
    "many",
    "want",
    "lower",
    "bound",
    "one",
    "upper",
    "bound",
    "infinite",
    "means",
    "person",
    "could",
    "infinite",
    "amount",
    "addresses",
    "know",
    "gon",
    "na",
    "live",
    "many",
    "addresses",
    "least",
    "one",
    "least",
    "tell",
    "us",
    "one",
    "us",
    "enter",
    "system",
    "see",
    "something",
    "like",
    "says",
    "soon",
    "make",
    "person",
    "must",
    "create",
    "address",
    "associated",
    "person",
    "thing",
    "address",
    "says",
    "whenever",
    "make",
    "address",
    "must",
    "person",
    "associated",
    "address",
    "easy",
    "first",
    "association",
    "need",
    "fact",
    "actually",
    "getting",
    "close",
    "finish",
    "program",
    "person",
    "student",
    "professor",
    "address",
    "next",
    "thing",
    "need",
    "course",
    "running",
    "screen",
    "real",
    "estate",
    "bit",
    "gon",
    "na",
    "course",
    "kind",
    "edge",
    "drawing",
    "tablet",
    "hard",
    "write",
    "accurately",
    "write",
    "course",
    "course",
    "well",
    "actually",
    "bunch",
    "write",
    "straightforward",
    "ones",
    "name",
    "code",
    "min",
    "gon",
    "na",
    "short",
    "min",
    "max",
    "write",
    "start",
    "end",
    "write",
    "method",
    "canceled",
    "guys",
    "get",
    "point",
    "information",
    "would",
    "cancelled",
    "two",
    "brackets",
    "okay",
    "need",
    "well",
    "guess",
    "professors",
    "teaching",
    "courses",
    "need",
    "association",
    "professor",
    "course",
    "know",
    "professor",
    "teaching",
    "course",
    "right",
    "gon",
    "na",
    "simply",
    "draw",
    "line",
    "professor",
    "course",
    "gon",
    "na",
    "say",
    "course",
    "put",
    "one",
    "like",
    "professor",
    "many",
    "professors",
    "teach",
    "course",
    "well",
    "said",
    "least",
    "one",
    "professor",
    "teaches",
    "course",
    "sometimes",
    "may",
    "many",
    "gon",
    "na",
    "write",
    "one",
    "dot",
    "dot",
    "asterisks",
    "like",
    "essentially",
    "says",
    "one",
    "course",
    "associated",
    "one",
    "many",
    "professors",
    "every",
    "time",
    "make",
    "professor",
    "must",
    "associated",
    "course",
    "wait",
    "know",
    "sounds",
    "correct",
    "whenever",
    "professor",
    "must",
    "teaching",
    "course",
    "necessarily",
    "true",
    "could",
    "professor",
    "teach",
    "course",
    "possibility",
    "system",
    "gon",
    "na",
    "course",
    "go",
    "zero",
    "dot",
    "dot",
    "one",
    "essentially",
    "says",
    "one",
    "professor",
    "teaching",
    "course",
    "also",
    "might",
    "professor",
    "sorry",
    "way",
    "around",
    "professor",
    "might",
    "teach",
    "course",
    "also",
    "might",
    "teach",
    "course",
    "fact",
    "looking",
    "one",
    "course",
    "make",
    "sense",
    "professor",
    "teach",
    "one",
    "course",
    "actually",
    "wrong",
    "need",
    "change",
    "star",
    "could",
    "professor",
    "could",
    "teaching",
    "course",
    "could",
    "teaching",
    "many",
    "courses",
    "might",
    "teaching",
    "let",
    "erase",
    "let",
    "change",
    "star",
    "know",
    "like",
    "big",
    "know",
    "run",
    "around",
    "circles",
    "everything",
    "except",
    "right",
    "answer",
    "point",
    "want",
    "think",
    "bringing",
    "scenarios",
    "understand",
    "approach",
    "problem",
    "like",
    "think",
    "kind",
    "edge",
    "cases",
    "make",
    "associations",
    "want",
    "careful",
    "design",
    "flexibility",
    "think",
    "system",
    "future",
    "might",
    "limiting",
    "able",
    "maybe",
    "limit",
    "better",
    "system",
    "flexible",
    "super",
    "robust",
    "super",
    "defined",
    "requirements",
    "requirements",
    "change",
    "part",
    "designing",
    "designing",
    "scalability",
    "flexibility",
    "right",
    "next",
    "class",
    "enroll",
    "actually",
    "happens",
    "last",
    "class",
    "actually",
    "one",
    "complicated",
    "ones",
    "gon",
    "na",
    "call",
    "association",
    "class",
    "gon",
    "na",
    "draw",
    "gon",
    "na",
    "call",
    "roll",
    "let",
    "say",
    "enroll",
    "like",
    "inside",
    "gon",
    "na",
    "date",
    "else",
    "gon",
    "na",
    "gon",
    "na",
    "grade",
    "student",
    "received",
    "course",
    "okay",
    "gon",
    "na",
    "call",
    "association",
    "class",
    "association",
    "class",
    "little",
    "bit",
    "different",
    "regular",
    "class",
    "link",
    "classes",
    "together",
    "means",
    "never",
    "exists",
    "always",
    "association",
    "course",
    "student",
    "whole",
    "point",
    "link",
    "course",
    "student",
    "together",
    "draw",
    "little",
    "bit",
    "differently",
    "draw",
    "regular",
    "classes",
    "gon",
    "na",
    "draw",
    "association",
    "student",
    "course",
    "getting",
    "little",
    "bit",
    "messy",
    "apologize",
    "association",
    "student",
    "course",
    "let",
    "pick",
    "multiplicity",
    "talk",
    "enroll",
    "actually",
    "operates",
    "multiplicity",
    "could",
    "student",
    "enroll",
    "enrolled",
    "multiple",
    "courses",
    "course",
    "multiple",
    "students",
    "gon",
    "na",
    "say",
    "first",
    "side",
    "gon",
    "na",
    "put",
    "many",
    "course",
    "many",
    "students",
    "enrolled",
    "might",
    "zero",
    "might",
    "infinite",
    "right",
    "might",
    "maximum",
    "need",
    "next",
    "okay",
    "well",
    "many",
    "courses",
    "student",
    "enrolled",
    "well",
    "enrolled",
    "zero",
    "could",
    "technically",
    "enrolled",
    "zero",
    "courses",
    "let",
    "redraw",
    "kind",
    "butchered",
    "maximum",
    "six",
    "maximum",
    "amount",
    "courses",
    "enrolled",
    "six",
    "essentially",
    "said",
    "lower",
    "bound",
    "zero",
    "maximum",
    "six",
    "means",
    "range",
    "based",
    "amount",
    "courses",
    "enrolled",
    "well",
    "gon",
    "na",
    "tell",
    "us",
    "right",
    "gon",
    "na",
    "drive",
    "association",
    "class",
    "comes",
    "actually",
    "gon",
    "na",
    "draw",
    "dotted",
    "line",
    "redraw",
    "make",
    "clear",
    "actually",
    "association",
    "rural",
    "class",
    "says",
    "association",
    "really",
    "enroll",
    "hitting",
    "course",
    "student",
    "hitting",
    "enroll",
    "right",
    "like",
    "enroll",
    "class",
    "association",
    "course",
    "students",
    "use",
    "able",
    "determine",
    "courses",
    "student",
    "enrolled",
    "idea",
    "behind",
    "intermediate",
    "class",
    "stores",
    "association",
    "course",
    "stores",
    "association",
    "student",
    "also",
    "stores",
    "attributes",
    "useful",
    "example",
    "date",
    "tells",
    "us",
    "whenever",
    "create",
    "association",
    "student",
    "course",
    "must",
    "pick",
    "date",
    "happened",
    "know",
    "student",
    "enrolled",
    "course",
    "right",
    "makes",
    "lot",
    "sense",
    "determine",
    "say",
    "student",
    "late",
    "enroll",
    "course",
    "course",
    "look",
    "start",
    "end",
    "date",
    "side",
    "screen",
    "compare",
    "date",
    "enrolled",
    "start",
    "end",
    "great",
    "well",
    "tells",
    "us",
    "grade",
    "got",
    "enrolled",
    "course",
    "since",
    "association",
    "course",
    "enroll",
    "student",
    "enroll",
    "actually",
    "professor",
    "update",
    "grade",
    "student",
    "think",
    "works",
    "right",
    "need",
    "update",
    "grade",
    "student",
    "well",
    "professor",
    "association",
    "course",
    "course",
    "association",
    "enroll",
    "enroll",
    "association",
    "students",
    "right",
    "way",
    "professor",
    "look",
    "course",
    "look",
    "students",
    "enrolled",
    "go",
    "enroll",
    "class",
    "modify",
    "grade",
    "way",
    "professor",
    "actually",
    "get",
    "look",
    "personal",
    "information",
    "student",
    "upgrade",
    "great",
    "look",
    "enroll",
    "association",
    "class",
    "say",
    "hey",
    "need",
    "change",
    "grade",
    "automatically",
    "update",
    "course",
    "student",
    "great",
    "well",
    "since",
    "every",
    "single",
    "student",
    "associated",
    "course",
    "enroll",
    "class",
    "want",
    "something",
    "like",
    "get",
    "average",
    "grade",
    "course",
    "would",
    "look",
    "associations",
    "student",
    "one",
    "specific",
    "course",
    "look",
    "enroll",
    "class",
    "grab",
    "grades",
    "kind",
    "system",
    "designed",
    "trying",
    "design",
    "beginning",
    "something",
    "flexible",
    "bunch",
    "operations",
    "may",
    "defined",
    "yet",
    "probably",
    "want",
    "future",
    "pretty",
    "much",
    "design",
    "need",
    "erase",
    "one",
    "line",
    "think",
    "supposed",
    "finalized",
    "design",
    "apologize",
    "super",
    "messy",
    "point",
    "video",
    "like",
    "know",
    "perfect",
    "robust",
    "teach",
    "process",
    "looking",
    "software",
    "system",
    "designing",
    "ground",
    "starting",
    "scratch",
    "extracting",
    "necessary",
    "information",
    "translating",
    "information",
    "drawing",
    "somewhat",
    "know",
    "kind",
    "plan",
    "drawing",
    "design",
    "actually",
    "go",
    "ahead",
    "implement",
    "think",
    "want",
    "make",
    "system",
    "look",
    "start",
    "implementing",
    "defined",
    "actually",
    "look",
    "complicated",
    "right",
    "broken",
    "everything",
    "classes",
    "write",
    "broken",
    "methods",
    "broken",
    "attributes",
    "even",
    "really",
    "think",
    "go",
    "programming",
    "look",
    "design",
    "follow",
    "something",
    "needs",
    "changed",
    "make",
    "change",
    "accordingly",
    "right",
    "want",
    "implement",
    "person",
    "make",
    "class",
    "called",
    "person",
    "add",
    "constructor",
    "four",
    "arguments",
    "go",
    "made",
    "person",
    "right",
    "want",
    "student",
    "professor",
    "let",
    "extend",
    "person",
    "class",
    "let",
    "go",
    "okay",
    "add",
    "international",
    "attribute",
    "add",
    "two",
    "methods",
    "probation",
    "professor",
    "let",
    "add",
    "salary",
    "go",
    "oh",
    "associations",
    "okay",
    "great",
    "let",
    "handle",
    "associations",
    "let",
    "make",
    "private",
    "field",
    "stores",
    "association",
    "address",
    "something",
    "like",
    "right",
    "easy",
    "last",
    "thing",
    "say",
    "people",
    "might",
    "confused",
    "associations",
    "implemented",
    "association",
    "think",
    "like",
    "another",
    "attribute",
    "let",
    "actually",
    "want",
    "erase",
    "let",
    "something",
    "like",
    "little",
    "area",
    "essentially",
    "let",
    "say",
    "person",
    "association",
    "address",
    "imagine",
    "actually",
    "one",
    "means",
    "person",
    "class",
    "another",
    "attribute",
    "called",
    "address",
    "need",
    "write",
    "association",
    "infer",
    "really",
    "equal",
    "address",
    "object",
    "right",
    "equal",
    "instance",
    "address",
    "way",
    "want",
    "access",
    "address",
    "person",
    "call",
    "person",
    "dot",
    "address",
    "exact",
    "thing",
    "address",
    "let",
    "erase",
    "side",
    "address",
    "right",
    "attribute",
    "says",
    "person",
    "says",
    "person",
    "right",
    "points",
    "person",
    "object",
    "go",
    "way",
    "address",
    "wanted",
    "see",
    "person",
    "could",
    "person",
    "wants",
    "see",
    "address",
    "write",
    "association",
    "happens",
    "sometimes",
    "might",
    "store",
    "address",
    "side",
    "really",
    "depends",
    "let",
    "say",
    "right",
    "would",
    "another",
    "attribute",
    "would",
    "called",
    "addresses",
    "like",
    "would",
    "equal",
    "list",
    "stored",
    "addresses",
    "inside",
    "easy",
    "talking",
    "say",
    "association",
    "link",
    "two",
    "objects",
    "implement",
    "link",
    "however",
    "want",
    "usually",
    "done",
    "another",
    "attribute",
    "something",
    "actual",
    "class",
    "link",
    "different",
    "things",
    "together",
    "said",
    "video",
    "know",
    "know",
    "want",
    "say",
    "educational",
    "really",
    "way",
    "teaching",
    "think",
    "way",
    "training",
    "brain",
    "look",
    "information",
    "break",
    "throw",
    "kind",
    "design",
    "go",
    "ahead",
    "implement",
    "like",
    "said",
    "beginning",
    "want",
    "see",
    "code",
    "leave",
    "like",
    "subscribe",
    "channel",
    "comment",
    "spam",
    "let",
    "know",
    "try",
    "best",
    "make",
    "video",
    "implement",
    "exact",
    "design",
    "said",
    "hope",
    "enjoyed",
    "leave",
    "like",
    "subscribe",
    "see",
    "next",
    "youtube",
    "video"
  ],
  "keywords": [
    "going",
    "right",
    "video",
    "teach",
    "software",
    "design",
    "guys",
    "lot",
    "people",
    "know",
    "want",
    "get",
    "look",
    "system",
    "program",
    "kind",
    "gon",
    "na",
    "side",
    "screen",
    "see",
    "really",
    "think",
    "person",
    "code",
    "simply",
    "go",
    "information",
    "actually",
    "draw",
    "class",
    "start",
    "next",
    "point",
    "thinking",
    "designing",
    "enough",
    "need",
    "okay",
    "objects",
    "classes",
    "things",
    "let",
    "read",
    "link",
    "would",
    "might",
    "something",
    "like",
    "idea",
    "name",
    "make",
    "sense",
    "students",
    "one",
    "student",
    "needs",
    "track",
    "professors",
    "courses",
    "grades",
    "teaching",
    "course",
    "keep",
    "enrolled",
    "else",
    "professor",
    "address",
    "phone",
    "number",
    "first",
    "us",
    "well",
    "age",
    "maximum",
    "minimum",
    "enroll",
    "canceled",
    "taught",
    "least",
    "may",
    "many",
    "semester",
    "local",
    "international",
    "two",
    "given",
    "say",
    "essentially",
    "amount",
    "time",
    "grade",
    "said",
    "probation",
    "thing",
    "using",
    "probably",
    "put",
    "different",
    "says",
    "anything",
    "way",
    "called",
    "tell",
    "could",
    "change",
    "drawing",
    "together",
    "date",
    "attribute",
    "derived",
    "method",
    "implement",
    "attributes",
    "add",
    "call",
    "string",
    "makes",
    "another",
    "future",
    "specific",
    "base",
    "last",
    "birth",
    "little",
    "bit",
    "stores",
    "street",
    "associations",
    "association",
    "write",
    "line",
    "means",
    "dot",
    "associated",
    "addresses",
    "must"
  ]
}