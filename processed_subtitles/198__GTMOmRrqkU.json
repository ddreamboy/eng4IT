{
  "text": "hey thanks for checking out this video\non learning HTML CSS and JavaScript in a\nshort amount of time learning web design\nis going to be profitable in any area of\nyour career and any area of your life -\nif you really enjoy working on web\ndesign and that's what you do for a\nliving so in this short video I will\nshow you how you can learn the basics of\nweb design in a short amount of time but\nI also want to let you know about a\nproject that I've been working on called\nsass adventure you can check it out at\nsass adventure IO and it is a 21 day\nprogram where you can learn to create\nyour own software as-a-service so this\nmeans you can create a\nsoftware-as-a-service where other people\ncan pay you a certain amount every month\nto use your service it's a great way to\nbecome financially free and really just\ncontinue to work on what you love and\nmake a great living from it so be sure\nto check it out at sass adventure IO and\nwithout further ado let's jump into\nlearning HTML CSS and JavaScript ok so\nbefore we can start writing some code we\nneed to use a text editor and you can\njust google any kind of you know text\neditor if we were to Google text editor\nwe see that we have a few up here\nsublime text is very popular but one\nthat I'm going to use throughout this\nvideo is called vs code so you can\nGoogle vs code you can go here and you\ncan click on download for Mac or PC or\nwhichever operating system that you are\nusing so let's go ahead and jump into\ntalking about HTML so we already have\nour editor I'm just going to create a\nnew folder on my desktop and I will just\ntitle this HTML and I'm going to drag\nthis folder into my text editor which is\nvisual studio code okay so now I need to\ncreate a new file and I'm going to name\nthis new file index dot HTML and\nwhenever you create an HTML file you\nneed to end it with an extension of dot\nHTML and doing that will let the web\nbrowser know that hey this is an HTML\nfile so inside of our index.html I can\nsimply type out something alike hello\nworld and if I were to save that\nand if I open this up\nby double-clicking it you can see that\nit gets opened up in a browser and we\nget a message that says hello world and\nthis is our first home page that we just\ncreated and you can see it's that easy\nit is simply a text file that opens up\nin a browser and gets displayed as a web\npage of course this is not proper HTML\nsyntax so we will need to give proper\nsyntax for our HTML document and to do\nthat we start off every document with\nthe exclamation doctype HTML enclosed\nwith these brackets and then we create\nan HTML document and whenever we open a\ntag we also have to close a tag so this\nis what is referred to as a tag it is\nwhen you have some kind of text inside\nof a less-than and greater-than sign and\nthen you close it with a less-than and\ngreater-than sign you'll be seeing a lot\nof this inside of HTML so then we need\nto add the head of our document and this\nis where we'll add things like be title\n[Music]\nand then we will need to add the body\nand the body is where the actual content\nwill live that gets displayed on the\npage so let's go ahead and create our\nfirst paragraph so to create a paragraph\nwe need to add the paragraph tag so we\nwill say P and then we'll say hello\nworld and now if I save this and we go\nback to that page you'll probably see\nthat this is going to look exactly the\nsame but if we were to open up developer\ntools and go to elements this is\nactually structured of like a correct\nHTML web page so just like that we've\ncreated our first HTML web page with\nproper syntax so learning hTML is all\nabout learning these tags so we have\nthis paragraph tag and then we also have\nheading tags so we have we can say h1\nhello there and remember we close the\ntag anytime we open a tag so here we\nhave a heading 1 tag I can save that and\nreload and now you can see that it shows\nas larger text we can then go back we\nhave h1 h2 h3 and all the way up to h6\nand they're just different levels of\nheadings we also have multiple different\nthings like like lists so we have\nheadings we have paragraphs and then we\ncan also have a list so maybe we want to\nhave like a list of maybe groceries so\nyou l stands for unordered list and then\ninside of the unordered list we have\nlist items so as you can see everything\nthat we're opening we're also closing so\nwe open this unordered list we close the\nunordered list and same with the list\nitem we opened it and closed it so maybe\nwe want to add eggs milk\nand cheese so now you can see I just\ncreated a list of grocery items and if I\nwere to save that go back here and\nreload you can see that we get a list of\neggs milk and cheese next up we can also\nadd some links to our page if we wanted\nso I could add a link by using the a tag\nand inside of here I will say add a\ngrocery item so if I save that we go\nback here and reload you can see that we\nhave a link but it actually doesn't show\nup as a link in here and that's because\nwe need to give our a tag and attribute\nand an attribute is simply additional\ntext that we can use to add to our tag\nthat will give it some more\nfunctionality so in here I'm going to\nsay href equals and I'm going to provide\na link and I'm just gonna put a link to\nGoogle right here so if I were to save\nthat and go back here and reload now you\ncan see that actually it looks like a\nlink so there are a ton more of these\nattributes that we can add that we will\ngo over here shortly\nbut next let's move on to images so to\nadd an image to a page we can say image\nsource so you can see that we're also\nusing an attribute for our image tag and\nthe unique thing about an image tag is\nit doesn't require a closing tag so you\nmay find a few of these inside of HTML\nthat some elements do not require it to\nbe closed it simply closes itself so\ninside of this source we need to\nactually provide the source of the image\nso let's find an image from images\nGoogle let's just say funny dog and this\nguy looks good okay so I want to open\nthis image in a new tab and that's kind\nof a weird image let's take a look at\nthis guy open an image in new tab yeah\nwe can see it has a dot jpg extension\nI'm gonna copy that and put that right\nthere let me zoom out just a little bit\nand go back here reload our page and now\nyou can see that we have this picture of\nthe dog so we just went over headings\nparagraphs lists links and images and\nthere are about three more elements that\nI want to cover so one is the table\nelement\nso sometimes you will see things inside\nof a table on a webpage so you can do\nthat by saying table and then inside of\nour table we have rows so I'll say table\nrow and then instead of each row we have\na table data say I am some data\nand I can just copy this and paste that\nlike that\nyou\nokay so if I save that we go back here\nand reload you can see that we have some\ntable data and I can actually add a\nborder to this table if I reload you can\nsee that we now have a border around\nthis table so I could possibly have\nanother table data item here let's\nchange the text a little bit I am more\ndata ten that didn't really change it\nmuch oh well okay so we save that we\nreload and now you can see that the\ntable data right here has two columns\nand then we have three rows so that is\nthe basics of a table element sometimes\nyou want to use a table so you can have\na nice layout of data next I want to\ntalk about a div element so a div\nelement is just an element that you can\nuse for anything you can create a box\nyou could create a circle if you wanted\nit's simply used for any kind of\ncontainer so we can just say div and\ninside here I can just add some text so\nI save that in reload it doesn't really\nlook like much and that's because we\nhaven't added any styles or added any\nattributes to this div but what you can\ndo with div elements is you can maybe\nfloat some left and float some right and\nthen I just kind of wanted to point this\nout we'll go into more detail once we\nstart learning some CSS here shortly so\njust know that divs elements are simply\njust a container that you can wrap\nanything in next up is the form element\nso we have a form and this has a few\nattributes that we can add to it such as\naction which is where we want this to\npost to so we can say where we want the\nform to post to and we'll just have it\npost to itself and then we have the\nmethod and this is whether it is a post\nor a get and I think the scope of the\nget in the post might be a little bit\nbeyond this video but we'll just say a\nget request and inside of this form we\ncan have multiple input elements so I\ncan have an input of text and I can say\nthat I want this to have a name of name\nand a place holder of name\nand then let's go ahead and add a button\nso if I save that we go back here we\nreload you can see now that we have this\nnew form home and I forgot to add\nsomething there or actually we have an\nextra bracket so let me go ahead and\njust comment out our list and our image\nokay so now if I reload you can see that\nform right here so we can say hello\nclick on submit and you can see that the\nget request actually passes the name\nthat I just typed in here so you can see\nthat it changes right there and we can\nuse this data once once we learn a\nback-end programming language to capture\nthe data that the user just posted and\nthen do whatever we want with that data\nokay so that is the very very basics of\nHTML hTML is all about learning these\ntags and how you can use them in your\nwebpage so let's go over a brief summary\nof what we just learned so we learned\nabout heading tags which we can do h1\nthrough h6 and that will just give us a\nlarge heading text we also learned about\nparagraph tags where we can add a\nparagraph to our page and then we\nlearned about our lists so this was our\nlist where we added a grocery list of\neggs milk and cheese and then we also\nlearned about links so links will take\nyou from one page to another and then we\nhad images so HTML images will display\nan image on the page it's very\nself-explanatory then we have a tables\nthat we explained we talked about divs\nwhich are just containers that can store\nanything and then we also have our form\nelements oh and it looks like actually I\nhad a closing div here and this would be\nimproper HTML I would need to actually\nclose that with a form tag and there are\nmultiple input types that you can learn\nto use such as type text type checkbox'\nthere's also some dropdowns that you can\nuse as well but we just wanted to cover\nthe very basics of HTML and next let's\nmove on to learning some CSS ok now\nlet's learn a little bit of CSS so I'm\ngoing to create a new folder on my\ndesktop and just call this CSS and I\nwill open this up in my editor and\ncreate a new file called index.html and\nI'm going to give us a basic HTML\nstructure and then add a paragraph to my\nbody tag and I'm just going to say CSS\nis awesome\nokay so there are three ways that you\ncan add CSS to your HTML page the first\nway is to add an inline style so this is\nactually adding an attribute called\nstyle and we can say that we want the\nstyle to have a property which is the\ncolor and we want to be colored to have\na value of we'll say blue in this case\nso if I save this we can go ahead and\nopen this up\nand you can see that our text is indeed\nblue so this is one way to include style\ninside of your page now let's say that\nwe duplicated this and then what if we\nmade a change to the color here we said\nwhite and then we want to be background\nto be blue so if we save that and we go\nback here and reload you can now see\nthat the background is blue and the text\nis white so then if we wanted all of our\nparagraphs to look the same we would\nthen have to copy all these styles and\npaste it in here again so instead of\ndoing that over and over again there is\na simpler way that we can add styles to\nelements that they can be applied to\nevery single element so this was inline\nstyles\nwe can also add internal styles so that\nwould be adding a style tag to the head\nof our document and then we can say for\nall paragraphs so BP tag we then have a\nopen curly brace and a closing curly\nbrace and inside of here we can add\nthese properties and values so I pasted\nthat in there\nand just remove the inline styles so now\nI can save that go back here and reload\nand you can see that these style gets\napplied to both paragraphs if I were\nthen to change the background to green\nand we reload you can see that that\nstyle gets applied as well so those are\ntwo ways to include CSS in your page we\nhad inline and internal and the last way\nwhich is the most common is to include\nan external style sheet so we will do\nthat by adding a link tag to our head\nand this has a rel equal style sheet and\nhref is going to be the place where we\nstore the location of our CSS file so\nI'm going to say that I want my CSS file\nto be in the same directory as my\nindex.html and I want to call it\nstyle.css so let's create that file okay\nso now we have our style that CSS and\nour index.html which includes this style\ndot CSS so now I can say that I want all\nthe paragraphs to have a color of white\nand a background let's change that to\nred and let's reload and now you can see\nthat that gets applied as well so those\nare the three ways that you can include\nCSS in your HTML is inline internal and\nexternal now that we know how to include\nCSS in our page let's learn a little bit\nabout all these different styles that we\ncan add to our page so the HTML is the\nstructure of our page and the CSS is the\nstyles that get applied to the structure\nof our page so instead of our style at\nCSS we have our paragraph tag and we\nhave the color white and background red\nso the color is what is referred to as\nthe property and the white is what is\ncalled the value so every single\nproperty has a specific value and CSS is\nreally about learning all these\ndifferent properties and the values\nassociated with them to make your HTML\npage look really nice so let's play\naround with a few more properties so I'm\ngoing to say that I want the font size\nto be a hundred pixels let me save that\nand reload now you can see that that\nfont size is really large next we can\nsay font style maybe I want this to be\nitalic you can save that and reload and\nnow you can see that it is italic so\nthere are a ton of different font\nproperties background properties and\ncolor properties that you can use inside\nof your CSS we're only going to cover\njust the very basics in here and you'll\nhave to go on and learn about every\nsingle property and value and the place\nthat I usually recommend to most people\nis w3 schools so if you go to w3 schools\ncomm you can click here to learn HTML\nand learn CSS and they also have a learn\nJavaScript so if you go to the learn CSS\nyou will find out about all these\nproperties and the Associated values so\nlet's jump back over to our project and\nhave a little bit more fun so I'm going\nto create a new div and I'm going to add\nsome text inside of it so inside of my\nstyle I'm going to say for every single\ndiv element I want it to have a property\nof width of 100 pixels and a height of\n100 pixels and let's give it a green\nbackground so let me save that go back\nhere and reload and now you can see that\nwe have this box right here and let me\ntake this font size away because that is\nreally big okay so now you can see that\nwe have this box right here in front of\nus and we just applied some styles to\nthis div so one thing that I do want to\ntell you about is identifier zand\nclasses or IDs and classes so we can add\nan ID to this div so that way we can\nreference this specific div itself\nbecause you can see if we were to create\nanother div right below it all the\nstyles are going to be applied to that\ndiv as well so what we can do is we can\nspecify a unique identifier so I can say\nID equals box\nso right here I want to change this to\nhash and that's how we reference an ID\nI'm going to say box\nI want to apply those Styles only to an\nID web box so I go back here and reload\nyou can see that those Styles only got\napplied to that specific div so let's\nsay for instance then that we wanted to\nhave multiple divs we wouldn't use the\nID box because ID should be unique for\nthe document you should never have the\nsame identifiers in one document instead\nin that case you would use what is\ncalled a class so if we have a class\ninstead of using the hash sign we\nactually use the dot symbol so now if we\nuse that and we reload you can see that\nthe style gets applied to both of these\ndiv with a class of box and you can also\nsee how they are right on top of each\nother let's add a little bit of spacing\nso here we can add some margin I can say\n10 pixels and now you can see that it\nhas some spacing around the box then we\ncan also add some padding and the\npadding will add some spacing inside of\nthe box so you can see that the padding\nis inside and the margin is spacing\noutside then we could also apply a\nproperty called border and maybe we want\nto give it a border of two pixels we\nwant it to be solid and we want it to\nhave a color of red so let's reload that\nand you can see now that we have this\nborder around each of our boxes so just\na few more properties that I want to\ncover I also want to cover the flow\nproperty so maybe we want the boxes\ninstead of them being vertically stacked\nmaybe I want them to be laid out\nhorizontally if I add this float:left\nthey will both be floating left and they\nwill be horizontally aligned as opposed\nto vertically aligned next I want to\ntalk about a property called position\nand by default all elements have a\nposition of relative which just means\nthat wherever they are at inside of the\nHTML document is where they will be\ndisplayed so we have position relative\nand that looks exactly the same there's\nanother one that's called position\nabsolute and this is saying that I want\nthis element to be positioned\ntypically where I tell it to so I can\nsay I want this to be position:absolute\nand I want to be positioned at the top\nof zero pixels and left of zero pixels\nso if I were to save that and reload now\nyou can see that actually gets\npositioned at top:0 left:0 you can see\nthat it has a little bit of spacing up\non the top and the left and that's\nbecause we have our margin so let's just\nset that back to relative or we can just\ncompletely remove these properties so\nthat is just the very basics of CSS like\nI said I would recommend going over to\nw3 schools learning all about these\nproperties and values and how you can\napply them to your HTML to make it look\na lot nicer I would also recommend maybe\njust checking out a website and seeing\nhow their things are laid out and maybe\neven try copying that and try\nreplicating that because the key to\nmastering your skill is going to be all\nabout practice you can just go on we're\ngoing to want to practice in practice\nand you are just going to get better and\nbetter and your websites are going to\nlook nicer and nicer as well okay so now\nthat we have HTML and CSS down let's\nlearn a bit about JavaScript okay now\nlet's learn how we can add some\ninteractivity to our pages by learning\nsome JavaScript so I'm just going to\ncreate another new folder on my desktop\ncalled JavaScript and move this into my\neditor and again I'm going to create\nanother file called index.html with a\nbasic HTML structure okay so I'm also\ngoing to add another div and give that\nan ID of box and now there are two ways\nthat we can add JavaScript to our page\nsimilar to CSS we can add our JavaScript\ninternal so I can add some script tags\nright here and I can do something called\nconsole log hello so the console log\nwill actually print out a message inside\nof our developer tools let me show you\nwhat the developer tools looks like so\nif I open up the page you can see that\nwe don't have anything on the page but\nif I open up developer tools with\ncommand shift I or you can go up here\nand go to more tools and say developer\ntools so I want to go to the console and\nyou can see now that we have this\nmessage printed out\nright here called hello so that is one\nway to include JavaScript inside of our\nHTML file we can also include an\nexternal script similar to CSS so I can\nsay script and I want this source to\nload script J s from our current\ndirectory so now I need to create that\nfile script j s and I will say\nconsole.log javascript is rad so save\nthat going back here reload and now you\ncan see that we get the output\njavascript is rad so using console.log\nwe can easily output content to the\nconsole and will help us debug our app\nand maybe even get the contents of\ncertain variables so with that said\nvariables is something that we will talk\nabout first so you can create a variable\nand store any type of value in it so a\nvariable is essentially a container that\ncan store a number so we can store the\nvalue of 10 inside of number we could\nalso store a string and we could also\nstore a boolean value so we could say is\nrad equals true now let's say that we\nwant to add this string right here to\nactually be displayed on our page\nbecause as you can see our page doesn't\ndo much so let's say that we want to\nstore hello there inside of our ID box\nso we can do that by calling document\nand we want to get the document and then\nwe want to get an element by ID and the\nID is box and we want to set the inner\nHTML to be equal to string so if I save\nthat and reload you can see that\nactually gets added to that div so you\ncan see right here inside of our ID box\nis the text hello there so we can add\ntext we could also add this number\ninstead and we could also do some\narithmetic so maybe we wanted to add 5\nto number so we could save that in\nreload and now we get the value of 15 so\nyou can do all kinds of math arithmetic\ncomparison operators inside of\nJavaScript\nadditionally we can run conditionals in\nJavaScript so we can say if a condition\nis met we want to do scenario a\notherwise we want to do scenario B so\nlet's go ahead and create an if\nstatement so we'll say if number is\nequal to 10 then we want to console.log\nyeah buddy\nlet me say else console.log nope\nokay so if we save that go back here\nreload and go to our console you can see\nthat we get the output yeah buddy\nand if we were to set the value to let's\nsay 5 and we reload this you can see\nthat we get the value of nope and the\ncool thing about JavaScript is you can\nactually run all this JavaScript right\nhere inside of your browser so I could\ncreate a new variable and call this age\nequals 21 and now I can say if age is\ngreater than or equal to 21 we can\nconsole.log you can live here so you can\nsee that that got output so you can do a\nlot of programming in JavaScript right\nhere directly inside of your console\nnext let's talk about loops so every\ngood application has loops so a loop\nessentially runs through a certain piece\nof code a certain amount of times so\nlet's create our first for loop so I'm\ngoing to create a for loop and I'm going\nto say var I is equal to 0 and the\ncondition that we want to meet that we\nkeep on running through this loop is we\nwant I to be less than 10 but each time\nwe run through the loop we want I to\nincrement by 1 so now let's go ahead and\njust console.log the value of I so if I\nsave that we go back here and reload you\ncan see that we get 0 1 2 3 4 5 6 7 8 9\nso you can use loops to loop through\nfunctionality in your application loop\nthrough arrays and objects since we're\ntalking about arrays let me go ahead and\nshow you how this would work\nso let me create a new array which is\ncalled groceries and the array you use\nthe bracket notation and inside of here\nmaybe I want to store the value of milk\nwill say eggs and cheese okay so maybe\nwe want to loop through each of these\ngrocery items and display them on the\nscreen so I can do that by saying for\nbar equal to 0 and instead of I less\nthan 10 I actually want I to be less\nthan will say groceries dot length and\nthat is the total length of the array\nwhich in this case is going to be 3 so\nthen we want to print out groceries and\nwe want that to print out at location I\nso for the first time through it's going\nto print out at 0 1 and then 2 so if we\nsave this we go back here and reload you\ncan now see that we get each of these\nitems displayed on the screen ok and\nnext let's talk about functions so I\nfunction you can think of like a machine\nlike you put something in and you\nusually get something out or you press a\nbutton to start that machine and then\nsomething comes out so in this case we\nare going to just create a function and\nwe will just call this list groceries so\ninstead of here I'm going to add my for\nloop so if I were to add that I click on\nsave and we come back here and reload\nyou're gonna see that we don't get any\noutput because even though we have our\nfunction here we're actually not calling\nit so we need to call our function so\nhere I'm going to say list groceries and\nif I save that and we reload now we get\nthe output because we called our\nfunction so functions make it very\nuseful to create functionality that\nyou're going to use over and over again\nyou can simply call the function and use\nit multiple times throughout your\napplication ok and before wrapping up\nthis video there's one last thing that I\nwant to talk about which is event\nlisteners so let's say that anytime we\nclick on this box right here I'm going\nto add some text here we want to maybe\nalert the user about\nsomething so what we can do is we can\nadd an event listener so we can say\ndocument dot get element by ID we want\nto get that box and we want to add an\nevent listener so we want to say once\nthat element is clicked we want to run\nthis specific function so let's just\nalert to the user\nI got clicked so let me save that go\nback here and reload and now let's click\non the box and you can see that we get\nthis alert right here so you will use\nthese event listeners throughout your\napplication to create functionality when\nusers click when users hover whenever\nany kind of functionality happens in\nyour application you'll be using these\nevent listeners quite a bit so that is\njust a basic overview of JavaScript you\njust learned HTML CSS and JavaScript in\na really short amount of time and like I\nsaid you will probably want to go to\nw3schools and you'll want to go through\neach of these tutorials and learn inside\nof HTML all the different elements that\nyou can use with CSS you'll want to\nlearn about all the properties and\nvalues and JavaScript you will want to\nlearn about all the different types the\nvariables that you can create the\ndifferent functions that you can create\nand like I said it's all about practice\nso you just practice practice practice\nand you're really going to hone in on\nyour skills and just get so much better\nat your craft so I really hope that this\nvideo has helped you and if you do have\nany questions please feel free to ask\nthem in the comment section below and\nhappy coding and I hope that you will\ncontinue to learn more about web\ndevelopment because it is going to show\nto be valuable in any area of your\ncareer hey thanks again for watching my\nvideo if you do want to learn how to\ncreate your own software as-a-service\nafter you have learned web design and\nyou've learned a little bit about PHP\nand laravel which I do have tutorials\nfor each of those languages you'll want\nto head over to sass adventure Ohio and\nthis is where you can sign up for our 21\nday program and you can learn how to\ncreate your own software as-a-service\nit's actually a lot of fun each day that\nyou complete you will get a new badge\ninside of your user area and you will\nlearn all kinds of cool technology\nso make sure to head on over to sass\nadventure dot IO to start creating your\nsoftware as a service\n",
  "words": [
    "hey",
    "thanks",
    "checking",
    "video",
    "learning",
    "html",
    "css",
    "javascript",
    "short",
    "amount",
    "time",
    "learning",
    "web",
    "design",
    "going",
    "profitable",
    "area",
    "career",
    "area",
    "life",
    "really",
    "enjoy",
    "working",
    "web",
    "design",
    "living",
    "short",
    "video",
    "show",
    "learn",
    "basics",
    "web",
    "design",
    "short",
    "amount",
    "time",
    "also",
    "want",
    "let",
    "know",
    "project",
    "working",
    "called",
    "sass",
    "adventure",
    "check",
    "sass",
    "adventure",
    "io",
    "21",
    "day",
    "program",
    "learn",
    "create",
    "software",
    "means",
    "create",
    "people",
    "pay",
    "certain",
    "amount",
    "every",
    "month",
    "use",
    "service",
    "great",
    "way",
    "become",
    "financially",
    "free",
    "really",
    "continue",
    "work",
    "love",
    "make",
    "great",
    "living",
    "sure",
    "check",
    "sass",
    "adventure",
    "io",
    "without",
    "ado",
    "let",
    "jump",
    "learning",
    "html",
    "css",
    "javascript",
    "ok",
    "start",
    "writing",
    "code",
    "need",
    "use",
    "text",
    "editor",
    "google",
    "kind",
    "know",
    "text",
    "editor",
    "google",
    "text",
    "editor",
    "see",
    "sublime",
    "text",
    "popular",
    "one",
    "going",
    "use",
    "throughout",
    "video",
    "called",
    "vs",
    "code",
    "google",
    "vs",
    "code",
    "go",
    "click",
    "download",
    "mac",
    "pc",
    "whichever",
    "operating",
    "system",
    "using",
    "let",
    "go",
    "ahead",
    "jump",
    "talking",
    "html",
    "already",
    "editor",
    "going",
    "create",
    "new",
    "folder",
    "desktop",
    "title",
    "html",
    "going",
    "drag",
    "folder",
    "text",
    "editor",
    "visual",
    "studio",
    "code",
    "okay",
    "need",
    "create",
    "new",
    "file",
    "going",
    "name",
    "new",
    "file",
    "index",
    "dot",
    "html",
    "whenever",
    "create",
    "html",
    "file",
    "need",
    "end",
    "extension",
    "dot",
    "html",
    "let",
    "web",
    "browser",
    "know",
    "hey",
    "html",
    "file",
    "inside",
    "simply",
    "type",
    "something",
    "alike",
    "hello",
    "world",
    "save",
    "open",
    "see",
    "gets",
    "opened",
    "browser",
    "get",
    "message",
    "says",
    "hello",
    "world",
    "first",
    "home",
    "page",
    "created",
    "see",
    "easy",
    "simply",
    "text",
    "file",
    "opens",
    "browser",
    "gets",
    "displayed",
    "web",
    "page",
    "course",
    "proper",
    "html",
    "syntax",
    "need",
    "give",
    "proper",
    "syntax",
    "html",
    "document",
    "start",
    "every",
    "document",
    "exclamation",
    "doctype",
    "html",
    "enclosed",
    "brackets",
    "create",
    "html",
    "document",
    "whenever",
    "open",
    "tag",
    "also",
    "close",
    "tag",
    "referred",
    "tag",
    "kind",
    "text",
    "inside",
    "sign",
    "close",
    "sign",
    "seeing",
    "lot",
    "inside",
    "html",
    "need",
    "add",
    "head",
    "document",
    "add",
    "things",
    "like",
    "title",
    "music",
    "need",
    "add",
    "body",
    "body",
    "actual",
    "content",
    "live",
    "gets",
    "displayed",
    "page",
    "let",
    "go",
    "ahead",
    "create",
    "first",
    "paragraph",
    "create",
    "paragraph",
    "need",
    "add",
    "paragraph",
    "tag",
    "say",
    "p",
    "say",
    "hello",
    "world",
    "save",
    "go",
    "back",
    "page",
    "probably",
    "see",
    "going",
    "look",
    "exactly",
    "open",
    "developer",
    "tools",
    "go",
    "elements",
    "actually",
    "structured",
    "like",
    "correct",
    "html",
    "web",
    "page",
    "like",
    "created",
    "first",
    "html",
    "web",
    "page",
    "proper",
    "syntax",
    "learning",
    "html",
    "learning",
    "tags",
    "paragraph",
    "tag",
    "also",
    "heading",
    "tags",
    "say",
    "h1",
    "hello",
    "remember",
    "close",
    "tag",
    "anytime",
    "open",
    "tag",
    "heading",
    "1",
    "tag",
    "save",
    "reload",
    "see",
    "shows",
    "larger",
    "text",
    "go",
    "back",
    "h1",
    "h2",
    "h3",
    "way",
    "h6",
    "different",
    "levels",
    "headings",
    "also",
    "multiple",
    "different",
    "things",
    "like",
    "like",
    "lists",
    "headings",
    "paragraphs",
    "also",
    "list",
    "maybe",
    "want",
    "like",
    "list",
    "maybe",
    "groceries",
    "l",
    "stands",
    "unordered",
    "list",
    "inside",
    "unordered",
    "list",
    "list",
    "items",
    "see",
    "everything",
    "opening",
    "also",
    "closing",
    "open",
    "unordered",
    "list",
    "close",
    "unordered",
    "list",
    "list",
    "item",
    "opened",
    "closed",
    "maybe",
    "want",
    "add",
    "eggs",
    "milk",
    "cheese",
    "see",
    "created",
    "list",
    "grocery",
    "items",
    "save",
    "go",
    "back",
    "reload",
    "see",
    "get",
    "list",
    "eggs",
    "milk",
    "cheese",
    "next",
    "also",
    "add",
    "links",
    "page",
    "wanted",
    "could",
    "add",
    "link",
    "using",
    "tag",
    "inside",
    "say",
    "add",
    "grocery",
    "item",
    "save",
    "go",
    "back",
    "reload",
    "see",
    "link",
    "actually",
    "show",
    "link",
    "need",
    "give",
    "tag",
    "attribute",
    "attribute",
    "simply",
    "additional",
    "text",
    "use",
    "add",
    "tag",
    "give",
    "functionality",
    "going",
    "say",
    "href",
    "equals",
    "going",
    "provide",
    "link",
    "gon",
    "na",
    "put",
    "link",
    "google",
    "right",
    "save",
    "go",
    "back",
    "reload",
    "see",
    "actually",
    "looks",
    "like",
    "link",
    "ton",
    "attributes",
    "add",
    "go",
    "shortly",
    "next",
    "let",
    "move",
    "images",
    "add",
    "image",
    "page",
    "say",
    "image",
    "source",
    "see",
    "also",
    "using",
    "attribute",
    "image",
    "tag",
    "unique",
    "thing",
    "image",
    "tag",
    "require",
    "closing",
    "tag",
    "may",
    "find",
    "inside",
    "html",
    "elements",
    "require",
    "closed",
    "simply",
    "closes",
    "inside",
    "source",
    "need",
    "actually",
    "provide",
    "source",
    "image",
    "let",
    "find",
    "image",
    "images",
    "google",
    "let",
    "say",
    "funny",
    "dog",
    "guy",
    "looks",
    "good",
    "okay",
    "want",
    "open",
    "image",
    "new",
    "tab",
    "kind",
    "weird",
    "image",
    "let",
    "take",
    "look",
    "guy",
    "open",
    "image",
    "new",
    "tab",
    "yeah",
    "see",
    "dot",
    "jpg",
    "extension",
    "gon",
    "na",
    "copy",
    "put",
    "right",
    "let",
    "zoom",
    "little",
    "bit",
    "go",
    "back",
    "reload",
    "page",
    "see",
    "picture",
    "dog",
    "went",
    "headings",
    "paragraphs",
    "lists",
    "links",
    "images",
    "three",
    "elements",
    "want",
    "cover",
    "one",
    "table",
    "element",
    "sometimes",
    "see",
    "things",
    "inside",
    "table",
    "webpage",
    "saying",
    "table",
    "inside",
    "table",
    "rows",
    "say",
    "table",
    "row",
    "instead",
    "row",
    "table",
    "data",
    "say",
    "data",
    "copy",
    "paste",
    "like",
    "okay",
    "save",
    "go",
    "back",
    "reload",
    "see",
    "table",
    "data",
    "actually",
    "add",
    "border",
    "table",
    "reload",
    "see",
    "border",
    "around",
    "table",
    "could",
    "possibly",
    "another",
    "table",
    "data",
    "item",
    "let",
    "change",
    "text",
    "little",
    "bit",
    "data",
    "ten",
    "really",
    "change",
    "much",
    "oh",
    "well",
    "okay",
    "save",
    "reload",
    "see",
    "table",
    "data",
    "right",
    "two",
    "columns",
    "three",
    "rows",
    "basics",
    "table",
    "element",
    "sometimes",
    "want",
    "use",
    "table",
    "nice",
    "layout",
    "data",
    "next",
    "want",
    "talk",
    "div",
    "element",
    "div",
    "element",
    "element",
    "use",
    "anything",
    "create",
    "box",
    "could",
    "create",
    "circle",
    "wanted",
    "simply",
    "used",
    "kind",
    "container",
    "say",
    "div",
    "inside",
    "add",
    "text",
    "save",
    "reload",
    "really",
    "look",
    "like",
    "much",
    "added",
    "styles",
    "added",
    "attributes",
    "div",
    "div",
    "elements",
    "maybe",
    "float",
    "left",
    "float",
    "right",
    "kind",
    "wanted",
    "point",
    "go",
    "detail",
    "start",
    "learning",
    "css",
    "shortly",
    "know",
    "divs",
    "elements",
    "simply",
    "container",
    "wrap",
    "anything",
    "next",
    "form",
    "element",
    "form",
    "attributes",
    "add",
    "action",
    "want",
    "post",
    "say",
    "want",
    "form",
    "post",
    "post",
    "method",
    "whether",
    "post",
    "get",
    "think",
    "scope",
    "get",
    "post",
    "might",
    "little",
    "bit",
    "beyond",
    "video",
    "say",
    "get",
    "request",
    "inside",
    "form",
    "multiple",
    "input",
    "elements",
    "input",
    "text",
    "say",
    "want",
    "name",
    "name",
    "place",
    "holder",
    "name",
    "let",
    "go",
    "ahead",
    "add",
    "button",
    "save",
    "go",
    "back",
    "reload",
    "see",
    "new",
    "form",
    "home",
    "forgot",
    "add",
    "something",
    "actually",
    "extra",
    "bracket",
    "let",
    "go",
    "ahead",
    "comment",
    "list",
    "image",
    "okay",
    "reload",
    "see",
    "form",
    "right",
    "say",
    "hello",
    "click",
    "submit",
    "see",
    "get",
    "request",
    "actually",
    "passes",
    "name",
    "typed",
    "see",
    "changes",
    "right",
    "use",
    "data",
    "learn",
    "programming",
    "language",
    "capture",
    "data",
    "user",
    "posted",
    "whatever",
    "want",
    "data",
    "okay",
    "basics",
    "html",
    "html",
    "learning",
    "tags",
    "use",
    "webpage",
    "let",
    "go",
    "brief",
    "summary",
    "learned",
    "learned",
    "heading",
    "tags",
    "h1",
    "h6",
    "give",
    "us",
    "large",
    "heading",
    "text",
    "also",
    "learned",
    "paragraph",
    "tags",
    "add",
    "paragraph",
    "page",
    "learned",
    "lists",
    "list",
    "added",
    "grocery",
    "list",
    "eggs",
    "milk",
    "cheese",
    "also",
    "learned",
    "links",
    "links",
    "take",
    "one",
    "page",
    "another",
    "images",
    "html",
    "images",
    "display",
    "image",
    "page",
    "tables",
    "explained",
    "talked",
    "divs",
    "containers",
    "store",
    "anything",
    "also",
    "form",
    "elements",
    "oh",
    "looks",
    "like",
    "actually",
    "closing",
    "div",
    "would",
    "improper",
    "html",
    "would",
    "need",
    "actually",
    "close",
    "form",
    "tag",
    "multiple",
    "input",
    "types",
    "learn",
    "use",
    "type",
    "text",
    "type",
    "checkbox",
    "also",
    "dropdowns",
    "use",
    "well",
    "wanted",
    "cover",
    "basics",
    "html",
    "next",
    "let",
    "move",
    "learning",
    "css",
    "ok",
    "let",
    "learn",
    "little",
    "bit",
    "css",
    "going",
    "create",
    "new",
    "folder",
    "desktop",
    "call",
    "css",
    "open",
    "editor",
    "create",
    "new",
    "file",
    "called",
    "going",
    "give",
    "us",
    "basic",
    "html",
    "structure",
    "add",
    "paragraph",
    "body",
    "tag",
    "going",
    "say",
    "css",
    "awesome",
    "okay",
    "three",
    "ways",
    "add",
    "css",
    "html",
    "page",
    "first",
    "way",
    "add",
    "inline",
    "style",
    "actually",
    "adding",
    "attribute",
    "called",
    "style",
    "say",
    "want",
    "style",
    "property",
    "color",
    "want",
    "colored",
    "value",
    "say",
    "blue",
    "case",
    "save",
    "go",
    "ahead",
    "open",
    "see",
    "text",
    "indeed",
    "blue",
    "one",
    "way",
    "include",
    "style",
    "inside",
    "page",
    "let",
    "say",
    "duplicated",
    "made",
    "change",
    "color",
    "said",
    "white",
    "want",
    "background",
    "blue",
    "save",
    "go",
    "back",
    "reload",
    "see",
    "background",
    "blue",
    "text",
    "white",
    "wanted",
    "paragraphs",
    "look",
    "would",
    "copy",
    "styles",
    "paste",
    "instead",
    "simpler",
    "way",
    "add",
    "styles",
    "elements",
    "applied",
    "every",
    "single",
    "element",
    "inline",
    "styles",
    "also",
    "add",
    "internal",
    "styles",
    "would",
    "adding",
    "style",
    "tag",
    "head",
    "document",
    "say",
    "paragraphs",
    "bp",
    "tag",
    "open",
    "curly",
    "brace",
    "closing",
    "curly",
    "brace",
    "inside",
    "add",
    "properties",
    "values",
    "pasted",
    "remove",
    "inline",
    "styles",
    "save",
    "go",
    "back",
    "reload",
    "see",
    "style",
    "gets",
    "applied",
    "paragraphs",
    "change",
    "background",
    "green",
    "reload",
    "see",
    "style",
    "gets",
    "applied",
    "well",
    "two",
    "ways",
    "include",
    "css",
    "page",
    "inline",
    "internal",
    "last",
    "way",
    "common",
    "include",
    "external",
    "style",
    "sheet",
    "adding",
    "link",
    "tag",
    "head",
    "rel",
    "equal",
    "style",
    "sheet",
    "href",
    "going",
    "place",
    "store",
    "location",
    "css",
    "file",
    "going",
    "say",
    "want",
    "css",
    "file",
    "directory",
    "want",
    "call",
    "let",
    "create",
    "file",
    "okay",
    "style",
    "css",
    "includes",
    "style",
    "dot",
    "css",
    "say",
    "want",
    "paragraphs",
    "color",
    "white",
    "background",
    "let",
    "change",
    "red",
    "let",
    "reload",
    "see",
    "gets",
    "applied",
    "well",
    "three",
    "ways",
    "include",
    "css",
    "html",
    "inline",
    "internal",
    "external",
    "know",
    "include",
    "css",
    "page",
    "let",
    "learn",
    "little",
    "bit",
    "different",
    "styles",
    "add",
    "page",
    "html",
    "structure",
    "page",
    "css",
    "styles",
    "get",
    "applied",
    "structure",
    "page",
    "instead",
    "style",
    "css",
    "paragraph",
    "tag",
    "color",
    "white",
    "background",
    "red",
    "color",
    "referred",
    "property",
    "white",
    "called",
    "value",
    "every",
    "single",
    "property",
    "specific",
    "value",
    "css",
    "really",
    "learning",
    "different",
    "properties",
    "values",
    "associated",
    "make",
    "html",
    "page",
    "look",
    "really",
    "nice",
    "let",
    "play",
    "around",
    "properties",
    "going",
    "say",
    "want",
    "font",
    "size",
    "hundred",
    "pixels",
    "let",
    "save",
    "reload",
    "see",
    "font",
    "size",
    "really",
    "large",
    "next",
    "say",
    "font",
    "style",
    "maybe",
    "want",
    "italic",
    "save",
    "reload",
    "see",
    "italic",
    "ton",
    "different",
    "font",
    "properties",
    "background",
    "properties",
    "color",
    "properties",
    "use",
    "inside",
    "css",
    "going",
    "cover",
    "basics",
    "go",
    "learn",
    "every",
    "single",
    "property",
    "value",
    "place",
    "usually",
    "recommend",
    "people",
    "w3",
    "schools",
    "go",
    "w3",
    "schools",
    "comm",
    "click",
    "learn",
    "html",
    "learn",
    "css",
    "also",
    "learn",
    "javascript",
    "go",
    "learn",
    "css",
    "find",
    "properties",
    "associated",
    "values",
    "let",
    "jump",
    "back",
    "project",
    "little",
    "bit",
    "fun",
    "going",
    "create",
    "new",
    "div",
    "going",
    "add",
    "text",
    "inside",
    "inside",
    "style",
    "going",
    "say",
    "every",
    "single",
    "div",
    "element",
    "want",
    "property",
    "width",
    "100",
    "pixels",
    "height",
    "100",
    "pixels",
    "let",
    "give",
    "green",
    "background",
    "let",
    "save",
    "go",
    "back",
    "reload",
    "see",
    "box",
    "right",
    "let",
    "take",
    "font",
    "size",
    "away",
    "really",
    "big",
    "okay",
    "see",
    "box",
    "right",
    "front",
    "us",
    "applied",
    "styles",
    "div",
    "one",
    "thing",
    "want",
    "tell",
    "identifier",
    "zand",
    "classes",
    "ids",
    "classes",
    "add",
    "id",
    "div",
    "way",
    "reference",
    "specific",
    "div",
    "see",
    "create",
    "another",
    "div",
    "right",
    "styles",
    "going",
    "applied",
    "div",
    "well",
    "specify",
    "unique",
    "identifier",
    "say",
    "id",
    "equals",
    "box",
    "right",
    "want",
    "change",
    "hash",
    "reference",
    "id",
    "going",
    "say",
    "box",
    "want",
    "apply",
    "styles",
    "id",
    "web",
    "box",
    "go",
    "back",
    "reload",
    "see",
    "styles",
    "got",
    "applied",
    "specific",
    "div",
    "let",
    "say",
    "instance",
    "wanted",
    "multiple",
    "divs",
    "would",
    "use",
    "id",
    "box",
    "id",
    "unique",
    "document",
    "never",
    "identifiers",
    "one",
    "document",
    "instead",
    "case",
    "would",
    "use",
    "called",
    "class",
    "class",
    "instead",
    "using",
    "hash",
    "sign",
    "actually",
    "use",
    "dot",
    "symbol",
    "use",
    "reload",
    "see",
    "style",
    "gets",
    "applied",
    "div",
    "class",
    "box",
    "also",
    "see",
    "right",
    "top",
    "let",
    "add",
    "little",
    "bit",
    "spacing",
    "add",
    "margin",
    "say",
    "10",
    "pixels",
    "see",
    "spacing",
    "around",
    "box",
    "also",
    "add",
    "padding",
    "padding",
    "add",
    "spacing",
    "inside",
    "box",
    "see",
    "padding",
    "inside",
    "margin",
    "spacing",
    "outside",
    "could",
    "also",
    "apply",
    "property",
    "called",
    "border",
    "maybe",
    "want",
    "give",
    "border",
    "two",
    "pixels",
    "want",
    "solid",
    "want",
    "color",
    "red",
    "let",
    "reload",
    "see",
    "border",
    "around",
    "boxes",
    "properties",
    "want",
    "cover",
    "also",
    "want",
    "cover",
    "flow",
    "property",
    "maybe",
    "want",
    "boxes",
    "instead",
    "vertically",
    "stacked",
    "maybe",
    "want",
    "laid",
    "horizontally",
    "add",
    "float",
    "left",
    "floating",
    "left",
    "horizontally",
    "aligned",
    "opposed",
    "vertically",
    "aligned",
    "next",
    "want",
    "talk",
    "property",
    "called",
    "position",
    "default",
    "elements",
    "position",
    "relative",
    "means",
    "wherever",
    "inside",
    "html",
    "document",
    "displayed",
    "position",
    "relative",
    "looks",
    "exactly",
    "another",
    "one",
    "called",
    "position",
    "absolute",
    "saying",
    "want",
    "element",
    "positioned",
    "typically",
    "tell",
    "say",
    "want",
    "position",
    "absolute",
    "want",
    "positioned",
    "top",
    "zero",
    "pixels",
    "left",
    "zero",
    "pixels",
    "save",
    "reload",
    "see",
    "actually",
    "gets",
    "positioned",
    "see",
    "little",
    "bit",
    "spacing",
    "top",
    "left",
    "margin",
    "let",
    "set",
    "back",
    "relative",
    "completely",
    "remove",
    "properties",
    "basics",
    "css",
    "like",
    "said",
    "would",
    "recommend",
    "going",
    "w3",
    "schools",
    "learning",
    "properties",
    "values",
    "apply",
    "html",
    "make",
    "look",
    "lot",
    "nicer",
    "would",
    "also",
    "recommend",
    "maybe",
    "checking",
    "website",
    "seeing",
    "things",
    "laid",
    "maybe",
    "even",
    "try",
    "copying",
    "try",
    "replicating",
    "key",
    "mastering",
    "skill",
    "going",
    "practice",
    "go",
    "going",
    "want",
    "practice",
    "practice",
    "going",
    "get",
    "better",
    "better",
    "websites",
    "going",
    "look",
    "nicer",
    "nicer",
    "well",
    "okay",
    "html",
    "css",
    "let",
    "learn",
    "bit",
    "javascript",
    "okay",
    "let",
    "learn",
    "add",
    "interactivity",
    "pages",
    "learning",
    "javascript",
    "going",
    "create",
    "another",
    "new",
    "folder",
    "desktop",
    "called",
    "javascript",
    "move",
    "editor",
    "going",
    "create",
    "another",
    "file",
    "called",
    "basic",
    "html",
    "structure",
    "okay",
    "also",
    "going",
    "add",
    "another",
    "div",
    "give",
    "id",
    "box",
    "two",
    "ways",
    "add",
    "javascript",
    "page",
    "similar",
    "css",
    "add",
    "javascript",
    "internal",
    "add",
    "script",
    "tags",
    "right",
    "something",
    "called",
    "console",
    "log",
    "hello",
    "console",
    "log",
    "actually",
    "print",
    "message",
    "inside",
    "developer",
    "tools",
    "let",
    "show",
    "developer",
    "tools",
    "looks",
    "like",
    "open",
    "page",
    "see",
    "anything",
    "page",
    "open",
    "developer",
    "tools",
    "command",
    "shift",
    "go",
    "go",
    "tools",
    "say",
    "developer",
    "tools",
    "want",
    "go",
    "console",
    "see",
    "message",
    "printed",
    "right",
    "called",
    "hello",
    "one",
    "way",
    "include",
    "javascript",
    "inside",
    "html",
    "file",
    "also",
    "include",
    "external",
    "script",
    "similar",
    "css",
    "say",
    "script",
    "want",
    "source",
    "load",
    "script",
    "j",
    "current",
    "directory",
    "need",
    "create",
    "file",
    "script",
    "j",
    "say",
    "javascript",
    "rad",
    "save",
    "going",
    "back",
    "reload",
    "see",
    "get",
    "output",
    "javascript",
    "rad",
    "using",
    "easily",
    "output",
    "content",
    "console",
    "help",
    "us",
    "debug",
    "app",
    "maybe",
    "even",
    "get",
    "contents",
    "certain",
    "variables",
    "said",
    "variables",
    "something",
    "talk",
    "first",
    "create",
    "variable",
    "store",
    "type",
    "value",
    "variable",
    "essentially",
    "container",
    "store",
    "number",
    "store",
    "value",
    "10",
    "inside",
    "number",
    "could",
    "also",
    "store",
    "string",
    "could",
    "also",
    "store",
    "boolean",
    "value",
    "could",
    "say",
    "rad",
    "equals",
    "true",
    "let",
    "say",
    "want",
    "add",
    "string",
    "right",
    "actually",
    "displayed",
    "page",
    "see",
    "page",
    "much",
    "let",
    "say",
    "want",
    "store",
    "hello",
    "inside",
    "id",
    "box",
    "calling",
    "document",
    "want",
    "get",
    "document",
    "want",
    "get",
    "element",
    "id",
    "id",
    "box",
    "want",
    "set",
    "inner",
    "html",
    "equal",
    "string",
    "save",
    "reload",
    "see",
    "actually",
    "gets",
    "added",
    "div",
    "see",
    "right",
    "inside",
    "id",
    "box",
    "text",
    "hello",
    "add",
    "text",
    "could",
    "also",
    "add",
    "number",
    "instead",
    "could",
    "also",
    "arithmetic",
    "maybe",
    "wanted",
    "add",
    "5",
    "number",
    "could",
    "save",
    "reload",
    "get",
    "value",
    "15",
    "kinds",
    "math",
    "arithmetic",
    "comparison",
    "operators",
    "inside",
    "javascript",
    "additionally",
    "run",
    "conditionals",
    "javascript",
    "say",
    "condition",
    "met",
    "want",
    "scenario",
    "otherwise",
    "want",
    "scenario",
    "b",
    "let",
    "go",
    "ahead",
    "create",
    "statement",
    "say",
    "number",
    "equal",
    "10",
    "want",
    "yeah",
    "buddy",
    "let",
    "say",
    "else",
    "nope",
    "okay",
    "save",
    "go",
    "back",
    "reload",
    "go",
    "console",
    "see",
    "get",
    "output",
    "yeah",
    "buddy",
    "set",
    "value",
    "let",
    "say",
    "5",
    "reload",
    "see",
    "get",
    "value",
    "nope",
    "cool",
    "thing",
    "javascript",
    "actually",
    "run",
    "javascript",
    "right",
    "inside",
    "browser",
    "could",
    "create",
    "new",
    "variable",
    "call",
    "age",
    "equals",
    "21",
    "say",
    "age",
    "greater",
    "equal",
    "21",
    "live",
    "see",
    "got",
    "output",
    "lot",
    "programming",
    "javascript",
    "right",
    "directly",
    "inside",
    "console",
    "next",
    "let",
    "talk",
    "loops",
    "every",
    "good",
    "application",
    "loops",
    "loop",
    "essentially",
    "runs",
    "certain",
    "piece",
    "code",
    "certain",
    "amount",
    "times",
    "let",
    "create",
    "first",
    "loop",
    "going",
    "create",
    "loop",
    "going",
    "say",
    "var",
    "equal",
    "0",
    "condition",
    "want",
    "meet",
    "keep",
    "running",
    "loop",
    "want",
    "less",
    "10",
    "time",
    "run",
    "loop",
    "want",
    "increment",
    "1",
    "let",
    "go",
    "ahead",
    "value",
    "save",
    "go",
    "back",
    "reload",
    "see",
    "get",
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "use",
    "loops",
    "loop",
    "functionality",
    "application",
    "loop",
    "arrays",
    "objects",
    "since",
    "talking",
    "arrays",
    "let",
    "go",
    "ahead",
    "show",
    "would",
    "work",
    "let",
    "create",
    "new",
    "array",
    "called",
    "groceries",
    "array",
    "use",
    "bracket",
    "notation",
    "inside",
    "maybe",
    "want",
    "store",
    "value",
    "milk",
    "say",
    "eggs",
    "cheese",
    "okay",
    "maybe",
    "want",
    "loop",
    "grocery",
    "items",
    "display",
    "screen",
    "saying",
    "bar",
    "equal",
    "0",
    "instead",
    "less",
    "10",
    "actually",
    "want",
    "less",
    "say",
    "groceries",
    "dot",
    "length",
    "total",
    "length",
    "array",
    "case",
    "going",
    "3",
    "want",
    "print",
    "groceries",
    "want",
    "print",
    "location",
    "first",
    "time",
    "going",
    "print",
    "0",
    "1",
    "2",
    "save",
    "go",
    "back",
    "reload",
    "see",
    "get",
    "items",
    "displayed",
    "screen",
    "ok",
    "next",
    "let",
    "talk",
    "functions",
    "function",
    "think",
    "like",
    "machine",
    "like",
    "put",
    "something",
    "usually",
    "get",
    "something",
    "press",
    "button",
    "start",
    "machine",
    "something",
    "comes",
    "case",
    "going",
    "create",
    "function",
    "call",
    "list",
    "groceries",
    "instead",
    "going",
    "add",
    "loop",
    "add",
    "click",
    "save",
    "come",
    "back",
    "reload",
    "gon",
    "na",
    "see",
    "get",
    "output",
    "even",
    "though",
    "function",
    "actually",
    "calling",
    "need",
    "call",
    "function",
    "going",
    "say",
    "list",
    "groceries",
    "save",
    "reload",
    "get",
    "output",
    "called",
    "function",
    "functions",
    "make",
    "useful",
    "create",
    "functionality",
    "going",
    "use",
    "simply",
    "call",
    "function",
    "use",
    "multiple",
    "times",
    "throughout",
    "application",
    "ok",
    "wrapping",
    "video",
    "one",
    "last",
    "thing",
    "want",
    "talk",
    "event",
    "listeners",
    "let",
    "say",
    "anytime",
    "click",
    "box",
    "right",
    "going",
    "add",
    "text",
    "want",
    "maybe",
    "alert",
    "user",
    "something",
    "add",
    "event",
    "listener",
    "say",
    "document",
    "dot",
    "get",
    "element",
    "id",
    "want",
    "get",
    "box",
    "want",
    "add",
    "event",
    "listener",
    "want",
    "say",
    "element",
    "clicked",
    "want",
    "run",
    "specific",
    "function",
    "let",
    "alert",
    "user",
    "got",
    "clicked",
    "let",
    "save",
    "go",
    "back",
    "reload",
    "let",
    "click",
    "box",
    "see",
    "get",
    "alert",
    "right",
    "use",
    "event",
    "listeners",
    "throughout",
    "application",
    "create",
    "functionality",
    "users",
    "click",
    "users",
    "hover",
    "whenever",
    "kind",
    "functionality",
    "happens",
    "application",
    "using",
    "event",
    "listeners",
    "quite",
    "bit",
    "basic",
    "overview",
    "javascript",
    "learned",
    "html",
    "css",
    "javascript",
    "really",
    "short",
    "amount",
    "time",
    "like",
    "said",
    "probably",
    "want",
    "go",
    "w3schools",
    "want",
    "go",
    "tutorials",
    "learn",
    "inside",
    "html",
    "different",
    "elements",
    "use",
    "css",
    "want",
    "learn",
    "properties",
    "values",
    "javascript",
    "want",
    "learn",
    "different",
    "types",
    "variables",
    "create",
    "different",
    "functions",
    "create",
    "like",
    "said",
    "practice",
    "practice",
    "practice",
    "practice",
    "really",
    "going",
    "hone",
    "skills",
    "get",
    "much",
    "better",
    "craft",
    "really",
    "hope",
    "video",
    "helped",
    "questions",
    "please",
    "feel",
    "free",
    "ask",
    "comment",
    "section",
    "happy",
    "coding",
    "hope",
    "continue",
    "learn",
    "web",
    "development",
    "going",
    "show",
    "valuable",
    "area",
    "career",
    "hey",
    "thanks",
    "watching",
    "video",
    "want",
    "learn",
    "create",
    "software",
    "learned",
    "web",
    "design",
    "learned",
    "little",
    "bit",
    "php",
    "laravel",
    "tutorials",
    "languages",
    "want",
    "head",
    "sass",
    "adventure",
    "ohio",
    "sign",
    "21",
    "day",
    "program",
    "learn",
    "create",
    "software",
    "actually",
    "lot",
    "fun",
    "day",
    "complete",
    "get",
    "new",
    "badge",
    "inside",
    "user",
    "area",
    "learn",
    "kinds",
    "cool",
    "technology",
    "make",
    "sure",
    "head",
    "sass",
    "adventure",
    "dot",
    "io",
    "start",
    "creating",
    "software",
    "service"
  ],
  "keywords": [
    "video",
    "learning",
    "html",
    "css",
    "javascript",
    "amount",
    "time",
    "web",
    "going",
    "really",
    "show",
    "learn",
    "basics",
    "also",
    "want",
    "let",
    "know",
    "called",
    "sass",
    "adventure",
    "create",
    "every",
    "use",
    "way",
    "make",
    "start",
    "code",
    "need",
    "text",
    "editor",
    "google",
    "kind",
    "see",
    "one",
    "go",
    "click",
    "using",
    "ahead",
    "new",
    "okay",
    "file",
    "name",
    "dot",
    "inside",
    "simply",
    "something",
    "hello",
    "save",
    "open",
    "gets",
    "get",
    "first",
    "page",
    "displayed",
    "give",
    "document",
    "tag",
    "close",
    "add",
    "head",
    "like",
    "paragraph",
    "say",
    "back",
    "look",
    "developer",
    "tools",
    "elements",
    "actually",
    "tags",
    "reload",
    "different",
    "multiple",
    "paragraphs",
    "list",
    "maybe",
    "groceries",
    "next",
    "wanted",
    "could",
    "link",
    "functionality",
    "right",
    "looks",
    "images",
    "image",
    "little",
    "bit",
    "cover",
    "table",
    "element",
    "instead",
    "data",
    "border",
    "another",
    "change",
    "well",
    "talk",
    "div",
    "box",
    "styles",
    "left",
    "form",
    "post",
    "learned",
    "store",
    "would",
    "call",
    "inline",
    "style",
    "property",
    "color",
    "value",
    "include",
    "said",
    "white",
    "background",
    "applied",
    "properties",
    "values",
    "equal",
    "font",
    "pixels",
    "id",
    "spacing",
    "10",
    "position",
    "practice",
    "script",
    "console",
    "output",
    "number",
    "application",
    "loop",
    "function",
    "event"
  ]
}