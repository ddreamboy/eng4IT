{
  "text": "hey guys this is hmon from Eda today's\nsession is going to be on machine\nlearning algorithms so without any\nfurther Ado let's move on to the agenda\nto understand what all be covered in\ntoday's session so we'll be following a\ntop- down approach we'll start from the\nbasics and understand what is an\nalgorithm and how it can be used in\nmachine learning after that we'll\nunderstand what is machine learning\nexactly and how a problem can be solved\nusing machine learning after that we'll\nbe discussing various techniques using\nwhich a machine can learn and after that\nwe'll also be discussing some of the\nbasic algorithms which are used in\nmachine learning towards the end we'll\nbe doing a demonstration wherein we'll\nsee how we can prepare a data set for\nthe creation and validation of a model\nand after that we'll be creating a model\nusing one of the algorithms that we'll\nbe learning today all right so guys this\nis our agenda for today are we clear\nwith it okay I'm getting confirmation so\ncurrent is clear so is surage Matthew\nall right guys since most of you are\nclear let's move on to the first topic\nof today's discussion that is what is an\nalgorithm so let's start this topic with\na very generic approach so if you were\nto interact with the computer and tell\nit how it should execute a particular\ntask the way you do it is using a\nprogram right so what is a program a\nprogram is basically logic which is\nwrapped around a syntax a particular\nsyntax which is specific to a\nprogramming language now this\nprogramming language could be anything\nit could be JavaScript it could be Java\nit could be python it could be C it\ncould be\nC++ whatever right but the basic thing\ndoesn't change that is the logic all\nright the logic Remains the Same in\nevery language having said that what is\nthis logic this logic is what an\nalgorithm is all right so in simple\nwords an algorithm is a stepbystep\nprocedure towards solving a problem in\nthe computer world all right so let's\ntake an example to understand uh this\nthing which we have just discussed all\nright so let's take an example so this\nis a problem or this is an algorithm to\nprint numbers from 1 to 20 all right so\nlet's go step by step and understand\nwhat this algorithm is doing so this is\nthe start position we start over here\nand then we uh see that our algorithm is\ninitializing a variable X to Zero all\nright so we initialized a variable X to\nZero and then we incremented it by one\nafter that we're printing that variable\nand we are checking it whether it's less\nthan 20 so if it's less than 20 if it's\ntrue or if it's yes it goes back and\nincrements the value Again by one\notherwise it's if it's a no it goes on\nand ends the program all right so since\nit's a yes right now it goes back and\nincrements the value by one again so we\nhave printed one and now we have\nincremented the value of x by one again\nso now the value is two and then we\nprint that value so we have now one and\ntwo on the board all right then again it\nchecks whether it's it's less than 20 if\nit's true it goes back again increments\nit by one now it's three prints three so\nthis process goes on until the value of\nx reaches 20 so when the value of x is\n20 it prints that value and it checks\nwhether it's less than 20 which is a no\nand then it ends the program and hence\nyou have values which are printed from 1\nto 20 all right so this is a step by\nstep procedure for printing values\nbetween 1 to 20 and this is in similar\nway you create other algorithms as well\nso as complex an algorithm can be it can\nalways be represented using a flowchart\nall right so guys this is what an\nalgorithm is now our next topic is what\nis machine\nlearning now for making a machine learn\nthere are a lot of ways and there are a\nlot of algorithms right now since no\nproblem is the same every problem so if\nwe take our case all right so we tackled\nevery problem with a different approach\nnow algorithms are nothing but approach\nfor a computer all right now based on\nthe problem you decide which algorithm\nto use right so for now let's understand\nwhat is machine learning so machine\nlearning is basically uh an artificial\nintelligence wherein the machine can\nlearn on its code meaning uh you have\nprogrammed it once but every every time\nit encounters a problem it it should not\nbe programmed again that is the main\nmotive of us right it will not be\nprogrammed again it changes its own code\naccording to the new scenarios it\ndiscovers all right so this is what\nmachine learning is it itself learns\nwhatever has to be learned from it we\nprovide it scenarios we provide it with\npast experiences we feed the values and\nlearning from those past experiences it\ncomes up with new Solutions\nthis topic is actually very interesting\nto learn about because um you might be\nthinking how a machine can actually redo\nits code or how can it update it its\ncode on its own right so sounds\ninteresting right so this is what we'll\nbe doing in the next few sessions that\nwill learn about machine learning so\ntoday's session is going to be a very\nbasic session we'll be seeing how\nmachine learning actually works what is\nthe basis for machine learning all right\nso by the end of the session you'll have\na fair idea of how things basically work\nwith machine learning but for the\nadvanced part of machine learning we\nhave the next sessions lined up so I\ndon't want you guys to miss any of those\nsessions all right okay so moving ahead\nnow so we have learned what machine\nlearning is but like I said there are\ndifferent approaches towards solving a\nproblem right so there are basically\ndifferent ways a machine can learn let's\nsee the different ways a machine can\nlearn basically there are three kinds of\nways so the first way is supervised\nlearning the second way is reinforcement\nlearning and then you have the\nunsupervised learning right so let's\ndiscuss each of these in detail and\nunderstand what these actually are so\nthe first kind of learning is called\nsupervised learning all right so what is\nsupervised learning so supervised if you\nif you concentrate on the word\nsupervised supervised means when you are\nmonitoring someone or when you're\nconstantly monitoring someone or making\nthem understand something so you can\ncompare this scene with a classroom\nscene all right so you sit in a class\nand the teacher explains you difficult\nConcepts right the concepts that cannot\nbe learned on your own that's why a\nteacher is there right so the way we\nteach machines and supervised learning\nis like this so we provide them in a\nwith a particular set of inputs and we\ngive the corresponding answers as well\nfor example if I uh if I say that U what\nare the parameters for deciding whether\nit will drain today or not so the\nhumidity should be above some certain\nlevel temperature should be above some\ncertain level the wind should be in a\ncertain direction and then if these\nscenarios are there it will rain right\nso we give a lot of inputs to the\ncomputer with this data and with each\ndata we assign one it rains and zero it\ndoes not rain so if the temperature is\nhigh and the humidity is high and the\nwind is in a particular direction it\nwill rain so we say one and if the\nhumidity is low and the temperature is\nuh low as well so we say it will not\nrain so I'll give it a certain input\nthat today it's 35Â° Cel the humidity 97%\nthe wind is in this direction will it\nrain today all right so the machine will\nactually see okay so my from my past\nexperiences I saw that okay when this\nwas the temperature and the humidity was\nthis it rained so it'll compare that\naccording to it and it'll come up with\nthe probability and hence come up with\nthe solution on an answer whether it\nwill rain or not right so this is what\nsupervised learning is so basically we\nare providing it with the answer and the\ninputs as well all right so um if you\nwere to discuss it in a more General way\nso you can take your kids as an example\nso like I said your kids go to school\nright so your teacher is explaining\nConcepts to your kid using example so\nyou tell them so if you're trying to\nmake them understand something you're\ngiving them examples as and this is the\nway it happens right and that's what we\ndo as well we in supervised learning we\ngive the machines example so um example\nthat day it rained and the scene was\nlike this the temperature was this the\nhumidity was this and hence it rained\nright so if the inputs are like these\nyou come up with the decision okay it'll\nrain right so this is what supervised\nlearning is uh the our next topic is\nunsupervised learning so basically if\nyou understood what is supervisor\nlearning so okay so first guys any doubt\nin what super supervised learning\nis okay uh Sur says is clear\nothers all right cool so our next topic\nis now unsupervised learning so what is\nunsupervised learning so you can\nunderstand unsupervised learning by\ncomparing it straight away with\nsupervised learning all right so in\nsupervised learning like I said you were\ngiving them answers as well to inputs\nbut in unsupervised learning you don't\ndo that you just give them inputs now\nyou are not giving telling your computer\nwhat will be the answer so what computer\ndoes is or what it if if you think\nlogically the only thing computer can do\nwith the inputs is find a pattern behind\nit or find a structure in it all right\nso this is what the computer actually\ndoes so in unsupervised learning what it\ndoes is you provideed inputs right so\nfor example I want my computer\nto I I give my computer some inputs on\nfruit all right so I don't tell the\ncomputer what the fruit is actually but\nI give other parameters such as how big\nit is or what color it has say what is\nthe taste of that fruit all right so\nwhen I give all these conditions or all\nthese parameters to my computer so it\ngroups the fruits bases on that so\nbasically it'll group it on the basis of\nsize it'll group it B on the basis of\ntaste it'll group it on the basis of\ncolor right and then it shows us that\ndata and then we can actually label so\nokay so if the size is is big and the\ncolor is this you this this fruit will\nbe known as an apple all right now what\nkind of problems are actually there in\nunsupervised learning uh could be when\nwe don't know uh whether there is a\ncorrelation in the data or whether\nthere's a structure in the data for\nexample if you talk about big data right\nso big data is nothing but uh a huge\nchunk of data right so we don't know\nthat that R is random it's not\nstructured all right so whenever we want\nto find a structure in data we use UNS\nviice learning now it's the job of the\nalgorithm to figure out what is if\nthere's a pattern in the data and if at\nall there's a pattern it gives us that\npatter and hence we can decide how we\ncan move ahead all right so if you have\nstructure or if you have if you know how\nthat data can be differentiated how it\ncan be structured then supervised\nlearning can be applied on it but if you\ndon't know what that data structure is\nwe use unsupervised learning all right\nso guys are we clear with what\nsupervised learning is and what\nunsupervised learning\nis okay so if you were to take the same\nexample forward so we talked about your\nkids in the previous example so in the\nprevious example that is supervised\nlearning your kids were learning in\nschool right so your teacher was were\ntelling them examples and were teaching\nthem how what a particular problem is\nand how it can be tackled but UNS\nsupervised learning is when your your\nkids are learning on their own so they\nhave their books right so they're trying\nto figure out what are thing is on their\nown so that is what unsupervised\nlearning is moving on to the third part\nwhich is reinforcement learning so what\nis reinforcement learning so\nreinforcement learning basically is um\nwhen you your computer is trying to take\ndecisions all right so um what kind of\nproblems uh can be include in\nreinforcement learning is uh say when\nyou're when you wanted to teach your\ncomputer how to play chess now you\ncannot tell your computer what to do\nbecause there are a lot of things uh\nthere are like a zillion possibilities\nor a zillion moves that can be done in\nchess so you cannot tell each and every\nmove to your computer but what you can\ntell is whether he did right or wrong\nall right and that is what uh\nreinforcement learning is for another\nexample that you can take is when you're\nare training your dog all right so you\ncannot tell your dog what to do because\nhe will not understand but you can\nactually reward your dog if he does\nright and you can punish him if he does\nwrong right so that same same thing is\nactually applied in reinforcement\nlearning as well so it basically the\ncomputer's aim is to maximize rewards\nright when it does actions so it'll come\nup with a solution which has the maximum\nrewards in place so we Define if it does\na certain action you'll get a reward and\nthen from its past experiences it\nunderstands okay when I did this I got a\nreward so let me do something similar\nI'll get more rewards right and that is\nwhat reinforcement learning is all about\nabout so if you were to take the same\nexample forward uh let's say your kid\nwhen you're parenting your kid um you\ntell him you cannot control what your\nkid does throughout the day right you\ncannot tell him each and everything but\nif he does a bad thing you can actually\nscold him and tell him that what he did\nwas wrong and then he'll understand okay\nI don't have to do this thing because I\nget scoldings when I do this thing all\nright or else you can appreciate your\nkid when he does a good thing right so\nhe'll understand okay I was appreciated\nfor this so maybe this is the behavior\nwhich is expected from me so this is\nwhat reinforcement learning is right uh\nso guys are we clear with what\nsupervised unsupervised and\nreinforcement learning is any doubts in\nany of these three learning techniques\nwhich are there in machine\nlearning okay I've got a question from\nAnita so Anita is asking me can you give\nme one more example for reinforcement\nlearning okay okay so consider this so\nyou have a temperature control system in\nyour at your home right now that\ntemperature control system has to decide\nwhether I should lower the temperature\nor I should increase it all right so\nthis is an application which actually\nuses reinforce learning because it has\nto make a decision now so whenever\nthere's a decision that has to be made\nyou use reinforcement learning now how\nwill it decide whether it will increase\nthe temperature or decrease the\ntemperature it'll decide based on its\npast experiences right so it'll see what\nwhat were the what what is basically the\nuser or how a user responds to a certain\ntemperature all right and then it'll\ncome up with the decision okay so if my\ntemperature is 32 right now maybe I need\nto lower it down maybe I need to lower\nit down to 30 right so this is just an\nexample there are a lot of parameters\nthat are taken place how many people are\nthere in the room and everything but\nthen this is how the algorithm works\nwhen it takes decision based on its past\nexperiences right so if you go by the\ndefinition so rein Forman learning was\nactually inspired by the human behavior\nor the rat behavior when it is there in\nthe Maze right so when a rat is there in\nmaze it has to decide whether it should\nstop it should go left or right all\nright so that is what this algorithm has\nbeen inspired from any more doubts guys\nany more doubts in supervised\nunsupervised and reinforcement\nlearning okay so I've got confirmation\nfrom the most of you since most of you\nare clear let's move on to the next\ntopic we now know what are the different\nways a machine can learn right now let's\ndiscuss how you actually can solve a\nproblem using machine learning all right\nso now a problem comes up to you now how\nwill you decide or how will you start\nwith that problem so let's shed a light\non that so whenever there's a problem\nthat problem can be categorized in five\nways so those five ways are like this is\nthis A or B is this viewed how much or\nhow many many how is this organized and\nwhat should I do next so your problem\ncan would want an answer which which\ncould be is this a or b as in you you\nyou have a problem which is asking uh\nsay you are differentiating between\nfruits is this an apple or is this a\nbanana all right so when you have these\nkind of problems you use classification\nalgorithms the next category is is this\nweird analyze patterns all right so when\nyou have problem where you have to\nanalyze platin wherein you have to find\nan an anomaly or uh an odd one out you\nactually go for anomal detection\nalgorithms all right the next category\nis how much or how many so when you have\nto deal with numbers right so when you\nwant uh some numeric values you want to\nget a certain um value or for example\nwhat should be the minimum number of\nhours that you should put in so that you\nget promotion all right so when you you\nhave these kind of problems so you apply\nregression algorithms onto that then we\nhave how is this organized all right so\nwhen you have these kind of questions\nyou use clustering algorithms because\nbasically you're trying to find out what\nis the structure behind a certain data\nset right so when you're trying to know\nthe structure behind a certain problem\nyou use clustering algorithms and then\nyou have a category which says what\nshould I do next so when a decision has\nto be made then algorithms for\nreinforcement learning are used all\nright so guys any doubts in any of these\nfive categories that we have just\ndiscussed so basically what I'm trying\nto tell you is that each question so any\nkind of problem that you come up with\ncan be categorized under these five\ncategories all right it cannot be Beyond\nthese five categories it will definitely\ncome up in these five categories and\nthen you can relate to a category and\nthen come up with a algorithm so when\nyou have a set number of outputs you use\nclassification algorithms all right so\nit works like that so any doubt in\nwhatever we have discussed so\nfar okay guys since most of you are now\nclear all right so let's move on to the\nnext topic so we have discussed so when\nwe have these kind of problems we come\nup we we can solve this using these\nalgorithms right so let's learn about\nthese algorithms now that is\nclassification and reduction regression\nclustering and reinforcement right so\nlet's shed a light on that so let's\nstart with the algorithms machine\nlearning algorithm so the first\nalgorithm is the classification\nalgorithm so like I said when you have a\nset number of outputs so basically for\nquestions like this so is it cold\noutside today so it's the answer could\nbe either yes or no so you have only two\noutputs the outputs could be either yes\nor the output could be no all right or\nthe next kind of question could be will\nyou go to work today so it's either a\nyes no or maybe right so you will either\ngo for work or you'll not go for work or\nyou maybe you'll say maybe I'll go to\nwork right but there is no other answer\nwhich can come up right so when you have\nthese kind of conditions you come up\nwith you solve it using classification\nalgorithms now when you have two outputs\nas in like for example yes or no it is\ncalled two class classification but when\nyou have more than two choices as in uh\nin our second question we have yes no or\nmaybe right so this is called multiclass\nclassification so whenever there's an\noutput which is set as in it is either\ntrue or false or Z one or yes or no\nwhatever right so if it's fixed you use\nclassification algorithms this is\nbasically the gist that you should get\nout of this any doubts and any doubt in\nwhatever we have discussed okay uh so\nlet's move on to our second algorithm\nnow which is the anomal anomaly\ndetection algorithms so uh in these\nalgorithm you analyze a certain pattern\nand you you get alerted whenever there's\nan anomaly or something which is not\nusual which happens all right for\nexample as you can see in the figure\nthat you have a pattern you have some\nblue men right and then suddenly a red\nkind of person comes up so this\nalgorithm will actually flag that person\nbecause he breaks the pattern he is\nsomething which is not expected right\nand he becomes an anomaly and this is\nwhat anomaly Direction algorithms are\nall about now what is the use case for\nanomaly Direction algorithms could be um\nuh for example in credit card companies\nso in credit card companies each\ntransaction of yours is monitored right\nand whenever there's a transaction which\nis not usual right which doesn't match\nyour uh daily transaction pattern you\nget alerted for it so they they they\nmight confirm with you whether you only\nmade this transaction all right so when\nyou have these kind of problems you use\nanomaly detection algorithms to solve\nthem the third algorithm is regression\nalgorithm so like I said whenever you\nhave to come up with the value right so\nyou use regression algorithms so for\nexample um what will be be the\ntemperature for tomorrow right so\nwhatever value will come out of this\nwill be a number right so let's say I\ncame up with 28Â° C so I got that\ntemperature using some formulas right\nand I came up with that numeric value so\nwhenever I come up with a numeric kind\nof value or whenever my problem demands\nthat I have to get a mathematical value\nI go with regression\nalgorithms so the second example for\nthis could be whenever um I want to give\na discount to my customer now how much\ndiscount should I give that customer so\nthat I get more customers and at the\nsame time I do not go in loss as well\nright I stay in profit so whenever this\nkind of problem comes up I can go on and\nuse a regression algorithm and solve\nthis kind of problem all right uh moving\nahead uh we have clustering algorithms\nso clustering algorithms are basically\nused um so we discussed unsupervised\nlearning remember so in unsupervised\nlearning we have clustering algorithm\nwherein we try to establish a structure\nright so we have some unstructured data\nthat you want to make sense of so what\nwe'll do is we'll pass it through a\nclustering algorithm and if there is a\npattern which a computer can see it\ncomes up with that pattern and shows us\nlike this so for example I feed data to\nmy computer right and my data then\napplies clustering algorithm onto that\nso this is the kind of output that I'll\nget so uh it'll categorize it under\ngroup a Group B and Group C and then I\ncan make a decision whether what what I\ncan what I want to do with this data\nthat I've got all right so this computer\ndoesn't understand anything what this\ndata is all about it doesn't understand\nmaybe it's of cars maybe it's of food\nmaybe it's of uh money right so the\ncomputer doesn't understand but what\ncomputer understands is numbers right\nand that is how it relates it to each\nanother and comes up with groups now\nwhen it comes up with groups maybe you\nyou want to use some other algorithm\nonto it and decide or come up with the\nsolution but this is what a clustering\nalgorithm will give you right having\nsaid that let's move on to the next\nalgorithm now which is reinforcement\nalgorithm right so um we discussed\nreinforcement learning so that is what\nreinforcement algorithms are all about\nwhenever you have to make a decision\nright and so whenever you have to make a\ndecision and your decision is based on\nthe past experiences of your machine or\nwhatever inputs that you have given to\nyour machine you use reinforcement\nlearning now for example whenever you\nyou wanted to train your computer how to\nplay chess it'll use reinforcement\nlearning and when it has learned or when\nyou have created a model for that and\nyour game is actually being played by\nthe computer each decision that the\ncomputer makes is also based or is also\ntaken from reinforcement learning the\nother example like I told you was of a\ntemperature control system wherein your\nsystem had to decide whether it should\nincrease the temperature or it should\ndecrease the temperature right so\nwhenever these kind of problems are\nthere right you use reinforcement\nlearning or reinforcement\nalgorithms okay guys so this brings us\nto the end of machine learning algorithm\nso so we have basically covered the\nbasics which are there we have covered\nthe basics of the algorithms which I\nused in machine learning so now if I\ngive you a problem you should be able to\nidentify which algorithm will fit into\nthis problem right what each algorithm\nis all about how many algorithms are\nthere we'll discuss that in our later\nclass but for now for today you should\nunderstand if I have this problem okay\nso if I have this kind of problem I\nshould apply this algorithm to it how\nwill I apply this algorithm we'll be\ndiscussing that in the later class but\nthis is the idea that you should get\ntoday this is step one if you are\nthrough with step one it it becomes very\neasy because now just about learning\nabout what each algorithm does but this\nis the concept behind machine learning\nthis is the concept that should be set\nin your mind that whenever this kind of\nproblem comes up okay so I have to find\na structure behind this problem okay\nI'll use clustering algorithms okay so I\nhave solutions to this kind of problem\nokay I'll use supervised learning and\nI'll be using algorithms and supervised\nlearning for this right so I have a\nfixed number of outputs for this I'll\nuse classification algorithm for that\nall right so this is the basic\nunderstanding that you should get from\nthis session today all right so enough\nof theory guys so we have now understood\nthe concept behind machine learning now\nlet's see first of all you you guys\nwon't be knowing how the inputs are\nactually given to a system to create a\nmodel right so these inputs are actually\ncalled data sets right so now what we'll\nbe doing is we'll be seeing how we can\nprepare a data set to actually create a\nmodel and then also verifying that model\nwhe whether that model is is predicting\nright or wrong right so let's take a\nsample data set so basically what we'll\nbe doing our machine learning\ndemonstrations in R so I expect you guys\nto download R studio and the r language\nin the next class because the next class\nwill also have a lot of demos for today\nyou can just see how am I doing right\nnow and later you'll have the code in\nyour LMS you can use that code and\nexecute it and like be ready in the next\nclass because in the next class it's\ngoing to be a lot of demo right but\ntoday um our demonstration what we're\ngoing to do is so this is guys the input\nthat you get so these These are the\nvalues this is a data set which is\ncalled empty car it's a sample data set\nin R right so whenever you have to\ncreate a model you basically divide your\ndata set because you have to validate\nthat model at a later stage as well so\nyou divide your data set between the\ntraining part and the testing part so\nthe train part is used to create a model\nand that testing part will be used to\nactually verify that model all right now\nhow you can uh divide the data set is\nwhat I'm going to tell you in a few\nmoments but is this clear to you guys\nwhy are we dividing the data set we are\ndividing the data set because first we\nwill create a model so for creating a\nmodel the computer should be fed some\nvalue right so when it'll be fed some\nvalues it'll make sense out of it and it\nwill come up with a model now this model\ncan be used to predict values right but\nhow will we verify whether it is\npredicting correct values or not so for\nthat we have the testing uh data set so\nwe'll be picking up some values from the\ntesting data set appearing in the values\nand we'll see whether it is producing\nthe correct output or not all right are\nwe clear with our problem statement all\nright guys so let's begin our\ndemonstration then so this is your R\nconsole guys what you'll be doing is\nfirst you'll write this command which\nsays data empty cars so what this\nbasically will do is it'll import the\nsample data set called empty cars all\nright so I've got a variable now which\nis empty cars so let's let me show you\nthis data set so this is how my data is\nlike so basically these are the car\nnames so there are names of the car and\nthen there are some values associated\nwith that car for example this is the\ndisplacement of the car this is the\nweight of the car and based on the\nweight and displacement and the\nhorsepower and the other values you have\nthese two values which is whether it has\na v kind of engine or whether it has a\nstraight engine all right so if hat has\na v engine it'll be a one if it has a\nstraight engine it'll be a zero all\nright so some values might indicate that\nit can have a v engine as well as a\nstraight engine as well but with today\nuh what we are going to do is we are\ngoing to predict basically we'll be\ntaking in two values we'll be taking WT\nthat is the weight of the car and we'll\nbe taking disp that is the displacement\nof the car and then we'll be predicting\nwhether this car will have a v engine or\na straight engine so we'll be creating a\nmodel in the later part that of today's\ndemonstration but for now we have to\ndivide this data set between the\ntraining data set and the testing data\nset so let's see how will we do that so\nuh first of all we have to import a\nlibrary called CA tools all right so\nwe'll import that Library so it is set\nall right so now I will write split I\nwill Define a variable called split and\nthen I write sample do split and now I\nwill enter the data set which is empty\ncars and then I will specify the split\nratio equal to now I want my training\ndata set to be 70% of that data set and\nmy testing data set to be 30% all right\nso I'll specify 7 which specifies 70%\nall right so basically what I'm\nspecifying here is that I want to split\nmy data set empty cars into 7030 ratio\nall right so let's run this command all\nright this command is run all right so\nnow I will run this particular variable\nI will execute this particular task so\nit has now been executed so what\nbasically has now happened is it has\npicked out random values right and for\neach value it has assigned either a true\nor a false right so 70% of the data set\nhas true is true and 30% of data set is\nfalse now we'll be leveraging that and\nwe'll be deciding a training and testing\ndata set based on that so training data\nset\nis equal\nto\nsubset of empty\ncar where split is equal to equal to\ntrue all right so basically what I've\nspecified here is my training dat set\nwill be a subset of Mt cars where the\nsplit is true right so my true is 70% of\nthe data set right remember so now we'll\nbe ex uing\nthis so I've executed it and similarly\nfor testing I'll\nspecify that the split is\nfalse right so I'll write false over\nhere and then I will execute the\nstatement all right so let's check\nwhether we have splitted our data set or\nnot so let's check the testing data set\nso as you can actually see it from here\nthat testing has around 12\nobservations and training has around 20\nobservations now so the data set has\nbeen splitted our Mt cars had 32\nobservations we have split it in 7030\nratio so our training data set has now\n20 observations that are 20 rows and a\ntesting data set has 12 observations all\nright so let me show you my testing data\nset now so as you can see this is my\ntesting data\nset this was the whole data set that is\nthis this is the whole of Mt car and\nthis is the data set that has been\ndivided now so my testing data set is\n30% of this and it has these many values\nall right so now we'll be we have\nsplitted our data set now let's now\ncreate a model all right so the creation\nof the module model is same for each and\nevery algorithm just the command changes\nso let me apply a regression algorithm\nright now it's called logistic\nregression all right so what listic\nregression does is it comes up with a\nvalue right and with that value you\ndecide whether it will be a one or a\nzero so my logistic regression actually\nyou might ask a question to me that um\nokay so this kind of problem we have to\ndecide it should be either one or a zero\nso it's a classification problem true\nguys but behind that classification we\nare actually calculating probabilities\nright so we actually coming up with a\nnumber right so when so if we are coming\nup with the number we use regression\nalgorithms but when you talk about\nlogistic regression logistic regression\nactually comes under the classify\nclassification algorithms as well and\nthe regression algorithms as well all\nright so we'll be applying logistic\nregression and the logistic regression\nwill then give me a probability of as in\nwhen I give him the values WT that is\nthe weight of the car and the\ndisplacement of the car it'll give me a\nprobability whether this car will have a\nVSS engine what is the probability of\nthis car having a VSS engine right so\nthis is the probability that I'll get\nand this is the model that I'll be\ncreating right now so let me clear clear\nmy console all right so for creating a\nmodel you have to type command which is\nlike this so you'll type in\nmodel all right and for logistic\nregression the command is\nglm and then you'll be giving the\nformula so the formula is we have to\npredict VSS right we have to predict\nwhat is the value of VSS will it be a\none or a zero so we'll say vs tilt This\nMeans versus WT plus\nDP all right so I want to take into\naccount the weight of the car and the\ndisplacement of the car and I want to\npredict when the weight of the car is WT\nand the displacement of the car is disp\nwhat will be the value of vs this is the\nformula that I want my model to predict\nall right now uh now I'll be specifying\nwhich data set this model has to be\napplied on so since I have splitted my\ndata set so I want it to be applied on\ntraining and then I have to specify the\nfamily of the model so basically it's a\none or a zero right the values the\nanswer that the vs value is in one or\nzero right so the family is binomial so\nthis is what you'll be specifying right\nso let's execute this particular\nstatement now we click on run all right\nso my model has now been created let's\nso let me show you the summary of the\nmodel\nnow all right so as you can\nsee uh I have came up with a model and\nit has given me some coefficient values\nwhich has been calculated now what are\nthese coefficient values don't right now\nI'll be explaining this in the next\nclass but for now what you have to\nunderstand is what I'm trying to make\nyou guys understand is that we are\ncoming up with numbers all right so we\nare not doing any clustering we're not\ndoing any decision making we're coming\nup with numbers and that is the reason\nwe use regression algorithm now further\nas you will see in the next step I will\nbe predicting a value which will be the\nprobability of the car having a vs\nengine all right and then I will teach\nyou how you can actually classify that\nproblem as a one or zero all right so\nhang on so now what we'll be doing is we\nhave a model right and this is our\ntesting data set so as you can see these\nare the values that we are going to\npredict right now so uh what we'll be\ndoing now is we will actually be feeding\nthe WT and the ISP of this testing data\nset and mind you guys our model has been\ncreated from the testing data set all\nright so from the training data set so\nwe have not so our model has not\nencountered the testing data set as of\nnow so these are basically like real\nvalues to our model right so now we'll\nbe predicting so let's take an example\ncar here so let's take Ford Penta L and\npredict whether this car will have a vs\nengine or a straight engine all right so\nlet's feed in the values for that so\nwe'll be creating a data frame first so\nwe'll be feeding our values in the data\nvariable\nda.\nframe and\nthen we the WT value is so for Ford pan\nL the WT value is\n3.17 so let's feed in\nthat 170 and the disp value\nis 351 so let's feed in that as well so\nwe have fed the values\nnow let's predict it so we'll be\npredicting our answer in this\nvariable so the command for predicting\nis predict model that is the model that\nwe have to predict from the data the\ndata which has the values and type of\nanswer that is response so I want a\nresponse now what I'll be getting from\nthis is a probability right the\nprobability of this car having a vssn\nnow if the probability is less than 0.5\nthat means that the probability is uh\nthat that means that it will not have a\nVSS engine the odds of it having a vs\nengine becomes very less and hence we\nwill consider it as a false but if it is\ngreater than 0.5 that means the odds of\nhaving that of the car having vs engine\nbecomes more right so we will consider\nthat that car will have a vs engine if\nits value if its probability value is\ngreater than 0.5 so having said that\nlet's execute the statement and then\nlet's print the answer for Penta L we\npredicted that the VSS probability the\nprobability of that car having vs engine\nis\n0.7 let's compare whether our Ford Penta\nL has a vs engine so as you can see\nthere is zero over here that means that\nFord doesn't have a vs engine so if it\ndoesn't have a vs engine it has a\nstraight engine and we have predicted it\nright our value is correct having said\nthat let's predict one more value for a\ncar which has a VS kind of engine so\nlet's pick a car from here let's take\nthis car which is Toyota Corona all\nright so let's feed in values for Toyota\nCorona so for Toyota Corona uh our\ndisplacement is\n120.1 so let us read that\n120.1 and my my weight is 2.46 5 so\nlet's feed in that as\nwell let's predict the value\nnow so as you can see the probability of\nCorona having a vs engine is 77 all\nright so it has a 77% probability of it\nhaving a vs engine let's check whether\nit has a vs engine so yes it has a vs\nengine and hence our model predicted the\nright value all right guys so we created\na model which can predict values now so\nyou can feed in any displacement and any\nweight and this model will tell you\nwhether that car should have a vs engine\nor a straight engine right so this\nbrings us to the end of our session guys\nso before that do you have any doubts in\nthe demo that we did right now any\ndoubts and I'll explain it right away\nall right so Anita has a question she's\nasking me uh she understands this is is\na regression algorithm but why is it a\nclassification algorithm also okay so\nanother as I told you that regression\nalgorithms uh basically compute values\nall right you are calculating\nprobability here but based on this\nprobability you are actually classifying\nokay let me show you how this will\nhappen uh just wait a\nsecond okay so let me type in this for\nyou so if you type in this command and\nyou specify that if it's greater than\n05 specify it as true all right so I\njust specified greater than 0.5 and then\nlet's check what will be our answer\nright now so it says true so now you\nhave specified that for this value which\nwas 77% if it's greater than 0.5 as it's\ntrue so basically you are now\nclassifying that um this car that Toyota\nCorona will have a vs engine all right\nnow if you were to do that for for panta\nL let me do that for you also so\nbasically I'll just have to change the\ndata values so that is 351 for this\ndisplacement is 351 and weight is\n3170 all right so let's predict the\nvalue again all right so now it says\nfalse right so you have classified VSS\nas true or false so true is when it will\nhave a vs engine and Falls as well it\nwill not have a vs engine right so you\nregress to a probability and based on\nthat probability you classify it and\nthat is the reason you call this\nparticular algorithm that is logistic\nalgorithm as a classification algorithm\nas well as a regression algorithm as\nwell all right uh does that make it\nclear to you\nAnita all right any more question guys\nanything that you want to understand all\nright so Tracy says nice session thank\nyou okay you're welcome Tracy any more\nquestion guys and I shall explain it to\nyou again no worries I I shall explain\nthe whole session to you again any\ndoubts okay since most of you are clear\nlet me end this session now let us wrap\nup this\nsession so thank you for attending this\nsession guys I hop you guys learn\nsomething new today the score that we\nhave executed today has been uploaded in\nyour LMS and as well I have uploaded\nsome assignment as well I want you to\nsolve that assignment and come back in\nthe next session with it all right any\nquestion if you find any difficulty in\nin doing anything you have our support\nteam which is available for you 24/7 all\nright guys so thank you for attending\ntoday's session I hope you have great\nday ahead goodbye I hope you enjoyed\nlistening to this video please be kind\nenough to like it and you can comment\nany of your doubts and queries and we\nwill reply to them at the earliest do\nlook out for more videos in our playlist\nAnd subscribe to our Eda channel to\nlearn more happy learning\n",
  "words": [
    "hey",
    "guys",
    "hmon",
    "eda",
    "today",
    "session",
    "going",
    "machine",
    "learning",
    "algorithms",
    "without",
    "ado",
    "let",
    "move",
    "agenda",
    "understand",
    "covered",
    "today",
    "session",
    "following",
    "approach",
    "start",
    "basics",
    "understand",
    "algorithm",
    "used",
    "machine",
    "learning",
    "understand",
    "machine",
    "learning",
    "exactly",
    "problem",
    "solved",
    "using",
    "machine",
    "learning",
    "discussing",
    "various",
    "techniques",
    "using",
    "machine",
    "learn",
    "also",
    "discussing",
    "basic",
    "algorithms",
    "used",
    "machine",
    "learning",
    "towards",
    "end",
    "demonstration",
    "wherein",
    "see",
    "prepare",
    "data",
    "set",
    "creation",
    "validation",
    "model",
    "creating",
    "model",
    "using",
    "one",
    "algorithms",
    "learning",
    "today",
    "right",
    "guys",
    "agenda",
    "today",
    "clear",
    "okay",
    "getting",
    "confirmation",
    "current",
    "clear",
    "surage",
    "matthew",
    "right",
    "guys",
    "since",
    "clear",
    "let",
    "move",
    "first",
    "topic",
    "today",
    "discussion",
    "algorithm",
    "let",
    "start",
    "topic",
    "generic",
    "approach",
    "interact",
    "computer",
    "tell",
    "execute",
    "particular",
    "task",
    "way",
    "using",
    "program",
    "right",
    "program",
    "program",
    "basically",
    "logic",
    "wrapped",
    "around",
    "syntax",
    "particular",
    "syntax",
    "specific",
    "programming",
    "language",
    "programming",
    "language",
    "could",
    "anything",
    "could",
    "javascript",
    "could",
    "java",
    "could",
    "python",
    "could",
    "c",
    "could",
    "whatever",
    "right",
    "basic",
    "thing",
    "change",
    "logic",
    "right",
    "logic",
    "remains",
    "every",
    "language",
    "said",
    "logic",
    "logic",
    "algorithm",
    "right",
    "simple",
    "words",
    "algorithm",
    "stepbystep",
    "procedure",
    "towards",
    "solving",
    "problem",
    "computer",
    "world",
    "right",
    "let",
    "take",
    "example",
    "understand",
    "uh",
    "thing",
    "discussed",
    "right",
    "let",
    "take",
    "example",
    "problem",
    "algorithm",
    "print",
    "numbers",
    "1",
    "20",
    "right",
    "let",
    "go",
    "step",
    "step",
    "understand",
    "algorithm",
    "start",
    "position",
    "start",
    "uh",
    "see",
    "algorithm",
    "initializing",
    "variable",
    "x",
    "zero",
    "right",
    "initialized",
    "variable",
    "x",
    "zero",
    "incremented",
    "one",
    "printing",
    "variable",
    "checking",
    "whether",
    "less",
    "20",
    "less",
    "20",
    "true",
    "yes",
    "goes",
    "back",
    "increments",
    "value",
    "one",
    "otherwise",
    "goes",
    "ends",
    "program",
    "right",
    "since",
    "yes",
    "right",
    "goes",
    "back",
    "increments",
    "value",
    "one",
    "printed",
    "one",
    "incremented",
    "value",
    "x",
    "one",
    "value",
    "two",
    "print",
    "value",
    "one",
    "two",
    "board",
    "right",
    "checks",
    "whether",
    "less",
    "20",
    "true",
    "goes",
    "back",
    "increments",
    "one",
    "three",
    "prints",
    "three",
    "process",
    "goes",
    "value",
    "x",
    "reaches",
    "20",
    "value",
    "x",
    "20",
    "prints",
    "value",
    "checks",
    "whether",
    "less",
    "20",
    "ends",
    "program",
    "hence",
    "values",
    "printed",
    "1",
    "20",
    "right",
    "step",
    "step",
    "procedure",
    "printing",
    "values",
    "1",
    "20",
    "similar",
    "way",
    "create",
    "algorithms",
    "well",
    "complex",
    "algorithm",
    "always",
    "represented",
    "using",
    "flowchart",
    "right",
    "guys",
    "algorithm",
    "next",
    "topic",
    "machine",
    "learning",
    "making",
    "machine",
    "learn",
    "lot",
    "ways",
    "lot",
    "algorithms",
    "right",
    "since",
    "problem",
    "every",
    "problem",
    "take",
    "case",
    "right",
    "tackled",
    "every",
    "problem",
    "different",
    "approach",
    "algorithms",
    "nothing",
    "approach",
    "computer",
    "right",
    "based",
    "problem",
    "decide",
    "algorithm",
    "use",
    "right",
    "let",
    "understand",
    "machine",
    "learning",
    "machine",
    "learning",
    "basically",
    "uh",
    "artificial",
    "intelligence",
    "wherein",
    "machine",
    "learn",
    "code",
    "meaning",
    "uh",
    "programmed",
    "every",
    "every",
    "time",
    "encounters",
    "problem",
    "programmed",
    "main",
    "motive",
    "us",
    "right",
    "programmed",
    "changes",
    "code",
    "according",
    "new",
    "scenarios",
    "discovers",
    "right",
    "machine",
    "learning",
    "learns",
    "whatever",
    "learned",
    "provide",
    "scenarios",
    "provide",
    "past",
    "experiences",
    "feed",
    "values",
    "learning",
    "past",
    "experiences",
    "comes",
    "new",
    "solutions",
    "topic",
    "actually",
    "interesting",
    "learn",
    "um",
    "might",
    "thinking",
    "machine",
    "actually",
    "redo",
    "code",
    "update",
    "code",
    "right",
    "sounds",
    "interesting",
    "right",
    "next",
    "sessions",
    "learn",
    "machine",
    "learning",
    "today",
    "session",
    "going",
    "basic",
    "session",
    "seeing",
    "machine",
    "learning",
    "actually",
    "works",
    "basis",
    "machine",
    "learning",
    "right",
    "end",
    "session",
    "fair",
    "idea",
    "things",
    "basically",
    "work",
    "machine",
    "learning",
    "advanced",
    "part",
    "machine",
    "learning",
    "next",
    "sessions",
    "lined",
    "want",
    "guys",
    "miss",
    "sessions",
    "right",
    "okay",
    "moving",
    "ahead",
    "learned",
    "machine",
    "learning",
    "like",
    "said",
    "different",
    "approaches",
    "towards",
    "solving",
    "problem",
    "right",
    "basically",
    "different",
    "ways",
    "machine",
    "learn",
    "let",
    "see",
    "different",
    "ways",
    "machine",
    "learn",
    "basically",
    "three",
    "kinds",
    "ways",
    "first",
    "way",
    "supervised",
    "learning",
    "second",
    "way",
    "reinforcement",
    "learning",
    "unsupervised",
    "learning",
    "right",
    "let",
    "discuss",
    "detail",
    "understand",
    "actually",
    "first",
    "kind",
    "learning",
    "called",
    "supervised",
    "learning",
    "right",
    "supervised",
    "learning",
    "supervised",
    "concentrate",
    "word",
    "supervised",
    "supervised",
    "means",
    "monitoring",
    "someone",
    "constantly",
    "monitoring",
    "someone",
    "making",
    "understand",
    "something",
    "compare",
    "scene",
    "classroom",
    "scene",
    "right",
    "sit",
    "class",
    "teacher",
    "explains",
    "difficult",
    "concepts",
    "right",
    "concepts",
    "learned",
    "teacher",
    "right",
    "way",
    "teach",
    "machines",
    "supervised",
    "learning",
    "like",
    "provide",
    "particular",
    "set",
    "inputs",
    "give",
    "corresponding",
    "answers",
    "well",
    "example",
    "uh",
    "say",
    "u",
    "parameters",
    "deciding",
    "whether",
    "drain",
    "today",
    "humidity",
    "certain",
    "level",
    "temperature",
    "certain",
    "level",
    "wind",
    "certain",
    "direction",
    "scenarios",
    "rain",
    "right",
    "give",
    "lot",
    "inputs",
    "computer",
    "data",
    "data",
    "assign",
    "one",
    "rains",
    "zero",
    "rain",
    "temperature",
    "high",
    "humidity",
    "high",
    "wind",
    "particular",
    "direction",
    "rain",
    "say",
    "one",
    "humidity",
    "low",
    "temperature",
    "uh",
    "low",
    "well",
    "say",
    "rain",
    "give",
    "certain",
    "input",
    "today",
    "cel",
    "humidity",
    "97",
    "wind",
    "direction",
    "rain",
    "today",
    "right",
    "machine",
    "actually",
    "see",
    "okay",
    "past",
    "experiences",
    "saw",
    "okay",
    "temperature",
    "humidity",
    "rained",
    "compare",
    "according",
    "come",
    "probability",
    "hence",
    "come",
    "solution",
    "answer",
    "whether",
    "rain",
    "right",
    "supervised",
    "learning",
    "basically",
    "providing",
    "answer",
    "inputs",
    "well",
    "right",
    "um",
    "discuss",
    "general",
    "way",
    "take",
    "kids",
    "example",
    "like",
    "said",
    "kids",
    "go",
    "school",
    "right",
    "teacher",
    "explaining",
    "concepts",
    "kid",
    "using",
    "example",
    "tell",
    "trying",
    "make",
    "understand",
    "something",
    "giving",
    "examples",
    "way",
    "happens",
    "right",
    "well",
    "supervised",
    "learning",
    "give",
    "machines",
    "example",
    "um",
    "example",
    "day",
    "rained",
    "scene",
    "like",
    "temperature",
    "humidity",
    "hence",
    "rained",
    "right",
    "inputs",
    "like",
    "come",
    "decision",
    "okay",
    "rain",
    "right",
    "supervised",
    "learning",
    "uh",
    "next",
    "topic",
    "unsupervised",
    "learning",
    "basically",
    "understood",
    "supervisor",
    "learning",
    "okay",
    "first",
    "guys",
    "doubt",
    "super",
    "supervised",
    "learning",
    "okay",
    "uh",
    "sur",
    "says",
    "clear",
    "others",
    "right",
    "cool",
    "next",
    "topic",
    "unsupervised",
    "learning",
    "unsupervised",
    "learning",
    "understand",
    "unsupervised",
    "learning",
    "comparing",
    "straight",
    "away",
    "supervised",
    "learning",
    "right",
    "supervised",
    "learning",
    "like",
    "said",
    "giving",
    "answers",
    "well",
    "inputs",
    "unsupervised",
    "learning",
    "give",
    "inputs",
    "giving",
    "telling",
    "computer",
    "answer",
    "computer",
    "think",
    "logically",
    "thing",
    "computer",
    "inputs",
    "find",
    "pattern",
    "behind",
    "find",
    "structure",
    "right",
    "computer",
    "actually",
    "unsupervised",
    "learning",
    "provideed",
    "inputs",
    "right",
    "example",
    "want",
    "computer",
    "give",
    "computer",
    "inputs",
    "fruit",
    "right",
    "tell",
    "computer",
    "fruit",
    "actually",
    "give",
    "parameters",
    "big",
    "color",
    "say",
    "taste",
    "fruit",
    "right",
    "give",
    "conditions",
    "parameters",
    "computer",
    "groups",
    "fruits",
    "bases",
    "basically",
    "group",
    "basis",
    "size",
    "group",
    "b",
    "basis",
    "taste",
    "group",
    "basis",
    "color",
    "right",
    "shows",
    "us",
    "data",
    "actually",
    "label",
    "okay",
    "size",
    "big",
    "color",
    "fruit",
    "known",
    "apple",
    "right",
    "kind",
    "problems",
    "actually",
    "unsupervised",
    "learning",
    "uh",
    "could",
    "know",
    "uh",
    "whether",
    "correlation",
    "data",
    "whether",
    "structure",
    "data",
    "example",
    "talk",
    "big",
    "data",
    "right",
    "big",
    "data",
    "nothing",
    "uh",
    "huge",
    "chunk",
    "data",
    "right",
    "know",
    "r",
    "random",
    "structured",
    "right",
    "whenever",
    "want",
    "find",
    "structure",
    "data",
    "use",
    "uns",
    "viice",
    "learning",
    "job",
    "algorithm",
    "figure",
    "pattern",
    "data",
    "pattern",
    "gives",
    "us",
    "patter",
    "hence",
    "decide",
    "move",
    "ahead",
    "right",
    "structure",
    "know",
    "data",
    "differentiated",
    "structured",
    "supervised",
    "learning",
    "applied",
    "know",
    "data",
    "structure",
    "use",
    "unsupervised",
    "learning",
    "right",
    "guys",
    "clear",
    "supervised",
    "learning",
    "unsupervised",
    "learning",
    "okay",
    "take",
    "example",
    "forward",
    "talked",
    "kids",
    "previous",
    "example",
    "previous",
    "example",
    "supervised",
    "learning",
    "kids",
    "learning",
    "school",
    "right",
    "teacher",
    "telling",
    "examples",
    "teaching",
    "particular",
    "problem",
    "tackled",
    "uns",
    "supervised",
    "learning",
    "kids",
    "learning",
    "books",
    "right",
    "trying",
    "figure",
    "thing",
    "unsupervised",
    "learning",
    "moving",
    "third",
    "part",
    "reinforcement",
    "learning",
    "reinforcement",
    "learning",
    "reinforcement",
    "learning",
    "basically",
    "um",
    "computer",
    "trying",
    "take",
    "decisions",
    "right",
    "um",
    "kind",
    "problems",
    "uh",
    "include",
    "reinforcement",
    "learning",
    "uh",
    "say",
    "wanted",
    "teach",
    "computer",
    "play",
    "chess",
    "tell",
    "computer",
    "lot",
    "things",
    "uh",
    "like",
    "zillion",
    "possibilities",
    "zillion",
    "moves",
    "done",
    "chess",
    "tell",
    "every",
    "move",
    "computer",
    "tell",
    "whether",
    "right",
    "wrong",
    "right",
    "uh",
    "reinforcement",
    "learning",
    "another",
    "example",
    "take",
    "training",
    "dog",
    "right",
    "tell",
    "dog",
    "understand",
    "actually",
    "reward",
    "dog",
    "right",
    "punish",
    "wrong",
    "right",
    "thing",
    "actually",
    "applied",
    "reinforcement",
    "learning",
    "well",
    "basically",
    "computer",
    "aim",
    "maximize",
    "rewards",
    "right",
    "actions",
    "come",
    "solution",
    "maximum",
    "rewards",
    "place",
    "define",
    "certain",
    "action",
    "get",
    "reward",
    "past",
    "experiences",
    "understands",
    "okay",
    "got",
    "reward",
    "let",
    "something",
    "similar",
    "get",
    "rewards",
    "right",
    "reinforcement",
    "learning",
    "take",
    "example",
    "forward",
    "uh",
    "let",
    "say",
    "kid",
    "parenting",
    "kid",
    "um",
    "tell",
    "control",
    "kid",
    "throughout",
    "day",
    "right",
    "tell",
    "everything",
    "bad",
    "thing",
    "actually",
    "scold",
    "tell",
    "wrong",
    "understand",
    "okay",
    "thing",
    "get",
    "scoldings",
    "thing",
    "right",
    "else",
    "appreciate",
    "kid",
    "good",
    "thing",
    "right",
    "understand",
    "okay",
    "appreciated",
    "maybe",
    "behavior",
    "expected",
    "reinforcement",
    "learning",
    "right",
    "uh",
    "guys",
    "clear",
    "supervised",
    "unsupervised",
    "reinforcement",
    "learning",
    "doubts",
    "three",
    "learning",
    "techniques",
    "machine",
    "learning",
    "okay",
    "got",
    "question",
    "anita",
    "anita",
    "asking",
    "give",
    "one",
    "example",
    "reinforcement",
    "learning",
    "okay",
    "okay",
    "consider",
    "temperature",
    "control",
    "system",
    "home",
    "right",
    "temperature",
    "control",
    "system",
    "decide",
    "whether",
    "lower",
    "temperature",
    "increase",
    "right",
    "application",
    "actually",
    "uses",
    "reinforce",
    "learning",
    "make",
    "decision",
    "whenever",
    "decision",
    "made",
    "use",
    "reinforcement",
    "learning",
    "decide",
    "whether",
    "increase",
    "temperature",
    "decrease",
    "temperature",
    "decide",
    "based",
    "past",
    "experiences",
    "right",
    "see",
    "basically",
    "user",
    "user",
    "responds",
    "certain",
    "temperature",
    "right",
    "come",
    "decision",
    "okay",
    "temperature",
    "32",
    "right",
    "maybe",
    "need",
    "lower",
    "maybe",
    "need",
    "lower",
    "30",
    "right",
    "example",
    "lot",
    "parameters",
    "taken",
    "place",
    "many",
    "people",
    "room",
    "everything",
    "algorithm",
    "works",
    "takes",
    "decision",
    "based",
    "past",
    "experiences",
    "right",
    "go",
    "definition",
    "rein",
    "forman",
    "learning",
    "actually",
    "inspired",
    "human",
    "behavior",
    "rat",
    "behavior",
    "maze",
    "right",
    "rat",
    "maze",
    "decide",
    "whether",
    "stop",
    "go",
    "left",
    "right",
    "right",
    "algorithm",
    "inspired",
    "doubts",
    "guys",
    "doubts",
    "supervised",
    "unsupervised",
    "reinforcement",
    "learning",
    "okay",
    "got",
    "confirmation",
    "since",
    "clear",
    "let",
    "move",
    "next",
    "topic",
    "know",
    "different",
    "ways",
    "machine",
    "learn",
    "right",
    "let",
    "discuss",
    "actually",
    "solve",
    "problem",
    "using",
    "machine",
    "learning",
    "right",
    "problem",
    "comes",
    "decide",
    "start",
    "problem",
    "let",
    "shed",
    "light",
    "whenever",
    "problem",
    "problem",
    "categorized",
    "five",
    "ways",
    "five",
    "ways",
    "like",
    "b",
    "viewed",
    "much",
    "many",
    "many",
    "organized",
    "next",
    "problem",
    "would",
    "want",
    "answer",
    "could",
    "b",
    "problem",
    "asking",
    "uh",
    "say",
    "differentiating",
    "fruits",
    "apple",
    "banana",
    "right",
    "kind",
    "problems",
    "use",
    "classification",
    "algorithms",
    "next",
    "category",
    "weird",
    "analyze",
    "patterns",
    "right",
    "problem",
    "analyze",
    "platin",
    "wherein",
    "find",
    "anomaly",
    "uh",
    "odd",
    "one",
    "actually",
    "go",
    "anomal",
    "detection",
    "algorithms",
    "right",
    "next",
    "category",
    "much",
    "many",
    "deal",
    "numbers",
    "right",
    "want",
    "uh",
    "numeric",
    "values",
    "want",
    "get",
    "certain",
    "um",
    "value",
    "example",
    "minimum",
    "number",
    "hours",
    "put",
    "get",
    "promotion",
    "right",
    "kind",
    "problems",
    "apply",
    "regression",
    "algorithms",
    "onto",
    "organized",
    "right",
    "kind",
    "questions",
    "use",
    "clustering",
    "algorithms",
    "basically",
    "trying",
    "find",
    "structure",
    "behind",
    "certain",
    "data",
    "set",
    "right",
    "trying",
    "know",
    "structure",
    "behind",
    "certain",
    "problem",
    "use",
    "clustering",
    "algorithms",
    "category",
    "says",
    "next",
    "decision",
    "made",
    "algorithms",
    "reinforcement",
    "learning",
    "used",
    "right",
    "guys",
    "doubts",
    "five",
    "categories",
    "discussed",
    "basically",
    "trying",
    "tell",
    "question",
    "kind",
    "problem",
    "come",
    "categorized",
    "five",
    "categories",
    "right",
    "beyond",
    "five",
    "categories",
    "definitely",
    "come",
    "five",
    "categories",
    "relate",
    "category",
    "come",
    "algorithm",
    "set",
    "number",
    "outputs",
    "use",
    "classification",
    "algorithms",
    "right",
    "works",
    "like",
    "doubt",
    "whatever",
    "discussed",
    "far",
    "okay",
    "guys",
    "since",
    "clear",
    "right",
    "let",
    "move",
    "next",
    "topic",
    "discussed",
    "kind",
    "problems",
    "come",
    "solve",
    "using",
    "algorithms",
    "right",
    "let",
    "learn",
    "algorithms",
    "classification",
    "reduction",
    "regression",
    "clustering",
    "reinforcement",
    "right",
    "let",
    "shed",
    "light",
    "let",
    "start",
    "algorithms",
    "machine",
    "learning",
    "algorithm",
    "first",
    "algorithm",
    "classification",
    "algorithm",
    "like",
    "said",
    "set",
    "number",
    "outputs",
    "basically",
    "questions",
    "like",
    "cold",
    "outside",
    "today",
    "answer",
    "could",
    "either",
    "yes",
    "two",
    "outputs",
    "outputs",
    "could",
    "either",
    "yes",
    "output",
    "could",
    "right",
    "next",
    "kind",
    "question",
    "could",
    "go",
    "work",
    "today",
    "either",
    "yes",
    "maybe",
    "right",
    "either",
    "go",
    "work",
    "go",
    "work",
    "maybe",
    "say",
    "maybe",
    "go",
    "work",
    "right",
    "answer",
    "come",
    "right",
    "kind",
    "conditions",
    "come",
    "solve",
    "using",
    "classification",
    "algorithms",
    "two",
    "outputs",
    "like",
    "example",
    "yes",
    "called",
    "two",
    "class",
    "classification",
    "two",
    "choices",
    "uh",
    "second",
    "question",
    "yes",
    "maybe",
    "right",
    "called",
    "multiclass",
    "classification",
    "whenever",
    "output",
    "set",
    "either",
    "true",
    "false",
    "z",
    "one",
    "yes",
    "whatever",
    "right",
    "fixed",
    "use",
    "classification",
    "algorithms",
    "basically",
    "gist",
    "get",
    "doubts",
    "doubt",
    "whatever",
    "discussed",
    "okay",
    "uh",
    "let",
    "move",
    "second",
    "algorithm",
    "anomal",
    "anomaly",
    "detection",
    "algorithms",
    "uh",
    "algorithm",
    "analyze",
    "certain",
    "pattern",
    "get",
    "alerted",
    "whenever",
    "anomaly",
    "something",
    "usual",
    "happens",
    "right",
    "example",
    "see",
    "figure",
    "pattern",
    "blue",
    "men",
    "right",
    "suddenly",
    "red",
    "kind",
    "person",
    "comes",
    "algorithm",
    "actually",
    "flag",
    "person",
    "breaks",
    "pattern",
    "something",
    "expected",
    "right",
    "becomes",
    "anomaly",
    "anomaly",
    "direction",
    "algorithms",
    "use",
    "case",
    "anomaly",
    "direction",
    "algorithms",
    "could",
    "um",
    "uh",
    "example",
    "credit",
    "card",
    "companies",
    "credit",
    "card",
    "companies",
    "transaction",
    "monitored",
    "right",
    "whenever",
    "transaction",
    "usual",
    "right",
    "match",
    "uh",
    "daily",
    "transaction",
    "pattern",
    "get",
    "alerted",
    "might",
    "confirm",
    "whether",
    "made",
    "transaction",
    "right",
    "kind",
    "problems",
    "use",
    "anomaly",
    "detection",
    "algorithms",
    "solve",
    "third",
    "algorithm",
    "regression",
    "algorithm",
    "like",
    "said",
    "whenever",
    "come",
    "value",
    "right",
    "use",
    "regression",
    "algorithms",
    "example",
    "um",
    "temperature",
    "tomorrow",
    "right",
    "whatever",
    "value",
    "come",
    "number",
    "right",
    "let",
    "say",
    "came",
    "c",
    "got",
    "temperature",
    "using",
    "formulas",
    "right",
    "came",
    "numeric",
    "value",
    "whenever",
    "come",
    "numeric",
    "kind",
    "value",
    "whenever",
    "problem",
    "demands",
    "get",
    "mathematical",
    "value",
    "go",
    "regression",
    "algorithms",
    "second",
    "example",
    "could",
    "whenever",
    "um",
    "want",
    "give",
    "discount",
    "customer",
    "much",
    "discount",
    "give",
    "customer",
    "get",
    "customers",
    "time",
    "go",
    "loss",
    "well",
    "right",
    "stay",
    "profit",
    "whenever",
    "kind",
    "problem",
    "comes",
    "go",
    "use",
    "regression",
    "algorithm",
    "solve",
    "kind",
    "problem",
    "right",
    "uh",
    "moving",
    "ahead",
    "uh",
    "clustering",
    "algorithms",
    "clustering",
    "algorithms",
    "basically",
    "used",
    "um",
    "discussed",
    "unsupervised",
    "learning",
    "remember",
    "unsupervised",
    "learning",
    "clustering",
    "algorithm",
    "wherein",
    "try",
    "establish",
    "structure",
    "right",
    "unstructured",
    "data",
    "want",
    "make",
    "sense",
    "pass",
    "clustering",
    "algorithm",
    "pattern",
    "computer",
    "see",
    "comes",
    "pattern",
    "shows",
    "us",
    "like",
    "example",
    "feed",
    "data",
    "computer",
    "right",
    "data",
    "applies",
    "clustering",
    "algorithm",
    "onto",
    "kind",
    "output",
    "get",
    "uh",
    "categorize",
    "group",
    "group",
    "b",
    "group",
    "c",
    "make",
    "decision",
    "whether",
    "want",
    "data",
    "got",
    "right",
    "computer",
    "understand",
    "anything",
    "data",
    "understand",
    "maybe",
    "cars",
    "maybe",
    "food",
    "maybe",
    "uh",
    "money",
    "right",
    "computer",
    "understand",
    "computer",
    "understands",
    "numbers",
    "right",
    "relates",
    "another",
    "comes",
    "groups",
    "comes",
    "groups",
    "maybe",
    "want",
    "use",
    "algorithm",
    "onto",
    "decide",
    "come",
    "solution",
    "clustering",
    "algorithm",
    "give",
    "right",
    "said",
    "let",
    "move",
    "next",
    "algorithm",
    "reinforcement",
    "algorithm",
    "right",
    "um",
    "discussed",
    "reinforcement",
    "learning",
    "reinforcement",
    "algorithms",
    "whenever",
    "make",
    "decision",
    "right",
    "whenever",
    "make",
    "decision",
    "decision",
    "based",
    "past",
    "experiences",
    "machine",
    "whatever",
    "inputs",
    "given",
    "machine",
    "use",
    "reinforcement",
    "learning",
    "example",
    "whenever",
    "wanted",
    "train",
    "computer",
    "play",
    "chess",
    "use",
    "reinforcement",
    "learning",
    "learned",
    "created",
    "model",
    "game",
    "actually",
    "played",
    "computer",
    "decision",
    "computer",
    "makes",
    "also",
    "based",
    "also",
    "taken",
    "reinforcement",
    "learning",
    "example",
    "like",
    "told",
    "temperature",
    "control",
    "system",
    "wherein",
    "system",
    "decide",
    "whether",
    "increase",
    "temperature",
    "decrease",
    "temperature",
    "right",
    "whenever",
    "kind",
    "problems",
    "right",
    "use",
    "reinforcement",
    "learning",
    "reinforcement",
    "algorithms",
    "okay",
    "guys",
    "brings",
    "us",
    "end",
    "machine",
    "learning",
    "algorithm",
    "basically",
    "covered",
    "basics",
    "covered",
    "basics",
    "algorithms",
    "used",
    "machine",
    "learning",
    "give",
    "problem",
    "able",
    "identify",
    "algorithm",
    "fit",
    "problem",
    "right",
    "algorithm",
    "many",
    "algorithms",
    "discuss",
    "later",
    "class",
    "today",
    "understand",
    "problem",
    "okay",
    "kind",
    "problem",
    "apply",
    "algorithm",
    "apply",
    "algorithm",
    "discussing",
    "later",
    "class",
    "idea",
    "get",
    "today",
    "step",
    "one",
    "step",
    "one",
    "becomes",
    "easy",
    "learning",
    "algorithm",
    "concept",
    "behind",
    "machine",
    "learning",
    "concept",
    "set",
    "mind",
    "whenever",
    "kind",
    "problem",
    "comes",
    "okay",
    "find",
    "structure",
    "behind",
    "problem",
    "okay",
    "use",
    "clustering",
    "algorithms",
    "okay",
    "solutions",
    "kind",
    "problem",
    "okay",
    "use",
    "supervised",
    "learning",
    "using",
    "algorithms",
    "supervised",
    "learning",
    "right",
    "fixed",
    "number",
    "outputs",
    "use",
    "classification",
    "algorithm",
    "right",
    "basic",
    "understanding",
    "get",
    "session",
    "today",
    "right",
    "enough",
    "theory",
    "guys",
    "understood",
    "concept",
    "behind",
    "machine",
    "learning",
    "let",
    "see",
    "first",
    "guys",
    "wo",
    "knowing",
    "inputs",
    "actually",
    "given",
    "system",
    "create",
    "model",
    "right",
    "inputs",
    "actually",
    "called",
    "data",
    "sets",
    "right",
    "seeing",
    "prepare",
    "data",
    "set",
    "actually",
    "create",
    "model",
    "also",
    "verifying",
    "model",
    "whe",
    "whether",
    "model",
    "predicting",
    "right",
    "wrong",
    "right",
    "let",
    "take",
    "sample",
    "data",
    "set",
    "basically",
    "machine",
    "learning",
    "demonstrations",
    "r",
    "expect",
    "guys",
    "download",
    "r",
    "studio",
    "r",
    "language",
    "next",
    "class",
    "next",
    "class",
    "also",
    "lot",
    "demos",
    "today",
    "see",
    "right",
    "later",
    "code",
    "lms",
    "use",
    "code",
    "execute",
    "like",
    "ready",
    "next",
    "class",
    "next",
    "class",
    "going",
    "lot",
    "demo",
    "right",
    "today",
    "um",
    "demonstration",
    "going",
    "guys",
    "input",
    "get",
    "values",
    "data",
    "set",
    "called",
    "empty",
    "car",
    "sample",
    "data",
    "set",
    "r",
    "right",
    "whenever",
    "create",
    "model",
    "basically",
    "divide",
    "data",
    "set",
    "validate",
    "model",
    "later",
    "stage",
    "well",
    "divide",
    "data",
    "set",
    "training",
    "part",
    "testing",
    "part",
    "train",
    "part",
    "used",
    "create",
    "model",
    "testing",
    "part",
    "used",
    "actually",
    "verify",
    "model",
    "right",
    "uh",
    "divide",
    "data",
    "set",
    "going",
    "tell",
    "moments",
    "clear",
    "guys",
    "dividing",
    "data",
    "set",
    "dividing",
    "data",
    "set",
    "first",
    "create",
    "model",
    "creating",
    "model",
    "computer",
    "fed",
    "value",
    "right",
    "fed",
    "values",
    "make",
    "sense",
    "come",
    "model",
    "model",
    "used",
    "predict",
    "values",
    "right",
    "verify",
    "whether",
    "predicting",
    "correct",
    "values",
    "testing",
    "uh",
    "data",
    "set",
    "picking",
    "values",
    "testing",
    "data",
    "set",
    "appearing",
    "values",
    "see",
    "whether",
    "producing",
    "correct",
    "output",
    "right",
    "clear",
    "problem",
    "statement",
    "right",
    "guys",
    "let",
    "begin",
    "demonstration",
    "r",
    "console",
    "guys",
    "first",
    "write",
    "command",
    "says",
    "data",
    "empty",
    "cars",
    "basically",
    "import",
    "sample",
    "data",
    "set",
    "called",
    "empty",
    "cars",
    "right",
    "got",
    "variable",
    "empty",
    "cars",
    "let",
    "let",
    "show",
    "data",
    "set",
    "data",
    "like",
    "basically",
    "car",
    "names",
    "names",
    "car",
    "values",
    "associated",
    "car",
    "example",
    "displacement",
    "car",
    "weight",
    "car",
    "based",
    "weight",
    "displacement",
    "horsepower",
    "values",
    "two",
    "values",
    "whether",
    "v",
    "kind",
    "engine",
    "whether",
    "straight",
    "engine",
    "right",
    "hat",
    "v",
    "engine",
    "one",
    "straight",
    "engine",
    "zero",
    "right",
    "values",
    "might",
    "indicate",
    "v",
    "engine",
    "well",
    "straight",
    "engine",
    "well",
    "today",
    "uh",
    "going",
    "going",
    "predict",
    "basically",
    "taking",
    "two",
    "values",
    "taking",
    "wt",
    "weight",
    "car",
    "taking",
    "disp",
    "displacement",
    "car",
    "predicting",
    "whether",
    "car",
    "v",
    "engine",
    "straight",
    "engine",
    "creating",
    "model",
    "later",
    "part",
    "today",
    "demonstration",
    "divide",
    "data",
    "set",
    "training",
    "data",
    "set",
    "testing",
    "data",
    "set",
    "let",
    "see",
    "uh",
    "first",
    "import",
    "library",
    "called",
    "ca",
    "tools",
    "right",
    "import",
    "library",
    "set",
    "right",
    "write",
    "split",
    "define",
    "variable",
    "called",
    "split",
    "write",
    "sample",
    "split",
    "enter",
    "data",
    "set",
    "empty",
    "cars",
    "specify",
    "split",
    "ratio",
    "equal",
    "want",
    "training",
    "data",
    "set",
    "70",
    "data",
    "set",
    "testing",
    "data",
    "set",
    "30",
    "right",
    "specify",
    "7",
    "specifies",
    "70",
    "right",
    "basically",
    "specifying",
    "want",
    "split",
    "data",
    "set",
    "empty",
    "cars",
    "7030",
    "ratio",
    "right",
    "let",
    "run",
    "command",
    "right",
    "command",
    "run",
    "right",
    "run",
    "particular",
    "variable",
    "execute",
    "particular",
    "task",
    "executed",
    "basically",
    "happened",
    "picked",
    "random",
    "values",
    "right",
    "value",
    "assigned",
    "either",
    "true",
    "false",
    "right",
    "70",
    "data",
    "set",
    "true",
    "true",
    "30",
    "data",
    "set",
    "false",
    "leveraging",
    "deciding",
    "training",
    "testing",
    "data",
    "set",
    "based",
    "training",
    "data",
    "set",
    "equal",
    "subset",
    "empty",
    "car",
    "split",
    "equal",
    "equal",
    "true",
    "right",
    "basically",
    "specified",
    "training",
    "dat",
    "set",
    "subset",
    "mt",
    "cars",
    "split",
    "true",
    "right",
    "true",
    "70",
    "data",
    "set",
    "right",
    "remember",
    "ex",
    "uing",
    "executed",
    "similarly",
    "testing",
    "specify",
    "split",
    "false",
    "right",
    "write",
    "false",
    "execute",
    "statement",
    "right",
    "let",
    "check",
    "whether",
    "splitted",
    "data",
    "set",
    "let",
    "check",
    "testing",
    "data",
    "set",
    "actually",
    "see",
    "testing",
    "around",
    "12",
    "observations",
    "training",
    "around",
    "20",
    "observations",
    "data",
    "set",
    "splitted",
    "mt",
    "cars",
    "32",
    "observations",
    "split",
    "7030",
    "ratio",
    "training",
    "data",
    "set",
    "20",
    "observations",
    "20",
    "rows",
    "testing",
    "data",
    "set",
    "12",
    "observations",
    "right",
    "let",
    "show",
    "testing",
    "data",
    "set",
    "see",
    "testing",
    "data",
    "set",
    "whole",
    "data",
    "set",
    "whole",
    "mt",
    "car",
    "data",
    "set",
    "divided",
    "testing",
    "data",
    "set",
    "30",
    "many",
    "values",
    "right",
    "splitted",
    "data",
    "set",
    "let",
    "create",
    "model",
    "right",
    "creation",
    "module",
    "model",
    "every",
    "algorithm",
    "command",
    "changes",
    "let",
    "apply",
    "regression",
    "algorithm",
    "right",
    "called",
    "logistic",
    "regression",
    "right",
    "listic",
    "regression",
    "comes",
    "value",
    "right",
    "value",
    "decide",
    "whether",
    "one",
    "zero",
    "logistic",
    "regression",
    "actually",
    "might",
    "ask",
    "question",
    "um",
    "okay",
    "kind",
    "problem",
    "decide",
    "either",
    "one",
    "zero",
    "classification",
    "problem",
    "true",
    "guys",
    "behind",
    "classification",
    "actually",
    "calculating",
    "probabilities",
    "right",
    "actually",
    "coming",
    "number",
    "right",
    "coming",
    "number",
    "use",
    "regression",
    "algorithms",
    "talk",
    "logistic",
    "regression",
    "logistic",
    "regression",
    "actually",
    "comes",
    "classify",
    "classification",
    "algorithms",
    "well",
    "regression",
    "algorithms",
    "well",
    "right",
    "applying",
    "logistic",
    "regression",
    "logistic",
    "regression",
    "give",
    "probability",
    "give",
    "values",
    "wt",
    "weight",
    "car",
    "displacement",
    "car",
    "give",
    "probability",
    "whether",
    "car",
    "vss",
    "engine",
    "probability",
    "car",
    "vss",
    "engine",
    "right",
    "probability",
    "get",
    "model",
    "creating",
    "right",
    "let",
    "clear",
    "clear",
    "console",
    "right",
    "creating",
    "model",
    "type",
    "command",
    "like",
    "type",
    "model",
    "right",
    "logistic",
    "regression",
    "command",
    "glm",
    "giving",
    "formula",
    "formula",
    "predict",
    "vss",
    "right",
    "predict",
    "value",
    "vss",
    "one",
    "zero",
    "say",
    "vs",
    "tilt",
    "means",
    "versus",
    "wt",
    "plus",
    "dp",
    "right",
    "want",
    "take",
    "account",
    "weight",
    "car",
    "displacement",
    "car",
    "want",
    "predict",
    "weight",
    "car",
    "wt",
    "displacement",
    "car",
    "disp",
    "value",
    "vs",
    "formula",
    "want",
    "model",
    "predict",
    "right",
    "uh",
    "specifying",
    "data",
    "set",
    "model",
    "applied",
    "since",
    "splitted",
    "data",
    "set",
    "want",
    "applied",
    "training",
    "specify",
    "family",
    "model",
    "basically",
    "one",
    "zero",
    "right",
    "values",
    "answer",
    "vs",
    "value",
    "one",
    "zero",
    "right",
    "family",
    "binomial",
    "specifying",
    "right",
    "let",
    "execute",
    "particular",
    "statement",
    "click",
    "run",
    "right",
    "model",
    "created",
    "let",
    "let",
    "show",
    "summary",
    "model",
    "right",
    "see",
    "uh",
    "came",
    "model",
    "given",
    "coefficient",
    "values",
    "calculated",
    "coefficient",
    "values",
    "right",
    "explaining",
    "next",
    "class",
    "understand",
    "trying",
    "make",
    "guys",
    "understand",
    "coming",
    "numbers",
    "right",
    "clustering",
    "decision",
    "making",
    "coming",
    "numbers",
    "reason",
    "use",
    "regression",
    "algorithm",
    "see",
    "next",
    "step",
    "predicting",
    "value",
    "probability",
    "car",
    "vs",
    "engine",
    "right",
    "teach",
    "actually",
    "classify",
    "problem",
    "one",
    "zero",
    "right",
    "hang",
    "model",
    "right",
    "testing",
    "data",
    "set",
    "see",
    "values",
    "going",
    "predict",
    "right",
    "uh",
    "actually",
    "feeding",
    "wt",
    "isp",
    "testing",
    "data",
    "set",
    "mind",
    "guys",
    "model",
    "created",
    "testing",
    "data",
    "set",
    "right",
    "training",
    "data",
    "set",
    "model",
    "encountered",
    "testing",
    "data",
    "set",
    "basically",
    "like",
    "real",
    "values",
    "model",
    "right",
    "predicting",
    "let",
    "take",
    "example",
    "car",
    "let",
    "take",
    "ford",
    "penta",
    "l",
    "predict",
    "whether",
    "car",
    "vs",
    "engine",
    "straight",
    "engine",
    "right",
    "let",
    "feed",
    "values",
    "creating",
    "data",
    "frame",
    "first",
    "feeding",
    "values",
    "data",
    "variable",
    "da",
    "frame",
    "wt",
    "value",
    "ford",
    "pan",
    "l",
    "wt",
    "value",
    "let",
    "feed",
    "170",
    "disp",
    "value",
    "351",
    "let",
    "feed",
    "well",
    "fed",
    "values",
    "let",
    "predict",
    "predicting",
    "answer",
    "variable",
    "command",
    "predicting",
    "predict",
    "model",
    "model",
    "predict",
    "data",
    "data",
    "values",
    "type",
    "answer",
    "response",
    "want",
    "response",
    "getting",
    "probability",
    "right",
    "probability",
    "car",
    "vssn",
    "probability",
    "less",
    "means",
    "probability",
    "uh",
    "means",
    "vss",
    "engine",
    "odds",
    "vs",
    "engine",
    "becomes",
    "less",
    "hence",
    "consider",
    "false",
    "greater",
    "means",
    "odds",
    "car",
    "vs",
    "engine",
    "becomes",
    "right",
    "consider",
    "car",
    "vs",
    "engine",
    "value",
    "probability",
    "value",
    "greater",
    "said",
    "let",
    "execute",
    "statement",
    "let",
    "print",
    "answer",
    "penta",
    "l",
    "predicted",
    "vss",
    "probability",
    "probability",
    "car",
    "vs",
    "engine",
    "let",
    "compare",
    "whether",
    "ford",
    "penta",
    "l",
    "vs",
    "engine",
    "see",
    "zero",
    "means",
    "ford",
    "vs",
    "engine",
    "vs",
    "engine",
    "straight",
    "engine",
    "predicted",
    "right",
    "value",
    "correct",
    "said",
    "let",
    "predict",
    "one",
    "value",
    "car",
    "vs",
    "kind",
    "engine",
    "let",
    "pick",
    "car",
    "let",
    "take",
    "car",
    "toyota",
    "corona",
    "right",
    "let",
    "feed",
    "values",
    "toyota",
    "corona",
    "toyota",
    "corona",
    "uh",
    "displacement",
    "let",
    "us",
    "read",
    "weight",
    "5",
    "let",
    "feed",
    "well",
    "let",
    "predict",
    "value",
    "see",
    "probability",
    "corona",
    "vs",
    "engine",
    "77",
    "right",
    "77",
    "probability",
    "vs",
    "engine",
    "let",
    "check",
    "whether",
    "vs",
    "engine",
    "yes",
    "vs",
    "engine",
    "hence",
    "model",
    "predicted",
    "right",
    "value",
    "right",
    "guys",
    "created",
    "model",
    "predict",
    "values",
    "feed",
    "displacement",
    "weight",
    "model",
    "tell",
    "whether",
    "car",
    "vs",
    "engine",
    "straight",
    "engine",
    "right",
    "brings",
    "us",
    "end",
    "session",
    "guys",
    "doubts",
    "demo",
    "right",
    "doubts",
    "explain",
    "right",
    "away",
    "right",
    "anita",
    "question",
    "asking",
    "uh",
    "understands",
    "regression",
    "algorithm",
    "classification",
    "algorithm",
    "also",
    "okay",
    "another",
    "told",
    "regression",
    "algorithms",
    "uh",
    "basically",
    "compute",
    "values",
    "right",
    "calculating",
    "probability",
    "based",
    "probability",
    "actually",
    "classifying",
    "okay",
    "let",
    "show",
    "happen",
    "uh",
    "wait",
    "second",
    "okay",
    "let",
    "type",
    "type",
    "command",
    "specify",
    "greater",
    "05",
    "specify",
    "true",
    "right",
    "specified",
    "greater",
    "let",
    "check",
    "answer",
    "right",
    "says",
    "true",
    "specified",
    "value",
    "77",
    "greater",
    "true",
    "basically",
    "classifying",
    "um",
    "car",
    "toyota",
    "corona",
    "vs",
    "engine",
    "right",
    "panta",
    "l",
    "let",
    "also",
    "basically",
    "change",
    "data",
    "values",
    "351",
    "displacement",
    "351",
    "weight",
    "3170",
    "right",
    "let",
    "predict",
    "value",
    "right",
    "says",
    "false",
    "right",
    "classified",
    "vss",
    "true",
    "false",
    "true",
    "vs",
    "engine",
    "falls",
    "well",
    "vs",
    "engine",
    "right",
    "regress",
    "probability",
    "based",
    "probability",
    "classify",
    "reason",
    "call",
    "particular",
    "algorithm",
    "logistic",
    "algorithm",
    "classification",
    "algorithm",
    "well",
    "regression",
    "algorithm",
    "well",
    "right",
    "uh",
    "make",
    "clear",
    "anita",
    "right",
    "question",
    "guys",
    "anything",
    "want",
    "understand",
    "right",
    "tracy",
    "says",
    "nice",
    "session",
    "thank",
    "okay",
    "welcome",
    "tracy",
    "question",
    "guys",
    "shall",
    "explain",
    "worries",
    "shall",
    "explain",
    "whole",
    "session",
    "doubts",
    "okay",
    "since",
    "clear",
    "let",
    "end",
    "session",
    "let",
    "us",
    "wrap",
    "session",
    "thank",
    "attending",
    "session",
    "guys",
    "hop",
    "guys",
    "learn",
    "something",
    "new",
    "today",
    "score",
    "executed",
    "today",
    "uploaded",
    "lms",
    "well",
    "uploaded",
    "assignment",
    "well",
    "want",
    "solve",
    "assignment",
    "come",
    "back",
    "next",
    "session",
    "right",
    "question",
    "find",
    "difficulty",
    "anything",
    "support",
    "team",
    "available",
    "right",
    "guys",
    "thank",
    "attending",
    "today",
    "session",
    "hope",
    "great",
    "day",
    "ahead",
    "goodbye",
    "hope",
    "enjoyed",
    "listening",
    "video",
    "please",
    "kind",
    "enough",
    "like",
    "comment",
    "doubts",
    "queries",
    "reply",
    "earliest",
    "look",
    "videos",
    "playlist",
    "subscribe",
    "eda",
    "channel",
    "learn",
    "happy",
    "learning"
  ],
  "keywords": [
    "guys",
    "today",
    "session",
    "going",
    "machine",
    "learning",
    "algorithms",
    "let",
    "move",
    "understand",
    "start",
    "algorithm",
    "used",
    "problem",
    "using",
    "learn",
    "also",
    "end",
    "wherein",
    "see",
    "data",
    "set",
    "model",
    "creating",
    "one",
    "right",
    "clear",
    "okay",
    "since",
    "first",
    "topic",
    "computer",
    "tell",
    "execute",
    "particular",
    "way",
    "program",
    "basically",
    "logic",
    "could",
    "whatever",
    "thing",
    "every",
    "said",
    "take",
    "example",
    "uh",
    "discussed",
    "numbers",
    "20",
    "go",
    "step",
    "variable",
    "x",
    "zero",
    "whether",
    "less",
    "true",
    "yes",
    "goes",
    "value",
    "two",
    "hence",
    "values",
    "create",
    "well",
    "next",
    "lot",
    "ways",
    "different",
    "based",
    "decide",
    "use",
    "code",
    "us",
    "past",
    "experiences",
    "feed",
    "comes",
    "actually",
    "um",
    "work",
    "part",
    "want",
    "like",
    "supervised",
    "second",
    "reinforcement",
    "unsupervised",
    "kind",
    "called",
    "means",
    "something",
    "class",
    "inputs",
    "give",
    "say",
    "humidity",
    "certain",
    "temperature",
    "direction",
    "rain",
    "come",
    "probability",
    "answer",
    "kids",
    "kid",
    "trying",
    "make",
    "decision",
    "says",
    "straight",
    "find",
    "pattern",
    "behind",
    "structure",
    "group",
    "problems",
    "know",
    "r",
    "whenever",
    "training",
    "get",
    "got",
    "maybe",
    "doubts",
    "question",
    "system",
    "many",
    "solve",
    "five",
    "classification",
    "anomaly",
    "number",
    "regression",
    "clustering",
    "outputs",
    "either",
    "false",
    "cars",
    "later",
    "predicting",
    "empty",
    "car",
    "testing",
    "predict",
    "command",
    "displacement",
    "weight",
    "engine",
    "wt",
    "split",
    "specify",
    "observations",
    "logistic",
    "vss",
    "type",
    "vs",
    "l",
    "greater",
    "corona"
  ]
}