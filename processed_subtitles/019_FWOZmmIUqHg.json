{
  "text": "welcome to artificial intelligence\ntutorial my name is richard kirschner\ni'm with the simply learn team that's\nwww.simplylearn.com\nget certified and get ahead what's in it\nfor you today what is artificial\nintelligence so we'll start with a\ngeneral concept types of artificial\nintelligence covering the four main\nareas ways of achieving artificial\nintelligence and some general\napplications of artificial intelligence\nin today's world finally we'll dive into\na use case predicting if a person has\ndiabetes or not and we'll be using\ntensorflow for that in the python\nenvironment what is artificial\nintelligence and today's world is\nprobably one of the most exciting\nadvancements that we're in the middle of\nexperiencing as humans so what is\nartificial intelligence and here we have\na robot with nice little clampy hands\nhey what am i you are what we call\nartificial intelligence i am your\ncreator reminding him who programmed him\nand who he's supposed to take care of\nartificial intelligence is a branch of\ncomputer science dedicated to creating\nintelligent machines that work and react\nlike humans in today's place where we're\nat with artificial intelligence i really\nwant to highlight the fact that they\nwork and react like humans because that\nis where the development of artificial\nintelligence is and that's what we're\ncomparing it to is how it looks like\nnext to a human thanks any tasks you\nwant me to do for you get me a cup of\ncoffee poof here you go he brings him a\ncup of coffee that's my kind of robot i\nlove my coffee in the morning you'll see\nthere's kind of a side theme of coffee\ntoday's tutorial so here we have a robot\nthat's able to bring him a cup of coffee\nseems pretty far out there you know that\nwe have a walking robot that's doing\nthis but it's not as far out there as\nyou think we have automatic coffee pots\nwe have devices that can move an object\nfrom one point to the other you know\nanything from amazon delivering packages\nor whatever you want all these things\nare in today's world we're right on the\nedge of all this that's what makes this\nso exciting such an exciting topic and a\nplace of study so let's take a look a\nreal general look at types of artificial\nintelligence in the really big picture i\nmean we drill into it there's like\nmachine learning and all kinds of\ndifferent aspects but just a generic\nlevel of artificial intelligence so hi\nthere discovered four different types\ncome have a look so we have our kind of\neinstein looking guy or professor at\nsome college so the very first part that\nwe're really this is uh as reactive\nmachines they've been around a long time\nthis kind of ai are purely reactive and\ndo not hold the ability to form memories\nor use past experiences to make\ndecisions these machines are designed to\ndo specific jobs remember i talked about\nthe programmable coffee maker that makes\ncoffee in the morning it doesn't\nremember yesterday from tomorrow it runs\nits program even going back to our\nwashing machines they have automatic\nload balancers that have been around for\ndecades so reactive machines we program\nto do certain tasks and they have no\nmemory but they're very functional then\nwe have limited memory this is kind of\nright where we're at right now this kind\nof ai uses past experience and the\npresent data to make a decision\nself-driving cars are kind of limited\nmemory ai we bring up self-driving cars\nbecause that's a big thing especially in\ntoday's market they have all these\nimages that they brought in and videos\nof what's gone on before and they use\nthat to teach the automatic car what to\ndo so it's based on a limited memory\nlimited memory means it's not evolving\nnew ideas they have to actually when\nthey need to make a change they have the\nprogramming built on the memory but then\nthey have to make those changes outside\nof that and then put the new setup in\nthere so it's continually reprogramming\nitself theory of mind these ai machines\ncan socialize and understand human\nemotions machines with such abilities\nare yet to be developed of course that's\nunder debate there's a lot of places\nthat are working on the theory of mind\nand having it be able to cognitively\nunderstand somebody based on the\nenvironment their\nfacial features all kinds of things and\nevolve with them so their own they have\nsome kind of reflective ability to\nevolve with that and finally\nself-awareness this is the future of ai\nthese machines will be super intelligent\nsentient and conscious so they'll be\nable to react very much like a human\nbeing although they'll have their own\nflavor i'm sure achieving artificial\nintelligence so how in today's world\nright now are we going to achieve\nartificial intelligence well the main\narena right now is machine learning\nmachine learning provides artificial\nintelligence with the ability to learn\nthis is achieved by using algorithms to\ndiscover patterns and generate insights\nfrom the data they are exposed to and\nhere we have a computer as we get more\nand more to the human realm of art and\nofficial intelligence you see this guy\nsplits in two and he's inside his hidden\nnetworks and machine learning programs\ndeep learning which is a subcategory of\nmachine learning deep learning provides\nartificial intelligence the ability to\nmimic a human brain's neural network it\ncan make sense of patterns noise and\nsources of confusion in the data let's\ntry to segregate different kinds of\nphotos using deep learning so first we\nhave our pile of photographs much more\norganized than my boxes in my closet of\nphotographs the machine goes through the\nfeatures of every photo to distinguish\nthem this is called feature extraction\nbingo figures out the different features\nin the photos and so based on those\ndifferent features labels of photos it\nsays these are landscapes these are\nportraits these are others so it\nseparates them in there if you've ever\nbeen on google photos a favorite of mine\ni go through there and i type in dog and\ni get all the images of my dog it's\npretty amazing how it's able to pull\nthose features out so when we're\nachieving artificial intelligence and\nthe deep learning let's take a closer\nlook and see just how deep learning\nworks there are a lot of models out\nthere this is the most basic model used\nthis is a neural network there are three\nmain layers in a neural network the\nphotos that we want to segregate go into\nthe input layer and so we have a picture\nof mona lisa it looks like in a couple\nof people when it goes into the first\ninput layer the arrows are drawn to like\nindividual dots each one of those white\ndots in the yellow layer or in the input\nlayer would be a pixel in the picture\nmaybe a value for that pixel so the\npicture of the mountains goes in there\nand it fills in that whole input layer\nand then the next picture of the\nnightscape goes in there the hidden\nlayers are responsible for all the\nmathematical computations or feature\nextraction on our inputs so when you see\nhere we have the two uh kind of orangish\nred layers here and there's all these\nlines in there those lines are the\nweights each one of those represents a\nusually a float number or a decimal\nnumber and then it multiplies it by the\nvalue in the input layer and you'll see\nthat as it adds all these up in the\nhidden layer each one of those dots in\nthe hidden layer then has a value based\non the sum of the weights and then it\ntakes those and puts it into another\nhidden layer and you might ask well why\ndo we have multiple hidden layers well\nthe hidden layers function as different\nalternatives to some degree so the more\nhidden layers you have the more complex\nthe data that goes in and what can they\ncan produce coming out the accuracy of\nthe predicted output generally depends\non the number of hidden layers we have\nso there we go the accuracy is based on\nhow many hidden layers we have and again\nit has to do with how complex the data\nis going in the output layer gives us\nthe segregated photos so once it adds up\nall these weights and you'll see there's\nweights also going into the output layer\nbased on those weights it'll say yes\nit's a portrait no it's a portrait yes\nit's a landscape no it's a landscape and\nthat's how we get our setup in there so\nnow we were able to label our photos\nlet's take a look and see what that\nlooks like in another domain we have\nphotograph domain now let's look at it\nin the airline ticket so let's predict\nthe airline ticket prices using machine\nlearning these are the factors based on\nwhich we're going to make the\npredictions and choosing your factors is\nso important but for right here we'll\njust go ahead and take a look what we\ngot we have airlines we have the origin\nairport the destination airport the\ndeparture date here are some historical\ndata of ticket prices to train the\nmachine so we pull in the old data this\nis what's happened over the years now\nthat our machine is trained let's give\nit new data for which it will predict\nthe prices and if you remember from our\nfour different kinds of machines we have\nmachines with memory well this is the\nmemory part it remembers all the old\ndata and then it compares what you put\nin to produce the new data to predict\nthe new prices the price is 1 000 that's\nan expensive flight of course\nif that is a us dollars if it's india i\ndon't know what the price range is on\nthat hopefully it's a good deal for\nwherever you're going so we predict the\nprices and this is kind of nice because\nif you're looking way ahead it'd be nice\nto know if you're planning a trip for\nnext year\nhow much those tickets are going to cost\nand they certainly fluctuate a lot so\nlet's take a look at the applications of\nartificial intelligence we're going to\ndive just a little deeper because we\ntalked about photos we've talked about\nairline ticket prices kind of very\nspecific you get one specific number but\nlet's look at some more things that are\nprobably more in-home more common right\nnow speaking of home this young\ngentleman is entering his room of course\nmakes a comment like we all do we walk\ninto a room this room is dark isn't it\nlet's see what happens when i enter it\nthe sensors in my room detect my\npresence and switch on the lights\nthis is an example of non-memory\nmachines okay you know it senses you it\ndoesn't have a memory whether you've\ngone in or not some of the new models\nstart running a prediction as to whether\nyou're in the room or not when you show\nup when you don't so they turn things on\nbefore you come down the stairs in the\nmorning especially if you're trying to\nsave energy you might have one of those\nfancy thermostats which starts guessing\nwhen you get up in the morning so it\ndoesn't start the heater until it knows\nyou're going to get up so here he comes\nin here and this is one of the examples\nof smart machine and that is one of the\nmany applications of artificial\nintelligence one of the things we're\ndeveloping here in our homes okay bye\nabruptly he leaves leaving his nice\nsteaming cup of coffee there on the\ntable and when he leaves the sensors\ndetect he's gone and turn off the lights\nlet's watch some tv did someone say tv\nthe sound sensors on the tv detect my\nvoice and turn on the tv sounds kind of\nstrange but with the google dongle and a\ngoogle home mini you can actually do\njust that you can ask it to play a movie\ndownstairs on your downstairs tv true\nalso with the amazon fire stick and all\nthe different artificial intelligent\nhome appliances that are coming out\npretty amazing time to be alive and in\nthis industry here you have one more\napplication of artificial intelligence\nand you can probably think of dozens of\nothers that are right now on the cutting\nedge of development so let's jump into\nmy favorite part which is a use case\npredict if a person has diabetes and in\nthe medical domain i mean if you read\nany of these they say predictive a\nperson has diabetes but in the medical\ndomain we would want to restate this as\nwhat is the risk is a person a high risk\nof diabetes should just be something on\ntheir radar to be looking out for and\nwe'll be helping out with the use case\nthere we are with a cup of coffee again\ni forgot to shave as you can see we'll\nstart with the problem statement the\nproblem statement is to predict if a\nperson has diabetes or not and we might\nstart with this prediction statement but\nif you were actually using this in a\nreal case again you would say your\nhigher risk of diabetes would be the\nproper way to present that to somebody\nif you ran their test data through here\nbut that's very domain specific which is\noutside of the problem statement as far\nas the computer programmers involved so\nwe have a look at the features these are\nthe things that have been recorded and\nthey already have this data from the\nhospitals one of them would be number of\ntimes pregnant obviously if you're a guy\nthat would be zero glucose concentration\nso these are people who've had their\nglucose measured blood pressure age age\nis a big factor an easy thing to look at\ninsulin level so if someone's on insulin\nthey probably have diabetes otherwise\nthey wouldn't be taking insulin but that\nwould affect everything else and we add\nthat in there if they're if they're\nusing insulin let's start off with the\ncode so we're going to start off by\nimporting parts of our data set and if\nwe're going to do this let's jump into\none of our favorite tools we're going to\nuse the anaconda jupiter notebook so let\nme flip over there and we'll talk just\nbriefly about that and then we'll look\nover this code so here we are in the\njupiter notebook and\nthis is an inline editor which is just\nreally cool for messing with python on\nthe fly you can do demos in it it's very\nvisual you can add pieces of code it has\ncells so you can run each cell\nindividually you can delete them but you\ncan tell the cell to be a comment so\nthat instead of running it it just skips\nover it there's all kinds of cool things\nyou can do with jupyter notebook we're\nnot going to go into that we're actually\ngoing to go with the tensorflow and you\ndo have to import all the different\nmodules in your python now if you're in\na different python ide that's fine it'll\nwork in just about any of your python\nides and i'll point out the one\ndifference in code when we get to that\nwhich is the inline for doing our graph\nand in this code we're going to go\nthrough we're going to load our data up\nwe're going to explore it we're going to\nlabel it and then we'll use the\ntensorflow and then we'll get down to\nthe end where we're going to take a look\nat how good the model is does it work so\nlet's start with the top part here and\nlet me go ahead and let's paste that\ncode in there i've added a line in at\nthe top i've added the folder because i\ndidn't put it in the same folder as the\nprogram that's running you don't need to\nworry too much about that but if you\nhave a folder issue or says file doesn't\nexist you probably have it in the wrong\nfolder or you need to add the folder\npath and then we're going to import\npandas and let me just one of the cool\nthings since it's in internet chrome we\ncan just do that control plus and zoom\nright in there and we have the import\npandas as pd so go ahead and draw a line\nof there you can see that the pandas as\npd add a little drawing thing in there\nto make it easier to see pandas is a\ndata set it's a really nice package you\ncan add into your python usually it's\ndone as pandas as pd that's very common\nto see the pd here let's circle that\nit's basically like an excel spreadsheet\nit adds columns it adds headers it adds\na lot of functionality to look at your\ndata and the first thing we're going to\ndo with that is we're going to come down\nhere and we're going to read and this is\na csv it's a csv file you can open up\nthe file on your computer if you want if\nyou need access to the file you can\neither search it and download it from\nthe main thing or type a note in down\nbelow on the youtube video and simply\nlearn will help you get that file also\nand that's true of any questions you\nhave on this you can add comments down\nthere and somebody at simplylearn\nactually keeps an eye on that and we'll\ntry to answer those questions for you i\nput in the full path you don't have to\nif you have your data files saved in the\nsame folder you're running your program\nin and this is just a csv file comma\nseparated variables and with the pandas\nwe can read it in there and we're going\nto give it put it right in a variable\ncalled diabetes and then finally we take\ndiabetes and you'll see diabetes.head\nthis is a pandas command and it's really\nnice because it just displays the data\nfor us let me go ahead and erase that\nand so we go up to the run button up\nhere in our jupyter notebook which runs\nthe script in this that's a cell we're\nin and you can see with thediabetes.head\nsince it's a pandas data frame it prints\neverything out nice and neat for us this\nis really great and if i go ahead and do\na control minus i can get it all to fit\non the same screen and this is the first\nfive lines when you do the head of the\ndata just prints out the first five\nlines in programming of course we start\nwith zero so we have zero one two three\nand four there we go we have yeah here\nwe go we start with zero we have zero\none two three and four we have our\ntitles going across the top and of\ncourse the first column is number of\npregnancies glucose concentration\nfor the second one blood pressure\nmeasurements of triceps as we keep going\nyou'll see you can guess what most of\nthese things are group i'm not sure this\nis probably the test group i didn't look\nit up to see specifically what that is\nanytime you start exploring data and for\nthis example we don't really need to get\ntoo much in detail you want to know the\ndomain what does this information mean\nare we duplicating information going in\nthat's beyond the scope of this for\nright now though we're just going to\nlook at this data and we're going to\ntake apart the different pieces of this\ndata so let's jump in there and take a\nlook at what the next set of code is so\nin our next setup or our next step we\ngot to start looking at cleaning the\ndata we got to start looking at these\ndifferent columns and how are we going\nto bring them in which columns are what\ni'm going to jump ahead a little bit and\nalso as we look at the columns we're\ngoing to do our import our tensorflow as\ntf that's a common import that's our\ntensorflow model tensorflow was\ndeveloped by google and then they put it\ninto open source so that it's free for\neverybody to use which is always a nice\nthing so let's take a look at what these\ntwo steps look like in our jupiter\nnotebook so let's paste this code in\nhere and this is something that happens\nwhen you're messing with data is you'll\nrepeat yourself numerous times we\nalready have diabetes head so i'm going\nto put the little pound sign which tells\npython that this is just going to be a\ncomment we're not going to run it a\nsecond time in here we have diabetes dot\ncolumns and then diabetes columns to\nnorm equals diabetes columns to\nnorm.apply lambda x let's talk about\nthat but let me first run that and let's\nsee that comes out with that and then\nlet's put the next set of code in also\nand i'm going to run that let me just\nhit the run button it doesn't really\nhave an output but we did a lot of stuff\nhere so let's go over what we did on\nthis so i've turned on my drawing\nimplement to help go through all this\nthere's a lot going on here the first\nthing is we have all of our columns up\nhere all of our column names let me just\nhighlight that and draw a circle around\nthat like we did earlier and we want to\nlook at just specific columns and we're\ngoing to start let me change the color\non this so it really sticks out i'll use\nlike a blue i'm going to look at these\ncolumns and we're not going to do age\nclass or group we're going to look at\nthose in a different way and i'll\nexplain in a little bit what that's\nabout so we're looking at number of\npregnancies\nuh glu basically anything that can be\nread as a float number and you might say\nage could be read as a float number\nwe're going to address that differently\nbecause when you're doing statistics we\nusually take the ages and we group them\ninto buckets and we'll talk about that\nand so we're going to take these columns\nand we're going to do what they call\nnormalize them call them to normalize\nwhat is normalize if you're using the sk\nlearn module one of their neural\nnetworks they call it scaling or scalar\nthis is in all of these neural networks\nwhat happens is if i have two pieces of\ndata and let's say\none of them is in this case zero to six\nand one of them is in insulin level is\nzero to maybe point two would be a very\nhigh level i don't know what they\nactually go to a neural network we'll\nlook at this six and it'll go zero to\nsix and as you get into zero six here's\nan eight even a higher number it will\nweight those heavier and so it'll skew\nthe results based more on the number of\npregnancies than based on the insulin or\nbased on the blood pressure so we want\nto level the playing field we want these\nvalues to all be in the same area we do\nthat by normalizing it here and we use a\nlambda function this is always a kind of\na fun thing we take the diabetes it's a\npanda set up and let me just erase all\nthat so we can go down here put it back\nto red and we take our diabetes which is\na panda data set and we only want to\nlook at the columns to normalize because\nthat's what we built we built a list of\nthose columns and we're going to apply\na lambda function and you'll see lambda\nand all kinds of python programming it\njust means it's a function we put x in\nand whatever is outside of the x over\nhere it then takes that and returns that\nvalue so\nthe new value is going to be whatever x\nis minus x min again it's a panda's data\nset so we can get by with that which is\nreally cool makes it easy to read so we\ntake x we look for the minimum value of\nx and then we divide that by the maximum\nvalue x minus the x min or the width and\nwhat this essentially does is if you're\ngoing from 0\nto 15\nit's going to divide by 15 and then we\nsubtract it let's make this 2 instead of\n0 or 2 20 to 115 there we go first off\nwe set this to zero so we subtract x min\nso right off the bat the minimal value\nis going to be zero and then we divide\nit by the difference here x min minus x\nmax or x max minus x min this basically\nsets all the values between zero to one\nand that's very important if we want to\nmake sure that it's not going to be a\nskew in the results if it's not going to\nweight the values one direction or the\nother zero to one that's what this is\ndoing and again there's like so many\ndifferent ways to scale our data this is\nthe most basic scale it's standard\nscaling and it's the most common and we\nspelled it out in the lambda you can\nthere's actual um modules that do that\nuh but lambda is just it's such an easy\nthing to do and you can see really see\nwhat we're doing here so now we've taken\nthese columns we've scaled them all and\nchanged them to a zero to one value we\nnow need to let the program know the\ntensorflow model that we're going to\ncreate we need to let it know what these\nthings are so to do that i create a\nvariable called number pregnancy keep it\nsimple and we've imported the tensorflow\nas tf one line of code brings our\ntensorflow in for us awesome love python\nso you get number of pregnancies in\ntf.feature column.numeric column we're\ngoing to tell it's a numeric column so\nit knows that this is a float value zero\nto one and then number underscore\npregnant so we're taking that column and\nwe've reshaped that column from zero to\none and no that doesn't mean you have a\npoint one pregnancy it just means zero\npoint one equals one or something number\npregnant so we're just mapping this data\nso tensorflow knows what to do with it\nand we go through all of these we go\nthrough all the way up to again we're\nnot doing age let me just separate h\ndown here these have all been adjusted\nage we're going to handle differently we\nstill put it as a numerical column\nbecause it is so let me just circle age\nand group we didn't even touch group yet\nwe're going to look at group and h and\nwe're going to do some special stuff\nwith that class we're going to look at\nlast why because this is whether they\nhave diabetes or not that's what we're\ntesting for so this is our history we\nknow these people have diabetes or not\nand we want to find out we want to\ncreate a model and then we want to test\nthat model predicting whether somebody\nnew has diabetes or not so here i am\nstill with my cup of coffee working away\nrefill number three let's explore both\nthe categorical group which is going to\nbe the b c and d on the end and also the\nage we're going to talk about those a\nlittle bit more and then we're going to\ncombine all those features and we'll\njump into splitting the data although\nthat's kind of the next step but we'll\nput that all together what are we doing\nwith the age and what are we doing with\nthe group down there so let's flip on\nover and take a look at our\njupiter notebook so the first thing is\nlet's put this new set of code in here\nand run it and let's talk about what\nwe're doing on this set of code in i\nactually want to go one more step\nforward on the next set of code or part\nof it there we go and i can go and just\nrun that while we have it that's fine\nlet's just scroll up a little bit here\nand let's go through what we just did\nwith this set of code if we go back up\nhere to the top part we have group b c b\nb c we learned from the header so when i\ncome down here we're going to create a\nsigned group and let me get my drawing\npad out so we're looking at this first\none up here assigned group tf feature\ncolumn categorical column with\nvocabulary list that is a mouthful this\nis saying that this is a categorical\nlist in this case we have a b c d you\nsee this a lot in tensorflow a lot of\ntimes tensorflow is used to analyze text\nor logs error logs and they're just full\nof all this information and they take\nthese in this case a b c d but in other\ncases it'd be words and they create\nnumbers out of them so it has 0 this is\none column this is another column this\nis another column this is another column\nand it's just this way of being able to\nlook at this in a different light and\nassigning them different values you\nreally don't want to assign this a float\nvalue first thought might be let's\nassign this 0 to 3 0 1 2 3 for a b c d\nbut if you did that it would try to add\n1 plus 2 to get 3 as part of its math\nand functions and that just isn't true c\ndoes not equal a plus b c is just a\ncategorical name it could have been the\nfrank group and laura's group in a bids\ngroup but it's not you know these are\nthey're not float numbers so very\nimportant you have that distinction in\nyour data the next step we're looking at\nis our map plot and we're going to do\nthis\nthis is a cool useful tool we're going\nto import matplotlibrary.pi\nplot as plt that's standard import and\nthis next line here is really important\nwe're doing the matplot library we want\nit to be inline that's because we're in\na jupyter notebook remember i told you\nbefore that if you're running this in a\ndifferent ide you might get a different\nresult\nthis is the line you need if you want to\nsee the graph on this page and then we\ndo diabetes we're going to look at just\nthe age and dot hist bins equals 20.\nwhat the heck is that well it turns out\nthat because this is remember it's a\npandas there's our pd pandas as pd\nbecause this is a pandas panda\nautomatically knows to look for the\nmatplot library and a hist just means\nit's going to be a histogram and we're\ngoing to separate it into 20 bins and\nthat's what this graph is here so when i\ntake the diabetes and i do a histogram\nof it it produces this really nice graph\nwe can see that\nat 22 most of the participants in this\nprobably around\n174 of the people that were\nrecorded were of this age bracket\nthey're right here in this this first\ncolumn here and as they get further and\nfurther down they have less and less and\nless until when you're at 80 you can\nactually see down here there's almost\nnone in a couple of these categories and\nthis is important to know because when\nyou're doing census you know the older\nthe the group is the more the people\nhave passed away so you're going to have\nthis in any of your senses as you take\nyou're always going to have a much\nlarger group in the younger crowd and\nthen it gets lower and lower as they get\nolder and i mentioned the word buckets\nhere we go we're going to create an age\nbucket we're going to put people in\nbuckets can you imagine people sitting\nin buckets kind of a funny way of\nlooking at it this just makes it easier\nfor us to separate it when i go to the\ndoctor's office i don't want to be told\nwell your age 22 this is you know you'll\nget a decent one at 22.\nhere we are back to my cup of coffee i\ntold you coffee was an underlying theme\nthese next couple steps are very\nspecific to tensorflow up until now we\nhad some tensorflow as we set the\ncategories up but you'd have to set that\nup with any model you use to make sure\nthey're set correctly they'd be set up a\nlittle differently but we run input\nfunctions and in tensorflow this allows\nfor some really cool things to happen\nand this is why tensorflow is so\npredominant in a lot of areas so let's\ntake a look at these next couple lines\nof code here we're going to create the\ninput function and we're going to go\nahead and create the model and let me go\nahead and put these codes in here i went\nahead and split it up so it's different\nlines so we can talk a little bit about\nthat and then the actual model and let\nme go ahead and run this so we can see\nwhat that looks like and in my\nparticular environment it just prints\nout a little bit of information about\nthe model not too worried about looking\nat that but we do want to take a closer\nlook at what we did here so we've\ncreated an input function and again this\nis very specific to tensorflow with the\ninput function we have our train we have\nour x equals x train and our y equals y\ntrain because we want to train it with a\nparticular information but we have these\nother settings in here these two\nsettings and the number of epics is how\nmany times it's going to go over our\ntraining model epic means large that\nmeans all the data so we're going to go\nover it a thousand times that's actually\na huge overkill for this amount of data\nusually it only needs probably about 200\nbut you know when we're putting it\ntogether and you're trying things out\nyou just kind of throw the numbers in\nthere and then you go back and fine-tune\nit sometimes the batch size is really\nimportant this is where tensorflow does\nsome really cool things if you're\nprocessing this over a huge amount of\ndata and you try to batch everything at\nonce you end up with a problem this\nmeans we're only going to read 10 lines\nat a time through our data so each one\nof those rows of testing they've done\nwe're only going to look at 10 of them\nat a time and put that through our model\nand train it and then shuffle\nself-explanatory we're just moving we're\njust randomly selecting which data and\nwhat order we go in that way if there's\nlike you know five in a row that are\nkind of weighted one way and vice versa\nit mixes them up and then finally we\ncreate our model so the model goes in\nthere and goes okay i have a\ntf.estimator.linearclassifier\nwe're going to put in the feature\ncolumns equals feature columns we\ndefined all our columns up above and\nthen we have in classes equal 2 and that\njust means we have our out result is\nzero or one you have diabetes or you\ndon't have diabetes or in this case we\nactually call it high risk of diabetes\nand then i put one more line of code in\nthere which i forgot we've set up our\nmodel we set up our feature columns now\nwe need to actually train it model.train\nyou'll see this\nso common in so many different neural\nnetwork models this is like a standard\nwhat's different though is we have to\nfeed it the function remember we created\nthis function with all this information\non it and then we have steps in uh steps\nsimilar to number of batches and batch\nsize it's more like a individual lines\nwe step through a thousand is a lot more\ncommon for steps than epics but steps is\nused you probably leave this out in this\nparticular example and let's go ahead\nand run this all together because it has\na site when we start training it we get\na different output so here we go i've\nrun it it's given me the information\nfrom when i created the model and now it\njust starts going through and we get\nthis information tensor loss equals\nglobal step all kinds of stuff going on\nhere and if you're following this it's\njust going through the steps and\ntraining it it gives you information you\ncould dig deep into here but for this\nparticular setup we're not going to go\ntoo deep on what's going on just know\nthat we've trained our model this model\nnow has the information we need in it to\nstart running predictions so as we sip\nour next um take our next step of coffee\nor maybe it's tea or\nif you're one of those strange late\nnight workers maybe it's a sip of wine\nwe go into the next step and we actually\nwant to run some predictions on here but\nwe don't want to run the training we\nwant to run the test on there we want to\ntake our test data and see what it did\nand so that's what we're going to do\nnext is we're going to run the test\nthrough and actually get some answers so\nif you were actually deploying it you\nwould pull the answers out of the data\nit's bringing back let's take a look at\nthat in our jupyter notebook so here we\ngo let's paste it in there i'm going to\ngo ahead and run it and you'll see that\nas it goes it's actually putting the\nanswers out if you remember correctly\nwell we'll walk through this here in\njust a second but it goes through and it\nruns each line and it gives you a\nprediction for each line one at a time\nand prints them out so let's take a look\nand see what that actually looks like\nlet's start with this first part we've\ncreated another function this is just\nlike the other function except for\nx equals x test and there's no y why is\nthere no y because we don't know what\nthe answer is on this yet we don't want\nto tell it the answer we wanted to guess\nwhat the answer is so we can evaluate\nthat and see how good it did on that 33\npercent of the data so this is our x\ntest batch size is 10 again so if we\nwere watching this roll down here we\nwould see that it actually processes it\n10 lines at a time it's only going to go\nthrough once it goes through all the x\ntest data one time we don't need to have\nit predict multiple times and shuffle\nequals false\nvery important we set the shuffle to\nfalse because if we were tracking this\nand actually giving people answers we\nwant to make sure it connects to the\nright person so they get the right\nresults of course we're just doing this\nto evaluate it so let's take a look down\nhere what i put out and as i scroll down\nto my jupiter notebook we have some\ninformation as far as a tensorflow\nrunning and then the actual output and\nif we look at the output we know by this\nfirst bracket in python it's an array we\nknow\nby this squiggly bracket that this is a\ndictionary so that this is a label the\ndictionary has logistic probabilities\nclass ids classes and so this whole\nfirst part let me redo that this whole\nfirst part is one\noutput and we know that because there is\nthe bracket there and there is this\nbracket here for the dictionary and it's\na dictionary of terms so if i pulled\nthis out and i looked at object 0 in\nhere i would go down to and let me just\nfind it here it is classes remember how\nwe define classes we define classes as\nour answer and so it's guessing our\ntensorflow says based on all the\ninformation you gave me i'm guessing\nthis first entry of our first test data\nis high risk diabetes uh oh go get\ntested change your diet watch what\nyou're eating you know high risk one and\nif we go down far enough we can see down\nhere is another one where classes equal\nzero i skipped a couple because they're\nall ones up here the b\nthis particular output b\nin front of the one means it's a binary\noutput it only comes out as zero or one\nand there's a lot of other information\nin here you can dig deep into tensorflow\nand explain these different numbers\nthat's way beyond the scope of what\nwe're working on today so the basics of\nit though is you get an output and we\nhave an output of whether the person has\ndiabetes or not well in this case it's\nhigh risk of diabetes or not so now that\nwe've run our predictions take a sip of\ncoffee a little short break and we say\nwell what do we need to do well we need\nto know how good was our predictions we\nneed to evaluate our model so if you're\ngoing to publish this to a company or\nsomething like that they want to know\nhow good you did let's take a look at\nwhat that looks like in the code so\nlet's paste that in here and\njust real quick go back over this by now\nthis function should look very\nthis is we're going to call it eval\ninput function it should be pretty\nstraightforward here we have our tf\nestimator inputs pandas input function\nand then we have our x test our y test\nbecause we this time we want to give it\nthe answer so it has something to see\nhow good it did on batch is 10\nprocessing 10 at a time we're only going\nonce through the data we're not\nshuffling it although it doesn't really\nmatter with this and then we're going to\ndo results equals\nmodel.evaluate and we put our evaluation\nfunction in there this should all look\nfamiliar because we're repeating the\nsame thing it's very similar with a\ncouple different changes as far as what\nwe're feeding it and the fact that we're\ndoing an evaluation let's see what that\nlooks like when we run it and we go up\nhere to our run model you'll see\nwarnings on some of these because i\ndidn't install this on its own install\nso a lot of it is just temporary files\nbecause i'm using the jupyter notebook\ninstead of setting it up on a regular\nmachine and we get our output and we'll\ngo ahead and just look at this output\nreal quick and then we'll flip over and\nfrom here you'll see that it generates\nan accuracy a baseline average loss the\nmean gives you a precision prediction it\ngives you all kinds of information on\nhere so let's flip over and see what's\nimportant and we'll look at the slide\nhere we are in this slide and this\nshould be exciting because we just about\nwrapped up our whole tensor flow and\ntensorflow is one of the more\ncomplicated models out there so give\nyourself a pat on the back for getting\nall the way through this when we look at\nthis output we have an accuracy of\n0.7165\nthat's really what we want to look at\nthat means that we have an accuracy if\nyou're just truncating it of 71 percent\nthat's quite good for our model you know\ngiven a small amount of data we came up\nwith the 71 percent of letting people\nknow they're high risk or not with\ndiabetes so we created a model that can\npredict if a person has diabetes based\non some previous records of people who\nwere diagnosed with diabetes and we've\nmanaged to have an accuracy of 71\npercent which is quite good the model\nwas implemented on python using\ntensorflow again pat yourself on the\nback because tensorflow is one of the\nmore complicated scripts out there it's\nalso one of the more diverse and useful\nones so the key takeaways today is we've\ncovered what is artificial intelligence\nwith our robot that brings us coffee and\nwe noted that we are comparing it to how\nit reacts and looks like humans very\nimportant to note that in today's world\nwhere we're at and we looked at types of\nartificial intelligence from the\nreactive machines to limited memory and\nlooking into the future of theory of\nmind and self awareness then we went in\nthere and took a look at taking photos\nand how artificial machine learning work\nwe took a glance at deep learning with\nour neural networks and how we have\nhidden layers in our input layer and our\noutput layer we then looked at a use\ncase of somebody walking into a room and\nactivating their tv using artificial\nintelligence or part of the ai category\nand finally we dug in deep and we did\nsome coding in the tensorflow in python\nwith that let's wrap it up i'd like to\nthank you for joining us today for more\ninformation visit www.simplylearn.com\nget certified get ahead again if you\nhave any questions or would like some\nverifications or or more information\nplease feel free to add a note in the\nyoutube video comment section we look\nforward to hearing from you and i wish\nyou a wonderful day\nhi there if you like this video\nsubscribe to the simply learn youtube\nchannel and click here to watch similar\nvideos turn it up and get certified\nclick here\n",
  "words": [
    "welcome",
    "artificial",
    "intelligence",
    "tutorial",
    "name",
    "richard",
    "kirschner",
    "simply",
    "learn",
    "team",
    "get",
    "certified",
    "get",
    "ahead",
    "today",
    "artificial",
    "intelligence",
    "start",
    "general",
    "concept",
    "types",
    "artificial",
    "intelligence",
    "covering",
    "four",
    "main",
    "areas",
    "ways",
    "achieving",
    "artificial",
    "intelligence",
    "general",
    "applications",
    "artificial",
    "intelligence",
    "today",
    "world",
    "finally",
    "dive",
    "use",
    "case",
    "predicting",
    "person",
    "diabetes",
    "using",
    "tensorflow",
    "python",
    "environment",
    "artificial",
    "intelligence",
    "today",
    "world",
    "probably",
    "one",
    "exciting",
    "advancements",
    "middle",
    "experiencing",
    "humans",
    "artificial",
    "intelligence",
    "robot",
    "nice",
    "little",
    "clampy",
    "hands",
    "hey",
    "call",
    "artificial",
    "intelligence",
    "creator",
    "reminding",
    "programmed",
    "supposed",
    "take",
    "care",
    "artificial",
    "intelligence",
    "branch",
    "computer",
    "science",
    "dedicated",
    "creating",
    "intelligent",
    "machines",
    "work",
    "react",
    "like",
    "humans",
    "today",
    "place",
    "artificial",
    "intelligence",
    "really",
    "want",
    "highlight",
    "fact",
    "work",
    "react",
    "like",
    "humans",
    "development",
    "artificial",
    "intelligence",
    "comparing",
    "looks",
    "like",
    "next",
    "human",
    "thanks",
    "tasks",
    "want",
    "get",
    "cup",
    "coffee",
    "poof",
    "go",
    "brings",
    "cup",
    "coffee",
    "kind",
    "robot",
    "love",
    "coffee",
    "morning",
    "see",
    "kind",
    "side",
    "theme",
    "coffee",
    "today",
    "tutorial",
    "robot",
    "able",
    "bring",
    "cup",
    "coffee",
    "seems",
    "pretty",
    "far",
    "know",
    "walking",
    "robot",
    "far",
    "think",
    "automatic",
    "coffee",
    "pots",
    "devices",
    "move",
    "object",
    "one",
    "point",
    "know",
    "anything",
    "amazon",
    "delivering",
    "packages",
    "whatever",
    "want",
    "things",
    "today",
    "world",
    "right",
    "edge",
    "makes",
    "exciting",
    "exciting",
    "topic",
    "place",
    "study",
    "let",
    "take",
    "look",
    "real",
    "general",
    "look",
    "types",
    "artificial",
    "intelligence",
    "really",
    "big",
    "picture",
    "mean",
    "drill",
    "like",
    "machine",
    "learning",
    "kinds",
    "different",
    "aspects",
    "generic",
    "level",
    "artificial",
    "intelligence",
    "hi",
    "discovered",
    "four",
    "different",
    "types",
    "come",
    "look",
    "kind",
    "einstein",
    "looking",
    "guy",
    "professor",
    "college",
    "first",
    "part",
    "really",
    "uh",
    "reactive",
    "machines",
    "around",
    "long",
    "time",
    "kind",
    "ai",
    "purely",
    "reactive",
    "hold",
    "ability",
    "form",
    "memories",
    "use",
    "past",
    "experiences",
    "make",
    "decisions",
    "machines",
    "designed",
    "specific",
    "jobs",
    "remember",
    "talked",
    "programmable",
    "coffee",
    "maker",
    "makes",
    "coffee",
    "morning",
    "remember",
    "yesterday",
    "tomorrow",
    "runs",
    "program",
    "even",
    "going",
    "back",
    "washing",
    "machines",
    "automatic",
    "load",
    "balancers",
    "around",
    "decades",
    "reactive",
    "machines",
    "program",
    "certain",
    "tasks",
    "memory",
    "functional",
    "limited",
    "memory",
    "kind",
    "right",
    "right",
    "kind",
    "ai",
    "uses",
    "past",
    "experience",
    "present",
    "data",
    "make",
    "decision",
    "cars",
    "kind",
    "limited",
    "memory",
    "ai",
    "bring",
    "cars",
    "big",
    "thing",
    "especially",
    "today",
    "market",
    "images",
    "brought",
    "videos",
    "gone",
    "use",
    "teach",
    "automatic",
    "car",
    "based",
    "limited",
    "memory",
    "limited",
    "memory",
    "means",
    "evolving",
    "new",
    "ideas",
    "actually",
    "need",
    "make",
    "change",
    "programming",
    "built",
    "memory",
    "make",
    "changes",
    "outside",
    "put",
    "new",
    "setup",
    "continually",
    "reprogramming",
    "theory",
    "mind",
    "ai",
    "machines",
    "socialize",
    "understand",
    "human",
    "emotions",
    "machines",
    "abilities",
    "yet",
    "developed",
    "course",
    "debate",
    "lot",
    "places",
    "working",
    "theory",
    "mind",
    "able",
    "cognitively",
    "understand",
    "somebody",
    "based",
    "environment",
    "facial",
    "features",
    "kinds",
    "things",
    "evolve",
    "kind",
    "reflective",
    "ability",
    "evolve",
    "finally",
    "future",
    "ai",
    "machines",
    "super",
    "intelligent",
    "sentient",
    "conscious",
    "able",
    "react",
    "much",
    "like",
    "human",
    "although",
    "flavor",
    "sure",
    "achieving",
    "artificial",
    "intelligence",
    "today",
    "world",
    "right",
    "going",
    "achieve",
    "artificial",
    "intelligence",
    "well",
    "main",
    "arena",
    "right",
    "machine",
    "learning",
    "machine",
    "learning",
    "provides",
    "artificial",
    "intelligence",
    "ability",
    "learn",
    "achieved",
    "using",
    "algorithms",
    "discover",
    "patterns",
    "generate",
    "insights",
    "data",
    "exposed",
    "computer",
    "get",
    "human",
    "realm",
    "art",
    "official",
    "intelligence",
    "see",
    "guy",
    "splits",
    "two",
    "inside",
    "hidden",
    "networks",
    "machine",
    "learning",
    "programs",
    "deep",
    "learning",
    "subcategory",
    "machine",
    "learning",
    "deep",
    "learning",
    "provides",
    "artificial",
    "intelligence",
    "ability",
    "mimic",
    "human",
    "brain",
    "neural",
    "network",
    "make",
    "sense",
    "patterns",
    "noise",
    "sources",
    "confusion",
    "data",
    "let",
    "try",
    "segregate",
    "different",
    "kinds",
    "photos",
    "using",
    "deep",
    "learning",
    "first",
    "pile",
    "photographs",
    "much",
    "organized",
    "boxes",
    "closet",
    "photographs",
    "machine",
    "goes",
    "features",
    "every",
    "photo",
    "distinguish",
    "called",
    "feature",
    "extraction",
    "bingo",
    "figures",
    "different",
    "features",
    "photos",
    "based",
    "different",
    "features",
    "labels",
    "photos",
    "says",
    "landscapes",
    "portraits",
    "others",
    "separates",
    "ever",
    "google",
    "photos",
    "favorite",
    "mine",
    "go",
    "type",
    "dog",
    "get",
    "images",
    "dog",
    "pretty",
    "amazing",
    "able",
    "pull",
    "features",
    "achieving",
    "artificial",
    "intelligence",
    "deep",
    "learning",
    "let",
    "take",
    "closer",
    "look",
    "see",
    "deep",
    "learning",
    "works",
    "lot",
    "models",
    "basic",
    "model",
    "used",
    "neural",
    "network",
    "three",
    "main",
    "layers",
    "neural",
    "network",
    "photos",
    "want",
    "segregate",
    "go",
    "input",
    "layer",
    "picture",
    "mona",
    "lisa",
    "looks",
    "like",
    "couple",
    "people",
    "goes",
    "first",
    "input",
    "layer",
    "arrows",
    "drawn",
    "like",
    "individual",
    "dots",
    "one",
    "white",
    "dots",
    "yellow",
    "layer",
    "input",
    "layer",
    "would",
    "pixel",
    "picture",
    "maybe",
    "value",
    "pixel",
    "picture",
    "mountains",
    "goes",
    "fills",
    "whole",
    "input",
    "layer",
    "next",
    "picture",
    "nightscape",
    "goes",
    "hidden",
    "layers",
    "responsible",
    "mathematical",
    "computations",
    "feature",
    "extraction",
    "inputs",
    "see",
    "two",
    "uh",
    "kind",
    "orangish",
    "red",
    "layers",
    "lines",
    "lines",
    "weights",
    "one",
    "represents",
    "usually",
    "float",
    "number",
    "decimal",
    "number",
    "multiplies",
    "value",
    "input",
    "layer",
    "see",
    "adds",
    "hidden",
    "layer",
    "one",
    "dots",
    "hidden",
    "layer",
    "value",
    "based",
    "sum",
    "weights",
    "takes",
    "puts",
    "another",
    "hidden",
    "layer",
    "might",
    "ask",
    "well",
    "multiple",
    "hidden",
    "layers",
    "well",
    "hidden",
    "layers",
    "function",
    "different",
    "alternatives",
    "degree",
    "hidden",
    "layers",
    "complex",
    "data",
    "goes",
    "produce",
    "coming",
    "accuracy",
    "predicted",
    "output",
    "generally",
    "depends",
    "number",
    "hidden",
    "layers",
    "go",
    "accuracy",
    "based",
    "many",
    "hidden",
    "layers",
    "complex",
    "data",
    "going",
    "output",
    "layer",
    "gives",
    "us",
    "segregated",
    "photos",
    "adds",
    "weights",
    "see",
    "weights",
    "also",
    "going",
    "output",
    "layer",
    "based",
    "weights",
    "say",
    "yes",
    "portrait",
    "portrait",
    "yes",
    "landscape",
    "landscape",
    "get",
    "setup",
    "able",
    "label",
    "photos",
    "let",
    "take",
    "look",
    "see",
    "looks",
    "like",
    "another",
    "domain",
    "photograph",
    "domain",
    "let",
    "look",
    "airline",
    "ticket",
    "let",
    "predict",
    "airline",
    "ticket",
    "prices",
    "using",
    "machine",
    "learning",
    "factors",
    "based",
    "going",
    "make",
    "predictions",
    "choosing",
    "factors",
    "important",
    "right",
    "go",
    "ahead",
    "take",
    "look",
    "got",
    "airlines",
    "origin",
    "airport",
    "destination",
    "airport",
    "departure",
    "date",
    "historical",
    "data",
    "ticket",
    "prices",
    "train",
    "machine",
    "pull",
    "old",
    "data",
    "happened",
    "years",
    "machine",
    "trained",
    "let",
    "give",
    "new",
    "data",
    "predict",
    "prices",
    "remember",
    "four",
    "different",
    "kinds",
    "machines",
    "machines",
    "memory",
    "well",
    "memory",
    "part",
    "remembers",
    "old",
    "data",
    "compares",
    "put",
    "produce",
    "new",
    "data",
    "predict",
    "new",
    "prices",
    "price",
    "1",
    "000",
    "expensive",
    "flight",
    "course",
    "us",
    "dollars",
    "india",
    "know",
    "price",
    "range",
    "hopefully",
    "good",
    "deal",
    "wherever",
    "going",
    "predict",
    "prices",
    "kind",
    "nice",
    "looking",
    "way",
    "ahead",
    "nice",
    "know",
    "planning",
    "trip",
    "next",
    "year",
    "much",
    "tickets",
    "going",
    "cost",
    "certainly",
    "fluctuate",
    "lot",
    "let",
    "take",
    "look",
    "applications",
    "artificial",
    "intelligence",
    "going",
    "dive",
    "little",
    "deeper",
    "talked",
    "photos",
    "talked",
    "airline",
    "ticket",
    "prices",
    "kind",
    "specific",
    "get",
    "one",
    "specific",
    "number",
    "let",
    "look",
    "things",
    "probably",
    "common",
    "right",
    "speaking",
    "home",
    "young",
    "gentleman",
    "entering",
    "room",
    "course",
    "makes",
    "comment",
    "like",
    "walk",
    "room",
    "room",
    "dark",
    "let",
    "see",
    "happens",
    "enter",
    "sensors",
    "room",
    "detect",
    "presence",
    "switch",
    "lights",
    "example",
    "machines",
    "okay",
    "know",
    "senses",
    "memory",
    "whether",
    "gone",
    "new",
    "models",
    "start",
    "running",
    "prediction",
    "whether",
    "room",
    "show",
    "turn",
    "things",
    "come",
    "stairs",
    "morning",
    "especially",
    "trying",
    "save",
    "energy",
    "might",
    "one",
    "fancy",
    "thermostats",
    "starts",
    "guessing",
    "get",
    "morning",
    "start",
    "heater",
    "knows",
    "going",
    "get",
    "comes",
    "one",
    "examples",
    "smart",
    "machine",
    "one",
    "many",
    "applications",
    "artificial",
    "intelligence",
    "one",
    "things",
    "developing",
    "homes",
    "okay",
    "bye",
    "abruptly",
    "leaves",
    "leaving",
    "nice",
    "steaming",
    "cup",
    "coffee",
    "table",
    "leaves",
    "sensors",
    "detect",
    "gone",
    "turn",
    "lights",
    "let",
    "watch",
    "tv",
    "someone",
    "say",
    "tv",
    "sound",
    "sensors",
    "tv",
    "detect",
    "voice",
    "turn",
    "tv",
    "sounds",
    "kind",
    "strange",
    "google",
    "dongle",
    "google",
    "home",
    "mini",
    "actually",
    "ask",
    "play",
    "movie",
    "downstairs",
    "downstairs",
    "tv",
    "true",
    "also",
    "amazon",
    "fire",
    "stick",
    "different",
    "artificial",
    "intelligent",
    "home",
    "appliances",
    "coming",
    "pretty",
    "amazing",
    "time",
    "alive",
    "industry",
    "one",
    "application",
    "artificial",
    "intelligence",
    "probably",
    "think",
    "dozens",
    "others",
    "right",
    "cutting",
    "edge",
    "development",
    "let",
    "jump",
    "favorite",
    "part",
    "use",
    "case",
    "predict",
    "person",
    "diabetes",
    "medical",
    "domain",
    "mean",
    "read",
    "say",
    "predictive",
    "person",
    "diabetes",
    "medical",
    "domain",
    "would",
    "want",
    "restate",
    "risk",
    "person",
    "high",
    "risk",
    "diabetes",
    "something",
    "radar",
    "looking",
    "helping",
    "use",
    "case",
    "cup",
    "coffee",
    "forgot",
    "shave",
    "see",
    "start",
    "problem",
    "statement",
    "problem",
    "statement",
    "predict",
    "person",
    "diabetes",
    "might",
    "start",
    "prediction",
    "statement",
    "actually",
    "using",
    "real",
    "case",
    "would",
    "say",
    "higher",
    "risk",
    "diabetes",
    "would",
    "proper",
    "way",
    "present",
    "somebody",
    "ran",
    "test",
    "data",
    "domain",
    "specific",
    "outside",
    "problem",
    "statement",
    "far",
    "computer",
    "programmers",
    "involved",
    "look",
    "features",
    "things",
    "recorded",
    "already",
    "data",
    "hospitals",
    "one",
    "would",
    "number",
    "times",
    "pregnant",
    "obviously",
    "guy",
    "would",
    "zero",
    "glucose",
    "concentration",
    "people",
    "glucose",
    "measured",
    "blood",
    "pressure",
    "age",
    "age",
    "big",
    "factor",
    "easy",
    "thing",
    "look",
    "insulin",
    "level",
    "someone",
    "insulin",
    "probably",
    "diabetes",
    "otherwise",
    "would",
    "taking",
    "insulin",
    "would",
    "affect",
    "everything",
    "else",
    "add",
    "using",
    "insulin",
    "let",
    "start",
    "code",
    "going",
    "start",
    "importing",
    "parts",
    "data",
    "set",
    "going",
    "let",
    "jump",
    "one",
    "favorite",
    "tools",
    "going",
    "use",
    "anaconda",
    "jupiter",
    "notebook",
    "let",
    "flip",
    "talk",
    "briefly",
    "look",
    "code",
    "jupiter",
    "notebook",
    "inline",
    "editor",
    "really",
    "cool",
    "messing",
    "python",
    "fly",
    "demos",
    "visual",
    "add",
    "pieces",
    "code",
    "cells",
    "run",
    "cell",
    "individually",
    "delete",
    "tell",
    "cell",
    "comment",
    "instead",
    "running",
    "skips",
    "kinds",
    "cool",
    "things",
    "jupyter",
    "notebook",
    "going",
    "go",
    "actually",
    "going",
    "go",
    "tensorflow",
    "import",
    "different",
    "modules",
    "python",
    "different",
    "python",
    "ide",
    "fine",
    "work",
    "python",
    "ides",
    "point",
    "one",
    "difference",
    "code",
    "get",
    "inline",
    "graph",
    "code",
    "going",
    "go",
    "going",
    "load",
    "data",
    "going",
    "explore",
    "going",
    "label",
    "use",
    "tensorflow",
    "get",
    "end",
    "going",
    "take",
    "look",
    "good",
    "model",
    "work",
    "let",
    "start",
    "top",
    "part",
    "let",
    "go",
    "ahead",
    "let",
    "paste",
    "code",
    "added",
    "line",
    "top",
    "added",
    "folder",
    "put",
    "folder",
    "program",
    "running",
    "need",
    "worry",
    "much",
    "folder",
    "issue",
    "says",
    "file",
    "exist",
    "probably",
    "wrong",
    "folder",
    "need",
    "add",
    "folder",
    "path",
    "going",
    "import",
    "pandas",
    "let",
    "one",
    "cool",
    "things",
    "since",
    "internet",
    "chrome",
    "control",
    "plus",
    "zoom",
    "right",
    "import",
    "pandas",
    "pd",
    "go",
    "ahead",
    "draw",
    "line",
    "see",
    "pandas",
    "pd",
    "add",
    "little",
    "drawing",
    "thing",
    "make",
    "easier",
    "see",
    "pandas",
    "data",
    "set",
    "really",
    "nice",
    "package",
    "add",
    "python",
    "usually",
    "done",
    "pandas",
    "pd",
    "common",
    "see",
    "pd",
    "let",
    "circle",
    "basically",
    "like",
    "excel",
    "spreadsheet",
    "adds",
    "columns",
    "adds",
    "headers",
    "adds",
    "lot",
    "functionality",
    "look",
    "data",
    "first",
    "thing",
    "going",
    "going",
    "come",
    "going",
    "read",
    "csv",
    "csv",
    "file",
    "open",
    "file",
    "computer",
    "want",
    "need",
    "access",
    "file",
    "either",
    "search",
    "download",
    "main",
    "thing",
    "type",
    "note",
    "youtube",
    "video",
    "simply",
    "learn",
    "help",
    "get",
    "file",
    "also",
    "true",
    "questions",
    "add",
    "comments",
    "somebody",
    "simplylearn",
    "actually",
    "keeps",
    "eye",
    "try",
    "answer",
    "questions",
    "put",
    "full",
    "path",
    "data",
    "files",
    "saved",
    "folder",
    "running",
    "program",
    "csv",
    "file",
    "comma",
    "separated",
    "variables",
    "pandas",
    "read",
    "going",
    "give",
    "put",
    "right",
    "variable",
    "called",
    "diabetes",
    "finally",
    "take",
    "diabetes",
    "see",
    "pandas",
    "command",
    "really",
    "nice",
    "displays",
    "data",
    "us",
    "let",
    "go",
    "ahead",
    "erase",
    "go",
    "run",
    "button",
    "jupyter",
    "notebook",
    "runs",
    "script",
    "cell",
    "see",
    "since",
    "pandas",
    "data",
    "frame",
    "prints",
    "everything",
    "nice",
    "neat",
    "us",
    "really",
    "great",
    "go",
    "ahead",
    "control",
    "minus",
    "get",
    "fit",
    "screen",
    "first",
    "five",
    "lines",
    "head",
    "data",
    "prints",
    "first",
    "five",
    "lines",
    "programming",
    "course",
    "start",
    "zero",
    "zero",
    "one",
    "two",
    "three",
    "four",
    "go",
    "yeah",
    "go",
    "start",
    "zero",
    "zero",
    "one",
    "two",
    "three",
    "four",
    "titles",
    "going",
    "across",
    "top",
    "course",
    "first",
    "column",
    "number",
    "pregnancies",
    "glucose",
    "concentration",
    "second",
    "one",
    "blood",
    "pressure",
    "measurements",
    "triceps",
    "keep",
    "going",
    "see",
    "guess",
    "things",
    "group",
    "sure",
    "probably",
    "test",
    "group",
    "look",
    "see",
    "specifically",
    "anytime",
    "start",
    "exploring",
    "data",
    "example",
    "really",
    "need",
    "get",
    "much",
    "detail",
    "want",
    "know",
    "domain",
    "information",
    "mean",
    "duplicating",
    "information",
    "going",
    "beyond",
    "scope",
    "right",
    "though",
    "going",
    "look",
    "data",
    "going",
    "take",
    "apart",
    "different",
    "pieces",
    "data",
    "let",
    "jump",
    "take",
    "look",
    "next",
    "set",
    "code",
    "next",
    "setup",
    "next",
    "step",
    "got",
    "start",
    "looking",
    "cleaning",
    "data",
    "got",
    "start",
    "looking",
    "different",
    "columns",
    "going",
    "bring",
    "columns",
    "going",
    "jump",
    "ahead",
    "little",
    "bit",
    "also",
    "look",
    "columns",
    "going",
    "import",
    "tensorflow",
    "tf",
    "common",
    "import",
    "tensorflow",
    "model",
    "tensorflow",
    "developed",
    "google",
    "put",
    "open",
    "source",
    "free",
    "everybody",
    "use",
    "always",
    "nice",
    "thing",
    "let",
    "take",
    "look",
    "two",
    "steps",
    "look",
    "like",
    "jupiter",
    "notebook",
    "let",
    "paste",
    "code",
    "something",
    "happens",
    "messing",
    "data",
    "repeat",
    "numerous",
    "times",
    "already",
    "diabetes",
    "head",
    "going",
    "put",
    "little",
    "pound",
    "sign",
    "tells",
    "python",
    "going",
    "comment",
    "going",
    "run",
    "second",
    "time",
    "diabetes",
    "dot",
    "columns",
    "diabetes",
    "columns",
    "norm",
    "equals",
    "diabetes",
    "columns",
    "lambda",
    "x",
    "let",
    "talk",
    "let",
    "first",
    "run",
    "let",
    "see",
    "comes",
    "let",
    "put",
    "next",
    "set",
    "code",
    "also",
    "going",
    "run",
    "let",
    "hit",
    "run",
    "button",
    "really",
    "output",
    "lot",
    "stuff",
    "let",
    "go",
    "turned",
    "drawing",
    "implement",
    "help",
    "go",
    "lot",
    "going",
    "first",
    "thing",
    "columns",
    "column",
    "names",
    "let",
    "highlight",
    "draw",
    "circle",
    "around",
    "like",
    "earlier",
    "want",
    "look",
    "specific",
    "columns",
    "going",
    "start",
    "let",
    "change",
    "color",
    "really",
    "sticks",
    "use",
    "like",
    "blue",
    "going",
    "look",
    "columns",
    "going",
    "age",
    "class",
    "group",
    "going",
    "look",
    "different",
    "way",
    "explain",
    "little",
    "bit",
    "looking",
    "number",
    "pregnancies",
    "uh",
    "glu",
    "basically",
    "anything",
    "read",
    "float",
    "number",
    "might",
    "say",
    "age",
    "could",
    "read",
    "float",
    "number",
    "going",
    "address",
    "differently",
    "statistics",
    "usually",
    "take",
    "ages",
    "group",
    "buckets",
    "talk",
    "going",
    "take",
    "columns",
    "going",
    "call",
    "normalize",
    "call",
    "normalize",
    "normalize",
    "using",
    "sk",
    "learn",
    "module",
    "one",
    "neural",
    "networks",
    "call",
    "scaling",
    "scalar",
    "neural",
    "networks",
    "happens",
    "two",
    "pieces",
    "data",
    "let",
    "say",
    "one",
    "case",
    "zero",
    "six",
    "one",
    "insulin",
    "level",
    "zero",
    "maybe",
    "point",
    "two",
    "would",
    "high",
    "level",
    "know",
    "actually",
    "go",
    "neural",
    "network",
    "look",
    "six",
    "go",
    "zero",
    "six",
    "get",
    "zero",
    "six",
    "eight",
    "even",
    "higher",
    "number",
    "weight",
    "heavier",
    "skew",
    "results",
    "based",
    "number",
    "pregnancies",
    "based",
    "insulin",
    "based",
    "blood",
    "pressure",
    "want",
    "level",
    "playing",
    "field",
    "want",
    "values",
    "area",
    "normalizing",
    "use",
    "lambda",
    "function",
    "always",
    "kind",
    "fun",
    "thing",
    "take",
    "diabetes",
    "panda",
    "set",
    "let",
    "erase",
    "go",
    "put",
    "back",
    "red",
    "take",
    "diabetes",
    "panda",
    "data",
    "set",
    "want",
    "look",
    "columns",
    "normalize",
    "built",
    "built",
    "list",
    "columns",
    "going",
    "apply",
    "lambda",
    "function",
    "see",
    "lambda",
    "kinds",
    "python",
    "programming",
    "means",
    "function",
    "put",
    "x",
    "whatever",
    "outside",
    "x",
    "takes",
    "returns",
    "value",
    "new",
    "value",
    "going",
    "whatever",
    "x",
    "minus",
    "x",
    "min",
    "panda",
    "data",
    "set",
    "get",
    "really",
    "cool",
    "makes",
    "easy",
    "read",
    "take",
    "x",
    "look",
    "minimum",
    "value",
    "x",
    "divide",
    "maximum",
    "value",
    "x",
    "minus",
    "x",
    "min",
    "width",
    "essentially",
    "going",
    "0",
    "15",
    "going",
    "divide",
    "15",
    "subtract",
    "let",
    "make",
    "2",
    "instead",
    "0",
    "2",
    "20",
    "115",
    "go",
    "first",
    "set",
    "zero",
    "subtract",
    "x",
    "min",
    "right",
    "bat",
    "minimal",
    "value",
    "going",
    "zero",
    "divide",
    "difference",
    "x",
    "min",
    "minus",
    "x",
    "max",
    "x",
    "max",
    "minus",
    "x",
    "min",
    "basically",
    "sets",
    "values",
    "zero",
    "one",
    "important",
    "want",
    "make",
    "sure",
    "going",
    "skew",
    "results",
    "going",
    "weight",
    "values",
    "one",
    "direction",
    "zero",
    "one",
    "like",
    "many",
    "different",
    "ways",
    "scale",
    "data",
    "basic",
    "scale",
    "standard",
    "scaling",
    "common",
    "spelled",
    "lambda",
    "actual",
    "um",
    "modules",
    "uh",
    "lambda",
    "easy",
    "thing",
    "see",
    "really",
    "see",
    "taken",
    "columns",
    "scaled",
    "changed",
    "zero",
    "one",
    "value",
    "need",
    "let",
    "program",
    "know",
    "tensorflow",
    "model",
    "going",
    "create",
    "need",
    "let",
    "know",
    "things",
    "create",
    "variable",
    "called",
    "number",
    "pregnancy",
    "keep",
    "simple",
    "imported",
    "tensorflow",
    "tf",
    "one",
    "line",
    "code",
    "brings",
    "tensorflow",
    "us",
    "awesome",
    "love",
    "python",
    "get",
    "number",
    "pregnancies",
    "column",
    "going",
    "tell",
    "numeric",
    "column",
    "knows",
    "float",
    "value",
    "zero",
    "one",
    "number",
    "underscore",
    "pregnant",
    "taking",
    "column",
    "reshaped",
    "column",
    "zero",
    "one",
    "mean",
    "point",
    "one",
    "pregnancy",
    "means",
    "zero",
    "point",
    "one",
    "equals",
    "one",
    "something",
    "number",
    "pregnant",
    "mapping",
    "data",
    "tensorflow",
    "knows",
    "go",
    "go",
    "way",
    "age",
    "let",
    "separate",
    "h",
    "adjusted",
    "age",
    "going",
    "handle",
    "differently",
    "still",
    "put",
    "numerical",
    "column",
    "let",
    "circle",
    "age",
    "group",
    "even",
    "touch",
    "group",
    "yet",
    "going",
    "look",
    "group",
    "h",
    "going",
    "special",
    "stuff",
    "class",
    "going",
    "look",
    "last",
    "whether",
    "diabetes",
    "testing",
    "history",
    "know",
    "people",
    "diabetes",
    "want",
    "find",
    "want",
    "create",
    "model",
    "want",
    "test",
    "model",
    "predicting",
    "whether",
    "somebody",
    "new",
    "diabetes",
    "still",
    "cup",
    "coffee",
    "working",
    "away",
    "refill",
    "number",
    "three",
    "let",
    "explore",
    "categorical",
    "group",
    "going",
    "b",
    "c",
    "end",
    "also",
    "age",
    "going",
    "talk",
    "little",
    "bit",
    "going",
    "combine",
    "features",
    "jump",
    "splitting",
    "data",
    "although",
    "kind",
    "next",
    "step",
    "put",
    "together",
    "age",
    "group",
    "let",
    "flip",
    "take",
    "look",
    "jupiter",
    "notebook",
    "first",
    "thing",
    "let",
    "put",
    "new",
    "set",
    "code",
    "run",
    "let",
    "talk",
    "set",
    "code",
    "actually",
    "want",
    "go",
    "one",
    "step",
    "forward",
    "next",
    "set",
    "code",
    "part",
    "go",
    "go",
    "run",
    "fine",
    "let",
    "scroll",
    "little",
    "bit",
    "let",
    "go",
    "set",
    "code",
    "go",
    "back",
    "top",
    "part",
    "group",
    "b",
    "c",
    "b",
    "b",
    "c",
    "learned",
    "header",
    "come",
    "going",
    "create",
    "signed",
    "group",
    "let",
    "get",
    "drawing",
    "pad",
    "looking",
    "first",
    "one",
    "assigned",
    "group",
    "tf",
    "feature",
    "column",
    "categorical",
    "column",
    "vocabulary",
    "list",
    "mouthful",
    "saying",
    "categorical",
    "list",
    "case",
    "b",
    "c",
    "see",
    "lot",
    "tensorflow",
    "lot",
    "times",
    "tensorflow",
    "used",
    "analyze",
    "text",
    "logs",
    "error",
    "logs",
    "full",
    "information",
    "take",
    "case",
    "b",
    "c",
    "cases",
    "words",
    "create",
    "numbers",
    "0",
    "one",
    "column",
    "another",
    "column",
    "another",
    "column",
    "another",
    "column",
    "way",
    "able",
    "look",
    "different",
    "light",
    "assigning",
    "different",
    "values",
    "really",
    "want",
    "assign",
    "float",
    "value",
    "first",
    "thought",
    "might",
    "let",
    "assign",
    "0",
    "3",
    "0",
    "1",
    "2",
    "3",
    "b",
    "c",
    "would",
    "try",
    "add",
    "1",
    "plus",
    "2",
    "get",
    "3",
    "part",
    "math",
    "functions",
    "true",
    "c",
    "equal",
    "plus",
    "b",
    "c",
    "categorical",
    "name",
    "could",
    "frank",
    "group",
    "laura",
    "group",
    "bids",
    "group",
    "know",
    "float",
    "numbers",
    "important",
    "distinction",
    "data",
    "next",
    "step",
    "looking",
    "map",
    "plot",
    "going",
    "cool",
    "useful",
    "tool",
    "going",
    "import",
    "plot",
    "plt",
    "standard",
    "import",
    "next",
    "line",
    "really",
    "important",
    "matplot",
    "library",
    "want",
    "inline",
    "jupyter",
    "notebook",
    "remember",
    "told",
    "running",
    "different",
    "ide",
    "might",
    "get",
    "different",
    "result",
    "line",
    "need",
    "want",
    "see",
    "graph",
    "page",
    "diabetes",
    "going",
    "look",
    "age",
    "dot",
    "hist",
    "bins",
    "equals",
    "heck",
    "well",
    "turns",
    "remember",
    "pandas",
    "pd",
    "pandas",
    "pd",
    "pandas",
    "panda",
    "automatically",
    "knows",
    "look",
    "matplot",
    "library",
    "hist",
    "means",
    "going",
    "histogram",
    "going",
    "separate",
    "20",
    "bins",
    "graph",
    "take",
    "diabetes",
    "histogram",
    "produces",
    "really",
    "nice",
    "graph",
    "see",
    "22",
    "participants",
    "probably",
    "around",
    "174",
    "people",
    "recorded",
    "age",
    "bracket",
    "right",
    "first",
    "column",
    "get",
    "less",
    "less",
    "less",
    "80",
    "actually",
    "see",
    "almost",
    "none",
    "couple",
    "categories",
    "important",
    "know",
    "census",
    "know",
    "older",
    "group",
    "people",
    "passed",
    "away",
    "going",
    "senses",
    "take",
    "always",
    "going",
    "much",
    "larger",
    "group",
    "younger",
    "crowd",
    "gets",
    "lower",
    "lower",
    "get",
    "older",
    "mentioned",
    "word",
    "buckets",
    "go",
    "going",
    "create",
    "age",
    "bucket",
    "going",
    "put",
    "people",
    "buckets",
    "imagine",
    "people",
    "sitting",
    "buckets",
    "kind",
    "funny",
    "way",
    "looking",
    "makes",
    "easier",
    "us",
    "separate",
    "go",
    "doctor",
    "office",
    "want",
    "told",
    "well",
    "age",
    "22",
    "know",
    "get",
    "decent",
    "one",
    "back",
    "cup",
    "coffee",
    "told",
    "coffee",
    "underlying",
    "theme",
    "next",
    "couple",
    "steps",
    "specific",
    "tensorflow",
    "tensorflow",
    "set",
    "categories",
    "set",
    "model",
    "use",
    "make",
    "sure",
    "set",
    "correctly",
    "set",
    "little",
    "differently",
    "run",
    "input",
    "functions",
    "tensorflow",
    "allows",
    "really",
    "cool",
    "things",
    "happen",
    "tensorflow",
    "predominant",
    "lot",
    "areas",
    "let",
    "take",
    "look",
    "next",
    "couple",
    "lines",
    "code",
    "going",
    "create",
    "input",
    "function",
    "going",
    "go",
    "ahead",
    "create",
    "model",
    "let",
    "go",
    "ahead",
    "put",
    "codes",
    "went",
    "ahead",
    "split",
    "different",
    "lines",
    "talk",
    "little",
    "bit",
    "actual",
    "model",
    "let",
    "go",
    "ahead",
    "run",
    "see",
    "looks",
    "like",
    "particular",
    "environment",
    "prints",
    "little",
    "bit",
    "information",
    "model",
    "worried",
    "looking",
    "want",
    "take",
    "closer",
    "look",
    "created",
    "input",
    "function",
    "specific",
    "tensorflow",
    "input",
    "function",
    "train",
    "x",
    "equals",
    "x",
    "train",
    "equals",
    "train",
    "want",
    "train",
    "particular",
    "information",
    "settings",
    "two",
    "settings",
    "number",
    "epics",
    "many",
    "times",
    "going",
    "go",
    "training",
    "model",
    "epic",
    "means",
    "large",
    "means",
    "data",
    "going",
    "go",
    "thousand",
    "times",
    "actually",
    "huge",
    "overkill",
    "amount",
    "data",
    "usually",
    "needs",
    "probably",
    "200",
    "know",
    "putting",
    "together",
    "trying",
    "things",
    "kind",
    "throw",
    "numbers",
    "go",
    "back",
    "sometimes",
    "batch",
    "size",
    "really",
    "important",
    "tensorflow",
    "really",
    "cool",
    "things",
    "processing",
    "huge",
    "amount",
    "data",
    "try",
    "batch",
    "everything",
    "end",
    "problem",
    "means",
    "going",
    "read",
    "10",
    "lines",
    "time",
    "data",
    "one",
    "rows",
    "testing",
    "done",
    "going",
    "look",
    "10",
    "time",
    "put",
    "model",
    "train",
    "shuffle",
    "moving",
    "randomly",
    "selecting",
    "data",
    "order",
    "go",
    "way",
    "like",
    "know",
    "five",
    "row",
    "kind",
    "weighted",
    "one",
    "way",
    "vice",
    "versa",
    "mixes",
    "finally",
    "create",
    "model",
    "model",
    "goes",
    "goes",
    "okay",
    "going",
    "put",
    "feature",
    "columns",
    "equals",
    "feature",
    "columns",
    "defined",
    "columns",
    "classes",
    "equal",
    "2",
    "means",
    "result",
    "zero",
    "one",
    "diabetes",
    "diabetes",
    "case",
    "actually",
    "call",
    "high",
    "risk",
    "diabetes",
    "put",
    "one",
    "line",
    "code",
    "forgot",
    "set",
    "model",
    "set",
    "feature",
    "columns",
    "need",
    "actually",
    "train",
    "see",
    "common",
    "many",
    "different",
    "neural",
    "network",
    "models",
    "like",
    "standard",
    "different",
    "though",
    "feed",
    "function",
    "remember",
    "created",
    "function",
    "information",
    "steps",
    "uh",
    "steps",
    "similar",
    "number",
    "batches",
    "batch",
    "size",
    "like",
    "individual",
    "lines",
    "step",
    "thousand",
    "lot",
    "common",
    "steps",
    "epics",
    "steps",
    "used",
    "probably",
    "leave",
    "particular",
    "example",
    "let",
    "go",
    "ahead",
    "run",
    "together",
    "site",
    "start",
    "training",
    "get",
    "different",
    "output",
    "go",
    "run",
    "given",
    "information",
    "created",
    "model",
    "starts",
    "going",
    "get",
    "information",
    "tensor",
    "loss",
    "equals",
    "global",
    "step",
    "kinds",
    "stuff",
    "going",
    "following",
    "going",
    "steps",
    "training",
    "gives",
    "information",
    "could",
    "dig",
    "deep",
    "particular",
    "setup",
    "going",
    "go",
    "deep",
    "going",
    "know",
    "trained",
    "model",
    "model",
    "information",
    "need",
    "start",
    "running",
    "predictions",
    "sip",
    "next",
    "um",
    "take",
    "next",
    "step",
    "coffee",
    "maybe",
    "tea",
    "one",
    "strange",
    "late",
    "night",
    "workers",
    "maybe",
    "sip",
    "wine",
    "go",
    "next",
    "step",
    "actually",
    "want",
    "run",
    "predictions",
    "want",
    "run",
    "training",
    "want",
    "run",
    "test",
    "want",
    "take",
    "test",
    "data",
    "see",
    "going",
    "next",
    "going",
    "run",
    "test",
    "actually",
    "get",
    "answers",
    "actually",
    "deploying",
    "would",
    "pull",
    "answers",
    "data",
    "bringing",
    "back",
    "let",
    "take",
    "look",
    "jupyter",
    "notebook",
    "go",
    "let",
    "paste",
    "going",
    "go",
    "ahead",
    "run",
    "see",
    "goes",
    "actually",
    "putting",
    "answers",
    "remember",
    "correctly",
    "well",
    "walk",
    "second",
    "goes",
    "runs",
    "line",
    "gives",
    "prediction",
    "line",
    "one",
    "time",
    "prints",
    "let",
    "take",
    "look",
    "see",
    "actually",
    "looks",
    "like",
    "let",
    "start",
    "first",
    "part",
    "created",
    "another",
    "function",
    "like",
    "function",
    "except",
    "x",
    "equals",
    "x",
    "test",
    "know",
    "answer",
    "yet",
    "want",
    "tell",
    "answer",
    "wanted",
    "guess",
    "answer",
    "evaluate",
    "see",
    "good",
    "33",
    "percent",
    "data",
    "x",
    "test",
    "batch",
    "size",
    "10",
    "watching",
    "roll",
    "would",
    "see",
    "actually",
    "processes",
    "10",
    "lines",
    "time",
    "going",
    "go",
    "goes",
    "x",
    "test",
    "data",
    "one",
    "time",
    "need",
    "predict",
    "multiple",
    "times",
    "shuffle",
    "equals",
    "false",
    "important",
    "set",
    "shuffle",
    "false",
    "tracking",
    "actually",
    "giving",
    "people",
    "answers",
    "want",
    "make",
    "sure",
    "connects",
    "right",
    "person",
    "get",
    "right",
    "results",
    "course",
    "evaluate",
    "let",
    "take",
    "look",
    "put",
    "scroll",
    "jupiter",
    "notebook",
    "information",
    "far",
    "tensorflow",
    "running",
    "actual",
    "output",
    "look",
    "output",
    "know",
    "first",
    "bracket",
    "python",
    "array",
    "know",
    "squiggly",
    "bracket",
    "dictionary",
    "label",
    "dictionary",
    "logistic",
    "probabilities",
    "class",
    "ids",
    "classes",
    "whole",
    "first",
    "part",
    "let",
    "redo",
    "whole",
    "first",
    "part",
    "one",
    "output",
    "know",
    "bracket",
    "bracket",
    "dictionary",
    "dictionary",
    "terms",
    "pulled",
    "looked",
    "object",
    "0",
    "would",
    "go",
    "let",
    "find",
    "classes",
    "remember",
    "define",
    "classes",
    "define",
    "classes",
    "answer",
    "guessing",
    "tensorflow",
    "says",
    "based",
    "information",
    "gave",
    "guessing",
    "first",
    "entry",
    "first",
    "test",
    "data",
    "high",
    "risk",
    "diabetes",
    "uh",
    "oh",
    "go",
    "get",
    "tested",
    "change",
    "diet",
    "watch",
    "eating",
    "know",
    "high",
    "risk",
    "one",
    "go",
    "far",
    "enough",
    "see",
    "another",
    "one",
    "classes",
    "equal",
    "zero",
    "skipped",
    "couple",
    "ones",
    "b",
    "particular",
    "output",
    "b",
    "front",
    "one",
    "means",
    "binary",
    "output",
    "comes",
    "zero",
    "one",
    "lot",
    "information",
    "dig",
    "deep",
    "tensorflow",
    "explain",
    "different",
    "numbers",
    "way",
    "beyond",
    "scope",
    "working",
    "today",
    "basics",
    "though",
    "get",
    "output",
    "output",
    "whether",
    "person",
    "diabetes",
    "well",
    "case",
    "high",
    "risk",
    "diabetes",
    "run",
    "predictions",
    "take",
    "sip",
    "coffee",
    "little",
    "short",
    "break",
    "say",
    "well",
    "need",
    "well",
    "need",
    "know",
    "good",
    "predictions",
    "need",
    "evaluate",
    "model",
    "going",
    "publish",
    "company",
    "something",
    "like",
    "want",
    "know",
    "good",
    "let",
    "take",
    "look",
    "looks",
    "like",
    "code",
    "let",
    "paste",
    "real",
    "quick",
    "go",
    "back",
    "function",
    "look",
    "going",
    "call",
    "eval",
    "input",
    "function",
    "pretty",
    "straightforward",
    "tf",
    "estimator",
    "inputs",
    "pandas",
    "input",
    "function",
    "x",
    "test",
    "test",
    "time",
    "want",
    "give",
    "answer",
    "something",
    "see",
    "good",
    "batch",
    "10",
    "processing",
    "10",
    "time",
    "going",
    "data",
    "shuffling",
    "although",
    "really",
    "matter",
    "going",
    "results",
    "equals",
    "put",
    "evaluation",
    "function",
    "look",
    "familiar",
    "repeating",
    "thing",
    "similar",
    "couple",
    "different",
    "changes",
    "far",
    "feeding",
    "fact",
    "evaluation",
    "let",
    "see",
    "looks",
    "like",
    "run",
    "go",
    "run",
    "model",
    "see",
    "warnings",
    "install",
    "install",
    "lot",
    "temporary",
    "files",
    "using",
    "jupyter",
    "notebook",
    "instead",
    "setting",
    "regular",
    "machine",
    "get",
    "output",
    "go",
    "ahead",
    "look",
    "output",
    "real",
    "quick",
    "flip",
    "see",
    "generates",
    "accuracy",
    "baseline",
    "average",
    "loss",
    "mean",
    "gives",
    "precision",
    "prediction",
    "gives",
    "kinds",
    "information",
    "let",
    "flip",
    "see",
    "important",
    "look",
    "slide",
    "slide",
    "exciting",
    "wrapped",
    "whole",
    "tensor",
    "flow",
    "tensorflow",
    "one",
    "complicated",
    "models",
    "give",
    "pat",
    "back",
    "getting",
    "way",
    "look",
    "output",
    "accuracy",
    "really",
    "want",
    "look",
    "means",
    "accuracy",
    "truncating",
    "71",
    "percent",
    "quite",
    "good",
    "model",
    "know",
    "given",
    "small",
    "amount",
    "data",
    "came",
    "71",
    "percent",
    "letting",
    "people",
    "know",
    "high",
    "risk",
    "diabetes",
    "created",
    "model",
    "predict",
    "person",
    "diabetes",
    "based",
    "previous",
    "records",
    "people",
    "diagnosed",
    "diabetes",
    "managed",
    "accuracy",
    "71",
    "percent",
    "quite",
    "good",
    "model",
    "implemented",
    "python",
    "using",
    "tensorflow",
    "pat",
    "back",
    "tensorflow",
    "one",
    "complicated",
    "scripts",
    "also",
    "one",
    "diverse",
    "useful",
    "ones",
    "key",
    "takeaways",
    "today",
    "covered",
    "artificial",
    "intelligence",
    "robot",
    "brings",
    "us",
    "coffee",
    "noted",
    "comparing",
    "reacts",
    "looks",
    "like",
    "humans",
    "important",
    "note",
    "today",
    "world",
    "looked",
    "types",
    "artificial",
    "intelligence",
    "reactive",
    "machines",
    "limited",
    "memory",
    "looking",
    "future",
    "theory",
    "mind",
    "self",
    "awareness",
    "went",
    "took",
    "look",
    "taking",
    "photos",
    "artificial",
    "machine",
    "learning",
    "work",
    "took",
    "glance",
    "deep",
    "learning",
    "neural",
    "networks",
    "hidden",
    "layers",
    "input",
    "layer",
    "output",
    "layer",
    "looked",
    "use",
    "case",
    "somebody",
    "walking",
    "room",
    "activating",
    "tv",
    "using",
    "artificial",
    "intelligence",
    "part",
    "ai",
    "category",
    "finally",
    "dug",
    "deep",
    "coding",
    "tensorflow",
    "python",
    "let",
    "wrap",
    "like",
    "thank",
    "joining",
    "us",
    "today",
    "information",
    "visit",
    "get",
    "certified",
    "get",
    "ahead",
    "questions",
    "would",
    "like",
    "verifications",
    "information",
    "please",
    "feel",
    "free",
    "add",
    "note",
    "youtube",
    "video",
    "comment",
    "section",
    "look",
    "forward",
    "hearing",
    "wish",
    "wonderful",
    "day",
    "hi",
    "like",
    "video",
    "subscribe",
    "simply",
    "learn",
    "youtube",
    "channel",
    "click",
    "watch",
    "similar",
    "videos",
    "turn",
    "get",
    "certified",
    "click"
  ],
  "keywords": [
    "artificial",
    "intelligence",
    "learn",
    "get",
    "ahead",
    "today",
    "start",
    "types",
    "four",
    "main",
    "world",
    "finally",
    "use",
    "case",
    "person",
    "diabetes",
    "using",
    "tensorflow",
    "python",
    "probably",
    "one",
    "exciting",
    "humans",
    "robot",
    "nice",
    "little",
    "call",
    "take",
    "computer",
    "machines",
    "work",
    "like",
    "really",
    "want",
    "looks",
    "next",
    "human",
    "cup",
    "coffee",
    "go",
    "kind",
    "morning",
    "see",
    "able",
    "pretty",
    "far",
    "know",
    "point",
    "things",
    "right",
    "makes",
    "let",
    "look",
    "real",
    "picture",
    "mean",
    "machine",
    "learning",
    "kinds",
    "different",
    "level",
    "come",
    "looking",
    "first",
    "part",
    "uh",
    "reactive",
    "around",
    "time",
    "ai",
    "ability",
    "make",
    "specific",
    "remember",
    "program",
    "going",
    "back",
    "memory",
    "limited",
    "data",
    "thing",
    "based",
    "means",
    "new",
    "actually",
    "need",
    "put",
    "setup",
    "course",
    "lot",
    "somebody",
    "features",
    "much",
    "sure",
    "well",
    "two",
    "hidden",
    "networks",
    "deep",
    "neural",
    "network",
    "try",
    "photos",
    "goes",
    "feature",
    "google",
    "models",
    "model",
    "three",
    "layers",
    "input",
    "layer",
    "couple",
    "people",
    "would",
    "maybe",
    "value",
    "whole",
    "lines",
    "weights",
    "usually",
    "float",
    "number",
    "adds",
    "another",
    "might",
    "function",
    "accuracy",
    "output",
    "many",
    "gives",
    "us",
    "also",
    "say",
    "domain",
    "ticket",
    "predict",
    "prices",
    "predictions",
    "important",
    "train",
    "give",
    "good",
    "way",
    "common",
    "room",
    "comment",
    "whether",
    "running",
    "prediction",
    "turn",
    "knows",
    "tv",
    "jump",
    "read",
    "risk",
    "high",
    "something",
    "problem",
    "statement",
    "test",
    "times",
    "zero",
    "age",
    "insulin",
    "add",
    "code",
    "set",
    "jupiter",
    "notebook",
    "flip",
    "talk",
    "cool",
    "run",
    "jupyter",
    "import",
    "graph",
    "top",
    "paste",
    "line",
    "folder",
    "file",
    "pandas",
    "pd",
    "columns",
    "answer",
    "prints",
    "minus",
    "column",
    "pregnancies",
    "group",
    "information",
    "step",
    "bit",
    "tf",
    "steps",
    "equals",
    "lambda",
    "x",
    "buckets",
    "normalize",
    "six",
    "results",
    "values",
    "panda",
    "min",
    "0",
    "2",
    "create",
    "categorical",
    "b",
    "c",
    "numbers",
    "bracket",
    "particular",
    "created",
    "training",
    "batch",
    "10",
    "classes",
    "answers",
    "percent",
    "dictionary"
  ]
}