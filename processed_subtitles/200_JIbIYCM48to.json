{
  "text": "Amazon web services launched in 2006\nwith a total of three products storage\nbuckets compute instances and a\nmessaging queue today it offers a\nmind-numbing 200 and something services\nand what's most confusing is that many\nof them appear to do almost the exact\nsame thing it's kind of like shopping at\na big grocery store where you have\ndifferent aisles of product categories\nfilled with things to buy that meet the\nneeds of virtually every developer on\nthe planet in today's video we'll walk\ndown these aisles to gain an\nunderstanding of over 50 different AWS\nproducts so first let's start with a few\nthat are above my pay grade that you may\nnot know exist if you're building robots\nyou can use robomaker to simulate and\ntest your robots at scale then once your\nrobots are in people's homes you can use\niot core to collect data from them\nupdate their software and manage them\nremotely if you happen to have a\nsatellite orbiting Earth you can tap\ninto Amazon's Global Network of antennas\nto connect data through its ground\nstation service and if you want to start\nexperimenting and researching the future\nof computing you can use bracket to\ninteract with a quantum computer but\nmost developers go to the cloud to solve\nmore practical problems and for that\nlet's head to the compute aisle one of\nthe original AWS products was elastic\ncompute Cloud it's one of the most\nfundamental building blocks on the\nplatform and allows you to create a\nvirtual computer in the cloud choose\nyour operating system memory and\ncomputing power then you can rent that\nspace in the cloud like you're renting\nan apartment that you pay for by the\nsecond a common use case is to use an\ninstance as a server for web application\nbut one problem is that as your app\ngrows you'll likely need to distribute\ntrack traffic across multiple instances\nin 2009 Amazon introduced elastic load\nbalancing which allowed developers to\ndistribute traffic to multiple instances\nautomatically in addition the cloudwatch\nservice can collect logs and metrics\nfrom each individual instance the data\ncollected from cloudwatch can then be\npassed off to autoscale in which you\ndefine policies that create new\ninstances as they become needed based on\nthe traffic and utilization of your\ncurrent infrastructure these tools were\nrevolutionary at the time but developers\nstill wanted an easier way to get things\ndone and that's where elastic beanock\ncomes in most developers in 2011 just\nwanted to deploy a Ruby on Rails app\nelastic beanock made that much easier by\nproviding an additional layer of\nabstraction on top of ec2 and other\nautoscaling features choose a template\ndeploy your code and let all the\nautoscaling stuff happen automatically\nthis is often called a platform as a\nservice but in some cases it's still too\ncomplicated if you don't care about the\nunderlying infrastructure whatsoever and\njust want to deploy a WordPress site\nlight sale is alternative option where\nyou can point and click at what you want\nto deploy and worry even less about the\nunderlying configuration in all these\ncases you are deploying a static server\nthat is always running in the cloud but\nmany Computing jobs are ephemeral which\nmeans they don't rely on any persistent\nState on the server so why bother\ndeploying a server for code like that in\n2014 Lambda came out which are functions\nas a service or serverless Computing\nwith Lambda you simply upload your code\nthen choose an event that decides when\nthat code should run traffic scaling and\nnetor networking are all things that\nhappen entirely in the background and\nunlike a dedicated server you only pay\nfor the exact number of request and\nComputing time that you use now if you\ndon't like writing your own code you can\nuse the serverless application\nrepository to find pre-built functions\nthat you can deploy with the click of a\nbutton but what if you're a huge\nEnterprise with a bunch of its own\nservers Outpost is a way to rent AWS\napis on your own infrastructure without\nneeding to throw your old servers in the\ngarbage in other cases you may want to\ninteract with AWS from remote or extreme\nenvironment like if you're a scientist\nin the Arctic snow devices are like\nlittle mini data centers that can work\nwithout internet in hostile environments\nso that gives us some fundamental ways\nto compute things but many apps today\nare standardized with Docker containers\nallowing them to run on multiple\ndifferent clouds or Computing\nenvironments with very little effort to\nrun a container you first need to create\na Docker image and store it somewhere\nelastic container registry allows you to\nupload an image allowing other tools\nlike elastic container service to pull\nit back down and run it ECS is an API\nfor starting stopping and allocating\nvirtual machines to your containers and\nallows you to connect them to other\nproducts like load balancers some\ncompanies may want more control over how\ntheir app scales in which case eks is a\ntool for running kubernetes but in other\ncases you may want your containers to\nbehave in a more automated way fargate\nis a tool that will make your containers\nbehave like serverless functions\nremoving the need to allocate ec2\ninstances for your containers but if\nyou're building an application and\nalready have it containerized the\neasiest way to deploy it to AWS is app\nRunner this is a new product in 2021\nwhere you simply point it to a container\nimage while it handles all the\norchestration and scaling behind the\nscenes but running an application is\nonly half the battle we also need to\nstore data in the cloud simple storage\nservice or S3 was the very first product\noffered by AWS it can store any type of\nfile or object like an image or video\nand it's based on the same\ninfrastructure as Amazon's e-commerce\nsite it's great for general purpose file\nstorage but if you don't access your\nfiles very often you can archive them in\nGlacier which has a higher latency but a\nmuch lower cost on the other end of the\nspectrum you may need storage that is\nextremely fast and can handle a lot of\nthroughput elastic block storage is\nideal for applications that have\nintensive data processing requirements\nbut requires more manual configuration\nby the developer now if you want\nsomething that's highly performant and\nalso fully managed elastic file system\nprovides all the bells and whistles but\nat a much higher cost in addition to raw\nfiles developers also need to store\nstructured data for their end users and\nthat brings us to the database aisle\nwhich has a lot of different products to\nchoose from the first ever database on\nAWS was simple DB a general purpose\nnosql database but it tends to be a\nlittle too simple for most people\neverybody knows you never go full R time\nit was followed up a few years later\nwith Dynamo DB which is a document\ndatabase that's very easy to scale\nhorizontally it's inexpensive and\nprovides fast read performance but it\nisn't very good at modeling relational\ndata if you're familiar with mongodb\nanother document database option is\ndocument DB it's a controversial option\nthat's technically not mongodb that has\na one toone mapping of the mongod DB API\nto get around restrictive open source\nlicensing speaking of which Amazon also\ndid a similar thing with elastic search\nwhich itself is a great option if you\nwant to build something like a fulltech\nsearch engine but the majority of\ndevelopers out there will opt for a\ntraditional relational SQL database\nAmazon relational database service RDS\nsupports a variety of different SQL\nflavors and can fully manage things like\nbackups patching and scale but Amazon\nalso offers its own proprietary flavor\nof SQL called Aurora it's compatible\nwith postgress or MySQL and can be\noperated with better performance at a\nlower cost in addition Aurora offers a\nnew serverless option that makes it even\neasier to scale and you only pay for the\nactual time that the database is in use\nrelational databases are a great general\npurpose option but they're not the only\noption Neptune is a graph database that\ncan achieve better performance on highly\nconnected data sets like a social graph\nor recommendation engine if your current\ndatabase is too slow you may want to\nbring in elastic cache which is a fully\nmanaged version of redis in inmemory\ndatabase that delivers data to your end\nusers with extremely low latency if you\nwork with time series data like the\nstock market for example you might\nbenefit from time stream a Time series\ndatabase with built-in functions for\ntime based queries and additional\nfeatures for analytics yet another\noption is the Quantum Ledger database\nwhich allows you to build an immutable\nset of cryptographically signed\ntransactions very similar to\ndecentralized blockchain technology now\nlet's shift gears and talk about\nanalytics to analyze data you first need\na place to store it and a popular option\nfor doing that is red shift which is a\ndata warehouse that tries to get you to\nshift away from Oracle warehouses are\noften used by big Enterprises to dump\nmultiple data sources from the business\nwhere they can be analyzed together when\nall your data is in one place it's\neasier to generate meing meanful\nanalytics and run machine learning on it\ndata in a warehouse is structured so it\ncan be queried but if you need a place\nto put a large amount of unstructured\ndata you can use AWS Lake formation\nwhich is a tool for creating data lakes\nor repositories that store a large\namount of unstructured data which can be\nused in addition to data warehouses to\nquery a larger variety of data sources\nif you want to analyze real-time data\nyou can use Kinesis to capture real-time\nstreams from your infrastructure then\nvisualize them in your favorite business\nand elligence tool or you can use a\nstream processing framework like Apache\nspark that runs on elastic map reduce\nwhich itself is a service that allows\nyou to operate on massive data sets\nefficiently with a parallel distributed\nalgorithm now if you don't want to use\nKinesis for streaming data a popular\nalternative is Apache kofka it's open\nsource and Amazon msk is a fully managed\nservice to get you started but for the\naverage developer all this data\nprocessing may be a little too\ncomplicated glue is a serverless product\nthat makes it much easier to extract\ntransform and load your data it can\nautomatically connect to other data\nsources on AWS like Aurora red shift and\nS3 and has a tool called glue studio so\nyou can create jobs without having to\nwrite any actual source code but one of\nthe biggest advantages of collecting\nmassive amounts of data is that you can\nuse it to help predict the future and\nAWS has a bunch of tools in the machine\nlearning aisle to make that process\neasier but first if you don't have any\nhighquality data of your own you can use\nthe data exchange to purchase And\nsubscribe rbe to data from third party\nsources once you have some data in the\ncloud you can use sag maker to connect\nto it and start building machine\nlearning models with tensor flow or P\ntorch it operates on multiple levels to\nmake machine learning easier and\nprovides a managed Jupiter notebook that\ncan connect to a GPU instance to train a\nmachine learning model then deploy it\nsomewhere useful that's cool but\nbuilding your own ml models from scratch\nis still extremely difficult if you need\nto do image analysis you may as well\njust use the recognition API it can\nclassify all kinds of objects and images\nand is likely way better than anything\nthat you would build on your own or if\nyou want to build a conversational bot\nyou might use Lex which runs on the same\ntechnology that powers Alexa devices or\nif you just want to have fun and learn\nhow machine Learning Works you might buy\na deep raser device which is an actual\nRas car that you can drive with your own\nmachine learning code now that's a\npretty amazing way to get people to use\nyour Cloud platform but let's change\ndirection and look at a few other\nessential tools that are used by a wide\nvariety of Developers for security we\nhave IM where you can can create rules\nand determine who has access to what on\nyour AWS account if you're building a\nweb or mobile app where users can log\ninto an account Cognito is a tool that\nenables them to log in with a variety of\ndifferent authentication methods and\nmanages the user sessions for you then\nonce you have a few users logged into\nyour app you may want to send them push\nnotifications SNS is a tool that can get\nthat job done or maybe you want to send\nemails to your users SES is the tool for\nthat now that you know about all these\ntools you're going to want an organized\nway to provision them cloud formation is\na way to create templates based on your\ninfrastructure in yaml or Json allowing\nyou to enable hundreds of different\nservices with the single click of a\nbutton from there you'll likely want to\ninteract with those services from a\nfront-end application like iOS Android\nor the web amplify provides sdks that\ncan connect to your infrastructure from\nJavaScript Frameworks and other\nfront-end applications now the final\nthing to remember is that all of this is\ngoing to cost you a ton of money which\ngoes directly to getting Jeff's rocket\nup so make sure to use AWS cost Explorer\nand budgets if you don't want to pay for\nthese big bul jeene Rockets that's the\nend of the video it took a ton of work\n so please like And subscribe to support\nthe channel or become a prom member at\nfireship iio to get access to more\nadvanced content about building apps in\nthe cloud thanks for watching and I will\nsee you in the next one\n\n",
  "sentences": [
    "Amazon web services launched in 2006\nwith a total of three products storage\nbuckets compute instances and a\nmessaging queue today it offers a\nmind-numbing 200 and something services\nand what's most confusing is that many\nof them appear to do almost the exact\nsame thing it's kind of like shopping at\na big grocery store where you have\ndifferent aisles of product categories\nfilled with things to buy that meet the\nneeds of virtually every developer on\nthe planet in today's video we'll walk\ndown these aisles to gain an\nunderstanding of over 50 different AWS\nproducts so first let's start with a few\nthat are above my pay grade that you may\nnot know exist if you're building robots\nyou can use robomaker to simulate and\ntest your robots at scale then once your\nrobots are in people's homes you can use\niot core to collect data from them\nupdate their software and manage them\nremotely if you happen to have a\nsatellite orbiting Earth you can tap\ninto Amazon's Global Network of antennas\nto connect data through its ground\nstation service and if you want to start\nexperimenting and researching the future\nof computing you can use bracket to\ninteract with a quantum computer but\nmost developers go to the cloud to solve\nmore practical problems and for that\nlet's head to the compute aisle one of\nthe original AWS products was elastic\ncompute Cloud it's one of the most\nfundamental building blocks on the\nplatform and allows you to create a\nvirtual computer in the cloud choose\nyour operating system memory and\ncomputing power then you can rent that\nspace in the cloud like you're renting\nan apartment that you pay for by the\nsecond a common use case is to use an\ninstance as a server for web application\nbut one problem is that as your app\ngrows you'll likely need to distribute\ntrack traffic across multiple instances\nin 2009 Amazon introduced elastic load\nbalancing which allowed developers to\ndistribute traffic to multiple instances\nautomatically in addition the cloudwatch\nservice can collect logs and metrics\nfrom each individual instance the data\ncollected from cloudwatch can then be\npassed off to autoscale in which you\ndefine policies that create new\ninstances as they become needed based on\nthe traffic and utilization of your\ncurrent infrastructure these tools were\nrevolutionary at the time but developers\nstill wanted an easier way to get things\ndone and that's where elastic beanock\ncomes in most developers in 2011 just\nwanted to deploy a Ruby on Rails app\nelastic beanock made that much easier by\nproviding an additional layer of\nabstraction on top of ec2 and other\nautoscaling features choose a template\ndeploy your code and let all the\nautoscaling stuff happen automatically\nthis is often called a platform as a\nservice but in some cases it's still too\ncomplicated if you don't care about the\nunderlying infrastructure whatsoever and\njust want to deploy a WordPress site\nlight sale is alternative option where\nyou can point and click at what you want\nto deploy and worry even less about the\nunderlying configuration in all these\ncases you are deploying a static server\nthat is always running in the cloud but\nmany Computing jobs are ephemeral which\nmeans they don't rely on any persistent\nState on the server so why bother\ndeploying a server for code like that in\n2014 Lambda came out which are functions\nas a service or serverless Computing\nwith Lambda you simply upload your code\nthen choose an event that decides when\nthat code should run traffic scaling and\nnetor networking are all things that\nhappen entirely in the background and\nunlike a dedicated server you only pay\nfor the exact number of request and\nComputing time that you use now if you\ndon't like writing your own code you can\nuse the serverless application\nrepository to find pre-built functions\nthat you can deploy with the click of a\nbutton but what if you're a huge\nEnterprise with a bunch of its own\nservers Outpost is a way to rent AWS\napis on your own infrastructure without\nneeding to throw your old servers in the\ngarbage in other cases you may want to\ninteract with AWS from remote or extreme\nenvironment like if you're a scientist\nin the Arctic snow devices are like\nlittle mini data centers that can work\nwithout internet in hostile environments\nso that gives us some fundamental ways\nto compute things but many apps today\nare standardized with Docker containers\nallowing them to run on multiple\ndifferent clouds or Computing\nenvironments with very little effort to\nrun a container you first need to create\na Docker image and store it somewhere\nelastic container registry allows you to\nupload an image allowing other tools\nlike elastic container service to pull\nit back down and run it ECS is an API\nfor starting stopping and allocating\nvirtual machines to your containers and\nallows you to connect them to other\nproducts like load balancers some\ncompanies may want more control over how\ntheir app scales in which case eks is a\ntool for running kubernetes but in other\ncases you may want your containers to\nbehave in a more automated way fargate\nis a tool that will make your containers\nbehave like serverless functions\nremoving the need to allocate ec2\ninstances for your containers but if\nyou're building an application and\nalready have it containerized the\neasiest way to deploy it to AWS is app\nRunner this is a new product in 2021\nwhere you simply point it to a container\nimage while it handles all the\norchestration and scaling behind the\nscenes but running an application is\nonly half the battle we also need to\nstore data in the cloud simple storage\nservice or S3 was the very first product\noffered by AWS it can store any type of\nfile or object like an image or video\nand it's based on the same\ninfrastructure as Amazon's e-commerce\nsite it's great for general purpose file\nstorage but if you don't access your\nfiles very often you can archive them in\nGlacier which has a higher latency but a\nmuch lower cost on the other end of the\nspectrum you may need storage that is\nextremely fast and can handle a lot of\nthroughput elastic block storage is\nideal for applications that have\nintensive data processing requirements\nbut requires more manual configuration\nby the developer now if you want\nsomething that's highly performant and\nalso fully managed elastic file system\nprovides all the bells and whistles but\nat a much higher cost in addition to raw\nfiles developers also need to store\nstructured data for their end users and\nthat brings us to the database aisle\nwhich has a lot of different products to\nchoose from the first ever database on\nAWS was simple DB a general purpose\nnosql database but it tends to be a\nlittle too simple for most people\neverybody knows you never go full R time\nit was followed up a few years later\nwith Dynamo DB which is a document\ndatabase that's very easy to scale\nhorizontally it's inexpensive and\nprovides fast read performance but it\nisn't very good at modeling relational\ndata if you're familiar with mongodb\nanother document database option is\ndocument DB it's a controversial option\nthat's technically not mongodb that has\na one toone mapping of the mongod DB API\nto get around restrictive open source\nlicensing speaking of which Amazon also\ndid a similar thing with elastic search\nwhich itself is a great option if you\nwant to build something like a fulltech\nsearch engine but the majority of\ndevelopers out there will opt for a\ntraditional relational SQL database\nAmazon relational database service RDS\nsupports a variety of different SQL\nflavors and can fully manage things like\nbackups patching and scale but Amazon\nalso offers its own proprietary flavor\nof SQL called Aurora it's compatible\nwith postgress or MySQL and can be\noperated with better performance at a\nlower cost in addition Aurora offers a\nnew serverless option that makes it even\neasier to scale and you only pay for the\nactual time that the database is in use\nrelational databases are a great general\npurpose option but they're not the only\noption Neptune is a graph database that\ncan achieve better performance on highly\nconnected data sets like a social graph\nor recommendation engine if your current\ndatabase is too slow you may want to\nbring in elastic cache which is a fully\nmanaged version of redis in inmemory\ndatabase that delivers data to your end\nusers with extremely low latency if you\nwork with time series data like the\nstock market for example you might\nbenefit from time stream a Time series\ndatabase with built-in functions for\ntime based queries and additional\nfeatures for analytics yet another\noption is the Quantum Ledger database\nwhich allows you to build an immutable\nset of cryptographically signed\ntransactions very similar to\ndecentralized blockchain technology now\nlet's shift gears and talk about\nanalytics to analyze data you first need\na place to store it and a popular option\nfor doing that is red shift which is a\ndata warehouse that tries to get you to\nshift away from Oracle warehouses are\noften used by big Enterprises to dump\nmultiple data sources from the business\nwhere they can be analyzed together when\nall your data is in one place it's\neasier to generate meing meanful\nanalytics and run machine learning on it\ndata in a warehouse is structured so it\ncan be queried but if you need a place\nto put a large amount of unstructured\ndata you can use AWS Lake formation\nwhich is a tool for creating data lakes\nor repositories that store a large\namount of unstructured data which can be\nused in addition to data warehouses to\nquery a larger variety of data sources\nif you want to analyze real-time data\nyou can use Kinesis to capture real-time\nstreams from your infrastructure then\nvisualize them in your favorite business\nand elligence tool or you can use a\nstream processing framework like Apache\nspark that runs on elastic map reduce\nwhich itself is a service that allows\nyou to operate on massive data sets\nefficiently with a parallel distributed\nalgorithm now if you don't want to use\nKinesis for streaming data a popular\nalternative is Apache kofka it's open\nsource and Amazon msk is a fully managed\nservice to get you started but for the\naverage developer all this data\nprocessing may be a little too\ncomplicated glue is a serverless product\nthat makes it much easier to extract\ntransform and load your data it can\nautomatically connect to other data\nsources on AWS like Aurora red shift and\nS3 and has a tool called glue studio so\nyou can create jobs without having to\nwrite any actual source code but one of\nthe biggest advantages of collecting\nmassive amounts of data is that you can\nuse it to help predict the future and\nAWS has a bunch of tools in the machine\nlearning aisle to make that process\neasier but first if you don't have any\nhighquality data of your own you can use\nthe data exchange to purchase And\nsubscribe rbe to data from third party\nsources once you have some data in the\ncloud you can use sag maker to connect\nto it and start building machine\nlearning models with tensor flow or P\ntorch it operates on multiple levels to\nmake machine learning easier and\nprovides a managed Jupiter notebook that\ncan connect to a GPU instance to train a\nmachine learning model then deploy it\nsomewhere useful that's cool but\nbuilding your own ml models from scratch\nis still extremely difficult if you need\nto do image analysis you may as well\njust use the recognition API it can\nclassify all kinds of objects and images\nand is likely way better than anything\nthat you would build on your own or if\nyou want to build a conversational bot\nyou might use Lex which runs on the same\ntechnology that powers Alexa devices or\nif you just want to have fun and learn\nhow machine Learning Works you might buy\na deep raser device which is an actual\nRas car that you can drive with your own\nmachine learning code now that's a\npretty amazing way to get people to use\nyour Cloud platform but let's change\ndirection and look at a few other\nessential tools that are used by a wide\nvariety of Developers for security we\nhave IM where you can can create rules\nand determine who has access to what on\nyour AWS account if you're building a\nweb or mobile app where users can log\ninto an account Cognito is a tool that\nenables them to log in with a variety of\ndifferent authentication methods and\nmanages the user sessions for you then\nonce you have a few users logged into\nyour app you may want to send them push\nnotifications SNS is a tool that can get\nthat job done or maybe you want to send\nemails to your users SES is the tool for\nthat now that you know about all these\ntools you're going to want an organized\nway to provision them cloud formation is\na way to create templates based on your\ninfrastructure in yaml or Json allowing\nyou to enable hundreds of different\nservices with the single click of a\nbutton from there you'll likely want to\ninteract with those services from a\nfront-end application like iOS Android\nor the web amplify provides sdks that\ncan connect to your infrastructure from\nJavaScript Frameworks and other\nfront-end applications now the final\nthing to remember is that all of this is\ngoing to cost you a ton of money which\ngoes directly to getting Jeff's rocket\nup so make sure to use AWS cost Explorer\nand budgets if you don't want to pay for\nthese big bul jeene Rockets that's the\nend of the video it took a ton of work\n so please like And subscribe to support\nthe channel or become a prom member at\nfireship iio to get access to more\nadvanced content about building apps in\nthe cloud thanks for watching and I will\nsee you in the next one"
  ],
  "paragraphs": [
    "Amazon web services launched in 2006",
    "with a total of three products storage",
    "buckets compute instances and a",
    "messaging queue today it offers a",
    "mind-numbing 200 and something services",
    "and what's most confusing is that many",
    "of them appear to do almost the exact",
    "same thing it's kind of like shopping at",
    "a big grocery store where you have",
    "different aisles of product categories",
    "filled with things to buy that meet the",
    "needs of virtually every developer on",
    "the planet in today's video we'll walk",
    "down these aisles to gain an",
    "understanding of over 50 different AWS",
    "products so first let's start with a few",
    "that are above my pay grade that you may",
    "not know exist if you're building robots",
    "you can use robomaker to simulate and",
    "test your robots at scale then once your",
    "robots are in people's homes you can use",
    "iot core to collect data from them",
    "update their software and manage them",
    "remotely if you happen to have a",
    "satellite orbiting Earth you can tap",
    "into Amazon's Global Network of antennas",
    "to connect data through its ground",
    "station service and if you want to start",
    "experimenting and researching the future",
    "of computing you can use bracket to",
    "interact with a quantum computer but",
    "most developers go to the cloud to solve",
    "more practical problems and for that",
    "let's head to the compute aisle one of",
    "the original AWS products was elastic",
    "compute Cloud it's one of the most",
    "fundamental building blocks on the",
    "platform and allows you to create a",
    "virtual computer in the cloud choose",
    "your operating system memory and",
    "computing power then you can rent that",
    "space in the cloud like you're renting",
    "an apartment that you pay for by the",
    "second a common use case is to use an",
    "instance as a server for web application",
    "but one problem is that as your app",
    "grows you'll likely need to distribute",
    "track traffic across multiple instances",
    "in 2009 Amazon introduced elastic load",
    "balancing which allowed developers to",
    "distribute traffic to multiple instances",
    "automatically in addition the cloudwatch",
    "service can collect logs and metrics",
    "from each individual instance the data",
    "collected from cloudwatch can then be",
    "passed off to autoscale in which you",
    "define policies that create new",
    "instances as they become needed based on",
    "the traffic and utilization of your",
    "current infrastructure these tools were",
    "revolutionary at the time but developers",
    "still wanted an easier way to get things",
    "done and that's where elastic beanock",
    "comes in most developers in 2011 just",
    "wanted to deploy a Ruby on Rails app",
    "elastic beanock made that much easier by",
    "providing an additional layer of",
    "abstraction on top of ec2 and other",
    "autoscaling features choose a template",
    "deploy your code and let all the",
    "autoscaling stuff happen automatically",
    "this is often called a platform as a",
    "service but in some cases it's still too",
    "complicated if you don't care about the",
    "underlying infrastructure whatsoever and",
    "just want to deploy a WordPress site",
    "light sale is alternative option where",
    "you can point and click at what you want",
    "to deploy and worry even less about the",
    "underlying configuration in all these",
    "cases you are deploying a static server",
    "that is always running in the cloud but",
    "many Computing jobs are ephemeral which",
    "means they don't rely on any persistent",
    "State on the server so why bother",
    "deploying a server for code like that in",
    "2014 Lambda came out which are functions",
    "as a service or serverless Computing",
    "with Lambda you simply upload your code",
    "then choose an event that decides when",
    "that code should run traffic scaling and",
    "netor networking are all things that",
    "happen entirely in the background and",
    "unlike a dedicated server you only pay",
    "for the exact number of request and",
    "Computing time that you use now if you",
    "don't like writing your own code you can",
    "use the serverless application",
    "repository to find pre-built functions",
    "that you can deploy with the click of a",
    "button but what if you're a huge",
    "Enterprise with a bunch of its own",
    "servers Outpost is a way to rent AWS",
    "apis on your own infrastructure without",
    "needing to throw your old servers in the",
    "garbage in other cases you may want to",
    "interact with AWS from remote or extreme",
    "environment like if you're a scientist",
    "in the Arctic snow devices are like",
    "little mini data centers that can work",
    "without internet in hostile environments",
    "so that gives us some fundamental ways",
    "to compute things but many apps today",
    "are standardized with Docker containers",
    "allowing them to run on multiple",
    "different clouds or Computing",
    "environments with very little effort to",
    "run a container you first need to create",
    "a Docker image and store it somewhere",
    "elastic container registry allows you to",
    "upload an image allowing other tools",
    "like elastic container service to pull",
    "it back down and run it ECS is an API",
    "for starting stopping and allocating",
    "virtual machines to your containers and",
    "allows you to connect them to other",
    "products like load balancers some",
    "companies may want more control over how",
    "their app scales in which case eks is a",
    "tool for running kubernetes but in other",
    "cases you may want your containers to",
    "behave in a more automated way fargate",
    "is a tool that will make your containers",
    "behave like serverless functions",
    "removing the need to allocate ec2",
    "instances for your containers but if",
    "you're building an application and",
    "already have it containerized the",
    "easiest way to deploy it to AWS is app",
    "Runner this is a new product in 2021",
    "where you simply point it to a container",
    "image while it handles all the",
    "orchestration and scaling behind the",
    "scenes but running an application is",
    "only half the battle we also need to",
    "store data in the cloud simple storage",
    "service or S3 was the very first product",
    "offered by AWS it can store any type of",
    "file or object like an image or video",
    "and it's based on the same",
    "infrastructure as Amazon's e-commerce",
    "site it's great for general purpose file",
    "storage but if you don't access your",
    "files very often you can archive them in",
    "Glacier which has a higher latency but a",
    "much lower cost on the other end of the",
    "spectrum you may need storage that is",
    "extremely fast and can handle a lot of",
    "throughput elastic block storage is",
    "ideal for applications that have",
    "intensive data processing requirements",
    "but requires more manual configuration",
    "by the developer now if you want",
    "something that's highly performant and",
    "also fully managed elastic file system",
    "provides all the bells and whistles but",
    "at a much higher cost in addition to raw",
    "files developers also need to store",
    "structured data for their end users and",
    "that brings us to the database aisle",
    "which has a lot of different products to",
    "choose from the first ever database on",
    "AWS was simple DB a general purpose",
    "nosql database but it tends to be a",
    "little too simple for most people",
    "everybody knows you never go full R time",
    "it was followed up a few years later",
    "with Dynamo DB which is a document",
    "database that's very easy to scale",
    "horizontally it's inexpensive and",
    "provides fast read performance but it",
    "isn't very good at modeling relational",
    "data if you're familiar with mongodb",
    "another document database option is",
    "document DB it's a controversial option",
    "that's technically not mongodb that has",
    "a one toone mapping of the mongod DB API",
    "to get around restrictive open source",
    "licensing speaking of which Amazon also",
    "did a similar thing with elastic search",
    "which itself is a great option if you",
    "want to build something like a fulltech",
    "search engine but the majority of",
    "developers out there will opt for a",
    "traditional relational SQL database",
    "Amazon relational database service RDS",
    "supports a variety of different SQL",
    "flavors and can fully manage things like",
    "backups patching and scale but Amazon",
    "also offers its own proprietary flavor",
    "of SQL called Aurora it's compatible",
    "with postgress or MySQL and can be",
    "operated with better performance at a",
    "lower cost in addition Aurora offers a",
    "new serverless option that makes it even",
    "easier to scale and you only pay for the",
    "actual time that the database is in use",
    "relational databases are a great general",
    "purpose option but they're not the only",
    "option Neptune is a graph database that",
    "can achieve better performance on highly",
    "connected data sets like a social graph",
    "or recommendation engine if your current",
    "database is too slow you may want to",
    "bring in elastic cache which is a fully",
    "managed version of redis in inmemory",
    "database that delivers data to your end",
    "users with extremely low latency if you",
    "work with time series data like the",
    "stock market for example you might",
    "benefit from time stream a Time series",
    "database with built-in functions for",
    "time based queries and additional",
    "features for analytics yet another",
    "option is the Quantum Ledger database",
    "which allows you to build an immutable",
    "set of cryptographically signed",
    "transactions very similar to",
    "decentralized blockchain technology now",
    "let's shift gears and talk about",
    "analytics to analyze data you first need",
    "a place to store it and a popular option",
    "for doing that is red shift which is a",
    "data warehouse that tries to get you to",
    "shift away from Oracle warehouses are",
    "often used by big Enterprises to dump",
    "multiple data sources from the business",
    "where they can be analyzed together when",
    "all your data is in one place it's",
    "easier to generate meing meanful",
    "analytics and run machine learning on it",
    "data in a warehouse is structured so it",
    "can be queried but if you need a place",
    "to put a large amount of unstructured",
    "data you can use AWS Lake formation",
    "which is a tool for creating data lakes",
    "or repositories that store a large",
    "amount of unstructured data which can be",
    "used in addition to data warehouses to",
    "query a larger variety of data sources",
    "if you want to analyze real-time data",
    "you can use Kinesis to capture real-time",
    "streams from your infrastructure then",
    "visualize them in your favorite business",
    "and elligence tool or you can use a",
    "stream processing framework like Apache",
    "spark that runs on elastic map reduce",
    "which itself is a service that allows",
    "you to operate on massive data sets",
    "efficiently with a parallel distributed",
    "algorithm now if you don't want to use",
    "Kinesis for streaming data a popular",
    "alternative is Apache kofka it's open",
    "source and Amazon msk is a fully managed",
    "service to get you started but for the",
    "average developer all this data",
    "processing may be a little too",
    "complicated glue is a serverless product",
    "that makes it much easier to extract",
    "transform and load your data it can",
    "automatically connect to other data",
    "sources on AWS like Aurora red shift and",
    "S3 and has a tool called glue studio so",
    "you can create jobs without having to",
    "write any actual source code but one of",
    "the biggest advantages of collecting",
    "massive amounts of data is that you can",
    "use it to help predict the future and",
    "AWS has a bunch of tools in the machine",
    "learning aisle to make that process",
    "easier but first if you don't have any",
    "highquality data of your own you can use",
    "the data exchange to purchase And",
    "subscribe rbe to data from third party",
    "sources once you have some data in the",
    "cloud you can use sag maker to connect",
    "to it and start building machine",
    "learning models with tensor flow or P",
    "torch it operates on multiple levels to",
    "make machine learning easier and",
    "provides a managed Jupiter notebook that",
    "can connect to a GPU instance to train a",
    "machine learning model then deploy it",
    "somewhere useful that's cool but",
    "building your own ml models from scratch",
    "is still extremely difficult if you need",
    "to do image analysis you may as well",
    "just use the recognition API it can",
    "classify all kinds of objects and images",
    "and is likely way better than anything",
    "that you would build on your own or if",
    "you want to build a conversational bot",
    "you might use Lex which runs on the same",
    "technology that powers Alexa devices or",
    "if you just want to have fun and learn",
    "how machine Learning Works you might buy",
    "a deep raser device which is an actual",
    "Ras car that you can drive with your own",
    "machine learning code now that's a",
    "pretty amazing way to get people to use",
    "your Cloud platform but let's change",
    "direction and look at a few other",
    "essential tools that are used by a wide",
    "variety of Developers for security we",
    "have IM where you can can create rules",
    "and determine who has access to what on",
    "your AWS account if you're building a",
    "web or mobile app where users can log",
    "into an account Cognito is a tool that",
    "enables them to log in with a variety of",
    "different authentication methods and",
    "manages the user sessions for you then",
    "once you have a few users logged into",
    "your app you may want to send them push",
    "notifications SNS is a tool that can get",
    "that job done or maybe you want to send",
    "emails to your users SES is the tool for",
    "that now that you know about all these",
    "tools you're going to want an organized",
    "way to provision them cloud formation is",
    "a way to create templates based on your",
    "infrastructure in yaml or Json allowing",
    "you to enable hundreds of different",
    "services with the single click of a",
    "button from there you'll likely want to",
    "interact with those services from a",
    "front-end application like iOS Android",
    "or the web amplify provides sdks that",
    "can connect to your infrastructure from",
    "JavaScript Frameworks and other",
    "front-end applications now the final",
    "thing to remember is that all of this is",
    "going to cost you a ton of money which",
    "goes directly to getting Jeff's rocket",
    "up so make sure to use AWS cost Explorer",
    "and budgets if you don't want to pay for",
    "these big bul jeene Rockets that's the",
    "end of the video it took a ton of work",
    "so please like And subscribe to support",
    "the channel or become a prom member at",
    "fireship iio to get access to more",
    "advanced content about building apps in",
    "the cloud thanks for watching and I will",
    "see you in the next one"
  ],
  "keywords": [
    "scales",
    "meing",
    "everybody",
    "collecting",
    "anything",
    "problem",
    "mini",
    "efficiently",
    "abstraction",
    "developers",
    "lambda",
    "docker",
    "even",
    "algorithm",
    "build",
    "allows",
    "collected",
    "generate",
    "subscribe",
    "traditional",
    "tap",
    "total",
    "model",
    "raser",
    "sdks",
    "decides",
    "whatsoever",
    "fast",
    "machine",
    "interact",
    "experimenting",
    "scenes",
    "half",
    "neptune",
    "autoscale",
    "end",
    "stream",
    "manage",
    "repository",
    "find",
    "years",
    "confusing",
    "web",
    "passed",
    "quantum",
    "methods",
    "patching",
    "behind",
    "snow",
    "needs",
    "frameworks",
    "exact",
    "immutable",
    "rds",
    "station",
    "already",
    "computer",
    "powers",
    "learning",
    "features",
    "multiple",
    "content",
    "extract",
    "queried",
    "policies",
    "benefit",
    "rely",
    "warehouses",
    "iot",
    "simple",
    "spectrum",
    "flavors",
    "business",
    "need",
    "flavor",
    "orchestration",
    "provides",
    "sql",
    "huge",
    "current",
    "sources",
    "rent",
    "without",
    "made",
    "grocery",
    "choose",
    "gives",
    "jeff",
    "computing",
    "fun",
    "throw",
    "thing",
    "introduced",
    "hundreds",
    "android",
    "serverless",
    "lot",
    "ton",
    "licensing",
    "cache",
    "javascript",
    "update",
    "simply",
    "likely",
    "data",
    "fundamental",
    "glacier",
    "wanted",
    "studio",
    "handles",
    "started",
    "bunch",
    "run",
    "handle",
    "works",
    "somewhere",
    "wordpress",
    "one",
    "place",
    "enable",
    "api",
    "mongodb",
    "db",
    "budgets",
    "robomaker",
    "postgress",
    "example",
    "battle",
    "open",
    "point",
    "jupiter",
    "well",
    "containers",
    "mobile",
    "memory",
    "define",
    "walk",
    "never",
    "easier",
    "conversational",
    "automatically",
    "distributed",
    "engine",
    "modeling",
    "many",
    "slow",
    "infrastructure",
    "grows",
    "functions",
    "read",
    "understanding",
    "block",
    "second",
    "predict",
    "delivers",
    "test",
    "determine",
    "behave",
    "stopping",
    "space",
    "unstructured",
    "enables",
    "today",
    "global",
    "software",
    "shopping",
    "warehouse",
    "repositories",
    "something",
    "big",
    "essential",
    "entirely",
    "video",
    "ever",
    "create",
    "kubernetes",
    "whistles",
    "jobs",
    "compatible",
    "apache",
    "let",
    "purchase",
    "time",
    "manages",
    "technically",
    "framework",
    "transactions",
    "databases",
    "msk",
    "great",
    "redis",
    "code",
    "gears",
    "talk",
    "extremely",
    "full",
    "product",
    "blocks",
    "object",
    "log",
    "offers",
    "gpu",
    "bul",
    "future",
    "system",
    "robots",
    "majority",
    "layer",
    "logged",
    "difficult",
    "three",
    "app",
    "performance",
    "number",
    "satellite",
    "fireship",
    "grade",
    "2021",
    "notifications",
    "sag",
    "automated",
    "brings",
    "yet",
    "formation",
    "bracket",
    "rails",
    "background",
    "researching",
    "track",
    "operated",
    "amounts",
    "may",
    "came",
    "operates",
    "apps",
    "bells",
    "look",
    "ml",
    "archive",
    "collect",
    "goes",
    "environment",
    "graph",
    "things",
    "launched",
    "models",
    "deep",
    "parallel",
    "elastic",
    "mongod",
    "type",
    "please",
    "general",
    "creating",
    "im",
    "queries",
    "needing",
    "proprietary",
    "version",
    "also",
    "cloud",
    "nosql",
    "aws",
    "hostile",
    "homes",
    "r",
    "toone",
    "cool",
    "container",
    "enterprises",
    "autoscaling",
    "inmemory",
    "problems",
    "pretty",
    "file",
    "ground",
    "2006",
    "watching",
    "series",
    "reduce",
    "rocket",
    "go",
    "click",
    "see",
    "next",
    "want",
    "horizontally",
    "pay",
    "flow",
    "good",
    "streaming",
    "site",
    "advantages",
    "took",
    "filled",
    "underlying",
    "internet",
    "platform",
    "put",
    "clouds",
    "transform",
    "event",
    "environments",
    "sessions",
    "200",
    "sure",
    "light",
    "stuff",
    "emails",
    "apartment",
    "scale",
    "fulltech",
    "channel",
    "enterprise",
    "request",
    "rules",
    "connected",
    "always",
    "inexpensive",
    "cost",
    "analyzed",
    "technology",
    "way",
    "alternative",
    "get",
    "bother",
    "netor",
    "companies",
    "prom",
    "requires",
    "back",
    "cases",
    "image",
    "service",
    "happen",
    "planet",
    "lakes",
    "amazing",
    "fully",
    "analyze",
    "running",
    "ways",
    "utilization",
    "still",
    "scientist",
    "much",
    "shift",
    "eks",
    "2011",
    "drive",
    "power",
    "opt",
    "streams",
    "decentralized",
    "glue",
    "products",
    "throughput",
    "mysql",
    "case",
    "advanced",
    "50",
    "aisle",
    "cloudwatch",
    "instances",
    "signed",
    "template",
    "query",
    "makes",
    "people",
    "direction",
    "addition",
    "ephemeral",
    "network",
    "lake",
    "third",
    "head",
    "authentication",
    "2009",
    "practical",
    "old",
    "easy",
    "dynamo",
    "operating",
    "social",
    "exchange",
    "another",
    "recognition",
    "standardized",
    "learn",
    "users",
    "recommendation",
    "latency",
    "runner",
    "classify",
    "together",
    "train",
    "extreme",
    "document",
    "virtually",
    "car",
    "highquality",
    "allocate",
    "average",
    "aisles",
    "achieve",
    "lex",
    "kofka",
    "beanock",
    "state",
    "antennas",
    "rockets",
    "writing",
    "servers",
    "connect",
    "process",
    "push",
    "remotely",
    "meet",
    "device",
    "across",
    "levels",
    "better",
    "supports",
    "new",
    "called",
    "2014",
    "alexa",
    "thanks",
    "core",
    "iio",
    "single",
    "additional",
    "performant",
    "followed",
    "deploy",
    "less",
    "tool",
    "ecs",
    "use",
    "know",
    "garbage",
    "exist",
    "oracle",
    "ruby",
    "starting",
    "load",
    "unlike",
    "capture",
    "jeene",
    "easiest",
    "away",
    "ses",
    "processing",
    "original",
    "manual",
    "applications",
    "allowed",
    "option",
    "us",
    "dump",
    "visualize",
    "maker",
    "tends",
    "bot",
    "deploying",
    "ras",
    "services",
    "amazon",
    "simulate",
    "make",
    "controversial",
    "bring",
    "centers",
    "requirements",
    "security",
    "purpose",
    "revolutionary",
    "member",
    "biggest",
    "intensive",
    "messaging",
    "sale",
    "market",
    "speaking",
    "categories",
    "restrictive",
    "appear",
    "needed",
    "complicated",
    "become",
    "done",
    "top",
    "almost",
    "around",
    "aurora",
    "analysis",
    "final",
    "notebook",
    "control",
    "orbiting",
    "source",
    "meanful",
    "used",
    "familiar",
    "like",
    "registry",
    "button",
    "write",
    "care",
    "allowing",
    "managed",
    "fargate",
    "common",
    "offered",
    "provision",
    "elligence",
    "work",
    "would",
    "containerized",
    "balancers",
    "objects",
    "images",
    "store",
    "support",
    "traffic",
    "earth",
    "apis",
    "devices",
    "worry",
    "amplify",
    "access",
    "tensor",
    "dedicated",
    "outpost",
    "variety",
    "later",
    "every",
    "ios",
    "organized",
    "tools",
    "means",
    "wide",
    "logs",
    "machines",
    "queue",
    "mapping",
    "metrics",
    "ledger",
    "explorer",
    "storage",
    "instance",
    "directly",
    "set",
    "first",
    "networking",
    "buckets",
    "server",
    "based",
    "massive",
    "stock",
    "pull",
    "removing",
    "analytics",
    "actual",
    "account",
    "virtual",
    "lower",
    "send",
    "json",
    "change",
    "help",
    "higher",
    "operate",
    "static",
    "arctic",
    "highly",
    "going",
    "cryptographically",
    "providing",
    "remember",
    "p",
    "yaml",
    "search",
    "red",
    "might",
    "maybe",
    "effort",
    "solve",
    "relational",
    "scratch",
    "similar",
    "start",
    "building",
    "ideal",
    "persistent",
    "upload",
    "large",
    "map",
    "structured",
    "developer",
    "kinds",
    "individual",
    "remote",
    "favorite",
    "kinesis",
    "tries",
    "popular",
    "files",
    "comes",
    "cognito",
    "getting",
    "configuration",
    "job",
    "sets",
    "sns",
    "kind",
    "larger",
    "renting",
    "gain",
    "spark",
    "different",
    "often",
    "backups",
    "low",
    "balancing",
    "ec2",
    "rbe",
    "database",
    "little",
    "user",
    "raw",
    "torch",
    "application",
    "templates",
    "s3",
    "money",
    "party",
    "useful",
    "allocating",
    "blockchain",
    "knows",
    "amount",
    "runs",
    "compute",
    "scaling",
    "buy",
    "distribute"
  ]
}