{
  "text": "hey this is Andrew Brown over here on\nfree Camp bringing you another free\nCloud certification study course and\nthis time we are looking at the ads\nCloud practitioner also known as the clf\nC02 and the way we're going to achieve\nads certification is through lectur\ncontent Hands-On labs and as always I\nprovide you a full free practice exam\nthe best way to support uh more free\nstudy courses like this one is to\npurchase the optional paid additional\nmaterials it's going to help you on your\nexam and it's going to allow me to\nproduce more of these uh great Cloud uh\ncertification study courses if you don't\nknow me I'm Andrew Brown and this is the\nfourth time I've taught this uh\ncertification so it's really refined at\nthis point and I've taught a bit of\neverything in the cloud so we've looked\nat ads Azure gcp terraform kuber denes\nyou name it I've taught it uh but that's\nabout it and I will see you in class in\nthe next video ciao\n[Music]\nhey this is Angie Brown and we are at\nthe start of our journey asking the most\nimportant question first which is what\nis the adus cloud practitioner well it's\nad's entrylevel certification that's\ngoing to teach you things like the cloud\nfundamentals so we're talking cloud\nConcepts architectures deployment models\nit's a close look at adus core Services\nwhich would be our compute our storage\nour Network or databases and it's a\nquick look at the vast amount of adus\nservices and functionality around adus\nso we're looking at identity security\nbilling pricing support and a lot more\nstuff and we'll get into that in the\ncourse and we'll even look at the exam\nguide outline but uh yeah there is a lot\nof stuff um the course code for this\ncertification is now the clf C02 the old\none was the\nc01 uh the way to know if there is a new\ncourse is if this becomes the c03 if you\nsee that then this course um may be out\nof date um but uh yeah right now it's\nthe C02\num often people refer to this\ncertification as the CCP to stand for\nthe certified clock practitioner how you\nwant to refer to it is up to you but uh\nthere are a few ways of describing this\ncertification I want to point out that\nadus is the leading cloud service\nprovider in the world and the cloud\npractitioner is the most common starting\npoint for people breaking into the cloud\nso even if you're going to uh utilize\nanother cloud service provider I'm just\ngoing to say that you're going to get a\nreally good uh Foundation with this\ncertification even if it's not the uh\nsame provider uh so who is the\ncertification for well consider the\ncloud practitioner if you are new to\ncloud and you're learning the\nfundamentals you are at the executive\nmanagement or sales level and you need\nto acquire strategic information about\nCloud for adoption or\nmigration or you are a senior Cloud\nengineer or Solutions architect who\nneeds to reset or refresh their adus\nknowledge after working uh with cloud\nservices or adus for multiple years\num it's always a surprise that when I\ncome back and I refresh this course uh\nthe things that have changed and it's\nvery easy to miss those things so yeah\nthis this certification is for everybody\nso what is the value of the\ncertification well this uh certification\nprovides the most expansive view\npossible of cloud architecture and ads\nit'll uh we I would describe this as\nhaving a bird's eye view or the 50,000\nft view so with that in mind uh the idea\nhere is to promote big picture thinking\nwe're zooming out and assessing the\ncloud or itus landscape for things like\nchanges Trends opportunities um and it's\nimportant to understand about being\nstrategic about the approach and process\nfor your journey and that's why I like\nthe certification so much and I strongly\nuh recommend it for everybody's Journey\nso what is the value of the\ncertification well it's not a difficult\nexam uh it's it's not going to validate\nthat you can build Cloud workloads so if\nyou are trying to obtain a technical\nimplementation role like develop Cloud\ndeveloper Cloud engineer devops engineer\nuh it's not going to be enough to attain\nthose technical Cloud roles um but it\ncould help short list your resume for\ninterviews um the exam covers content\nnot found in other certifications so it\nis recommended as an essential study\nguide uh for your adus journey do not\nskip this one uh some people like to go\nstraight to the solution architect and\nthen they realize that they didn't set a\ngood foundation or they just have gaps\nuh in their knowledge which could really\nhelp them out in their careers so really\ndo not skip this one um I like to make\nthese road maps to give you an idea uh\nin terms of where you can go after this\ncertification so here is uh all the\ncertifications currently that has\nnotice that I have the data engineer\nit's a really small one it just became\nuh came out as a beta exam it's not as\nhard as the professionals it's just\nwhere I place it on this diagram um but\nthe idea is that we have a lot of\ndifferent ways that we can navigate or\nuh work through these certifications\nthese can generally map to particular\nroles in the cloud so uh very often\npeople go right to the uh Solutions\narchitect I'm just getting my pen out\nhere but very often this is the approach\nthat'll go straight to here uh right\nafter the solution architect because\nthey're very similar um in terms of uh\nscope and Challenge and difficulty where\nthe solution architect is a broad\ncertification just like the cloud\npractitioner but it's more focused on\nthe technical knowledge uh whereas this\none of course is much more broad the\ncloud prer\nand then after that people will\ngenerally go for the developer or the\nCIS office administrator in my personal\nopinion I really do think that people\nshould study all three Associates and do\nall three Associates at the same time uh\nbecause really I don't find that uh it\nmakes sense to leave out the ssops admin\nor developer knowledge um it's just the\nway that itus Engineers their\ncertifications but when you go to other\nones like let's say Google they only\nhave one associate and they have all the\num they call Cloud engineer and it has\neverything in it and so uh again I just\nfeel like you should take all three but\nyou decide what works for you um and you\nknow you can see that there are various\nroutes but I want to just make it very\nclear that certifications do not\nvalidate programming they do not uh make\nyou do technical diagramming they don't\nnecessarily make you do code management\nand there's many other technical skills\nthat are required for obtaining\ntechnical roles like these roles um and\nthat is not the purpose of certification\ncertification is supposed to give you\nknowledge specifically on us and so just\nunderstand that you need to make sure\nyou get those skills uh somewhere else I\ndo try to uh slot in a lot of these uh\ntechnical skills uh where I can and so\nif you're uh if we're doing something in\nthe course and you're wondering why are\nwe doing this when it's not on the\ncertification it's because I'm trying to\ngive you those adjacent skills uh so\nthat you are successful um in the future\nokay so how long does it take to uh\nstudy to pass this exam well depends\nright it depends but if you're a\nbeginner we're probably looking at 30\nhours so this is someone who's never\nused datab bus or cloud provider before\nuh you've never written code or had a\ntechnical role if you're experienced uh\nyour study time is going to be very low\nlike as low as 6 hours even lower uh if\npossible um especially if you've already\ntaken the certification I sat it um uh\nblind right I didn't look up anything\nand I passed it uh no problem um but uh\nso it says here you know if we've\npracticed we have experience working\nwith ads if we have an equivalent\nexperience in another cloud service\nprovider some people are coming over\nfrom Azure or gcp so they can kind of\nmap their knowledge over to adabs or if\nthey have a strong background in\ntechnology uh you might really be\nalready familiar with these kind of\nofferings from\nanother uh like from another discipline\nand so your study time can be really low\nbut I would say that um you know the\naverage study time is probably 24\nhours so yes it's closer to the beginner\nlevel but that's the average study time\nthat we found and so it's basically a\nsplit between 50 lectures and Labs so\nlabs are Hands-On skills and 50% with\npractice exams uh a lot of people forget\nthat practice exams are part of the\nstudy process so make sure that you do\ndo that uh we do recommend a study a\nstudy time of one to two hours a day uh\nfor 14 days uh what does it take to pass\nthe exam we're still going on with this\nhere but you know you have to watch\nthose lecture videos and memorize key\ninformation this is a knowledge based\nexam it's not a uh it does not test your\nskills so knowledge is key here uh you\nshould do Hands-On Labs uh we call those\nfollow alongs within your own account uh\nthis is just going to help uh sment the\nknowledge in your head it really makes a\na huge difference so really do those\nHands-On labs and get practice exams to\nsimulate the real exam you absolutely\nneed to do this because if you don't\nyou're going to find that you did all\nthe study materials and then uh the exam\nis its own uh Beast so make sure that\nyou go get some practice exams there's a\nlot of places that you can get uh get\nthem from uh we offer a full free\npractice exam I think we're the only\nprovider that does this but um we give\nyou like a full free practice exam and\nwe also have some paid ones so the best\nway to support this this content that we\nproduce is to purchase our additional\npaid materials uh if you don't have the\nmoney that's okay we still have at least\none full free practice exam to help you\nout you can find that over at exampro\ndoco\ncfy\nC02 it looks like it know but it's a\nzero uh let's talk about the content\noutline so there are four domains and\nyou have to understand that each domain\nhas its own waiting this is going to\ndetermine how many questions in that\ndomain will show up on your exam the\nfirst one is cloud Concepts so that's\nfor 24% so we're looking at between 15\nto 16 questions domain two is about\nsecurity and compliance so that's 30%\nit's a a quite high up there so we have\nabout 1920 questions for cloud\nTechnologies and services it's 34% so\nunderstanding the offerings of ads is\nthe most important thing in the exam\nit's the highest percentage here so we\nwe're going to definitely get 22\nquestions and then uh we have domain\nfour so billing pricing and support\nwhere it's at 12% so we have eight\nquestions not a lot for billing pricing\nsupport definitely important because\nit's very easy to get overbuild in the\nstuff but just you know point out that\nyou need to know a wide range of adus\nservices you need to know about core\nServices more in depth so where do you\ntake this exam well you can take it at\nthe um at an inperson test center or\nonline from the convenience of your own\nhome I personally like to take it in a\ntest center if there's one near me I\nused to live in Toronto now I don't so\nthere's no test centers near me and so I\nhave to do it online it's just so much\nless stressful walking into a building\nand everything is uh controlled whereas\nat home you might have a lot of things\ngoing on and that can cause a lot of\nstress but you know do what makes sense\nfor you so adus delivers the exams via\nPearson View and so uh there's pearon\nview they have the online system which\nyou do uh you install on your computer\nand then they also have a network of\ntest centers their partner with uh\npreviously adabs also offered it via PSI\num they don't do this anymore I'm not\nsure why they changed this before it was\nonly PSI then they added Pearson and now\nthey've dropped PSI so your only option\nis Pearson view I just want to point out\nwhat a project exam means it means that\nit's it's someone is supervising uh your\num your exam while you're taking it so\nyou're not cheating so it's very common\nthat when you check in they're going to\nask to look around your room you might\neven have to talk to them uh and it's\njust again to make sure that what you do\nis um your exam was legit legit so when\nthey issue your badge you know it's for\nreal anyway let's talk about grading\nhere so the passing grade here is 700\nout of a a th000 points and so you need\nto get around 70% to pass ads like many\nother CL providers use scaled scoring so\num that doesn't mean if you get exactly\n70% that you'll pass but uh I mean more\nless it works out to to be that okay so\nthe response types uh we have here well\nfirst of all we have 65 questions and\nthere are 50 questions that are scored\nand then there's 15 that are unscored\nand if that sounds bizarre I mean I I\nagree with you I think it's odd that\nthey give you 15 unscored questions but\nthe reason ads will do this is that they\nwant to introduce new questions um to\nhelp test against the difficulty of the\nexam um because you know maybe some\npeople know more than uh what they're\nexpecting so they can adjust the\ndifficulty of the exam I think that they\nuse it as an anti-che mechanism as well\nbut from the test taker it can get a bit\nstressful because you can get 15 really\ncrazy wild questions that were not in\nyour um uh course studies and it's just\na of us testing things out and so I just\nwant to point out don't get stressed out\nwhen you take this exam and you get a\nreally funny question it's probably one\nof those unscored questions but on top\nof that you know there are 15 scored\nquestions you can get wrong so you can\nget a total of 30 questions wrong on\nthis exam and pass I just want to make\nthat uh really clear there there is no\npenalty for wrong questions so\nabsolutely always submit an answer and\ntake your best guess the format of the\nquestions are multiple choice and\nmultiple answer so you know it's not too\nstressful in terms of uh the formatting\nof questions um there are again 15\nunscored questions of the exam they will\nnot count towards your final score why\nare there unscored questions uh they're\nthere to evaluate the introduction of\nnew questions they're there to determine\nif the exam is too easy and the passing\nscore of the question difficulty needs\nto be increased to discover users who\nare attempting to cheat the exam or\nsteal dump exam questions if you\nencounter questions you've never studied\nfor uh that seemed really hard keep your\ncool and remember that they may be\nunscored questions just really want to\nemphasize that there in terms of the\nduration you get 1.5 hours so you have\nabout 1.5 minutes per question your exam\ntime is 90 minutes your seat time is 120\nMinutes what are we saying when we say\nseat time this is the time it takes uh\nor that you should allocate for the full\nexam uh that includes uh things like\nreviewing the instructions uh showing on\nuh showing the online Proctor your\nworkspace reading accepting the NDA\ncompleting the exam provide the feedback\nat the exam so a lot of people go okay\nmy exam start star in or I have 90 or 90\nminutes exam but really you want to show\nup 30 minutes prior uh because that\nchecking process can be really really\nstressful so you know just consider that\nuh the full scope of time you need to\ndedicate for these exams this uh\ncertification is valid for 36 months so\nthat's 3 years before recertification\nsome other providers uh like Azure if\nyou do the fundamentals it's forever um\nother ones have require you to refresh\nevery year other ones um you don't have\nto take the full exam you have a\nreassessment that is free inabus likes\nto do it this way the nice thing though\nis that when you do pass a certification\num somewhere adus allows you to get the\nnext exam half off uh so at least there\nare cost saving mechanisms if you do\npass an exam for the next follow-up\ncertification but yeah uh that is pretty\nmuch a breakdown of uh the exam guide we\nwill go and take a look at the actual\nexam guide so we can uh understand the\nfull scope of what's in there uh but\nyeah we'll see you in the next one okay\n[Music]\nciao hey everybody it's Andrew Brown and\nwe are here on the training and\ncertification page on the adus website\nand what I want to do here is I want to\npull up the exam guide so that we can um\nmake sure that we know exactly what it\nis that we're getting ourselves into uh\nwe did cover this in summary in the\nprevious video but uh I think it's\nalways useful for you to know exactly\nwhere these things are\nadabs is always changing their marketing\npages and I've already noticed a few\nchanges here so um just understand\nthat's the nature of cloud notice here\nthat it's talking about the uh beta exam\ncertification so even earlier we talked\nabout the data engineer or we at least\nshowed it on our journey map and it's\nnot even it's not even 100% out beta so\nyou can see we're kind of prepping for\nthe future here I also want to point out\nthat they have this like certifications\npath uh thing and I I don't really like\nit because I don't think it's very\naccurate so the first thing they show is\nSolutions architect and they don't even\nsay you need to get the other two\nassociate certifications which you\nabsolutely should do if before you go\nfor your Solutions architect\nprofessional the data analytics is no\nlonger a uh certification that adus is\nproducing so this is an out-of-date\ndocument so I just want you to\nunderstand that these are marketing\nPages they're here to maximize the\namount of certifications you need to\nobtain my goal is not to make you take\nevery certification my goal is to make\nsure that you are prepared uh to do the\njob and I just want to you know help you\navoid going down the certification route\nand getting too many certifications that\naren't going to benefit you so just take\nthese with a grain of salt when you're\nreading them okay so anyway what I want\nto do is drop this down and go to Cloud\npartitioner um and here on the cloud\ncloud practitioner page if we scroll on\ndown we got prepare for the exam and\nhere we'll click the exam guide and\nit'll open up a PDF and it'll give us\nall the information we need to know this\nis what AB has been doing for a long\ntime is making these um exam guide p F\nwhich I really like uh but anyway the\nfirst thing we should do is confirm the\ncourse code so this one says CF CO2 so\nwe know we are on the right track and\nthen down below here it says this exam\nvalidates the candidates ability to\ncomplete the following task I want to\nhighlight some key words\nexplain understand describe and identify\nso understand that this certification is\nnot checking whether you know how to do\nCloud it's more if you understand Cloud\num and the majority of aable\ncertifications in fact all of them are\nmultiple choice and multiple answers so\nthey can't really check if you were able\nto do something in Cloud so just\nunderstand the limits of certifications\nat least eight of the certifications\nbased on their testing mechanisms so\nwhen it says Target candidate it's\nsaying uh where you should be in order\nto pass this exam and so they're\nsuggesting that if you had six months of\nexposure to adabs uh with Cloud design\nimplementation operate operation then uh\nyou should be able to pass it it's just\nweird uh worded strangely because it\nmakes it sound like you should have this\nexperience um before you even start\nstudying which is not true they just\nmean like if you want to pass it you\ndon't need six months to pass this exam\nthat's crazy you just need what we\nrecommended which was um the amount of\nhours we said the average hours is 24\nhours so um I'm not sure why they put\nsix months I guess it's just they're for\nthose who are really having a hard time\nwith Cloud they give you a lot of uh um\nscope for room there but you can see\nthey're pointing out from non it\nbackgrounds recommended knowledge Cloud\nconcept security core Services economics\nthat's that's just a repeating of the\ndomains um notice it says job tasks that\nare out of scope is\ncoding um Cloud architecture design load\nperformance and testing I'm highlighting\nthese three because I just want to point\nout that in associate level professional\nspecialty they actually do ask questions\naround troubleshooting implementation\nand I suppose they do architectural\ndesign but they never ever ever No\ncertification in 8s is going to test\nyour coding skills architectural diagram\nskills and they're not really good about\nload and performance testing they have\nlike use case scenarios but um just\nunderstand again the limits of the\ncertifications coming down below to the\nresponse types we got our multiple\nchoice our multiple\nresponse um so that's pretty clear there\nthere is uh 50 scored questions there's\n15 unscored questions so that is very\nclear\nthe uh uh the the the point system is\nbased out of a thousand to th points the\nlowest you can get is 100 points I don't\nknow how that works why like why can't\nyou get zero points I don't know the\npassing score is\n700 so that's what we need to score\nthere then down below here it's just\ntalking about the course outline and it\nactually has a comparison of the old clf\nco1 so we can take a look there and see\nwhat actually has changed so down below\nhere we have our Cloud Concepts as\nsecurity compliance our Cloud technology\nservices our billing pricing support and\nthen it comes in and starts describing\nall this stuff now I need to make it\nvery clear how inabus makes their exams\nthey give you a huge list of things you\nneed to learn but if you learn um each\none of these things you can end up\noverstudying or you'll find that the\nlike the exam guide outline is not one\nto one I'll give you an example we'll\nlook at something else I'm going to go\nto Hashi Corp here for a second hashy\nCorp terraform\ncertification as a as an example of how\ndifferent adus certifications are so for\nhashicorp they will this is their exam\nguide they'll give you each of these\nitems and you can be 100% sure that\nevery single thing every one one of\nthese things will show up on the exam\none to one so it's very easy to know\nexactly what you need to study for um\nand uh if you know all these things\nyou'll you will pass in ad us they list\nall these things but they won't all show\nup they they're pulling from a very\nlarge pool so to kind of narrow down\nwhat you need to study you need to have\na good sense of um overall everything\nand and you're just going to get some\nthings wrong but um anyway coming back\nhere the first Cloud Concepts they're\ntalking about the benefits of\ncloud so we have a section on benefits\nof cloud and so they talk about the\nvalue proposition so there's like six or\nnine of them I forget have a multiple\nslides on that and so we're talking\nabout economics scale benefits of global\ninfrastructure advantages of high\navailability elasticity and uh agility I\nthink we call these Cloud architecture\nterminologies because they're not really\nbenefits I mean they are benefits of\ncloud but I I like to group them a\nlittle bit differently then we have\nidentified design principles for Abus\nCloud so we have the well architect\nframework this uh was for the most part\nnever in the clf co1 for 90% of its\nhistory and then they decided maybe like\nlast year or something to add it in um\nand and uh before even wasn't even the\nsolution architect associate but now\nit's even at this level and that's\ntotally fine you only need to know it at\na very high level so um it's not too\ndifficult to learn but it it's a white\npaper it's a PDF that um you know just\ndescribes how adus thinks that you\nshould design uh your architecture then\nwe have understand the benefits of\nstrategies and migration to the cloud so\nwe have Cloud adoption strategies Cloud\nadoption framework so um this was this\nwas not in the last exam but luckily I\nincluded it because I thought it was\nsomething that was very important and so\nI already have it in the certification\ncourse even from the last one they\nactually do ask quite a few questions\naround the cloud adoption framework but\nwhen you look at and again this one's\nlike a white paper just like this one\nabove here and we'll talk about what\nwhite papers are if you you never heard\nthat term uh it'll make sense in the\ncourse but the cloud adoption framework\num there's not a lot to it but the exam\nthey'll ask you a lot of questions\naround it so you just have to have good\ncommon sense um about uh choosing those\nanswers if that makes sense um\nidentifying appropriate migration\nstrategies sure I guess so I never got\nany snowball questions um they they say\nsnowball here go down below here\nunderstand concepts of cloud\neconomics so cost Savings of moving to\nCloud aspects of cloud\neconomics uh fixed cost compared with\nvariable cost\nthey're talking about um Opex Opex and\ncapex understanding the associate of on\npremise\nenvironments uh understand the\ndifference between licensing strategies\nand adabs never ever really ever\nmentioned uh bring your own licenses\never in their certification courses and\nI never got this on the exam and other\npeople I sat for the new exam never uh\nencountered this still good to know but\nI'm just saying that I don't know why\nit's listed in here because it's\ndefinitely not on the exam but it is a\ngood thing to not the basic level\nunderstand the concept of right sizing\num and maybe I'll go back and make a\nslide on that CU I don't think I\nactually make a deliberate slide on that\nbut I think what they mean there is\nunderstanding uh like how horizontal\nscaling and stuff uh stuff like that\nworks but um you get no questions on the\nexam for right sizing at least not from\nits technical definition like that\nidentify benefits of\nautomation I think there might have been\none question of saying like hey which\none lets you automate stuff and you just\nchose Cloud information but they really\ndon't talk a whole they don't ask a lot\nof questions on the exam about IAC\ninfrastructure as a code identifying uh\nmanag ad services this is something they\ndo a lot in exams like describe a\nservice you pick it we have security and\ncompliance so we have the Ed shared\nresponsibility model you absolutely need\nto know that that for sure always always\nappears on the exam um customers\nresponsibility they'll do this a lot\nthey'll say like they'll give you a\nscenario of um of like a typical\nworkload or resource and then you have\nto uh determine if it's the customers's\nresponsibility or adab Us's\nresponsibility describing responsibility\nthe customer adus share so again this is\njust all the share responsibility model\nstill here describing how itus respons\nresponsibilities and customer\nresponsibilities can shift depending on\nthe the service used so yeah this is\nbasically the share responsibility model\nunderstand the cloud security governance\ncompliance so uh a compliance\ngovernments\nConcepts benefits of cloud security\nthey don't really talk about that uh\nThey Don't Really directly ask that in\nthe exam but yes we do cover that where\nto capture and locate logs that are\nassociated with Cloud security they\nabsolutely do not ask that on the exam\nI'm not sure why that's here um identify\nwhere to find A's compliance information\nthat will absolutely be on the exam\nunderstanding compliance needs among\nGeographic locations and\nindustries sure I mean they're talking\nabout we have a slide in this in the um\nGlobal infrastructure but it's um\nlike data sovereignty and like gov cloud\nand things like that describing how\ncustomers secure resources for ads so\njust generally knowing the security\nservices y that absolutely is on the\nexam identifying different encryption\noptions um I never got this on my exam I\nnever heard of anyone else getting this\nbut um if they are going to talk about\nthis they're probably going to talk\nabout it around\nS3 recognizing services that Aid in\ngovernance and compliance absolutely\nabsolutely for sure that the you will\nget questions around uh things like fips\nor Hippa or like common common\ncompliance certifications not specific\ndatab best but just in general um here\nthey're just talking about specific\nSecurity Services this is kind of a\nrepeat of what they're talking about up\nhere um but there's the same there's\nidentity service governance service it's\nall the same thing here recognizing\ncompliance requirements that uh vary\namong ad Services sure identify itus\nmanagement capabilities so they're\ntalking about IM am um the itus root\naccount we got it uh separate slide on\nthat uh principal of lease privilege\nabsolutely absolutely will they will ask\nthat there a single sign on also known\nas Adis am identity Center I don't know\nanyone who's gotten this as a question\non their\nexam but uh it's we got a slide for\nit understanding access Keys yep we\ncover that PO uh password policies\ncredential storage Secrets manager\nsystems manager um just a bunch of stuff\nidentify components and resources of\nsecurity describing a security features\nso acl's uh ad US wff security groups\nthey really don't ask these on the exam\nso I'm just trying to make a point that\nthey're asking for all this stuff and\nthey don't even it doesn't even show up\nin the exam so um and you know we can\njust keep going and going through this\nand I could keep telling you what is and\nisn't but if you go down below it gets\neven crazier because they go any of this\nstuff could show up in the exam it's\njust like a big list it's\ncrazy so you know I know that seems\nstressful but you know just follow\nfollow follow me uh in this course and I\nyou will absolutely pass if you go\nthrough my content you'll have no issue\nthere and we'll avoid all the stuff that\ndoesn't show up and don't stress out\nabout this exam guide now let's go take\na look here and see where the rebalance\nhas changed so notice here that this\nwent from 26% to 24% they never used to\ndo this so I really appreciate this is\nnow in the exam guide but we got 25 to\n30% 33 to 34% 16 to 12% why they would\nreduce this one I don't know but it is\nis a shuffle whatever um they of course\nincreased uh the technology section more\nand did some basic rewarding support\nshould have always been in there so it\nwas always under that section but uh\nit's nice that they labeled it as such\num so notice here it says no content was\ndeleted from the exam and um this was\nthe largest struggle for me for the\ncertification because I already made all\nthe content for the last one my old one\nis not expired and I was struggling\nbecause I already had this as well this\nis the only thing that they added that\nwas new to the certification and then\nthey just rework these numbers here and\nso um you know I just I added I did add\nmore I added more Labs I added more um\nother stuff there but I'm just going to\nsay like I don't know why they did an\nupdate from co1 to CO2 because barely\nanything changed now I shouldn't say\nthat the exam questions did change I\nnoticed that the exam questions um the\nquality of them kind of uh have dropped\nI wondering if they're using generative\nAI to generate out questions or or\nsomething but um there's something the\nquality of questions are are definitely\num different and I would say that\nthey're more uh they're not worded as\nclearly as they used to be for whatever\nreason um but anyway you'll still be\nokay it's totally fine uh\nrecategorization of clf CO2 and so they\njust did a shuffle of um of these points\nand I again I really don't think that\nthe the new one is better how useful is\nthis exam guide I should probably give\nthem survey feedback but anyway just\ngive you an idea how much stuff there is\nin here do not stress out just stick\nwith the course you'll absolutely pass\nuh and uh you know hopefully that gives\nyou uh some better confidence there but\nwe'll see you in the next one uh chiao\n[Music]\nchiao hey this is Andrew Brown from exam\nPro and what we're looking at here is a\nfree practice exam that I provide with\nyou uh for this course and all you have\nto do is sign up on exam Pro you don't\neven need to credit card and you can\nredeem uh the free available content\nhere and this is really up to date and\nvery well simulates what you will see on\nthe actual exam and it's a full set full\n65 questions so you're getting a real\nsimulation here but what I'm going to do\nis just start it off here we're not\ngoing to do the whole thing I'm just\ngoing to click through and show you a\ncouple of them so you have an idea um\nthe level of difficulty these questions\nare so the first question we got\npresented with here is which a support\nplans provide access to the seven core\nfor trusted advisor checks and so that\nis a question that you might need to\nanswer I don't want to spoil this for\nyou so I'm not going to tell you the\nanswer I will go to the next one so a\nlarge accounting firm wants to utilize\nOS to store customer accounting\ninformation in archive storage and must\nstore this information for 7 years due\nto Regulatory Compliance which dat\nservice meets this requirement so the\nfirst one you'll notice this one is\nmultiple choice or sorry multiple\nanswers so you have to select multiples\nbefore you can submit your answer and\nthe next one here is is just a single\nchoice so those are the two types of\nquestions you will see on the exam\nthey're not going to ask you anything\nabout coding you're not going to see any\nkind of code um in terms of length\nthat's pretty much what we'll see in\nterms of the uh questions I think in\nmany cases I wrote a little bit more\nmore like um in the style the solutions\narchitect associate to make it slightly\nmore difficult just so that you're a\nlittle bit overprepared so if you do\nwell on these practice exams you're\ngoing to do uh well on the real exam\nokay okay so I just wanted to kind of\nget you that exposure there\n[Music]\nokay hey everyone it's Andrew Brown and\nI have opened our exam simulator this is\non the exam Pro platform and this is the\nfreet uh that I promised uh folks in the\ncourse so no cost to go get this one you\njust have to sign up and and access it\nbut the reason I have it open is because\nI really want to talk about a very\nspecific type of question that we've\nincluded in here that will not appear on\nyour exam\nso uh for those who are familiar with\nAzure certifications um at the associate\nlevel or higher there's this question\ntype called a case study and what a case\nstudy is I'll I'll just pull it up here\nbut I believe uh in this randomization\nof this practice exam set I think it's\nthis one here but what a case study is\nit gives you a scenario that you have to\nread through or a a a case study about a\ncompany so you read about the company\nyou look at the objective its\nrequirements and constraints this stuff\ncan all be different there could be\ndiagrams all sorts of stuff in here but\nthe idea is that you are contextualizing\na business use case and they're going to\nbe asked a series of questions uh\nmultiple choice multiple select and it\nall ties back to that case study so the\nreason we included this is that um we\nbelieve that this is going to give you\nbetter comprehension and a higher chance\nof passing so it's not going to appear\nin your exam but we include it uh as an\nextra challenge to you so that you have\num a higher chance of passing now if you\ndon't like this we do have other\npractice exams they of course are paid\nthat uh that are just the normal style\nwhich is all multiple choice multiple\nselect for um this this course the cloud\npractitioner um but you know we do have\nthem in half of the practice exam sets\nbecause uh again I think that it's going\nto be good for you so hopefully you see\nthat as a bonus but I just wanted to\ngive you a heads up um about this uh\nbecause you'll encountering me like what\nthe heck is this um the other thing I\nwant to point out is that when you enter\na case study it's like having a mini\nexam within your exam so once you've\nanswered all these questions uh you\ncan't go back and and um you can while\nyou're within the case study but if you\nget to the end of this and submit the\ncase study you can't go back and update\nit so just be aware of that um and you\nknow again hopefully you like this we\nlove feedback to hear what people like\nbut it's just they always appeared in\nAzure exams and uh we want to see them\nin ad us ones as well because I think\nthey're just really good for uh testing\nyour knowledge but anyway we'll see you\nin the next one okay ciao\n[Music]\nhey everyone it's Andrew Brown your\nfavorite Cloud instructor and what I\nwant to do in this video is to show you\num a unique feature that is in our\nplatform um just in case you come across\nit while you're while you're uh doing\nthe materials I can't remember if it's\nin the free or paid tier I believe it's\nin the paid tier so I'm not trying to\nupsell anyone but I just want to make\nsure people are aware of that while they\nare um taking this course but sometimes\nwhat you'll see in the follow along so\nlike for example we have S3 down here\nhere which is for uh Cloud simple\nstorage uh and I don't have them always\nincluded in the videos but um at some\npoint I might do that but the idea is\nthat um we have these validators and\nvalidators what they can do is they can\nverify uh whether you actually have uh\nthe resources uh deployed in your cloud\naccount um so it's like an additional\ncheck to make sure that you did it right\nso for example we have this one for S3\nso it says set up an S3 bucket it is\naccount validation so this tool perform\nperms an automated check on your\npersonal cloud infrastructure to confirm\nits alignment with the build project\nrequirements make sure you input precise\nvalues for your infrastructure\ncomponents so let's go through that and\nshow you this I'm showing this as an\nexample but you know you'll see them in\nother in other follow alongs and lookout\nfor for that stuff I believe in the\nto-do it'll even show it uh here so if\nyou watch the video and you watch it to\nthe end or you press that button there\nbut you'll get your your uh your star uh\nfor that but the way it works let's go\nthrough it so the first thing is I want\nto uh click on this new run button and\nthen what we'll do is we'll have an\nagreement so this agreement is\nconfirming that you understand that you\nare using your own cloud account uh and\nwe are going to uh need to get readon\naccess to it and just understand that\nyou are using uh you're providing us\naccess to account that is your own\naccount and it's not your company's\naccount because obviously we don't want\nto get in trouble for accessing data\nthat we're not supposed to have and you\ndon't want to get in trouble for that so\nthat's just a a friendly reminder so I'm\ngoing to click the I agree and the\naccept the next thing it's going to ask\nfor is your adus account ID the region\nthat you're deploying in and then it\nthere might be additional uh parameters\nthat it wants to know so that we can\ntest against it so what I'm going to do\nis just log into my adus account it'll\njust take me a moment and we'll fill\nthis out for real okay now of course I'm\nfilling out this example here but I just\nwant to point out that um uh you know\nyou're just going to have to follow this\nprocedure and it'll be slightly\ndifferent for each one uh for that okay\nbe back in just a second all right so\nI'm logged into\nand uh one of my ad accounts I have a\nlot of them I think this one is my\ndevelopers one so uh for this particular\nfollow long you would have created an S3\nbucket right and so um what I'm going to\ndo here is go to S3 and I already know\nwhat to do so it's not too hard for me\nbut I'm going to go ahead and create\nmyself a new bucket I'm going to make\nnote of the region that I'm deploying in\nso S3 is a bit unique because it shows\nGlobal but you are still deploying to a\nspecific region so we'll go ahead and\ncreate that bucket I'm just going to say\nmy validator bu it as a test notice\nwhere it's deploying Us East one I could\nchange that to anything else like ca\nCentral um I am in Canada so doesn't\nhurt to deploy where I am and we'll go\nhere and go all the way down and I'm\ngoing to go and create this bucket okay\nso um that bucket name was I forget it\nwas like something like validator and so\nwhat I need to do is copy that name\nwe'll go back over here and so it's\nasking for the bucket name so there's\nthe bucket name we need the it account\nID that always appears in the top right\ncorner and they have a nice um clipboard\nbutton there to get that in there and\nthe region so we deploy that in CA\nCentral 1 so it says there CA Central\none you're always using this uh\nprogrammer's name not the full name but\nthis this fun handle you can see them\nall here on the right hand side if\nyou're not sure about that but what\nwe'll do is go back over here we'll\npaste in that user region and so what\nthis is going to do is create a um a\ncloud formation template that's going to\ngive access to us to uh your account so\nwe'll go ahead and hit save and continue\nand so now we uh We've inputed our\nparameters those have been saved and now\nit's saying we need to access your Cloud\nresources so we want you to generate\nthis cloud formation template we're\ngoing to press the button we'll wait a\nmoment and we can either download this\ntemplate or use the ads CLI to run it um\nthe CLI command is a lot easier to use\nand I'm going to recommend that you\nalways do that and uh so what we're\ngoing to do is generate out this CLI\ncommand and we're going to get this\noneline command and I'm going to go back\nover to AWS sorry I know I'm going\nreally fast but it's just how it is and\nat the top left corner we have this\nlittle button here that's for cloud\nshell we're going to open it up I know\ncoding scary but it's really important\nto get as much coding experience or\nscripting as you can so strongly\nrecommend you follow along here but uh\nit's going to open up and once it's it's\nopen we can paste that in now sometimes\nthis wants to have some kind of EBS\nstorage so you might have to say yes and\nwait a little bit um that's just the\nnorm for cloud storage but I'm going to\ngo back here I'm going to copy this\ncommand okay and we're going to go back\nover here I'm going to right click and\npaste and uh this always happens when\nthere's a multitext line we got a pop up\nhere and we're just going to review it\nlooks good so notice it has a template\nURL so that's the template it's pulling\nin um there's temporary credentials to\nuh to allow that uh it's going to create\na stack name called exam Pro validation\nand it's going to say capability I named\nI am now this might fail because I've\ndone it before but we'll go ahead and\npaste it in I'm going to hit enter\nand it looks like it's creating the\nstack so we'll go over to cloud\nformation and uh we'll go\nhere and I'll just get this out of the\nway I don't want that open right now and\nso I'm just going to give this a\nrefresh and did that create that right\nnow that was the name of the stack right\nexam Pro validation that is correct and\nif I go over\nhere uh what's the date today I don't\neven know\ncuz that might be an older date I mean\nit's November so I I don't think that\none worked because I already had it uh\nworking there before um so what I'm\ngoing to do\nhere I'm going to go ahead and delete\nthis one okay so I just want to point\nout like if you're doing multiple\nvalidators in the system you always have\nto roll it back tear it down okay like\nthe old one so I'll delete that one\nagain because I just don't have a strong\nconfidence that it was actually deployed\nso I'll be back in just a moment as it\ntears down\nall right it actually did uh finish\ntearing down so that is um there but I'm\ngoing to go back here I'm going to\nattempt to run this command again so go\nahead and copy this and I will paste it\nin again we'll say paste and I'll hit\nenter and uh says already existed in the\nsack well what are you talking about\nit's definitely uh definitely not there\nthat's what I thought I would get as an\nerror the first time\naround so this is CA Central 1 oh you\nknow what it is I'm in North Virginia so\nyou got to be very careful with your um\nyour regions so I go over\nhere so I I did I did delete one that\nwas from another one that's why I was\nconfused because I thought it already\nexisted I have to delete it out th this\nis normal and Cloud right so just\nunderstand that when I do follow alongs\nI don't edit out the tricky Parts\nbecause I know it makes it a little bit\nconfusing but it really does help to uh\ndemonstrate uh how confusing Cloud can\nbe and how to work through those\nproblems but over here see Central so\nthis is deployed 11:15 that's the date\nthat I've deployed this on so that makes\nsense uh here uh so we just got to be\nvery uh aware of that so this is in C\nCentral one uh but we'll go back over\nhere and so this is done so we know that\nit's done because it's here it's in the\nregion that we expected to be in so now\nthe uh the permissions are done we can\nrun the polar so what the polar is going\nto do is it's now going to pull data\nfrom your account uh uh and that way\nwe're going to uh be able to then\nvalidate whether things are correct so\nwe'll go ahead and run the pull and\nnotice it says S3 API list buckets it\nflashed it really quickly but the way\nthis tool works is it's actually using\nthe adus CLI underneath so I'm just\ngoing to go ahead and just show you what\nthis\nis uh and just show you a quick\nreference here so the C is a pratic way\nto um uh access uh information uh for\neight of us we probably show that\nsomewhere in this course and so the\ncommand was running I believe was I\nshould know I coded this was S3\nAPI and then it was like list\nbuckets uh list buckets so that's the\ncommand it ran so really what the\nvalidator did it it did ads S3 API list\nbuckets okay and if you notice this it\nreturns back Json so we get back the\npayload that's what we are storing in\nour own itus account which by the way we\ndelete after a period of time I don't\nremember how much time but we don't hold\non to your data for cuz we don't really\nwant it um but yeah so here it's\nreturning back that data and so\nsomewhere in here that there the the\nbuckets in here right so we've pulled\nthat data and it's there and so now we\ncan run the validator we'll click run\nvalidator and it's super fast because we\nalready have the data downloaded and\nit's doing one check here so it says\nshould have bucket matching name so you\ncan see it's it's doing it's loading\nfrom a Json file that's called S3 API\nlist buckets we always name our the Json\nfiles after the commands and it's\nlooking through buckets so if we go over\nhere all the top here for a moment you\ncan see buckets so it's looking with in\nthis array and it's trying to match a\nname called my validator bucket which\nwhich which you provided to\nus so somewhere in here I have a lot of\nbuckets in this account somewhere in\nhere uh there it is it's there and so\nthat's how that works um but yeah just\nlook out for those validators um and uh\ntry to run them and and validate that uh\nyou are able to uh do this stuff okay\nbut we'll see you in the next one okay\nciao oh wait wait wait wait wait wa wait\nI didn't show you how to clean up I'm\njust running off screen here so once\nyou're\ndone uh what you can do is you can go\nover to cloud formation here and you\nshould do this is go ahead and delete\nthe stack okay um because that's going\nto tear down the permissions so that we\nno longer have access to your account um\nso that's kind of an important thing to\ndo um but uh we'll go ahead and the\nother thing about these permissions is\nthat we're only asking for exactly what\nwe need access to so in this in this uh\npermissions it only generate up to get\naccess to uh the S3 bucket specifically\nwhat we're accessing for so even if you\nleft it up it's usually okay it's safe\nbut um you know if there's no reason for\nus to have access anymore you should all\nobviously delete it um but yeah that one\nis now gone and so now we are absolutely\ndone I'm going to go ahead and just\nclose this out here but yeah hopefully\nuh that makes it pretty clear how\nvalidators work in our system and you\nsee the benefit uh to getting that uh\ncheck in your real account\n[Music]\nciao hey this is Andrew Brown from exam\nPro and we are at the start of our\njourney asking the most important\nquestion first which is what is cloud\ncomputing so cloud computing is the\npractice of using a network of remote\nservers hosted on the internet to store\nmanage and process data rather than a\nlocal server or personal computer and so\nwhen we're talking about on premise you\nown the servers you hire the IT people\nyou pay or rent the real estate you take\nall the risks but with a cloud provider\nuh someone else owns the servers someone\nelse hires the IT people someone else\npays or rents the real estate and you\nare responsible for configuring cloud\nservices and code and someone takes care\nof the rest of it for you\n[Music]\nokay so to understand cloud computing we\nneed to look at the evolution of cloud\nhosting going all the way back to 1995\nwhere if you wanted to host your website\nor web app you'd have to get a dedicated\nserver so that would be one physical\nmachine dedicated to a single business\nrunning a single project a site or an\napp and as you can imagine these are\nexpensive because you have to uh buy out\nright the hardware have a place to store\nit the network connection having a\nperson to maintain it um but it did give\nyou a guarantee of high security um and\nthey still do as of today so this model\nhasn't gone away but it's been\nspecialized for a particular use case\nthen came along the virtual private\nserver so the idea is we still had one\nphysical machine but now we were able to\nsubdivide our machine into submachines\nvia\nvirtualization and so essentially you're\nrunning a machine within a machine and\nso you had better utilization of that\nmachine um running multiple web apps as\nopposed to having a physical machine per\nproject so you got better utilization\nand isolation of resources and so uh\nthese two options still required you to\npurchase a machine machine a dedicated\nmachine and so that was still kind of\nexpensive but then came along shared\nhosting and so if you remember uh the\nmid 2000s like with GoDaddy or HostGator\nor any of those sites where you had\nreally cheap hosting the idea is that\nyou had this one physical machine shared\nby hundreds of businesses and the way\nthis worked it relied on uh tenants\nunderutilizing their resources so you\nknow you wouldn't have a submachine in\nthere but you'd have a folder with\npermissions that you could use um and so\nyou would really share the cost and this\nwas very very cheap um but you were\nlimited to whatever that machine could\ndo and you were very restricted in terms\nof the functionality you had and there\nwas just poor isolation meaning that you\nknow if one person decided to utilize\nthe server more they could hang up all\nthe all the websites on that single\nserver then came along Cloud hosting and\nthe idea is that you have um multiple\nphysical machines that act as one system\nso this is distributed computing and so\nthe system is abstracted into multiple\ncloud services\nand the idea is that you basically get\nthe advantages of a lot of the things\nabove so it's flexible you can just add\nmore servers um it's scalable it's very\nsecure because you get that uh virtual\nisolation you get it extremely at a low\ncost because you're sharing that cost\nwith the users where in the shared\nhosting it might be hundreds of\nbusinesses we're looking at thousands of\nbusinesses and it was also highly\nconfigurable because it was a full\nvirtual machine now uh Cloud actually uh\nstill includes all of these types of of\nHosting they haven't gone away uh but\nit's just the idea that you now have\nmore of a selection for your use case uh\nbut hopefully that gives you an idea uh\nwhat cloud hosting looks like and it\nreally has to come down to distributed\ncomputing\n[Music]\nokay hey this is Andrew Brown from exam\nPro and before we talk about AWS we need\nto know what is Amazon so Amazon is an\nAmerican multinational computer\ntechnology corporation headquartered in\nSeattle Washington and so this is the\nSeattle skyline with the Bas needle and\nAmazon was founded in 1994 by Jeff Bezos\nand the company started as an online\nstore for books and expanded to other\nproducts so as you can see this is Jeff\nBezos a long time ago and he has this\ninteresting spray painted sign and his\ndesk is held up by cinder blocks and it\nlooks like his uh desk is like an old uh\ntable or something and he's working\nreally late and he used to be a\nmillionaire at this time and he would be\ndriving into work in his Honda Accord\nbecause you know he just his motivation\nwas always to put all the money back in\nthe company so it really shows that he\nworked really hard and it did pay off\nbecause Amazon has expanded uh Beyond\njust an online Ecommerce store into a\nlot of different things such as cloud\ncomputing which is Amazon web services\nDigital streaming such as Amazon Prime\nvideo Prime music they bought twitch.tv\nthey owned the Whole Foods Market\ngrocery store they have all this\nartificials intelligence they own low\norbit satellites uh and a lot more stuff\nit's hard to list at all and so Jeff\nBezos today is not the um the CEO it's\nactually Andy jasse is the current CEO\nof Amazon he was previously the CEO of\nAWS so Jeff Bezos can focus on space\ntravel so there you\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we are taking a look at Amazon\nweb services and this is the name that\nAmazon calls their cloud provider\nservice and it's commonly referred to\njust as AWS so here is the old logo\nwhere we see the full name and here is\nthe new logo but I like showing the old\nlogo because it has these cubes which\nbest represent what AWS is and it is a\ncollection of cloud services that can be\nused together under a single unified API\nuh to build uh a lot of different kinds\nof workloads so adus was launched in\n2006 and is the leading cloud service\nprovider in the world I put an aster\nthere because technically uh adus exist\nbefore 2006 and a cloud service provider\nuh which is what adus is is often\ninitialized as CSP so if you hear me\nsaying CSP I'm just saying cloud service\nprovider okay so just time to look at\nthe timeline of when Services rolled out\nthe first one came out in uh 2004 it was\nsimple Q service sqs and this service\nstill exists as of today but at the time\nit was the only service that was\npublicly available so it wasn't exactly\na cloud service provider at this time\nand it was neither ads it was just sqs\nbut then a couple years later we had\nsimple storage service also known as S3\nwhich was launched uh in March of 2006\nand then a couple months later we had\nelastic compute Cloud also known as ec2\num and ec2 is still uh like the most\nused service within AWS and is like the\nbackbone for pretty much everything\nthere then in 2010 it was reported that\nall of amazon.com's retail sites had\nmigrated to AWS so even Amazon was using\nads uh Full Steam and to support\nindustrywide training and and skill\nstandardization ads began offering a\ncertification program for computer\nEngineers on April 2013 uh and this is\nthe type of certifications that we are\ndoing as we speak um so I just want you\nto know that ads was the one leading uh\nCloud certifications and we just want to\ntake a look here at the executive level\nas of today the CEO is Adam he's the\nformer CTO of Tableau and he spent a\ndecade with adus as a VP of Marketing\nsales and support so he was there he had\nleft for a bit and now he is back then\nwe have uh wner and he's the CTO of AWS\nhe's been uh the CTO for pretty much the\nentire time aw existed with the\nexception of some time of the first year\nhe's famous for uh quoting everything\nfails all the time and then there's Jeff\nbar who's the chief evangelist so um if\nyou're ever wondering who is writing all\nthe blog posts and talking about anys\nit's it's always Jeff bar okay\n[Music]\nall right so what I want to do here is\nexpand on what is a cloud service\nprovider also known as a CSP just\nbecause there's a lot of things out in\nthe market there that might look like a\nCSP uh but they actually are not so\nlet's go through this list and see what\nmakes a CSP so this is a company which\nprovides multiple cloud services ranging\nfrom tens to hundreds of services those\ncloud services can be chained together\nto create cloud architectures those\ncloud services are accessible via a\nsingle unified API so in ad's cases that\nis the adus API um and from that you can\naccess the CLI the SDK the Management\nconsole those cloud services utilize\nmetered building based on usage so this\ncould be per second per hour uh vpcu\nmemory storage things like that those\ncloud services have Rich monitoring\nbuilt in so you know every API action is\ntracked and you have access to that so\nthis case it's a cloud trail and the\nidea here is those cloud services have\ninfrastructure as a service offering so\nIAS that means they have networking\ncompute uh storage databases things like\nthat those cloud services offers\nautomation via infrastructure as code so\nyou can write code to set everything up\nand so here's just kind of a example of\nan architecture where we have a very\nsimple uh web application running on ec2\nbehind a load bouncer with the domain\nwith r 53 but the idea is just to show\nyou that you know you're changing these\nthings together if a company offers\nmultiple cloud services under a single\nUI but do not meet most of or all of\nthese requirements it would just be\nreferred to as a cloud platform so when\nyou hear about twilio or Hashi Corp or\ndatab bricks those are Cloud platforms\nand adab US Azure gcp are cloud service\nproviders\n[Music]\nokay all right let's take a look here at\nthe landscape of CL service providers\nthis is generally broken down into tier\none tier 2 tier three but I've modified\nit to give each tier its own name as I\ndon't like to think of them as rankings\nand more so that uh these cloud service\nproviders are specialized uh for a\nparticular thing um and I've also added\na fourth tier because you know the\ninternet has always talked about three\ntiers but there really is a fourth tier\nand I wanted to make sure we had uh the\nfull scope here included so in the top\ntier you're going to recognize uh some\ncommon names there Amazon web service\nMicrosoft Azure Google Cloud platform\nand Alibaba cloud in North America and\nEurope uh adab us Azure and gcp are\nknown as The Big Three um but Alibaba\ncloud is huge as well if you're in the\nAsia region specifically China so it's\nreally just going to be dependent on\nwhere you live where uh which are\nconsidered the most um commonly known or\npopular uh but we'll talk about that\nhere in a moment but the reason um I\ncall tier one top tier is that these are\nyou know very well-known providers\nthey're ear early to Market they have\nstrong synergies between their services\num they're just really good cloud\nservice providers you cannot go wrong\nwith uh these providers then we have our\ntier two or I would call our mid- tier\nuh these are backed by really well-known\ntech companies but I would just say that\num their ability to become top tier uh\ndid not work out the way they planned so\nIBM at one point was looking to be a top\ntier provider um but they just did not\nkeep up with um AWS and and they just\nslipped into this mid tier and kind of\nspecialized at least for a while into ml\nAI services and now they're just more\nlike very expensive um Enterprise uh\nmanaged\ninfrastructure for their existing\nclientele Oracle um very very\ninexpensive that's their play they try\nto uh be the cheapest but their uh\nservice um overall is not uh fun to use\ninterestingly enough believe Microsoft\nAzure was just signing a contract to use\nOracle Cloud so it's not unusual for\nsome of these cloud service providers or\nthese organizations to use other\nproviders because they want to use their\nGlobal infrastructure but uh yeah Oracle\ncloud is uh not doing that great there\nare other ones in the Asia region like\nHawaii cloud and 10cent Cloud I honestly\ndon't know a whole lot about them but\nthey do show up on the magic quadrant so\nit's possible in the Asia region that\nthese are are the big three and uh AWS\nAzure and gcp do not play a larger role\nbut from our perspective I put them into\nthat mid tier because they just don't\nhave Global uh awareness or Global um\nmarket dominance like the other three uh\nup there looking at the light tier uh\nthese were traditionally virtual private\nservers so they just specialized in that\nand they turn to offer more core\ninfrastructure service offerings so we\nhave a vulture we saw it was pronounced\nvoler but it's actually vulture digital\nocean and aimi connected Cloud which was\nformerly known as Leno or lenoe um so\nthey merg their companies together and I\nmean they want to be like a cloud\nservice providers but they're very very\nlight in terms of their offering so um\nyou know they'll have things like\nserverless and being able to run uh\nkubernetes cluster and some cloud\nstorage and stuff but they won't have\nthings like um the the same level of of\nevent driven um metered billing or or\nother kinds of uh functionality that you\nyou come to expect in the top tiers but\nyou know if you're working with a\nsmaller organization they are a lot\nsimpler to uh to utilize so they are a\ngreat introduction to Cloud for\ncompanies that find the top tier uh too\ncomplex and then looking at the fourth\ntier I call this the private tier this\nis basically software that you can\ndeploy onto your own uh machines and\nyour data centers to get the same same\nkind of um functionality that you would\nif you were using let's say adabs or any\nof these other providers and um you know\npreviously I would put open stack into\nthe mid tier because in a sense that it\nwas kind of like a cloud service\nprovider that was using uh quite a bit\nbut I didn't feel like it had had good\nfit there so that's why we made this a\nfourth tier and we have a few different\nsoftwares we have open stack apachi\nCloud stack those are both open source\nand there's VMware vpar I have an aster\nthere because it's not really the same\nthing but it is used a lot everywhere to\nmanage a lot of virtual machines and so\nI I kind of feel like it should fit in\nthere but that gives you kind of an idea\nof the landscape of cloud and we'll see\nyou in the next\n[Music]\none so how do we determine who is the\nleader in Cloud well one way of\nindicating that is the Gardner magic\nquadrant for cloud so the magic quadrant\nis a series of market research reports\npublished by the IT consulting firm Gard\nthat rely on proprietary qualitative\nqualitative data analysis methods to\ndemonstrate market trends such as\nDirection maturity and participants so\nit says a series of reports uh but the\nonly thing I've ever seen are these\nGraphics where they show um a uh the the\nquadrant it's a it's a diagram that\nsummarizes all the information so I\nthink you have to you might have to pay\nto access uh the reports um because it's\ndefinitely not just uh publicly\naccessible knowledge and I don't think\nthey would show all of uh how this stuff\nis calculated but uh let's just take a\nlook at this graphic here so notice we\nhave challengers in the top left corner\nleaders in the top right corner in the\nbottom left corner we have Niche players\nand then in the bottom right corner we\nhave Visionaries so the idea here is\nthat The Closer you are to this top\nCorner uh the better you are doing and\nthe one that is closest to it is Amazon\nweb services followed with Microsoft\npretty close uh in second Google to the\nleft Alibaba Cloud next Oracle and we\nhave IBM 10cent and Hawaii and there are\nother players but they are so small that\nthey are not showing up there and we\nshowed that in the landscape of csps or\num maybe this is only for first they\nconsider what we call First tier or top\ntier cloud service providers it's really\nuseful to look at last year's uh mq and\nto see how things have moved so it looks\nlike uh it uh Microsoft has shifted a\nlittle bit forward here and gone a\nlittle bit closer to\nGoogle has cifically moved up and um\nAlibaba Cloud it seems to be moving more\nuh to the right um and again I'm just\nshowing what their movements were from\nthis year to that year so they are over\nhere now Oracle is way over here now and\nfor whatever reason Huawei cloud is on\nthe board so it's interesting to see how\nthey move another thing that's um\ninteresting here is that this one is\n2022 of June and this one is July of\n2021 and\nright now as the time I'm recording this\nvideo it's 2023 near the end of the year\num and I could not find a 2023 one so\neven if it says June or July they will\nrelease these out in October November\nEtc way later in the year and so for\nwhatever reason they have yet to make um\nthe latest one available so I'm still\ncurious to see what that is here so I'm\njust giving you the information that we\nhave but you can look at this stuff um\nbasically on the the Garder website if\nyou want to see\num any of these magic quadrants for any\nof the industries there and what I find\nis that if a compan is doing really well\nthey'll always post it on their website\nso it's very easy to find the uh Magic\nquadrant for cloud on the a website\nbecause they're the leader so they\ndefinitely want to show that there uh\nbut yeah there you\n[Music]\ngo so a cloud service provider can have\nhundreds of cloud services that are\ngrouped into various types of services\nbut the four most common types of cloud\nservices for infrastructures of service\nuh and I call these the four core would\nbe compute so imagine having a virtual\ncomputer that can run applications\nprograms and code networking so imagine\nhaving virtual Network defining internet\nconnections or network isolation between\nservices or outbound to the internet\nstorage so imagine having a virtual hard\ndrive that can store files databases so\nimagine a virtual database for storing\nreporting data or a database for general\npurpose web applications and uh AWS in\nparticular has 200 plus cloud services\nand I want to clarify what cloud\ncomputing means because notice that we\nhave cloud computing Cloud networking\ncloud storage Cloud databases but the\nindustry often just says cloud computing\nto refer to all categories even though\nuh it has computer in the name so just\nunderstand when someone says cloud\ncomputing uh they don't just generally\nmean the subcategory they're talking\nabout all of cloud okay\n[Music]\nso adus has a lot of different cloud\nservices and I just want to kind of go\nquickly over the types of categories\nthat we can encounter here and just\nmention the four core so any CSP that\nhas IAS will always have these four core\nservice offerings we have computes so\nNat this would be ec2 VMS storage this\ncould be something like EBS virtual hard\ndrives database so that could be RDS SQL\ndatabases networking and content\ndelivery but really it's networking uh\nand this would be VPC so private Cloud\nNetwork okay so uh let's just look at\nall the categories that are outside the\nfour core so there could be analytics\napplication integration arvr ads cost\nmanagement blockchain business\napplication containers customer\nengagement developer tools and user\nComputing game Tech iot Machine Learning\nManagement governance Media Services\nmigration uh and transfer mobile Quantum\ntechnology s robotics satellites\nsecurity identity and compliance if\nthere was more I would not be surprised\nbut you can see there's a lot of stuff\nthat's going on\nhere so let's take a look at all the ITA\nservices that are available to us so if\nyou're on the marketing website which is\nadab.\namazon.com what you'll see in the top\nleft corner is products and so these are\nall the categories and for whatever we\nwant if it's like ec2 we can go into\nhere and we can read all about it so\nusually we'll have our overview all\nright and that's not very useful and\nthen we'll go over to features and so\nthis is can be kind of useful to get\nsome basic information and pricing which\nis something you'll do a lot in AWS is\nyou're always going to be going to a\nservice looking up its price and so\nyou'll make your way over uh here every\nsingle one is different uh a very\nimportant page would be like getting\nstarted so this will give you basic\ninformation but what I do is I like to\ngo all the way down to the bottom here\nand find my way over to the\ndocumentation so I'll go here to\ndocumentation to get that deeper\nknowledge about that service and as you\ncan see things get pretty deep with AWS\nin terms of the information they have so\nhopefully that gives you an idea of the\nscope also when you're logged into AWS\nand this will be when we create our\naccount uh you can explore all the\nservices this way as well so these are\nall the ad Services uh but you just\nnotice that there's two ways to uh\nexplore them where this is actually you\njust actually utilizing the services and\nthen the marketing website is you\nreading about them and learning all\nabout them\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are looking at the evolution\nof computing your cloud service provider\nhas all of these offerings and the idea\nis that you need to choose the one that\nmeets your use case a lot of times this\nall has to come around the utilization\nof space that's what we're trying to\nillustrate here in this section here and\nthe trade-offs of why you might want to\nuse some of these offerings okay for\ndedicated we're talking about a uh a\nphysically a physical server wholly\nutilized by single customer that's\nconsidered single tenant and uh for\nGoogle Cloud we're talking about um\nsingle node clusters and bare metal\nmachines where you have control of the\nvirtualization so you can install any\nkind of hypervisor or virtualization you\nwanted the system the trade-off here\nthough is that you have to guess upfront\nwhat your capacity is going to be and\nyou're never going to 100% utilize that\nmachine because it's going to have to be\na bit under in case the utilization goes\nup that's you're choosing the CP use and\nthe memories you're going to end up\noverpaying because you're uh you'll have\nunder underutilized server uh it's not\ngoing to be easy to vertically scale\nit's not like you can just say resize it\nbecause the machine you have is what you\nhave right you can't add more I mean I\nsuppose they can insert more memory for\nyou but that's a manual migration uh so\nit's very difficult um and replacing the\nserver is also very difficult okay so\nyou're limited by the host operating\nsystem it's not virtualized so whatever\nis on there is on there um and that's\nthat's what your apps are going to have\naccess to if you decide to run more than\none app which is not a good practice for\nthese kind of machines uh you're going\nto end up with uh resource sharing where\none machine might utilize more than the\nothers technically with a dedicated\nmachine you have a guarantee of security\nprivacy and full utility of the\nunderlying resources I put an aster\nthere because yes it's more secure but\nuh but it's up to you to make sure that\nit's more secure so you have that's up\nto your skills of security right whereas\nif you had a virtual machine or anything\nabove that there's more responsibility\non the cloud service provider to just\nprovide a secure machine and they can do\na better job than you so why would you\nuse a dedicated machine well maybe\nyou're doing high performance Computing\nwhere you need these machines like very\nclose together and you have to choose\nwhat kind of virtualization you need to\nhave okay so then we're looking at\nvirtual machines the idea here is you\ncan run a machine within a machine the\nway that works is we have a hypervisor\nthis is a software layer that lets you\nrun the virtual machines uh the idea\nhere is now it's multi-tenant you can\nshare the cost with multiple customers\nyou're paying for a fraction of the\nserver uh you'll still end up overpaying\nfor the underutilized virtual machine\nbecause a virtual machine is just like\nyou have to still say how many V vcpus\nhow much memory and your app is you you\ndon't want an app that uses 100% right\nyou want to use exactly the amount you\nneed but you can see here you know\nthere's still going to be some\nunderutilization uh you are limited by\nthe guest operating system now but now\nit's virtualized so at least it's very\neasy to uh possibly migrate away if you\nchoose to run uh more than one app on a\nvirtual machine it it can still run into\nresource sharing conflicts uh it's\neasier to export or import images for\nmigration it's easier to vertically or\nhorizontally scale okay and virtual\nmachines are the most common and popular\noffering for compute because people are\njust very comfortable with those then\nyou have containers and the idea is you\nhave a virtual machine running these\nthings called containers the way they do\nthat is similar to a hypervisor but\ninstead you have um like here is a\nDocker demon so it's just a um a\ncontainer uh software layer okay to run\nthose containers there different kinds\nDocker is the most popular uh and the\ngreat thing is you can maximize the uh\nthe the capacity because you can easily\nadd new containers resize those\ncontainers use up the rest of the space\nit's a lot more flexible okay uh your\ncontainers will share the same\nunderlying OS but they are more\nefficient than multiple VMS uh multiple\napps can run side by side without being\nlimited uh by the the same OS\nrequirements and not cause conflicts\nduring resource sharing so containers\nare really good but you know the\ntradeoff is there a lot more work to\nmaintain then you have functions\nfunctions go an even step further and\nthe idea is that you uh the the\ncontainers where we where we talked\nabout that's a lot of work to maintain\nnow the cloud service provider is taking\ncare of those containers generally\nsometimes not it depends if it's\nserverless or not but the idea is that\nyou don't even think about this is\ncalled seress compute but you don't even\nthink about uh the OS or anything you\njust know that what your runtime is you\nrun Ruby or python or node and you just\nupload your code and you just say uh I\nwant this to be able to run uh uh for\nthis long uh and use this amount of\nmemory okay you're only responsible for\nyour code and data nothing else it's\nvery cost effective you only pay for the\ntime the code is running uh and VMS only\nrun when there is code to be executed\nbut because of that there is this\nconcept of cold starts and this is uh\nwhere the machine has to spin up and so\nsometimes requests can be a bit slow so\nthere's a bit of tradeoff there but\nfunctions or serverless compute is\ngenerally one of the best offerings as\nof today but most people are still\ngetting kind of comfortable with that\nParadigm\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at the\ntypes of cloud computing and the best\nway to represent this is a stacked\npyramid and we'll start our way at the\ntop with SAS also known as software as a\nservice so this is a product that is run\nand managed by the cloud service\nprovider you don't have to worry about\nhow the service is maintained it just\nworks and remains available so examples\nof this and actually uh the first uh\ncompany to coin this was actually\nSalesforce um then there's things like\nGmail office through 65 so think\nMicrosoft Word Excel things like that\nand they run the cloud okay and SAS is\ngenerally designed for customers in mind\nthen came along platforms of service um\nalso known as pass and these focus on\nthe development or sorry the deployment\nand management of your apps so you don't\nworry about provisioning configuring or\nunderstanding the hardware or operating\nsystem and so here we' have things like\nelastic beant stock Heroku which is very\npopular among developers that just want\nto launch their code or Google app\nengine and that is the old logo but\nthat's the logo I like to use because I\nthink it looks cool and so these are\nintended for developers the idea is that\nyou just deploy your code um and the\nplatform does the rest\nthen there is infrastructure as a\nservice um there's no way to say that\nlike it's easy to say SAS or pass but\nthere's no easy way to say IAS so this\nis the basic building blocks for cloud\nit it provides access to networking\nfeatures computers and data storage\nspace and the idea here is you don't\nworry about the IT staff data centers\nand hardware and so that would be like\nMicrosoft Azure AWS Oracle Cloud things\nlike that and these are for\nadministrators okay so there you go\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are taking a look at cloud\ncomputing deployment models starting\nwith public cloud and the idea here is\nthat everything when I say everything\nI'm talking about the workloads the\nprojects the code is built on the cloud\nservice provider so here is a diagram\nwhere we have a ec2 instance a virtual\nmachine running her application and then\nwe have our database in RDS and we have\nthe internet coming into our adus\naccount and so everything is contained\nall of our infrastructure is within AWS\nall right uh and so this is known as\nbeing Cloud native or Cloud first and I\nput an aster beside Cloud native because\nthat was a term uh that was used prior\nto cloud service providers to refer to\nContainers or open- Source um uh models\nbeing deployed and being mobile other\nplaces so just understand that it has\ntwo meanings but in the context of this\nCloud native just being like native to\nthe cloud like using Cloud to begin with\nokay then we have private Cloud so\neverything built on a company's data\ncenter uh and being built on a data\ncenter is known as being on premise\nbecause that is where the data center\nresides near where you work and so here\nyou could be using Cloud but you'd be\nusing openstack which would be a private\nCloud so here we have our on- premise\nData Center and uh the internet's coming\ninto our data center and we're running\non open stack where we can launch\nvirtual machines and a database okay\nthen there's the concept of a hybrid\nCloud so using both on premise and a\ncloud service provider together and so\nthe idea here is we have our on premise\nData Center and then we have an\nestablished connection maybe it's a VPN\nconnection maybe it is a direct\nconnection um but the idea is that we're\nbridging that connection and uh\nutilizing both our private and our\npublic uh stuff to uh create a cloud\nworkload then there is a fourth one\ncalled cross Cloud um some sometimes\nit's known as multicloud and sometimes\nit's erroneously referred to as hybrid\nCloud but it generally is not hybrid\nCloud okay the idea here is when you're\nusing multiple Cloud providers and so\none example here could be using services\nlike Azure Arc so Azure Arc allows you\nto extend your um control plane uh so\nthat you can deploy containers for\nkubernetes in um Azure within Amazon eks\nwithin gcp kubernetes engine but you\nknow being cross Cloud doesn't\nnecessarily mean that you're running a\nuh using a service that use Works across\nthe cloud and manages it it could just\nmean using multiple providers at the\nsame time another service that is\nsimilar to Azure Arch but is for a\nGoogle Cloud uh platform is also know as\nanthos um adab us has traditionally not\nbeen um cross Cloud uh friendly and so\nwe haven't seen any kind of developments\nthere where we see uh these other\nservices that are or cloud service\nproviders behind AWS trying to promote\nto uh grab more of the market share\n[Music]\nokay so let's talk about the different\ndeployment models and what kind of\ncompanies or organizations are still\nutilizing uh for these particular\ncategories so for cloud again this is\nwhere we fly utilizing cloud computing\nhybrid is a combination of public cloud\nand on-prem or private cloud and then on\nPrem is deploying resources on premise\nusing virtualization Resource Management\ntools sometimes called private cloud or\ncould be utilizing something like open\nstack so for companies that are starting\nout today or are small enough to make\nthe leap from virtual private server to\na cloud service provider this is where\nwe're looking at Cloud so we're looking\nat startups SAS offerings new projects\nand companies um so maybe this would be\nlike base camp Dropbox Squarespace then\nfor hybrid these are organizations that\nstarted with their own data center but\ncan't fully move to Cloud due to the\neffort or migration or security\ncompliance so we're talking about Banks\nfintech Investment Management large\nprofessional servic providers Legacy on\nPrem so maybe CIBC which is a bank deoe\nuh the CCP or CPP investment board and\nthen for on premise these are\norganizations that cannot run on cloud\ndue to strict Regulatory Compliance or\nthe sheer size of the organization or\nthey just have like an outdated uh idea\nof what cloud is so they just have a lot\nof uh difficulties in terms of politics\nadopting Cloud um so this would be\npublic sector like government super sens\nof data like hospitals large Enterprise\nwith heavy regul insurance companies um\nso again hospitals maybe AIG the\ngovernment of Canada and so I shouldn't\nsay that they aren't using Cloud but um\nyou know because uh adabs and all the\ncloud service providers have um uh\npublic sector offering so um you know\nI'm just trying to Stage as an example\nof things that could be still using on\npremise so you know I know the\ngovernment Canada definitely uses uh\ncloud in a lot of ways same with AIG and\nhospitals but you know generally these\nare the the last holdouts of on Prem\nbecause there really isn't a a good\nreason to be fully on premise anymore uh\nbut again there are some things that are\nstill doing that\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are at the start of our\njourney creating ourselves an adus\naccount so what you need to do is go to\nadab us. amazon.com if you don't have a\nlot of confidence how to get there just\ntype in adus into Google and then click\nhere on the link where it says adabs\namazon.com it'll take you to the same\nplace now notice we have a big orange\nbutton in the top right corner so this\nsays sign into the OS console um it's\nthe if it's the first time you've ever\nbeen to this website so if I go ads.\namazon.com Incognito it will have the\ncreate anus Account button um I don't\nknow why they don't keep this consistent\nacross the board but I wish they did but\nif you are on the screen you can click\nhere or there um but if you do see\nsomething that doesn't say uh you know\ncreate an account or or Etc you can just\nsign\nin okay and then down below you can hit\ncreate a new a account so that's the way\nyou're going to get in there and so\nyou're going to put an email a password\nand create an adist account name um I've\ncreated this so many times and it's so\nhard to set up new emails I'm not going\nto do this again it's not complicated\nbut one thing I need to tell you is that\nyou do need to have a credit card you\ncannot create an account without a\ncredit card um and for those who are in\nplaces where maybe you don't have a\ntraditional credit card maybe you can\nget a prepaid one so up here here in\nCanada we have a company called coo and\nso coo is um a Visa debit card and so\nit's basically a virtual prepaid credit\ncard and so these do work on the\nplatform as well so if you have a\ntraditional credit card or possibly\ncould find one of these uh you still\nhave to load up with money but it does\ngive you a bit more flexibility to\ncreate that account so what I want you\nto do is go through that process\nyourself it's not complicated and I'll\nsee you on the other end okay\nso once you finished creating your\naccount you should be within the adus\nManagement console and this is the page\nyou're always going to see when you log\nin it's always going to show the most\nrecent Services here um and you'll\nnotice in the top right corner that I\nhave my account called exam Pro if\nyou're wondering how do you change that\nname what you do is go to my accounts\nhere and once there you'll have your\naccount settings up here if you go to\nedit uh you can change that name here\nokay so you know sometimes when you\ncreate your account you don't like the\naccount name that you gave it and so\nthat's your opportunity to fix it um but\nonce we're in our account what I want\nyou to do is immediately log out because\nI want you to get familiar with the way\nyou log into AWS because it is a bit um\ndifferent than other providers and so I\ndon't want you to uh get hung up later\non with your account so I've logged out\nI'm going to go ahead and log back in so\nyou can click the orange button or what\nI like to do is drop down my account and\ngo to adus Management console it's a lot\nmore clear and you notice we're going to\nhave two options root user and I am user\nso this is what I'm talking about for\nthe confusion so when you log into your\nroot user account you all are always\nusing an email and when you're logging\nas an I am user you're actually going to\nbe entering the account ID or account\nAlias but what we'll do is go to the\nroot user and this is the email you use\nto sign up with the account so for me uh\nI I called this one Andrew plus sandbox\nexampro doco I'm going to go to next\nsometimes you get this character box\nit's very annoying but it happens time\nto time and so what I'm going to do is\njust go ahead and type that in\nokay and hopefully it likes it and then\nI'm just going to enter in my\npassword all right and I'll be back into\nmy account and so notice it takes me\nback to abis Management console so the\nroot account is not something we want to\nbe generally using uh except for um very\nparticular use cases and we do cover\nthat in the course uh but what I want\nyou to do is go set yourself up with a\nproper account and so what we'll do is\ngo to the top here and type in and this\nstands for identity and access\nmanagement and we'll click on I\nhere and on the left hand side we're\ngoing to see a bunch of options here um\nand so notice right away we get to the I\nam dashboard where it's going to start\nto make some recommendations for us the\nfirst one is always to add MFA\nmultiactor\nauthentication another thing you can do\nis set an account Alias so you can see\nthat I've set one here prior so if I\njust go ahead and remove it the way we'd\nhave to log in is via the account Alias\nuh which is the same as the account ID\nand so I don't really like that so I'm\ngoing to just rename it to Deep Space 9\nand uh these are unique so you have to\npick something that is unique to you so\nit could be your company name or things\nlike that it's going to make it a lot\neasier to log in uh when we create our\nadditional user here so we'll come back\nto MFA at some point here what I want\nyou to do is go over to users and go\nahead and make yourself a new user and\nso I'm going to call this one Andrew\nBrown and I'm going to enable\nprogrammatic access I'm going to enable\nadus Management console so this one's\ngoing to allow me to use the apis to\nprogrammatically work with ads and this\none here is going to allow me to just\nlog into the console which is uh pretty\nfair here so now that I have this we can\nautogenerate it or give it a custom\npassword I'm just going to autogenerate\nfor the time being and here it says You\nmust create a new password at the next\nsign in which sounds fair to me and we\ncan go ahead and create ourselves a new\ngroup so it's pretty common to create a\ngroup called admin and notice here this\nis where we're going to have a bunch of\ndifferent policies so the first one here\nwhich is admin and access provides full\naccess to AO services and resources and\nthis pretty much gives you almost nearly\nalmost the same capabilities as the um\nAWS root user account uh and so that's\ngoing to be okay because we are an admin\nin our account so I'll checkbox that on\nbut I just want to show you here if you\nDro down filter policies and you went to\nadus manage job functions these are a\nbunch of uh pre-made uh adus uh policies\nthat you could apply uh to different\nusers so what's really popular after the\nadministrator access is to usually give\nthe power user access and so this one\nallows um a user to do basically\nanything they want with the exception of\nmanagement of users and groups so you\nknow it could be that that's something\nthat you'd want to do for some of your\nusers I just don't want to have any\ntrouble so I'm going to give us um admin\naccess here and we're going to go ahead\nand create this\ngroup and so here is the group that we\nare creating we're going to go next we\ncan apply our tags if we want I'm not\ngoing to bother we're going hit next\nreview and then hit create\nuser all right and so now what it's\ndoing is it's showing us the access ID\nand the access uh key secret that we can\nuse to programmatically access AWS and\nthen there's a password here so I'm\ngoing to go ahead and show it and what\nI'm going to do is just copy this into a\nclipboard anywhere\nand so I'm just copying that off screen\nhere because I'm going to need it to log\nin and I'm just going to remember my\nusername as well all right and so what\nwe'll do is go ahead and hit\nclose so what I'll do is go back to my\ndashboard here and remember I set my\naccount Alias as Deep Space 9 but we\ncould also use the account ID to log in\nI'm just going to grab my account ID off\nscreen here and what I want to do now is\ngo ahead and log out and now log into\nthis I user and this is the one that you\nshould always be using uh within your ad\naccount you shouldn't be using your root\nuser account so what I'll do is go over\nto I am user here and notice now that it\nsays account ID so 12 digits or the\naccount alas so here I can enter in uh\nthese numbers here or I can enter in my\nAlias which is Deep Space 9 and again\nyou'll have to come up with your own\ncreative uh one there for yourself and\nwe'll go ahead and hit next and so\nnotice what it's going to do is now ask\nme what my IM am username name is so I\ndefined mine as Andrew Brown and then uh\nwe had an autogenerated a password there\nso that we had saw and so I'm going to\nplace that in there we'll go ahead and\nhit sign in and so now right away it's\ngoing to ask me to reset the password so\nI'm going to put the old password in\nthere and so now I need a new password I\nstrongly recommend that you generate out\nuh your passwords to be very strong I\nlike to go to password generator and\nI'll drop this down and I'll do\nsomething really long like 48 characters\nand um if you don't like\nweird characters you can take those out\nthere sometimes it loads here so you got\nto try it\ntwice um and I'm going to go down to\nwhoops\n48 there we go and so that's pretty darn\nlong so I'm going to copy that off\nscreen here so I do not\nforget and you probably would want to\nput this in a password manager something\nlike Dashlane or some sort of thing like\nthat and we'll go ahead and we will\npaste that in and we'll see whoops I\ndon't want Google to save it uh and\nwe'll see if it takes it and so there we\ngo so what I'll do is now log out and\nI'll make sure my new password works\nbecause you really don't want to have\nproblems later so we'll type in Deep\nSpace 9 Andrew Brown again this is going\nto be based on what your uh what you\nhave set and we'll go ahead and log in\nand there I am and so now notice there\ndoesn't say um exam Pro whatever it says\nAndrew Brown at Deep Space 9 so it's\nusing the county ellias and showing the\nname and that's how I'm going to know\nwhether I'm the root account user or\nwhether I'm logged in as an I am user\nall right so there we\n[Music]\ngo okay so now that we have the proper\nuser account to log in I just want to\npoint out uh about regions so in the top\nright corner you'll notice it says North\nVirginia here it possibly will say\nsomething completely else for you but\nwhat you'll do is you'll click and drop\nthat down and you'll see a big list of\nregions and so so sometimes when I log\nin ads it likes to default me to U East\nuh Us East Ohio but I honestly like to\nlaunch all my stuff in Us East North\nVirginia even though I'm in Canada I\nprobably should be using the Canada\ncentral region down here um but the\ndefault region is going to be based on\nyour locality okay so just understand\nthat it might be different I strongly\nrecommend for um all of our follow\nalongs you run in Us East one because us\neast1 is the original um the original\nregion and it also has the most access\nto Ada services and some adaa Services\num such as like billing and and cost and\nthings like that are only going to show\nup in Us East uh North Virginia so just\nto make our lives a lot easier we're\ngoing to set it there but I want you to\nunderstand that some services are Global\nServices meaning that it doesn't matter\nwhat region you're in it's going to\ndefault to Global and one example could\nbe cloudfront so if I jump over to\ncloudfront here for a\nmoment and uh we do seem to have uh some\nCLR distributions here from a prior uh\nfollow along but notice up here that it\nnow says Global so CLR does not require\na region selection let's make our way\nover to\nS3 all right and this one's also Global\nso again this one does not require a\nregion selection but if you go over to\nsomething like\nec2 okay this has a region dependency so\njust be really careful about that\nbecause a lot of times you'll be doing a\nfollow along and you'll be like why\naren't these resources here or whatever\nand it's because this got switched on\nyou and it can happen at any time so\njust be uh cautious or aware of that\n[Music]\nokay so one of the major advantages of\nusing ads or any cloud service provider\nis that it utilizes metered billing so\nthat is different from a fixed cost\nwhere you'd say Okay I want a server for\nx amount of dollars every month but the\nway ATS works is that it's going to\nbuild you on the hour on the second\nbased on a bunch of factors and so\nyou're going to be able to get services\nat a lower cost however if you choose an\nexpensive service and you forget about\nit or there's misconfiguration where you\nthought you were launching something\nthat was cost effective but turned out\nto be very expensive you could end up\nwith a very large Bill very very quickly\nand so uh that is a major concern for a\nlot of people utilizing Cloud but\nthere's a lot of great toolings built\ninto ads to allow you to catch yourself\nif you happen to make that mistake and\nbefore we go ahead and learn how to do\nthat I want to show you uh some place\nwhere you could end up having excessive\nspend without knowing it so one example\nand this is actually happened to me when\nI first started using AWS uh before I\neven knew about all the billing tools is\nI wanted to launch a reddis uh instance\nand so you you just have to watch you\ndon't have to do this but um elasticache\nis a service that allows you to launch\neither a mem cach or\nuh database and I just wanted to store a\nsingle value and so I went here and I\nscrolled down it looked all good and I\nhit create but I wasn't paying attention\nbecause apparently itus likes to default\nthe no type here to the cash\nr6g do llarge all right and you know you\nmight think that adus has your best\ninterest in play and most services are\npretty good they they make sure that\nthey're either free or very low spend\nbut some of these and elastic cash is an\nolder service where they just have these\nweird defaults so um you know if we were\nto go look up this the\nRG6 uh\nlarge all right and look at its\nspend all right and we would go over\nhere whoops I think I went to the China\nOne but if we were to go over here and\nlook for that instance I'm just trying\nto find it here for cost this\none down\nbelow um this doesn't say pricing does\nit say our pricing\nhere here it is so this one cost\num this one costs about 2 cents per hour\nit doesn't sound like a lot but if we go\nhere and we do the math we say 730 730\nis the amount of hours in a month that\nis\n$150 okay so if you don't know about\nthat and forget about that that's going\nto be $150 and I'm going to tell you\nthat it used to be a lot higher I'm\npretty sure they used to have it default\nto something like like this or that\nbecause I remember I did this and I had\na bill that came in that was like $3,000\nUSD and I'm in Canada so like $3,000 USD\nis like a million dollars up here and so\nI remember um it was a big concern and I\nfreaked out but that was okay because\nall I had to do was go to support and\nwhat I had done is I went to the support\ncenter and I had opened a support case\nand I just said hey I had this really\nbig Bill so you go here right and you\nlook for billing and uh you look for\nsomething like charging query or\nmisspend and you say you know um you\nknow like help my bill's too\nhigh and you just say like you explain\nthe problem saying hey you know I was\nusing elastic cash and it was set to a\nlarge default and I wasn't aware about\nit can you please give me back the money\nand the great thing is that ads is going\nto give you a free pass if it's your\nfirst time where you've had a\nmisspending they generally will say Okay\num you know don't do it again and if it\nhappens again you will get build but go\nahead and learn how to set up billing\nalerts or things like that okay so just\nso you know don't freak out if you do\nhave a really high Bill you're going to\nget a single free pass but now that we\nknow that let's go learn uh how to set\nup a budget\n[Music]\nokay all right so now that we've had a\nbit of a story about um over spend for\nmisconfiguration let's learn how to\nprotect ourselves against it and we're\ngoing to go ahead and set up a budget so\ngo to the top here and type in budget\nand what that will do is bring us over\nto the billing dashboard another way to\nget here is to go click at the top here\nand go to my billing dashboard and then\nyou'll see the leftand menu here and so\nthe great thing about budgets is that\nthe first two are free it says there is\nno additional charge for any those\nbudgets you pay for configured us usage\nbut I'm pretty sure that that's not true\nbecause it used to be ABS budget reports\nokay so that cost\nsomething it used to be that Abus\nbudgets um after success enabled will\noccur 10 cents daily so in addition to\nbudget monitor you can add actions to\nyour budgets the first two action enable\nbudgets are free okay so just be aware\nthat just because it says there's no\nadditional charge read into it because\nsometimes the the Fine Line will tell\nyou it does cost something but I know\nthat the first two are free what we'll\ndo is go ahead and create a budget just\ngoing to close these other tabs here\nsince we have no need for them and we're\ngoing to be presented with a bunch of\nbudget types uh we're considered about\ncost today so we're going to go with a\ncost\nbudget and notice we can change the\nperiod from monthly to daily to\nquarterly to annually if you change it\nto daily um you won't get forecasting so\nI don't want that today but a monthly is\npretty good you can have a reoccurring\nwhich is strongly recommended and then\nyou can put a fixed cost notice that I\nalready have some spend on this account\nso it was like 25 bucks last month I'm\ngoing to set it my uh budget here to\n$100 and you can add filters here to um\nuh filter that cost out so if you want\nto say only for this region or things\nlike that you could do that uh notice\nthat this is my spend over here um so\nthis is my budget and that's the actual\ncost notice my cost has been going up\nthe last few months because I've been\ndoing things with this account and so\nwhat I'll do is say simple budget here\nwe'll hit\nnext and so now it's asking us if we\nwant to configure alerts we probably do\nso you'd hit ADD alert and then you'd\nset a threshold like 80% or you could\nsay an absolute value and then you put\nyour emails like Andrew exampro\ndoco and I want to point out that this\nis using um itus\nSNS or it should be anyway so Amazon SNS\nhas no upfront cost based on your stuff\nhere so even though you're filling out\nan email you know and it maybe it\ndoesn't show it but I'm pretty sure that\nthis would create an SNS\ntopic but what we'll do is hit next here\nwe have an alert so we're just uh\nreviewing actually this is for attaching\nany actions so maybe we want some kind\nof follow-up thing to happen here so we\nsay add\naction and uh require specific I and\npermissions on your\nbehalf okay sure so I guess you could\nfollow up actions that's no different\nthan um a building alarm but we're not\nreally worried about that right now I'm\nnot going to bother with an action and\nwe'll go ahead and create a\nbudget and so here it's going to say\nthat our budget is $100 it's going to\nshow us the amount use forecast amount\ncurrent budget sometimes this takes time\nto uh show up so I'm going to hit\nrefresh and see if it shows up\nyet there we go so notice we have\nforecasted amount $23 current budget Etc\nforecasted budget uh forecasted versus\nbudget so it's pretty straightforward on\nhow that works U I'm just curious if it\nactually created an SNS event so I'm\ngoing to go over here because a lot of\nservices utilize SNS so if I go over\nhere default Cloud watch alarm um so I\nthink this is something I had created\nbefore so I'm going to go ahead and just\ndelete it says default Cloud watch\nalarms I'm going to just click into here\nand see what I\nhave\nconfirmed so I think it might have used\nthis when we created it but um the\nreason I'm bringing up SNS is that\nthere's a lot of services that allow you\nto uh email yourself for alerts and it\nalways integrates with this service and\nso I just want kind of want to point\nthat out so that you remember what SNS\nis for um but yeah so setting up a\nbudget is not too hard so there you\n[Music]\ngo all right so now that we've set a\nbudget what I want to talk to you about\nis the free tier and the free tier is\nsomething that is available to you uh\nfor the first 12 months of a new adus\naccount and allows you to utilize adus\nservices without incurring any cost to\nyou and so it's in your advantage to\nutilize this free tier um as you are\nexperimenting and learning cloud so if\nyou want to learn about all the\nofferings what you do is go to Google\ntype in adus free tier and you'll get\nthis page that explains all the sorts of\nthings here so you can get uh 750 hours\non ec2 RDS things like that there are\nstipulations in terms of what it would\nbe so here this is a T2 or T3 micel mic\nuh micro running Linux Red Hat um or\nother type of os's okay so there are uh\ndetails you have to read the fine print\nsome services are only available for the\nfirst two months things like that so\nit's going to highly vary based on\nservice but it's worth giving us a read\nin areas that you are interested in now\nthe thing is is how do you know that you\nare still in the free tier or you go\noutside of it and that's what I want to\ntalk to you about right now so I am\nactually in another ad account so no in\nthe top right corner it says brown. laap\nor hyphen laptop exampro doco sometimes\nI will switch into different a accounts\nduring these fall alongs so I can best\nshow you um you know the settings so if\nyou make your way over to\nbilling and actually I should show you\nup here if we go to my dealing B\ndashboard just trying to be consistent\nhere and you go to the left- hand side\nto billing preferences what you can do\nis enable receive free tier usage alerts\nand then put your email in there and\nsave that and so turn on this feature to\nreceive email alerts when your adabs\nservice usage is approaching or exceeded\ndatabus free tier usage limits if you\nwish to receive these alerts etc etc etc\nright and while you're there I want you\nto also checkbox receive billion alerts\nso I can show you how to set a billion\nuh a billi alert and AD us says you know\nbudgets are a new thing but bliing\nalerts are still something that we use\nas of today so if you checkbox that on\nwe'll be able to see your cost if we go\nback here uh it should show you um it's\nbecause I'm out of the free tier on this\naccount but it would show you in the\nalerts you know your usage there so\nexample here is if we scroll down this\nis the documentation tracking your AIS\nfree tier usage you would see like a box\nlike this and would say hey your free\ntier usage limit is here and you're over\nit okay so that generally would show up\non this panel here but again I'm outside\nof the free tier so I'm not seeing it\nhere um today okay so you know hopefully\nthat is clear um but yeah there you go\n[Music]\nall right so we created ourselves a\nbudget we're monitoring our free tier\nbut there's another way that we can\nmonitor our spend and that is through\nbuilding alerts or alarms and it is the\nold way before uh we had it was budget\nthis is the only way you could do it but\nI still recommend it because there is a\nbit more flexibility here with this\nservice and so I wanted to teach you\nearly on so that you know it's available\nto you or if you want to play around\nwith it in the future so what you'll do\nis go to the top here and type typ in\ncloudwatch and cloudwatch is one of\nthose Services where it's actually a\ncollection of services so there's\ncloudwatch alarms cloudwatch logs\ncloudwatch metrics those are all\nIndividual Services and Abus loves to\nupdate their interface so sometimes\nyou'll be present with this option to uh\nchange the latest interface I'm going to\ntry out the new interface here um and\nthat is one challenge with datab is you\nalways have to expect that they're going\nto change the UI on you and you're going\nto have to work through it so just\nunderstand that I try to keep my videos\nup to dat as best I can but part of the\nchallenge is getting used to that so\nthis is what they have today I don't\nknow if they're going to stick with this\nbut this is what it looks like but what\nI want you to do is make your way over\nto alarms on the left hand\nside and notice that we actually have a\nsection just for billing which is\ninteresting I don't remember them having\nthat before so it's new so uh here it\nsays Abus Cloud watch help can help you\nmonitor the charges of Abus Bill\nremember that we had to turn that on get\n10 free alarms with 1,000 free email\nnotifications each month as part of the\nfree here so understand that if you\ncreate billing alarms they do cost money\num as well if you go over that limit but\nyou sure get a lot 10 free alarms is\nquite a bit what we'll do is go ahead\nhere and create ourselves alarm we're\ngoing to go and choose a metric and so\nhere are the options we can choose from\nand so we I think would like um billing\nand see we can do buy service or total\nestimated charge we're going to do a\ntotal estimated charge we can only\nselect USD I've never seen any other\ncurrency over there and so here we kind\nof get this little graph where we can\nsee stuff um but this is a lot more\npowerful than budgets because you can do\nanomaly detection uh so like here it\nwill actually check base between a range\nas opposed to just going through a\nparticular value but what I'll do is\njust set a value here like uh $50 right\nso notice that it sets the line up here\nand this is my current spend here right\nand so back to anomaly detection this is\na lot smarter so uh the idea is that if\nsomething is outside inside this band of\na certain amounts um then it would alert\nokay but I'm going to go back here I'm\njust going to set this to\n$50 and that looks okay to me you can\nchange the period 6 hours is fine um and\nthere's additional configuration that's\nfine as well we're going to go ahead and\nhit next uh and so the idea is that um\nyou know if it passes that red line it\nwill go to an in alarm State and then\nwhat it will do is uh we want to uh have\nit to trigger an s topic so I would\ngenerally just create a new one here\nwe'll just say my billing\nalarm Okay and then here we'll just set\nthe email Andre exam\npro. and we will go ahead and create\nthat topic and so that is now set I\ndon't know if it would uh confirm it we\nmight have to go to our email to confirm\nit so notice it says pending\nconfirmation so what it has done is it\nsent me out an email and it wants me to\nclick that link to confirm um that I\nwant to subscribe to it so I might just\ndo that offc screen to show you here\nokay so I'm just going to pull up my\nemail here just give me a\nmoment okay and so if I come back here\nthis is the email that came in so I'm\njust going to confirm that subscription\nsays I'm confirmed good and if I refresh\nthis page we can now see that that that\nis confirmed all right so we'll scroll\ndown here so we can uh trigger an\nautoscaling action so maybe you know if\nyou have too many servers you say hey\nthe cost is too much shut down those\nservers there's ec2 actions things like\nthat so these are kind of similar to um\nbudgets right there's system manager\nactions I imagine all these things are\navailable in budgets as well but budgets\njust makes it a little bit easier to\nlook at so I just say my simple building\nalarm\nhere we'll hit\nnext all right we'll hit create alarm\nand there you go so billing alarms don't\nhave like forecasting and things like\nthat um but you know they are they do\nhave their own kind of special utility\nand so I utilize both okay so there we\ngo we'll just go back to our Management\nconsole move on to the next\n[Music]\none so one of the strongest\nrecommendations that Abus gives you is\nto say to set MFA on your adus root user\naccount so that's something we're going\nto do right now so make sure you're\nlogged into the root user account so I'm\ngoing to go log out as my IM user I'm\ngoing to go back and log in and I'm\ngoing to log in as my uh root user here\nso to do that no sometimes it will be\nexpanded as the I am user click and sign\ninto root user here we'll have root user\nI'm going to go ahead and enter my email\nthat I used and if you do switch\naccounts frequently they will ask you\nthese silly captures which drive me\ncrazy but uh you know it happens you\nprobably won't encounter it as much as I\ndo and so I'm going to go ahead and grab\nmy password here and paste it on in and\nso now that I'm in what I want want to\ndo is make my way over to I\nam and I'm going to go and look for\nusers actually sorry just right here add\nan MFA root user we're going to go ahead\nand hit add\nMFA all right and so that's going to\nbring us to this screen and so here we\ncan activate our MFA and so we have a\nfew options here so we have virtual MFA\ndevice u2f security key other Hardware\nlike a uh Gem Gem gy Alto token so you\nknow I generally use this because I have\na security key and I want to show you\nwhat I'm talking about so this is how I\nlog into my machine or my ad account\nthis is a security key an UB key that\nsits on my desk I tape it so it doesn't\nfall fall off the cord but the idea is\nthat when I log in I have to press this\nlittle button here to double confirm\nbefore I get into my account uh but if\nyou don't have a security key you can\njust use a virtual MFA and all that\nmeans is you're going to um use\nsomething on your phone to log in so\nwe'll click continue here and so it says\ninstall a compatible app on your mobile\nphone or device and so if you click and\nopen this what it will do is tell you\nabout some things that you can use um so\nif we scroll down to\nVirtual here they suggest uh if you have\nAndroid iPhone so AI dual mobile last\npath Microsoft authenticator Google\nAuthenticator so Google Authenticator\nMicrosoft authenticator and a I have all\nthose three installed um honestly aie\nhas the the nicest simplest um UI but\nI'm using Microsoft authen authenticator\nquite a bit so anyway whichever you want\nto do it's fine but what we'll have to\ndo is go back here and then it says use\nyour virtual MFA app on your device\ncamera to scan your QR code so once you\nhave one of those apps installed like\naie or whatever one you want what you're\ngoing to do is open up the application\nand I can't tell you exactly where it is\nbut you'll have to hit add account in\nyour in your app and then from there it\nwill ask you to scan your QR code and so\nonce you're ready you hit show The QR\ncode you hit scan the QR code on your\nphone I'm holding my phone up to my my\num uh my computer screen here and it's\ngoing to find it and I'm just going to\ntake a moment here to rename the account\nso I can tell what it is so I'm just\nnaming it a\nWS sandbox cuz that's what I call this\naccount and I'm going to go ahead and\nsave that\nand so now what I can do is enter uh two\nconsecutive MFA codes now this always\nconfused me what they wanted here but\nthe idea is that you're going to see one\ncode right whatever is on the screen\nright now so I'm going to type in it it\nsays\n734\n051 and I'm going to wait until the new\ncode shows up so there's like a timer in\nall these apps and they go across the\nscreen or they count down and so you\nhave to wait for that to happen and so\nI'm just going to wait here a little bit\nand once I get the new number here this\none is\n07153 0 I'm going to hit assign MFA and\nthere we go and I can't tell you how\nmany times I like messed that up because\nI didn't understand the consecutive\nnumbers but you're just waiting for uh\nthe number that's on the screen to enter\nit in and then enter the next one in to\nturn on MFA and so now your account is\nprotected and every time you log in\nyou're going to have to enter in MFA so\nlet's log out and see what that looks\nlike so we'll go ahead and sign\nin and uh again we'll put in our root\nuser account here we'll type in 74m\n32t\nsubmit and I need to go grab my password\nso that's in my password manager just\ngive me a moment\nhere and now it wants the MFA code so\nthis is in my phone and so I'm going to\ngo enter it in so this one says 475\n841 all right we'll hit\nsubmit okay and there we go so that's\ngoing to happen every single time we\nwant to log in uh I'm going to tell you\nthat if you get one of these they're so\nmuch easier to use because you just\npress the button okay so that's why I\nhave this because I cannot stand\nentering the code in time and time again\num but you know those are your options\nthere\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we looking at the concept of\ninnovation waves so when we're talking\nabout Innovation waves we're talking\nabout krava or k waves which are\nhypothesized cyclik phenomena in the\nglobal World economy and the phenomenon\nis closely connected with technology\nlife cycles so here is an example where\neach wave is irreversibly changes the\nsociety on a global scale and if you\nlook across the top we can kind of see\nwhat they're talking about so we have\nsteam engine cotton uh Railway and steel\nelectric engineering chemistry\npet chemicals automobiles information\ntechnology and so the idea is that cloud\ntechnology is the latest wave and I'm\nnot sure if you'd fit web 3 in there as\nwell ml AI but maybe they're all part of\nthe same wave or they're separate waves\nbut generally they're broken up based on\nthis\nprde here where it says perspective\nrecession depression and movement uh\nImprovement sorry and so this is the\ncommon pattern of wave where we see a\nchange of supply and demand and so if\nwe're seeing this we know that we are in\na wave and where we are in a wave\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are looking at the concept of\na burning platform so burning platform\nis a term used when a company abandons\nold technology for new technology with\nthe uncertainty of success and can be\nmotivated by fear that the\norganization's future surv uh survival\nhinges on digital transformation and\njust to kind of give you a visualization\nhere is a literal burning platform\nplatform so imagine you have to jump to\nit jump from it to make a change so um\nyou know burning platform could be you\nknow stop using on Prem and start using\ncloud or maybe it going from Cloud to\nweb 3 um and that's generally the idea\nwhen we talk about a burning\n[Music]\nplatform so I just want to quickly show\nyou that digital transformation\nchecklist that I mentioned and the way\nyou can get to it is by typing in\ndigital transformation aw us and so it\nshould bring you to the public sector\npage and here it is so we click there\nand all it is is a PDF uh so it's not\nnew it's from 2017 but that doesn't mean\nthat it's not uh valid anymore uh it's\njust that that's when it was made so we\nscroll on down and we can see\ntransforming vision and so we have a\nchecklist there so if we click into this\nuh we can see things like communicate a\nvision of what success looks like Define\na clear governance strategy including\nthe framework of achieving goals uh\nbuild a cross functional team identify\ntech technical uh part ERS they talk\nabout Shifting the culture and then down\nbelow I assume that this one is related\nto that one it's unusual because you\nknow they just have a checklist here but\nthen they have a sub checklist which\nmust be clear to that so reorganize\nstaff into smaller teams things like\nthat so it's not super complicated\nyou'll see each category go go Cloud\nnative they'll have a\nchecklist um you know and if you are at\nat the executive level or the sales\nlevel or trying to convince your VPS or\nstuff like that give this a read it\nmight give you something uh useful in\nthe end uh to help better communicate\nthat transformation for you\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are looking at the evolution\nof computing power so what is computing\npower it's the throughput measured at\nwhich a computer complete computational\ntasks and so uh what we're pretty much\nused to right as of these days is\ngeneral computing so good example here\nwould be a Zeon CPU processor uh that's\nmore of a high-end processor not\nsomething you'd find your home computer\nbut when we're talking about data\ncenters specifically uh um you know\ninabus data centers Zeon CPU processors\nor what you're going to come across uh\nthen came along a new type of compute\nwhich is GPU Computing um when we're\ntalking about Google uh Cloud they have\ntensor Computing and so this is where I\nget the 50 times faster based on that\nmetric and so I didn't have an exact\nmetric here for AWS as um solution for\nthis mid tier of computing power so I\njust borrowed that 50 times there but\nthe idea is that GP Computing or tensor\nComputing uh is is 50 times faster than\ntraditional CPU and generally that's\ngoing to be used for uh very specialized\ntasks when you're doing machine learning\nor AI so it's not something you're going\nto uh be doing for your regular uh web\nworkloads but just understand that all\nof these uh fits so we're not getting\nrid of general computing we're just\nadding uh new levels to compute then\nthere's the latest which is uh Quantum\nComputing and so here we have an example\nof the rig R retti 16q Aspen 4 and so it\nliterally looks like it's out of um\nscience fiction and this thing is like a\n100 million times faster it is super\nCutting Edge and we don't even know\nexactly how it works and there's not\neven anything that's very applicable\nthat we can use this for but the idea is\nthat we're not done with the evolution\nof of computing power things are going\nto get a lot faster once we solve this\nlast one here and so a service offering\nhere would be for general computing\nyou're looking elastic compute Cloud ec2\nso we have a variety of different uh\ninstance types and they're all going to\nhave different types of Hardware with\ndifferent types of general computing um\nfor GPU Computing this is a specialized\nchip that adus has produced called the\nadus um and I don't know how to say it\nbut we'll just abbreviate it to infer so\nadus infer chip um and this was designed\nas a direct competitor to uh gcps uh\ntensor Computing uh unit the t uh TPU um\nso this is intended for AI ml workloads\nbut it works with not just um tensor\nflow but it works with any machine\nlearning framework so that is one\nadvantage it has over uh tpus um and\nthen the last one here is adus brackets\nso you can actually use quantum\nComputing as a service on adus you uh as\nof even today um the way adus is able to\ndo this is they work with Caltech so\nthat's the California\ntechnology um University or Institute\nI'm not sure the name of it there um so\nit's not exactly adus producing this but\nadus is doing this as a partnership to\ngive Quantum Computing accessible to you\nokay so I'm here in the ab console\nbecause I just want to prove to you that\nyou can use quantum Computing on AWS\nit's that accessible so all you'd have\nto do is go to the top here type in\nbracket uh and then you make it over to\nAmazon bracket and so here uh you can\nlike set up Quantum tasks the first time\nyou set it up you got to uh go through\nthis process here um I think I have to\ngo through this onboarding to be able to\nshow you the next steps so I'm going to\ngo ahead and enable bracket in this abis\naccount okay and I'm not going to launch\nanything I'm just going to try just kind\nof show you a little bit of what is\naccessible to you because it's not super\nexciting but the fact that you can do it\nis kind of interesting so here I am on\nthe inside here and we have all these\ndifferent types of quantum Computing so\nd-wave I know I I NQ uh retti things\nlike that and then down below these are\nthe quantum processing units the qpu and\nthen down below you have the simulators\nso you can kind of simulate uh these\nthings here um so I think that's kind of\ninteresting uh but in terms of the cost\nlike if you scroll on down here um so\nabis bracket is part of Theus free tier\nit gives you one free hour of quantum\ncircuit simulation time per month during\nthe first 12 months so it's free to do\nuh a circuit simulation but if you\nactually want to run it on the actual\nHardware you can see the cost there's\nthe per task price the per shot price\nthings like that uh what could you do\nwith this I don't know there's things\ncalled like quad bits or something like\nthat and I can't imagine that you're\ngoing to be doing anything useful but I\nthink it's just more so like you are\nsending out quad bits or whatever they\nare and you're observing them um but\nwhat you could do with them I have no\nidea but it's just exciting that you can\ndo that I didn't have any spend just by\nactivating that I'm just kind of just\nshowing you there okay\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are looking at the benefits of\ncloud and this is a summary of reasons\nwhy an organization would uh consider\nadopting or migrating to utilizing\npublic cloud and so we'll quickly go\nthrough the list here uh because in the\nfollowup slides we actually go into them\na bit more detailed so we have agility\npage a go economy of scale Global reach\nsecurity reliability High availability\nscalability um and elasticity so the\nthing is is that eight of us had this\nbefore it was called the six advantages\nof cloud but they have reworked it to\ninclude additional items um and so where\nyou see these uh sub bullets here those\nare the original six as you see 1 2 3 4\nfive six and so I kind of just put them\nwhere they kind of uh fall under the new\ncategories there and you'll notice that\nhas included High availability\nelasticity reliability and security as\nuh new on here okay and so the thing is\nis that\num I have always always even in my\noriginal uh uh I think in my original\ncloud practitioner had Cloud\narchitecture as a separate section and\nincluded all these things in here so\nit's a great thing to see that abis has\nincluded it um but in terms of how I\norganized this course we're not going to\ncover them in this section because I\nhave the cloud architecture section so\njust understand that we will come to\nthose eventually and I would just say\nthat adab us is still missing something\non this list which is Fault tolerance so\nyou know my list like this except I\nwould add fault tolerance to it so you\nhave everything there um and Disaster\nRecovery okay so the benefits of cloud\nis a reworking expansion of the six\nadvantages of the cloud and we will look\nat the original six advantages um and\nthen look at another one that is more of\na generalized one that I I've used\nacross my courses so that we fully\nunderstand the benefits\n[Music]\nokay all right let's take a look here at\nthe six advantages to Cloud defined by a\nand so these are still uh part of 's\nmarketing Pages um but you know it's\ninteresting because you can't find the\nbenefits of the cloud in a single page\non any at least the time of making this\nso there's a bit of Disconnect between\nthe um exam guide and the actual\nmarketing material but that's okay I\nfill it all in for you so you know I'm\njust again noting that the six advantage\nof cloud was the original description\nfor cloud benefits and we'll go through\nthem okay so the first is trade Capital\nexpense for variable variable expense so\nyou can pay on demand meaning that\nthere's is no upfront cost and you pay\nfor only what you consume or you pay by\nthe hour minutes or seconds so instead\nof paying for upfront costs of data\ncenters and servers the next is benefit\nfrom uh massive Eon uh economies of\nscale so you are sharing the cost with\nother customers to get unbeatable\nsavings hundreds of thousands of\ncustomers utilizing a fraction of your\nserver stop guessing capacity so scale\nup or down to meet the current needs\nlaunch and Destroy Services whenever so\ninstead of paying for idle or\nunderutilized servers we have increase\nSpeed and Agility so launch resources\nwithin a few clicks and minutes instead\nof waiting days or weeks of your it to\nimplement the solution on premise we\nhave stopped spending money on running\nand maintaining data centers so focus on\nyour customers developing and\nconfiguring applications so instead of\noperations such as racking stacking and\npowering servers the last is Go Global\nin minutes so deploy your app in\nmultiple regions around the world with a\nfew clicks provide load latency and a\nbetter experience for your customers at\nminimal cost the six advantage of the\ncloud still apply and um I like to\ninclude them here because they just have\na different kind of lens or or or uh\nangle when you're looking at this stuff\nand so we've looked at the six\nadvantages of cloud and now let's take a\nlook at the next slide my reworking of\nthe six advantage of the cloud to be\nmore generalized\n[Music]\nokay all right I just wanted to show you\nwhere that six advantages of cloud\ncomputing comes from it's part of the\nitus documentation so I typed it in here\nand you can see that it is still around\nuh and so it's unusual because this used\nto be part of the marketing website it\nhad those nice little Graphics um but\nfor whatever reason it's over here now\nin the overview of Amazon web services\nand by the way if you're starting\nstarting out with adabs this is a very\nlight read but it is a good read uh to\nget started with we obviously cover all\nthis stuff in the course um but you know\nmaybe you'll get something different\nhere but the idea is that Abus has\ndefinitely expanded on this but for\nwhatever reason this documentation\nhasn't changed so just understand that I\npolyfilled that for you in this course\n[Music]\nokay all right so this is the seven\nadvantages to Cloud I said six but I\nmeant to say seven and so um you know\nsince I've created fundamental courses\nfor all the Clusters providers I started\nto notice kind of a trend and so what I\ndid is I normalized it into my own seven\nadvantages and this actually Maps up\nreally well to the new benefits of the\ncloud so it looks like OS was thinking\nthe same as I was\num with the exception of those Cloud\narchitect stuff which I keep in a\nseparate section but let's go through it\nand see what is here so the first is\ncost effective you pay for what you\nconsume no upfront cost on demand\npricing so pay as you go P YG with\nthousands of customers sharing the on uh\nsharing the cost of resources adabs used\nto refer to this always as on demand\npricing and Azure always said pay as you\ngo and so it looks like adus now uses\nboth on demand and pay as you go to\ndescribe them which is great um but\nthere you you go then we have Global so\nlaunch workloads anywhere in the world\njust choose a region it's secure so\ncloud provider takes care of physical\nsecurity cloud services can be secured\nby default or you have the ability to\nconfigure access down to a granular\nlevel uh it's reliable so data backup\nDisaster Recovery data replication fault\ntolerance it's scalable increase or\ndecrease resources and services based on\ndemand uh elastic so automate scaling\nduring spikes and drop in demand current\nso the underlying hardware and and\nmanaged uhof software is patched\nupgraded and replaced by the cloud\nprovider without interruption to you so\nI think this is one that isn't on the\nbenefits of the cloud which is a really\ngood one um but uh yeah that's the\n[Music]\nseven hey this is Angie Brown and we're\ntaking a look at Aus Global\ninfrastructure so what is it well the\nadus global infrastructure is a globally\ndistributed hardware and data centers\nthat are physically networked together\nto act as one large resource for the end\ncustomers so what does that mean well if\nyou look at the globe on the right hand\nside and that Globe is really cool\nbecause adab us used to have a website\nwhere you could uh see a 3D uh globe and\nsee where all their resources are for\nwhatever reason they took it down but I\nstill have the screenshot of it but the\nidea is that um the global\ninfrastructure represents all that\nhardware and the connectivity between\nthat Hardware around the world so what\nkind of resources are we talking about\nwe're talking about regions we're\ntalking about availability zones direct\nconnections uh pops also known as as\npoint of presence local zones wavelength\nzones uh and we should point out that\nAbus has millions of active users uh or\ncustomers and tens of thousands of\nPartners globally so they really are uh\nkind of everywhere um and if you're\nwondering well what are all these\nresources that's what we're going to get\ninto next we're going to break down what\nall these particular resources are\nbecause you definitely need to know what\nthey are but hopefully that gives you at\na high level that adus has this thing\ncalled Global infrastructure okay\n[Music]\nhey this is Andrew Brown and we are on\nthe marketing website for adabs under\nGlobal infrastructure and this is a\ngreat way if you want to explore more\nand make sense of that Global\ninfrastructure so if we scroll on down\nhere we have a nice map and it's kind of\nindicating as to where those regions are\nnotice that there is uh ones in red\nwhich are coming soon the Canada West\nthey've been talking about that for I\nthink a couple years now so still\nwaiting for those but you know just like\nevery cloud service provider they're\nalways expanding looks like we can get a\nfull list here here um and it should\nindicate where when they launched and if\nthey're launching more things so you\nknow that is a nice little list uh that\nwe can get access to but if we go all\nthe way to the top across the top we can\ngo to Regions and azs uh and this is\nwhere we should get better information\nthis is definitely different from before\nand I don't think the top of canidate is\nsupposed to look like that but uh I\nguess it's the best that they can do so\nuh what I want to point out on these\npages is uh the terms of uh the number\nof resources so I'm just going to bump\nup the font because it's a little bit\nsmall even for me if we go on down below\nhere you can see that it's describing um\nlet's say a particular region so here in\nCanada we can see uh we have three\navailability zones and when it launched\nsometimes they have these Asters on here\nso it says located in the Montreal uh\nmetropolian area so that's a good\nindicator because central Canada could\nmean Toronto could mean Winnipeg so\nthat's why they put the asterisk on\nthere um but just notice that what\nyou'll usually see for availability\nzones you'll never see anything beyond\nsix I'm not sure why but that seems to\nbe the max usually when a region\nlaunches it should have three\navailability availability zones I think\nin the past there might have been some\nthat did not have um at least three and\nthe reason why it's important to have\nthree in a zone is that is how we get\nhigh availability uh the way you do that\nis you should have um let's say we're\ntalking about compute that compute\nshould be um running redundantly into\ntwo other uh data centers in your region\nto ensure um that you have up time in\ncase the other two go out so just make\nnote of that if you're coming from Azure\nAzure uh will launch things without\nhaving all of their uh zones uh gcp is\nreally good where they'll always at\nleast have three so uh each provider\nWorks a little bit differently there um\nbut yeah you can see here for North\nAmerica we just scroll through here you\ncan find your particular area and look\nat the map uh and wonder why it's so\ndistorted but yeah hopefully that gives\nyou kind of an idea there and if you\nwant to explore any of these other uh\nparticular offerings you absolutely can\nof course we do cover in the course so\nit's not really necessary to do that but\nI thought uh it'd be nice to show you\nthis page okay\n[Music]\nciao hey this is Andrew Brown from exam\nPro and we are taking a look at a\nregions and regions are geographically\ndistinct locations consisting of one or\nmore availability Zone and so here is a\nworld map showing you all the regions\nthat abos has in the world and the blue\nones represent regions that are already\navailable to you and the orange ones\nrepresent ones that adus is planning to\nopen so adus is always expanding their\ninfrastructure uh in the world so always\nexpect there to be uh more upcoming ones\nevery region is physically isolated from\nindependent of every other region in\nterms of location Power and Water Supply\nand the most important region that you\nshould give attention to Is Us East one\nuh in particular so this is Northern\nVirginia it was ad's first region where\nwe saw the launch of SQ us and S3 uh and\nthere are a lot of uh special use cases\nwhere things only work in Us East ones\nand we'll find that out here in a moment\nwhat I do want to show you is what it\nlooks like for an architectural diagram\nwhen you are seeing a region so notice\nthat we have this um uh little flag here\nit says Us East one US West one and\ninside of it we have an E2 instance so\nthat is going to represent a region in\nour architectural diagrams uh but let's\nlook at some of the facts here and\nunderstand why Us East or Us East one is\nso important so each region generally\nhas three availability zones and that is\nby intention and we will talk about that\nwhen we get to the availability Zone\nsection some new users are limited to\ntwo or uh to two uh but generally\nthere's always three okay new Services\nalmost always become available first in\nUs East and specifically Us East one not\nall services are available in all\nregions all your billing information\nappears in Us East one so that's a US1\nparticular thing uh the cost of AA\nServices vary per region and so if you\nwere on the marketing website or forious\nGlobal infrastructure you can see uh\nhere in North America they will say like\nwhen it launched how many availability\nzones and there might be some conditions\nso you'll notice there's like asteris uh\nbeside these things here or um in this\none particular there's an asteris saying\nhey there are three zones but generally\nyou're limited to two Okay when you\nchoose a region there are four factors\nyou need to consider uh what are the\nRegulatory Compliance does this region\nmeet what is the cost of this Inus\nservice in this region what in services\nare available in this region and what is\nthe distance distance or latency to my\nend users and those are those four\nfactors that you should remember\n[Music]\nokay all right so we just talked about\nadus regions now let's talk about uh how\nthat affects our services versus\nregional and Global Services so Regional\nservices are scoped based on what is set\nin the adus Management console on the\nselected region so you have this drop\ndown and that's what you'll do you'll\nsay Okay I want to have resour sources\nin Canada or in Europe uh so this will\ndetermine where a na service will be\nlaunched and what will be seen within\nthe ad Services console you generally\ndon't explicitly set the region for a\nservice at the time of creation I\nexplicitly mentioned this because when\nyou use something like gcp or Azure when\nyou create the resource that's when you\nselect the region but ads is it has this\nkind of global thing which is unique to\ntheir platform um then there's the\nconcept of Global Services so some a\nServices operate across multiple Reg\nand the region will be fixed to the word\nGlobal and for these that's services\nlike S3 cloudfront R 53 am so the idea\nis if you were to go over to cloudfront\nand go into the cloudfront console\nyou'll notice that it will just say\nGlobal and you can't switch out of that\nuh for these Global Services um at the\ntime of creation it's a bit different so\nwe were saying up here for regional ones\nthat you don't select the region but\nwhen you are clearing Global Services if\nyou're using something like I am there\nis no concept of region because they're\njust globally available so you don't\nhave to determine a subset of regions if\nyou're using S3 bucket that has to be in\none region so you actually do have to\nselect a region at time of creation um\nand then there's something like Cloud\nfirm distributions where you are\nchoosing a group of regions so you\neither say all of the world or only\nNorth America which is more like\ngeographic distribution so you don't say\nthe region in particular but you know\nhopefully that gives you a distinction\nbetween Regional services and Global\n[Music]\nServices hey this is Andrew Brown from\nexam Pro and we are taking a look at\navailability zones so availability zones\ncommonly abbreviated as a and I'll\nfrequently be using the term a is\nphysical locations made up of one or\nmore data centers so a data center is a\nsecured building that contains hundreds\nor thousands of computers uh and this is\none of my favorite Graphics I like to\nshow of course uh you know ads would\nnever have a dog um in their data center\nbut I just thought that would be fun a\nregion will generally contain three\navailability zones and I say generally\nbecause there are some cases where we\nwill see uh less than three so there\nmight be two um data centers within a\nregion will be isolate from each other\num so there will be in different\nbuildings but they will be close enough\nto provide low latency and that is\nwithin the uh 10 milliseconds or less so\nit's very very low uh it's common\npractice to run workloads in at least\nthree azs to ensure Services remain\navailable in case one or two data\ncenters fail and this is known as high\navailability and this generally is\ndriven based on Regulatory Compliance so\na lot of companies uh you know they have\nto at least be running in 3 A's and\nthat's why itus tries to always have at\nleast three azs within a region uh A's\nare represented by a region code\nfollowed by a letter so here you know\nyou'd have us East one which would be\nthe region and then the a would\nrepresent the particular availability\nZone in that region um so a subnet which\nis related to availability zones is\nassociated with a uh two availability\nzones so you never choose an a when\nlaunching resources you always choose a\nsubnet which is then Associated to an a\na lot of services um you know don't even\nrequire you to choose a subnet because\nthey're fully managed by AWS but in the\ncase of like virtual machines you're\nalways choosing a subnet okay so here is\na graphical uh representation or a\ndiagram that's representing two\navailability zones so here we have the\nregion Us East 1 and US West 2 and then\nwe have our 2 a so here is 1 a and 1 B\nand so these are effectively the subnets\nokay and so within those subnets then\nyou can see or availability zones you\nwill see that we have two virtual\nmachines okay so the US east1 region has\nsix azs and I thought that's just kind\nof like a fun fact because it is the\nmost out of every single one um I don't\nthink anyone comes close to us East one\nbut of course it is the most popular it\nis the uh first uh um region or so it's\nnot a surprise that that has that many\n[Music]\na okay so we just covered regions and\navailability zones but I really want to\nmake it clear uh what they look like so\nI kind of have a visual representation\nso let's say we have our adus region and\nin this particular one we have Canada\nCentral which in particular is Montreal\nso CA Central 1 uh and the idea here is\nthat a region has multiple availability\nzones so here you can see that we have\nuh 1 a one 1B and 1D for some reason\nadus decided to uh not launch 1 C maybe\nit's haunted who knows you know um and\nthen within your um availability zones\nthey are made up of one or more data\ncenters so just understand that an a is\nnot a single data center but could be a\ncollection of buildings and that these\nazs um are interconnected with high\nbandwidth low latency networking they're\nfully redundant dedicated to metrof\nfiber providing high throughput low\nlatency networking between so just very\nfast Connections in between\nand all traffic between azs is encrypted\nand these azs are within 100 km so about\n60 mil uh of each other\n[Music]\nokay so what I want to do here is just\nshow you uh how regions and availability\nzones work with some different adus\nservices so you have a general idea when\nyou are selecting uh a region or a and\nwhen you're not so within AOS when you\nwant to select a region you're going to\ngo up here and it and this is going to\napply to Regional Services a very famous\nexample of a regional service would be\nec2 so we go over to ec2 which is\nelastic uh cloud computing or compute\nwhatever I just forget the name of it\nand what we can do is go over to\ninstances I'm going to launch an\ninstance I'm not going to complete the\nprocess I just want to show you what\nwould happen when you go select some\nthings here so I'm going to go with\nAmazon L 2 um we're going to just go to\nuh next here and so here here is where\nwe're going to select um our\navailability zone so up here we have\nNorth Virginia that's our region and\nwhen I say we're selecting availability\nZone we're actually selecting the subnet\nso so here we are choosing a subnet and\na subnet is associated to a availability\nZone and every single um uh region has a\ndefault VPC and that VPC has uh subnets\nset up and the subnets are defaulted to\neach of the availability zones available\nso USC 1 has six of them so this server\nis going to launch in Us East 1B so this\nis a regional service okay uh then we\nhave Global Services like S3 so we go\nover to\nS3 and it says it's Global right and so\nwe're going to go ahead and create our\nbucket and so here we choose the region\nso we go down we're going to say the\nregion we want to be in but we don't\nchoose the availability Zone because\nthere's nothing to um uh choose because\nadabs is going to run these in multiple\nA's and it doesn't matter to you what\nit's doing there okay um so there's that\nand then there's something like\ncloudfront so Cloud front's a little bit\nuh different here so we go over to\ncloudfront and we create ourselves a\ndistribution um and so yeah if if you\ndon't have that option there because\nsometimes databus has like a splash\nscreen just click on the left hand side\nthen go to\ndistributions okay and so here well they\nchanged it again on me they're always\nchanging this UI but if we scroll on\ndown it should allow us to\nchange um change where this is going to\nlaunch it's like Global stuff like that\nliterally they just recently changed\nthis and that's why I'm\nconfused uh we'll scroll on down\nhere it used to\nbe maybe it's under\nLegacy\nadditional\ncustomized oh it's here sorry okay so\nnoce here the price class that says use\nthe edge locations for best performance\nNorth America and Europe North America\nEurope Asia middle uh Middle East and\nAfrica so we're not choosing a\nparticular region we're picking a\ngeographical area and so those are\npretty much the major um uh uh examples\nof that uh then there's of course things\nlike in I am where you don't even say\nwhere it is so you go into I am you know\nand if I create something like a group\nuh over here a user group whoops\nhere I say create group you know I'm not\nsaying oh this is for this particular\nregion or something like that okay so\nyeah hopefully that makes\n[Music]\nsense hey this is Andrew Brown from exam\nPro and let's take a look here at fault\ntolerance specifically for Global\ninfrastructure and so before we jump\ninto that let's just Define some fault\nterminology here uh so let's describe\nwhat a fault domain is so a fault domain\nis a section of a network that is\nvulnerable to damage if a critical\ndevice or system fails and the purpose\nof a fault domain is that if a failure\noccurs it will not Cascade outside that\ndomain limiting the possible damage and\nso uh there's this very popular meme\ncalled This is fine where uh there's\nobviously a serious problem but uh the\nperson's not freaking out and I gave it\nsome context to say well the reason\nthey're not freaking out because they\nknow that this is a fault domain and\nnothing outside of this room is going to\nbe affected okay so you can have fault\ndomains nested inside of other fault\ndomains uh but generally they're grouped\nin something called fault level so a\nfault level is a collection of fault\ndomains um and the scoping of a fault\ndomain could be something like a\nspecific specific servers in a rack an\nentire Rack in a data center an entire\nroom in a data center the entire data\nset are building and it's really up to\nthe cloud service provider to define\nthose boundaries of a domain adus\nabstracts it all way so you don't have\nto think about it but just to compare it\nagainst something else when you're using\nAzure you actually Define your fault\ndomain so you might say like okay\nuh make sure that this workload is never\nrunning on the same VM on the same rack\nfor these things uh and you know you\nmight like to have that level of control\nbut I really like the fact that itus\njust abstracts it away I'm not sure how\nthey segment their uh their their fault\ndomains but they they definitely are\nsome broader ones which we'll describe\nright now so when we're looking at an\nabis region this would be considered a\nfault level and then within that fault\nlevel you would have your uh\navailability zones and these would be\nconsidered fault domains and of course\nthose data centers can have have uh\nfault domains within them okay like\nmaybe you know they have everything in a\nparticular room and that room is secure\nso like if there's a fire in that room\nit's not going to affect the other room\nthings like that um so each Amazon\nregion is designed to be completely\nisolated from the other Amazon region\nthe uh they achieve this with the\ngreatest possible fault tolerance and\nstability uh each availab availability\nzone is also isolated but the\navailability Zone in a region are\nconnected through low latency links each\navailability zone is designed as an\nindependent failure Zone\nand so here we have some kind of\ndifferent language that adus is using um\nI've never experienced this terminology\nin other any other cloud service\nprovider so I kind of feel like it's\nsomething that it us made up but\nbasically a failure Zone they're just\nbasically saying a fault domain but\nlet's kind of expand on their fault uh\nfailure Zone terminology so availability\nzones are physically separated within a\ntypical Metropolitan region and are\nlocated in lower risk uh flood planes\ndiscret uninterruptible power supply so\nUPS and an on-site backup uh generation\nfacilities uh Data Centers located in\ndifferent azs are uh designed to be\nsupplied by independent substations to\nreduce the risk of an event on the power\ngrid impacting more than one\navailability Zone availability zones are\nall redundantly connected to multiple\ntier one Transit providers and we'll\ntalk about what those are uh in an\nupcoming slide and just one thing I want\nto note here is that when you adopt\nmulti-az you get high availability so if\nan application is partitioned across A's\ncompanies are better isolated and\nprotected from issues such as power\noutages lightning strikes tornadoes\nearthquakes and more so that's the idea\nbehind you know why we want to run in\nmulti-az okay because of these fault\n[Music]\ndomains hey this is Andrew Brown from\nexam Pro and we're talking about the\nadus global Network so the global\nNetwork represents interconnections\nbetween a global infrastructure and it's\ncommonly referred to as the backbone of\nAWS so is EC to so just understand that\nthat could be used in more than one way\nbut think of it as a private express way\nwhere things can move fast between data\ncenters and uh one thing that is\nutilized a lot to get data in and out of\nAWS very quickly is Edge locations they\ncan act as on and off ramps uh to the ad\nGlobal Network of course you can uh get\nto the network through pops which we'll\ntalk about um you know in the upcoming\nslides here but let's just talk about\nEdge locations and what services use\nthem so uh when we're talking about\nthings that are getting on to the adus\nnetwork we're looking at things like\nAbus Global accelerator adus S3 transfer\nacceleration and so uh these use agile\nlocations as an on-ramp to quickly reach\nadus resources and other regions by\ntraversing the fast adus Global Network\nnotice that the names in it say\naccelerator acceleration so the idea is\nthat they are moving really fast okay on\nthe other side when we talk about like\nan offramp or looking at Amazon\ncloudfront which is a Content\ndistribution Network this uses Edge\nlocations to uh as an offramp to provide\nat the edge storage and compute near the\nend user uh and one other thing that is\nkind of always utilized in the global\nNetwork are VPC end points now these\naren't using Edge locations but the idea\nhere is that this ensures your resources\nstay within the Aus Network and do not\nTraverse over the public internet so you\nknow if you have uh you know a resource\nrunning in Us East one and one in uh EU\nit would and they never have to go to\nthe Internet it would make sense to\nalways enforce it to stay within the\nnetwork because it's going to be a lot\nfaster so there you\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we are taking a look at point of\npresence also known as Pop and this is\nan intermediate location between anabis\nregion and the end user and this\nlocation could be a data center or a\ncollection of Hardware so for AWS a\npoint of presence is a data center owned\nby AWS or trusted partner that is\nutilized byus Services related for\nContent delivery or expediated upload so\na pop res could be something like an\nedge location or Regional Edge cache so\nas an example over here we see an S3\nbucket and it has to go through Regional\nEdge cache and then get to an edge\nlocation let's go Define what those are\nso an edge location are data centers\nthat hold cache copies on the most\npopular files so web pages images and\nvideos so that the delivery of the\ndistance to the end users are reduced\nthen you have Regional Edge locations\nand these are data centers that hold\nmuch larger caches of less popular files\nto reduce a full round trip and also to\nreduce the cost of transfer\n[Music]\nfees so to kind of help put pops more in\npresence just in the general sense here\nis a uh diagram I got from Wikipedia\nthat kind of just shows a bunch of\ndifferent networks and notice where the\npop is it's on the edge or the\nintersection of uh two networks so here\nyou know we have um you know tier three\nand then there's tier two and there's\nthis pop that is in between them okay so\ntier one networks is a network that can\nreach every other network on the\ninternet without purchasing IP transit\nor paying for peering and so the inabus\navailability zones or A's are all\nredundantly connected to multiple tier\none Transit providers\n[Music]\nokay all right so let's take a look at\nsomea services that are utilizing pops\nor Edge locations for Content delivery\nor expediated upload so Amazon\ncloudfront is a Content delivery network\nservice and the idea here you point your\nwebsite to cloudfront so that it will\nroute requests to the nearest Edge\nlocation cache it's going to allow you\nto choose an origin so that could be a\nweb server or storage that will be the\nsource of the cach and cach is the\ncontent of what origin would return to\nvarious Edge locations around the world\nthen you have Amazon S3 transfer\nacceleration this allows you to generate\na special URL that can be used by the\nend users to upload files to a nearby\nEdge location once a file is uploaded to\nan edge location it can move much faster\nwithin the adus network to reach S3\nthen at the end here you have adus\nGlobal accelerator you can find the\noptimal path from the end user to your\nweb servers so Global accelerators are\ndeployed within Edge location so you\nsend user traffic to an edge location\ninstead of directly to your web\napplication this service is really\nreally great for if let's say you are\nrunning a web server in Us East one and\nyou just don't have the time uh to set\nup infrastructure in other regions you\nturn this on and you basically get a\nboost okay\n[Music]\nhey this is Andrew Brown from exam Pro\nand let's take a look at itus direct\nconnect so this is a private or\ndedicated connection between your data\ncenter office collocation and AWS and so\nthe idea here is imagine if you had a\nfiber optic cable running from your uh\ndata center all the way to your ads so\nthat it feels like uh when you're using\nyour stuff on your data center like your\nlocal virtual machines that uh there's\nlike next to no latency okay so Direct\nConnect has two very fast network\nconnection options we have have the\nlower bandwidth which is at 50 to 500\nmegabytes per second and then you have\nthe higher bandwidth which is 1 GB to 10\ngbes per second so using Direct Connect\nhelps reduce Network costs increase\nbandwidth throughput so great for hi\ntrffic networks provides a more\nconsistent Network experience than a\ntypical internet-based connection so\nreliable and secure U I do want to point\nout the term collocation if you never\nheard of that before a collocation or a\ncarrier hotel is a data center where\nequipment space and bandwidth are\navailable for rental uh to retail\ncustomers and I do want to also point\nout that even though it says private up\nhere and this is the language that AWS\nused I usually just say dedicated but\nthe connection is private but that\ndoesn't necessarily mean it's secure\nokay so uh we'll talk about that when we\nreach ads vpns and how we can use that\nwith direct connect to make sure our\nconnections are secure\n[Music]\nokay all right so let's take a look at\nwhat a direct connect location is so a\ndirect connect location our trusted\npartner data centers that you can\nestablish a dedicated highspeed low\nlatency connection from your on- premise\nto AWS so an example of a partner data\ncenter would be one like here in Toronto\nthe Allied data center so you can tell\nthat's right down in uh the Toronto\nCenter and so you would use this uh uh\nas part of direct connect service to\norder and establish a connection\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at local\nzones which are Data Centers located\nvery close to densely populated areas to\nprovide singled digigit millisecond low\nlatency performance so thinks like 7\nmilliseconds for that area so here is a\nmap of uh local zones that exist and\nones that are coming out I believe the\norange ones are probably ones that are\non their way and so to use a local Zone\nyou do need to opt in so you got to go\ntalk to AWS probably open a support\nticket to get access to it the first one\nto ever be launched was uh the LA one uh\nand so um you know when you want to see\nit looks just like a an availability\nZone it's going to show up under\nwhatever region that is because these\nare always tied to existing regions so\nthe la1 is tied to us West uh region and\nthe AZ would look like us West 2 hyphen\nLAX hyphen 1A okay so only specific a\nServices have been made available so\nthere's particular ec2 types EBS Amazon\nFSX application load balancer Amazon VPC\nthey probably have extended it to more\nservices do you need to know that for\nthe exam no but you know the point is is\nthat there's a limited subset of things\nthat are available the purpose of local\nzone is to support highly demanding\napplication sensitive Delancy so media\nand entertainment electronic design and\nautomation adte machine learning so it\nkind of makes sense like you look at La\nthey're in the media entertainment and\nso they're dealing with lots of media\ncontent so it has to be really low for\nthem\nokay hey this is Andrew Brown from exam\nprep and we are taking a look at Abus\nwavelength zones and these allow for\nEdge Computing on the 5G networks and\napplications will have ultra low latency\nbeing as close as possible to the users\nso Abus has partnered with various\ntelecom companies to utilize their 5G\nnetworks so we're looking at Verizon\nvhone kddi SK Telecom and so the idea\nhere is that you will create a subnet\ntied to a wavelength Zone and then and\njust think of it as like an availability\nZone but it's a wavelength Zone and then\nyou can launch your VMS to the edge of\nthe targeted 5G Network so that's the\nnetwork you're using uh AWS to deploy an\nec2 instance and then when users uh\nconnect to you know those radio tower\nthose um cell towers they're going to be\nrouted to um you know nearby hardware\nthat is running those virtual machines\nokay and that's all it is it's just it's\njust uh ec2 instances um but you know\nthe advantage here is that it's like\nsuper super low latency okay\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are taking a look at data\nresidency so this is the physical or\ngeographical location of where an\norganization or Cloud resources reside\nand then you have the concept of comp uh\ncompliance boundaries so a Regulatory\nCompliance so legal requirement by\ngovernment or organization that\ndescribes where data and Cloud resources\nare allowed to reside and then you have\nthe idea of data sovereignty so data\nsovereignty is the jurisdictional\ncontrol or legal Authority that can be\nasserted over data because its physical\nlocation is within a uh jurisdictional\nboundary and so the reason we care about\nthis stuff is that if we want to work\nwith the Canadian government or the US\ngovernment and they're like hey you got\nto make sure that you know if you want\nto work with us all the data has to stay\nin Canada and you need to give them that\nguarantee so data residency is not a\nguarantee it just says where your data\nis right and compliance boundaries are\nthose um controls that are in place to\nsay okay this is going to make sure that\ndata stays where we want to be and data\nof sovereignty is just like the idea of\nthe scope of the the legal the legal\nstuff that ties in with compliance\nboundaries so how do we do that on AWS\nwell there's a few different ways but um\nlet's just take a look at some ways that\nwe can meet those compliance boundaries\none uh which is very expensive but also\nvery cool is adamus outposts so this is\na physical rack of servers that you can\nput in your data center and you'll know\nexactly where the data resides because\nyou know it's physical if it's in your\ndata center and you're in Canada that's\nwhere it's going to be okay uh and I\nbelieve that you know there is only a\nsubset of uh adus services that are\navailable here but you know that is one\noption to you another is using like um\nservices for governance so like one\ncould be adus config this is a policy as\na code service so you can create rules\nto continuously check adus resource\nconfiguration so if they deviate from\nyour expectations you're alerted orus\nconfig can in some cases Auto remediate\nso if you were expecting you know um you\nknow you had an adus account and you're\nsaying this account is only to be used\nfor candid reason resources and somebody\nlaunches let's say something in another\nregion then you could get an alert or\ntell it was config to go delete that\nresource okay now if you want to prevent\npeople from doing it uh Al together\nthat's where IM policies come into play\nso these can be written explicitly to\ndeny access to specific adus regions and\nyou know this is great if you're\napplying to users or roles but if you\nwanted to have it organizational wide\nacross all of your um AIS accounts you\ncan use something called a service\ncontrol policy that is just an i policy\nthat is used within 's organizations\nthat makes it organizational wide\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are looking at ads4\ngovernment so to answer that we first\nhave to understand what is public sector\nso public sector includes public goods\nand government services such as military\nlaw enforcement infrastructure public\ntransit public education Healthcare and\nthe government itself so AOS can be\nutilized by the public sector or\norganizations developing Cloud workloads\nfor the public sector and AES to achieve\nthis by meeting Regulatory Compliance\nprograms along with specific governance\nand security controls so this could be\nmeeting the requirements with HIPPA fed\nramp um cjis uh and fips okay so IIs has\na special regions or special regions for\nus regulation called gov Cloud which\nwe'll talk about next\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at govcloud\nand to understand what govcloud is we\nneed to know what fedramp is so fedramp\nstands for federal risk and\nauthorization Management program it's a\nUS government-wide program that provides\na standardized approach to security\nassessment authorization continuous\nmonitoring for cloud products and\nservices so that we know what fed ramp\nis what is gocloud well uh and again\nit's not particular to AWS because Azure\nhas go Cloud as well but a cloud service\nprovider like inabus or Azure J will\noffer an isolated region to run fed ramp\nworkloads and so in it's called govcloud\nand these are specialized regions that\nallow customers to host sensitive\ncontrolled unclassified information and\nother types of regulated workloads so\ngovcloud regions are only operated by\nyou uh by US citizens on us soil they\nare only accessible to us entries and\nroot account holders who pass a\nscreening process customers can\narchitect secure Cloud solutions that\ncomply with fed ramp uh do the doj's uh\ncriminal justice Information Systems\nsecurity policy the US International\ntraffic and arms regulation uh uh export\nAdministration regulations the\nDepartment of Defense cloud computing\nsecurity requirements and guides so if\nyou want to work with the US government\nyou want to uh engineer and use gov\nCloud\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we're taking a look at uh\nrunning adab us China so adus China is\nthe adus cloud offering in mainland\nChina adus China is completely isolate\nintentionally from adus Global to meet\nRegulatory Compliance for mainland China\nso that means that if you make a\nworkload on the adus global uh you can't\nuh interact with it within the adus\nChina One okay it's basically treated\nlike a a completely separate service\nlike adus has its own Chinese version uh\nand so adus China is on its own domain\nat\namazon.cn and for everybody else that's\nwhat's considered Global so when I'm\nusing adus from Canada or use it from\nthe US or from India or from Europe or\nwherever that is the adus global okay so\nin order to operate in adus China\nregions you need to have a Chinese\nbusiness license so ICP license not all\nservices are available in China so uh\nyou will not have the use of Route 53 uh\nand you might say well why not just run\nin Singapore you it was Global and you\ncould do that but the advantage of\nrunning in mainland China means that you\nwould not have to Traverse the great\nfirewall okay so all your traffic is\nalready within China so you don't have\nto uh deal with that Abus has two\nregions in mainland China so uh there's\nthis one here which is the northwest\nregion operated by NS WCF and then you\nhave the one in Beijing North one\noperated by sinnet so you know iTab us\njust could not meet the the compliance\nrequirement so they had to partner with\nlocal providers uh or data centers and\nso that is how that works\n[Music]\nokay all right so I want to show you how\nyou get over to the um Chinese adus\nManagement console so this one is adab.\namazon.com that is the global one for\neveryone outside of mainland China but\nif you want to run resources uh on data\ncenters within mainland China this is at\namazon.cn and so it looks very similar\nif you go to create a free account\nyou're going to fill in this stuff but\nuh notice that you need to have your\nbusiness registration certificate uh and\nadditional information in order to run\nthese data centers down below that ad is\npartnered with also notice that the logo\ndoesn't say AWS in it and there's a good\nreason for that if I type in AWS\ntrademark\nChina uh adus is actually banned from\nusing the adus logo in China uh for\nwhatever reason it's a weird reason if\nyou ever want to read about it but\nthat's why you don't see AWS here all\nright um so yeah there you go\n[Music]\nhey this is Andre Brown from exam Pro\nand we are looking at sustainability for\nadus Global infrastructure and before we\ntalk about that let's talk about the\nclimate pledge so Amazon co-founded the\nclimate pledge to achieve Net Zero\ncarbon emissions by 2040 across all of\nAmazon's businesses which includes AWS\nif youall want to find out more\ninformation go to to\nsustainability. amazon.com there's a lot\nof great information there and you'll\nlearn exactly how uh is achieving this\nin particular like their data centers\nit's very interesting okay so adus Cloud\nsustainabil goals are composed of three\nparts the first is renewable energy so\nadus is working towards having their\nadus Global infrastructure powered by\n100% renewable energy by\n2025 and Abus purchases and retires\nenvironmental attributes to cover the\nnon-renewable energy for Abus Global\ninfrastructure so they would purchase\nthings like renewable energy credits\nalso known as Rec's guarantees of\nOrigins so go the second Point here is\ncloud efficiency so adus infrastructure\nis 3.6 times more energy efficient than\nthe medium of us Enterprises data\ncenters surveyed so that's going to\nreally rely on that survey surveys are\nnot always that great so you know take\nthat with a grain of salt okay then we\nhave water uh stewardship so uh direct\nevaporative technology to cool our data\ncenters use of non portable uh water for\ncooling purposes so the recycling water\non-site water treatment allows us to\nremove us them to remove scale forming\nminerals and reuse Waters uh for more\nCycles water efficiency metrics to\ndetermine and monitor optimal water use\nfor each adus region and you'll find\nthat water plays a large part on uh\nmaking these um uh these data centers\nvery efficient\n[Music]\nokay so I just wanted to show you where\nyou get to that sustainability\ninformation so I just went to Adis\nGlobal infrastructure you click\nsustainability\nand that's going to bring us over to\nwhoops I have my Twitter open there to\nthe sustainability in the cloud so if\nyou want to read a bunch of stuff here\nabout things that are going on that it\nus is up to see uh how they are\nprogressing with renewable energy um\nthere's Cloud efficiency up here so you\nknow how are they being efficient it's\nworth the read to really understand that\nthere's a lot of water involved like\nreducing water in data centers I thought\nthat was really interesting um I mean\nthey have as podcast but I don't think\nthere's really much to it a bi-weekly\npodcast of bite-sized stories about how\nTech makes the world better that's not\nnecessarily A sustainability podcast\nit's just the invis podcast in general\nthere's a download Center um Amazon's\n2020 sustainability reports so I guess\nyou can download the reports to see what\nis going on there so we can download the\nprogress here and see what they've been\nup\nto okay so there's a bunch of numbers\nthings like that okay very short reports\nbut hey at least you can download them\nokay so just in case you're uh very\ninterested in sustainability all\n[Music]\nright hey this is Andrew Brown from exam\nPro and we are taking a look at Abus\nground station so this is a fully\nmanaged service that lets you control\nsatellite Communications process data\nand scale your operations without having\nto worry about building or managing your\nown ground station infrastructure and so\nwhen we're talking about ground station\na really good way to cement what the\nservice is is just think of a big anten\ney dish that's pointing into the sky\ntrying to communicate with satellites\nbecause that's essentially what the\nservice is doing so the use cases here\ncould be for weather forecasting surface\nImaging communications video broadcasts\nand to use ground station the idea is\nthat you would schedule a contact so\nthat's where you're selecting a\nsatellite a start and end time and the\nground location and then you use an a\nground station ec2 Ami and Amazon\nmachine image to launch ec2 instances\nthat will Uplink and downlink uh data\nduring the the contact or receive\ndownlink data in an Amazon S3 bucket a\nuse case could be something like you are\na company you've reached an agreement\nwith a satellite image provider to use\ntheir satellites to take photos for a\nspecific region or time or whatever and\nso the idea is that you are using adus\nground station to communicate uh to that\ncompany satellite and download that s uh\nthat image data to your S3 bucket okay\n[Music]\nhey this is andreww brown and we are\nlooking at Aus outposts and this is a\nfully managed service that offers the\nsame Aus infrastructure Services apis\ntools to virtually any data center\nco-cation space or on premise facility\nfor a truly consistent hybrid experience\nand just to kind of summarize it it's a\nrack of servers running adaba stuff on\nyour physical location okay so before we\njump into the service or technology\nitself uh let's talk about what is a\nrack server or just a rack so it's a\nframe designed to and organized it\nequipment so here's an example of a 42u\nrack uh and there's the concept of rack\nheights so the U stands for rack units\nor U spaces uh with it equal to 1.75 in\nand the industry standard rack is a 48 U\num so that is a 7t rack so a full size\nrack cage is commonly the 42 High okay\nand uh in it you might have equipment\nthat is of different sizes so they could\nbe one u 2 U 3 U or 4 U high so here's\nan example of you know of an interior of\na rack and notice that like one u 2 U 4\nU they're all a little bit shaped\ndifferently uh but they give you kind of\nan idea of um you know what those are so\nit Outpost comes in three form factors\nthe 42 U the one U and the 2 U so the uh\nthe first one here the 42u this is\nbasically a full rack of servers\nprovided bys so you're not just getting\nthe frame it actually comes with you\nknow servers uh and so adus delivers it\nto your Preferred Physical site fully\nassembled and ready to be rolled into\nthe final position it is installed by\nadus and the rack needs to be simply\nplugged in to the power and network and\nthere's a lot of details about um the\nspecs on this on the adus website so you\nknow I'm not going to go through them\nall here um then there are servers that\nyou can just Place into your existing\nracks so we have the one U so this is\nsuitable for 19in y 24 in deep cabinets\nit's using UST uh Gravitron 2 um CPUs\nand you can have up to 64 virtual CPUs\nwe have 128 gigabytes uh 4 terabytes of\nlocal\nNVM storage um and then you have the U\nor sorry the 2 U so suitable for 19in\nwide 36 in deep Intel processors up to\n128 virtual CPUs 256 gbt of memory 8\nterab of local nvme storage so there you\ngo\n[Music]\nlet's take a look at Cloud architecture\nterminologies before we do let's talk\nabout some of the roles that are around\nuh doing Cloud architecture so the first\nis Solutions architect this is a role in\na technical organization that Architects\na technical solution using multiple\nsystems via researching documentation\nand experimentation and then you have\nthe cloud architect this is a Solutions\narchitect that is focused solely on\narchitecting Technical Solutions using\ncloud services under understand that in\nthe uh actual Marketplace a lot of times\nSolutions architect is used to describe\nboth a cloud architect and a Solutions\narchitect and you know these are going\nto highly vary based on your locality\nand how companies want to use these\nterms but this is just me broadly\ndefining them here so just don't take\nthem as a perfect word in terms of what\nthey're representing so a cloud\narchitect needs to understand the\nfollowing terms and factors uh and\nFactor them into their designed\narchitecture based on the business\nrequirements so we have the idea of\navailability your ability to ensure\nservice remains available scalability\nyour ability to grow rapidly or\nunimpeded elasticity your ability to\nshrink and grow to meet the demand fault\ntolerance your ability to prevent a\nfailure disaster recover your ability to\nrecover from a failure and there are a\ncouple other things that uh that should\nbe considered they're not terminologies\nbut they're definitely important to a\nSolutions architect or Cloud architect\nand uh these are things you always need\nto consider uh as well and this is just\nme talking to my Solutions architect\nfriends where they'll always ask me\nthese two questions after presentation\nthey'll say how secure is the solution\nand how much is this going to cost all\nright and so for the terminologies up\nhere we're going to Define these right\naway and we're going to figure these out\nthroughout the course we have two giant\nsections just on cost and security alone\nuh so there we\n[Music]\ngo the first term we're looking at is\nhigh availability and this is your\nability for your service to remain\navailable by ensuring there is no single\npoint of failure and or you ensure a\ncertain level of performance so the way\nwe're going to do that on ews is you'd\nwant to run your workload across\nmultiple availability zones to ensure\nthat if one or two availability zones\nbecame unavailable your servers or\napplications remain available because\nthose other um those other servers are\ngoing to be there and the way we would\naccomplish that is via elastic load\nbalcer so a load balancer allows you to\nevenly distribute traffic to multiple\nservers in one or more data center if a\ndata center or server becomes\nunavailable or unhealthy the load\nbouncer will route the traffic to only\nthe available data centers within the\nserver and understand that just because\nyou have additional servers doesn't mean\nthat you are uh you're available you\nhave to you might need to meet a\nparticular threshold of availability so\nyou might need to have at least two\nservers always running to meet the\ndemand so it's based on the the demand\nof traffic\n[Music]\nokay let's take a look here at high\nscaleability so this is your ability to\nincrease your capacity based on on the\nincreasing demand of traffic memory and\ncomputing power and we have the terms\nvertical scaling so scaling up um this\nis where you upgrade to a bigger server\nand then there's horizontal scaling\nscaling out this is where you add more\nservers of the same size and the great\nthing about scaling out or adding\nadditional servers is that you're also\ngoing to get um High availability so if\nyou do need two servers it's always\nbetter to you know add an additional\nserver as opposed to having a larger\nserver but it's going to be very\ndependent on a lot of factors okay\n[Music]\nso scalability and elasticity seem very\nsimilar but there is a crucial\ndifference and this is your ability to\nautomatically increase or decrease Your\nCapacity based on the current demand of\ntraffic memory and computing power again\nit's the it's the fact that it happens\nautomatically and you can go both ways\nincrease or decrease so for horizontal\nscaling we have the concept of scaling\nout so add more servers of the same size\nand then scaling in removing\nunderutilized servers of the same size\nand vertical scaling is generally hard\nfor traditional architectures so you'll\nusually only see horizontal scaling\ndescribed with elasticity um and the way\nwe would accomplish uh being highly\nelastic is using autoscaling groups asgs\nand this is an naus feature that will\nautomatically add or remove servers\nbased on scaling rules you define based\non those metrics\n[Music]\nokay let's talk about being highly fault\ntolerant so this is your ability for\nyour service to ensure there is no\nsingle point of failure preventing the\nchance of failure and the way we could\ndo that is with fail overs so this is\nwhen you have a plan to shift traffic to\na redundant system in case the primary\nsystem fails a very common example is\nhaving a copy or secondary uh uh uh of\nyour database where all ongoing changes\nare synced the secondary system is not\nin use until a fail over occurs and it\nbecomes the primary database so when\nwe're talking about databases on abs\nthis is the concept of RDS multi-az so\nthis is when you run a duplicate standby\ndatabase in another availability Zone in\nthe case your primary database\n[Music]\nfails and last here is high durability\nso this is your ability to recover from\na disaster and to prevent the loss of\ndata so solutions that recover a\ndisaster uh from a disaster is known as\ndisaster recovery so do you have a\nbackup how fast can you restore the\nbackup does your backup still work how\ndo you ensure current live data is not\ncorrupt and so maybe a solution ads\nwould be using Cloud endurer which is a\ndisaster recovery uh service which\ncontinuously replicates your machines in\na lowcost staging area in your target AB\naccount and preferred region enabling\nfast and reliable recovery in the case\nof an IT data center fails\n[Music]\nokay so to understand Disaster Recovery\nwe need to know more about uh things\naround it like business continuity plans\nBCPS and RTO and rpos so a BCP is a\ndocument that outlines how a business\nwill continue operating during an\nunplanned disruption in services so it's\nbasically the plan that you're going to\nexecute uh if that happens and so here\nwe have a disaster and you can see that\nthere's a chance of data loss and\ndowntime and these two um uh factors as\nRPO and RTO are going to define the\nlength of these durations so recovery\nPoint objective is the maximum\nacceptable amount of data loss after an\nunplanned data loss incident\nExpress this amount of time so how much\ndata are you willing to lose and then\nrecovery time objective so the maximum\namount of downtime your business can\ntolerate without inuring a significant\nfinancial loss so how much time you're\nwilling to go down okay so those are the\ntwo there and now let's go take a look\nat the disaster recovery options that we\ncan use to define in our our\n[Music]\nBCP so now let's take a look at our\ndisaster recovery options uh and based\non what you choose they're going to be a\ntrade of cost versus time to recover\nbased on the rpos your RTO of course and\nso sometimes this is rep represented\nvertically like a a thermostat or you\ncan do it horizontally here um both are\nvalid ways of displaying this\ninformation but I just have it\nhorizontally here today and so we have\nlow or high or you could say um even\nthough I don't have it written here this\ncould be cold or this could be hot okay\nso um on the left hand side we got\nbackup and restore pilot light warm\nstandby multi-active site notice we're\nusing the like the words like pilot\nlight warm things that are relating to\ntemperature so again cold and hot all\nright so let's just walk through what\neach of these things conceptually do uh\nin terms of architecture so when you're\ndoing a backup and restore you're back\nyou basically back up your data and at\nthe time of Disaster Recovery you're\njust going to restore it to New\ninfrastructure uh for a pilot light the\ndata is replicated to another region\nwith the minimal Services running to\nkeep on replicating that data and so you\nmight have some core Services running a\nwarm standby is a scale down copy of\nyour infrastructure so you basically\nhave everything that you would\nabsolutely need to run an application\nbut the idea is it's not at scale and so\nat any time when there's an incident\nyou're going to scale up to the capacity\nthat you need and then you have\nmulti-site active active where you you\nhave a scaled up copy of your\ninfrastructure in another region so\nbasically everything you have\nidentically in another region and so in\nterms of the rpos and the RTO for back\nand restore you're looking at hours uh\nwith the pilot light you're looking at\n10 minutes with a warm standby you're\nlooking at minutes and multi sight uh\nactive active you're looking at uh real\ntime so you know hopefully that gives\nyou an idea of you know the difference\nin terms of scale but let's just look at\nmore detail so for a backup and restore\nthis is for low priority use cases\nrestore data after event deploy\nresources after an event and it's very\ncost effective uh for pilot light this\nis where you have less stringent RTO and\nrpos so you're going to be just running\nyour core Services uh you're going to\nstart and scale resources after the\nevent and this is a little bit more\nexpensive this is uh very good for warm\nstandby is good for business critical\nservices so you scale resources after\nthe event uh and it's uh almost very\nit's very it's costly but it's not as\nexpensive as a multi-site active active\nso you get zero downtime near zero loss\nuh you have it's great for Mission\ncritical services and it's just as\nexpensive as your original uh structure\nso you're basically doubling the class\nthere\n[Music]\nokay so we already defined RTO but let's\nredefine it again based on what adus\ndescribes in their white paper and just\nlook at how it Maps against um the\ndisaster recovery option so re recovery\ntime objective is the maximum acceptable\ndelay between the interruption of\nservice and restoration of service this\nobjective determines the uh what is\nconsidered an acceptable time window\nwhen service is unavailable and is\ndefined by the organization and so this\nis the diagram found in the white paper\nand so on the left hand side we have\ncost and complexity here and then\nlengths of serious Interruption and what\nyou can see here is that the cost and\ncomplexity for a multi- sight active\nactive is very high but the length of\nservice Interruption is zero and then as\nwe go down we have warm standby so it's\nsignificantly like at least half uh the\ncomplexity of that one then we have our\npilot light down here and back up and\nrestore but notice backup restore takes\nthe longest amount of time and notice\nhere we have a recovery time objective\nso in your BCP you kind of Define where\nthat is based on the cost of business\nimpact so you might have to calculate\nthat saying okay what is our cost over\ntime based on the length of service\nInterruption where do we want our RTO to\nbe what is the acceptable recovery cost\nand this is where you're going to decide\nwhat you want to do so here we have\npilot light and backup and restore and\nso this company has to decide whether\nthey want to do a pilot light or they're\ngoing to do a backham restore but it\nsounds like this is where they're going\nto be which is at the pilot uh light for\nwhat is acceptable in their business use\ncase\n[Music]\nokay let's do the same for RPO so\nrecovery Point objective is the maximum\nacceptable amount of time since the last\ndata recovery point the objective\ndetermines what is considered an\nacceptable loss of data between the last\nrecovery point and the interruption of\nservice and it's defined by the\norganization again we pulled this from\nthe a white paper for disaster recovery\nand and uh we have cost and complexity\nbut this time it's replaced with data\nloss before service Interruption so uh\nfor multisite again it's going to be\nvery expensive and high up here as you\nnotice it's not like a perfect um uh\ncurve it's just it's a bit different in\nterms of what it looks like so here we\nhave warm stand standby pilot light um\nand so you'll see that the data loss is\num not a big deal but for backup and\nrestore it really juts out there so you\ncan see that you can get pretty good\ngood results just with the pilot light\nand the cost and complexity is very low\nagain we have to look at our cost and\nbusiness impact so we got to follow that\nline and we need to see where our\nacceptable uh recovery cost is and so uh\nyou're going to notice that uh we have a\nbit of an intersection here okay and so\nwe need to determine you know like are\nwe going to be doing a warm standby\nlooks like we have the cost to do it um\nuh but you know it just really depends\nyou know do we want to be down here or\ndown there okay so hopefully that helps\nand visualize that information for\n[Music]\nyou hey this is Andrew Brown from\nexampro and what I want to show you here\nis a real world architectural diagram I\ncreated this a while ago this is a\nprevious version of the um exam Pro or\ntechnically teacher seat platform uh\nthat powers The Learning Experience uh\nfor by class certifications and so I'm\nhoping that by giving you some exposure\nyou'll absorb some information here uh\nand that will carry through to really\nhelp you cement what these services do\nand how they work together\num now you might be asking how did I\nmake this well I'm in Adobe XD it's by\nPhotoshop or sorry Adobe it's free to\ndownload but there's a lot of options\nout there and but the first thing you'll\nneed is those AWS architectural icons so\nthese are free on AWS you can download\nthem in PowerPoint download them as\nasset as svgs and pgs which is what I\nhave done and start using them in your\num uh whatever software you like there's\nalso third party providers out there so\nlike there's Lucid charts I love Lucid\ncharts but I don't use it to make\narchitectural diagrams uh for AWS um but\nyou know you can drag drop and stuff and\nthey already have the library there and\nthere's a bunch of them that you can\nchoose from so uh you know that's\ninteresting but let's take a look at one\nthat we can download maybe everyone's\nfamiliar with PowerPoint so here is the\nadus architectural icons and the reason\nI'm showing you this is not because it\njust contains icons but it also suggests\nhow you should build them so if I go\nthrough here they'll give you a\ndefinition of those system elements uh\nhow they would look like here so we have\nour group icons our layer group our\nservice icons res icons where they\nshould go uh and then they have some\ninteresting guidelines of like dos and\ndon'ts so here's like a simple example\nof a get to an S3 bucket um here's an\nexample of using VPC subnets and things\nlike that on the inside um and then you\ncan see kind of like all the groups that\nwe\nhave and it'll show all like the uh the\num arrows it's a big faux PA to make U\ndiagonal arrows that's just something\neight of us toine but you'll see a lot\nof people do them anyway\nand then you'll see all the icons so do\nyou have to make them like ad a suggest\nno but you know if if you like the way\nthey look that is fine everyone just\ndoes whatever they want honestly so\nanyway now that we've seen you know how\nwe can go get the resources to make our\nown I have Adobe XD open up here and so\nI just kind of want to walk you through\nwhat's going on here so again I said\nthis is a a\ntraditional um architecture meaning that\nit's powered by virtual machines and so\nwhat we need to look for uh is ec2\nbecause that's where it's going to start\nthat's our virtual machine and you'll\nnotice we have one here so there's a T2\num uh that's running over here and then\nover here we have a T2 okay so uh we\nhave a blue and a green environment so\nthis is our running environment so I'm\njust going to zoom on in here okay so\nthe web app would be running on this and\num and then on the outside here we have\nan autoscaling group and so autoscaling\ngroups allow us to um manage a group of\nec2 instances and they will\nautomatically scale if the demand\nincreases or or or decline so if this\nmachine can't handle it it will just\nautomatically provision a new one and so\nI've contained it in this environment\nhere because I'm representing a blue\ngreen deploy meaning that when I deploy\nthis will get this will be the\nenvironment that replaces things and so\nyou can see I have a lot of lines being\ndrawn around here so um over here we\nhave uh um parameter store so parameter\nstore is a place where we can store our\nenvironment variables um or application\nconfiguration variables and so I have\nthis line going here and it's just\nsaying we're going to take these\nenvironment variables and put them into\nthe application okay uh and then there's\nalso uh the database credential so here\nwe are using postgress over here so and\nthen we need the database credential so\nwe're grabbing those database\ncredentials those are stored in Secrets\nmanager and we're giving to the\napplication so the app knows how to\nconnect to the database and this one\nknows how to uh configure it okay then\nwe have um a bunch of uh buckets here\nfor different organiz ganizations and so\nyou know S3 is for storage so this is a\nway we're going to um store a variety of\nthings so like user data assets\nartifacts Cloud information templates so\nsome of this is for the app some of them\nis for the infrastructure so that's one\nthing there okay then over here we have\nu a cicd pipeline so we have code\nPipeline and so code pipeline is\ntriggered by GitHub so we put our code\nin GitHub and when that happens it's\ngoing to do a code build so that's going\nto build out a server\num and then from there it's going to run\nanother code build server and then from\nthere it's going to then um uh uh use\ncode deploy and so code deploy is going\nto trigger a deploy what it will do is\ncreate a new environment so it's going\nto create a copy of this um sorry it's\ngoing to create a cop this is actually\nthe environment that's running so we'll\ncopy that and that will be our new\nenvironment right okay and so when the\ndeploy is done it will swap and then\nthat environment will become this new\none\num and so you know again this is\nactually really the the running server\nit's just kind of easy to get hung up on\nthis one but the idea here is that um\nyou know that's how deployment works but\nlet's say uh you know we want to get uh\ntraffic to this actual instance this is\ngoing to come through the internet and\nthe internet's going to probably go to\nrid 3 so ref3 is used for domain names\nso this' be like exampro doco\nteacher.com we pass that over to our\nelastic load balancer which in this case\nis an application load bouncer that's\nwhy it's called ALB and that's going to\ndistribute the traffic there if we\nwanted to run the server in another um\nin another availability zone so that we\nmake it highly available um you know ALB\nthe elastic load bouncer application\nload balcer is going to uh have some\ntraffic go here and some traffic go\nthere so this is just uh the blue\nenvironment or whichever the current\nenvironment is over here now when we\nwant to deploy new versions we're going\nto use launch templates and launch\ntemplates um uh are necessary when using\nAutos scaling groups so um you know you\ndo have to Define launch template it\njust says like what is the shape of this\ninstance type like what's this family\nwhat should it be and then we need an\nAmazon machine image so our Amazon\nmachine image is custom built because we\nare installing all the stuff that we\nwant on it and so in order to automate\nthat process we are using um SSM\nautomation documents so SSM stands for\nsystems manager and automation allows\nyou to automate that step so what it's\ngoing to do is launch an instance\ninstall Ruby install postgress download\nthe codebase then it's going to create\nthat Ami and then um it will do a bunch\nof other stuff here as well and this is\ngoing to run weekly or actually at the\ntime uh it was running nightly so we're\ndoing nightly builds so that we would\nalways get the latest um updates to our\nserver um because it's a virtual machine\nthere could always be uh new updates for\nthat Linux version or Amazon machine Li\nversion we were using and then there's a\nbunch of other stuff here so you know um\nhopefully that kind of gives you an idea\nlike the complexity of it and you know\nthis is how I like to make my\narchitectural diagrams very in detailed\nso that we can um look at them but yeah\nif that was too much that's fine but you\nknow that's just the complexity of it if\nyou build your own you'll start to\nreally grasp this stuff pretty well\n[Music]\nokay so what I want to do is just show\nyou how high availability is built into\nsome ad Services where in other cases\nyou have to explicitly choose that you\nwant something to be highly available uh\nso what I'm going to do is make my way\nover to S3 and so with S3 this is where\nyou can create S3 buckets and this\nallows you uh to store things and so the\ngreat thing about S3 is that it's\nbasically serverless storage so the idea\nis that you're just going to choose your\nregion and by default it's going to\nreplicate your data across multiple um\nuh data centers or azs and so this one's\nalready highly available by default with\nthe standard tier uh so that is\nsomething that's really nice but other\nservices uh you know like ec2 the idea\nis that you are going to launch yourself\nan ec2 instance so we launch that one\nand the problem with this is that if you\nlaunch a single\nec2 that is not highly available because\nit's a single server running in a single\num AZ so here you know we would choose\nour subnet our subnet is our\navailability Zone but you'd have to\nlaunch at least two additional servers\nand then you'd have to Route um uh you'd\nhave to uh have something that would\nbalance uh the traffic to the to the\nthree which is a load balcer and so in\nthis case you have to construct your\nhigh availability then you have services\nlike elastic beanock this is a platform\nas a service um and we'll go to\nenvironments here I'm not sure I wasn't\nshowing up there um and so the idea is\nthat with elastic beant stock I'm just\ngoing to click on the main service here\nyou're going to go ahead and uh create\nyour application or create your\nenvironment you probably want to create\nan environment first here okay and so I\nwould choose a web server and then the\nidea is I just name so my application\nhere my uh environment and then down\nbelow you go configure more options\nwhoops it wants me to choose everything\nthat's totally\nfine and we say configure more options\nwe're not going to create it because um\nwe don't want to create one but the idea\nis that uh you you could choose whether\nyou want this to be high highly\navailable or not so see it says single\ninstance so free tier uh and then if you\nchoose this what it's going to do it set\nup a bunch of stuff for you so it's\ngoing to set up an application load\nbalancer for you it's going to set up\nAuto scaling groups for you to make it\nhighly available it's going to run at\nleast uh between 1 to four instances so\nthis does everything that uh ec2 you'd\nhave to do manually setting up so that's\nreally\nnice okay so you know some options have\nthat if we make it our way over to RDS\nand again we're not cating anything\nwe're just looking at the options it\ngives us when we uh start things these\nup\nhere we'll make our way over to RDS when\nit gives us a moment here\nand if we go ahead and create ourselves\na new\ndatabase and we look at something like a\npostgress database notice that we have a\nproduction option and a Dev test option\nand so I mean usually it shows us the\nprice down here so even test Dev is $118\nwhich is not true you can make it\ncheaper than that but the idea is that\nwhen you choose between these two\noptions um it's going to set up uh\nmulti-az it's going to that means that\nit's going to run a an additional um uh\ndatabase in another availability Zone\nreplicate that data over so that it\nstays highly available um you know it's\ngoing to have autoscaling uh uh part of\nit and so some Services you just choose\nit abstractly so you just have to\nunderstand what highly availability is\ngoing to mean underneath so hopefully\nthat kind of gives you a picture of high\navailability on\n[Music]\nAWS hey this is Andrew Brown from exam\nPro and we are looking at adus\napplication programming interface also\nknown as adus API so before we talk\nabout uh the API let's describe what\napplication programming interface is so\nan API is software that allows two\napplications or services to talk to each\nother and the most common type of API is\nvia HTTP requests and so the ads API is\nactually an HTTP API and you can\ninteract with it by sending HPS requests\nusing an application interacting with\napis like Postman and so here's kind of\nan example of what a request would be\nthat would be sent out and so the way it\nworks is that each ad a service\ngenerally has a service endpoint so see\nwhere it says monitoring that's going to\nbe Cloud watch so sometimes they're\nnamed after the services sometimes the\nname is a bit obscure and of course you\ncan't just call an uh call an API\nrequest without authenticating or\nauthorizing and so you have to sign your\nrequest and so that's a process of\nmaking a separate request uh with your\nadus credentials to get back a a\ntemporary token uh in order to authorize\nthat and I don't have room to show it\nbut the thing is is that what you'd be\nalso going along with those requests\nwould be to provide an action so when\nyou look at um the adus API it will show\nyou a bunch of actions that you can call\nthey're basically the same ones you'll\nsee in the IM policies so it could be\nlike describe ec2 instances Or List\nbuckets um and they can also be\naccompanied with parameters okay so you\nknow we're probably not going to show\nyou how to uh make an API request\ndirectly because that's not something\nthat you would generally do um but what\nyou would do is you'd probably use the\nabis Management console which is powered\nby the API use the Adis SDK which is\npowered by the API or using the ad CLI\nso we'll cover all those three\n[Music]\nokay all right so what I want to do is\njust point you to where you'd find the\nresources to use the API program\nautomatically uh we're not going to\nactually use the API because there's a\nlot more to it uh than what I'm going to\nshow you here but at least you'll be\nfamiliar with how the API works so I'm\non the ads. amazon.com website if you\ntype in docs the type top there it's\ngoing to bring you to the main\ndocumentation and what we're looking for\nif we scroll on down there should be a\ngeneral reference area where we have\nservice endpoints if we click into here\nit's going to uh talk about um how a\nservice endpoint is structured and if we\ngo down to abis API we can see some\nadditional information of course to use\num the API you're going to have to sign\nAPI requests first which is not a super\nsimple process but you have to use an\nauthorization header um and send along\nuh some credentials and things like that\nso if you want to know what service\nendpoints are available to you if you\nsearch service endpoints list for AWS\nthis is the big list and so if I was to\ngo down here and look for ec2 uh might\nbe a common example here it's going to\ntell us what the points are and as you\ncan see they are Regional based but the\nidea here is that I could take something\nlike this okay I could grab that and\nusing something like\nPostman I could go and create a new\nrequest and it's probably a post I'm not\nsure what it's supposed to be it's\nprobably a post and then you'd set your\nauthorization header there might even be\none in here for adabs see where it says\nadabs signature so you can go here and\nput your access key and secret within\nhere um so that's something nice about\nPostman so it's going to do the signing\nrequests for you so that makes your life\na lot easier and then from there what\nyou do is you go to your body and you'd\nwant to enter in Json so to do Json\nwould probably be raw you drop down the\nformat Json and then you'd send your\npayload whatever it is so I again I\nhaven't done this in a while because\nit's not a very common uh thing that I\nhave to do like describe ec2 instances\nbut there probably is like an action and\nsome additional information that you'd\nsend along um so you know hopefully that\ngives you kind of an idea how the API\nworks but you know you should never Pro\nuh in practice ever have to really work\nwith the API uh This Way directly\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are looking at the itus\nManagement console so the itus\nManagement console is a web-based\nunified console to build manage and\nmonitor everything from simple web apps\nto complex Cloud deployments so when you\ncreate your adus account and you log in\nthat is what you're using the adus\nManagement console and I would not be\nsurprised uh if you're watching this\nvideo and they've already changed um the\ndefault page here since AOS loves to\nchange the UI on us all the time uh but\nuh the way you would access this is via\nconsole. ab. amazon.com when you click\nsign in or go to the console that's the\nlink that it's going to uh and so the\nidea here is that you can point and\nclick to manually launch and configure\nadus Resources with limited programming\nknowledge this is known as click Ops\nsince you can perform all your system\noperations via clicks okay\n[Music]\nlet's talk about the adus Management\nconsole in brief here so you know of\ncourse when you're on the homepage you\ngo to adus Management console and you\nwill end up logging in and from there we\nwill uh make our way over to the adus\nManagement console when I say adus\nManagement console I'm referring to uh\nthis homepage but I'm also referring to\nanything that I'm doing in this web UI\nwhether it's a subservice or not so you\nknow a lot of times people just call\nthis the dashboard uh or the homepage um\nbut you know it is technically cre the\nadus Management console but everything\nis the adus Management console you can\ndrop down Services here if there's some\nthat you like you can favorite them on\nthe left hand side I don't find that\nparticularly useful you can see the most\nrecent ones here they'll also Show\nrecently up here as well we have the\nsearch at the top notice that there's a\nhotkey for alt S I don't think I ever\nuse it but if I was to type in a service\nlike ec2 it's going to get me the\nservices and then down below it's the\nsubfeatures of it so if I just click\ninto that there into this you this is\nthe main this is a service console so I\nwould call this the ec2 console or the\nec2 service console so if you ever hear\nme saying go to the ec2 console that's\nwhat I'm saying and you'll notice here\nlike there is stuff on the left hand\nside so I come back here ec2 image\nBuilder ec2 Global views these are\nconsidered services but if you drop down\nit says top features or you go down here\nit says dashboard limits Amis you go\nover here uh the ec2 dashboard limits\nAmis are here and limits are somewhere\nhere right there so okay so those kind\nof map over pretty well plls and\ndocumentation knowledge based articles\nMarketplace I don't think I've ever\ntouched those in my life uh this here is\nthe cloud shell so if you click it it\nwill launch a cloud shell we'll cover\nthat when we get to that section here we\nhave this little bell it tells us about\nopen issues I think this is for the\npersonal health dashboard yeah it says\nPhD in the bottom left corner or left\ncorner so if I open that up it'll bring\nup the PHD the personal health dashboard\nall right uh our region selector our\nso nothing super exciting here but just\nkind of giving you a bit of a tour so\nthat you know there are some things you\ncan do um can you change the look of\nthis I don't think right now as of yet\num there is any way I'm sure AOS is\nthinking about it because it's been a\nhigh uh request that's in demand but uh\nthis is what it looks like as of today\n[Music]\nokay all right so I just want to\ndescribe what a service console is so an\nan a service each have their own\ncustomized console and you can access\nthese consoles by searching the service\nname so you would go ahead and type in\nec2 and then what we refer to this\nscreen as as the ec2 console the reason\nI'm telling you this is that when you're\ngoing through a lot of labs or follow\nalongs you'll hear the instructor say go\nto the ec2 console go to the stagemaker\nconsole go to the RDS console what\nthey're telling you is to go type the\nthe name of the service and go to um\nthat particular Services uh console okay\nuh some a service consoles will act as\nan umbrella console containing many adus\nservices so uh you know VPC console ec2\nconsole systems manager console\nstagemaker console uh cloudwatch console\nthese all contain multiple services so\nyou know for um for ec2 you might say\nokay well I need a security group\nthere's no security group console it's\nunder the ec2 console okay uh so just be\naware of\n[Music]\nthat so now I want to show you some of\nthe service consoles to kind of\ndistinguish how they might vary per per\nservice okay so if we were to look up\nec2 um and we just did look at this but\nthe interesting thing is that some uh\nconsoles the ec2 console uh is the home\nfor other databus services and you just\nhave to learn this over time to know\nthat so for instance elastic Block store\nis its own service but it's tightly uh\nlinked to ec2 instances so that's why\nthey always have it here same thing with\nAmis uh security groups same thing with\nthat so these are interesting because\nthese are basically part of virtual\nnetworking and so you think they'd be\nunder the VPC console but they are\nactually under here with ec2 and so load\nbalancing Auto scaling groups tightly\ncoupled to um uh to ec2 if we make our\nway over to\nVPC um you know here it's going to\ncontain all the new stuff does it have a\nnew experience no I guess this is the\nnewest one it looks a bit old and a\nlittle bit new here but you know we have\na lot of different things here like fire\nfirewalls vpns Transit gateways traffic\nmirroring we make our way over to Cloud\nwatch okay and cloudwatch has uh very uh\nfocused Services they're all actually\nnamed and this is more like a s feels\nmore like a single service where you\nhave these very focused um Services\nwhere you have alarms logs metrics\nevents insights right but you're going\nto notice that like the UI highly varies\nso we had looked at Cloud watch and then\nwe had looked at U VPC and looks like\nthis and then we looked at ec2 and it\nlooked like that and so there is\ninconsistencies because each um Service\nuh Team like that work on per service or\nwhatever they have full control over\ntheir UI and so some of them are in um\nuh different states of updating so some\npeople might have updated the left-and\ncolumn but this part is old or you might\nclick around like under something else\nlike ec2 dashboard um or maybe a better\nexample might be Amis I remember we're\nin here something looked old here yeah\nsee these are the old buttons and that's\njust how it is so everything is very uh\nmodular and so they get updated over\ntime so that is the challenge that\nyou're dealing with you're always having\nlike three different versions that are\ncobbled together in each uh um UI one\nthing that I found really interesting is\nthat um VPC has its own console\nManagement console but if you were to\nlook up this in the uh the SDK so if I\nwas to look up um ABS\nSDK uh\nec2 okay I'm just looking up r Ruby here\nas an example because that's what I know\nhow to do um if you look under here\nlet's say you want to pragmatically work\nwith vpcs you think that it would have\nits own top level VPC because it has in\nthe console its own uh its own\nManagement console but actually VPC is\ntightly coupled ec2 and so when you want\nto pragmatically use VPC you're going to\nbe um using actually ec2 uh as as how it\nwas built so the the the what I'm trying\nto get is the apis don't one to one\nmatch with this kind of stuff and so\nit's just kind of interesting that\nthere's those kind of uh differences uh\nbut again it's not that big of a deal\nI'm just trying to say like you know\nkeep your mind open when you're looking\nat this stuff\n[Music]\nokay so every adist account has a unique\naccount ID and the account ID can be\neasily found by dropping down the\ncurrent user in the global navigation so\nwhat I'm going to do is pull up my pen\ntool here and just show you it's right\nthere uh the ab account ID is composed\nof 12 digits and so it could look like\nthis or this or this theab account ID is\nused when logging in uh with a nonroot\nuser account uh but generally a lot of\npeople like to set their own Alias\nbecause it's tiring to remember your\naccount uh ID the uh you use it when\nyou're creating cross account R so you'd\nhave the target account d The Source\naccount ID to gain access to resources\nin another a account when you're uh\ndealing with the support cases ads will\ncommonly ask you what your account ID is\nso they can identify\nthe account that they want to look at\nand it is generally good to keep your\naccount ID private as it is one of the\nmany components used to dentify an\naccount for an attack by malicious actor\nuh so you don't have to be overly\nsensitive with it but you know try to\nhide it when you can when it's easy\n[Music]\nokay all right so let's talk about the\naccount ID which appears up here in the\ntop right corner uh where you can get\nthe account ID it also appears in IM am\nso if we go over to I am and you look on\nthe right hand side it should show you\nthe example here it keeps on trying to\ntake us to the old dashboard that's fine\num but you'll notice that it's over here\nand I don't have MFA turned on because\nI'm in my IM user account but it should\nbe turned on on everything that's given\nbut uh you know I just want to show you\nwhere it is and also where you might be\nusing it so one example where you would\nuse you would need to know your account\nID would be something like creating a\ncross account policy so I went here and\nwent to policy and went create policy\num and we went to maybe it's a roll I\nthink we actually sorry we want a cross\naccount roll it's not the policy sorry\nwe go here and we say I want to access\nsomething in another A's account what we\nhave to do is specify the account ID\nspecify the accounts that can use this\nrole so you give I think the the ID of\nthe other\naccount okay and so that is one place\nwhere you use it another place would be\nwhen you're creating policies so if I go\nback to policies here I can create a\npolicy\nhere and I can just choose something\nlike S3\nokay and I'll just choose a list and\nunder the request\nconditions I might specify I think the\naccount IDE it should be in\nhere um I know I can limit based on\naccount\nID principal account\nso you could do principal account so if\nI just looked up this here ABS principal\naccount and you just got to get used to\nGoogling things because that's always\nwhat's happening here and so we should\nbe able to specify an account ID yeah\nlike that so that would be the principle\nthere so if I just took that and doesn't\nmatter what it is we just put the value\nin\nhere um string equals this add I should\nbe able to go over here and now see the\nfull statement no sometimes that happens\nbecause we don't have it fully filled\nout but um yeah so that pretty much\nthat's pretty much how we use it like it\nwould normally show up as that so if I\njust go ahead and go next the policy\ncontains an error you are required to\nchoose a\nresource what do you mean the resource\nis this right oh down here okay sorry uh\nso we'll just say all resources then we\nflip over now it's valid and so here we\ncan see our condition saying only from\nthis account ID that it is allowed um\nother places we're going to see account\nIDs are in um ARS right so if we had an\nec2 instance we don't have one launched\nright now but if I was to go ahead and\noh maybe we have some prior ones yeah so\nif I was to checkbox this\nhere and you might not have any prior\nones so there might not be nothing for\nyou to see but if you look for the\nAR where's our AR\nsometimes it doesn't show the Arn in the\nservices sometimes it does I wish that\nabot always showed the Arn to make our\nlives a bit easier but it could be\nbecause of other reasons why but even\nthough we don't have the R I think it\nshows us shows us the owner ID and so\nthat's the account uh the account ID\nnumber you can tell because it's 12\ndigits so hopefully that gives you kind\nof a tour of the account ID and what its\npurpose is in the account okay\n[Music]\nall right let's take a look at it tools\nfor Powershell so what is Powershell\nPowershell is a task Automation and\nconfiguration management framework is a\ncommand like shell and a scripting\nlanguage so here it is over here uh if\nyou are a Windows user you're used to\nseeing this because it has a big blue\nwindow so unlike most shells which\naccept and return text Powershell is\nbuilt on top of the net common language\nruntime CLR and accepts and Returns the\nnet objects so uh has a thing\ncalled the adus tools for Powershell and\nthis lets you interact with the adus API\nvia Powershell commandlets commandlets\nis a special type of command in\npowerwell in the form of the capitalized\nverb and noun so in this case it'd be\nnew hyphen S3 bucket so you know we\nlooked at the a CLI and that is\ngenerally for bash um uh you know shells\nand so po shell is just another type of\nshell that's very popular and I just\nwanted to highlight it for those people\nthat are uh you know used to using\nMicrosoft workloads or azure workloads\nuh that this actually exists\n[Music]\nokay all right let's take a look at the\npow shell tools um I actually haven't\nused this one yet so I'm kind of curious\nI am out of Windows machine so if I was\nto um open CM or\nPowershell and you probably can't see\nthis but if I just bring this over here\nif I type in Powershell on my\ncomputer you'll notice that I have it um\nso that's how you would launch it looks\nlike a blue screen here okay um if\nyou're on a Mac you're not going to have\nthat but that's totally fine we don't\nneed to have a Windows machine to use\nPowershell because we can go ahead and\nuse cloud shell so make sure you're in a\nregion that supports Cloud shell so I\nswitch back to North Virginia uh this is\nnot important for the exam but it's just\nkind of fun for me to go through this\nwith you and if you just like want to\nwatch uh here and so I want to change\nthis over to Powershell so I imagine\nthat it must be over\nhere um so how do we change to\nPowershell so we'll type in ad us po or\nit us Cloud\nshell power shell like how do we do\nit okay and so I'm just going to scroll\ndown\nhere so the following shells are\npre-installed uh The Bash the power\nshell the Z shell you can identify them\nby that yeah of course to switch to New\nShell enter the Shell's program name in\nthe command line prompt oh wow that's\neasy so um if we want\npwsh do we just type pwsh let's find out\ngive it a moment to think oh there we go\nokay so now we're using Powershell and\nso I would think that ads would give\nthis pre-installed for us so if we go\nover here to the instructions and we\nscroll on down there's probably like oh\nwait like I don't use Powershell a lot\nit's very easy to install modules um\nI've done it before but I never remember\nhow to do it but let's just see what we\ncan find here so I want the\ndocumentation for Powershell here and\nI'm going to go to the um the maybe the\nreference here because I just want to\nsee some examples for the commandlets\nand so we'll look for S3 again never\ndone this before but I'm always great at\njumping uh into these things and all I\nwant to do is just list out the buckets\nso I'm going to just search for the word\nlist um and just see if I can find\nsomething very simple\nhere and calls to get the list buckets\nAPI operation so I think that is what\nwe're going to be doing here so I'm\ngoing to click into that okay\nand then from there what I'm going to do\nis just see if I can copy this command\nso we will go ahead and copy this and\npaste it in here and I like how we got\nthis little shell here so we can tweak\nit so we need the bucket name but I\ndon't want to return a list of all the\nbuckets owned by the author so we don't\nhave a bucket name that we want\nexplicitly set here so it's required\nfalse so we can remove that okay we'll\nlook at the next one select required\nfalse use the select command to control\nthe command L output the default is\nbucket specifying select will result in\nturning all the whole\nbuckets for that specifying the\nname uh but it says it's not required so\nlet's just take that out as well I don't\nthink we need any of these actually\nlet's just go and put that in there and\nI think that there must be something we\nneed to put in front of that right well\nlet's just see what\nhappens uh the term is not recognized as\nthe name of the command L function\nscript is operable so I think we're\nmissing something in front of\nhere we'll go to the user guide here\nquickly and we'll get to the getting\nstarted I just want a super simple\nexample\nhere new bucket get bucket well let's\ntry this one here because they have it\nhere and so it should just work\nright I'm going change this to us East\none\nthe term new bucket is not recognized as\nthe name of the commandlet function so\nI'm guessing that the commandlets not\ninstalled I would have thought that they\nwould have installed it by default so I\nguess what we'll do is look at how to\ninstall it so installing\non Linux I\nsuppose\nso you can install the modulized version\nof the Powershell on computers to\ninstall adus tools on Linux PW H to\nstart Powershell core session so I guess\nthat's how you must start it on Linux\nand then install the module this way so\nyeah I said it's easy to install these\nthings we'll hit\nenter cross your fingers hope this works\nhope this is\nfast I'm just going to take a look here\npeek forward here if you are not uh if\nyou're notified the repository is UN\ntrusted you're asked if you want to\ntrust anyway just hit Y so we're waiting\nfor that here um you're installing this\nmodule from usted repository it's funny\nthat it's untrusted by but it's by AWS\nmaybe that's some kind of drama between\nMicrosoft not letting AWS have an\nofficial module there but it looks like\nit should be installed now so if I type\nin get S3 buckets\nhere um unless I typed it wrong that\nstill doesn't seem to be working if I go\nup here and try to create a new bucket\nstill does not recom recognize the\ncommand command lit here so there must\nbe more going on\nhere um\nif you notified you can now install the\nmodule for each\nservice okay well what did we\ndo you're installing the the the modules\nfrom untrusted if you trust it change\nthe uh change it installation policy\nvalue by running set policy command are\nyou sure you want to install this module\nfrom the PS Gallery so I said yes and I\ngave it a capital Y and it didn't do\nanything\nelse so\noh hold on here so this is the installer\nand then here is the actual tool that we\nwant to install so it install to oh so\nwe just installed this thing and now we\nuse this thing to install S3\nokay great not hard\nokay and so we'll just say yes to\nall and so that's going to install I\nguess everything oh we said ec2 and S3\nwell we didn't need both but that's fine\nand so what I'm going to do is go get\nbucket and so now recognizes it lists\nout the items here we can go and create\nourselves a new bucket so we'll do that\nokay we'll make our way back over\ndatabas Management console we'll go to\nS3 just because I don't need all these\nbuckets lying around here and I'm going\nto go ahead and delete some of these\nbuckets here so we'll say\ndelete my bucket great and we'll go to\nthis one here and say delete my bucket\nexcellent all right so we have an idea\nhow to use Powershell and so Powershell\nis just really popular because of it's\nthe way you do inputs is very\nstandardized and the outputs that come\nso it's very popular um and a very\npowerful scripting tool that's or CLI\ntool as well so uh you know hopefully\nthat's that was interesting for you but\nwhat we'll do is just close these off\nhere and go back to our our homepage\nalways just clicking that logo there and\nthere we\n[Music]\ngo so Amazon resource names uniquely\nidentif AWS resources and ARS are\nrequired to specify resource and\nAmbiguously across all of all of AWS so\nthe AR has the following format\nvariations so there's a few different\nthings here but just notice here that\nsometimes it has a resource ID or it has\na path so with a resource type or could\nbe separated by a colon so the partition\num could either be ads China or gov\nCloud because this is basically the adus\nuh portal or URL that are completely\nseparated from each other uh as we\ntalked about those earlier in the course\nuh then there's the service identifier\nso ec2 S3 IM am pretty much every\nservice has their own uh service that uh\nname here that would be identified then\nthe region would be pretty obvious Us\nEast one CA Central 1 you'd have a count\nID which would be 12 digits uh the\nresource ID uh could be a name or a pass\nso like for um IM users we have user Bob\nthis is an ec2 instance and most of the\nirns are accessible via the AAS\nManagement console and you can usually\nclick the r to copy to your clipboard so\nhere is it is for an S3 bucket and\nnotice that it's a little bit different\nbecause it is a global Service AWS\nthere's no reason to specify the region\nor the account ID or uh anything else\nthere like the resource type so straight\naway we already know it's a bucket so we\ncan just say my bucket so that one's\nreally short but in other cases it's\nreally long so here it is for a load\nbalcer and it has all the information\nthere and notice that like this has a\npass this is low bouncer app my server\nwill be and then it has the ID okay for\npaths and ARS they can also include a\nwild card Aster and we'll see these like\nwith IM policies or or paths these are\nreally useful when you are doing um uh\npolicies where you have to specify AR\nyou want to say a group of things and\nthings like that so there you\n[Music]\ngo all right so now let's take a look at\nAmazon resource name or also known as\nArn um and so ARS are used to reference\nobjects they're very commonly used when\nyou're using the CLI or the SDK to\nreference to something um the easiest\nexample is S3 right so we go over to S3\nhere and we create ourselves a new\nbucket um so I'll go ahead and create\nourselves a new one here we'll say my\nnew bucket I'm just going to put a bunch\nof numbers in here it doesn't matter\nwe'll hit create bucket and what we will\nsee if we click into this is the orange\nshould be under\nproperties and there it is okay so so\nthere are many cases where you might\nwant to use the RN and a lot of times\nyou'll just copy it and uh a very common\nexample would be again with I am\npolicies so we go over to I am policies\nright and I want to get to policies here\nto save myself some trouble and we\ncreate a\npolicy you know I might want to restrict\nsomeone to use only that bucket so I say\nS3 okay and then I'm going to say um I\nwant to be able to read and write from a\nparticular bucket we go drop down the\nresources here and so here we have a lot\nof\noptions um maybe I'll just get rid of\nthe read\noption and I'm going to actually expand\nright because it's just creating too\nmuch work for me here and I just want to\nhave um put put object that's that's the\nwhat we use to put something into a\nbucket so we expand the resource here\nand notice it says add the irn so we go\nhere and we could type the bucket name\nso do that or we just paste it on in\nhere at the top so it's probably easier\njust to grab it\nsometimes but if you don't know an AR a\nlot of times you can just expand this\nand then fill it in and that's how you\nget an AR so put that there let's list\noh you could also do it that way which\nis easier too and so now if I go to Json\nis it valid there we go so here it's\nsaying um this policy allows somebody to\nput an object into this particular\nbucket and so that would be an example\nwhere we would use um an R okay or if\nyou're doing uh if you're using uh a the\nsupport you might have to use an R to um\nto get help from support saying hey look\nat this particular resource exactly here\nand then the the cloud support engineer\ncan help you\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are looking at the adus\ncommand line interface but before we do\nthat we got to Define some terms so what\nis a CLI so a command line interface\nprocesses commands to computer program\nin the form of lines of text operating\nsystem Implement a command line\ninterface in a sh L okay so then we have\na terminal so a terminal is a text only\ninterface so it has input output\nenvironment then you have a console this\nis the physical computer to physically\ninput information into a terminal then\nyou have the shell a shell is the\ncommand line program that users interact\nuh with to input commands popular shell\nprograms are bash uh zsh Powershell and\nuh you might remember this one MS DOS\nprompt so this has been around for\nobviously a very long time so maybe this\nkind of primes your mind for what is a\nshell and just so you know people\ncommonly erroneously use terminal shell\nor console generally describe\ninteracting with a shell so if we say\nshell or console or terminal we're just\ntalking about the same thing but there\nis technically a difference between\nthese three things but most people do\nnot care and I wouldn't worry about it\ntoo much okay so now let's take a look\nat the itus command line interface which\nallows you to programmatically interact\nwith the itus API via entering single or\nmulti-line commands into a shell and\nthen here I say or terminal but really\nit's just the shell Okay so so uh here\nis an example of one so we're trying to\ndescribe uh ec2 instances and then we're\ngetting the output because we asked to\nhave it back in this table like view so\nthe a CLI is a python executable program\nso python is required to install the a\nCLI the a CLI can be installed on\nWindows Mac Linux Unix the name of the\nca program is AWS you'll notice that up\nhere in the top left corner there's a\nlot more to this but this is all we need\nfor now okay\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are taking a look at the Aus CLI\nand the easiest way to get started with\nthis is actually via the cloud shell so\nyou'll notice this little icon here in\nthe top right corner that is cloud shell\nand it's going to allow us to um uh\npratically do things without having to\nset up our own environments so if I just\nclick that there okay uh and I say do\nnot show again close and by the way if\nyou don't see Cloud shell here it could\nbe your region so like if I go to Canada\nCentral it doesn't have it there and so\nif I was to search cloudshell\nhere okay it's going to say it's only\nsupported in those regions so that's a\nbit annoying but once Cloud shell loads\nit already has our uh credentials loaded\nwithin our account and so this is going\nto save us a lot of time in terms of uh\nyou know trying to get set up with the\nexception that you have to wait for this\nenvironment to create so it takes a\nlittle bit of time but it's not that bad\num and while that is waiting what I'll\ndo is show you actually how you would\ninstall the CLI yourself so if we typed\nin itus CLI\ninstall all right and uh we went here\nthe way you would install I believe it's\na python library but if we went to\nversion two and we just said Linux uh\nyou go down here they have instructions\nso you just curl it unzip it and do\nthat um so you know if it's this and\nthen once it's installed you'll have the\na CLI commands this is still going so\nyou know maybe I can show you what it\nwould be like to install the CLI by hand\nso if we want to do that one easy way to\ndo this is if we just go to GitHub\ndoesn't matter what repository I'm just\nlooking for anything here and if I open\nup git pod so if we go on the top here\nand type in git pod\nuh.com maybe\nthat I just want to see\nwhoops maybe it's get\npods\nthat oh get pod you're not giving me oh\nyou know what it's doio that's why okay\nso if we go back here sorry and we type\nin\ndoio what this will do is launch me a\ntemporary environment and so this is\noutside of AWS so I'd actually have to\ninstall the CLI so this would be a great\nopportunity to show you how to install\nthe CLI I'm just doing it this way\nbecause git pod is free to use and um\nyou know it's going to set up an\nenvironment and how let us simulate\ninstalling the CLI so here is the CLI\nhere I'm going to see if I can bump up\nthe font um let's make the font as large\nas we can go light or dark dark sounds\ngood to me\nand so if we type in\nAWS give it a moment we can see that we\nhave uh the command here so if I say ABS\nS3 LS whoops it should be able to list\nthings out in a bucket so this is what's\ncurrently in the bucket if you're\nwondering how do I know what these\ncommands are I can just type in a CLI\ncommands Okay and if we go here um and\nwe go to the CLI ref reference then we\nhave um anything we want here right so\nwe go down here and I just want to see\nwhat's running in S3 and I go here and I\nscroll on down it's going to show me\ncommands like copy move remove sync uh\nMBR RB uh list\nright and if you're looking for a\nparticular command you go down and say\nokay I'll look at LS here and it will\nexplain to me all the little options\nthat we can do with it and then it will\nalways give me examples right so I can\nsee examples like that so if I wanted to\nmove something into an S3 bucket so\nlet's say I want to create a new S3\nbucket um we'll type in AWS S3 and just\nhit enter and it should tell\nus um the sub commands maybe if I do\nlike help like\nthis and if we scroll on down so I guess\nit just pulls up documentation let's\nhoping it would give us like a tiny\nsummary okay so what we can do here\nbecause I want to create a\nbucket type in like\nbuckets if you don't know something you\njust go ads S3 CLI create bucket we'll\ngo\nhere um and then what I do is I always\njust go to examples here so here have\nads S3 API create bucket and I know it's\nunusual there's an S3 and there's an S3\nAPI I don't know why that is but it's\nalways been that way and I I just don't\nquestion it anymore and so here I can go\nahead and create a new bucket so I'll\njust go ahead and paste that command in\nI do want to change it up a bit here\nbecause this name could be that has to\nbe unique so just to make sure I get\nwhat I want I'm putting random numbers\nin here we're going to choose the region\nas us East one if I wanted to do other\nthings here I could scroll up and look\nat some Flags here\nso uh it looks all fine to me so I think\nI'll go back here and just\nhit uh\npaste okay and so it created that bucket\nfor me if I go over to\nS3 and we'll wait here a moment we can\nsee that bucket now exists if I wanted\nto place something in that bucket what I\ncan do is just like touch a file so I'll\njust say um touch touch is a Linux\ncommand to make just an empty file so\nwe'll say um\nhello.txt and then it'll be a S3\num it would be SP to copy it and I'm\ngoing to give it the local path\nhello.txt and then I need to give it the\nbucket address so it' be S3 colon SL SL\nthe bucket name so we named it this I'm\nnot going to try to type that in by hand\nbecause it's too hard and then I want to\nsay where I want to put this file so I'm\ngoing to say hello.txt and if I'm right\nthat should work as expected and so it\nsays I uploaded that file I make my way\nback over to S3 I refresh there is the\nfile if I want to copy this file back\nlocally um all I have to do I'm just\ngoing to remove I'm going to delete the\noriginal hello txt file LS to show you\nthat there's nothing there and what I\nneed to do oops is just revert this so\ninstead of saying the address\nhere we can go and type in\nhello.txt and if I do LS there's the\nfile if you don't know what the address\nis of the bucket um a lot of times you\ncan go here and find it so it should be\nbecause they're always changing this UI\non me but we'll go to properties here\nand there that's the\nArn uh usually a good way to find it is\nif you go into an actual object so if\nyou go here it'll give you the full URL\nso I could have grabbed that and I could\nhave just pasted that in there um but\nyou know you learn after time it's not\nhard to remember this S3 Co SL the\nunique name I do want to show you how to\ninstall it by hand so here I'm in git\npods um I'm not sure how I can change\nthis to a dark theme because I really\ndon't like this on my eyes we'll go down\nbelow here to color\ntheme and we'll say get PA dark there we\ngo and so this is a temporary workspace\nso when I close it it'll be gone so\nthat'll be totally fine and so I'm going\nto typee in AWS to see that it's not\ninstalled we're going to go over here\nthis runs Linux by default so I already\nknow that I'm going to use Linux we want\nto use version two here um\nso for the latest version use this\ncommand for a specific version no we\njust want the generic one so I'm going\nto go ahead and copy this whoops yes\nallow we'll paste that in we'll hit\nenter okay then we'll take the next\ncommand paste that in hit enter\nwe'll go take the next command\nhere we'll hit\nenter you can now run uh AWS so we type\nAWS and there's the command so uh the\nonly thing is that if we do AWS S3 LS\nit's not going to work because we don't\nhave any credentials set so we'll give\nit a moment to think so it says unable\nto locate credentials you can configure\ncredentials by running adus configure so\nwe type in ad\nconfigure and by the way if this font is\ntoo small I believe I can bump it up\nlike\nthis not a great way to do it but um it\nworks and so it says ads access key ID\nso what we can do is go over to\nIM and what I'm looking for is my\nparticular user over\nhere and if you remember when we first\ncreated our account it generated out\naccess key so I go to security\ncredentials and so we have a key here\nbut I need the secret so this key is\nuseless to me so I'm going to go ahead\nand deactivate\nit just cuz I don't even want this key\nand I'm going to create myself a new key\nso I'm going to have an access ID in\nsecret whenever you generate these out\nnever ever ever ever ever show anyone\nwhat these are these are your yours and\nyours alone okay so this is cloud shell\nwe're fine we're just going to close\nthat for now and I'm going to go back\nover to get pods here and hit enter so\nthat's the ID I'm going to go grab the\nsecret\nhit enter paste and I want it to go to\nus East one to save myself some trouble\nuh you can change the output from Json\nto tables I'm going to leave it as the\ndefault here and so now if I type ABS S3\nLS I get a list and so if I want to grab\nthat file there I'm going to grab that\nS3 U and we type in a S3 API or sorry\nit's just LS sorry or sorry CP and we're\ngoing to paste that link in and we're\ngoing to say hello.txt\nand I must have done the command wrong\nit's because we're missing S3 here I\njust hit up on the keyboard to get that\ncommand back and so I type in LS for\nlist and I mean I have some other code\nhere so you know again any repo you want\non GitHub doesn't really matter uh but\nyou'll see there is that file probably\nshouldn't have used this one because it\nmakes a bit of a\nmess um but yeah it's pretty\nstraightforward just to one thing to\nshow you is where those credentials are\nstored so by default they're going to be\nstored in um it's going to be in the\nhidden directory in your root or your\nhome directory called ad. credentials so\nif I just do like LS here you can see\nthere's a config file and a credentials\nfile cat lets me print out the contents\nof that file so I go here and it's\nsaying the default region is us east1\nthis is a tomel file even though it\ndoesn't have a toml on the end of it I\njust know by looking at it that's what\nit is config lets you set uh defaults\nthat are going to apply to all of your\ncredentials and then uh within the\ncredential file here is the actual\ncredentials so if you wanted to just set\nthem you could go in here and just set\nthem in here you can also set multiple\ncredentials so if I go here and I'm\ngoing to open up and buy because I'm not\nsure how to open it up here in the main\none but if you wanted multiple accounts\nyou do like exam Pro and then you just\nrepeat these with different keys right\nand then when you wanted to use an a CLI\ncommand actually I'm going to go back\nhere for a\nsecond okay and if you want to um\nand by the way I'm using VI you never\nuse Vim it's it's a bit tricky to use uh\nyou might want to use Nano instead if\nyou're if you're kind of new to this uh\nbecause this will use like regular key\nkey cuts and then down below it shows\nyou what it is so this is like control X\nor alt X alt X NOP contr X there we go\num but anyway so if I go into this file\nand I delete the original one right and\nnow I try to\ndo um this command here even though we\nalready have that file it should either\nhang or complain I Could Just Kill that\nby doing control C if I do ads S3\nLS notice that it's hanging so unable to\nlocate credentials because there's no\ndefault one but if I go and I put\nprofile and I say exam\nPro right it it'll now use that profile\nso that's the way we do it um but\nhopefully that gives you kind of a a\ncrash course into the CLI um so yeah\nthere you go okay so I'm just going to\ngo ahead and close these off you can\ndelete this bucket if you don't want it\nit's probably a good idea to delete this\nhere and I'm just going to say\npermanently delete\nokay very very good okay close that off\nand yeah that's the introduction to the\nCLI so yeah there you\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we are taking a look at\ndevelopment kits uh so a software\ndevelopment kit or SDK is a collection\nof software development tools and one\ninstallable package so you can use the\nAWS SDK to programmatically create\nmodify delete or interact with adabs\nresources so the adabs SDK is offered in\na variety of programming languages so we\nhave Java python nodejs Ruby go.net PHP\nJavaScript C++ and so here would be an\nexample of uh some rub code where we are\ncreating ourselves um an S3 bucket so\nwe're just uploading a file there\n[Music]\nokay okay so now what I'm going to do is\nshow you how to use the adabs SDK and so\nuh to do that uh we're going to need\nsome kind of IDE um a a basically code\neditor and so we had looked at G pods\nwhich is a thirdparty service and that's\nfine but let's take a look at Cloud9\nbecause that is built into AWS so if I\njust type in Cloud9 here and go over to\nIDE I'm going to launch myself a new\nenvironment so I'll hit create I'm going\njust say my SDK\nenvironment EnV if you if you have hard\ntime typing environment like me and we\nhave some options so create an new2\ninstance for direct access create it via\nassistance manager run a remote with SSH\nI'm going to leave it as the default\nthen we have the option to choose what\nsize I want to leave it on T2 micro\nbecause that is the free tier then we're\ngoing to scroll on down we have Amazon\nLinux 2 Linux Ami I'm going to stick\nwith uh Amazon link 2 and we can have it\nturn off after 30 minutes a great option\nfor us here and we'll go ahead and hit\nnext and we'll hit create\nenvironment and so we're going to have\nto wait a little bit for this to launch\nit'll take a few minutes as that is\ngoing let's go to Google type in itus\nSDK um to get to the main page and so\nthe idea here is that there are a bunch\nof different languages you can use C++\ngo Java javascript. net node.js PHP\nPython and Ruby uh and so I'm a really\nbig fan of Ruby I've been using Ruby\nsince 2005 and so that's what we're\ngoing to do it in it's also really easy\nto use and it's a really great language\nso um you know down below it's just\nshowing you that there's all these\ndifferent things but if we go down to\nthe SDK here and we click on\nRuby we we have examples where we have\nthe developer guide the API reference\nand so this tells you how to get started\neven here it's saying like hey go get\nstarted with Cloud9 which is great as\nwell I suppose um and so here it might\nshow you how to install it um and when\nwe open up the API references this is\nwhat it looks like so a lot of times\nwhen I want to do something I know it's\nlike I want to do something with S3 so I\nscroll on down here and I look for\nS3\nright and then I just kind of like uh\nscroll around and look you know what I\nmean sometimes I have to expand it go\ninto the client every API is a slightly\ndifferent so you do have to kind of\nfigure out how to navigate that I'm\nactually under S3 right now so I'm\nlooking for for the client and I just\nknow this for memory that this is where\nit is so first you create yourself a\nclient and then you can do API\noperations so if I wanted to like list\nbuckets I just search the word list and\nI just scroll on down and there it is I\nclick into that and I have an example of\nhow to list a bucket so I'm going to go\nback to Cloud9 and it is ready and it\nstarted in dark mode um if yours is not\nin dark mode which really honestly why\nwouldn't you want dark mode um if we go\nup to I think it's like file where is it\nuh preferences here here got to click\nthe Cloud9 option and I'm just seeing if\nit like remembers my settings I really\nlike two two soft tabs here but uh there\nshould be something for themes down\nbelow and\nso\num that doesn't seem like that's it used\nto be like a oh here it is if you go\nhere and just choose like whatever you\nwant I'm on jet dark here and so if it's\non classic light or something you don't\nlike you can fix that there um but I'm\njust going to go here and just fiddle\nwith my\nsettings because I really like to use\nVim uh keys I don't recommend this if\nyou are uh to change this if you are not\na programmer but I'm just going to\nchange it so that I can type here\nefficiently so I'm just looking for the\noption\nhere and they moved it on me where did\nthey move\nit it probably be like key\nbindings ah Bim mode there we go again\ndon't do that this is just for me so I\ncan uh move around in a different way so\nwhat I want to do and by the way looks\nlike this default screen we could have\njust changed it here I just clicked\nthrough all that for nothing it was here\nthe entire time but um what we need is\nwe need to make sure that we have our\ncredentials so if we type in ads um S3\nLS that's like my sanity check that I\nalways like to do to make sure I have\ncredentials notice that we didn't have\nto set up any credentials it was already\non this machine which was really nice\nand so I'm going to create a new file\nhere and it's okay if you don't know\nanything about Ruby we're just going to\nhave fun here and just follow along so\nI'm going to do example RB I'm going to\nmake sure Ruby's installed by doing Ruby\nhyphen V so it is installed which is\ngreat uh you need a gem file so say new\ngem file\nhere and if we go back to the\ninstallation guide uh we need the gem\nSTK\nhere actually I'm going to look at how\nto generate a gem file gem file because\nthere's some stuff that goes to the top\nof those\nfiles like this\nhere I think we just need this line here\nso I'm just going to grab that whoops\npaste that in allow\ngood and uh I you can do gem ads SDK\nthat will install everything but uh we\nonly want to work\nwith S3 and so this is going to vary\nbased on each language but I know that\nif we type in S3 we'll just get S3 and\nthat's all we really need and so once we\nhave that what we'll need to do is use a\nbundle install so we're going to make\nsure we're in the correct directory I'm\ngoing to type in LS down below notice\nthe gem file is there uh and by the way\nthe fonts are too small I should\nprobably bump those up let's see how we\ncan do\nthat uh editor size font user\nsettings good luck trying to find\ntoday um project\nno you think it'd have to be under user\nsettings\nright ah here it is okay so um this is\nfor\nprobably the editor so we'll go to 18\nhere Co code editor\nhere I'm I'm trying to find the one for\nthe terminal probably over\nhere there we\ngo much easier okay so notice we have\nexample. RB and Gem file so we're in the\ncorrect directory make sure I save that\nI'm going to type in bundle\ninstall that's going to install the gems\ngive it a moment there it's going to\nfetch notice that installed um the adabs\nsdks S3 and everything that it was\ndependent on and so now if we go over to\nour example. RB file really when you're\ncoding for the cloud you can pretty much\ncopy paste everything so over here we\nfound this code here for S3 list buckets\num and so I'm going to go ahead and\npaste that on in okay and I know it\nlooks really complicated but we can\nquickly simplify this so I know that\nthis is just the output so I don't need\nthat okay and in Ruby you don't need\nparentheses or curries if uh if you\ndon't have anything things there and so\nall I need to do is Define a client so\nif I click uh I go to the top here of\nthis file I think we're in the client\nright\nnow all the way to the top all the way\nto the top\nhere that's what we need\nokay and so I'm going to paste that in\nnow uh we can set the region here so I'm\ngoing to say Us East\none right and then you'd have your\ncredentials um because the credentials\nare on the machine in the um credentials\nfile they're going to autoload here I\nbelieve so I don't think I need to set\nthem so I'm just going to take that out\nhere for a\nsecond okay and I can do this if I want\nthis is just slightly different syntax\nit might be easier to read if I do it\nthis way for\nyou okay and I don't need double client\nthere so we have the client I like to\nname this like S3 so I know what it is\nand I put puts for the response I'm\ngoing to do\ninspect and so puts is like print okay\nand so now if I type in bundle exact\nlet's just make sure that it's in the\ncontext of our bundler file Ruby\nexample. RB um we have a syntax error on\nthis line here unexpected thing\nhere oh it's because of this it's\nbecause I commented it out so I'm just\ngoing to do curly parenthesis comment\nout\nhere\nokay actually to make it a bit easier\nI'm just going to bring this down like\nthis okay and we'll paste that there\nokay and we'll try this\nagain un initialized constants ad to us\noh yeah we have to require it so we have\nto require Abus SDK S3 I think we'll hit\nup and uh we got a struck back so it is\nworking we are getting an object back if\nwe want to play around with this a bit\nmore I'm just going to install another\ngem called pry pry allows us to um\ninspect code so we're going to do bundle\ninstall and I'm going to go back to Ruby\nhere I'm going to put a binding pry in\nhere and then if I hit up and I do\nbundle exact Ruby example.\nRB um I installed it right install\nyes undefine method\npry oh because I have to require it\nagain bad habit\nhere okay we'll hit up and so now I have\nan Interactive shall and I can kind of\nanalyze that object so we have a\nresponse so if I type in RSP here I have\nthe structure object I can type in\nbuckets here okay and it's showing me a\nbucket I can give it get its\nname\num oh I think it's an array so I think\nI'd say like I'd say like zero here or I\ncould say first this is just the how the\nRuby language works we say name I get\nthe name creation date okay so you get\nthe idea whatever you want to do you\nknow you search for it you just say I\nwant to delete a bucket I want to create\na bucket right and you look for it so I\nsay create bucket here I click on this\nand I can see the options and they are\nalways really good about giving me an\nexample and then down below they always\ntell you all the parameters that you\nhave there so that's how the SDK Works\nuh but yeah the credentials were uh soft\nloaded here but you could easily provide\nthem yourself I should just show you\nthat before anything else just because\nthere's some variations there\num and I'm just trying to look for it\nbecause it is separate\ncode so you could do this this is one\nway of doing it so you could do it\nseparate from the code so if you only\nwanted to configure it\nonce right because you could you could\nhave a lot of clients you wouldn't want\nto keep on like for each client you\nwouldn't want to put region in every\ntime so I could take this and put this\nright here\nokay and this is the file here where we\nhave the credentials so this would be\nour um our access key and our ID and so\nyou never want to put your code directly\njust in here so if I open up if we go\ncat you would never want to do this but\nI'm just going to show as an example\nhere uh\ncredentials oops I got to get out of\nthis\nexit ads\ncredentials oh do they not even show it\non this machine which would be smart we\nwouldn't really want to see our\ncredentials here uh hit up say\nLS oh no it's there okay\ncat\nwhoops\ncredentials there it is okay so you know\nif we look here we can see that there\nare credentials set it's a little bit\ndifferent we have this like session\ntoken I guess it's to make sure that\nthis expires over time but if I was to\ntake these okay and I was just to paste\nthem in\nhere that's one way you would do it um\nyou never ever want to do this ever ever\never ever you never want to do this\nbecause you'll end up committing that to\nyour code um so this is really dirty to\ndo so I don't ever recommend to do it um\nif you wanted to have this apply to\neverything you could put it up here and\nso now when we call the client we don't\nhave to do it um of course if the\nthey're loaded on the machine you don't\nhave to do it the other thing is like if\nyou if you want you could load them in\nVia environment variables that's usually\nwhat you want to do so you say ads uh\naccess\nkey right and then we say environment\ndatabus access\nsecret and so you'd set those by doing I\nthink it's like an\nexport um environment\nvariables set in Linux you think I know\nafter like 15 years of doing this but I\nnever remember so you type in export so\nyou go down into oops here you type in\nexport and you just say something like\nI'm going to just show an example to see\nif it works so I'm going to say hello\nworld okay and if I do uh hello like\nthat Echo see it prints it out so that's\nhow you would set it you'd set those\nthere but there's actually very specific\nones that adabs uses for um the API and\nit's these ones here so you always want\nto use\nthose okay so you put that in\nthere and that in there but of course\nyou know like if they're already said in\nyour machine you don't have to even\nspecify those cuz it would Auto load\nthose environment variables I don't\nthink they're set right now if we type\nin Echo just take a look here are they\ngoing to get autoloaded\nhere no so but anyway so we could go\nhere just as an\nexample and well actually they just show\nthem right here so you see your access\nkey but we go and we type in um\nexport and I going paste the key in\nthere and I'm going to go to the front\nof it we're type adab us access key ID\nequals enter and so now if I did echo on\nthis ads access key ID okay it shows up\nbut I just want to show you how it can\nkind of vary and those conditions around\nit so yeah that is the adus SDK um and\nyeah a lot of times you're just copying\npasting code and just kind of tweaking\nit you're not really writing uh real\nprogramming okay so hopefully that is\nless intimidating so I'm just going to\nclose these off and I want to close down\nthis Cloud9\nenvironment\num I might have to reopen this up in\nanother tab\nand go to the Management console here\nand then go over to Cloud9 and just\nclose this tab and then while go ahead\nas and delete this environment oops I'll\njust type delete here even if you didn't\nit would turn off after 30 minutes and\nyou have that free tier so it's not that\nbig of a deal it's up to you whether you\nwant to use Cloud9 or G pods Cloud9 is\nreally good because it allows you to um\nuh it allows you to uh use it runs on a\nvirtual machine right so you have a a\ncontainer run time there and so it's\nvery easy to run containers on it um\nwhereas in like I've had some issues\nwith G pods but um yeah those are the\ntwo\n[Music]\nokay let's take a look at itus Cloud\nshell which is a browser based Shell\nbuilt into the adus Management console\nand so Cloud shell is scoped per region\nit has the same credentials as the loged\nin user and it's a free service so this\nis what it looks like and the great\nthing about this is that you know if you\nhave a hard time setting up uh your own\nshell or terminal on your computer um or\nmaybe you just don't have access or\nprivilege to do so it's just great that\ndatabus makes this uh available to you\nand so what you can do is click the\nshell icon up at the top and that will\nexpand this here some things to note\nabout Cloud shell is that it has some\npre-installed tools so it has the CLI\npython nodejs git make pip pseudo tar\nt-mo Vim WG vim and more it includes 1\ngab of storage free per adus region it\nwill save your files in a home directory\navailable for future sessions for the\nsame adus region uh and it can support\nmore than a single shell environment so\nit has bash Powershell and\nzsh um and so Adis Cloud shell is\navailable in select regions so when I\nwas in my Canada region I was like\nwhere's the little shell icon but I\nrealized it's limited for some areas\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at\ninfrastructure as code also known as IAC\nand this allows you to write a\nconfiguration script to automate\ncreating updating or destroying your\nCloud infrastructure the way you can\nthink of IC it's a blueprint of your\ninfrastructure and it allows you to\neasily share version or inventory your\nCloud\ninfrastructure so adus has two different\nofferings for IAC the first is cloud\nformation uh a a commonly abbreviated to\nCFN and this is a declarative I tool and\nthen you have Aus cloud development kit\ncommonly known as cdk which is an\nimperative IAC tool so let's just talk\nabout the difference between declarative\nand imperative and then we'll look at\nthese tools a little bit closer uh each\nokay so declarative means what you see\nis what you get it's explicit it's more\nof aose but uh there is zero chance of\nmisconfiguration unless the file is so\nbig that you're missing something uh\ncommonly declarative files are written\nin things like Json yaml XML so for\ncloud formation it's just Json and yaml\nuh and so that's that side there so for\nimperative you say what you want and the\nrest is filled in so it's implicit uh\nit's less for both you could end up with\nsome misconfiguration that's totally\npossible uh but it does more than\ndeclarative and you get to use your\nfavorite programming language maybe\npython JavaScript actually cdk does not\nsupport Ruby right now but I just have\nthat in there just as a general\ndescription of what imperative is\n[Music]\nokay all right so just a quick look at\ncloud formation so cloud formation\nallows you to write infrastructures code\nas either Json or yaml the reason why it\nwas adus started with Json and then\neverybody got sick of writing Json and\nso they introduced jaml which is a lot\nmore concise which you see on the right\nhand side so cloud formation is simple\nbut it can lead to large files or is\nlimited in some regards to creating\nDynamic repeal infrastructure compared\nto cdk Cloud information can be easier\nfor devops engineers who do not have a\nbackground in web programming languages\na lot of times they just know scripting\nand this basically is scripting since\ncdk generates outloud information it's\nstill important to be able to read and\nunderstand Cloud information in order to\ndebug IAC Stacks knowing cloud formation\nis kind of a cloud essential when you go\ninto the other tiers of AWS um like\nSolutions architect associate\nprofessional or any of the associates\nyou need to know Cloud information\ninside and out\n[Music]\nokay okay so what I want to do now is\nintroduce you to infrastructure as code\nand so we're going to take a look at\ncloud formation and so we were just\nusing Cloud d for the STK so we're going\nto go back and create ourselves a new\nCloud9 environment because we do have to\nwrite uh some code so I'll go ahead and\nhit create here and I'm going to just\nsay uh CFN that's sort for cloud\nformation example and we'll hit next\nstep and we'll create ourselves a new\nenvironment T2 micro uh Amazon x 2 is\ntotally fine we'll hit next it'll delete\nafter 30 minutes we'll be fine we're\nwithin the free tier we're going to give\nthis a moment to load up um and remember\nyou can set your theme your your\nkeyboard mode whatever you want as that\nloads and as that's going we're going to\nlook up cloud formation and so cloud\nformation is very intimidating at first\nbut once you get through the motions of\nit it's not too bad um so we'll go to\nthe user guide here as we always do if\nyou go to the getting\nstarted it's going to just tell us some\nthings it's going to read about yaml\nfiles um I don't think I really need to\nread much about this here so I think\nwe'll just go start looking up some\ncodes so something that might be\ninteresting to launch is an ec2 instance\ncloudformation so that's what I'll do is\nI'll type in what I want so in E2\ninstance and I'll just start pasting in\ncode so we scroll on down below\nhere going to go to examples because I\nwant a small example here this is\nsomething that I might want to do and\nwe're going to give that a moment here\nit's almost\ndone you can do it ad bu come on as that\nis going I'm going to open a new tab I'm\ngoing to make my way over to cloud\nformation okay\nand um you can see I have some older\nStacks here notice Cloud9 when we create\nan environment actually creates a cloud\nformation stack which is kind of\ninteresting um but if we go here we can\ncreate a stack and we can create a file\nand upload it here\nso okay this is good I'm going to go\nahead and make a new\nfile we're going to call it\ntemplate. yaml um just so you know yaml\ncan be y ml or Y ml there's a big debate\nas to which one you use um I think that\nadabs likes it when you use the full\nversion so I just stick with\nyaml I'm going to double click into that\nand so in the cc2 example I'm just going\nto copy this okay and I'm going to paste\nthis in\nhere and I'm going to type in\nresources oops\ncapital okay so that's a resource I want\nto create\num when you create Cloud information you\nalways have a template version so I just\nneed a basic example here at the\ntop I guess that's a simple one is like\na Hello World\nBucket maybe we should do a bucket\nbecause it'll be a lot\neasier we don't have to make our Liv\nsuper hard here okay um but what I'm\nlooking for is the version because\nthat's the first thing that you\nspecify I'm just trying to find it\nwithin an example\nhere oh for freak's sakes cloud\nformation\nversion if I don't have the format\nversion it's going to complain there it\nis okay so we'll copy that we'll go back\nover\nhere we'll paste that in there it might\nbe fun to do like an output here so I'm\ngoing to do like an output\noutputs and uh maybe instead of doing\nthis we'll type in ads S3\nC\nformation because what I'm looking for\nis what we can set as output so we'll\nsay return values\nhere\num maybe we just\nwant Returns the domain\nname so we'll just say\num\nvalue ref that that's going to get the\nreference for it and we have to say\nhello\nbucket uh type\nstring say outputs cloud formation\nexample and even though I've written\ntons of cloud information it's just like\nif you're not doing it on day in day out\nyou start to forget what it is so here\nfor outputs we need a logical ID\ndescription value and Export\nso um that is what I want so I'm going\nto go ahead and copy that back here\nthis is just so that when we run it\nwe're going to be able to observe an\noutput from the cloud information file\nokay so the logical ID is whatever we\nwant so hello bucket\ndomain it's funny because this is how\nyou do do um kind of that would be the\nformat for terraform I was getting them\nmixed up so the\ndomain of the bucket the value here is\ngoing to be\nref\nhello bucket\ndomain\nname that's the\noutput export value to\nexport uh can I get an example\nhere B\nname oh you know what export is for uh\ncross Stacks we don't need to do that\nokay so that's fine so what we'll do is\nset that and we'll take out our old one\nand so this should create us an S3\nbucket so with Cloud information you can\nuh provide a template here by providing\na URL or you can upload a file directly\nso um I'm just trying to decide here how\nI want to do this you can also use a\nsample file or create a template in the\ndesigner I'm going to go over to the\ndesigner because then we can just like\npaste in what we want so if I go over to\nyamel here and we go back over here I\ncopy\nthis I'm just going to paste this in\nhere\nand we're going to hit the refresh\nbutton nobody ever uses the designer but\nthis is just kind of a easy example for\nme to uh place this in\nhere it's not really working maybe I got\nto go to template dude here\nrefresh there we go so there's our\nbucket it's nice to have a little\nvisualization and I believe this is\ngoing to work as expected so now that we\nhave have our designer template I think\nif we hit close what's this button say\nvalidate template probably a good idea\nvalidating the template template\ncontains errors unresolved resource\ndependency in the output block of the\ntemplate\nhello domain\nit seems like it should be\nfine let's go\nwhoops let's go back over\nhere that's what I did said reference\nthat\nvalue oh uh maybe it's get a trib\nokay it's get ATT\nsorry get a trib Cloud information can't\nremember if there's an r on the end of\nit oh it's just at this is if you're\ntrying to get a return intrinsic value\nso a reference is like what the default\none is but when every time we do like a\nlogical name and attribute that's how we\nget that there so uh what I'm going to\ndo here is just hit refresh and I'm\ngoing to validate that one more time now\nit's valid if I hover over this is going\nto upload it create the\nstack we could save this save\nit oh we can save it in an S3 bucket so\nwe'll say\nhello bucket and so now we have this URL\nso I'm going to copy it honestly I never\nuse this editor so it's kind of\ninteresting I'm going to\nleave and we probably could hit create\nstack but I just find it a bit easier if\nwe just kind of do it through uh this\nhere so go back create the stack we're\ngoing to paste in the URL we're going to\nsay\nnext and we're going to say uh my new\nstack and I didn't see what the name of\nthe bucket was oh there's no name so\nit's going to randomize that's perfect\nso we'll go next we have a bunch of\noptions here we'll hit hit\nnext we'll give it a moment here I guess\nwe have to review it create the stack\nand this is the part where we watch so\nit says create in progress and we wait\nand we hit refresh\nand we can see what's happening trying\nto create a\nbucket and if we go to resources this is\nthis is a lot easier to track because\nyou can see all the resources that are\nbeing\ncreated if you notice that when you use\nthe C uh when you're using databas\nmanagement call create s bucket it's\ninstantaneous but like with Cloud\ninformation there's a bit of delay\nbecause there's some communication going\non board but here it is and notice if we\ngo to our outputs this is the the value\nof the bucket domain name if we were to\nmake it with self-hosting which is not\nwhat we're doing with it we could also\nhave an export name which would be used\nfor cross referencing Stacks which is\nnot something we uh care to do um but\nyeah that's how you create a stack that\nway um but you know we can also do it\nvia the SDK here so what I can do um is\nlook up what is the Adis uh CLI cloud\nformation because they have their own\ncommands here if I go here\nthere's a new one and there's an old one\nso if we go create\nstack yeah there's things like this like\ncreate stack\nupdate um so if we wanted to do it this\nway okay and I copied this here I'm just\ngoing to put this in my read me here for\na\nsecond uh so here what you do is you say\nmy new stack\nand you could provide the template URL\nor you could specify the local path here\nso we have like a template body so I'm\ngoing to go ahead and grab\nthat okay this would be like\nyaml and um I need to specify this file\nhere so template.\nyaml and I'm just going to go PWD here\nto get the full\npath\nokay and I'm going just paste that in\nthere whoops\nokay I'm going to do LS okay so that\ngives us the full path to the file you\ncan also specify the template URL um and\nso this should work as well if I take\nthis and paste that on as a\ncommand unable to locate parameter file\noh there's three three triple slashes\nthere we'll just fix that\nthere\npaste unable to load param file no such\nfile directory and there's a t\nmissing okay be like don't be like me\nand make sure you don't have spelly\nmistakes okay I can type clear down here\nso I can see what I'm doing we'll hit\nenter\nwhoops unable to load the parameter file\nno such file or\ndirectory home well I you didn't want\nthe for slash so another thing we can\ntry to do I think it will take it\nrelative so if I do this it should work\nI don't ever remember having to specify\nthe entire path and err occurred while\ncalling the crate stack my stack name\nalready exists if I go back over here\ngive this a refresh oh that's what we\nnamed our stack the the one that we did\nso I'm going to say stack two\nokay template format unsupported\nstructure when calling the create stack\noperation are you kidding me I do this\nall the\ntime template body y file cloud\nformation unsupported structure take a\nlook\nhere oh you know what I think uh this\none's out of date that's why so what we\ncan do is go to our old stack here and\nwe can actually see the template I can\ngo ahead and copy this whoops and we can\ngo ahead and paste that in there and\nthen now what I can do\nso you know that's that's the reason why\nit wasn't working okay so we'll hit\nenter um unsupported\nstructure it should be\nsupported let's see if Cloud information\ncan help us\nout um apparently there was very\nunhelpful error message for batting so\ntry the validate template option I\nwonder if we could just do\nthis maybe if that would help\nhere I'm just hitting up to try to run\nit\nagain nope I guess we can try to\nvalidate it here it's like I'm not\nhaving much luck here\ntoday so we'll just say this here maybe\nit's not even loading that file where it\nis so there's no\nerrors just going to make this one line\nokay created so for whatever reason I\nmust have had a a bug there and so\nputting sometimes putting on one line\nhelps that out because I must have had\nan obvious mistake there and now we can\nsee the stack is cating it's doing the\nexact same thing it's creating uh a\ndifferent bucket though if we go over to\nour S3\nhere again you know you don't need to be\nable to do this yourself to pass the\nexam it's just so I'm just trying to\nshow you like what it is so you kind of\nabsorb any kind of knowledge about\nwhat's going on here notes down below it\nuses the stack name followed by uh the\nre The Logical name of the resource\nthere okay um and what we'll do is wait\nfor that to create once that's created\nwe can go ahead and delete these Stacks\nwe could also use the ad us Cloud\ninformation to say like delete stack but\nI don't want to uh bore you with that\ntoday and so we'll hit refresh here wait\nfor those Stacks to\nvanish okay those are gone uh what I'm\ngoing to do is kill this Cloud9\nenvironment\nuh if there's a way to do it from here I\nhave never known how to do it go back to\nyour dashboard well that's nice to know\nwe'll go ahead and just delete\nthis okay we'll close that Tab and so\nnow we are all in good shape and so that\nwas our introduction to Cloud\ninformation\n[Music]\nokay let's take a look here at cdk so\ncdk allows you to use your favorite\nprogramming language to write\ninfrastructure as code and technically\nthat's not true because they don't have\nRuby and that's my favorite but anyway\nuh some of the languages include nodejs\ntypescript Python\njava.net and so here's an example of\ntypescript typescript was the first\nlanguage that was um introduced for cdk\nIt's usually the most upto date so not\nalways does cdk reflect exactly what's\nin cloud formation but I think they're\ngetting better at that okay so cdk is\npowered by cloud formation it generates\nout cloud formation templates so there\nis an intermediate step uh it does\nsometimes feel a bit slow so I don't\nreally like that but you know it's up to\nyou uh cdk has a large library of\nreusable Cloud components called cdk\nconstructs at constructs dodev this is\nkind of the concept of terraform modules\nand is really really useful uh and\nthey're really well ridden um and they\ncan just reduce a lot of your effort\nthere CD cdk comes with its own CLI um\nand I didn't mention this before but\ncloud formation also has its own uh CLI\nokay cdk pipelines uh are are allow you\nto quickly set up cicd pipelines for CD\nK projects that is a big pain point for\ncloud formation where you have to write\na lot of code to do this whereas um this\ncdk has that off the bat makes it really\neasy for you cdk also has a testing\nframework for unit and integration\ntesting I think this might be only\nlimited to typescript because I didn't\nsee any for the rest of the languages\nbut um you know I wasn't 100% sure there\nuh this one thing about cdk is that it\ncan be easily uh confused with SDK\nbecause they both allow you to\npragmatically work with AWS uh using\nyour favorite language but the key\ndifference is that cdk ensures uh itap\npoent uh of your infrastructure so what\nthat means that's such a hard word to\nsay but what that means is that um you\nknow if you use this cdk to say give me\nan a virtual machine you'll always have\na single virtual machine uh because it's\ntrying to manage the state of the file\nwhereas uh when you use SDK if you run\nit every time you'll end up with more\nand more servers uh and it's not really\nmanaging States so hope hopefully that\nis clear between the difference\n[Music]\nthere okay so we looked at cloud\nformation but now let's take a look at\ncdk cloud formation or cloud formation\nCloud development kit it's just like\ncloud formation but you use a a\nprogramming language in order to uh\nImplement your infrastructure as a code\nI don't use it very often I don't\nparticularly like it but um you know if\nyou are a developer and you don't like\nwriting Cloud information files and you\nwant to have something that's more\nprogrammatic you might be used to that\num this I think should be deleting cuz\nwe were deleting the last one here and\nnotice how it's grayed out I can't\nselect it so don't worry about that\ncreate a new one we'll say cdk example\nwe'll hit next T2 micro ec2 instance\nAmazon X2 you know the drill it's all\nfine here we're go ahead and create\nourselves a new environment we're going\nto let that spin up there and as that's\ngoing we're going to look up uh adus\ncdk so Adis cdk um and we probably want\nto go to GitHub for this\nokay because it is open source and so I\nwant to go to getting\nstarted and I have used this before but\nI never can remember how to use it\nprobably the easiest way to uh use this\nis by using\ntypescript\nso here's an example initialize the\nproject make directory cdk oh first we\ngot to install it right so give that a\nmoment so this is node you know how we\ndid like bundle install this is like the\nsame thing but for uh typescript install\nor update the it was cdk CLI from npm we\nrecommend using this version etc etc so\nagain we're just waiting for that to\nlaunch but uh as we wait for that it's\nvery simple we're just going to install\nit create a directory um go into that\ndirectory initialize the example here\nit's setting up an\nsqsq which is um it's quite a complex\nexample um but you can see it's code\nright and then we run cdk deploy and\nwe'll deploy it and then hopefully we'll\nhave that\nresource so again we're just waiting for\ncloud\nn there we go so Cloud9 is more or less\nready a terminal seems like it's still\nthinking and we have a JavaScript one\nwhich I do not care about there we go\nthere's our environment we're going to\nmake sure we have mpm so we can type in\nmpm great it says version\n8.1.0 and so this is asking for 10\nokay I don't know if this gives us like\nMVM installed MVM it does so what we can\ndo is do MVM list that stands for node\nversion manager Ruby has one as well and\nso it's telling us what version we're on\nI want to update um looks like we have a\npretty uh pretty new version but what I\nwant is the latest version of oh but\nthat's node version that's not\nnecessarily mpm so we'll do node version\nOh 17 okay we're well well in the uh\nrange of the new stuff so what I'm going\nto do is scroll down we're going to grab\nthis link here or this code here hit\nenter and that's going to install the\nadus cdk so it\nsays uh file already exists oh so maybe\nit's already installed on the\nmachine um cdk we'll type in\ncdk because of course adus wants to make\nit very easy for us this software has\nnot been tested with what was that\nwarning uh with node 1701 you may\nencounter runtime issues great AWS\nyou're like the one that installed this\nstuff here so we get a bunch of the\ncommands which is great and so what\nwe'll do is follow their simple\ninstructions we'll say hello\ncdk we will CD into\nthis and um now what we can do is run\ncdk andit and this language\nhere and so that's going to do a bunch\nof stuff creates tons of files it's\ngoing to vary based on uh what you're\nusing like which language because cdk\ncomes available in a variety of\nlanguages so if we type in ads\ncdk um documentation\nhere notice up here python java.net so I\nthink it has more than just those three\nlanguages but um you know I wish it\nsupported more like yeah see here is C\nJava but I I really wish there was a\nruby so we'll give this a moment here to\nget installed and I will see you back\nhere when it is done\nokay okay uh it turns out I only had to\nwait like a second there but it says\nthere's a newer version of the cdk you\nprobably should install it but I just\nwant to get going here so as long as I\ndon't run into any issues I do not care\num but anyway so looking at this and I\nagain I rarely ever look at this but I'm\na developer so it's not too hard for me\nto figure out but under the lib this is\nour stack that we're creating and here\nis it is loading in sqs it's loading in\nSNS and then the core Library it's\ncreating an sqs q and it's setting the\nvisibility of that timeout it's also\ncreating an SNS topic so those are two\nresources that we expect to be created\nif we scroll on down to the getting\nstarted it just says cdk deploy so what\nwe'll do is go ahead and hit enter and\nlet that do whatever it wants to do\nand it is thinking there we go so here\nwe have IM statement changes so it's\nsaying this deployment will potentially\nmake potential sensitive changes\naccording to your current security\napproval options there is there may be\nsecurity related changes not in this\nlist do you want to deploy sure we'll\nhit\nwhy deploying creating cloud formation\nchange set so cdk is using cloud\nformation underneath it's not\ncomplicated um and as that is going\ngoing what we'll do is we'll make our\nway over to our IUS amazon.com\nconsole and if we go over to cloud\nformation we'll see if we see anything\nyet so it's creating a stack here we can\nclick into it we can go over to our\nevents see that things are being created\nthis is always a confusing so I always\ngo to resources to see what is\nindividually being created and they're\nall done so we go over here and they\nexist so here it says that we have a Q\ncalled this right sometimes they have\nlinks you can link through it so notice\nhere I can click on the topic and get to\nthat resource in SNS which is nice for\nsqs I'm just going to type in sqs\nenter uh and there it is okay so we\ndon't really understand what those are\nwe could delete the stack this way\nthere's probably a cdk way to delete the\nstack so uh cdk\ndestroy I assume that's what it is\ndestroy okay so we'll type in cdk\nDestroy give it a moment we're going to\nsay\nyes okay it's deleting in progress we\ncan even go back here and double\ncheck still\nthinking and again you know if we\ndeleted these for real it would take\nlike a second but uh you know sometimes\nthey're just\nslow sometimes it's because a resource\ncan get hung as well um but uh I don't\nthink anything is a problem so here we\ncan see what the problem is not not\nnecessarily a problem but it's just the\nsqs is taking a long longer time to\ndelete where the SNS subscriptions a lot\nfaster so I'll just see you back here in\na moment okay okay so after a short\nlittle wait there it finally finished uh\nI just kept oning refresh until I saw it\ndeleted and so it's out of there and so\nwe'll get rid of our Cloud9 environment\nsince we are done with it so type in\nCloud9 up at the\ntop and we'll go ahead and delete and we\nwill go ahead and delete this here thank\nyou and we will go back to our adabs\namazon. console here just so we can get\nour bearing straight here and there we\n[Music]\ngo all right let's take a look here at\nthe adus toolkit for vs code so adus\ntoolkit is an open source plugin for vs\ncode to create debug deploy it was\nresources since vs code is such a\npopular uh editor uh these days I use\nVim but it's very popular um I figured I\nshould make sure you're aware of this um\nplugin so it can do four things you get\nthe Abus Explorer this allows you to\nexplore a wide range of adus resources\nlinked to your adus account uh and\nsometimes you can view them sometimes\nyou can delete them it's going to vary\nper service and what's available there\nthen you have the adabs cdk Explorer\nthis allows you to explore your Stacks\ndefined by cdk uh then you have Amazon\nelastic uh container service ECS this\nprovides intellisense for ECS task\ndefinition files intense means that when\nyou type uh and you uh you'll get like\nAuto completion but you'll also get a\ndescription as to what it is that you're\ntyping out then there is serverless\napplications and this is pretty much the\nmain reason to have Theus toolkit allows\nyou to create a debug deploy service\napplications via Sam and CFN so uh there\nyou can see the command pallet and you\ncan kind of access stuff there\n[Music]\nokay let's take a look here at access\nkeys so an access key is a key and\nsecret required to have programmatic\naccess to adus resources when\ninteracting with the adabs API outside\nof the adus Management console so uh\naccess key is commonly referred to as\nadus credentials so someone says adus\ncredentials so generally you're talking\nabout the access key not necessarily\nyour um username and password to log in\nso a user must be granted access to use\naccess key so when you're creating a\nuser you can just checkbox access key um\nyou can always do the after the fact but\nit's good to do that as you're creating\nthe user and then you can generate an\naccess key and secret so you should\nnever share your access keys with anyone\nthey are yours if you give them to\nsomeone else is like giving them the\nkeys to your house it's dangerous uh\nnever commit access keys to a code base\nuh because that is a good place uh for\nit to get leaked at some point you can\nhave uh two active keys at any given\ntime you can deactivate access Keys\nobviously delete them as well access\nKeys have whatever access a user has to\nadus resources so uh you know if you can\ndo it inabus Management console so can\nthe key so access keys are to be stored\nin the ads. adabs credentials uh file so\num and if you're not familiar with Linux\nthis Tilda here this actually represents\nyour home folder so whether you're on\nWindows or Linux that's going to be your\nhome folder and then you have this\nperiod AWS that means that it's a hidden\nfolder but you can obviously access it\nand so in the it's just a toml like file\nI think it's toml um but I never uh 100%\nverified that it's toml it looks just\nlike toml uh and so what you'll have\nhere is your uh default profile and so\nthis is what you would use um or this is\nwhat uh any of your tools you use like\nthe CLI or anything else would\nautomatically use if um if you did not\nspecify a profile you can of course\nstore multiple access keys and then give\nit a profile name um so if you are doing\nthis for the first time you might just\nwant to type in ads config and it'll\nprompt and you'll just enter them in\nthere as well I think that's that's the\ndefault one when you're using the\nSDK uh you would rather probably use\nenvironment variables because this is\nthe safest way to access them when you\nare writing code all right um so there\nyou\n[Music]\ngo all right let's talk about access\nKeys access keys are are very important\nto your account um and so what we'll do\nis go to IM if you are the root user you\ncan go in and you can uh generate access\nkeys for people um but generally you're\ndoing it yourself for your own account\nso I go to users I'm going to click into\nmine here and we'll go over to Security\ncredentials and here you're going to\nnotice access keys and one thing that is\ninteresting is that you can only ever\nhave two access keys at a time so if I\nhit create I'm just going to close that\nnotice that the button is grayed out I\ncan uh uh deactivate them if I feel that\nI haven't used them in a while and I can\nmake them active again so I can bring\nthem back into access or what I can do\nis um make them in active right and then\nI can delete them and so what I\nrecommend right even if you do not want\nto programmatically be using your\naccount for anything you always want to\nfill up both these and the reason why\nand this is for security reasons is that\nif somebody wanted to come in and uh uh\nget into your account what they would do\nis they would try to find a user um\nwhere they have access to them and then\nthey would try to generate out a key so\nif both these keys are Tak up so if you\ngenerate up both these\nKeys okay and this is the one you want\nto use you deactivate the other one okay\nwe're not going to use that one and so\nnow there's no way for them to fill up\nthat other slot okay and so that is my\nstrong recommendation to you but there's\nagain only ever two here I'm just going\nto uh Delete both of these so that when\nwe want to uh do whatever next in a\ntutorial we'll go generate that out okay\ngo ahead and clear that\nout so hopefully that is enough for you\nto understand what to do with these\naccess Keys okay so I'm going to go back\nhere there you\n[Music]\ngo let's take a look here adus\ndocumentation which is a large\ncollection of technical documentation on\nhow to use adus Services which we can\nfind at doc. adab. amazon.com uh and so\nthis is kind of like the landing page\nwhere you can see all the guides and API\nreferences if you expand them in there\nuh into ec2 and you click on the user\nguide you can see HTML in PDF format\nKindle and you'll notice there's a link\nto GitHub and that's because all of\nthese docs are open source and you can\ncontribute to them if you choose to do\nso I've done so multiple times in the\npast it's quite fun so adus is very good\nabout providing detailed information\nabout every adus service and the basis\nof this course and any adus\ncertification will derive mostly from uh\nthe adus documentation so I like to say\nthat I'm not really coming up with new\ninformation I'm just uh taking what's in\nthe docs and trying to make it more\ndigestible and I think that's the thing\nis like the docs are really good you can\nread them end to end but they are very\ndense um and so it can be a bit hard to\nfigure out what you should read and what\nyou should not um but uh they are a\nreally great resource and you should\nspend some time in there\n[Music]\nokay so I just want to quickly show you\nthe adabs documentation like give you a\nbit of a tour of it so if we go to ad.\namazon.com and type in docs and I'm sure\nyou might have seen this through other\ntutorials but the idea is that you have\nbasically documentation for basically\nany possible service that you want and a\nlot of times you'll click into it and\nwhat you'll get are these little boxes\nand they'll show you different guides\nand it's going to vary based on service\nbut a lot of times there's a user guide\nthere's an API reference those are the\ntwo that you'll see there if we go to\nsomething simpler like\nS3 that might be a simpler example yeah\nuser guide API API reference and so all\nof these are on GitHub right if you open\nthese up the documentation is here if\nyou find something you don't like you\ncan submit issues and uh and correct\nthings you can even submit your own\nexamples I have um I have uh committed\nuh example code to the uh docs\nspecifically for AI services so you\nmight be looking at examples that I\nimplemented or even Ruby examples since\nI really like to promote Ruby on AWS you\ncan download as a PDF or you can take it\nas HTML a lot of times you're going to\nthe user guide and the way I build the\ncourses here is actually go through and\nI read these end to end so you know if\nyou wanted to do that and you wanted to\nbe like me uh you can do that or you can\njust watch my courses and save yourself\nthe trouble and not worry about\neverything that is here but generally\nthe documentation is extremely extremely\ngood there are some exceptions like\nAmazon Cognito where the content is good\nbut it's just not well organized so I\nwould say it best out of every other\nprovider they they have the most\ncomplete documentation uh they generally\ndon't keep their examples or like\ntutorials within here it's usually\npretty light they'll have some examples\num but like they like they have adus\nLabs separately so you type AB Labs\nGitHub right you go here and a lot of\nstuff is in here instead so you have a\nlot of great tutorials and examples over\nthere okay um but yeah pretty much\nthat's all there is to it is there\nconsistency between documentations no\nthey kind of vary um you know but uh\nit's all there is my point and they're\nalways keeping up to date so yeah that's\nall you need to know about the inabus\ndocumentation\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are taking a look at the Shared\nresponsibility model which is a cloud\nsecurity framework that defines the\nsecurity obligations of the customer\nversus the cloud service provider in\nthis case we're talking about AWS and\nthey have their own shared\nresponsibility model it's this big ugly\nblob here um and the thing is is that\nevery single CSP has their own variant\non the model uh so they're generally all\nthe same but some visualizations make it\na little bit uh easier to understand or\nthey kind of uh include a little bit\nmore information at different parts of\nit and so just to get make sure that you\nhave well-rounded knowledge I'm going to\ngo beyond the aws's shared\nresponsibility model and just show you\nsome variants uh there's also variants\nnot just per uh CSP but also the type of\ncloud deployment model and sometimes\nthese are also scoped uh based on a\ncloud service category like compute or\nmachine learning uh and these can uh\nresult in specialized share\nresponsibility models so that's what\nwe'll look at in this section\n[Music]\nokay all right so let's take a look at\nthe ad Shar responsibility model and so\nI've reworked the graphic because it is\na bit hard to uh digest and so I'm\nhoping that this way will be a little\nbit easier for you I cannot include the\nin and of here just because we're\nlimited for space but don't worry we'll\nfollow that up with the next slide here\nso there are two people that are\nresponsible or two um organizations that\nare responsible the customer and AWS and\non aws's side they're going to be\nresponsible for or anything that is\nphysical so we're talking about Hardware\nGlobal infrastructure so the regions the\navailability zones The Edge locations\nthe physical security so think of all\nthat Hardware that's there those data\ncenters um everything like that then\nthere's also software the services that\nthey're offering and so um you know this\nextends to all their services but\ngenerally it breaks down to the four\ncore and so we're talking about compute\nstorage database and networking okay and\nwhen we say networking we're talking\nabout like physically setting up the wi\nand also you know the software to set up\nthe routing and all that kind of stuff\nthere uh now looking at the customer\nside of it they're responsible for\nconfiguration of managed services or\nthirdparty software so the platforms\nthey use so whether they choose to use a\nparticular type of os uh the\napplications so if they want to use like\nRuby on Rails uh am so identity and\naccess management so if you uh create a\nuser and you grant them permissions if\nyou give them things they're not\nsupposed to have access to that's on you\nright then there's configur of virtual\ninfrastructure and systems so that would\nbe choosing your OS that would be uh the\nnetworking so there could be networking\non the um the virtual machines\nthemselves or we could be talking about\nCloud networking in this case then there\nare firewalls so we're talking about\nvirtual fire walls again they could be\non the virtual machine or it could be\nconfiguring like knackles or security\ngroups on AWS then there's security\nconfiguration of data uh and so there is\nclient side data encryption so if you're\nmoving something from S3 from your local\nmachine to S3 you might need to encrypt\nthat first before you send it over then\nthere's server side encryption so that\nmight be turning on server side\nencryption within S3 or turning it\nencryption on your EBS volume then\nthere's networking traffic protection so\nyou know that's turning on VPC flow log\nso you can monitor them turning on AIS\nguard Duty so that it can detect\nanomalies with your traffic or or\nactivities within your um adus account\nand then there's customer data so that's\nthe data that you upload on the behalf\nof your customer customers or yourself\nand what you decide to um you know like\nwhat levels of sensitivity that you want\nto lock it down do you want to use\nAmazon Macy to see if there's any public\nfacing uh personally identifi\ninformation that's up to you so there's\na lot here and honestly it's a lot\neasier than you think um instead of\nthinking about this big diagram what I\ndo is I break it down into this and so\nwe have the in and the of and that's\nwhat I said I could not fit on the um\nprevious slide there the idea is\ncustomers are responsible for the\nsecurity in the cloud so that's your\ndata and configuration so if it's data\nthat's resigning on there or there\nsomething you can configure you are\nresponsible for it on the adus side they\nare responsible for the security of the\ncloud so if it's anything physical or\nHardware the operation of managed\nservices or Global infrastructure that's\ngoing to be on them and this in and of\nthing is very important for the exam so\nyou should absolutely know the\ndifference between the two this is kind\nof an adist concept I don't see any\nother cloud service provider talking\nabout in and of uh so you definitely\nneed to know it\n[Music]\nokay so one variant we might see for the\nuh shared responsibility model would be\non the types of cloud computing this\ncould also be applicable to the types of\nuh deployment models but we're doing\ntypes of cloud computing here and so we\nhave the customers responsibility and\nthen the cloud service providers\nresponsibility so we're seeing on\npremise infrastructure as a service\nplatform as a service and software as as\na service and so when you are on Prem\nyou're basically responsible for\neverything apps data runtime middleware\nOS virtualization servers storage\nnetworking basically everything and just\nby adopting the cloud you're almost\ncutting your responsibilities in half\nhere so now the cloud service provider\nis going to be responsible for the\nphysical networking uh the physical\nstorage those physical servers and\nbecause they're offering virtual\nmachines to you they're setting up a\nhyper visor uh on your behalf so\nvirtualization is taking care of for you\nand so um you know if you launch an ec2\ninstance you know you're going to have\nto choose the OS so that's why you're\nresponsible whatever middleware there\nthe runtime so whatever kind of programs\nyou install on it uh the data that\nresides on it and any kind of like major\napplications okay then we have platform\nas a service uh and so you know the\nclass service provider is going to take\neven more responsibility there so when\nwe're talking about this we're thinking\nlike a elastic beant stock right so you\nknow the you just choose what you want\nand it's all managed so you might say I\nwant a ruby on real server but you're\nnot saying what OS you need um you're\nnot uh saying exact you might say what\nversion of Ruby you want but you don't\nhave to manage it if it breaks uh or it\nmight be managed updates and things like\nthat the last thing here is like\nsoftware as a service and this is\nsomething where the CSP is responsible\nfor everything so if you're thinking of\na of a software's a service think of\nlike Microsoft Word where you're just\nwriting\nuh you know writing stuff in there and\nyou know you you are responsible for\nwhere you might choose to store your\ndata but the data is like still handled\nby the cloud service fighter because you\nknow it's on the cloud so on their\nservers right um so yeah hopefully that\ngives you kind of an idea across types\nof cloud computing\n[Music]\nresponsibilities all right so what I\nwant to do here is just shift the lens a\nbit and look at the share responsibility\nmodel if we were just uh observing a\nsubset of cloud services such as compute\nand so we're going to see\ninfrastructures of service platform as a\nservice software as a service and now we\nhave function as a service and so that's\nwhat I mean when we shift the lens we\nget new information uh and so you can\njust see that you really don't want to\nlook at this uh from one perspective\nokay so starting at the top here we have\nbare metal uh and so iTab Us's offering\nis called the ec2 bare metal instance\nand this is where you basically get the\nwhole machine uh you can configure the\nentire machine with with the exception\nof the physical machine itself so as a\ncustomer you can install the host OS um\nuh the host OS so the operating system\nthat runs on the physical machine and\nthen you can install your own hypervisor\num and then databas is going to be\nresponsible for the rest the physical\nmachine now normally The Next Step Up\nwould be dedicated but dedicated doesn't\nexactly give you more responsibility it\ngives you more Assurance because it's a\nsingle tenant virtual machine and that's\nwhy I kind of left it out here um but\nwe'll see it in the next slide that it\nis kind of on the model and shares the\nsame spot as uh ec2 um but ec2 is a\nvirtual machine and so um here the\ncustomer is responsible for the guest OS\nso that means that you can choose what\nOS you want whether it is Ubuntu or\nDebian or Windows but that's not the\nactual OS that is running on the\nphysical machine and so you're not going\nto have control of that ads is going to\ntake care of that then there's the\ncontainer runtime so you know you you\ncan install Docker on this or any kind\nof container layer that you want um so\nthat's another thing that you can do so\nads is going to be responsible for the\nhypervisor uh the physical machine and\nthe host OS all right then looking at\ncontainers it says more than one\noffering for containers but we'll just\nlook at ECS here and so um this is where\nyou are going to uh have uh you don't\nyou don't install the guest OS right the\nguest OS is already there for you what\nyou are going to do is choose your\nconfiguration of containers you're going\nto uh deploy your containers you're\ngoing to determine where you need to\naccess storage for your containers or\nattach storage to your containers and\nadus is going to be responsible for the\nguest OS it it the and there might not\neven be a guest OS but there the host OS\nthe guest OS the hypervisor the\ncontainer runtime uh and you're just\nresponsible for your containers okay\nthen going to the next level here we\nhave platform as a service and so this\none also is a little bit odd where it\nfits um because the thing is is that\nthis could be using anything underneath\nit could be using containers it could be\nusing virtual machines um and so that's\nwhere it doesn't exactly fit well on a\nlinear graph but let's just take a look\nat some things here so this is where\nyou're just uploading your code uh you\nhave some configuration of the\nenvironment you have options of\ndeployment strategies um the\nconfiguration of the associated services\nand then Abus is going to be responsible\nfor the servers the OS the networking\nthe storage the security so it is taking\non more responsibility than\ninfrastructures of service um whereas\nyou know adus is just going to be\nresponsible that so if it's a virtual\nmachine it's being under uh under the\nuse is going to be responsible for this\ncustomer stuff okay you're not if it's\ncontainers then Abus is going to be\nresponsible for this but it just depends\non how that platform is a service is set\nup actually the way elastic beanock is\nset up is that you actually have access\nto all that infrastructure and you can\nfiddle with it and so in that case um\nwhereas like if you were to use Heroku\nwhich is a a third party provider um you\nknow they would take care of all this\nstuff up here um and so you would not\nhave to worry about it but on AWS you\nactually are responsible for uh the\nunderlying infrastructure because you\ncan you can configure it you can touch\nit so that's where you know again these\ndo not fit perfectly you can't look at\nplatform as a service meaning that um\nyou're not responsible for certain\nthings it really comes down to the\nservice offering okay then we're taking\na look at software of service so on AWS\num this is is going to be something like\num Amazon work docs which is I believe a\ncompetitor uh not a very popular\ncompetitor but a competitor to Microsoft\nSharePoint and this is for Content\ncollaboration so as the customer you're\nresponsible for the contents of the\ndocument management of the files\nconfiguration of sharing access controls\nand the databas is responsible for the\nservers the OS networking the the\nstorage the security and everything else\nso you know if you use a Microsoft Word\nDoc and you type stuff in it you say\nwhere to say it that's what you're\nresponsible for okay the last one here\non the list is our functions here and so\n's offer is it Lambda and so as the\ncustomer all you're doing is you're\nuploading your code and databus is going\nto take care of the rest so deployment\ncontainer runtime networking Storage\nsecurity physical machine basically\neverything um and so you're really just\nleft to uh develop okay so you know\nhopefully that gives you kind of an idea\nand again you know we could have thrown\nin a few other services like what we\ncould not fit on this slide here was um\nuh adus fargate which is a a serverless\ncontainer as a function or sorry\nserverless serverless container as a\nservice or container as a service so uh\nyou know that has its own unique\nproperties in the model as well okay so\nlet's just have kind of a visualization\non a linear graph here so we have the\ncustomers responsibility on the left\nhand side and itus is responsibility on\nthe right and we'll look at our broad\ncategory so we got bare metal dedicated\nvirtual machines containers and\nfunctions and so no matter uh which uh\ntype of compute you're using using\nyou're always responsible for your code\nfor um containers you know if uh you\nknow like uh the functions when you're\nusing functions there are pre-built\ncontainers so you say I want to use Ruby\nand there's a ruby container and you\ndon't have to configure it but obviously\num you know when you are using container\nservice you are configuring that\ncontainer you are responsible for it for\num virtual machines you know you're\nresponsible for the runtime so you can\ninstall a container runtime on there or\ninstall a bunch of different packages\nlike Ruby and stuff like that uh the\noperating system you have control over\nin the virtual machines for the\ndedicated and we saw with bare metal you\nhave both uh controls of the host OS and\nthe guest OS and then only bare metal\nallows you to have control of the\nvirtualization where you can install\nthat hypervisor so hopefully that gives\nyou an idea of compute and it is\noffering there and also kind of how\nthere's a lot of little caveats when\nwe're looking at the Shared\nresponsibility model okay\n[Music]\nall right so I have one more variant of\nthe share responsibility model and this\none is actually what is used by Google\nso um we're going to apply to AWS and uh\nsee how it works so let's just kind of\nredefine share responsibility model or\njust in a slightly different way so we\nfully understand it so the share\nresponsibility model is a simple\nvisualization that helps determine what\nthe customer is responsible for and what\nthe CSP is responsible for related to\nAWS and so across the top we have\ninfrastructure as a service platform as\na service software as a service but\nremember there's other ones out there\nlike functions and service it's just not\ngoing to fit on here um okay so and then\nuh along the side here we have content\naccess policies usage deployment web\napplication security identity operations\naccess and authentication network\nsecurity remember that's Cloud\nnetworking security the guest OS data\nand content audit logging now we have\nthe actual traditional networking or\nphysical networking storage and\nencryption and here we're probably\ntalking about the physical storage\nHarden kernel IPC uh the boot the\nhardware and so then here we have our\nbars so we have the csp's responsibility\nand the customer responsibility so when\nwe're looking at a SAS software as a\nservice uh the customer is going to be\nresponsible for the content remember\nlike think of like a word processor\nyou're writing the content the access\npolicies like say I want to share this\ndocument with someone the usage like how\nyou utilize it can you upgrade your plan\nthings like that then next on our list\nhere is platform as a service so\ngenerally uh you know platform is a\nservices for developers to De develop\nand deploy applications and so they will\ngenerally have more than one deploy\nstrategy and uh you know there might be\nsome cost-saving measures to choose like\nuh you might have to pay additional for\nsecurity uh or you it's up to you to\nconfigure in a particular way or you\nmight have to integrate it with other\nservices uh and you know we saw that\npass is not a perfect uh definition or\nfit because you know when we look at\nelastic bean stock if you have access to\nthose resources and you can change the\nunderneath then you might have more\nresponsibility there than you think that\nyou would okay the next one here is\ninfrastructure the service and so this\nis extending to Identity so who's\nallowed to uh you know log into your\nadabs account operations the things that\nthey're allowed to do in the account\naccess and authentication do they have\nto use MFA uh things like that network\nsecurity obviously you can configure the\nsecurity of your uh Cloud infrastructure\nor Cloud Network um you know so you know\ndo you isolate everything a single VPC\nhow do you set up your security groups\nthings like that uh we know with virtual\nmachines you can set up the guest OS\nthere's data and content but remember\nthat bare metal is part of the uh\ninfrastructure service offering and so\nthat's where we'd see Hardware or not\nHardware but you'd have the host o the\nhost Os or virtualization and so this\nagain is not a perfect representation uh\nbut it generally works okay and then\nlast and list there um or just looking\nat what the ads is responsible for auto\nlogging so of course adus has cloud\ntrail which is for uh uh logging uh API\num events but Auto loging could be\nthings that are uh internally happening\nwith those physical servers then the\nnetworking the physical storage uh\nHarding the kernel OS has I think what's\ncalled the Nitro system where they have\nlike a security chip that's uh installed\non all their servers then it's the the\nboot OS uh and then the hardware itself\nokay so just remember the customer is\nresponsible for the data\nand configuration of access controls\nthat reside in AWS so if you can\nconfigure it or you can put data on it\nyou're responsible forward okay the\ncustomer is responsible for the\nconfiguration of cloud services and\ngranting access to users via permissions\nright so if you give uh one of your\nemployees access to do it um you know\neven if it's their fault it's your fault\nso remember that um and again the CSP is\ngenerally responsible for the underlying\ninfrastructure we say generally because\nyou know there's edge cases like bare\nmetal and coming back to adses in the\ncloud and of the cloud so in the cloud\nso if you configure it or store it then\nyou the customer responsible for it and\nof the cloud if you cannot configure it\nthen the CSP is probably responsible for\nit\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are looking at the share\nresponsibility model from the\nperspective of architecture and if\nyou're getting sick of share\nresponsibility model don't worry I think\nthis will be the last\nslide in this section but let's take a\nlook here so we have uh less\nresponsibility more responsibility at\nthe bottom so what we have down here is\ntraditional or virtual machine\narchitecture so Global Workforce is most\nfamiliar with this kind of architecture\nand there's lots of documentation\nFrameworks and support so maybe this\nwould be using elastic beanock with\nplatform as a service or using ec2\ninstances alongside with autoscaling\ngroups uh code deploy uh load balancers\nthings like that the next level here is\nmicroservices or containers this is\nwhere you mix and match languages better\nutilization of resources so maybe you're\nusing fargate which is seress containers\nor elastic container service or elastic\nkubernetes service for containers and at\nthe top here we have serverless or\ncommonly with functions as a service so\nthere are no more servers you just worry\nabout the data or uh and the code right\nso literally just functions of code and\nso you could be using the amplify\nserverless framework or maybe abess\nLambda for creating serverless\narchitecture so there you go\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are looking at Computing Services\nand before we jump into uh the entire\nSuite of Computing Services they was\nhave let's just talk about ec2 for a\nmoment which allows you to launch\nvirtual machines so what is a virtual\nmachine well a virtual machine or VM is\nan emulation of a physical computer\nusing software server virtualization\nallows you to easily create copy resize\nor migrate your server multiple VMS can\nrun on the same physical servers so you\ncan share the cost with other customers\nso imagine if your server or computer\nwas an executable file on your computer\nokay so that's the kind of way you want\nto think about it when we launch a VM uh\nwe call it an instance and so ec2 is\nhighly configurable server where you can\nchoose the Ami so the Amazon machine\nimage that affects options such as\namount of CPUs or vcpus virtual CPUs\namount of memory so Ram the amount of\nnetwork bandwidth the operating system\nso whether it's Windows Ubuntu Amazon 2\nuh the ability to attach multiple\nvirtual hard drives for storage so\nelastic Block store um and so the Amazon\nmachine image is a predefined\nconfiguration for AVM so just remember\nthat and so ec2 is also considered the\nbackbone of ads because the majority of\na services are using uc2 as the\nunderlying servers whether it's S3 RDS\n10B or lambdas that is what it's using\nso um what I say also it's just because\nwhen we talk about the it Network that\nis the backbone for Global\ninfrastructure and the networking at\nlarge and so ec2 is for the services\n[Music]\nokay hey this is Andrew Brown from exam\nPro so we just looked at what ec2 is\nwell let's look at more of the broader\nservices for computing and these are the\nmore uh common ones that you'll come\nacross there's definitely more than just\nwhat we're going to see on the single\nslide here so we'll break this down with\nvirtual machines containers and then\nserverless for for virtual machines\nremember that's an UL ation of a\nphysical computer using software and ec2\nis the main one but for our VM category\nwe have Amazon light sale this is a\nmanage virtual server service it is the\nfriendly version of ec2 virtual machines\nso when you need to launch a Linux or\nWindows server but you don't have much\nadus knowledge you could launch a\nWordPress here and uh you could hook up\nyour domain and stuff like that um so\nthis is a very good options for\nbeginners we have containers so\nvirtualizing an operating system or Os\nto run multiple workloads on a single OS\ninstance so containers are generally\nused in microservice architecture when\nyou divide your application into smaller\napplications that talk to each other so\nhere we would have ECS elastic container\nservice this is a container\norchestration service that supports\nDocker containers launches a cluster of\nservers on these2 instances with Docker\ninstalled so when you need Dockers a\nservice or you need to run containers we\nhave elastic container registry ECR this\nis a repository of container images so\nin order to launch a container you need\nan image an image just means a save copy\na repository just means a storage that\nhas Version Control we have ECS fargate\nor just fargate now people are kind of\nforgetting that it's it runs on ECS\nthese days that's why I have it in there\nit is a servess orchestration container\nservice is the same as ECS ex except you\npay on demand per running containers so\nwith ECS you have to keep a ec2 server\nrunning even if you have no containers\nis running so it manages the underlying\nserver so you don't have to scale or\nupgrade the ec2 server so there's the\nadvantage over ECS okay then we have\nelastic kubernetes service eks this is a\nfully managed kubernetes service kuber\nor so kubernetes commonly rated to K8 is\nan open-source orchestration software\nthat was created by Google is generally\nthe standard for managing microservices\nso when you need to run kubernetes as a\nservice then we have serverless category\nso when the underlying servers are\nmanaged by B to us you don't worry or\nconfigure servers saus Lambda is a\nserverless function service you can run\ncode without provisioning or managing\nservers you upload small pieces of code\nchoose much uh how much memory how how\nlong you want the function to run is\nallowed to run before timing out and you\nare charged based on the runtime of the\nServ function rounded to the nearest 100\nmilliseconds so there you\n[Music]\ngo hey this is Andrew Brown from exam\nPro and what I want to do is just show\nyou a variety of different Computing\nServices on AWS so I'm going to try to\nlaunch them and uh we're not going to do\nanything with them just going to Simply\nlaunch them okay so the first I want to\nshow you is ec2 and by the way we will\ngo more in depth in ec2 later on in this\ncourse here um but what I'm going to do\nis go ahead and launch the instance\ndon't worry about all this stuff but\njust choose the Amazon Linux 2 so it's\nin the free tier all right we're going\nto choose an instance type of a T2 micro\nso that's part of the free tier it's\ngoing to be set as one all these options\nare fine I want you to go ahead and\nreview and launch we're going to launch\nand I don't want to generate on any key\npair I'm going to proceed without a key\npair I'm going to acknowledge that\nbecause I don't want it and that's all\nthere is to launching an ec2 instance\nand so I can go here and view my\ninstances and what you'll see is it's\npending okay and usually it has like a\nlittle spinning icon maybe they've\nupdated it since\nthen so I go here it's hard to see\nbecause there's all these terminated\nones but I don't need to do anything\nwith it I just wanted to show you the\nactions that you'd have to do to launch\nit actually we'll leave it alone maybe\nwe'll see it when it's launched the next\none I want to show you is e elastic\ncontainer\nservice um and wow this this is old\nlet's go let's get the new experience\nplease so old okay checkbox that\non and we'll hit get started and we'll\nsay create a\ncluster and we have some options here\nnetworking only ec2 Linux plus\nnetworking uh for use with either ads\nfargate or external windows\num uh this is if you're doing fargate\nwhich we're not doing right now fargate\nis part of elastic container service it\nused it well used to be it is called ECS\nfargate but it us markets it as a\nseparate service we'll go to next and\nsay my ECS\ncluster um we can create an empty\ncluster but that would make it a fargate\ncluster which we don't want there's an\nond demand server look it's M6 I large\nif you're very afraid of a lot of spend\nhere you don't have to do this you can\njust watch me do it and just learn\nwell what I'm going to do is try to find\nsomething super cheap so I want a T2\nmicro or a T3 micro T2 micro is part of\nthe free tier I don't know if we get to\nchoose T2 anymore in here they might not\nlet\nyou there it is you know T3 micro is\ngreat too I just whatever says it's free\nthat's what I'm going to go for number\nof instances one the Amazon lytic\nversion is fine I don't care about a key\npair uh use the existing VPC I don't\nwant to have to make a new one select\nthe existing ones\nokay uh let it create a new security\ngroup that's totally fine allow those to\nbe fine create a new role that's fine\ncreate okay and so that's going to\ncreate ourselves a\ncluster um I'm going to just make a new\ntab here let's just check on our ec2\ninstance and so if we look at our ec2\ninstance it is running okay great so it\nhas a private IP address it has a public\nIP address all right um there's not much\nwe can do with it I can't even log into\nit because we didn't generate out a key\npair L times you want to name these\nthings so I just go here and name it my\nserver okay go back to our ECS instance\nand the cluster is ready so we'll go\nhere and oh nice we got a new UI and so\nif we wanted to deploy something as a\nservice or a\ntask\num we would need to create a t template\nlike a task definition\nfile uh they don't have a new UI for\nthis you're being redirected to the\nprevious version console because this\nisn't available in the new experience\nyet of course it isn't so we can create\na new task definition file that's what's\nused to run it it's basically like a\nDocker file composed file whatever you\nwant um we have fargate or ec2 we are\ndoing ECS so we're going to have to do\nec2 so we'll say my ECS uh Tas def\nfile um task Ru opt optional IM roll I\ndon't need one network mode I I don't\ncare um and then this is the idea is\nthat because a container allows you to\nuse up a particular amount of the um\nthing we don't have to use all of the\nmemory so we should look up what a T2\nmicro is because I don't even remember\nwhat size it is okay T2 micro AWS so we\ngo here we look at the instance types\nand we're going to flip over to T2 and\nit says that it's one\nvcpu one gab of memory so what I'll do\none yeah yeah one okay that's fine so\nwhat we want and this is in megabytes so\nwe'll say 500 megabytes and um I don't\nknow if we can do less than one but I'm\ngoing to do one\nhere\num the task CPU must be an integer\ngreater than or equal to 128 okay fine\n128 oh I guess it's 1024 would utilize\nthe whole thing so I could say\n512 okay and this is where we would add\nour\ncontainer so\nI don't do this every day so I don't\nremember how to do this we'll say my\ncontainer um and I need a repository\nhere so I need like dockerhub Hello\nWorld okay I don't care what it is I\njust need a image that's\nsimple and I'm looking for the address\nhere\num I'm hoping that's just this\ndockerhub\nURL so it' be something like this right\ndocker.io probably Docker IO Docker\nimage um Docker Hub URL in\nECS okay goes to show how often I'm\nlaunch launching these things so\nrepository URL Docker image so I think\nthat what we're going to do here\nI would really just like the URL\nplease\nreviews\ntags where is\nit where is it it's somewhere here\nright\nuh well let's just try it we'll go and\nwe'll type in says image and tags so\ndocker.io\nhello world I really need an image ID\nimage URL hello\nworld Docker\nHub they're not making my life easy here\ntoday anything I just want to see like a\nsingle example docker.io\ndocker iio\nURL\nexamples\nECS this is what it's like you know this\nis what you're going to be doing if you\nare um you know a cloud engineer you're\ngoing to be Googling a lot and just\ntrying to find examples\nhere so here it says docker.io the name\nthe host name okay so we'll just try it\nokay so I think that the the the name\nhere is underscore and then it's hello\nworld and that's what's throwing me off\nhere\nright Docker\nIO just hold on\nhere repository URL and then there's the\ntag I don't know if like is the tag\ngoing to be like latest view available\ntags latest okay so what I'll do\nhere and that's the thing you got to\nhave a lot of confidence too so hard\nlimits soft limit um do I have to set\nit do I have to set any of these things\ncan I just go to the bottom and hit\nadd looks like I\ncan okay so we'll scroll on down create\nwe create our task definition file which\nis fine we're going to go back to our\ncluster it's going to bring us back to\nthe new experience we're going to click\ninto this\ncluster holy smokes uh we're going to\nhit\ndeploy and we are going to choose\nservice that means it's going to\ncontinuously run task means that when\nit's done running it ends we're going to\nchoose our family our version that's\nthat's the task definition file there is\nnot compatible with the selected compute\nstrategy my task\nfile what if I just choose task take\nthat okay some maybe some you have to\nlike code it so that it continuously\nruns I don't care we don't need to run a\nservice here the selected task\ndefinition is not compatible with the\nselected compute strategy\nokay let's see\nwhy uh can you double check if you're\nusing fargate strategy instead of the\nec2 uh blog designed for the ec2\nstrategy so probably what it's\nsuggesting is that the the strategy file\nI made is not for the right one here Tas\n[Music]\ndefinitions go back over\nhere well what's wrong with it\ntask roll none my container so what I'm\ngoing to do because I don't trust this\njust going to go ahead and delete this\ncan I delete this how do I delete\nthis oh boy\nactions deregister\nderegister we'll create a new one and so\nit us has tools like it us co-pilot um\nCLI to make this a lot easier because\nyou can see this is very frustrating but\nI chose this\nso my task\ndef requires compatibility of\nec2\ndefault 512\n512 add\ncontainer we're going\nto uh was it docker.io\nunderscore what's it called hello world\nlatest we'll just say hello world\nhere and we'll just say uh 512 which is\nfine I don't care about any port\nmappings I'm just reading it carefully\nhere to see what it wants we'll say 512\nmaybe because I didn't specify them it's\ncomplaining this looks fine we'll hit\nadd\nokay constraints type this all looks\nfine so we'll try this\nagain and so we now have our file let's\nsee if we can just run this task from\nhere you\nsee2 this is just another way to do it\nso we just choose the cluster this is\nactually a lot easier to do it this is\nold old old Eh this is ugly and so now\nit launches so you know if you have\ntrouble one way then just do it another\nway and uh sometimes it'll work here so\nI don't expect this task to really work\nin any particular way if it's pending\nthat that's fine if it fails that's fine\nif it's successful that's fine I don't\ncare I just want to go through the\nmotion so it was successful it it ran\nand then it stopped I don't know if we\ncould see like the output anywhere\nprobably what it would do is it would\nlog out something like into somewhere\nand so I don't know if like there's logs\nturned on for this if I go over to like\nCloud watch logs maybe I could see\nsomething a lot of these services will\nautomatically create cloudwatch logs so\nsometimes you can just go look at them\nthere so we'll drop down we'll go to log\ngroups\nhere there is some stuff here um there's\na couple that I created from before just\ngo ahead delete\nthose and so what I'm looking for is\nlike ECS so no there's no logging\nhappening here which is totally fine so\nthat is ECS um for fargate it's pretty\nmuch uh the same the difference is that\nfargate is like it has to start up and\nrun so it's a lot slower to\nwatch okay\nand now let's go take a look at a\nLambda okay so this is our serverless\ncompute so we go ahead and create\nourselves a function uh we can start\nfrom a blueprint that doesn't sound too\nbad and I personally like Ruby so no I'm\nnot getting much here but we can do is\nlook for something like hello do we have\nlike a hello\nworld there we go hello world and we'll\nclick that we'll say my hello\nworld uh it's going to create those\npermissions that's fine it's showing us\nthe code it's very simple okay it's\ngoing to console log out these values\nnot a very good hello world function\ndoesn't even say hello world how can you\ncall it a hello world function if it\ndoesn't say hello world I don't\nunderstand so we're going to go ahead\nand create this function usually doesn't\ntake this\nlong okay so uh here is our function\nhere is our code notice that this is\nCloud9\nokay and you can even move that over to\nCloud9 they didn't have this button here\nbefore that's kind of cool I hit test\nthey used to have it up\nhere but I guess they wanted to make it\nmore obvious so they moved it down here\nwhich is nice so what I can do is hit\nthis oops my test it's going to send a\npayload here to the actual function uh\nand it's going to tell us if it\nworked okay so can I run my test go over\nhere to test\nthey changed it a bit so I guess I\ncreated there it succeeded so I have my\nlogs okay so it's it's going to Output\nthose values there so there are the\nthree values which basically is\nnothing maybe you were supposed to set\nthose an environment variable but you\ncan see you're just uploading uh some\ncode right it's just a bit of code it's\nnot like a full app or anything so we\nlaunched an E2 container we did a a um\nsorry ec2 instance a container we did a\nseress function there's other things\nlike EKF yes but that is really really\nhard to set up okay cuz you'd have to\nuse like kubernetes commands and stuff\nlike that and my kubernetes knowledge is\nalways very poor um I'm just taking a\npeek here to see if they've updated it\nso yeah you create the cluster but like\ndeploying it is forget it I'm just\ntrying to think if there's anything else\nI kind of want to show you um no those\nare the main three I would say so I'm\npretty happy with that um what I'm going\nto do is go and kill all these things so\nwe're going to go over to Lambda okay\nand I'm going to go ahead and delete\nthis as you saw ECS was the hardest and\nno matter how many times I've built\nthings on ECS and I've deployed full\nthings on ECS I can't remember I always\nhave so much trouble with task\ndefinition files it's unbelievable we'll\ngo over to our cluster\nhere\nand ECS cluster up here make sure you're\nnot in the fargate cluster I know I'm\nclicking really fast but there's just so\nmany things to click and I'm going to\nclick into this cluster we're going to\ngo hit edit because this is running an\nec2 instance right I need to destroy it\num it just took me back to the old one\nhere um I want to delete no I want to\ndelete the cluster click back\nhere where do I delete it up\nhere here I can't checkbox\nanything uh how do I delete this do I\nhave to delete the task first maybe so\nwe'll go here I mean it's already\nstopped there's nothing to\ndo\nedit uh huh account\nsettings wow this is\nconfusing\nokay how to delete ECS\ncluster got to be kidding me I have to\nactually look this up so open the USS\nconsole from navigation in the\nnavigation choose clusters and the new\nturn off the E uh turn off new ECS\nexperience and choose the old console\nthe delete cluster workflow is not\nsupported in the EC ECS console are you\nserious then\nwhy why do you have it like why even let\npeople use the new experience if that\nyou don't have all the functionality\nthere um oh I was going to give it\nfeedback but it didn't let me here it\nsays uh I need to delete an ECS cluster\nno okay so I'm\nhere there's my big ugly\ncluster delete\ncluster okay so yeah it it's a struggle\nokay like things are always changing on\nme but uh you just have to have\nconfidence and if you've done it a few\ntimes you know that you can do it right\num and that's one of the biggest\nHang-Ups to Cloud I would say so it's\ngoing to take a few minutes apparently\nto delete the cluster as that is going\nlet's let's go over to ec2 I didn't\nclose it I kept this tab\nopen and uh there's our ec2\ninstance we can go ahead and terminate\nthat instance terminate\nokay and if this says it's terminating\nthen we're in good shape Terminator is\nshutting down that's fine and notice\nhere that's the ECS instance just make\nsure you shut down the my server not the\num the ECS instance cuz that's to stop\nand so this has already terminated but\nif we go back here notice that it says\nthat it's not done but\nclearly clearly has shut\ndown okay so I'm going to wait here for\na bit even though I know it's been\ndeleted maybe it's deleting things like\nthe autoscaling group so we go down\nbelow\nhere right so that's probably what it's\ndoing it's probably trying to destroy\nthe auto scaling\ngroup but it doesn't show any here so it\nmust have already destroyed\nit yeah so task Services delete so I'll\nbe back here in a bit but I know it's\nsafe it's already deleted but I'll see\nyou back here in a bit okay so I waited\nliterally a second and it's now deleted\nso we deleted our Lambda we deleted our\noh did we delete our\nLambda good\nquestion now I'm not really worried\nabout the Lambda because I guess we did\nbut I'm not really worried about it\nbecause um you know at when it rests at\nidle it's not costing us anything where\nthe EC s and the ec2 are backed by ec2\ninstances so we do have to shut those\ndown okay and again remember make sure\nyou're in the correct region sometimes\nthat gets flipped over and then you\nthink those resources are gone but\nthey're actually not they're just\nrunning in another region so uh there\nyou\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we're taking a look at higher\nperformance Computing Services on AWS so\nbefore we do we got to talk about the\nNitro system so this is a combination of\ndedicated hardware and lightweight\nhypervisor enabling faster Innovation\nand enhanced security all new ec2\ninstant types use the nitro system and\nthe Nitro system is designed uh by AWS\nokay so this is made up of a few things\nwe have Nitro cards these are\nspecialized cards for vpcs EBS instant\nstorage and uh controller cards you have\nNitro security chips these are\nintegrated into the motherboard protects\nHardware resources and we have the Nitro\nhypervisor this is the lightweight hyper\nvisor memory and CPU allocation bare\nmetal like performance there's also uh\nNitro enclaves but you that's a bit out\nof scope here but that's has to do with\nlike ec2 isolation Okay uh then we have\nbare metal instances so you can launch\nec2 instances that have no hypervisor so\nyou can run workloads directly on the\nhardware for maximum performance and\ncontrol we have the M5 the R5 um ec2\ninstances that can run bare metal\nthere's other ones I believe I've seen\nas well but um you know if you are\nrunning bare metal you can just go\ninvestigate at the time of okay we have\nbottle rocket this is a Linux based open\nsource operating system that is purpose\nbuilt by adus for running containers on\nVMS or bare metal hosts then uh let's\njust Define what HBC is so it's a\ncluster of a hundred of thousands of\nservers with fast connections between\neach of them with the purpose of\nboosting Computing capacity so when you\nneed a supercomputer to perform\ncomputational problems too large to run\non a standard computer or computers or\nwould take too long this is where you\nknow HBC comes into play one solution\nhere is databus parallel cluster which\nis uh an adus supported open source\ncluster management tool that makes it\neasy for you to deploy and manage higher\nperformance Computing HBC clusters on\nAWS so hopefully that gives you an idea\nof this stuff\n[Music]\nokay all right so let's take a look at\nHPC or high performance Computing on AWS\nso HPC is for uh running large complex\nsimulations and deep learning workloads\nin the cloud with a complete Suite of\nhigh performance Computing product\nServices gains Insight faster and\nquickly move from idea to Market blah\nblah blah blah blah it's for ML or very\ncomplex scientific Computing stuff these\nrun at least on C5 NS okay and the way\nit works is that you use this um CLI\ncalled P cluster or a parallel compute U\nor a parallel cluster stuff and so let's\nsee if we can get this installed very\neasily um so what I'm going to\ndo is see how hard it is to install\nstall now I don't recommend you running\nthis cuz I don't know what it's going to\ncost me and if I make a misconfiguration\nI don't want you to have that spend here\nbut I don't think it's that dangerous so\nI'm going to go back over to us East one\nhere I'm going to open up\ncloudshell and I'm going to give it a\nmoment to load and so as that is loading\nlet's take a look at how we would go\nahead and install this so install the\ncurrent parallel um it was parallel I\nthink we just copy that line\nokay and so we have to wait for our\nenvironment to spin up all right so once\nit has spun up we will install it and\nthen we will jump over to this tutorial\nhere okay so we'll give this a\nmoment and after waiting a little while\nhere it looks like our shell is ready it\nlooks like it's in bash um I'm just\ngoing to type in ads S3 LS that's a\nsanity\ncheck okay and it works that's great so\ngo back over here and I'm going to go\nback up to install for\nLinux and what I need is that single\ncommand where is\nit so I'm certain that we already have\nLinux or python installed but I just\nwant the command to install\nit we saw it a moment ago here I'm just\ngoing to back out till I can find\nit uh one more there it is so it's under\noh it's this link here and that's what I\ntalk about the documentations being\ntricky sometimes you have to click these\nuh headings here to find stuff so this\nis the first time installing it so we'll\ngrab that usually you're supposed to\ncreate in Virtual environments with\npython I don't care this is my cloud\nshell it doesn't matter to me so we're\ngoing to go ahead and download that and\nhopefully it is fast and it was super\nfast which was really nice and so what\nwe'll do is go check out the pcluster\nversion okay and that looks fine to me\nI'm going to go down below here to run\nour first job um the returns the it\ngives outputs I don't think we need to\nconfigure it because we already have our\nCLI so what I'm going to do is go ahead\nand create ourselves a new cluster um\nbeginning cluster creation configuration\nfile config not found so I guess we do\nhave to configure\nthis\nconfigure and it's asking what region do\nwe want to be in um if I have us East\none I would choose it for some reason\nit's all the way for number 13 that is\nnot a lucky number but I'm going to\nchoose it anyway anyway no key pair\nfound in Us East one region please\ncreate one of the following um so create\nan ec2 key\npairs uh no options found for ec2 key\npairs that's fine so what what I'll do\nis go over\nhere and we'll go over to\nec2 and we will go over to key pairs key\npairs key pairs key pairs we'll create\nourselves a new new one here so we'll\nsay um HPC key pair or just my\nHPC so we know what it it's for we have\nputty or PM we're going to do pem\nbecause we're on Linux we'll create that\nand notice that it downloaded the pem\ndown down here and we're going to need\nthat for later um and so what I'll\ndo as I'll type in P cluster here again\nconfigure we'll choose 13 we'll choose\nnumber one here\nuh allowed values for the scheduler I\nhave no idea what these are uh let's\nchoose the number one allowed values for\nthe operating system Amazon L 2 I know\nwhat that is minimum cluster size one\nmaximum cluster size two head notice\ninstance oh T2 micro you can do that\nyeah let's do it I didn't know we could\ndo that enter compute type uh T2 micro\nsure so I thought that we'd have to use\na c5n but I guess apparently not\nautomate VPN uh VPC creation yes of\ncourse network configuration so allow\nvalues for the network configuration uh\nhead node in a public subnet and and\ncompute Fleet in a private subnet uh\nhead node in compute yeah we'll do it in\nthe both just to make our lives easier I\ndon't care first one sounds more secure\nof course and so oh it's creating Cloud\ninformation sack wow this is easy I\nthought this was going to be super\npainful okay so we'll go over here we'll\ngo take a look at what cloud formation's\ndoing all\nright now I don't care if we actually\nrun a task on here but it was just\ninteresting to go through the process to\nsee how hard it was and we will go look\nat what resources are being created so\nit's creating an internet gateway so\nit's literally creating a isolate VPC\nfor it which is totally fine I guess um\nit's creating a subnet it's creating a\nroute table refresh\nhere um I'm not sure how much it wants\nto create here it just looks like VPC\nthat's all it's creating I thought maybe\nthe ec2 instances would show up here but\nmaybe it's going to launch that on a\nneed be\nbasis okay so that's all created oh now\nit's doing a VPC\nGateway I think VPC gateways cost money\nlet's go take a look here VPC\npricing yeah there's a uh transfer fee\nso just be careful about that you know\nand you just can just watch along here\nyou don't have to do\nit default route depends on public so\nnow it's creating ec2\nroute I don't know what an ads ec2 route\nis I've never seen that before sometimes\nwhat we can do is go into ec2 and then\ntake a look on the left hand side you\nsee anything in here we don't know what\nit is we just type in ec2 route cloud\nformation sometimes cloud formation is\ngreat for figuring out what a component\nis not all components are represented in\nthe um inabus um Management console so\nspecify route in the route table oh it's\njust a route\nokay and we'll go back here we'll\nrefresh so that is done is the stack\ndone created complete good we'll go back\nto our Cloud shell it says you can edit\nyour configuration file or simply do Etc\nso now let's see if we can create the\ncluster I assume this would create ec2\ninstances so the job schedule you are\nusing is sge this is deprecated in\nfuture use parallel cluster well should\nhave told me okay there is a new version\nof 301 parallel available I don't\nunderstand because I just installed it\nright we'll go back to cloud formation\njust going to probably create nested\nStacks which that's what I thought it\nwould do n Stacks means that it's\nReliant so there's one main one and then\nthere's uh children stack so go here see\nwhat resources it's creating oh whole\nbunch of stuff wow so many things that\nsqs Q\nSNS uh network interface a Dynamo DB\ntable Yeah you you probably don't want\nto run this you just want to watch me do\nit and then we go into here it's\ncreating uh an ec2 volume so that's\ngoing to be\nEBS and then here we\nhave uh a log group I don't know why\nthey separated those out seem very\nnecessary we are waiting on the elastic\nIP that always takes forever ever\ncreating elastic IP root instance\nprofile that is the IM Ru for\nit that didn't take too long these these\ntake a long time I I never know why\ncreate a roll it's really easy but\nattaching an I am policy you're always\nwaiting for\nthose um so I'm going to just stop it\nhere I'll be back in a second because I\ndon't want to have to make you watch me\nstare at the screen here okay all right\nso after a really really long wait um\nand it always takes some time there it\nfinally created I'm not sure what it's\nmade I mean we generally saw over here\nin the outputs but usually the cost that\nI'm worried about is whatever it's\nlaunching under uc2 it might not even\nhave launched any servers here we're\ngoing to take a look here see if there's\nanything so we have a master and a\ncompute and they're T2 micros so seems\npretty safe here um this compute is not\nrunning yet so I'm assuming that this is\nlike the machine machine that does the\nComputing and maybe if you had multiple\nmachines here like that would be the\ncluster where I could manage multiple\ncomputes um I'm not particularly sure\nbut let's just keep going through the\ntutorial and see what we can do the next\nstep is we need to get this pem key in\nour Cloud shell here so this I don't\nknow where this is but what I'm going to\ndo is I'm going to move it to my desktop\nI'm doing this off screen by the way so\nI'm moving it to my desktop and then I'm\njust going to go and upload the file\nokay and there it is so we'll say open\nand we'll say\nupload and it's going to upload it here\nonto this machine and I believe this is\non like uh I think this used as an EFS\ninstance like if you're wondering where\nthe storage for cloud shell is if we go\nover here I think it's\nEFS is\nit h i don't know where it is okay maybe\nit's just a maybe it's somewhere else\nokay I can't remember where it is but\nanyway um so\nnow it's created the cluster can I hit\nenter here\nhere okay can I create a tab like if I\nquit this is it going to kill it it\nexited it which is I think it's fine I\ndon't think it stopped running and so\nnow if I do an LS there's my key and so\nwe can go back to our instructions just\nhave too many tabs open here drag this\nall the way to the left here and so we\ncan try to use our key here to log in so\nwhat I'm going to do is\ngo here and we'll say my HPC pm and see\nif that works we'll say\nyes and permission denied it is required\nyour private key is not accessible\nthat's because we have to chamod\nit um um I never remember the command\nanymore because I rarely SSH into\nmachines but if we go to\nconnect and we go to SSH client it'll\ntell us what we need to\nrun chamad 400 okay so that's what we\nneed to do is we need to do a chamad 400\njust wanted to grab that code\nthere okay and now if we hit up we\nshould SSH into the machine there we\nare we are in the\ninstance we'll type in exit and so now\nwe want to run our job on this\nmachine and if we go back over to here I\nguess we can go create our first job so\nI'm just doing this in VI\nand I'm going to paste that in\nyep and I don't want the first line oh\nokay that's perfect\ngreat right\nquit oh there's no file name hold on\nhere so I need to name this file\nsomething so I'm going to say job\nDosh and we're going to paste that again\nhere we'll say\npaste and I don't know if that's cut off\nyeah it is okay great is that one okay\nI don't trust that the first line is\nthere so what I'm going to\ndo is go back to our tutorial here it's\nshebang SL bin SL\nbash\nuh this then that slash bin SL bash just\ndouble check it looks good to me we're\ngoing to quit that I'm just going to\nmake sure that it is what it we said it\nis so job sh looks correct to me good\nand so we'll try to run our job here so\nI'm going to say\nQ um job.\nsh\nLS and I guess it really depends on what\nwe decided to use when we set up that\nthing I can't remember what we choose as\nour Q we do Q\nstat oh okay okay okay so I think the\nthing is like you see how we have sge I\nthink that that's what we use to queue\nup jobs and so we have to have that\ninstall probably so\ninstall configure surid\nengine SG install um\nLinux oh boy that looks like a lot of\nwork so I don't think we need to do\nanything further here but as far as\nunderstand the idea is that you're\nchoosing uh some kind of way to manage\nthese and so I'm not sure what cu Q sub\nis let's go look up what that is what is\nQ sub oh that is the sun grid engine\nokay so how do we installed\nthat um I'm just going to see if we can\ninstall it so I'm going to do I think\nthis is using\nyum so if I do clear here\nclear yum install Q sub let's see if I\ncan do\nit s kud yum install Q sub no package\navailable Amazon Linux 2 Q sub because\nthat's probably what we're running in\nCloud\nshell Q sub doesn't tell us how to\ninstall\nit that's\ngreat so that's probably what it is and\nso in order to use this we would have to\ninstall that sun whatever whatever and\nthen we go through we do Q sub it would\nqueue it up um we could do qat cat hello\nand destroy it that's pretty much all we\nreally need to know to understand this\num it would have been nice to queue up a\njob and see it work but you know we're\ngetting kind of into a hairy territory\nhere and I think that we fundamentally\nunderstand how this does work so what\nI'm going to do is I'm going to go here\nI'm going to remove the job Dosh here\nand I want to destroy this\ncluster um so I'm going to do pcluster\ncommands to figure out what all the\ncommands are and there's probably a\ndelete command so we'll go back up\nhere B\ncluster where is our crate so we'll say\ndelete okay and so what that's going to\ndo is just tear down all the stuff\nnow so if we go over to cloud formation\nokay and it looks like it's destroying\nso yeah I'll see you here uh back in a\nbit when it's all destroyed okay all\nright so after a short little wait there\nit has destroyed it been so long that I\nuh my connection vanished but just make\nsure if you did follow along for\nwhatever reason uh you know make sure\nthat the stuff is deleted and it looks\nlike it did not destroy uh this so I'm\ngoing to go ahead and delete that that's\njust VPC stuff so I'm not too worried\nabout it I know that's going to roll\nback no problem and so I'm going to\nconsider this done so I'm going to make\nmy way back to the Management console\nclose this stuff up and we are good to\ngo uh for our next\n[Music]\nthing hey this is Andrew Brown from exam\nPro and we're taking a look at Edge and\nhybrid Computing Services so what is\nEdge Computing when you push your\nComputing workloads outside of your\nnetwork to run close to the destination\nlocation uh so an example would be\npushing Computing to run on phones iot\ndevices external servers not within your\nCloud Network\nwhat is Hy Computing when you're able to\nrun workloads on both your on premise\nData Center and the a uh VPC okay so we\nhave a few Services here starting with\nads Outpost this is a physical rack of\nservers that you can put into your data\ncenter ads Outpost allows you to use\nadus API and services uh such as ec2 WR\nin your data center then we have adus\nwavelength this allows you to build and\nlaunch your applications in a telecom\ndata center by doing this your\napplications will have ultra low latency\nsince they will be pushed over the 5G\nNetwork and be closest as possible to\nthe end user um so they've partnered\nwith things like Verizon Vodaphone uh\nbusiness and a few others but those are\nthe two noticeable ones okay we have\nVMware Cloud on AWS so this allows you\nto manage on premise virtual machines\nusing VMware uh within ec2 instances the\ndata center must uh be using uh VMware\nfor virtualization for this to work okay\nthen we have AB local zones which are\nEdge uh data centers Loc at outside of\nthe adus region so you can use adus\ncloser to the edge destination when you\nneed faster Computing storage databases\nin populated areas that are outside of\nAWS region you could do this there's\nsome other Edge offerings on AWS that\naren't listed here like sagemaker has\nwhat's called like Neo stage maker let\nyou do Edge Computing with um ml but I\nmean this is good enough\n[Music]\nokay all right so I wanted just to show\nan example of edge computer\nbecause we didn't cover it in our\ngeneric uh compute and so there's a\nvariety of services that allow you to do\nEdge Computing like wavelength and so um\nI've never actually launched wavelength\nbefore and I think that uh you have to\nrequest it so if I go over to support\nhere again I've never done this before\nbut I'm sure we can figure it out pretty\neasily I feel that if we create a\ncase um maybe it's like service\nlimit we type in wavelength here NOP not\nthere\nso how do we get wavelength wavelength\nAB us\nrequest so that's what I'm looking for\nhere okay how do I use wavelength\nAWS\nwhoops and sometimes what I'll do is go\nto the docs here here opt into\nwavelength zones before you specify\nwavelength zone for resource or service\nyou must opt into it to opt in go to the\nAdis console okay so we'll go to\nec2 and then it's going to say use the\nregion selector in the navigation bar to\nselect the region which supports your\nwavelength so I know that there's stuff\nin uh Us West because of Las Vegas right\nor not Las Vegas but Los Angeles right\nso if we go over here there's definitely\nthat over there on the navigation pane\non the ec2 dashboard under account\nattributes select\nzones okay do we see zones\nhere\nzones oh ec2\ndashboard zones let's go check here\nagain on the navigation pane choose ec2\ndashboard we are there\nright and under account attributes uh\nsettings account\nattributes oh over here okay oh it's\nhere\nzones and so there we have two zones and\nwe see switch regions to make uh zones a\ndifferent\nregion okay so under Zone groups turn on\nwavelengths Zone groups\nokay nothing there so I'm just going to\nswitch over to another one\nhere maybe\nOregon maybe uswest 2 oh look at all the\nstuff we have here I've never seen these\nbefore okay so here is the wavelength\none so that is the Los Angeles\none we can go ahead and enable this\nbefore disabling The Zone group I'm not\nsure what zone groups cost so wavelength\nZone pricing again you might just want\nto watch me do this because it might\ncost money um and so you might not want\nto have to spend for\nthat\npricing uh provides mobile networks\nwavelengths are available across\nwhatever learn about the data transfers\nin price about ec2\ninstances okay so what's the\nprice if we go into\nhere all right so what I'm going to\nsuggest to use don't do this but I'm\ngoing to do it and we're just going to\nsee what the experience is like okay so\nI'm going to update my zone so now I\nhave this one we'll say enable I'm going\nto assume that it has to do with like\ndata transfer\ncosts okay and uh we're going to go over\nto\nec2 and we're going to go over to\ninstances\nhere we're going to launch an instance\nand we're going to see if we we have\nthat available now I don't know if we're\nrestricted to particular\nuh instances I assume we can launch a\nLinux machine it' be really weird if we\ncouldn't you know we'll go over to\nconfiguration and what we want to do is\nchoose uh the zone so how do we do it so\nonce it's turned on confirmation confirm\nit configure your network so create a\nVPC create a carrier Gateway so you can\nconnect your resources into the VPC to\nthe telecommunication Network holy\nsmokes This is\ncomplicated but it's just kind of\ninteresting to see like the process\nright\nyou know it's not for our use case but\nuh carrier Gateway\nright and as I do this I always check up\nall the costs here so I say carrier\nGateway pricing AWS because maybe that's\nwhere the price\nis okay if you don't get a pricing page\nthen usually that's hard to say\nlogically isolated virtual\nnetworks again it's not telling me\nwhat um to use carrier you need to opt\ninto at least one one wavelength Zone\nbut I did\nright and sometimes what happens is that\nit just takes time for the optin to to\ngo so go here manage the Zone settings\nthat was a lot easier way so we have one\nit's we're opted in right here\nokay\nand okay we'll we'll go here again if\nthat one didn't work\num we can try so I guess these are all\nthe regions Denver things like\nthat can I opt opt into this one opt\nin it's not super exciting like all\nwe're going to do is launch an ec2\ninstance but you know we'll go through\nthe process here a\nbit and I don't know why I can't create\none so we'll go back over to the\ninstructions\nhere crate so you can connect so create\na route table using the VPC to the route\ntable so I think that's as far as we're\ngoing to get here because I'm not seeing\nany options here but the idea was that\nwe would have to create a carrier\nGateway we'd update our route tables and\nall we would be doing is launching an\nec2 instance so you know it's no\ndifferent than launching it you just\nchoose a different subnet so I think\nyou'd have to create a subnet for that\nzone and launch it in there and that\nwould be Edge Computing another example\nof edge Computing would be something\nlike via cloudfront which we have uh\nthese um Edge functions or not Edge\nfunctions yeah functions here and so\nthese are functions that are deploy to\ncloudfront\nso my cloudfront\nfunction and these would be deployed to\num Edge locations right and all you can\nuse here is Javascript so here's an\nexample of one and um I'm fine with this\ndevelopment live this function is not\npublished we'll go to\ntest test the function it's\ngood publish publish that function and\nso\nthe advantage of this is that you know\nif you have functions that are in it was\nLambda there's a chance of cold start um\nwhereas if they're deployed on the edge\nhere there's still probably a cold start\nbut it's going to be a lot faster\nbecause it's a lot closer to the edge\nlocation so um you know it's just a\ndifferent uh different cases but yeah\nthere was one where we're launching ec2\nworkload into wavelength which we\ncouldn't complete which is totally fine\nand then we have these functions on the\nedge there's other uh Edge Computing ser\nlike within Sage maker you can deploy I\nthink it's called like Neo sagemaker and\nthen for iot devices those are obviously\non the edge so you can deploy those as\nwell uh but generally that gives you an\nidea of edge Computing\n[Music]\nokay hey it's Andrew Brown from exam Pro\nand we're looking at cost and capacity\nmanagement Computing Services so before\nwe talk about them let's define what is\ncost management so this is how do we\nsave money and we have capacity\nmanagement how do we meet the demand of\ntraffic and use usages through adding or\nupgrading servers so let's get to it the\nfirst are the different types of EC\npricing models so you got spot instances\nreserved instances saving plans these\nare ways to save on Computing by paying\nup in full or partially or by committing\nto a yearly contract or multi-year\ncontract uh or by being flexible about\nthe availability Interruption to\nComputing Services we have adus batch so\nthis plans schedules and executes your\nbatch computer workloads across the full\nrange of adist computing Services which\ncan utilize spot instances to save money\nwe have aist compute Optimizer so\nsuggest how to reduce cost and improve\nperformance by using machine learning to\nanalyze uh you uh your previous usage\nhistory we have ec2 auto scan groups so\nasgs these automatically add or remove\nec2 servers to meet the current demand\nall of traffic they will save you money\nand meet capacity since you only run the\namount of servers you need then we have\nelb so elastic load balcer so this\ndistributes traffic to multiple\ninstances we can reroute traffic from\nunhealthy instances to healthy instances\nand can Route traffic to ec2 instances\nrunning in different availability zones\nand then we have elastic beant stock\nhere which is easy for deploying web\napplications without developers having\nto worry about setting up and\nunderstanding the underlying ad Services\nsimilar to Heroku it's a platform as a\nservice so not all of these are about\ncost some of them are about capacity\nmanagement like elb um but yeah yeah\nthere you\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we are looking at the types of\nstorage services and no matter what\ncloud service provider you're using\nthey're usually broken down into these\nthree where we have blocks file and um\nuh object okay so let's take a look at\nthe first so this is going to be for\nBlock storage so for AWS this is called\nelastic Block store data is split into\nevenly split blocks directly accessed by\nthe operating system and supports only a\nsingle right volume so imagine you have\nan application over here and that\napplication is using a virtual machine\nthat has a specific operating system and\nthen it has a drive mounted to it uh\ncould be using FC or uh scuzzy here um\nbut the idea here is when you need a\nvirtual Drive attached to your VM is\nwhen you're going to be using block okay\nthe next one here is for um file or it's\njust basically a file system so this is\nAus elastic file storage so the file is\nstored with data and metadata\nmultiple connections via a network share\nsupports multiple reads writes locks the\nfile so over here uh we could have an\napplication but it doesn't necessarily\nhave to be an application and so it's\nusing NASA exports as the means to uh\ncommunicate and so the protocols here\ncan be NFS or SMB which are very common\nuh file system protocols and so the idea\nhere is when you need a file share where\nmultiple users or VMS need to access the\nsame drive so this is pretty common\nwhere you might have multiple virtual\nmachines and you just want to act as\nlike one uh Drive uh one example that\ncould be like let's say you're running a\nMinecraft server you're only allowed to\nhave one world on a particular single\ndrive but you want to be able to have\nmultiple virtual machines to maximize\nthat compute that'd be a case for that\num so there you go then the last one\nhere is like object storage and so fors\nthis is called Amazon simple storage\nservice or also known as S3 so object is\nstored with data metadata and a unique\nID scales with limmited uh uh with\nlimited no file limit or storage limit\nso there's really very there's very\nlittle limit to this it just basically\nscales up supports multiple reads and\nwrs so there are no locks and so the\nprotocol here we're going to be using\nhtps and API so when you just want to\nupload files and not have to worry about\nthe underlying infrastructure not\nintended for high uh I op so input and\noutputs per seconds okay so depending on\nhow fast you have to do your read and\nwrs are going to determine uh you know\nwhether you're going uh this direction\nor the other way um or you know how many\nneed to actually connect at at the same\ntime and whether it has to be connected\nas a mount drive to the virtual machine\n[Music]\nokay hey it's Andrew Brown from exam Pro\nand we're going to do a short\nintroduction into S3 because on the\ncertified Cloud practitioner they ask\nyou a little bit more than they used to\nand so we need to be a bit familiar with\nS3 because it is um at least I think\nthat Abus considers its Flagship uh\nstorage\nservice and it really is one of the\nearliest Services it was the second one\never launched okay so what is object\nstorage or object based storage so data\nstorage architecture that manages data\nas objects as opposed to other storage\narchitectures so file systems where uh\nthese are others right so which manages\ndata as files and a hierarchy and block\nstorage which manages data as blocks\nwith with ins sectors and tracks that\nget stored on an actual uh drive and so\nuh the idea here is we have S3 which\nprovides basically unlimited storage you\ndon't need to think about the underlying\ninfrastructure the S3 console provides\ninterface for you to upload and access\nyour data okay so we have the concept of\nS3 object so objects contain your data\nthey are like files but objects may\nconsist of a key this is the name of the\nobject a value the data itself made up\nof a sequence of bytes the version ID\nwhen versioning enabled the version of\nthe object metadata additional\ninformation attached to the object and\nthen you have your S3 buckets so buckets\nhold objects buckets can also have\nfolders which in turn hold objects S3 is\na universal name space so bucket names\nmust be unique it's like having a domain\nname okay and one other interesting\nthing is an individual object can be\nbetween Z bytes and up to 5 terabytes so\nyou have unlimited storage but you can't\nhave uh files of uh incredible size uh I\nmean 5 terabytes is a lot but nothing\nbeyond that for a single file but just\nunderstand that you can actually have a\nzerob byte file uh and for like\nassociate certifications that can be a\nan actual question so that's why it's\n[Music]\nthere all right let's take a look at S3\nstorage classes um and so for the\ncertified Cloud practitioner we need to\nknow generally what these are for\nassociate levels we need more detail\nthan we have here but let's get through\nit so adus offers a range of S3 storage\nclasses that trade retrieval time\naccessibility durability for cheaper\nstorage and so the farther down we go\nhere the more cost effective uh it\nshould get uh pending uh you know\ncertain conditions okay so when you put\nsomething into S3 it's going to go into\nthe standard uh tier the default tier\nhere and this is uh incredibly fast it\nhas\n99.99% availability 119 durability and\nit's replicated across 3 azs and so uh\nyou know we have this cheaper meter here\nhere on the left hand side and that\nwould apply this is very expensive and\nit's not actually expensive but it is\nexpensive at scale when you can uh\nbetter optimize it with these other\ntiers so just understand that um then\nyou have the S3 intellig tiering so this\nuses ml to analyze objects and usage and\ndetermine the appropriate storage class\ndat is moveed to the most cost effective\naccess tier without any performance\nimpact or added overhead then you have\nS3 standard IIA which stands for\ninfrequent access this is just as fast\nas S3 standard but it's cheaper if you\naccess the files less than once a month\nthere's going to be an additional\nretrieval fee applied so if you do try\nto retrieve data as frequently as S3\nstandard it's going to actually end up\ncosting you more so you don't want to do\nthat okay then you have S3 one zone IIA\nso as it says it's running in a single\nzone so it's as fast as S3 standard but\nit's going to have lowered availability\nbut you're going to save money okay\nthere is one caveat though your data\ncould get destroyed because it's\nremaining in a single uh a so if that a\nor data centers um suffer a catastrophe\nyou're not going to have a duplicate of\nyour data to retrieve it okay um and\nthen you have S3 Glacier so for\nlong-term clothed storage retrieval of\ndata can take minutes to hour\nbut it's very very very cheap and then\nyou have S3 Glacier uh deep archive\nwhich is the lowest cost storage class\nbut the data retrieval is 12 hours and\nso you know um all of these here to here\nthese are all going to be in the same uh\na S3 console or Amazon S3 console S3\nGlacier is basically like its own\nservice but it's part of S3 so kind of\nlives in this weird State there's one\nhere that we didn't have on the list\nhere which is S3 outputs because it has\nits own storage class and doesn't\nexactly fit well into um this kind of\nlinear cheaper uh thing here\n[Music]\nokay hey it's Andrew Brown from exam Pro\nand we are taking a look at the ous snow\nfamily so this is storage and compute\ndevices used to physically move data in\nor out of the cloud when moving data\nover the Internet or Prov private\nconnection that is too slow difficult or\ncostly so we have snow cone snowball\nEdge and snow mobile and so there\noriginally was just snowball and and\nthen they came out with snowball Edge uh\nand Edge introduced Edge Computing\nthat's why there's Edge in the name but\npretty much all of these devices have\nEdge Computing uh and they do\nindividually come with some variant so\nwith the snowball a snow cone it comes\nin two sizes where it has 8 terabyt of\nusable storage and then there's one with\n14 terabytes of usable storage for\nsnowball Edge it technically has like\nfour versions but I'm going to break it\ndown to two for you we have storage\noptimized where we have 80 terab of you\num uh of usable storage there and then\ncompute optimize\n3.9.5 terab and even though it's not\nhere you get a lot of vcpus and\nincreased memory which could be very\nimportant if you need to do Edge\nComputing before you send that over to\nAWS and then last here we have\nsnowmobile which can store up to 100\npedabytes of storage um in the uh\nAssociates I cover these in a lot more\ndetail because there's so much more\nabout these like the security of them\nhow they're tamper proof like how they\nhave networking buil in the the\nconnection to them but you know for this\nexam that's just too much information um\nyou just need to know that there are\nthree uh three ones in the family and\ngenerally what the sizes are and that\nthey're going to be all placed into\nAmazon S3 what's interesting is that you\nknow snowmobile only does 100 pedabytes\nbut adabs markets it as you can move\nexabytes of of um content because you\ncan order more than one of these devices\nso they'll market it saying like\nsnowball EDG is when you want to move\npedabytes of data and snowball mobile is\nwhen you want to move exabytes but you\ncan see that a single thing isn't in the\nexabyte it's just in the petabyte\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at all the\nitaba storage services in brief here so\nlet's get to it so the first is simple\nstorage service S3 this is a seress\nobject storage service you can upload\nvery large files and an unlimited amount\nof files you pay for what you store you\ndon't worry about the unine file system\nor upgrading the dis size you have S3\nGlacier this is a cold storage service\nit's designed as a lowcost storage\nsolution for archiving and long-term\nbackup it uses previous generation uh\nHDD drives to get that low cost and it's\nhighly secure and durable we have\nelastic Block store EBS this is a\npersistent block storage service it is a\nvirtual hard drive in the cloud and you\nattach to ec2 instances you can choose\ndifferent kinds of hard drives so SSD\niops SSD throughput HDD and um a cold\nhhd okay we have elastic file storage so\nEFS it is a cloud native NFS file system\nservice so file storage uh you can mount\nto multiple ec2 instances at the same\ntime when you need to share files\nbetween multiple servers we have storage\nGateway this is a hybrid cloud storage\nservice that extends your on premise\nstorage to the cloud we got three\nofferings here file Gateway so extend\nyour local storage to Amazon S3 volume\nGateway caches your local drive to S3 so\nyou have a continuous backup of the\nlocal files in the cloud tape Gateway so\nstores files onto virtual tapes for\nbacking up your files on very\ncosteffective long-term storage we got\none more page here cuz there's a lot of\nservices here we have adab us snow\nfamily so these are storage devices used\nto physically migrate large amounts of\ndata to the cloud and so we have\nsnowball and snowball Edge these are\nbriefcase size data storage devices\nbetween 50 to 80 terabytes I don't\nbelieve snowball is available anymore\nit's just snowball Edge uh but it's good\nto have all of them in here so we can\nsee what's going on we have snowmobile\nthis is a cargo container filled with\nracks of storage and compute that is\ntransported a semi trailer tractor truck\nto transfer up to 100 pedabytes of data\nper trailer I don't think we're going to\nbe ordering that anytime soon cuz that's\npretty darn expensive but that's cool we\nhave snow cone this is a very small\nversion of snowball that can transfer 8\nterabytes of data we have adab us backup\na fully managed backup service that\nmakes it easy to centralize and automate\nthe backup of data across multiple a\nservices so ec2 EBS RDS TB EFS storage\nGateway you create the backup plans we\nhave Cloud endure disaster recovery so\ncontinuously replicates your machine in\na lowcost staging area in your target\nabl's account and preferred region\nenabling fast and reliable recovery in\ncase of it data center failures we have\nAmazon FSX this is a feature Rich and\nhighly performant file system that can\nbe used for uh windows so that would be\nusing SMB or Linux which uses luster and\nso there we have the Amazon FS FSX for\nWindows file server so use SMB protocol\nand allow you to mount FSX to Windows\nservers and then the luster one which\nuses uh Linux luster file system it\nallows you to mount F FSX Linux servers\nare there any storage Services missing\nhere not really I mean you could count\nelastic container repository as one but\num that's kind of something else or you\ncould also count maybe um uh code commit\nbut you know I kind of put those in a\nseparate category where we where those\nare in our developer tools or our\ncontainers\n[Music]\nokay all right so what I want to do is\nshow you around S3 so we'll make our way\nup here and type in\nS3 and we'll let it load here and what\nwe're going to do is create a new bucket\nif you do not see the screen just click\non the side here go to buckets and we'll\ncreate ourselves a new bucket so bucket\nnames are unique so let say my\nbucket and we'll just pound in a bunch\nof numbers I'm sure you're getting used\nto making buckets in this um in this\ncourse so\nfar um so if we scroll on down notice\nthat it says block public access\nsettings for this bucket this is turned\non uh like the blocking is turned on by\ndefault because S3 buckets are the\nnumber one thing that are a point of\nentry for malicious actors where people\nleave their buckets open so if we want\nto uh Grant access to this bucket for\npeople to see this publically we'd have\nto turn this off okay but for now we're\ngoing to leave that on you can version\nthings in buckets which is pretty cool\nyou can turn on encryption which you\nshould turn on by default and use the\nAmazon S3 key on the certified Cloud\npartitioner it's going to ask you about\nclient side encryption and server side\nencryption so you definitely want to\nknow what these are I'm going to turn it\noff for the time being so we can kind of\nexplore uh here by oursel here um then\nthere's object lock so we can lock files\nso that um you know they're you know\npeople aren't writing to them multiple\ntimes so we'll go ahead and create a\nbucket and it's very quick so here is\nthe new bucket we made and you'll notice\nwe have nothing here which is totally\nfine if I go to\nproperties um you know we can see that\nuh we can turn on Buck conversing turn\non encryption what I'm going to do is\nI'm going to go grab some files I\nremember I saved uh some files recently\nhere I'm just going to make a new folder\ncalled Star Trek I just have some\ngraphics you can pull anything off the\ninternet you want to do this\nyourself U but I'm just going to prepare\na folder here it'll take me a\nmoment\nokay just a\nmoment okay great so now I have my\nfolder prepared and so what I want to do\nis upload my first file so I can go here\nin upload and actually I can upload\nmultiple files you can even add a folder\nwhich is nice and so in here if I want\nto upload these files here whoops I'll\njust select multiples I'll hit open\nit'll cue them up which is really nice\nwe can see the destination details here\nif we want to turn it versioning on we\ncould there uh we could apply\npermissions for outside access but we\nhave uh things turned on but what's\nreally important is the properties where\nwe have these different tiers and So\nbased on the tier that you use the lower\nyou go at least it should be the cheaper\nit's going to get uh but it's going to\nhave some tradeoffs and we cover that\nthrough the course then there's that\nserver side encryption um and I'm going\nto hit upload we'll just individually\nturn it on so you're going to see this\nprogress go across the top these have\nall been uploaded I'm going to cck click\non my destination bucket and so what we\ncan do is we can uh open these if\nthey're images they'll show us right\nhere in the browser we can download them\nso if we need to get them again all\nright we can create a folder here and\njust say Star Trek or Enterprise\nD Enterprise D\nhere okay but it's not really easy it's\nnot like I can drag this into there um I\nmight be able there's no move option so\nyou'd actually have to copy it into the\ndestination and then delete the old one\nit's not like using a file system you\nknow um there's a lot more work involved\nbut you know it's a great storage\nsolution um so let's look at concpt so I\nhave this selected here if I click into\nit I can go to permissions I can go to\nversions see that I'm looking for H\nencryption here we go so if I turn it on\nI can enable encryption and I can choose\nwhether I want to use an Amazon S3 key\nso\nSS S3 so an encryption key that Amazon\nS3 creates manages and uses for you then\nyou have\nibus SS KMS and I believe this uses AES\nup here which is totally fine then you\nyou have KMS down here and it's\ninteresting because they're like ads\nwill manage the key for you and then\nthis one ads will manage the key for you\nit's just slightly different this one of\ncourse is a lot simpler there's not many\nreasons not to turn on encryption but U\nI'm going to go turn this one so that it\nis encrypted\nhere and just because it's encrypted\ndoesn't mean we can't access the file I\ncan still download it I can still view\nit because databus is going to decrypt\nit right so if I go and click on this\none and I say open okay even though it's\nencrypted I can still view it right it\njust means that it's encrypted on the\nstorage right so if somebody were to\nsteal that hard drive whatever hard\ndrive it's sitting on on ads if they\ndidn't figure it out it's encrypted\nthey're not going to be able to open up\nthe file right so that is the logic\nthere but through here um I can get it\nsomething that's really interesting with\num um S3 is the ability to um uh have\nlife cycle events so I'm just kind of\nlooking where that is it's usually in\nthe bucket so if I go to management up\nhere I can set up a life cycle rule and\nwhat I can do is say like move this to\ndeep\nstorage okay and then I can say what it\nis that I want to filter so maybe it's\nlike data.\njpg I can say apply to all objects in\nthe bucket I acknowledge that and we say\nmove current versions of objects between\nstorage classes and I checkbox that on\nand I can say move them to Glacier after\n30 days I think if I go lower it'll\ncomplain uh probably when I save there\nand so the idea is that we can move\nthings and distort some so maybe you\nhave files coming in down below it's\nshowing you here right so a file is\nuploaded and then after 30 days then\nmove them in the glacier so we save\nmoney okay that's a big advantage of S3\nthere's a lot of things going on in S3\nhere like you can turn on\num uh wherever it is you can turn\non web hosting so you can turn this into\nlike a website down below here there's a\nwhole whole bunch of things that you can\ndo okay so uh we're not going to get\ninto that because that's just too much\nwork but uh you know we learned the\nbasics of S3 so what I want to do to\ndelete this I have to empty it first\nwatch it'll be like you cannot delete it\nyou need to empty the bucket first so go\nahead and empty it and I'll say my\nbucket\nempty or sorry I guess I have to type in\npermanently\ndelete\n[Music]\nPerman delete no they used to oh yeah I\ncan copy it okay great and so once the\nbucket is is emptied I can go back to\nthe\nbucket and I'll go back one layer and\nthen I'll go ahead and delete my\nbucket and you can only have so many\nbuckets I think it's like a 100 you have\nlike a 100\nbuckets how many buckets can you have in\na\nWS 100 buckets yeah I was\nright and I think if you wanted to know\nhow many you Pro there's probably like a\nservice limits page service limits\nservice\nquotas so you go here you say a Services\nS3 how many buckets 100 right there okay\nso you know that gives you kind of an\nidea what's going on there but there you\ngo that's\nS3 all right so let's go take a look at\nelastic Block store which is uh virtual\nhard drives for ec2 so what I'm going to\ndo is make my way over to the ec2\nconsole because that is where it's at\nand on the left hand side if we scroll\non down you'll see elastic block volumes\nor elastic Block store volumes and so we\ncan go here and the idea is we can go\nahead and create ourselves a volume and\nwhat you'll notice is that we have a few\ndifferent options here we have general\npurpose provisioned iops cold HDD\nthroughput optimized magnetic magnetic\nbeing um basically like uh physical tape\nthat you can use to back up like the old\nschool stuff and so you have all these\noptions here and you can choose the size\nso when you change these options you're\ngoing to notice that some things are\ngoing to change like the through uh\nthroughput or iops so notice that\ngeneral purpose is fixed at between 300\nto 3,000 and notice that it goes from 1\nGigabyte to how many ever that is that's\na lot there and so it's not too\ncomplicated but in practicality I don't\nreally create volumes this way what I do\nis I'll just go launch an ec2 instance\nso I'll say launch ec2 instance and\nwe'll choose Amazon lytic 2 and again\nyou know if we haven't done the uc2 uh\nfollow along we'll cover all this stuff\nin more detail don't worry about about\nit um we go to configure instance then\nwe go to add storage and this is what\nyou're going to be doing when adding EBS\nvolumes um to your ec2 instances and\nyou'll notice we always have a root\nvolume that's attached to the ec2\ninstance that we cannot remove we can\nchange the size up here I believe the oh\nit shows us right here that we have up\nto 30 gigabytes so sometimes you might\nwant to Max that out to take advantage\nof the free tier you notice we can also\nchange uh this there might be some\nlimitations in terms of the root volume\nso notice that we have a few more\noptions here we can have a cold HDD or\nHDD as our root volume uh notice we have\na delete on termination so EBS volume\npersists independently from the running\nlife so you can choose to automatically\ndelete uh EBS volume when the associated\ninstance is terminated so if you take\nthis off if the ec2 instance is deleted\nthe volume will still remain which could\nbe something that's important to you uh\nfor encryption here um you might want to\nturn it on and so generally adus always\nhas a KMS manage key which is free so\nyou checkbox that on it will be\nencrypted uh you can turn it on later um\nbut you can never turn encryption off\nbut you should always uh turn encryption\non and so just be aware to turn that on\nyou can also add file systems down below\nhere but maybe we'll talk about that\nlater because I think that gets\ninto um e EFS okay so that is a\ndifferent type of file storage there but\nthat's pretty much all there is to it uh\nyou just go ahead and create uh your\nvolume there and then it would show up\nunder EBS we could take snapshots of\nthem to back them up that goes to S3 but\nthat's all we really need to know here\n[Music]\nokay all right let's take a look at\nelastic file uh system or EFS uh storage\nmanage file storage what does EFS stand\nfor EFS system elastic file system okay\nsorry and so what we can do is go ahead\nand create a file system here so I'm\ngoing to say my EFS and the great thing\nis that it basically a serverless so\nit's only going to be white you consume\nright so what you store and what you\nconsume um and I think that's what it's\ngoing to be based on we have to choose a\nVPC I want to launch it in my default\nVPC and we have the choice of regional\nor one zone um I guess this is going to\nbe based on what gets backed up to S3\npossibly so onezone probably is more\ncost effective but I'm going to choose\nRegional and that's a new Option I never\nnoticed before I just opened it up to\nsee a few more things here we have\nGeneral Max IO bursting provision things\nlike that we'll hit next\nwe'll choose our\nazs and uh then you might have to set up\na policy so I'm going to hit next here\nyou'll go ahead and hit create so you\nknow this is really interesting but the\ntrick to it is really mounting it to a\ndc2 instance and that's kind of the pain\nokay so if we go into this um you have\nto mount it and there are commands for\nit so like EFS mounting Linux\ncommands Okay\nI've done this in my Solutions architect\nassociate uh but you know again I'm not\ndoing on a regular basis so I don't\nremember and so if we go here I'm just\ntrying to see if we can see some code\nthat tells us how to mount it so\nmounting on an E2 uh uh ec2 Linux\ninstance with the EFS Mount helper um so\nI don't know if they had that before but\nthat sounds interesting so pseudo Mount\nhyphen T the file system the EFS\nmounting\nPoint yeah this looks a lot easier I\nthan what we had before okay so before I\nhad to enter a bunch of weird commands\nbut now looks like they've boiled it\ndown to single command but once you have\nyour EFS\ninstance\num I'm going to assume that there is an\nentry point here just clicking around\nhere seeing what we can see I would\nimagine we have to create an access\npoint so my access\npoint sure I don't know if it's going to\nlet me just do that it did and so I\nwould imagine that you probably use an\naccess point let's go back here ifs\nMount point I think that's the same\nthing I think the mount point and the\naccess point you create access points\nand that's what you use uh we can go\nhere we can attach it so oh yeah here's\nthe command\nso um Mount via DNS or Mount via IP\naddress\nso it doesn't look too hard we can try\nto give it a go I haven't done it in a\nwhile it looks like they've made it\neasier so maybe we'll try it out okay so\nwe go to ec2 here\nand I'm going to launch an instance I'm\ngoing to choose Amazon\n2 okay we're going to go and choose that\nand then we want to choose a file\nsystem and\nso it's going to mount to here okay and\nstorage is fine all this is fine and I'm\ngoing to go ahead and launch\nthis and and I need a new key pair so\ncreate a new key pair um this will be\nfor EFS example\nokay we're going to download that key\npair there we're going to launch this\ninstance okay and then we're going to go\nview this and as that is launching what\nI'm going to do is open up my cloud\nshell and I'm going to want to upload\nthis pen so again like before I'm going\nto drag it to my desktop off screen and\nthen what I'm going to do is upload this\nfile so I have\nit EFS example okay we're going to\nupload\nit because I just want to see if we can\naccess that EFS volume and so if I do\nLS that's our old one which I can delete\nby the way I'm never going to use that\nanytime soon\nyes LS and I'm going just delete the\nhello text there so it's a bit cleaner\nfor what we're doing and so we need to\nchod that\n400 uh EFS\nexample and we saw that's how like if\nyou want to try to connect to a server\nremotely that's what you do right so I\nbelieve that the drive is\nmounted if I go to storage does it show\nup\nhere doesn't show up under\nhere but\num what we're waiting for are these two\nstatus checks to pass and then we can\nSSH into this machine\nand I'm just going to go back here and\ntake a look here so using the EFS Mount\nhelper so pseudo Mount hyphen T EFS TLS\nthis volume to EFS and so I imagine it's\ngoing to mount it to EFS here using the\nNFS client so I guess it just depends on\nwhat we're going to have available to us\neven if the status checks haven't passed\nI'm going to try to get into this\nanyway um so what we can do is click on\nthis grab the public IP address we'll\ntype in\nSSH uh ec2 hyphen user at sign paste\nthis in hyphen I EFS example pem I\nusually don't log in Via\nSSH um but you know just for this\nexample I will and so I want to see if\nthis drive\nexists usually be under mount right\nthere it is okay so it already mounted\nfor us so I can do touch hello\nworld. text\nsay pseudo\nhere I can say pseudo VI I'm going to\nopen up the file and say hello from\nanother computer\nokay and so I've saved that file and\nwhat I want to do\nnow\noops oh okay sorry I'm in the cloud\nshell here but what I want to do now is\nI want to kill this\nmachine okay and what I'm going to do is\nspin up another ec2 instance I'm going\nto see if when I mount that if that file\nis there if it actually worked but wow\nthat is so much easier than before I\ncan't tell you how hard it was to attach\nan EFS volume the last time I did it um\nso we'll go ahead We'll add that and the\nstorage is fine we're going to go to\nreview here we're going to say launch\nand I'm just going to stick with the\nsame key pair\nthere we're going to give that moment to\nlaunch and we're going to go to view\ninstances and so now this one is\nlaunching as it's launching let's just\ngo peek around and see what we can see\nso you know I imagine if we didn't add\nthat file system during the the boot um\nand we were we're adding it after the\nfact we probably could just ran that\nline and added it really easily um I'm\nnot going to bother testing that because\nI just don't want to go through that\ntrouble to do that um I still can't\nremember what these access points are\nfor um but uh it's okay let kind of out\nof the scope for the certified Cloud\npractitioner and then so I'm just\ncurious so we get some nice monitoring\nhere right so that's kind of nice\num I guess they're trying to suggest\nhere like anabis backup data sync\ntransfer so that would just be backing\nup simplify uh automates accelerates\nmoving data okay that's pretty\nstraightforward transfer family fully\nmanaged F SFTP okay so nothing exciting\nthere and we're going to refresh that\nthere and this is initializing so let's\ngo see if we can connect to this one so\nI'm going to go ahead grab that public\nIP address I'm going to hit up\nokay I'm going to swap out that IP\naddress and we're going to see if we can\nconnect to that machine yet so we'll say\nyes and we got into it so that's great\nand so what I'm going to do is go again\ninto the mount directory EFS FS1 LS and\nthere it is I'm going to do cat hello\nworld and so it works and so that's the\ncool thing about DFS is that you have a\na file system that you can share among\nother um uh ec2 instances I'm sure users\ncould connect to it using the NFS\nprotocol I'm not the best at like\nNetwork or storage networking so I'm not\ngoing to show that here to you today but\nthat gives you a general idea of how EFS\nworks again you only pay for what you\nstore it is serverless so we'll go here\nand type delete CU I'm done with this\nI'll probably uh destroy the instance\nfirst it doesn't get mixed\nup and just so we clean up a little bit\nbetter here I'm going to delete these\nKeys\nhere\ndelete okay and we'll go ahead and\ndelete this one as\nwell delete since I'm done with\nthat uh we'll make sure that that is\ntearing down that is good and we'll make\nour way back over here and it says enter\nprobably the ID's name in so we'll enter\nthat in and we hit\nconfirm and we'll see is it deleting I'm\nnot confident with it I'm going to do it\none more time confirm it by entering the\nthe file systems ID so we'll put it in\nagain\nis it destroying I cannot tell there we\ngo so it's destroying we are in good\nshape it is gone our data is gone um but\nyeah that is\n[Music]\nEFS all right let's take a look at um\nthe snow family in ads so if we type in\nsnow up here and we click into ads snow\nfamily this is where we can probably\norder ourselves a device um I might not\nbe able to order them at least when I\noriginally looked at this like way back\nin the day uh it wasn't available in\nCanada so I'm kind of curious to see\nwhat there is but the idea is that\nyou're going to go here and Order and\nyou have some options so you can import\ninto S3 or export from S3 and then down\nbelow we have local compute storage so\nperform local comput storage workloads\nwithout transferring data you can order\nmultiple devices and clusters for\nincreased durability and storage\ncapacity so it sounds like you're not\nyou're not um transferring data you're\njust using it uh locally on uh to um\nit's like basically buying renting\ntemporary computers was just kind of\ninteresting I never saw that option\nbefore but we're going to choose import\ninto ads3 and we're just going to read\nthrough this stuff and it's not my\nexpectation that we're going to even be\nable to submit a job here and you\nprobably don't want to because it's\ngoing to cost money but I just want to\nshow you the process so we can see what\nthere is here so snow job assistance if\nyou're new to snow family run a pilot of\none to two devices so batch file smaller\nthan 1 Megabyte Benchmark and optimize\ndeploy St uh staging\nworkstations discover remediate\nenvironment m al uh issues early files\nand folders name must conform to Amazon\nS3 prepare your Ami once the pilot is\ncompleted confirm the number of snow\nfamily devices that you can copy devices\nto simultaneously follow the best\npractices use the following resources to\nmanage your snow devices so we have iTab\nus openhub and then there's the edge\nclient\nCLI so openhub is a graphical user\ninterface you can use to manage snow\ndevices so that's kind of cool and then\nwe have the CLI which I imagine is\nsomething that's very useful to use so\njust close those off here and then we\nhave other things so I'm going to say I\nacknowledge I know what I'm doing which\nI don't really but that's okay and then\nhere we are going to enter in our\naddress so we say Andrew Brown and I'm\nnot going to I'm not going to enter this\nin for real just whatever so it would be\nToronto exam Pro um Canada oh see so\nthere's there's the thing you can only\nship it to the US and so that's as far\nas I can get okay um and that's the\nthing is like if you really want to know\nad us inside and not you got to be in\nthe US but let's pretend that we do have\nan address in the states what's a very\nfamous address so what is the address of\nthe White House\nokay there it\nis so I'm just going to copy that\nin because again we're not going to\nsubmit this for real I just want to see\nwhat's farther down the line here\nokay uh what's NW\nis that the state it's in Washington\nright is is this part of it NW Northwest\nis that a thing I'm from Canada so I\ncouldn't tell you um so we'll go down\nhere and we have Washington do we have a\nsecond address line it doesn't look like\nit\num we have a zip code I believe this is\nthe zip\ncode and do we need a phone number looks\nlike we do\n416 uh 111 11111 okay okay we have one\nday or two day shipping why not just\nhave one right and so then we can choose\nour type of device so we have snow cone\nsnow cone SSD snow cone optimized I'm\nsurprised I never took a screenshot of\nthis earlier um compute optimized things\nlike that so you can choose which one\nyou want it looks like we're going to\nsee some different options but we'll go\nwith snow cone my snow\ncone and snow cones do not ship with a\npower supply or ethernet cable snow cone\ndevices are powered by by 45 wat CB C uh\nUSBC power supply I'll provide my own\npower supply and cable do not ship with\na power supply re cable that's fine uh\nsnow con Wireless snow con connect to\nyour wireless connection connect the\nbuckets you want there's a bucket we\ncreated\nearlier Computing use comp using ec2\ninstances use a device as a mobile data\ncenter by loading ec2 Ami so here's an\nAmi that I might want to\nuse uh ad iot green validated Ami not\ninterested in Remote device management\nyou can use Ops Hub or Etc to monitor\nreboot your device that's fine and so\nthen we need to choose our security\nkey I don't know if we'll have to set\nthe service R we'll see what happens\nhere and uh we'll let it update that's\nfine and so then I guess we just hit\ncreate job and so I don't really want to\norder one um so I'm not going to hit\nthat button and also it's going to go to\nthe White House and they're going to be\nlike Andrew Brown why did you do that so\nthat's not something I feel like doing\ntoday but at least that gives you an\nidea of that process there and I imagine\nthat uh if you go the other way it's\ngoing to be pretty similar you know it's\njust like same stuff I think uh so you\nit saved that address it's not a real\naddress and the the options are a little\nbit uh limited here and it's like NFS\nBas S3 base so it's slightly different\nbut it's basically the same process just\ncurious we'll take a look at the last\none\nthere since there are three options just\ncurious okay Sim similar thing okay so\nyeah that's pretty much all I want you\nto know about um the snow family and\nthat's about it\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at what is\na database so a database is a data store\nthat stores semi-structured and\nstructured data and just to emphasize a\nbit more a database stores more complex\ndata stores because it requires using\nformal design and modeling techniques so\ndatabases can generally be categorized\nas either being relational so structured\ndata that strongly represents tabular\ndata so we're talking about tables rows\nand columns so there's a concept of row\noriented or colum oriented and then we\nhave non relational databases so these\nare semi-structured that may or may not\ndistinctly resemble tabular data so here\nis a very uh simple example the idea is\nthat you might use some kind of language\nlike SQL put in your database and you'll\nget back out tables for relational\ndatabases let's just talk about some of\nthe functionality that these databases\nhave so they can be uh using a special\nspecialized language to uh query so\nretrieve data so in this case SQL\nspecialized modeling strategies to\noptimize retrieval for different use\ncases uh more fine-tune control over the\ntransformation of the data into useful\ndata structures or reports and normally\na database infers uh someone is usually\nusing a a relational row oriented data\ndat store so um you know just understand\nthat when people say database that's\nusually what they're talking about like\npostgress MySQL relational row store is\nusually the default but uh obviously\nthere's a lot more broader terms there\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at what is\na data warehouse so it's a relational\ndata store designed for analytical\nworkloads which is generally column\noriented data store okay so companies\nwill have terab and millions of rows of\ndata and they'll need a fast way to be\nable to produce analytics reports so\ndata warehouses generally perform\naggregation so aggregation is the idea\nof grouping data together so find a\ntotal or an average uh and data\nwarehouses are optimized around columns\nsince they need to quickly aggregate\ncolumn data and so here is kind of a\ndiagram of um a data warehouse and so\nthe idea is that it could be ingesting\ndata uh from a regular database here I'm\njust getting out my pen tool so it could\nbe regular database or it be coming from\na different data source that isn't\ncompatible in terms of the schema and\nyou use like ETL or El or ETL to get\nthat data into uh that data warehouse so\ndata warehouses are generally designed\nuh to be hot so hot means that they can\nreturn queries very fast even though\nthey have vast amounts of data data\nwarehouses are infrequently accessed\nmeaning they aren't intended for\nreal-time reporting but maybe once or\ntwice a day uh or once a week to\ngenerate business and uh user reports of\ncourse it's going to vary based B on the\num the service that is offering the data\nwarehouse a data warehouse needs to\nconsume data from a relational database\non a regular basis and again it can\nconsume it from other places but you'll\nhave to transform it to get it in there\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we're taking a look at a key\nvalue store so a key value store or\ndatabase is a type of non-relational\ndatabase or nosql that uses a simple key\nValue method to store data and so key\nvalue stores are dumb and fast uh but\nthey generally lack features like\nrelationships indexes aggregation of\ncourse there are going to be providers\nout there have managed solutions that\nmight uh poly fill some of those uh\nissues there but I want to show you the\nunderlying way that key value stores\nwork to kind to kind of distinguish them\nbetween document stores so a key value\nstores literally a unique key alongside\na value and the reason I'm representing\nthat as zeros and ones is because I want\nyou to understand that that's what it is\nit's basically just some kind of of\nthere and how the key value uh store\ninterprets it is going to determine what\nit is so when you look at a document\ndatabase that is just a key value store\nthat uh uh interprets the value as being\ndocuments right and so key value stores\ncan and do commonly store um uh multiple\nuh like an associate array that's pretty\ncommon so even for Dynamo DB that's how\nit does it and so that's why when you\nlook at a key Value Store it looks like\nit uh a a table but it's not actually a\ntable it's schema list because\nunderneath it's really just um you know\nthat associative array and so that's why\nyou can have uh columns or sorry rows\nthat have uh different amounts of\ncolumns okay so due to the design they\nare able to scale very well beyond a\nrelational database and they can kind of\nwork like a relational database without\nall the bells and whistles so hopefully\nyou know that makes sense okay\n[Music]\nall right let's take a look at document\nstores so a document store is a nosql\ndatabase that stores documents as its\nprimary data structure and a document\ncould be an XML uh type of uh structure\nbut it also could be something like Json\nor Json like document stores are\nsubclasses of key value stores uh and\nthe components of a document store are\nvery uh comparable to relational\ndatabases so just kind of an example\nhere where in a relational database\nthat' be called tables now you have\ncollections they were called rows now\nthey're called documents you had columns\nthey had Fields they may have indexes\nand then joins might be called embedding\nand linking so you can translate that\nknowledge over uh you know they they're\nnot as um they don't have the same kind\nof feature set as a relational database\nbut you have better scalability and\nhonestly document stores are just key\nvalue stores with some additional\nfeatures built on top of it\n[Music]\nokay hey it's Andre Brown from exam Pro\nand we're going to take a look at the\nnosql database services that are\navailable on AWS so we have Dynamo DB\nwhich is a serverless nosql key value\nand document database it is designed to\nscale to billions of records with\nguaranteed consistent data returned in\nat least a second you do not have to\nworry about managing shards and Dynamo\nDB is ad's Flagship database service\nmeaning whenever we think of a database\nservice that just scales is cost\neffective and very fast we should think\nof Dynamo DB and in 2019 Amazon the\nonline shopping retail shut down their\nlast Oracle database and completed their\nmigration to Dynamo DB so they had 7,500\nOracle databases with 75 pedabytes of\ndata and with Dynamo DB they reduce that\ncost by 60% and reduced the latency by\n40% so that's kind of to be like a\ntestimonial between relational and a no\nescal database so when we want a\nmassively scalable database that is what\nwe want Dynamo db4 and I really just\nwant to put that there because it if you\nremember that you're going to always be\nable to pass uh or get those questions\nright on the exam okay then we have\ndocument DB so this is a nol document\ndatabase that is mongod DB compatible uh\nso mongodb is very popular no SC among\ndevelopers there were open source\nlicensing issues around using open\nsource mongodb so ad us got around it by\njust building their own mongodb database\nbasically so when you want a mongod DB\nlike database you're going to be using\ndocument DB we have Amazon key spaces\nthis is a fully managed apoe Cassandra\ndatabase so Cassandra is an open source\nnosql key value database similar to\nDynamo DB that is column or store\ndatabase but has some additional\nfunctionality so when you want to use\nApache Cassandra you're using Amazon key\n[Music]\nspaces hey this is Andrew Brown from\nexam Pro and we are taking a look at\nrelational database Services starting\nwith relational database service RDS and\nthis is a relational database service\nthat supports multiple SQL engines so\nrelational is synomous with SQL and\nonline transactional processing\noltp and relational databases are the\nmost commonly used type of database\namong tech companies and startups just\nbecause they're so easy to use I use\nthem I love them um RDS supports the\nfollowing SQL engines we first have\nMySQL so this is the most popular open\nsource SQL database uh and it was\npurchased and is now owned by Oracle uh\nand there's an interesting story there\nbecause when Oracle purchased it they\nweren't supposed to have it Mario DB was\nor sorry myell was sold to Oracle Sun\nsystems and then within the year um uh\nOracle purchased it from them and the\noriginal creators never wanted it to go\nto Oracle um just because of their uh\nthe way they do licensing and things\nlike that and so um the original\ncreators came back and they decided to\nfork myql and then maintain it as Mario\nDB just so that uh you know oracle never\nkind of pushed away the most popular um\ndatabase so that everyone had to go to a\np solution then you have postest so psql\nas it's commonly known is the most\npopular open source SQL database among\ndevelopers this is the one I like to use\nbecause it has so many Rich features\nover my SQL uh but but it does come with\nadded complexity then Oracle has its own\nSQL proprietary database which is well\nused by Enterprise companies but you\nhave to buy a license to use it then you\nhave Microsoft SQL so Microsoft's\nproprietary SQL database and with this\none you have to buy a license to use it\nuh then you have Aurora so this is a\nfully managed database uh and there's a\nlot more to uh going on here with Aurora\nso we'll talk about it it almost acts as\na separate service but it is powered by\nRDS so aora is a fully managed database\nof either myell so five times faster or\npostest SQL three times faster database\nso when you want a highly available\ndurable and scalable and secure\nrelational database for post mqu you\nwant to use Aurora uh then you have\nAurora serverless so this is a ser on\ndemand version of Aurora so when you\nwant the most of the benefits of Aurora\nbut you can trade uh off to have cold\nstarts or you don't have lots of traffic\nor demand uh this is a way you can use\nAurora in a serverless way then you have\nRDS on VMware so this allows you to\ndeploy RDS supported engines to on\npremise data centers uh the data center\nmust be using VMware for Server\nvirtualization so when you want\ndatabases managed by RDS on your own\ndatabase Center uh and yeah I realize\nthat this is a small spelling mistake so\nsay just on here but yeah there you\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we're looking at the other\ndatabase services that abos has because\nthere's just a few loose ones here so\nlet's talk about redshift so it is a\npetabyte size data warehouse and data\nwarehouses uh are for online analytical\nprocessing oap and data warehouses can\nbe expensive because they are keeping\ndata hot meaning that they can run a\nvery complex query and a large amount of\ndata and get that data back very fast so\nwhen you need to quickly generate\nanalytics or reports from a large amount\nof data you're going to be using red\nshift then you have elastic cache so\nthis is a managed database of an\ninmemory and caching open source\ndatabases such as reddis or memcache so\nwhen you need to improve the performance\nof an application by adding a caching\nlayer in front of your web servers or\ndatabase you're going to be using\nelastic cache then you have Neptune this\nis a managed graph database the data is\nrepresented as interconnected nodes I\nbelieve that it uses gremlin is the way\nto interface with it which is no\nsurprise because that's what it looks\nlike most class providers are using so\nwhen you need to understand the\nconnections between data so mapping\nfraud Rings or social media\nrelationships uh very relational\ndatabase heavy information you're going\nto want to use Neptune we have Amazon\ntime streams it's a fully managed time\nseries database so think of devices that\nsend lots of data that are\ntime-sensitive such as iot devices so\nwhen you need to measure how things\nchange over time we have Amazon Quantum\nLedger database this is a fully managed\nuh Ledger database that provides\ntransparent immutable cryptographically\nvariable transaction logs so when you\nneed to record a history of financial\nactivities that can be trusted and the\nlast one here is database migration\nservice DMS it's not a database per se\nbut it's a migration service so you can\nmigrate from on premise database to\nadabs from two databases in different or\nsame adus accounts using different SQL\nengines and from an SQL to a nosql\ndatabase and I'm pretty sure we cover\nthis in a bit uh greater detail in this\ncourse\n[Music]\nokay all right let's go take a look at\nDynamo DB uh which is ad's nosql\ndatabase so we'll go over to Dynamo\nDB and what we'll do is create ourselves\na new table and we'll just say my Dynamo\nDB table and you always have to choose a\npartition key you don't necessarily have\nto have a sort key but it could be\nsomething\nlike um like you want it to be really\nunique so it could be like email and\nthis one could be created at\nright and so we have string binary\nnotice that the the types are very\nsimple then for settings we have default\nsettings or customized settings so the\ndefault is use provision capacity mode\nrewrite five rules Etc custom no\nsecondary indexes use KMS so I'm going\nto just expand that to see what I'm\nlooking at we have two options here on\ndemand uh so simplify billing by paying\nthe actual reads and rights you use or\nprovisioned which is this is where you\nget a guarantee of performance so if you\nwant to be able to do you know whatever\nit is a thousand I don't know what it\ngoes up to but like a thousand read\nwrites per second then that's what\nyou're paying for okay you're paying for\nbeing a having a guarantee of that um of\nthat capacity okay I'm not going to\ncreate any secondary indexes but that's\njust like another way to uh look at data\nnotice down below that we have a cost of\n$2.1 uh then we have encryption at rest\nso you can do owned by Amazon Dynamo DB\nthat's pretty much the same as like adab\nus has or S3\nhas ssse S3 there you could use uh CM\nactually I guess both of these are\nprobably KMS I would imagine we'll go\nahead and create the table\nhere and let going to create the table\nthis is usually really really\nfast we'll go here and what we can do is\nis insert some data so as it's just\nstarting up here we can go over\nto our tables they recently changed this\nUI so that's why I look a bit\nconfused U view items up here okay and\nthen from here we can create an item so\nI can add something to say so Andrew\nexampro doco and\n2021\nuh well we'll just do the future so\nlet's say 20\n25 505 I don't want to have to think too\nhard here but we can add additional\ninformation so I can say like uh today\ntrue we could say\num make like a\nlist uh you know food and then I could\ngo here and then add a\nstring it is not working oh there we go\nthere we are so we could say like um\nbanana and then we could say pizza right\nwe can go ahead and create that\nitem and so now that item is in our\ndatabase uh we can do a scan that will\nreturn all items we can query we can\nactually have uh some limitations of\nwhat we're choosing there's the party Q\neditor so we can use SQL to select it um\nI have not used this\nbefore party Q um AWS or party Q Dynamo\nDB\nexamples I'm hoping I can just find like\nan example of some of the language\ngetting started here I don't need to I\ndon't need an explanation I just show me\nan example query here and I will I'll\nget to it\nhere okay so here's some examples right\nso maybe we can give this a\ngo um so we have our table here so my\nDynamo DB\ntable and I just want the email that\nback we don't need a\nwear we'll run this see if it\nworks there we go I'm not sure if we\ncould select additional data there so I\nknow that we had some other things like\nuh\nfood there it is okay so that's really\nnice um addition to it dynb can stream\nthings into a Dynamo DB stream to go to\nand do a lot of fun things so there all\nsorts of things you can do with Dynamo\nDB but um I'm pretty much done with this\nso I'm going to go ahead and delete this\ntable and notice that it also created\nsome cloudwatch alarms so we want to\ndelete those as well create a backup no\nwe do not care go ahead and delete\nthat and that is Dynamo\n[Music]\nDB okay so now I want to show you uh RDS\nor relational database service so go to\nthe top here type in RDS and we'll make\nour way over there and so RDS is great\nbecause it allows us to launch\nrelational databases um sometimes the UI\nis slow I'm not sure why it's taking so\nlong to load today but every day is a\nbit different and so what we're going to\ndo is go ahead and create a new database\nuh you're going to notice that we're\ngoing to have the option between\ncreating a standard or easy I stick with\nstandard just because I don't like how\neasy hides a lot of stuff from us even\nhere like it says two cents per hour but\nit's not giving us the full cost so I\nreally don't trust it because if you go\ndown here and you chose their Dev test\nhere look it's like $100 it's not\nshowing the the cost preview right now\nmaybe because we didn't choose the\ndatabase type sorry I wanted to choose\npostgress but before we do that let's\nlook at the engine types we have Amazon\nAurora so we have between MySQL and\npostgress MySQL Marb postgress Oracle\nmicrosoftsql notice for Microsoft SQL it\ncomes with a license you don't have to\ndo anything with that it might change\nbased on the addition\nhere uh nope comes with a license for\nall them which is great if you want to\nbring your own license that's where you\nneed a dedicated host right running uh\nMicrosoft SQL for Oracle uh you have to\nbring your own license that's going to\nbe based on um importing with the Abus\nlicense manager if we go over to postest\nwhich is what I like to use uh we're\ngoing to set it to Dev test to try to\nget the cheapest cost scroll down look\n$118 we can get it cheaper we get super\ncheap so here are the password going to\nbe testing 1 2 3 a capital on the T so\nand an explanation mark on the end okay\nbecause it has a bunch of requirements\nof what it wants here I want a T2 micro\nso I'm just going to scroll down\nhere what is going on here standard oh\nlook M classes I don't want an m class I\nwant a burstable class that's the cheap\nones and so we go here can we still do a\nT2 micro or is it now\nT3 so I don't see\nT2 so I imagine a T3 micro must be the\nnew itus free tier so we go it free tier\nhere right and if I go\nto\ndatabases um RDS on the t2 micro 750\nhours but I can't select\nit\nso I'm going to assume that the T3 micro\nmust be the new tier if it's not there\nright unless it's saying include\nprevious\ngenerations and then maybe I can see it\nthen okay so I don't see it\nthere I really don't like how they've\nchanged this on\nme okay so the oldest I can choose is a\nT3 micro which is fine I just I just\nknow T2 being the free tier that's all\nuh this is fine we don't want Auto\nscaling turned on for our example here\nwe do not want a multi-az so do not\ncreate a standby that's going to really\njump up our cost we don't need Public\nAccess it will create a VPC that is fine\npassword authentication is fine we have\nto go in here which I don't know why\nthey just don't keep that expanded\nbecause you always have to come in here\nname your database so my database we\nchoose our postest version here I'm\ngoing to turn backups off uh because if\nwe\ndon't if we don't it's going to take\nforever to launch this thing encryption\nis turned on you can turn it off but\ngenerally it's not recom commended we\ncan have performance insights turned on\nI'm going to turn the retention oh we'll\nleave it to 7 days cuz we can't turn\nthat off we don't need enhanced\nmonitoring so I'm just going to turn\nthat\noff and uh that's fine we're not going\nto enable delete protection here and so\nwe are good we can now go ahead and\ncreate our\ndatabase and what we'll do here is wait\nfor that database to be created so the\nthing is is like\nif we're doing the solutions architect\nor the developer social stuff I'd\nactually show you how to connect to the\ndatabase um it's not that hard to do\nlike you just have to connect uh grab\nall the database information so it's\ngoing to have an endpoint a port stuff\nlike that and you use something like\ntable Plus or something to connect to\nthe database but that's out of scope of\nthe certified Cloud partitioner I'm just\ngoing through the motions to show you\nthat you can create an RDS database very\neasily but not how to connect to it and\nactually utilize it okay and so that\nwould spin up and we would have a server\nand after that we can just go ahead and\ndelete the server here so I just say\ndelete me\nokay and that's all there really is to\nit there is the special type of um\ndatabase like Aurora doesn't have its\nown like console page it's part of RDS\nso if you want to spend up Aurora you\njust choose the compatibility you want\nyou can choose between provisioned or\nserverless um and serverless is supposed\nto be really good for um scaling to zero\ncost so that's something there so you\nfill that all out but the initial cost\nis a lot more expensive you can't choose\na T2 micro here um unless it lets you\nnow it is\nfor provision it's\nuh oh T2 T3 medium is the smallest you\ncan go okay so if you reach to the point\nwhere using a a mediumsized database\nthen you might consider moving over to\nAurora just because it's going to be\nhighly scalable Etc like that um so\nthat's a consider there there's also\nsomething called Babble fish um that us\nannounced last year when I when I shot\nthis um or when I'm shooting this as of\nnow and the idea was to make it\ncompatible with myql SQL Server to\nmigrate over to Aurora post SQL which is\nkind of interesting um but that's about\nit so if our database is destroying I\nthink it is just going to go back over\nhere to\nRDS it's taking a long time to load\ntoday\nand uh I think it's already deleted\nmaybe we go to databases here it's\ndeleting so I'm confident it's going to\ndelete so there we\n[Music]\ngo all right let's take a look at Red\nshift so red shift is a data warehouse\nand it's generally really expensive so\nit's not something that you're going to\nwant to launch uh dayto day here but\nlet's see how far we can get with it um\njust by running through it so what we'll\ndo is go ahead and create a cluster and\nagain you can just watch me do this you\ndon't have to create uh you don't have\nto create one yourself uh so free trial\nconfigure for learning that sounds good\nto me uh is free for limited time if\nyour organization has never created a\ncluster I rarely ever create these so\nwhen the trial ends delete your cluster\nto avoid the charges of on demand okay\nthat sounds fair um so here we're going\nto have two vpcu it's going to launch a\nd a\ndc2\nlarge so it's look that up for\npricing show me prices please please\nplease\num I think it's loading right here okay\nso I don't know how much it is but I\nknow it is not cheap and down below we\nhave sample data is loaded into your red\nshift cluster that sounds good to me\nticket is the sample data\nokay ticket sample\ndata red shift I just imagine they\nprobably have like a tutorial for it\nhere\nthey do right\nhere and so because I want to know what\nwe need to do to query it right if we\ncan even query it via the interface here\nso the admin user is adus user um and\nthe password is going to be capital T\ntesting 1 2 3 4 5 6 exclamation and\nwe'll hit create\ncluster oh cool we can create the data\nright in here so that's what I wasn't\nsure about whether we would be able to\njust query it in line because before\nyou'd have to use Java with j jdbc or\nodbc driver and download the jar and\nit's not as fun as it sounds of course\nbut it looks like we can query data once\nthe data is\nloaded so that looks really good I guess\nwe can pull data in from um the\nmarketplace so that's looks pretty nice\ntoo and I guess we could probably\nintegrate into other things like quick\nsite because you probably want to adjust\nyour data over\nthere again I usually don't spend a lot\nof time in red shift um but looks like\nit's a lot easier to use very impressed\nwith this so I don't know how long it\ntakes to uh launch a red shift cluster I\nmean it is 160 GB uh of of of storage\nthere it's uh even at the smallest it's\npretty large so what I'm going to do is\nto stop the video and I'll be back when\nthis is done\nokay okay so after a short little wait\nhere um it was a lot faster than I was\nexpecting but uh it's available and so\nlooks like here it says to query the\nsample data use red shift version two so\nI'm going to click that and I'm sure\nthere's tons of buttons to get here and\nit'd be great if it just populated the\nquery for me um it doesn't but this\nlooks really nice really nice UI I\nwonder if it has like some existing\nqueries no that's okay so what I'm going\nto do here is I'm going to go ahead and\npull out this query and see if we can\nget this to work here never found out\nwhat those prices were\nthough okay and what we'll do is hit run\nI like how there's like a limit of 100\nbut here it has that so we'll go ahead\nand hit run and see what data we get so\nrelation sales does not\nexist okay\nso what's going on\nhere um we'll go up here so most of the\nexamples in the red shift documentation\nuses uh a sample database called ticket\nthis sample this small database consists\nof seven tables you can load the ticket\ndata set by following the this\nhere okay so to load the sample data\nfrom Amazon S\n3 okay\nso I would have thought it already had\nthe data in there I could have swore it\nwould\nhave\nDev\npublic\ntables zero\ntables okay so I don't think there's any\ndata in here and so we're going to have\nto load it ourselves\nI really thought it would have added it\nfor us uh but let's go ahead and create\nthese tables and see if this is as easy\nas we think so run that create that\ntable cool okay we got it down\nhere we'll run that we'll just run each\nat a\ntime I think there's seven of them so\ndate already exists okay that's fine\nevent already exists saying all these\ntables\nexist maybe I just wasn't\npatient\nokay\num interesting all right so maybe we'll\ngo back and uh run that query maybe we\njust had to wait a little while for that\ndata to\nload run\nokay so you know what I think it was\ndoing this for us like if if if it did\nnot create it for us we would have to go\nthrough all these steps which is fine\nbecause we're learning a little bit\nabout um uh red shift but um uh it looks\nlike we just had to wait there so it\nlooks like you would run those you\ndownload that you use the copy command\nto bring it over there um it looks like\nyou can do all of this via the uh this\ninterface here and we've done a queries\nthat's kind of\ncool um I imagine you probably could\nlike save it or export it what if we\nchart it what happens okay you can chart\nit that's kind of\nfun can we export it out to oh just we\ncan save it I thought maybe it could\nexport out to Quick site but I I suppose\nyou'd rebuild it in quick site a but\nyeah I guess that's it right there so\nthat's pretty darn simple so what I'm\ngoing to do is make my way back over to\nRed shift because we are done for this\nexample and we will go over to clusters\nhere and I'm going to go ahead\nand delete my\ncluster\ndelete create file snap shot\nnope\ndelete delete the cluster there we go so\nI'm pretty sure that will succeed no\nproblem there and we are done with red\nshift and red shift is super expensive\nso just make sure that thing deletes\nokay\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are taking a look here at Cloud\nnative networking Services um and so I\nhave this architectural diagram I\ncreated which has a lot of networking\ncomponents uh when people create\nnetworking diagrams for AWS they don't\nalways include all these things here\neven though they're there so we're just\nbeing a little bit verbo so you can see\nokay the first thing is our VPC our\nvirtual private Cloud this is a\nlogically isolated section of the aabus\ncloud where you can launch adus\nresources that's where your uh resources\nare going to reside not all services uh\nrequire you to select a VPC uh because\nthey're managed by AWS but I wouldn't be\nsurprised if under the hood they are in\ntheir own VPC Okay then if you want uh\nthe internet to reach your services\nyou're going to need an internet gateway\num then you need to figure out a way to\nRoute things to your uh various subnets\nand that's where route tables uh come in\nthen we need to Def Define a region that\nit's going to be which is a geographical\nlocation on your network then you have\nyour availability zones which are\nbasically your data centers where your\nA's resources are going to reside then\nyou have subnets which is a logical\npartition of an IP network into multiple\nsmaller Network segments um and these\npretty much map to your uh availability\nzones if you're making one per a and\nthen we have knackles these act as a\nfirewall at the subnet level then we\nhave security groups that act as a\nfirewall at the instance level so\nhopefully that gives you a good overview\n[Music]\nokay all right so now let's take a look\nat Enterprise or hybrid networking so we\nhave our on premise uh environment or\nyour private cloud and then we have our\nads account or our public Cloud so\nthere's a couple Services here that we\ncan Bridge them together the first is\nADS virtual private Network VPN it's a\nsecure connection between on premise\nremote offices and mobile employees then\nyou have direct connect this is a\ndedicated gigabit connection from on\npremise data center to adabs so it's a\nvery fast connection a lot of times the\ndirect we say it's a a private\nconnection but doesn't necessarily mean\nsecure it's not encrypting uh the data\nin transit so very commonly these\nservices are used together not just\nsingular okay um and then uh we have\nprivate links and so this is where you\nalready uh are using ads but you want to\nkeep it all within ads never going out\nto the internet okay so these are\ngenerally called VPC interface endpoints\nand then the marketing Pages call them\nprivate links which is a bit confusing\nbut you know it just keeps traffic\nwithin the aabus network so it does not\ntransverse out to the internet okay\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are taking a look at vpcs and\nsubnets so a VPC is a logically isolated\nsection of the adus network where you\nlaunch your adus resources and you\nchoose a range of ips using a cider\nrange so a cider range is an IP address\nfollowed by uh this uh net mask or sub\nsubmask that's going to determine how\nmany IP addresses there are um and\nthere's a bunch of math behind that\nwhich we're not going to get into um but\nanyway so here is an architectural\ndiagram just showing a VPC with a couple\nsubnets so subnets is a logical\npartition of an IP network into multiple\nuh smaller Network segments and so\nyou're essentially breaking up your IP\nranges for vpcs into smaller networks so\njust thinking about cutting up a pie\nokay so subnets need to have a smaller\ncider range uh to uh the vpcs represent\nfor their portion so uh 424 is actually\nsmaller which is interesting the the\nhigher the gets the smaller it gets and\nso this would allocate 256 IP addresses\nand so that's well smaller than 16 okay\nwe have the concept of a public subnet\nso this is one that can reach the\ninternet and a private subnet the one\nthat cannot reach the internet and um\nthese are not uh strictly enforced by\nAWS so the idea is that when you have a\nsubnet you can just say don't by default\nassign publicly assignable IP addresses\nbut it's totally possible to launch an\nec2 instance into your priv private\nsubnet and then turn on um uh the IP\naddress so you got to do other things to\nensure that they stay private or public\n[Music]\nokay hey it's Andrew Brown from exam Pro\nand we are comparing security groups\nversus knackles so I have this nice\narchitectural diagram that has both\nknackles and security groups in them and\nwe'll just kind of talk about these two\nso knackles stand for network access\ncontrol list and they act as a virtual\nfirewall at the subnet level and so here\nyou can create an allow uh and deny\nrules and this is really useful if you\nwant to block a specific IP address\nknown for abuse and and I'm going to\njust kind of um compare that against\nsecurity groups because that's going to\nbe a very important difference okay so\nsecur security groups act as a firewall\nat the instance level and they\nimplicitly deny all traffic so you\ncreate only allow rules so you can allow\nan E2 instance to access port on uh Port\n22 for SSH but you cannot block a single\nIP address and the reason I say that is\nbecause in order for you to block a\nsingle IP address in Security Group you\nwould literally have to block or you\nliterally have to allow everything but\nthat IP address and that's just not\nfeasible okay and so if you can remember\nthat one particular example you'll\nalways be able to remember the\ndifference between these two one other\nthing that um adab us likes to do is is\nask which ones are stateless which ones\nare stateful but at the uh Cloud\npartitioner level they're not going to\nbe asking that\n[Music]\nokay all right all right let's learn a\nbit about U networking with AWS so what\nI want you to do is go to the top and\ntype in VPC which stands for virtual\nprivate cloud and what we'll do is set\nup our own VPC it's not so important\nthat you remember all the little bit of\ndetails but you get through this so that\nyou can remember the major components so\nwhat I'll do is create a new VPC I'm\ngoing to call this my\nVPC uh tutorial and here I'm going to\nsay\n10.0.0.0 for sl16 the reason you're\nwondering why I'm doing that if we go to\nxyx\ny z here um this tells you the size of\nit so I go here and I put 16 so you can\nsee we have a lot of room if we do\n24 it takes up it it it's smaller see so\nthis is basically the size of it right\nthe empty blocks over here so we're\ngoing to have a lot of room so we do 10\n006 we don't need IPv6 we're going to go\nahead and create that and once we have\nthat we can go ahead and create a subnet\nwhich we will need so we're going to\nchoose our VPC we'll go down here and\nsay my Subnet tutorial\nand we'll choose the first a z you can\nleave it blank and'll choose it random\nand then we need to choose a block that\nis smaller than the current one so 16\nwould be definitely um uh well 16 is the\nsize that we have now so we can match\nthat size but 10.0.0.0 424 would be\nabsolutely smaller okay so we go ahead\nand create that\nsubnet and so that is all set up now um\nlet's see if our route tables hooked up\nso our route table says where it links\nto and it says to local so it's not\ngoing anywhere and that's because we\nneed to attach a u internet gateway that\nallows us to reach the internet so if we\ngo over here and create a new internet\ngateway we'll say myig\nGW and we'll go ahead and create\nthat and what we'll do is associate that\nwith our VPC we created here okay and so\nnow that we have the internet gateway\nattached we want that subnet to make its\nway out to the Internet so if we go to\nthe route table we can edit the uh route\ntable Association here I like how it\nkeeps on showing me this as if I don't\nknow what I'm doing um but I do and\nso this would change that particular\nAssociation but I want to add to that\nroute table so I thought when I clicked\nthat it would allow me to add more but\napparently I got to go to Route tables\nover\nhere and I'm looking for the one that is\nours we can see that it's over here we\ncould even name it if we wanted to like\nmy rote\ntable Noti then we apply uh uh U names\nit's actually just applying a tag see\nover here it's always what that\nis so we'll go over to routes and we\nwant to edit the routes and we want to\nadd a route and we want this to go to 00\nand we're going to choose the internet\ngateway\nokay we're going to say save\nchanges and what that's going to allow\nus to do is to reach the internet\num and so what I want to do is go back\nto subnet I was just curious about this\nI've never used this\nbefore um so looks like we can just\nchoose some options here I'm not too\nconcerned about that but I assume like\nthat's used for debugging azure's had\nthose kind of services for a long time\nand so it was has been starting to add\nthose so you can easily debug your\nnetwork which is nice so we have a\nsubnet the subnet uh can reach the\ninternet because there's a there's um\nuh internet gateway and it's hooked up\nvia the route table one thing that\nmatters is will it assign a public IP\naddress um so that is something that we\nmight want to look into it's not the\ndefault subnet which is totally fine so\nit says Auto assign is no so that might\nbe something that you might want to\nchange so here we go to edit the r table\nAssociation no it's not there they\nchanged it on me used to be part of the\nuh setup instructions us to just\ncheckbox it now they moved it modify the\nauto assign so we'll say enable so that\nmeans it's always going to give it a\npublic IP address on\nlaunch and while we're here I'm just\ngoing to double check if I have any\nelastic IPS I did not release okay just\ndouble checking here and\nso this is all set up and we should be\nable to launch a um ec2 now within our\nour new VPC so I'll go over here to\nec2\nokay and I'm going to launch a new\ninstance\nsay Amazon elix\n2 we're going to choose this tier\nHere and Now what we should be able to\ndo is Select\nthat and that is our subnet there\nokay go ahead and launch that I don't\ncare if we use a key whatsoever so I'm\ngoing to go ahead and launch that\nthere okay we'll go\nback and so there you go it is launching\nso we created our VPC and we launched uh\nin it no problem\nwhatsoever so hopefully that is pretty\ndarn\nclear um so yeah uh what I'm going to do\nis I'm going to let that launch because\nI want to show you security groups So\nwithin AWS you can set security groups\nand\nknackles and that's going to allow or\ndeny access based on stuff and when we\nlaunch this eccu instance it has a\ndefault security group that was assigned\nwe could have created a new one but what\nI might want to do is create myself a\nnew Security Group\nhere okay and you can end up with a lot\nreally fast like here is a bunch and I\ncan't even tell what's what so like\nthere's Bunch for load balancers and\nthings like that and so I might just go\nahead and delete a bunch of these\nbecause I cannot tell what is going on\nhere and um we'll delete these security\ngroups and sometimes they won't let you\ndelete them because they're associated\nwith something like a network interface\nor\nsomething all right but um we need to\nfind out which one we're using right now\nso the one that we are using is the\nlaunch wizard 4 so we'll go into\nhere and I don't know if you can rename\nthem after they've been created I don't\nthink so which is kind of frustrating\nbecause if you want to rename it it's\nlike I don't want that to be the name so\nwhat's interesting is you can go here\nand you can edit the\nroutes uh the rules sorry the inbound\nrules and the outbound rules and so here\nit's open on Port 22 so that allows us\nto ssh in we could drop this down and\nchoose different things so if we want\npeople to access a website we go Port 80\nand we say from anywhere ipv 46 so now\nanyone can access it um you might want\nto do something like give it access to\npostgress that runs on Port 5432 things\nlike that um could be something else\nlike maybe you need to connect to Red\nshift that's on that Port you can go\nahead and save those rules we're just\ngoing to say uh from anywhere you can\nsay my IP so maybe only I'm allowed to\nconnect to it right so you added inbound\nrules you don't really ever have to\ntouch outbound rules it's set for all\ntraffic so it's stuff that's\nleaving uh the that there one\ninteresting thing to note about uh\nsecurity groups is\nthat you don't have a deny option right\nso let's say you only wanted a\nparticular IP address you only wanted um\nlet's say what's my IP my IP\naddress so that is my IP address and\nlet's\nsay I wanted to block it right so I go\nhere and I say okay I want to\nblock on all TCP I want to block this\nnumber right but I can't do that all I\ncan say is I allow this number so in\norder to do it I would have to enter\neverything but this number in here and\nyou can enter ranges in with like these\nforward slashes and stuff like that but\nYou' imagine that'd be really hard\nbecause you have to start and go like\nyou'd have to start and go through every\nsingle IP address in the world to get it\nout of here and that's almost impossible\nand that's the key thing I want you to\nremember about security\ngroups um so that's security groups and\nthere's also\nknackles knackles um they're associated\nwith subnets so they probably show up\nunder VPC I rarely touch knackles rarely\never have\nto um I mean they're great tools but you\nknow for me I I just don't ever need\nthem so knackles are associated with\nsubnets so we can go here and try to see\nmy Subnet tutorial so we created our\nsubnet we got a knle for free and we can\nset inbound and outbound rules and so\nhere here is where we could say Okay I\nwant to add a new rule and I want to and\nI want to make the rule number\n150 you always do these in hundreds okay\nor the power of tens so that you can\nmove them around easily and I can say\nall traffic that comes from this IP\naddress I'm going to put the forward SL\nZ that just means a single IP address I\nsay deny right and so now\nuh this my address I can't access that\nec2 instance okay if I try to go there's\nnothing running on the server but if I\nwas to try to use it I wouldn't be able\nto do it and and this applies to\nanything for that subnet it's not for a\nparticular instance it's for anything in\nthat subnet so hopefully that is is\npretty clear there um but that's pretty\nmuch all you really need to know I mean\nthere's lots of other stuff like Network\nfirewalls all these other things it gets\npretty\ncomplicated um it's well beyond what we\nneed to learn here but uh what we'll do\nis tear down that ec2 instance\nokay we'll terminate\nthat and once that instance is destroyed\nwe can get rid of our security group and\na bunch of other\nstuff and there's always a bunch of\nthese darn\nthings so we'll say\ndelete one Security Group\nAssociated so we go here this is the one\nwe are using but I want to get rid of\nall these other ones\nokay if I go here it could be because\nlike of inbound\nrules so see this one because you can\nreference another Security Group within\na security group so I'm just going to go\nsave that there say any my IP there\nwhoops it's set to n uh NFS so that\nmight have been set up for our access\npoint or I can just delete delet it that\nwould probably be\neasier okay so that's one that's kind of\nof a\npain so I'm just looking for rules that\nmight be referencing other security\ngroups to get rid of\nthem okay let's try this\nagain we go ahead and delete I'm leaving\nthe um\nI'm leaving the uh the defaults alone\nbecause those come with your vpcs and\nyou don't want to get rid of\nthose so it won't let me delete this one\nso I'm going to go edit that\nrule delete it save it you might not\nhave this kind of clean up to do it's\njust might be me here you\nknow um outbound\ninbound let's try this again here\ndelete and I'll open this one\nup must be this one that is referencing\nthe other\none just going to delete the\nrule and this is something that's just\nkind of frustrating with AWS but it's\njust just how it is where sometimes it's\nhard to get rid of resources because you\nhave to click through stuff so it's not\nalways a clean you might have like\nlingering resources and this isn't going\nto cost us anything but it's just the\nfact that\num that it just makes things harder to\nsee what you're doing you\nknow this last one really doesn't want\nto go\naway so I'm just trying to delete all\nthe rules out of here get rid of it\ncan I delete this one\nnow one group Associated it will not\nshow me what it's talking about okay\nhere it\nis\num okay this is referencing\nit I think it was the one there was an\nold one I don't know what this\nis we'll go down here\nand we'll go here and delete that and\nwhile I've been cleaning all these up\nnow we can go over to our inst instance\nmake sure that it's terminated it is\ngood because if our instance is not\nterminated we cannot destroy the VPC uh\nprior the VPC could not be destroyed\nunless you detach the internet gateway I\nwonder if it's going to still complain\nabout\nthat we'll say yes it actually looks\nlike it includes it in the\ncleanup type delete here\nthere we go so we're all good we're all\ncleaned up there you\n[Music]\nare hey this is angre Brown from exam\nPro and in this video I just want to\nshow you cloudfront so let's make our\nway over to cloudfront cloudfront is a\nContent delivery Network and it's used\nto cash your data all over the place as\nyou can see I have some older ones here\nif you have a splash screen what you can\ndo is just look for the left hand side\nthere might be hamburger menu open that\nup and then click on distributions and\nwhat we're going to do is create a new\ndistribution if you don't want to create\none cuz these do take forever to create\num you can just kind of watch along I\ndon't even feel like I'm going to hit\nthe um the create distribution button\nbecause I just hate waiting for so long\nbut the idea is that you have to choose\nan origin and so the origin could be\nsomething like an S3 bucket load bouncer\nmedia store this is where um the the\ncontent distribution network is going to\nSource its content right so if I say\nthis bucket here um and I just it will\nprobably default to the root path the\nidea is that it's going to be able to\npull content from there and then cach it\neverywhere and then down below you can\nsay okay set the type of protocol\nredirect to here you can set up uh\ncaching rules or like how often do you\nwant it to uh cash like cash a lot don't\ncash a lot the great thing is like you\nhave these Edge or these um Lambda Edge\nfunctions so you can uh read and modify\nthe request and response to the CDN\nwhich is very powerful but what I'm\ngoing to do is I'm just going to go look\nat what we already have cuz again I said\nsaid they take forever to spin up and\nwe're not going to see too much if we do\nso once it's spun up um this is what it\nlooks like so you'll have an origin it\nsays where it's pointed to you can\ncreate multiple Origins group them uh\nyou can modify your behavior so that was\nbasically what we're looking at before\nas you can see we have our Behavior\nthere nothing super exciting we can set\nup error Pages you can restrict based on\ngeographical location so if you're for\nwhatever reason if you if you're not\nallowed to serve content in UK you could\nsay exclude this geographical region\nright so you have an allow list or a\nblock list saying like Okay we can't do\nUK because like let's say you just don't\nwant to do um say England you don't want\nto do um uh gdpr for whatever reason you\ncould block out I don't know why I'm\nhaving a hard time here Britain England\nit's England right United Kingdom there\nwe go so you just say okay forget United\nKingdom I don't have to do GDP now uh\nfor invalidations the idea is that you\nknow it is a cash so things can get\nstale or just persist and so here you\ncan just type in say I want to get rid\nof image.jpg and then you create that in\nvalidation and then it will go delete it\nout of the cache and so the next time\nsomeone requests they'll get the the\nfresh content this usually doesn't take\nthat long but that's pretty much\ncloudfront in a nutshell\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at ec2 also\nknown as elastic cloud and so this is a\nhighly uh configurable virtual server or\nit's also known as a virtual machine and\nthat's what we're going to generally\nrefer to it uh ec2 is resizable compute\ncapacity it takes minutes to launch new\ninstances and anything and everything on\nadus uses ec2 instances underneath\nthat's why we generally call it the\nbackbone to all the adus services and uh\nyou're going to just have to choose a\nfew options here so the first thing\nyou'll need to do is choose your OS via\nyour Amazon machine image so that's\nwhere you get red hat Ubuntu Windows\nAmazon Linux Seuss it might also come\nwith pre-installed libraries and things\nlike that then you're going to choose\nyour instance type that's going to\ndetermine things like your vcpus your\nmemory so here you can see how many\nthere are and you'll have like a monthly\ncost and that's the name of the instance\ntype then you have to add storage so\nvery commonly you're attaching elastic\nblock storage or elastic files system or\nservice uh and so you know if you do\nchoose your EBS uh you are going to have\nto determine what type it is so whether\nit's a solid state drive a hard disk\ndrive a Magnetic Tape or even attaching\nmultiple volumes not just a single one\nand the last thing is configuring your\ninstance so this is configuring the\nsecurity groups the key pairs user data\nIM roles placement groups all sorts of\nthings so we will experience in that\nbecause we will show you how to launch\nit easy to instance and it'll make a lot\nof sense if it does not make sense right\nnow\n[Music]\nokay all right let's take a look here at\nec2 instance families so what are\ninstance families well instance families\nare different combinations of CPU memory\nstorage and networking capacity and\ninstance families allow you to choose\nthe appropriate combination of capacity\nto meet your application's unique\nrequirements different instance families\nare different because of the varying\nHardware used to give them their unique\nproperties and we do talk about this\nthing about uh capacity reservation\nwhere adus can actually run out of a\nparticular type of instance family\nbecause they just don't have enough\nHardware in that data center and so you\nhave to reserve it but let's go through\nthe different types of instance families\nthe first is general purpose and these\nare the names of the different families\nuh very popular ones is the t2 um the t2\nand one that's really interesting is the\nMac which actually allows you to run um\na a Mac server so these are great\nbalance of compute memory and network\nresources so you're going to be using\nthese most of the time the use cases\nhere would be web servers code\nrepositories things like that then you\nhave compute optimize so um they all\nstart with C no surprise there they're\nideal for compute bound applications\nthat benefit from high performance\nprocessor their edge cases here are\nscientific modeling dedicated gaming\nservers ad server engines things like\nthat then you have memory optimized um\nand so there's a variety here these are\nfast performance for workloads that\nprocess large data sets in memory um\nthey're great for in-memory caches\nin-memory databases real-time big data\nanalytics then you have accelerated\noptimize so this is your P2 P3 P4 things\nlike that these are Hardware\naccelerators or co-processors these are\ngreat for machine learning computational\nFinance seismic analysis speech\nrecognition if you're doing um uh ML on\nAWS you're you'll start coming across\nthese types ads technically has a\nseparate page on sagemaker ML machines\nbut they're all pulling from these\ninstance families okay then you have\nstorage optimize so I3 i3en things like\nthat these are highly High sequential\nread and write access to very large data\nsets on local storage the use cases here\nwould be nosql in memory or\ntransactional databases data warehousing\nfor the certified Cloud practitioner you\njust need to generally know these five\ncategories not the names of the instance\nfamilies if you're doing um Associates\nor above you definitely want to know\nthese things in a bit more detail and I\nwant to say that commonly instance\nfamilies are called instance types but\nan instance type is a combination of\nsize and family but even aws's\ndocumentation doesn't make this family\ndistinction clear but I know this\nbecause you know an Azure they make that\nvery clear and and gcp and so I'm bring\nthat language over here to just kind of\nnormalize it for you okay\n[Music]\nlet's take a look at what ec2 instance\ntypes are so an instance type is a\nparticular instance size and instance\nfamily and a common pattern for instance\nsizes you'll see is things like Nano\nmicro small uh medium large x large 2x\nlarge 4X large 8X large and you know\ngenerally they're to the power of twos\nbut sometimes it'll be like 12 14 16 or\nit's even uh and so when you you go to\nlaunch your ec2 instance you're going to\nhave to choose that instance type and so\nhere you can see you know here is our T2\nmicro and then we have um the small the\nmedium the large the x large okay but\nthere are exceptions to this pattern for\nsizes so you know there is one\nparticular one called uh metal and so\nthat's going to indicate that this is a\nbare metal machine and then sometimes\nyou get these Oddball ones like 9x large\nso you know the rule of power of two or\neven numbers is not always the case uh\nbut generally it'll be pretty even for\nyou know the start here okay uh just\ntalking about instant sizes so the E2\ninstant sizes generally double in price\nand attribute so uh just bringing up\nthese numbers a little bit closer\nstarting at the small here you're going\nto notice one two doesn't maybe double\nthere but four and here we see 12 24 uh\nalmost doubles there almost doubles\nthere but I want to I show you that the\nprice is generally almost double so 16\n33 67 135 and so a lot of times like you\nalways have the option to say okay do I\nwant to go to the next instance size up\nor have uh an additional instance of the\nsame size and sometimes it's a better\napproach to get an additional instance\nbecause then you can distribute it\nacross another a uh but then you also\nmeet additional capacity so there you\n[Music]\ngo so we talked about dedicated\ninstances and hosts a little bit but\nlet's just make that distinction very\nclear so dedicated hosts are single\ntenant easy to instances designed to let\nyou bring your own license so Bol based\non machine characteristics and so we'll\ncompare the dedicated instance to the\ndedicated host across isolation billing\nuh physical characteristics visibility\nAffinity between a host and instance\ntargeted instance placement automatic\ninstance placement and add capacity\nusing allocation request so for\nisolation for dedicated instance you're\ngoing to get instance isolation so you\ncan have the same customer on the same\nphysical machine but there is\nvirtualization there for them and\nthere's a guarantee of that um for a\ndedicated host you have physical server\nisolation so you get the whole server\nfor billing uh on a dedicated instance\nit's per instance billing and it's going\nto have an additional fee of $2 per\nregion and for dedicated host it's per\nhost building so it's a lot more\nexpensive but you get the whole machine\nuh for visibility of physical\ncharacteristics you're not going to get\nany of that information for dedicated\ninstance for dedicated host you are such\nas sockets core host host ID and this is\nreally important when you have a bring\nyour own license and they're saying this\nlicense is for x amount of cores or x\namount of sockets then we have Affinity\nso there's no affinity for dedicated\ninstance for dedicated hosts you'll have\nconsistency with deploys to the same\ninstance to the same physical server uh\nthere's no control of Target instance\nplacement for dedicated instance you do\nhave control on a dedicated host for\nauto automatic instance placements you\nhave it for both and to add capacity\nusing allocation requests it's a no for\ndedic at instance and it's a yes for\ndedicated host so I want to come back to\nthe main point that's what's highlighted\nhere is that on a dedicated host you\nhave visibility of sockets core host ID\nand this is really really important when\nyou're bringing your own licensed byol\nsuch as um you know Microsoft SQL\nservers where you have to specify the\nmanacor and things like that\n[Music]\nokay so we've been talking about uh\ntendency and I just want to make it very\nclear uh the difference between the\ndifferent levels of tendency on AWS so\nwe have three okay so we got dedicated\nhost so your server lives here and you\nhave control of the physical attribute\nso basically the whole server okay uh\nthen we have dedicated instances so your\nserver is on the same uh physical\nmachine as other customers but the\nactual slot that you have the dedicated\ninstance will always be the same uh and\nthen we have uh the default so your\ninstance will live somewhere on the\nserver uh and when you reboot it it's\ngoing to be somewhere else so there's no\nguarantee that it's going to be in the\nsame place every single time\n[Music]\nokay hey this is Andrew Brown from exam\nPro and in this follow along we're going\nto be looking at ec2 and also um\nservices that are adjacent to it so like\nautoscaling groups load balancers\nelastic IPS things like that so we fully\nunderstand ec2 um you don't have to know\ntons for the exam but you should be able\nto go through the motions of this with\nme me so that you can cement that\nknowledge um for some of those deeper\nConcepts like working with key Pairs and\nthings like that so let's make our way\nover to the ec2 console and learn what\nwe can learn um and generally when you\ngo to the ec2 console it'll bring you to\nthe dashboard for whatever reason it\ndidn't bring me there and then the idea\nhere is that on the left hand side we\ncan make our way over to\ninstances okay and this is where we can\nlaunch our first instance so if we go\nhere and launch our instance the first\nthing we're going to be presented with\nis to choose our Ami or Amazon machine\nimage and so that is a template that\ncontains the software configuration so\nthe operating system applications and\nother binaries that would be installed\non that OS by default all right and so\nwe have a variety that we can choose\nfrom in the quick starts and generally\nthe ones that you're going to see first\nare the ones that ad support so there\nare uh um Amis or operating systems that\na ads will support when you contact them\nand then there's ones that are outside\nthat where uh they'll still help you\nwith but they might not have the\nknowledge on so just understand that if\nyou pick from these core ones you're\ngoing to be in good shape uh the most\npopular is the Amazon Linux 2 because\nit's part of the free tier and it is is\nvery minimal and well hardened by AWS so\nit's a very good choice there but you\ncan see you can install a bunch of\nthings so like if you want to launch a\nMac OS server you can absolutely do that\na red hat uh Suzie Ubuntu a Windows\nServer you name it they have it um if\nyou wanted something more farther out\nthere you can go to the market\nMarketplace and uh subscribe to one that\nis managed by company basically\neverything exists Under the Sun here or\nyou could get a community Ami so these\nare ones that are contributed by the\ncommunity for free but we're going to go\nback to quick start here and what I want\nyou to notice is that there is this Ami\nID that's how we can uniquely identify\nwhat we are using if we were to change\nregion even with the same Amazon L 2\ninstance this thing will change so just\nunderstand that it is regional based and\nit comes in a 64-bit variant and a arm\nvariant and so we're going to be using\nthe x86 here you can notice here you can\nchange it on the right hand side we're\ngoing to stick with x86 I'm going to go\nahead and hit next so now we're going to\nchoose our instance type and so this is\ngoing to decide um uh greatly how much\nwe're going to be spending because the\nlarger it is the more we're going to\nspend so see this T2 micro if we want to\nknow the pricing for that we go to\nec2 pricing\nAWS and once we get to ec2\npricing we want to go to on\ndemand and from here this will\nload and so down below we can kind of go\nfind our price it should show\nus should show us the list ah here it is\nokay so I can say a T2\nmicro and we can see the On Demand is\nthis so it seems really cheap what you\ngot to do is do the math so if you do\ntime 7:30 that's how many hours there\nare in a month if we launch a T2 micro\nand let's say we didn't have the free\ntier we you do if you first made your\naccount you're going to have 7 750 hours\nfor free with a free tier but if you\ndidn't it would only cost you $8 and 46\nUSD okay so just be aware of that and if\nyou ever need to figure something out go\nthere copy it do the math 730 it's\npretty easy so here we have a T2 micro\nand the t2 family it's going to have one\nV vcpu notice it has a V for virtual so\nthere could be more than a single CPU on\nthe underlying Hardware but we're only\ngoing to have access to one virtual CPU\nwe have 1 GB of memory it's for low to\nmoderate Network performance so that's a\nfactor that can change if you need like\nuh uh gigabit stuff like really fast\nconnections for on Prem hybrid\nconnections and you have specialized\nservers for that but for this this is\nfine the TT micro is great uh if you\nwant you can also search uh this way to\nsee all the instance families and things\nlike that you can filter for current\nGenerations all generations so this is\nfine okay so from there we're going to\ngo to configure our instance type you\ncan say let's launch multiple of these\ninstances let's turn on spot to save\nmoney and try to bid for a particular\nprice we can change our VPC it's going\nto default to the default VPC um if you\nhave no subnets just going to pick one\nat random here which is fine um whether\nto autoassign a public IP address if you\ndo not have an IP address you cannot\nreach the internet so generally you want\nthis to be enabled this is dependent on\nthe subnet whether it will default\nenabled but doesn't matter if you have\nan ec2 instance in a private or public\nsubnet you can always override this and\ngive it a public IP address you have\nplacement groups which allows you to\nplace servers together closely not\nsomething for the certified Cloud\npartitioner there's capacity\nreservations so if you're worried about\nany us running out of this you can\nreserve capacity so that's kind of\ninteresting domain join directory this\nisn't something that I've done much with\nbut I imagine that has something to do\nwith um direct active directory or\nsomething like that to join information\nthen you need to uh uh have an IM roll\nand we absolutely do need an IM roll\nhere so what I want you to do is create\na new rooll just going to close off\nthese other tabs here and we will go\nwait a moment create a new roll here and\nwe want to do this for ec2 so we say ec2\nis what we're creating the rule for\nwe'll hit next and um I don't know if I\nhave a policy but I'm going to go ahead\nand um well I don't need to make a new\npolicy but I just want SSM and the\nreason I want SSM is so that I can um uh\nuse sessions manager to log in so we\ndon't have to use key pairs we will use\nkey pairs but if we didn't want to use\nit that's what we could do and this used\nto be the old rle and it'll tell you hey\ngo use this new one here so just want to\nmake sure I know which one it is and so\nwe'll just checkbox that on we'll hit\nnext we can add tags right here it' be\nuh well actually we don't need to add\nany tags here so that's fine we'll sit\nnext and then I'll just say U my SSM ec2\nroll okay and we'll create that\nroll and now that we have created that\nroll we can go back to our first tab\nhere and and give this a refresh and\nthen drop down and it should show up\nhere if we go down here a little bit we\ncould turn on extra monitoring there is\nmonitoring built in but if you wanted to\nuh monitor it to a lower uh like it more\nfrequently you could do that as well we\nwant share tendency right this is where\nyou change to Dedicated instance or\ndedicated host obviously these cost more\nbut we're going to stick with shared\nelastic inference so this is for um uh\nattaching a a fractional GPU great for\nML not something that we want there's\ncredit specification I don't remember\nseeing this before selecting unlimited\nfor credit specification allows for to\nburst beyond the Baseline so as for\nbursting here you can attach an uh EFS\nuh so if you need a file system that you\nwant to mount or attach um then there's\nthe Enclave option so Nitro Enclave\nenables you to create isolated compute\nenvironments to further protect your uh\nand securely process highly sensitive\ndata so it might be something you might\nwant to checkbox on um based on your use\ncase and then down below are we have the\nability to enter our user data and this\nis something we want to do because we\nwant to install aachi so that we have\nsomething to work with here so what I'm\ngoing to do is make a shebang so that is\na pound and an exclamation mark I know\nthat's really small so I'll try to bump\nup my font here so you can see what I'm\ndoing and we're going to do a forward SL\nbin and a for SL bash on the next line\nhere we're going to do yum install\nhyphen y\nhttpd um that's going to install apachi\nand why it's not called Apache I don't\nknow why but they call it http D there's\nno Apachi in the name there and so we'll\nsay system CTL start httpd system CTL\nenable htpd so we're saying start up\nApachi and then make sure that it stays\nrunning if we restart our machine very\nsimple so from there we will go to our\nstorage we'll say add our storage and\nthis is at 8 gigabytes by default we\ncould uh uh turn that up to 30 if we\nlike so you can go all the way up to 30\nif you like um and you might want to do\nthat but I'm going to leave at 8 we\ncould change our volume type I'm fine\nwith gp2 because it's very cost\neffective and if we want to turn on\nencryption and you should always turn on\nencryption there's no reason not to and\nso we'll turn that on it's not like it's\ngoing to cost you more it's going to be\nthe same cost it's just your choice\nthere if do want to add a tag yes we're\ngoing to add a name and we're going to\nsay my ec2\ninstance\nokay and so that's going to give us a\nname which is something we would really\nlike to have then we have our security\ngroup I'm going to just create a new\nsecurity group called my um um ec2 SG\nhere and just say my ec2 SG something\nyou cannot do is rename a security group\nonce you've made it so make sure you\ndon't make a spelling mistake up here\nand we want to be uh accessing that httt\nHTT or it's going to launch a website so\nin order to do that we need to make sure\nwe have HTTP as a type with the port ad\nopen and we want it from anywhere so\nwe'll say anywhere and that will be\n0.0.0.0 forze 0 and that that's for the\nipv4 this is for the IPv6 okay so we'll\njust say\ninternet and this is for SSH right and\nfor this um I would probably suggest to\nsay my IP but since we might be using a\ncloud shell to do that we're going to\nleave it as anywhere so that we don't\nhave any issues connecting so from here\nwe'll review and launch and you can\nreview what it is that's going on here\nit's going to say here hey you have an\nopen port that's okay we we want the\ninternet to see our website cuz that's\nthe whole point there and we'll go ahead\nand launch it it's going to ask for a\nkey pair we can go down and say proceed\nwithout key pair but what I'm going to\ndo is I'm going to create a new key pair\nbecause I want to show you how those\nwork and I'm sure we've already done in\nthis course once but we'll do it again\nand so I'm going to just name this as my\nec2 instance here and then we're going\nto go download that key pair it's going\nto download a PM file there and so now\nwe can go ahead and launch that\ninstance and while that is launching so\nI'm going to just close this other t\nhere we're going to click on The View\ninstances and so here is that instance\nthat's why we put the tag so we could\nhave a name there we're going to wait\nfor that to start but as that's going\nI'm going to make a new tab by just\nright clicking here on the logo click\nanywhere pretty much to do that and uh\nonce we do that we'll click on cloud\nshell and as that is going what I want\nto do is take this pen down below I'm\ngoing to move it to my desktop to make\nit easier for me to upload I'm doing\nthis off screen okay\nand uh once this environment is running\nI'm going to go ahead and upload that\nokay so we'll just give it a moment to\ndo that we're also waiting for the\nserver to spin up as you'll notice there\nis a public IP address here it says it's\nrunning so if we want we can copy it\nwe're looking for those two checks to\npass so the server could be available\nbut generally you want to wait for those\ntwo system checks because one says Hey\nthe Hardware's fine the Network's fine\nthings like that okay if I take that IP\naddress paste it on it up here we have\nthe web page so that is working uh no\nproblem there so that's great and we'll\ngo over to Cloud shell and that is still\nstarting uh it's not the fastest but\nthat's just how it is and um you know\nwe'll get going here in a second as soon\nas this decides to\nload there we go so it's loaded I can\ntype clear here just to clear that\nscreen out and so what I want to do is\nupload that pen file so I'm going to go\nand upload that file we're going to go\nahead and select it I'm going to go to\nmy desktop here whoops my desktop and we\nare going to choose my ec2 instance pen\nall right and from there we'll hit\nupload and that's going to upload that\npem\nfile once that is uploaded we're going\nto do\nLS okay and so uh this is from a\nprevious tutorial so I'm going to go\nahead and just delete that other one\nthere we'll say remove EFS example pem\nyes okay we'll type clear\nand then what we can do here is Type in\nchamod and um I believe it's\n400 and what do we call this my ec2\ninstance pen if you hit tab it will\nautocomplete which is nice and if you do\nlsen la we can take a look at that file\nand see it should look like this it\nshould have only one R here so the idea\nis you're locking it down so it's not\nwritable or executable it's just\nreadable because that's what you have to\nhave it if you want to SSH and so if we\nwant to ssh what we'll do is hit the\nconnect button here\nand we have four options they just give\nyou too many options it's going to be a\nfifth one for sure soon but right now\nwe're talking about SSH so for SSH um we\nhad to chamod our file which we did and\nthen we need to use this DNS to connect\nto it and so this is the full line here\nif you click on this copy that over and\npaste it\nin that should be everything and noce\nwe're doing ec2 user followed by this\nyou could put the IP address in here\ninstead if you preferred so if you were\nover here\nyou could go and take that IP address\nwhich is I think shorter nicer but um\nyou know if you just click that one\nbutton it works that's fine you always\nhave to accept the uh the fingerprint\nthen you'll be inside the instance you\ncan type who am I to see which user you\nare you're the ec2 user that's the user\nthat ads creates for their Amazon Linux\ninstances um it's going to vary per um\nAmi so not all Amis have an ec2 user it\nmight be something else but that's\ngenerally the ones that Aus uses for\ntheir supported ones and so if we do um\nan LS again we're in the server right\nnow we can tell because it says right\nhere or if we do a PWD we can kind of\njust kind of look around so I think it's\ngoing to be at VAR ww that's where HT\nhttpd or Apachi always uh puts their\nfiles here so if I go in here whoops I'm\njust looking for um the index file so I\nthought the index file was\nin cdar\nWW H\nHTML well where the heck is it so I'm\ngoing to just touch a file here and see\nif it overrides\nit oh I don't care I'll just type\npseudo and what we can do is just try to\nrestart this system CTL um there's a\nvery similar command that's like uh\nservice and so I always forget the order\nof it so I think it'd be I'm just\nchecking um probably uh restart httpd\nand so failed to restart the policy was\nnot provided as the name service um\nService uh maybe\npseudo there we go and so if we go back\nhere I'm going to see if it changed\nbecause it will take whatever is in the\nindex HTML file so if there's no file\nthere it's going to uh show that there\nand so what I can do is I can edit this\nfile so going type VI index HTML and um\nI'm going to hit I for insert mode oh\nsays it's readon so what we have to do Q\nuh colon Q\nquit oops uh clear LS and so what we\nneed to do is do pseudo VI index HTML\nand so Vim every single key is a hotkey\nokay um and I'm not teaching Vim here\nbut I'm going to teach you the basics\nbut the idea is that when you're here\nnotice that the cursor is blinking when\nI hit I it enters insert mode now I can\ntype normally so I'd say hello uh hello\nCloud okay and I'm going to hit escape\nto go back to um navigation mode\nwhatever you want to call it I'm going\nto hit colon so it brings up the command\nI'm going to type in uh write and quit\nOkay and hit enter and so I'll type\nclear and so whoops clear and so we'll\nhit up till we get that command pseudo\nsystem CTL restart hbd we'll hit that\nhit enter\nokay and it should restart pretty fast\nthere it is so it says hello Cloud I\nprobably didn't even have to restart it\nto do that but anyway so now that\ninstance uh you can see how we're\nupdating that so what I want to do is\njust do a sanity check and make sure\nthat if we restart this instance that\nwe're going to be able to um have aachi\nrunning that's something you should\nalways do if you have an app and you or\nanything you install it restart your\nserver make sure that everything works\nso what I'm going to do is uh just hit\nhit exit here so we go back to the top\nlevel cloudshell type clear I'm going to\ngo back over to my ec2\ninstance going have to click around to\nfind it here and what I want to do is\nreboot it okay and if I reboot the\nmachine the IP address is going to stay\nthe same okay so if we reboot it the IP\naddress is going to stay the same and\nthe reboot is going to happen really\nfast if we want to observe that reboot\nwe could go over to um here on the right\nhand side go to the system log and it\nwould show us that it it had\nrebooted I think so yeah it does a cloud\nin it there I think it\nrebooted not sure um but anyway if it's\nrebooted then we can go ahead and\nconnect and make sure everything's fine\nso let's just go here and hit enter and\nlet's see if the what the web page is\nhere notice that it's hanging right so\nit's probably because it's still\nrestarting even though it doesn't look\nlike it is and that's something that you\nhave to understand about the cloud is\nthat you have to think about what you're\ndoing and have confidence that it is\nhappening and also just double check it\nbut uh that's something that can be kind\nof frustrating because these are\nglobally available Services uh uh\nthey're massively scalable and so one of\nthe trade-offs is that you don't always\nhave the most uh responsive uh uis ads\nhas one of the most responsive uis out\nof all the major providers but even\nstill like sometimes I have to second\nguess myself but the page uh right now\nit was not working now it is so it's\nfine so it just took time for that to\nreboot and so um what I want to do is\nconnect a different way so we're going\nto go here and we're going to hit um\nwe're going to checkbox that on we're\ngoing to hit connect and instead of\nusing SSH client we're just going to go\nto sessions manager and hit\nconnect and this is the preferred way of\nconnecting because you don't have to\nhave this this SSH key and that's a lot\nmore secure because if someone has that\nkey and you you know you hand it to\nsomeone they could hand it to somebody\nelse and then you have a big problem on\nyour hands so here this looks very\nsimilar but if you type who am I it\nactually logs in as the SSM user which\nis kind of annoying so I type in P sudo\nSu I have to do this hyphen here and\nthen I'm going to say the user I want to\nbe which is ec2 user and then if I type\nwho am I we are the correct user you\ncan't do anything in that SSM hyphen\nuser or SSM user so you got to switch\nthat over and I can bump this up to make\nit a bit larger so this is obviously not\nas nice as working over here or even in\nyour own terminal but it's a lot more\nsecure and it's tracked and all these\nother things so we really should be\nusing it\nokay and um I really don't like having\nto bump this up with my HTML I'm going\nto just go back to zero there there's\nprobably like a way to configure that\nbut anyway uh let's just go and take a\nlook at our\nfile I'm going to type VI again and\nwe're going to do VAR www HTML index\nHTML I'm going to put pseudo in front of\nthere and again remember you have to hit\nI to go into insert\nmode and uh what I'm going to do is just\ntake capitalize that hello Cloud give\nthat exclamation mark colon WQ to quit\nright quick\ngoing to go back here refresh okay so we\ndon't have to restart our server which\nis nice all right so um that's that\nthat's pretty clear so I'll hit\nterminate\nhere and I don't think we need Cloud\nshell for anything so I'm just going to\nclose that and so that's pretty much it\nwhen it when it comes to working with an\nan ec2 instance and so the next thing I\nwant to show you is elastic IP\n[Music]\nokay okay so now I want to show you\nelastic IP uh commonly abbreviated to\nEIP and so all that is it's just a um a\nstatic IP an IP that does not change\nbecause this ec2 instance here notice\nthat it's 54 163\n4104 and what would happen if we were to\nstop this instance not reboot it but\nstop it because for whatever reason we\nhad to or or um for whatever reason and\nif we were to stop this instance and we\nwere to restart\nit\nokay uh and we have to wait for to stop\nbut that IP address is going to change\nokay so 54 1634 104 hopefully we can\nobserve that I'm just going to write\nthat down so we do not forget so I can\nprove to you that it does\nchange and now that it it's still\nstopping here so as that's stopping\nwe're just going to go ahead and get our\nelastic IP and I will prove that as we\ngo here so I'm going to go over to here\nand so what I want to do is Reserve or\nallocate an elastic IP address and so\nI'm going to say Us East one and it's\ngoing to say from the Amazon Pool of\nipv4 addresses so adabs has a bunch of\nIP addresses they're holding on to and\nso you can just allocate one and once\nyou've allocated that's your IP address\nso coming back to here okay this is\nstopped notice there is no public IP\naddress we're going to start it\nagain okay and will'll just checkbox it\non and we just have to wait a little\nwhile to see what the IP address is\ngoing to be I'm going to tell you it's\ngoing to be something\nelse so if I go back here this is 54\n2352 1110 and our original one was 54\n1634 104 so the reason why it's\nimportant to have the same address is\nthat if uh you have a load balancer well\nnot a load balcer but if you have a\ndomain pointing to your I uh your server\nand you reboot then and the you have a\ndang a dangling um path or route where\nRevue 3 was going to be pointing to\nnothing and so adus does have things to\nmitigate that like aliases and things\nlike that but um in general you know\nthere's cases where you just have to\nhave a static IP address and so we had\nallocated one over here and if we want\nto assign it we're going to associate\nthat elastic IP address we're going to\ndrop it down choose the cc2 instance um\nI suppose the private IP as well and\nthen we're going to go ahead and hit\nallocate or\nassociate and once it's Associated it\nshould now have 34 199 121 116 so we go\nover\nhere and we're going to take a look here\nand that's its IP address we can pull it\nup okay and that's that so yeah that's\nthetic\n[Music]\nIP okay so now that we um have our\nlastic IP we have our ec2 instance\nrunning let's say um you know we lose\nthe server we terminate it so we would\nlose all of our configuration so if we\nwanted to bake this Ami to save it for\nlater what we'd have to do is go and\ncreate an image so to do that we go to\nthe top here and we go to images and\ntemplates and we can create an image or\nwe can create a a template which is a\nlot better but for the time being we're\ngoing just go ahead and create an image\nand when you create an image you're\nbasically creating an Ami and so here\nI'm just going to say uh my\nec2 and I'm going to go 0 0 0 to just\nkind of like number it so that's a very\ncommon numbering just do three zeros and\nthen Inc by one and so here I can just\nsay my Apachi server and so it's going\nto save some settings like the fact that\nthere is a a volume you could uh save\nsome tags there and so I might go ahead\nand add a tag and just say name and\nwe'll just say my ec2 server or so that\nit remembers\nthat okay and then what we'll do is go\nahead and create our image and so this\ncan take a little bit of time if we go\nover to uh images\nhere it's going to to be spinning for a\nwhile and uh we'll just wait until it's\ndone okay all right so after waiting a\nlittle while here our Ami is ready so\nwe're just waiting for it to go\navailable if you do not see it just make\nsure you hit the refresh um because\nsometimes ads will just spin forever um\nand so that's just something you'll have\nto do so you know hopefully that makes\nsense what we'll do is go make our way\nback over to instances here and we can\nlaunch one this way well actually we can\ndo it over from um the Ami page so what\nI'm going to do is just terminate this\ninstance we're all done with it okay and\nwe'll hit terminate it's totally fine\nand it had a message about elastic IPS\nabout releasing them so when it does\nthat the elastic IP is still over here\nso it did not release it so what we're\ngoing to do is go ahead and disassociate\nthe elastic\nIP okay and then we're also going to\nrelease the IP address because if we\ndon't we're going to have this IP\naddress and sticking around that we're\nnot using it is going to charge us a\ndollar month over month so just be aware\nof those because that's just kind of\nlike a hidden cost there but what we're\ngoing to do is go over to\nAmi and we're going to select it here\nwe're going to go to actions we're going\nto go ahead and\nlaunch and what it's going to do is make\nus fill out all this other stuff again\nso if you had made a launch template uh\nwe wouldn't have to fill out all this\nstuff it'd be part of it but that's what\nI'm trying to show you with this Ami\nstuff so um instead of filling out all\nthis what I'm going to do is now go\ncreate a launch template just to kind of\nshow you that that would be a much\neasier way to\nwork so we go over to E2 instance es and\nthen left hand side we're looking for a\nlaunch template launch launch\nconfigurations is the old thing um\nlaunch templates here we go so what\nwe'll do is create ourselves a launch\ntemplate we'll just say my Apachi\nserver and then down below we need to\nchoose our Ami so we're going to go here\nand we need to type it in so what do we\ncall it my\nec2 I really don't like this uh search\nhere it's very slow frustrating but once\nwe find it whoops that's why I don't\nlike it because a lot of times it'll be\nloading and you'll end up clicking the\nwrong\nthing okay\nso I don't like this okay we'll type in\nmy give it a\nsecond there it is just wait because it\nwill keep loading and then once it's\nloaded hit\nenter and so it has that instance\nselected and then from there uh don't\ninclude in the launch template so here\nwe could be explicit I would say I want\nthis to be 22 T2 micro but we could\nexclude it if we wanted to we could\nspecify the key pair here um not that we\nreally want to use key pairs we'll say\nmy ec2 instance then down down here for\nthe networking we can specify uh that\nsecurity group we created so we created\none here called my ec2\nSG um storage is fine it's going to be\nencrypted network interface is fine\nAdvanced details what I want to do is\nset the IM instance profile that's\nreally important because we don't want\nto have to figure out that roll every\nsingle time so we put that there and\nthat should be everything and we could\nput user data in there but it's already\nbaked into our Ami so we don't have to\nworry about anything so what I'm going\nto do here is go ahead and create this\nlaunch template and then we're going to\nview this launch template and so now\nwhat we can do is then use it to launch\nan instance okay and so we're going to\nlook here and it's very similar to dc2\nbut except it's vertical so we're going\nto have one instance it's going to use\nthat Ami that instance type so you can\nsee how you can override them which is\nnice we're going to check the advanced\ndetails make sure that I profile is set\nand we'll go ahead and launch this from\na\ntemplate so from there we can go ahead\nand click the instance value there and\njust be aware that when you do click\nthrough links like that you'll end up\nwith the search so I always just\ncheckbox that off so I can see what I'm\ndoing and so we're just waiting for this\ninstance to show up and the only thing I\nnoticed is it didn't set our darn tags\nso I wanted the name and there and I\nthink it's because we said it in the Ami\nbut it didn't carry over to the launch\ntemplate so I'd have to go back to the\nlaunch template and update it probably\nso if I go into here into the launch\ntemplate um we can probably modify\ncreate a new\nversion and then add tags there so we'\nsay\nname uh my uh Apachi\nserver I realize I'm changing it between\nthem and so that should allow us to have\na version two so we'll create that and\nbut anyway that will be for the next\ntime we launch it okay and so this\ninstance is running I'm going to go grab\nthe IP\naddress the server may or may not be\nready we'll take a look here and so it's\njust spinning if it's spinning it's\neither the server is not ready or um our\nports not open so it was just getting\nready to work there so it is working now\nso that is our launch template so now\nyou know we don't have to worry about\nlosing our stuff and if we need to make\nnew versions We can just B new Amis and\nincrement them as uh Inc and attach them\nas new versions of that launch template\n[Music]\nokay all right so what I want to show\nyou in this follow along is to set up an\nautoscaling group for our ec2 instance\nand the idea behind this is that um\nwe'll be able to always ensure that a\nsingle server is running or uh increase\nthe capacity if the demand requires it\nso in order to create an autoscaling\ngroup we can go all all the way down\nbelow to here um and so you know I\nreally don't like the Autos scaling\ngroup form but it's okay we'll work our\nway through it so the first thing is\nwe'll have to create our or name our\nautoc scan group so we'll just say my\nASG and then we'll have to select a\nlaunch template which is great because\nwe already have one and then we'll have\nto select the version I'm going to\nselect version two so that it applies\nthat tag name and we'll go to next and\nso here um it's going to need to select\na VPC and then we need some subnets so\nwe're going to choose three just because\nto have high availability you have to be\nrunning in at least three different\navailability zones so that's why we have\nthree different subnets and then down\nbelow we have the instance type\nrequirements so uh T2 micro launch\ntemplate looks good to me so we'll go\nahead and hit\nnext and then from here we can choose to\ndo a load balancer and so I want to do\nthe load balancer separate so we won't\ndo it as of yet but very often if you're\ngoing to have an on group you're going\nto usually have a load balancer but\nwe'll talk about that when we get to\nthat point there so we'll just go to the\nbottom here and hit next and so this is\nwhat's important so how many do you want\nto be always running and so we always\nwant to have one and maybe the maximum\ncapacity is two and you want the desired\nC capacity to be around a particular\nnumber so if you had three and you said\nthe desired is two um there are things\nthat could try to work to always make\nsure there's two but we just want to\nhave one for this example we can set up\na scaling policy so I do Target tracking\nscaling policy and so here we could do\nit based on a bunch of different things\nso if the CP utilization went over 50%\nit would launch another server so that\nmight be something we might want to set\nso I'll we're not going to uh try to\ntrigger the scaling policy but we might\nas well just apply because it's not too\nhard then you can also do a scaling uh\nscale in protection policy so if you\nwant to make sure it does not um uh\nreduce the amount of servers that's\nsomething you could do we can add a\nnotification to say hey there's a\nscaling policy happening here which is\nfine we don't have to worry about that\num and there's tags so add tags to help\nyou search filter Etc um so I'm going to\nput a tag here I'm going to say name I'm\njust wondering if this is going to\nattach to the ec2 and or this is for the\nAutos scaling group you can optionally\nchoose to add tags to instances by\nspecifying tags in your launch templates\nso we already did that so I don't need\nto put a tag here and so we can review\nour um Auto scaling group and go ahead\nand create that auto scaling\ngroup okay and so that auto scaling\ngroup expects there to be a single\ninstance so what it's going to do is\nit's going to start launching an\ninstance and so what I'm going to do is\njust get rid of this old server because\nwe don't need it anymore this old one\nhere\nokay and you can already see okay that\nthe load balancer is launching this new\none here and remember we updated our\nversion two to have that name so that's\nhow we know that it is so if we go back\nover to our autoscaling\ngroup okay it's now saying there is an\ninstance we don't have a status as of\nyet\nand so there are ways of doing uh status\nchecks to for it to determine whether or\nnot the server is\nworking um because if the server is\nunhealthy what it would do is it would\nactually kill it and then start up a new\none right so if I go down below it's\nright now doing an ec2 health check and\nthe ec2 health check just means that is\nthe server working right um is it\nrunning it doesn't necessarily mean like\nhey can I load this web app um but you\nknow it's very simple so we'll give it a\nmoment here to start up and just make\nsure that it's working\nokay and I think it's ready so if I take\nthat public IP address here and paste it\nin there it is okay so if we were to\ntell it to increase the capacity to\nthree then what it would do is it would\nlaunch three and then it should probably\nlaunch it all evenly to those other it\nshould evenly launch it to all those\nother uh availability zones and then\nwe'll have something that is highly\navailable okay so that's pretty much it\nfor this and then we'll move on to autos\nscaling\n[Music]\ngroups all right so we have our uh ec2\ninstance now managed by an Autos scaling\ngroup and the great thing is that if we\nterminate this instance this Auto\nscaling group will launch another uh\ninstance to meet our particular capacity\num the only thing though is that if we\nwere to have multiple E2 instances\nrunning like three of them um how would\nyou distribute traffic to the mall right\nso you know you have an IP address\ncoming in from the internet uh but let's\nsay you want to evenly distribute it and\nthat's where a load bouncer comes into\nplay and even if you have a single\nserver you should always have a load\nbouncer because it just makes it a lot\neasier for you to scale when you need to\nand you it acts as an intermediate layer\nwhere you can attach a web application\nfirewall you can attach an SSL\ncertificate for free so there's a lot of\nreasons to have a load balancer so what\nwe'll do is go down below on the left\nhand side and we're going to make our\nway over to load bouncers and we're\ngoing to create ourselves a new load\nboun bcer so I'm going to hit create\nload balcer here and you're going to see\nwe have a lot of options application\nload balcer Network load balcer Gateway\nload balcer and then the classic load\nBouncer and so we are uh running an\napplication so I'm going to create an\napplication load balcer and here I'm\ngoing to say my ALB um for an\napplication load balancer this is going\nto be internet facing it's going to be\nipv4 um we're going to let it launch in\nthe default um subnet and we're going to\nchoose the same the same uh uh azs right\nso that we get the same subnets as our\nthat are in our autosan group and that's\nreally important okay and then here um\nyou know we need to have a security\ngroup and I just feel like selecting the\nsame one here because that should work\nno problem there and we want to make\nsure that we can listen on Port 80 and\nthat it's going to forward it to a a um\na Target group and it looks like I might\nhave a Target group there from before so\njust to reduce that confusion you won't\nhave this problem I'm just going to\ndouble check if that's true so do I have\na Target group from there from before\nyes I do that came\nfrom I'm not sure it might have been\ncreated by um elastic beanock and wasn't\ndeleted okay so I'll go back over to\nhere just so there's less confusion\nand we were selecting our Target group\nso we're going to have to create a new\nTarget group so we go over here and here\nyou can choose whether it's instance IP\nLambda application load balancer so you\ncould point it specifically to an IP\naddress and so if it was a static IP\naddress that would make sense uh\napparently you can Port uh point it\ndirectly to instances I don't remember\nseeing that option before I guess that\nmakes sense yeah no sorry that makes\nsense because that would go to uh vpcs\nokay or sorry uh asgs Autos scaling\ngroups it's just that you are pointing\nthem to Auto scaling groups you're not\npointing them to instances so that's why\nthat's confusing so I'm going to say my\num Target group it'll be for Port 80\nhere um protocol http1 is fine we want\nto be in the same um VPC so that's fine\nas well and down below we have our\nhealth check and so the for slash means\nthat it's going to hit the index HTML\npage and so if it gets back um something\nhealthy and that that something healthy\nis going to be um uh Port 80 then it's\ngoing to be considered good and then we\ncan say the threshold of check so I'm\njust going to reduce this so it's not so\ncrazy so we'll say three uh two and then\n10 okay and then it expects back a 200\nwhich I think that's what we'll get back\nso we'll go ahead and hit next and so\nnow we have our Target group and it\nshould register instances so it's saying\nhey we detected this and this fits the\nrequirements for this so this is now uh\nthis E2 instance is now in this target\ngroup okay so we can go back over here\nand we can now drop down and choose\nwhoops hit the refresh\nbutton and choose our Target group\nso I'm not seeing it here so I'm going\nto go back over here oh we didn't create\nit\nokay and now we can go back hit refresh\nand there it\nis and yeah that looks all good so we'll\ngo ahead and hit create load\nbalcer we can view the load balcers and\nthese create really fast if we scroll on\nup what we can do is now access our\nserver through this DNS name okay so we\ncopy that paste that in\nthere does it\nwork not as of yet so if it's not\nworking there because we did say look at\nthese instances another way is to\ndirectly associate your Autos scaling\ngroup with the load balancer so if I go\ninto here and we hit uh\nedit there is a way aha load bouncer\nso we want to associate this way and we\nwant to say this Target group\nhere and also while we're here we might\nas well set it to elb so it's going to\nuse the elb tech so that makes it so the\nautoscaling group if it wants to uh\nrestart server it's going to use the\nelb's check which is a lot more\nsophisticated and then what we'll do is\ngo hit\nupdate\nokay and now if we go back over to our\nload balancer just going to close some\nof these tabs so it's a less\nconfusing uh load balcer here\nI think we should be able to see through\nhere whether it is seeing it let's go\ndown below listeners monitoring\nintegrated Services no it's going to be\nthrough the target\ngroup\nokay I mean it already had it there so\nmaybe it's just that it hasn't finished\nthe check so over here it has a health\nstatus check oh now it's healthy okay so\nif it's healthy in the Target group and\nthe load bouncer is point to it then it\nshould technically work so we're going\nto go ahead\nand uh copy the DNS again here make a\nnew tab paste it\nin and there it is okay so that's how\nyou're going to access um all your all\nyour instances that are within your\nautoc groups you're going to always go\nthrough the DNS and so if you had a row\n53 uh domain like you your domain\nmanaged by AWS you just point to the\nload balancer and that's how you hook it\nup so that's pretty much it so yeah\nthere you\n[Music]\ngo all right so there you go we learned\neverything we wanted to know about ec2\nso the the last thing to do is to tear\neverything down so we have a load\nbalancer we have an autoc scanner group\num and those are the two things we'll\nhave to pull on down so the first thing\nwould be to take down the autoscaling\ngroup and when you delete an autoscaling\ngroup it's going to delete all the ec2\ninstances so we'll do it that way if you\ntried to delete the ec2 it would just\nkeep on spinning up so you have to\ndelete that first and so as that's\ndeleting then we'll be able to delete\nour load balancer I'm going to try\nanyway to see if I can delete it at the\nsame\ntime and so I'll go up here I'm going to\ngo ahead and delete that uh load\nbalancer actually it did work no\nproblem going to make sure I don't have\nany elastic\nIPS I'm going to also make sure I don't\nhave any key pairs you can keep your key\npairs around but like I just want to\nkind of clean this up so\nokay okay and that instance should be\nterminating got to go back to the Autos\nscan group\nhere if we click into it we can check um\nits activity\nhere so it's just saying successful so\nit is waiting on elb connection draining\nwhich is kind of annoying because we\ndeleted at elb so there's nothing to\ndrain um draining is just to make sure\nthat uh you know there's no\ninterruptions when terminating services\nso just trying to be smart about\nit and all I want to see is that it's\njust saying terminating over here and\nthen I think we're done\nokay so we'll just have to wait a little\nwhile here okay and I'll see you back in\na moment okay all right so after waiting\na very long time it did destroy so if I\ngo down over to uh my load balancer here\nwe're going to see that it does not\nexist so there was that connection\ndraining thing which was kind of\nannoying it's probably because I deleted\nthe load balancer first and then the um\nthe uh the Autos SC group second and\nprobably connection draining was turned\non but it's not a big deal we just\nwaited and it did eventually delete so\nwe're pretty pretty much all done here\nso there you\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we are taking a look at ec2\npricing models and there are five\ndifferent ways to pay with ec2 remember\nec2 are virtual machines so we have on\ndemand spot uh reserved dedicated and\nadus savings plans so what we'll do is\nlook at these in summary here and then\nwe'll dive deep onto each of these\ndifferent pricing models so for on\ndemand you are paying the a low cost and\nalso you have a lot of flexibility with\nthis plan uh you are paying per hour so\nthis is a pay as you go model uh or you\ncould be paying down to the second which\nwe'll talk about uh the caveats there\nwhen we get to the on demand section\nthis is suitable for workloads that are\ngoing to be short-term spiky\nunpredictable workloads uh that cannot\nbe interrupted and it's great for\nfirst-time applications and the ond\ndemand uh pricing model is great when\nyou need the least amount of commitment\nfor spot pricing you can see we can save\nup to 90% which is the greatest Savings\nof out of all these models here uh the\nidea here is you're requesting spare\nComputing capacity that adus is not\nusing and that's where you're going to\nget that savings you have flexible start\nand end times uh but your workloads have\nto be able to handle interruptions\nbecause these servers can be stopped at\nany time to be giving to more priority\ncustomers uh and this is great for\nnon-critical background jobs very common\nfor like scientific Computing uh where\njobs can be started and stopped at any\ngiven time this has the greatest amount\nof savings then you have Reserve or\nreserved instances this allows you to\nsave up to 75% this is great for a\nsteady state or pred ible usage you're\ncommitting uh with AWS uh for ec2 usage\nover a period of 1 or 3E terms you can\nresell on uh unused reserved instances\nso you're not totally stuck with this if\nyou buy them this is great for the best\nlong-term savings then you have\ndedicated so these are just dedicated\nservers and technically not a pricing\nmodel but more so that the fact that it\ncan be utilized with pricing models um\nbut the idea here is it can be used with\non demand reserved or even spot this is\ngreat when you need to uh have a\nguarantee of isolate hardware for\nEnterprise requirements and this is\ngoing to be the most expensive uh so\nyeah there you go and we'll dive deep\nhere\n[Music]\nokay so the on demand pricing model is a\npay as you go model where you consume\ncompute and then you pay later so when\nyou launch an ec2 instance by default\nyou are using that on demand pricing and\nOn Demand has no upfront payment and no\nlong long-term commitment you are\ncharged by the second up to a minimum of\n60 seconds so technically a minute or\nthe hour so let's just talk about the\ndifference between those uh per second\nbilling and those per hour billing so\nper second are for Linux windows windows\nwith SQL Enterprise windows with SQL\nstandard windows with SQL web instances\nthat do not have a separate hourly\ncharge and then everything else is going\nto be um per hour and so you know when\nI'm launching ec2 instance I can't can't\neven tell when something's per second or\nper hour you just have to know that it\nhas a separate hourly charge but\ngenerally you know if you're just\nlaunching things it's going to probably\nbe the perc billing when you look up the\nhourly or the uh the pricing it's always\nshown in the hourly rate so even if it\nis using uh per second billing when you\nuh look up that pricing it's always\ngoing to show it to you like that but on\nyour bill you'll see it down to the\nsecond okay up to the first 60 seconds\nuh an on demand is great for workloads\nthat are shortterm spiky or\nunpredictable\nuh but when you have a new app\ndevelopment this is where you want to\nexperiment and then when you're ready to\nuh start saving because you know exactly\nwhat that workload is going to be over\nthe span of a year or three that's where\nwe're going to get into reserved\ninstances which we'll cover\n[Music]\nnext hey this is Andrew Brown from exam\nPro and we are taking a look at reserved\ninstances also known as RI and this is\num a bit of a complex topic but uh you\nknow if we do get through it it's going\nto serve you well through uh multiple ad\ncertifications so let's give it a bit of\nattention here so RI is designed for\napplications that have a steady state\npredictable usage or required Reserve\ncapacity so the idea is that you were\nsaying to ads I'm going to make a\nguaranteed commitment uh saying this is\nwhat I'm going to use and I'm going to\nget savings because adus knows that\nyou're going to be spending that money\nokay so the idea here is that the\nreduced pricing is based on this kind of\nformula where we have term class\noffering the ra attributes and payment\noptions technically the ra tributes\ndon't exactly factor into it other the\nfact that they an RA tribute could be\nlike the instance type size uh but I'm\ngoing to put that in the formula there\njust because it is an important\ncomponent so let's take a look at each\nof these uh components of the formula to\nunderstand how we're going to save so\nthe first is the term so the term uh the\nidea here is the longer the term the\ngreater the savings so you're committing\nto a one-year or three-year contract\nwith AWS um and one thing you need to\nknow is that these do not renew so at\nthe end of the year the idea is that you\nhave to purchase again and when they do\nexpire your instances are just going to\nflip back over to On Demand with no\ninterruptions to service then you have\nclass offerings and so the idea here is\nthe less flexible the offering the\ngreater the savings so the first is\nstandard and this is up to a 75\nreduction in the price compared to on\ndemand and the idea here is you can\nmodify some ra attributes which we'll\nwe'll talk about when we get to the um\nra tribute section there then you have\nconvertible so you save up to 54%\nreduced pricing compared to on demand\nand you can exchange RIS based on the r\nattributes if the value is greater or\nequal in value and there used to be a\nthird class called schedule but this no\nlonger exists so if you do come across\nit just know that ads is not planning on\noffering this uh again for whatever\nreason I'm not sure why uh then there\nare the payment options so the greater\nupfront the greater the savings so here\nwe have all upfront so full payment is\nmade at the start of the term partial\nupfront so a portion of the cost must be\npaid upfront and the remaining hours in\nthe terms are built at a discounted rate\nand then there's no upfront so you are\nbuild at a discounted hourly rate for\nevery hour within the term regardless of\nwhether the reserv is being used and\nthis is really great this last option\nhere because basically you're saying to\nAWS you're saying like I'm just going to\npay my bill as usual but I'm going to\njust tell you what it's going to be and\nI'm going to save money so if you know\nuh that you're going to be using a T2\nmedium for the next year uh you can do\nthat and you're just going to save money\nokay okay so RIS can be shared between\nmultiple accounts within an organization\nand unused RIS can be sold in the\nreserved instance Marketplace but we'll\ntalk about the limitations around that\nwhen we get a bit deeper in here just to\nkind of show you what it would look like\nin inabus console and they updated it I\nlove this new uh UI here the idea here\nis you're going to filter based on your\nrequirements and that's going to show\nyou RIS that are available and then\nyou'll just choose the desired quantity\nyou can see the pricing stuff there\nyou're going to add it to cart you're\ngoing to check out and that's how you're\ngoing to purchase it okay\n[Music]\nso another factor to that formula were\nRI attributes and sometimes the\ndocumentation calls them R attributes\nsometimes they call them instance\nattributes but these are limited based\non class offering and can be uh uh can\naffect the final price of the ra\ninstance and there are four ra\nattributes so the first is the instance\ntype so this could be like an M4 large\nand this is composed of an instance\nfamily so the M4 and the instance size\nso large okay then you have region so\nthis is where the reserved instance is\npurchased then you have the tency\nwhether your instance runs on shared so\nthe default which uh would be\nmulti-tenant or a single tenant which\nwould be dedicated hardware and then you\nhave the platform whether you're using\nWindows or Linux even if you're using on\ndemand of course this would just affect\nyour pricing but there are some\nlimitations around here which we'll get\ninto as we dive a bit deeper here with\nRI\n[Music]\nokay all right let's compare Regional\nand and zonal Ri so when you purchase an\nRI you have to determine the scope uh\nfor it okay so this is not going to\naffect your price but it's going to\naffect the flexibility of the instance\nuh so this is something you have to\ndecide so we're going to talk about\nRegional RI which is when you purchase\nit for a regional and zonal RI when you\npurchase it for an availability zone so\nwhen you purchase it for regional RI it\ndoes not Reserve capacity meaning that\nthere's no guarantee that those servers\nwill be available so if ad us runs out\nof those servers uh you're just not\ngoing to have them but when when it's\nzonal uh you are reserving capacity so\nthere's a guarantee that those will be\nthere when you need them um in terms of\nuh AZ flexibility uh you can use the\nregional RI for any a within that region\nbut for the zonal ri you can only use it\nfor that particular region we're talking\nabout instance flexibility um you can\napply the discount to uh any instance in\nthe family regardless of the size uh but\nthen when we're looking at AZ there is\nno instance flexibility Okay so just\ngoing to use it for exactly what you\ndefined you can cue purchases for\nregional R you cannot cue purchases for\nzonal Ri so there you\n[Music]\ngo let's talk about some ra limits here\nso there's a limit to the number of\nreserved instances that you can purchase\nper month and so uh the idea here is\nthat you can purchase 20 Regional\nreserved instances per region and then\n20 zonal reserved instances per a so if\nyou have a region that has three A's you\ncan have uh 60 um zonal reserved\ninstances in that region okay there are\nsome other limitations here so for\nregional limits you cannot exceed the\nrunning on demand instance limit by\npurchasing Regional reserved instances\nthe default for on demand limit is 20 so\nbefore purchasing your RI ensure on\ndemand limit is equal to or greater than\nyour RI you intend to purchase you might\neven want to open up a service uh limit\nincrease just to make sure you don't hit\nthat wall for zonal limits you can\nexceed your running on demand uh\ninstance limit by purchasing zonal\nreserved instances if you're already uh\nhave 20 ond demand instances and you\npurchase 20 zal reserved instances you\ncan launch a further 20 ond demand\ninstances that match the specification\nof your zonal reserved instances so\nthere you\n[Music]\ngo let's talk about capacity reservation\nso ec2 instances are backed by different\nkinds of hardware and so there is a\nfinite amount of servers of available\nwithin an availability Zone per instance\ntype of family remember an availability\nzone is just a data center or a\ncollection of data centers and they only\nhave so many servers in there so if they\nrun out because the demand is too great\nyou just cannot spin anything up and so\nthat's what's happening you go to launch\nspecific ec2 instant type but AB is like\nsorry we don't have any right now and so\nthe solution to that is capacity\nreservation so it is a service of ec2\nthat allows you to request uh a reserve\nof ECC instance type for a specific\nregion and a so here you would see that\nyou just select the instance type\nplatform a tendency the quantity and\nthen here you might manually do it\nspecify time or you might say okay I\ncan't get exactly what I want but can\ngive me something generally around uh\nthat kind of stuff or that type that I\nwant so the reserve capacity is charged\nat the selected instance type on demand\nrate whether an instance is running in\nit or not and you can also use Regional\nReserve instances With Your Capacity\nreservations to benefit from billing\ndiscounts so there you go\n[Music]\nso there are some key differences\nbetween standard and convertible Ri so\nlet's take a look at it here so the\nfirst is that with standard RI you can\nmodify your tributes so you can change\nthe a within the same region you can\nchange the scope uh from a zonal r to\noriginal RI or vice versa you can change\nthe instance size uh as long as it's a\nLinux and it has the default tendency\nyou can change the network from ec2\nclassic to VPC and vice versa but when\nyou're looking at convertible you you\ndon't modify ra tributes you perform in\nexchange okay and so standard RIS cannot\ndo exchanges where convertible RI you\ncan uh exchange during the term for\nanother convertible RI with new R\nattributes and this includes the\ninstance family instant type platform\nscope and tency um in terms of the\nmarketplace you uh they can be bought in\nstandard RI uh in the marketplace or you\ncan sell your RI if you uh don't need\nthem anymore uh but for convertible R\nthey cannot be sold or bought in the\nmarketplace you're just dealing with ads\ndirectly\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at the\nreserved instance Marketplace we had\nmentioned it prior so let's give it a\nlittle more attention here so it allows\nyou to sell your unused standard RI to\nrecoup your spend for R right you do not\nintend or cannot use so reserved\ninstances can be sold after they have\nbeen active for at least 30 days and\nonce databus has received the upfront\npayment you must have a US bank account\nto sell RI on the ri Marketplace there\nmust be at least one month remaining in\nthe term for the ri you are listing you\nwill retain the pricing and capacity\nbenefit of your reservation until it's\nsold and the transaction is complete\nyour company name and address upon\nrequest will be shared with the buyer\nfor tax purposes a seller can set Only\nThe Upfront price of an RI the usage\nprice and other configurations such as\ninstance type availability Zone platform\nwill remain the same as when the ri was\ninitially purchased the term length will\nbe rounded down to the nearest month for\nexample a reservation with 9 months and\n15 days remaining will appear as 9\nmonths on the R Market you can sell up\nto 20,000 USD in reserved instances per\nyear if you need to sell more RI\nreserved instances in the gov Cloud uh\nregion cannot be sold on the ri\nMarketplace so there you\n[Music]\ngo hey it's Andrew Brown from examp Pro\nand we are taking a look at spot\ninstances so adus has unused compute\ncapacity that they want to maximize the\nutility of their idle servers all right\nso the idea is just like when a hotel\noffers booking discounts to fill vacant\nSuites or planes offer discounts to fill\nvacant seats all right so spot instances\nprovide a discount of 90% compared to On\nDemand pricing spot instances can be\nterminated if the Computing capacity is\nneeded by other on demand customers but\nfrom what I hear rarely rarely does spot\ninstances ever get terminated um it's\ndesigned for applications that have\nflexible start and end times or\napplications that are only feasible at\nvery low compute cost so you see some\noptions here like load balancing\nworkloads flexible workloads Big Data\nworkloads things like that um there is\nanother service called Aus batch which\nis for doing batch processing and this\nis very common what you use um spot with\nand so you know if you find the spot\ninterface too complicated you're doing\nbatch processing you want to use this\nservice instead um there are some\ntermination conditions so instances can\nbe terminated by adabs at any time if\nyour instance is terminated by ads you\ndon't get charged for a partial hour of\nusage if you terminate an instance you\nwill be still charged for an hour uh\nthat it ran so there you\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we are taking a look here at\ndedicated instances so dedicate\ninstances is designed to help meet\nregulatory requirements inabus also has\nthis concept called dedicated hosts and\nthis is more for when you have strict\nserver bound licensing that won't\nsupport multi- tendency or cloud\ndeployments and we'll definitely\ndistinguish that in this course but just\nnot in this slide in particular um and\nso to understand uh dedicated instances\nor hosts we need to understand the\ndifference between multi- tendency and\nsingle tendency so multi- tendency you\ncan think of it like everyone living in\nthe same apartment and single tendency\nyou can think of it everyone having\ntheir own house so the idea here is that\nyou have a server I'm just going to get\nmy uh cursor or my pen out here to say\nserver and you have have multiple\ncustomers running workloads on the same\nhardware and the idea is that they are\nseparated via virtual isolation so\nthey're using the same server but it's\njust software that might be separating\nthem okay and then we have the idea of\nsingle tency so we have a single\ncustomer that has dedicated Hardware so\nthe physical location is what separates\ncustomers um and the idea here is that\ndedicated can be offered via on demand\nreserved and spot so that's why we're\ntalking about dedicated here in the\npricing model just so you know that you\nknow even though these are a lot more\nexpensive than on demand uh you can\nstill save by using reserved and also\nspot which I was very surprised about um\nand when you want to choose dedicated\nyou're just going to launch your ec2 and\nyou'll have a drop down where you have\nthat shared so that's the default\ndedicated so you have dedicated instance\nand dedicated host and again we'll talk\nabout dedicated host uh later when we\nneed to here um and so again the reason\nwhy um you know Enterprises or large\norganizations may want to use dedicated\ninstances is because they have a sec uh\na security concern or obligation about\nuh against sharing the same Hardware\nwith other adus customers\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at ABA\nsavings plans and this is similar to\nreserved instances but simplifies the\npurchasing process so it's going to look\na lot like RI at the start here but I'll\ntell you how it's a bit different okay\nso there are three types of saving plans\nyou have compute Savings Plan ec2\ninstance saving plan plans and sagemaker\nsaving plans uh and so you just go ahead\nand choose that you can choose two\ndifferent terms so one year threee so\nwould be simple as that and then you\nchoose the following payment options so\nyou have all upfront partial payment and\nno upfront and then you're going to\nchoose that hour of the commitment\nyou're not having to think about\nstandard versus convertible uh uh\nRegional versus zonal RI attributes it's\na lot simpler uh and let's just talk\nabout the three different saving plans\nor types in a bit more detail so you\nhave compute so compute savings plans\nprovides the most flexibility and helps\nto reduce your cost by 66% these plans\nautomatically apply to ec2 instances\nusage ads fargate 8s Lambda service\nusage regardless of the instance family\nsize AZ region Os or tency then you have\nec2 instances so this provides the\nlowest prices offering saving up to 72%\nin exchange for commitment to usage of\ninstance uh individual instance families\nin a region so automatically reduce uh\nyour cost on the selected instance\nfamily in the region regardless of a\nsize OS tendency gives you the\nflexibility to change your usage between\ninstances with a within a family in that\nregion and the last is sagemaker so\nhelps you reduce Sage maker cost by up\nto 64% automatically apply to Sage maker\nusage regardless of instance family size\ncomponent adus region if you don't know\nwhat sagemaker is that's adab Us's ml\nservice and it uses ec2 instances or\nspecifically ml ec2 instances so\neverything's basically using ec2 here um\nbut there you\n[Music]\ngo all right let's take a look at the\nzero trust model and the Zer trust model\nis a security uh model which operates on\nthe principle of trust no one and verify\neverything so what I mean by that is\nmalicious actors being able to bypass\nconventional access controls\ndemonstrates traditional security\nmeasures are no longer sufficient and\nthat's where the zero trust model comes\ninto play so with the zero trust model\nidentity becomes the primary security\nperimeter\nuh and so you might be asking what do we\nmean by primary security perimeter the\nprimary or new security perimeter\ndefines the first line of defense and\nit's security controls that protect a\ncompany's Cloud resources and assets um\nif it still doesn't make sense we do\ncover a part of the defense in depth\nwhere you see the layers of Defense from\ndata all the way to physical and so you\ncan kind of see you know what we're\ntalking about in that model there but\nthe old way that we used to do things is\nNetwork Centric so we had traditional\nfocused on firewalls and VPN since there\nwere few employees or workstations\noutside the office or they were in a\nspecific remote office so we treat the\nnetwork uh the network as kind of like\nthe the boundary so if you're in in\noffice there's nothing to worry about\nbut we don't think like that anymore\nbecause everything is identity Centric\nso this is where we have bring your own\ndevice remote workstations which are\nbecoming more common uh we can't always\ntrust that the employee is in a secure\nlocation we have uh identity based\nsecurity controls like MFA providing\nprovisional access based on the level\nrisk from where when and what a user\nwants to access and identity Centric\ndoes not replace uh but it augments\nNetwork Centric security so it's just an\nadditional layer of consideration for uh\nsecurity when we're thinking about our\nAus Cloud workloads\n[Music]\nokay all right so we just Loosely\ndefined what the zero trust model is so\nlet's talk about how we would do zero\ntrust on AWS and so zero trust has to do\na lot with identity security controls\nand so let's talk about what is at our\ndisposal on AWS so on AWS we have\nidentity and access management IM this\nis where we create users or groups or\npolicies so I policy is a set of\npermissions that allow you to say okay\nthis user is allowed to use uh these\nservices with these particular actions\nuh then you have the concept of\npermission boundaries and so these are\nsaying okay um these aren't the\npermissions the user has currently but\nthese are the boundaries to which we\nwant them to have so they should never\nhave access to um uh ml services and if\nsomeone's to uh apply them uh uh\npermissions it'll always be within these\nboundaries then you have service control\npolicies and these are organization-wide\npolicies so if you have a policy where\nyou don't want anyone to run anything in\nthe Canada region you can apply that\npolicy at the organizational level and\nit will be enforced then within an\npolicy there are the concept of\nconditions and so these are all the kind\nof like uh little knobs you can uh tweak\nto say how do I uh control based on a\nbunch of different factors so there's\nSource IP so restrict where the IP\naddress is coming from a requested\nregion so restrict based on the region\nas we just mentioned as an example uh\nmultiactor off presence so restrict if\nMFA is turned off uh current time so\nrestrict access based on time of day\nmaybe you know your employees should\nnever be really using things at night\nand so that could be an indicator that\nsomeone is doing something malicious so\nyou know only give them access during a\ncertain time a day and so that's where\nwe're going to figure out you know based\non all these type of controls security\ncontrols uh to our adus resources we can\nkind of enforce the zero trust model\nadus adus does not have a ready to use\nidentity controls that are intelligent\nwhich is why adus is considered not to\nhave a zero trust offering for customers\nand thirdparty services need to be used\nso what I'm saying is that technically\nyou know this checkbox is this thing\nsaying okay we can kind of do zero trust\non AWS but there's a lot of manual work\nand you know if I was to say okay um I\ndon't want anyone using this at\nnighttime that doesn't really detect you\nknow what I'm saying it's not going to\nsay oh I think this time is suspicious\nor malicious so then restrict access\nonly to these core services and anything\noutside of the services can't be used it\njust can't exactly do that without a lot\nof U work yourself and that's what I'm\ntalking about here where we have a\ncollection of aable services that can be\nset up in an intelligence intelligent is\ndetection way for identity concerns but\nrequires expert knowledge so the way you\nmight do on AWS is that everything all\nthe API calls go through ad's cloud\ntrail and so what you could do is feed\nthose into Amazon guard Duty and guard\nduty is an intrusion uh uh intrusion\ndetection and protection system so it\ncould detect suspicious or malicious\nactivity on those cloud trail logs and\nyou could follow that up with\nremediation or you could pass that on to\nAmazon detective that could analyze\ninvestigate and quickly identify\nsecurity issues uh that it could ingest\nfrom guard duty but I'm telling you that\nthis stuff here is not as easy um for\nthe consumer and so you of course you\ncan do zero trust model but it's going\nto take a lot of work here and there are\nsome limitations which we'll talk about\nnext\n[Music]\nhere so now let's see how we would do\nzero trust on OS with third Pary so os\ndoes does technically Implement a zero\ntrust model but does not allow for\nintelligent identity security controls\nwhich you know you can do it but it's a\nlot of work so uh let's kind of compare\nit against kind of a third party where\nwe would get the controls that we would\nnot necessarily get with AWS so for\nexample aure active directory has a real\ntime and calculated risk detection Based\non data points than AWS and this is\nbased on device and application time of\nday location whether MFA is turned on\nwhat is being accessed and the security\ncontrols verification or logic\nrestriction is much more robust so you\nknow just as one particular example like\ndevice and application is not something\nthat ads factors in uh with the existing\ncontrols or at least not in a way that\nis consumer friendly and you know I\ncan't say onus okay when you think that\nthis is the type of threat only allow\nthem access to these things or if you\nthink they're in a risky area or risky\nuh location only give them access to you\nknow these things where there's not\nsensitive data you can't exactly do that\non itus very easily and so this is where\nthird party Solutions are going to come\ninto play so you have Azure active\ndirectory Google Beyond Corp jump Cloud\nall these have more intelligent security\ncontrols for realtime detection um and\nso way you would use these is these\nwould be your primary directories uh for\nGoogle beond Corp is just a zero trust\nframework so I guess you'd use uh\nGoogle's uh Cloud directory but the idea\nanyway here is that you'd use single\nsign on to connect those directories to\nyour adus account and that's how You'\naccess access those uh itus resources\nand you get this more robust\nfunctionality\nokay hey it's Andrew Brown from exam Pro\nand we're looking at ident now we need\nto know a bunch of Concepts before we\ntalk about identity on AWS so let's jump\ninto it the first is a directory service\nso what is directory service well it's a\nservice that Maps the names of network\nresources to network addresses and a\ndirectory service is shared uh\ninfrastructure or information in\ninfrastructure for locating managing\nadministrating and organizing resources\nsuch as volumes folders files printers\nusers groups devices telephone numbers\nand other objects a directory service is\na critical component of a network\noperating system and a directory server\nor a name server is a server which\nprovides a directory service so each\nresource on the network is considered an\nobject by the directory server\ninformation about a particular resource\nis stored as a collection of attributes\nassociated with that resource or object\nuh well-known directory Services would\nbe a domain name service um so the\ndirectory service for the internet\nMicrosoft active directory and uh they\nhave a cloud hosted one called Azure\nactive directory we have aachi directory\nservice Oracle inter internet directory\nso o ID uh open ldap uh cloud and\nidentity and jump Cloud\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at active\ndirectory now you might say well we're\ndoing adab best why are we looking at\nthis well no matter what cloud service\nprovider you're using you should know\nwhat active directory is uh especially\nwhen it comes to Identity you can use it\nwith AWS um so let's talk about it so\nMicrosoft introduced active directory\ndomain services in Windows 2000 to give\norganizations's ability to manage\nmultiple on- premise infrastructure\ncomponents and systems using a single\nidentity per user and since then it's uh\ninvolved uh evolved obviously it's uh\nrunning Beyond Windows 2000 as of today\nand uh they even have a managed one\ncalled Azure ad which is on Microsoft\nAzure but just to kind of give you an\narchitectural diagram here the idea is\nthat you would have your domain servers\nhere uh and they might have child\ndomains and the idea is that you have\nthese running on multiple machines so\nthat you have redundant ability to log\nin from various places when you have a\nbunch of domains it's called a forest\nand then within a domain you actually\nhave organizational units and when then\nwithin organizational units you have all\nyour objects like your users your\nprinters your computers your servers uh\nall things like that\n[Music]\nokay hey it's Andrew Brown from xam Pro\nand we're talking about identity\nproviders\nipds so\nhey this is Andrew Brown from exam Pro\nand we are talking about identity\nproviders also known as\nidps so an identity provider is a system\nentity that creates maintains and\nmanages identity information for\nprinciples and also provides\nauthentication services to Applications\nwith a federation or distributor Network\na trusted provider of your user identity\nthat lets you use authent uh lets you\nauthenticate to access other service\nidentity providers so this could be like\nFacebook Amazon Google Twitter GitHub\nLinkedIn uh Federate identity is a\nmethod of linking a user's identity\nacross multiple separate identity\nmanagement systems and so some things\nthat uh we can use for that is like open\nID so this is an open standard and\ndecentralized Authentication Protocol\nallows you to be able to log in to\ndifferent social media platforms using\nGoogle or Facebook account open ideas\nabout providing who you are then we have\nooth 2.0 this is an industry standard\nprotocol for authorization oath doesn't\nshare password data but instead uses\nauthorization tokens to prove an\nidentity between consumers and service\nproviders oath is about granting access\nto functionality and then we have saml\nthe security assertion markup language\nwhich is an open standard for exchanging\nauthentication and authorization between\nan identity provider and a service\nprovider and this is important use for\nsamle which we use for single sign on\nVia the browser\n[Music]\nokay hey this is Andrew Brown from exam\nPro we're looking at the concept of\nsingle sign on so SSO is an\nauthentication scheme that allows a user\nto log in with a single ID and password\nto different systems and software SSO\nallows it departments to administer a\nsingle identity that can access many\nmachines and cloud services so the idea\nis you have Azure active directory this\nis just an example of a very popular one\nYou' use samle to do SSO and you can\nconnect to all things bu Google\nworkspaces Salesforce or your computer\nuh the idea here is uh once you uh log\nin um you don't have to log in multiple\ntimes so you log into your primary\ndirectory and then after that you're not\ngoing to be presented with a login\nscreen some Services might show an\nintermediate screen but the idea is\nyou're not entering your credentials in\nmultiple times so it's\n[Music]\nseamless all right let's talk about ldap\nso lightweight directory access protocol\nis an open vendor neutral industry\nstandard application protocol for\naccessing and maintaining distributed\ndirectory information Services over uh\nIP network so a common use of ldap is to\nprovide a central place to store\nusernames and passwords ldap enables for\nsame signon so same sign on allows users\nto uh use a single ID and password but\nthey have to enter it every single time\nthey want to log in so maybe you have\nyour on premise active directory and\nthen it's going to store it in that ldap\ndirectory and so the idea is that um you\nknow all these services like Google\nkubernetes um jenkings is going to uh\ndeal with that ldap server so why would\nyou use ldap over SSO which is more\nconvenient or seamless so most SSO\nsystems are using ldap under the hood\nbut ldap was not designed neighly to\nwork with web applications so some\nsystems only support integration with\nldap and not SSO so you got to take what\nyou can get\n[Music]\nokay let's let's take a look here at\nmultifactor authentication also known as\nMFA and this is a security control where\nafter you fill in your user's name and\nemail password you have to use a second\ndevice such as a phone to confirm that\nit's you that is logging in so MFA\nprotects against people who have stolen\nyour password MFA is an option in most\nCloud providers and even social media\nwebsites such as Facebook so the idea is\nI have my uh username or email and\npassword I'm going to try to log in this\nis the first factor and the second\nFactor multiactor is I'm going to use a\nsecondary device so maybe my phone we're\ngoing to enter in different codes or\nmaybe it's passwordless so I just have\nto press a button to confirm that it's\nme and then I'll get access so in the\ncontext to AWS it's strongly recommended\nthat you turn on MFA for all your\naccounts especially the adus root\naccount uh we'll see that when we do the\nfollow\n[Music]\nalongs let's take a look at security\nkeys so a security key is a second\ndevice used as a second step in\nauthentication process to gain access to\na device workstation or application a\nsecurity key can resemble a memory stick\nand when your finger makes contact with\na button of exposed metal on the device\nit will generate and autofill a security\ntoken a popular brand of security Keys\nis the UB key and this is the one I use\nand is looks exactly like the one that's\nright beside my desk it works out of the\nbox with Gmail Facebook and hundreds\nmore supports pho2 web o n uh u2f it's\nwaterproof and crust resistance it uh\nhas Vari like usba us NFC dual\nconnectors on a single key can do a\nvariety of things so when you turn on\nMFA on your ads account you'll have\nvirtual MFA device so that's when you're\nusing something like a phone or using\nsoftware on your phone to do that then\nthere's the u2f security key so this is\nwhat we're talking about right now and\nthere's even other kinds of Hardware MFA\ndevices um which we're not really going\nto talk about but um you know just\nsecurity Keys tie into MFA and this is a\nlot better way than using a phone\nbecause you know you can have it on your\ndesk and press it um and you know you\ndon't have to worry about your phone\nbeing not charged\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at itus\nidentity and access management also\nknown as IM am and you can use this\nservice to create and manage adus users\ngroups uh use permissions to allow and\ndeny their access to adus resources so\nthere's quite a few components here\nlet's get to it so the first is I am\npolicies so these are Json documents\nwhich Grant permissions for specific\nusers groups or a role to access\nservices and policies are attached to IM\nIM identities then you have I am\npermissions or a permission and this is\nan API action that can or cannot be\nperformed and they represented in the IM\npolicy document then there's the IM\nidentity so we have IM users these are\nend users who log into the console or\ninteract with ad resources\nprogrammatically or via clicking UI\ninterfaces you have IM groups so these\nthese uh group up your users so they all\nshare the same permission levels so\nmaybe it's admins developers or Auditors\nthen you have IM roles so these roles\nGrant adus resources uh permissions to\nspecific adus API actions and Associate\npolicies to a role and then assign it to\nan adus resource just understand that\nroles are when you're attaching these to\nresources so like if you have an ec2\ninstance and you say it has to access S3\nyou're going to be attaching a a role\nnot a policy directly okay\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are looking at I impulses a\nlittle bit closer here and they are\nwritten in Json and contain the\npermissions which determine the API\nactions that are allowed or denied um\nand rarely do I write these out by hand\nuh because they have a a little wizard\nthat you can use to write out the code\nfor you but if you want to you\nabsolutely can write it out by hand but\nwe should know the contents of it and\nhow these Json files work so the first\nthing is the version um which is the\npolicy language version and it's been\n2012 for a very long time I don't see\nthat changing anytime soon if they\nhappen to\nchange what or what the structure of the\nJson is then you have the statements and\nthese are for policy elements uh and\nyou're allowed to have multiples of them\nso the idea is that this is the the\npolicies or permissions we should say uh\nthat you uh plan on applying then you\nhave the Sid this is a way of labeling\nyour statements um this is useful for\nlike visualization or for ref\nreferencing it for later on but a lot of\ntimes you don't have to have a sid um\nthen there's the effect it's either\nallow or deny then you have the action\nso here we're saying give access to S3\nfor all actions under it there's another\naction down below where it's saying give\naccess I'm going to get my pen tool out\nhere just to create a service link rle\nso that's a cross account rule there\nthen there's the principal so this is\nthe account user role or Federated user\nto which you would like to allow access\nor deny so we're specifically saying uh\nthis IM user named Barkley um in our\nadus account there uh then there are the\nresources so the resources to which the\naction applies um so in this one up here\nwe are specifying a specific adus bucket\nhere we're saying all possible resources\nin in anus account and then the\ncondition so there's all sorts of\ndifferent kinds of conditions so this is\na string like one and it's saying look\nat the service name and if it starts\nwith this or that then they'll have\naccess to that so this person even\nthough it says all resources they're\nreally only going to have access to RDS\nokay\n[Music]\nso in this follow along we're going to\ntake a closer look at I am policies so\ngo to the top and type in I am and what\nwe'll do is make our way over here uh\nall the way over to policies and what I\nwant to do is create a new policy that\nonly has access to uh um limited\nresources\nso um let's say we want to create an\nAmazon ec2 instance and that ec2\ninstance has access to a very particular\nS3 bucket so what I want you to do is\nmake your way over to S3 and we're going\nto create ourselves a new\nbucket and I'm going to go ahead and\ncreate a bucket here we're going to call\nthis\num policy\ntutorial and I'm going to just put a\nbunch of numbers here you'll have to\nrandomize it for your use\ncase and so now that we have our bucket\nwhat we're going to do is go ahead and\ncreate a\npolicy and the policy is going to choose\na service we're going to say S3 and what\nI want to do is only be able to list out\nactions I'm going to expand this so I\ndon't want everything so we're just\ngoing to say list\nbuckets okay and then what we'll do is\nuh expand this here and I want to save\nfor a particular bucket so we'll go back\nover here click into our\nbucket and uh we're going to go ahead\nand set those\npermissions by finding that Arn we're\ngoing to paste that\nwe're going to paste that RN up there\nsometimes it's a bit tricky it vanishes\non\nyou and we could set other conditions if\nwe wanted to but this is pretty simple\nas it\nis and so that's our rule here right so\nwe're saying this policy allows us to\nlist this bucket for that\nokay so what we'll do is go ahead and\nhit next we'll hit review and we'll just\nsay my bucket\npolicy and we'll create that policy\nokay so there's a few other things I\nthink that I'd like to do with this\npolicy I'm going to pull it back up here\nso if we want to find it uh they used to\nbe able to filter these based on the\nones that you\ncreated but\num yeah these are like the little icons\nso these are ones that I've created up\nhere and so there's my bucket\npolicy and I feel like I want to update\nthis policy to have a bit of extra\ninformation here so I'm going to go edit\nthis\npolicy no you know what I think this is\nfine so what I want to do is now create\na\nro and we're going to create a new role\nand I'm going to call this\num well before I do I need to choose\nwhat it's for so it's going to be for\nec2 so we're going to go ahead and hit\nnext we're going to choose our policy so\nmy bucket policy there it is and I want\nto add another one here because I want\nto be able to use sessions manager\nbecause I really don't want to use an\nSSH key to check that this works and\nso um for this I I need to use SSM so\nI'm going to type in SSM\nhere and I'm going just make sure this\nis the new one so this policy will soon\nbe deprecated use Amazon SSM manag for\ninstance should always open these up and\nread them to see what they do and so\nthat's the one that's going to allow us\nto access uh Simpson manager so we can\nuse um sessions manager okay and so I'm\ngoing to say my ec2 roll for S3\nwe going go ahead and create ourselves a\nroll so now that we have our roll I'm\ngoing to go over to\nec2 and I'm going to go ahead and launch\nmyself a new\ninstance we're going to choose Amazon L\n2 we're going to stick with T2 micro I'm\ngoing to go over to configuration here\neverything is fine here um I'm fine with\nall that storage is fine we'll go to\nSecurity Group and I don't want any\nports open because I'm not going to be\nusing\nSSH we're going to launch this instance\nI don't even want to key\npair\nokay and then we're going to go over\nhere and so what we're waiting for is\nthis instance to launch as that is going\nwhat I want to do is go over to my S3\nbucket and I want to place something in\nthis bucket so I do have some files here\num so what I'm going to\ndo is create a new folder here whoops uh\nI'm going to go back\nand I'm just going to create a folder\nfirst create a folder Enterprise\nD and I'm going to click into this and\nthen I'm going to upload all my images\nhere so you'll have to find your own\nimages off the internet this is just the\nones I have and we'll go ahead and\nupload\nthose give that a\nmoment okay and so we don't have access\nto read those files we'll adjust our\npolicy as we go so that we can do that\nokay so this instance should be running\num it does doesn't have the two status\nchecks pass we should be able to uh\nconnect to it so click on connect here\nand so we have options like E2 instance\nconnect sessions manager SSH client I\nwant you to go to sessions manager it\nsays we weren't able to connect to your\ninstance common reasons SSM agent wasn't\ninstalled we absolutely have it\ninstalled the required IM profile oh\nright so we were supposed to attach I\nforgot we were supposed to attach an ion\nprofile right so an ion profile is the\nRO uh it or the it holds the role uh\nthat's going to give the permissions to\nthat instance and since we didn't add it\nwe have to go retroactively added after\nthe\nfact and so I'm going to have to modify\nthe IM roll and we're going to choose my\nec2 roll for S3 and we're going to save\nthat and actually when that happens you\nhave to reboot the machine you only have\nto do that if you have no Ro attached\nlike prior no profile attached and\nyou're attaching for the first time but\nafter that you never have to reboot the\nmachine this is the only case where\nyou'd have to do\nthat that's why when I launch an ec2\ninstance I always at least have the SSM\nR attached the managed one that gets\nsessions manager so that I don't ever\nhave to do a reboot in case I have to\nupdate the\npolicy and so we will give that a moment\nthere it says initializing so I'm going\nto try again to connect to it okay\nand we still don't have that option\nthere um so I'm going to go back to my\ninstances I'm going to check to see if\nthe RO the RO or policy is\nattached or profile I should\nsay so I'm just looking for it\nhere there it\nis and so if I click into this into the\nr we can see that we have the Amazon SSM\nmanaged instance core there so that's\nset up and the my uh bucket policy so\nthis has everything that it should be\nable to do it no\nproblem okay so I'm going to try that\nagain okay so now the connect shows up\nOS is finicky like that you just have to\nhave confidence in knowing what you're\ndoing is correct okay we'll go ahead and\nhit\nconnect and I didn't have to use SSH\nkeys or anything and this is a lot more\nsecure way to connect your instances\nwhen it logs Us in it's going to set us\nas the SSM user but we want to be\nthe um the ec2 user\nokay that's uh ads always makes their uh\nam like their Linux versions as the ec2\nuser and that's what you're supposed to\nuse but it's just you just that's how\nyou have to get to that you just have to\ntype that pseudo Su hyphen ec2 user okay\njust once and if you type who am I\nthat's who you are if you type type exit\nyou'll go back to that user so if I type\nexit and I type who am I I'm now this\nperson so I'm going to go back hit up go\nback in there type clear so now I want\nto see if I have access to S3 so I have\nto do a S3 LS want to see if I can list\nbuckets it says access\ndenied\nso I mean that kind of makes sense\nbecause if you have list buckets and\nwe're just saying only that bucket that\nmight not make a whole lot of\nsense so I'm GNA go back to my policy I\nmight just written a a crummy policy but\nwe'll say I am here if we have that one\nopen we should just go\nhere and click on this policy\nhere I'm going to edit that\npolicy so I'm going to do is I'm just\ngoing to change it and we say all\nresources review the policy save changes\nand we'll see how fast that\npropagates okay\nbecause I'm pretty sure I don't have to\ndo anything here it should just now give\nme full access to\nS3 just going to keep on hitting up\nhere so what I'm going to do is I'm just\ngoing to take like a three four minute\nbreak going to get a drink I'm going to\ngo back here and see if this propagates\nI'm pretty sure I don't have to do\nanything for that to propagate and I\nthink that I've attached everything\ncorrectly here\nokay okay so I haven't had much luck\nhere it's still having the same issue so\nif that is happening what I'm going to\ndo um is I'm just going to reboot it\nbecause maybe I didn't give it a good\nopportunity to reboot there again I\ndon't think we should have to reboot it\nevery time when we're we're changing um\nuh things there but we will give it\nanother go here and see if that fixes\nthat problem there so no sessions manner\nis going to time out here which is\ntotally\nfine it's going to kill that session\nthere um and so what we'll have to do is\nclose this out because there's not much\nwe can do with\nthat and we're going to go ahead and go\nback to connect and so we're waiting for\nthis button to appear because it is\nrebooting so if we want to monitor that\nstuff usually there is an option here to\nmonitor where it'll show us the system\nlogs of what it's doing so here it's\njust like restarting the\nmachine I'm not sure if we expect to see\nsomething after\nthis so I can click that\nthere and uh yeah it's easy to get\nturned around this so I can connect to\nit again\nnow we'll type in pseudo Su hyphen ec2\nuser ads S3\nLS and we still\nhave access deny for list buckets so if\nthat's the case it could be that um\nsometimes you need other permissions\nwhen doing list policy like uh list\nbuckets so if that's the case we're\ngoing to do a sanity check I'm just\ngoing to say all permissions here okay\nand this way there's no way that I've\nset this incorrectly um it just has to\nwork now so type this\nin there we go okay so there has to be\nsomething more to it so just because you\nsay list buckets you know like means\nthere must be more to it right so if I\ngo here to this\nright and I say\nwhoops and I say uh list buckets here\nwe'll say\ncopy paste\nokay here it's saying maybe I need get\nobject as well so I just know from using\nit us a long time that that's the case\nthat it could be more than one thing so\nyou know that was in the back of my mind\nthat that could be happening and I guess\nthat is but notice that didn't have to\nrestart my uh my server boot my server\nto get those to work um uh but anyway\nlet's go lock that down and see if we\ncan just kind of make this uh more\nfocused so let's say um all resources\nI'm going to\nspecify the\ncondition so I might want to just say\nfor particular\nbuckets we say\nspecific when you checkbox everything\nthen you have to do this so for storage\naccounts these are fine any for object\nobjects that could be something we'll\nsay multi- region access bucket any\nbucket but what I'm going to say is I\nwant to only allow them to access things\nin a particular bucket and so if I go to\nArn\nhere um what is our bucket\nname our bucket name is policy tutorial\n34141\nwhatever right and so we can actually\ngive it a wild card or we can say\nEnterprise\nD and we learned this in the course that\nuh you can provide arms with\nrandomize things there I don't know if I\nspelled it wrong over here so I should\nreally double check I should probably\njust copy\nit\noops I just don't want to type it wrong\nand so\nthis\nokay means that we should only be able\nto get stuff from there I'm going to\nreview the policy let see if it takes\nsave the\nchanges and if I just view the Json\nhere notice it says anything from here\nright so allow S3 anything as long as\nit's within here and then it also broke\nit up into sub1 4 here okay um so anyway\nwhat I want to see is what\nhappens if I upload something into the\nloose area here so I'm say\nupload and I'm going to just say add a\nfile we're just going to grab data here\nand upload\nit go back to our bucket there's our\nfile we have that stuff in there and so\nif I go back over to my ec2 instance\nwhich I'm still connected\nto uh who am I okay great clear um so\nI'm going to say ads S3 LS see if that\nworks still it does good and so what I\nwant to do is see if I can copy a file\nlocally so I'm going to do Abus S3\ncopy I think it was S3 a no it's just S3\ncopy POC uh S3 SL SL\npolicy\ntutorial\n34 141 whoops\n34 tutorial\nhyphen\n34141\nslash Enterprise\nD data.jpg I think it's a JPG let's go\ndouble check yeah it is okay and then I\njust want to say data.\njpg it downloaded it right so I'm going\nto remove that one and so now what I'm\ngoing to do is I'm just going to see if\nmy policy is working or maybe my\npermissions aren't exactly what I think\nthey are and I was able to download it\nso\nit's these policies can get kind of\ntricky because like this one says allow\nall actions for these but then these say\nall actions and\nso that makes it hard because I want get\nobject so another thing we can\ndo and if that one doesn't work really\nwell I'm just going to write one by hand\nit's not that scary to write these by\nhand you just get used to it so I'm\ngoing to say effect\num is it disallow or maybe it's\ndeny\ndeny\naction S3 get object I believe that's\nwhat it\nis\nresource and then I'm going to specify\nexactly the resource I don't want it to\nallow so we're going to say\nAR AWS s three three\ncolons policy\ntutorial\n34141 uh and just say data.jpg\nnow if this is not valid it's going to\ncomplain and say hey you didn't write\nthis right and it and it's fine okay\nso we'll save those\nchanges and so that should deny access\nto that right\nhopefully I got the policy\nright okay so that one doesn't work\nwhich is\nfine and that one's fine so that worked\nwe were able to deny that but you can\nsee there's a little bit of an art to\ncreating these policies uh as you make\nmore of them it becomes a lot easier so\nhopefully it's not too scary but uh\nthat's all there really is uh to it that\nI want to show you today so what we're\ngoing to do is clear out this bucket\nwe're done with this bucket here so\nwe'll say delete whoops we got to empty\nit first\nand we'll just say permanently delete\nhere okay and we will exit that out\nwe're going to go ahead and delete that\nbucket grab its name\nhere and uh we'll go back over\nhere I think I forgot to delete this\nBucket from earlier I'm just going to\ndelete that because I don't need that\nbucket so that's okay with you just\ngoing to go ahead and delete that\nand we have that ec2 instance running so\nwe want to stop\nthat go ahead and we're going to\nterminate that yes\nplease and then we'll go to IM and do\nsome\ncleanup I have some custom roles I've\nbeen creating um you know from prior\nthings a lot of those usually there's a\nway to uh We've redesigned it okay\nwhere's the redesign this is the\nredesign that can't be it because\nthere'll be like rolls that ads makes I\nthink these are all rolls that I've\nmade um I don't want to delete service\nrolls but I want to get rid of some of\nthese because I just have too many you\nknow it's getting out of hand for me and\nI'm going to just see if it will let\nme\ndelete all of these let's delete those\nthere we go just clean up a bit I still\nhave a lot here but there's like service\nroles that OS creates once and you\nreally don't want to delete those\nbecause you\ndon't um and then I have a bunch of\nthese like I'm never going to use these\nso I might as well detach them delete\ndetach you really don't want to keep\nlike rolls that you're never going to\nuse\naround things like that like gauze we're\ngoing to be using that\nagain\ndelete there's that bucket we just\ncreated anyway you get the idea so uh\nyeah that's uh that's I am\n[Music]\nokay principle of least privilege PP is\nthe computer computer security concept\nof providing a user role or application\nthe least amount of permissions to\nperform an operation or an action and\nthe way we can look at it is that we\nhave just enough AIS so Jaa permitting\nonly the exact actions for the identity\nperform a task and then we have just in\ntime jit permitting the smallest length\nof duration an identity can use\npermission so usually when we're talking\nabout PLP it's usually a focus on here U\nbut now these days uh there's a larger\nfocus on jit as well and so J is the\ndifference between having longlived um\nuh permissions or access Keys versus\nshort-lived ones and the most\nProgressive thing in PP is now\nrisk-based adaptive policies so each\nattempt to access a resource generates a\nrisk score of How likely the request is\nto be from a compromized source so the\nrisk score could be based on many\nfactors such as device user location IP\naddress what service is being accessed\nand when did they use MFA did they use\nBiometrics things like that and right\nnow as of this time itus does not have a\nrisk-based adaptive policies built into\nI am you can roll your own um what's\ninteresting is Cognito has risk-based\nadaptive policies they call like um\nadaptive authentication but that's for\nuser pools and not identity pools user\npools is for getting access to an app uh\nthat you have built through an ipd where\nidentity pools in cognito is about\ngetting access to aabus resources so uh\nyou know I'm sure abos will get it\neventually but they just don't have it\nright now and you have to rely on third\npart party um identity Solutions uh to\nget risk-based adaptive policies now\ntalking about just enough access and\njust in time just in time is like you\nthink how would you do that with the ads\nyou just add and remove permissions\nmanually well one thing you could do is\nuse something like console me so this is\nan open- Source Netflix project to self-\nserve short-lived IM policies so an end\nuser can access ad resources while\nenforcing Jaa and jit and so there's a\nrepo there as well um the idea is they\nhave like this self- sered wizard so you\nsay I want these things and then the\nmachine decides okay you can have them\nor you you don't need them and it just\nfreezes you up asking people and\nworrying about the length and stuff like\nthat\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at the\nidibus root user uh and this gets\nconfusing because there's an account\nroot user and regular user so let's\ndistinguish what those three things are\nso here we have an adus account and the\naccount which holds all the adus\nresources including the different types\nof user\nthen you have the root user this is a\nspecial account with full access that\ncannot be deleted and then you have just\na user and this is a user for common\ntasks that is assigned permissions so\njust understand that sometimes people\nsay it was account they're actually\nreferring to the user and sometimes when\nthey're saying account they're actually\nreferring to the AES account that holds\nthe users I know it's confusing it just\nit's based on what people decide the\ncontext is when they're speaking so the\nads account user is a special user who's\ncreated at the time of the ABS account\ncreation\nand they can do uh they have a lot of\nconditions around them so the re user\naccount uses an email and password to\nlog in as opposed to the regular user\nwho's going to provide their account ID\nAlias username and password the root\nuser account cannot be deleted the root\nuser account has full permissions to the\naccount and its permissions and cannot\nbe limited and when we say it cannot be\nlimited we're saying that if you take an\nIM am policy to explicitly deny the user\naccess resources it's not something you\ncan do however you can do it in the case\nof adab organizations service control\npolicies because a service control\npolicy applies to a bunch of accounts so\nit just it's one level above and so that\nis a way of limiting root users but\ngenerally you can't limit them within\ntheir own account uh there can only be\none root user uh per ad of us account\nthe root user is instead for very spe\nspecific and specialized tasks that are\ninfrequently or rarely performed and\nthere's a big list and we'll get into\nthat here in a moment and the root uh\naccount should uh not be used for daily\nor common tasks it's strong strongly\nrecommended to to never use the root\nusers access keys because you can\ngenerate those and use them it's\nstrongly recommended to turn on MFA for\nthe root user and AD us will bug you to\nno ends to tell you to turn it on so\nlet's talk about the uh tasks that you\nshould be performing with a root user\nand only the root user can perform so\nchanging your account settings this\nincludes account name email address root\nuser password root user access Keys\nother account settings such as contact\ninformation payment currency preference\nregions do not require the root user\ncredentials so not everything um restore\nIM user permissions so if there's an i\nIM admin so it's just a user that has\nadmin access who actually revokes their\nown permissions you can sign into the\nroot user to edit policies and restore\nthose permissions um so you can also\nactivate IM access to the billing and\ncost Management console you can view\ncertain tax invoices you can close your\nads account you can change or cancel\nyour adus support plan register as a\nseller in the reserved instance\nMarketplace enable MFA delete on S3\nbuckets edit or delete an Amazon S3\nbucket policy that includes an invalid\nVPC ID or VPC endpoint ID sign up for\ngovcloud and something that's not in\nhere which this I took this from the\ndocumentation but uh you can use the\nadus uh account user to create the\norganization you can't create that with\nany other user so um you know the ones I\nhighlighted in red are very likely to\nshow up your exam and that's uh why I\nhighlighted them there for you but there\nyou go\n[Music]\nhey this is Andre Brown from exam Pro\nand we are taking a look at adus single\nsign on also known as adus SSO and so\nthis is where you create or connect your\nWorkforce identities in adabs once and\nmanage access centrally across your adus\norganization so the idea here is you're\ngoing to choose your identity Source\nwhether it's it SSO itself active\ndirectory samle 2.0 IDP you're going to\nM manage user permission centrally to\nads accounts applications samle\napplication\nand it uses it can you get single click\naccess to all these things so you know\njust to kind of zoom in on this graphic\nhere uh you know you have your on\npremise active directory it's\nestablishing a ad trust connection over\nto Able single sign on you're going to\nbe able to apply permissions to access\nresources within your adus account so\nvia adus organizations in your\norganizational units down to your\nresources you can also use ads SSO to\naccess custom samle based application so\nyou know if I built a web app and I uh\nlike the exam Pro platform and I wanted\nto use sample based uh connections for\nsingle sign on there I could do that as\nwell and you can connect out SSO access\nto your business Cloud application so\nOffice 365 Dropbox slack things like\nthat so there you\n[Music]\ngo let's take a look here at application\nintegration so this is the process of\nletting to Independent applications to\ncommunity Comm unicate and work with\neach other commonly facilitated by an\nintermediate system so Cloud workloads\nuh strongly encourage systems and\nservices to be Loosely coupled and so\ninabus has many services for the\nspecific purpose of application\nintegration and these are based around\ncommon systems or design patterns that\nutilize application integration and this\nwould be things like queuing streaming\nPub sub API gateways State machines\nevent buses and I'm sure there are more\nbut that's what I could uh think about\nthat are the most common ones\n[Music]\nokay so to understand queuing we need to\nknow what is a messaging system so this\nis used to provide asynchronous\ncommunication and decouple processes via\nmessages and events from a sender\nreceiver or a producer and a consumer so\na queing system is a messaging system\nthat generally will delete messages once\nthey are consumed it's for simple\ncommunication it's not real time you\nhave to pull the data it's not reactive\nand uh a good analogy would be imagine\npeople that are queuing in a line to go\ndo something so fre TOS it's called\nSimple queuing service sqs it's a fully\nmanaged queuing service that enables you\nto decouple and scale microservices\ndistributed systems and serverless\napplications so a very common use case\nin a web application would be to queue\nup transactional emails uh to be sent\nlike sign up reset password and the\nreason why we have queing to decouple uh\nthose kind of actions is that if you had\na long running task um and you had too\nmany of them it could hang your\napplications so by decoupling them and\nletting a separate compute uh service\ntake care of that um that would be\nsomething that would be very useful\n[Music]\nokay let's take a look here at streaming\nand so this is a different kind of\nmessaging system um but the idea here is\nyou have multiple cons consumers that\ncan react to events and so in streaming\nwe call messages events and then in a\nqueing system we just call them messages\nbut events live in the Stream for long\nperiods of time so complex operations\ncan be applied and generally streaming\nis used for Real Time stuff whereas\nqueuing is not necessarily real time and\nso ad's solution here is Amazon Kinesis\nyou could also use Kafka but we'll focus\non Kinesis here so Amazon Kinesis is the\nadist fully managed solution for\ncollecting processing and analyzing\nstreaming data in the cloud so the idea\nis that you have these producers so that\nare producing events could be ec2\ninstances mobile devices could be a\ncomputer or traditional server they're\ngoing to go into the data stream there's\na bunch of shards that scale and there's\nconsumers on the other side so maybe red\nshift wants that data Dynamo DB S3 or\nEMR okay but the thing you have to\nremember is that streaming Is For Real\nTime data and as you can imagine because\nit's real time and it's doing a lot more\nwork than um a queuing system it's going\nto cost more okay\nso we have another type of messaging\nsystem known as pubsub so this stands\nfor publish subscribe pattern commonly\nimplemented in messaging systems and a\npub sub system the sender of messages\nthe Publishers do not send their message\ndirectly to receivers they instead send\ntheir messages to an event bus the event\nbus categorizes their messages into\ngroups then receivers of messages\nsubscribers subscribe to these groups\nwhenever new messages appear within\ntheir subscriptions the messages are\nimmediately delivered to them so the\nidea is you have Publishers event bus\nsubscribers and event buses appear more\nthan once so it actually appears in\nstreaming appears in this Pub sub model\nand then it can appear in other\nvariations so you're going to hear it\nmore than once the word event bus um so\nthe idea here is the publisher has no\nknowledge of who the subscribers are\nsubscribers do not pull for messages\nmessages are instead automatically\nimmediately pushed to the subscribers\nand messages and events are\ninterchangeable terms in Pub sub all\nright and so you know the idea here with\nPublisher subscribers just imagine\ngetting like a um a magazine\nsubscription right if you think of that\nyou kind of think of the mechanisms that\nare going here in terms of practicality\nit's very common to use these as a\nreal-time chat system or a web hook\nsystem so you know hopefully that gives\nyou an idea there in terms of aws's\nsolution we're using simple notification\nservice SNS this is a highly available\ndurable secure fully managed Pub sub\nmessaging service that enables you to\ndecouple micros Services distributed\nsystems and serverless applications so\nhere we have a variety of Publishers\nlike the SDK the CLI cloudwatch a with\nServices you'll have your SNS topic you\ncan uh filter things fan them out and\nthen you have your subscribers so Lambda\nsqs emails HPS looks very similar to\nstreaming but again you know um you know\nthere's not a lot of communication going\nback between it it's just Publishers and\nsubscribers and it's limited to you know\nthese things here so it's a very managed\nservice right whereas uh Kinesis you can\ndo a lot more with it\n[Music]\nokay so what is API Gateway well it is a\nprogram that sits between a single entry\npoint and a and multiple backends API\nGateway allows for throttling logging\nrouting logic or formatting of the\nrequests and response when we say\nrequest and response we're talking about\nhttps uh requests and responses and so\nthe service for ads is called Amazon API\nGateway so API Gateway is just a type of\npattern and this is the few cases where\nADS has named the thing after what it is\nand so we have Amazon API Gateway which\nis a solution for creating secure apis\nin your Cloud environment at any scale\ncreate apis that act as a front door for\napplications to Access Data Business\nlogic or functionality from backend\nservices so the idea is that you have\ndata coming in from uh mobile apps web\napps iot devices and you Define the API\ncalls and then you say where do you want\nthem to go so maybe tasks are going to\ngo to your lambdas um and then other\nroutes are going to go to RDS Kinesis\nec2 uh or your web application and so\nthese are really great for having um\nthis uh being able to Define your API\nroutes and change them on the Fly and\nthen and always route them to the same\nplace\n[Music]\nokay so what is a state machine it is an\nabstract model which decides how one\nstate moves to another based on a series\nofad conditions think of a state machine\nlike a flowchart and for AWS the\nsolution here is adus Step function so\ncoordinate multiple adus Services into a\nserverless workflow a graphical console\nto visualize the components of your\napplication as a series of steps\nautomatically trigger and track each\nstep and retries when there are errors\nso your application executes in order as\nexpected every time logs the state of\neach step so when things go wrong you\ncan diagnose and debug problems quickly\nand so here's the example of using a\nbunch of um uh steps together on the uh\nthe adus step functions service and so\nyou know this is generally applied for\nservess workflows but it is something\nthat is very useful in application\nintegration\n[Music]\nokay so what is an event bus an event\nbus receives events from a source and\nroutes events to a Target based on rules\nso I'll get my pen tool out here so we\nhave an event it enters the event bus we\nhave a rules tell it to go to the Target\nit's that simple and we have been seeing\nevent buses in other things like uh\nstreaming and uh Pub sub but adus has\nthis kind of event bus offering uh that\nis kind of uh high level it's called\nevent bridge and it's a service event\nbus service that is used for application\nintegration by streaming realtime data\nto your applications the service was\nformerly known as event Amazon\ncloudwatch events they gave give it a\nrenaming to give it a a better um\nopportunity for users to know that it's\nthere to use uh and they also extended\nits\ncapabilities and so the thing is is that\na lot of AD services are always\nadmitting events and they're already\ngoing into this bus and so if you\nutilize this service um it's a lot\neasier than having to roll your own\nthing uh with other services so Amazon\nevent bridge will just Define an event\nbus so there is an event bus holds event\ndata defines the rules on event bus to\nreact to events you always get a default\nevent for every single adus account you\ncan create custom event buses scope to\nmultiple accounts or other adus accounts\nyou have a SAS event bus scope to\nthirdparty SAS providers you have\nproducers these are ad services that\nemit events you have events these are\ndata emitted by Services they're jent\nobjects that uh travel the stream within\nthe event bus you have partnered sources\nthese are third-party apps that can emit\nevents to event buses you have rules\nthese determine what events to capture\nand pass to targets and then targets\nwhich are a services that consume events\nso yeah it's all just this great\nbuilt-in um uh uh stuff that's going on\nhere and so you know there there might\nbe a case where you can use event bridge\nand save your time uh a lot of time and\neffort uh doing application integration\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at\napplication integration services at a\nglance here so let's get through them so\nthe first is simple notification service\nSNS this is a pub sub messaging system\nsends notific ation via various formats\nsuch as plain text email htps web hooks\nSMS text messages sqs and Lambda pushes\nmessages which are then sent to\nsubscribers you have sqs this is a\nqueuing messaging system or service that\nsends events to a queue other\napplications pull the queue for messages\ncommonly used for background jobs we\nhave step functions this is a state\nmachine service it is it coordinates\nmultiple a Services into a servess\nworkflow easily share data among lambdas\nhave a group of lambdas wait for each\nother create logical steps also works\nwith fargate tasks we have a rent Bridge\nformerly known as cloudwatch events it\nis a service event bus that makes it\neasy to connect applications together\nfrom your own application thirdparty\nservices and adus services then there's\nKinesis a real-time streaming data\nservice creates producers which send\ndata to a stream multiple consumers can\nconsume data within a stream used for\nrealtime analytics click streams\ningesting data from a fleet of iot\ndevices you have Amazon mq this is is a\nmanage message broker service that uses\nApachi active mq so if you want to use\nApachi active mq there it is manage\nkofka service and this gets me every\ntime because it says\nmsk and that is the proper\ninitialization but you'd think it'd be\nMKS it is a fully managed Apachi Kafka\nservice kofka is an open source platform\nfor building realtime streaming data\npipelines and applications similar to\nKinesis but more robust very popular by\nthe way we have API Gateway a fully\nmanaged service for developers to create\npublish maintain Monitor and secure apis\nyou can create API endpoints and wrote\nthem to ad Services we have appsync this\nis a fully managed graphql service\ngraphql is an open- Source agnostic\nquery adapter that allows you to query\ndata from many different data sources so\nthere you\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we are comparing virtual\nmachines to Containers so I know we\ncovered this prior but I just want to do\nit one more time just to make sure that\nwe fundamentally understand the\ndifference before we jump into\ncontainers so the idea is that if you\nwere to request an ec2 instance it has a\nhost operating system that we don't\nreally know much about but we don't\nreally need to know uh and then the idea\nis you have a hypervisor which allows\nyou to deploy virtual\nmachines and so when you launch an ec2\ninstance you're actually launching a VM\non top of a hypervisor on a server uh\nwith on uh within the adabs uh data\ncenters servers there and you're going\nto choose an operating system so like\nfun to and it might come with some\npre-installed packages or you're going\nto install your own libraries packages\nand binaries and then you're going to\ndecide what kind of workloads you want\nto run on there so it could be D Jango\nuh mongodb so your database and some\nkind of queuing system like rabbit mq\nthe difficulties with virtual machines\nyou're always going to end up with some\nunused space because you're going to\nwant to have some Headroom uh to make\nsure that uh you know if you know Dango\nneeds more memory or or mongod DB needs\nmore storage that you have that room\nthat you can grow into\nbut the idea is that you're always\npaying for that even when you're not\nutilizing it and so you know that can be\nuh not as cost effective as you'd like\nit to be so when we're looking at um\ndoing this again and we are using\ncontainers um instead of the hypervisor\nwe have container virtualization a very\ncommon one would be called Docker Damon\nfor Docker of course and so now you're\nlaunching containers and so maybe you\nhave Alpine and this is for your web app\nand then you install exactly the\nlibraries packages and binaries you need\nfor that and then for mongodb you want\nto have a different OS different\npackages and same thing with Rabbid mq\nmaybe you want to run it on FreeBSD and\nthe idea is that uh you know you're not\ngoing to have this waste because it it's\nkind of changed in the sense that these\ncontainers are flexible so they can\nexpand or decrease based on the the use\ncase of what they need uh and you know\nif you use particular services like it\nfargate you know you're paying like for\nrunning the containers not necessarily\nuh for over provisioning okay so VMS do\nnot make best use of space apps are not\nisolated which could cause config\nconflict security problems or resource\nhogging containers allow you to run\nmultiple apps which are virtually\nisolated from each other launch new\ncontainers configure OS uh dependencies\nper container\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at the\nconcept of microservices and to\nunderstand microservices we first need\nto understand monoliths or monolithic\narchitecture and the idea here is that\nwe have one app which is responsible for\neverything and the functionality is\ntightly coupled so I'm going to get my\npen tool out here and just to highlight\nnotice that there is a server and\neverything is running on a single server\nwhether it's load balancing caching the\ndatabase um maybe the marketing website\nthe front-end JavaScript framework the\nback end with its API uh the uh\nom connected to background tasks things\nlike that and that's the idea of a\nmonolith and that's what um a lot of\npeople are used to doing but the idea\nwith microservice architecture is that\nyou have multiple apps which are\nresponsible for one uh one thing and the\nfunctionality is isolate and stateless\nand so just by uh leveraging um various\ncloud services or bolting it onto your\nservice um you know you are technically\nusing microservice architecture so maybe\nyour web app is all hosted um in\ncontainers so you have your apis your or\nyour orm your reports maybe you've\nabstracted out some particular functions\ninto Lambda functions you have your um\nmarketing website hosted on S3 you have\nyour frontend JavaScript hosted on S3\nYou're Now using elastic load balancer\nuh elastic cache\nRDS sqs and that's the idea between\nmonoliths and microservices\n[Music]\nokay let's take a look here at\nkubernetes which is an open-source\ncontainer orchestration system for\nautomating deployment scaling and\nmanagement of containers it was\noriginally created by Google and now\nmaintained by the cloud native Computing\nfoundation so the\ncncf kubernetes is commonly called K8\nthe8 represents the remaining letters\nfor kuti which is odd because everyone\ncalls it kubernetes with the S on there\nbut that's just what it is the advantage\nof kubernetes over Docker is the ability\nto run containers distributed across\nmultiple VMS a unique component of\nkubernetes are pods a pod is a group of\none or more containers with with shared\nstorage network resources and other\nshared settings so here is kind of an\nexample where you have your kubernetes\nmaster it has a schedule controller etcd\nyou might be using it uses an API server\nto run nodes within the nodes we have\npods and within the pods we have\ncontainers kubernetes is ideally for\nmicroservice architectures where company\nhas tens to hundreds of services they\nneed to manage I need to really\nemphasize that tens to hundreds of\nservices all right so you know crimin is\ngreat but just understand that it is\nreally designed uh to be used for\nmassive amounts of microservices if you\ndon't have that need you might want to\nlook at something just easier to use\n[Music]\nokay all right let's take a look here at\nDocker which is a set of platforms of\nservice products that use OS level\nvirtualization to deliver software in\npackages called containers so Docker was\nthe earliest popularized open source\ncontainer platform meaning there's lots\nof tutorials there's a lot of services\nthat uh integrate with Docker or make it\nreally easy to use and so when people\nthink of containers they generally think\nof Docker there's of course a lot more\noptions out there than Docker to run\ncontainers but this is what people think\nof and so we said it's a suite of tools\nso the idea is you have this Docker CLI\nso these are CLI commands to download\nupload build run and debug containers a\nDocker file a configuration file on how\nto provision a container Docker compose\nuh which is a tool and configuration\nfile when working with multiple\ncontainers Docker swarm an orchestration\ntool for managing deployed\nmulticontainer architectures Docker Hub\na public online repository for\ncontainers published by the community\nfor download and one really interesting\nthing uh that came out of Docker was the\nopen container initiative oci which is\nan open government structure for\ncreating open industry standards around\ncontainer formats and runtimes so Docker\nestablished the OC oci and it is now\nmaintained by the Linux foundation and\nso the idea is that you can write a\nDocker file or or do things very\nsimilarly and use different types of um\ntechnologies that can use containers as\nlong as they're oci compatible you can\nuse them so Docker has been losing favor\nwith developers due to their handling of\nintroducing a paid open source model and\nAlternatives like podman are growing and\nthat's why we're going to talk about\npodman next\n[Music]\nokay so let's take a quick look here at\npodman which is a container engine that\nis oci compliant and is a drop in\nreplacement for Docker I just just want\nto get you exposure here because I want\nyou to know about this um and that you\ncan uh use it as opposed to using Docker\num there are a few differences or\nadvantages that podman has so podman is\nDamon list where Docker uses a container\nD Damon podman allows you to create pods\nlike KU brunetes where Docker does not\nhave pods podman only replaces one part\nof Docker podman is is to be used\nalongside builda and uh scopio so you\nknow Docker is an all-in-one kind of\ntool uh everything is done via single\nCLI and everything is there but you know\nthey just wanted to make it more module\nand so uh these other tools anytime you\nsay podman it usually means we're\ntalking about podman builda and scopio\nso builda is a tool used to build the\noci images and scopio is a tool for\nmoving container images between\ndifferent types of container storages p\nis not going to show up in your exam but\nyou should practically know it um just\nfor your own benefit\n[Music]\nokay let's take a look here at the\ncontainer services offered on AWS\nso we have primary services that\nactually run containers provisioning and\ndeployment on you know tooling around\nprovisioning and deployment and\nsupporting services so the first here is\na lock stick container service ECS um\nand the advantage of this service is\nthat it has no cold starts but it is a\nself-managed dc2 so that means that\nyou're going to be always paying for the\nresource as it is running all right then\nyou have ads fargate so this is more\nrobust than uh using a Lambda it can\nscale to zero cost um and it's uh being\nmanaged by adus managed ec2 however it\ndoes have cold starts so you know if you\nneed containers launching really fast\nyou might be wanting to use ECS then you\nhave elastic kubernetes service eks this\nis uh open source it runs kubernetes um\nand this is really useful if you want to\navoid vendor lockin um which is not\nreally a problem but uh that or it's\njust you want to run kubernetes then you\nhave itus Lambda so you only think about\nthe code uh it's designed for short\nrunning tasks uh if you need something\nthat runs longer You' want to use that\nis serverless you'd use aess fargate\nwhich is serverless containers you can\ndeploy custom containers so prior it us\nLambda just had um pre-built runtimes\nwhich were containers but now you can\ncreate any kind of container and uh use\nthat uh on it was Lambda for\nprovisioning deployment you can use\nelastic Bean sock so um it can uh deploy\nelastic container service for you um\nwhich is very useful there now there's\napp Runner which kind of overlaps on\nwhat elastic beanock does but it\nspecializes it specializes for\ncontainers um and I believe that it can\nactually I don't know what it uses\nunderneath because it is a managed\nservice so elastic beanock is um open\nyou can see what is running underneath\nand app Runner I don't believe you can\nsee what is running underneath it's just\ntaken care of by AWS then there's AWS uh\nco-pilot CLI so this allows you to build\nrelease operate production ready\ncontainerized applications on app Runner\nECS and Abus fargate for supporting\nservices you have elastic container Reg\nindry this is reple for your containers\nnot necessarily just Docker containers\nbut containers in general probably oci\ncompliant containers x-ray so analyze\nand debug between microservices so you\nknow it's distributed tracing then you\nhave step functions so stitch together\nlambas and ECS tasks to uh create um um\na state machine and the only thing I\ndon't have on here would be you know\nbeing able to launch an ec2 instance\nfrom the marketplace that has um a uh a\ncontainer runtime installed like doer U\nI just don't feel that that's very\nrelevant for the exam but it is another\noption for containers not something that\npeople do very often but there you\n[Music]\ngo hey this is Angie Brown from exam Pro\nand we are taking a look here at\norganizations and accounts so adus\norganizations allow the creation of new\nadus accounts and allows you to\ncentrally manage building control access\ncompliance security and share resources\nacross your adus accounts so here's kind\nof a bit of a structure of um\nthe architecture of adus organizations\nand we'll just kind of walk through the\ncomponents so the first thing you have\nis a root account user this is a single\nsignin identity that has complete access\nto all adus services and resources in an\naccount and each account has a root\naccount user so generally you will have\na master or root account and even within\nthat you'll have a root account user and\nfor every additional account that you\nhave you'll notice over here we have a\nroot account\nuser then there's the concept of\norganizational unit\nuh these are commonly abbreviated to OU\nso they are a group of adus accounts\nwithin an organization which can contain\nother organizational units creating a\nhierarchy so here is one where we have\ncalled Starfleet and here's one called\nFederation planets and underneath we\nhave multiple uh accounts it was\naccounts within that organizational unit\nand even though it does not show it here\nyou can create an organizational unit\nwithin an organizational unit then we\nhave service control policies scps and\nthese give uh Central control over the\nallowed permissions for all adus\naccounts in your organization helping to\nensure your accounts stay within your\norganization's guidelines what they're\ntrying to say here is that um there's\nthis concept of adus I am policies and\nall you're doing is you're creating a\npolicy that's going to be uh\norganizational uniwide or organizational\nwide or for select accounts so it's just\na way of applying I am policies across\nmultiple accounts AIS organizations must\nbe turned on and once it's turned on it\ncannot be turned off it's generally\nrecommended that you do turn it on um\nbecause basically when if you're going\nto run any kind of serious workload\nyou're going to be using adus\norganizations to uh isolate your adus\naccounts based on workloads you can\ncreate as many adus accounts as you like\nOne account will be the master or root\naccount um and I say root account here\nbecause this is the new language here\nand some of the documentation still\ncalls it master account so just\nunderstand this is the root account not\nto be confused with the root account\nuser so another clarification I want to\nmake is an ad account is not the same as\na user account which is another thing\nthat is confusing so when you sign up\nfor AWS you get um an adus account and\nthen it creates you a user account which\nhappens to be a root user account so\nhopefully that is\n[Music]\nclear so adus control tower helps\nEnterprises quickly set up a secure ads\nmulti account it provides you with a\nbaseline environment to get started with\na multi-count architecture so it does\nthis a few uh a few different ways the\nfirst thing is it provides you a landing\nZone this is a baseline environment\nfollowing well architected and best\npractices to start launching production\nready workloads so imagine you wanted to\ngo have um you know the perfect\nenvironment that you know secure um is\ncorrectly configured and has good\nlogging in place that's what a landing\nzone is and so os's Landing zone for\ncontrol tower is going to have SSO\nenabled by default so it's very easy to\nmove between it accounts it will have\ncentralized logging for ad cloud trail\nso that you know they're going to be\ntamper evident or tamper proof away from\nyour workloads where they can't be\naffected it'll have cross account\nsecurity auditing um so yeah Landing\nzones are really great to have then\nthere's the account Factory they used to\ncall this um uh a vending machine but uh\nthey changed it to account Factory the\nidea is that it automates provisioning\nof new accounts in your organization it\nstandardizes the provisioning of new\naccounts with pre-approved account\nconfiguration you can configure account\nFactory with pre-approved Network\nconfiguration and region selections uh\nenable sell service for your Builders to\nconfigure and provision to accounts\nusing AA service catalog AA service\ncatalog is just pre-approved uh\nworkloads uh via Cloud information\ntemplates you created to say okay you're\nallowed to launch This Server these\nresources um and the third and most\nimportant thing that a control tower\ncomes with is guard rails so these are\nprepackaged governance rules for\nsecurity operations compliance the\ncustomers can select and apply\nenterprise-wide or to specific groups of\naccounts\nso adus control tower is the replacement\nof the retired adus Landing zone so if\nyou remember adus Landing zones which\nwas never a selfs serve easy thing to\nsign up for it required a lot of money\nand uh stuff to go in there they just\ndon't really have it anymore and it was\ncontrol tower is the new offering um\nthere\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at 's\nconfig and to understand adus config we\nneed to know what compliance as code is\nand to understand compliance as code we\nneed to understand what change\nmanagement is so change management in\nthe context of cloud infrastructure is\nwhen we have a formal process to monitor\nchanges enforce changes and remediate\nchanges and compliances code also known\nas CAC is when we utilize programming to\nautomate the monitoring enforcing and\nremediating changes to stay compliant\nwith the compliance program or expected\nconfiguration so what is adus config\nwell it's a compliances code framework\nthat allows us to manage change in your\nit accounts on a per region basis\nmeaning that you have to turn this on\nfor every region that you need it for\nand so here is a very simple example\nwhere let's say we create a config Rule\nand we have an ec2 instance and we\nexpect it to be in a particular State\nand then in the other case we have a an\nRDS instance and it's in a state that we\ndo not like so the idea is that we try\nto remediate it to put it in the state\nthat we want it to be and those config\nrules are just powered by lambdas as you\ncan see based on the Lambda icon there\nso when should you use Adis config well\nthis is when I want this resource to\nstay configured a specific way for\ncompliance I want to keep track of\nconfiguration changes to resources I\nwant a list of all resources within a\nregion and I want to use uh uh analyze\npotential security weaknesses and you\nneed detailed historical information so\nthere you go\n[Music]\nhey this is Andrew Brown from exam Pro\nand in this follow along we're going to\ntake a look at adus config so adus\nconfig is a tool that allows you to\nensure that your services are configured\nas expected so I've already activated it\nin my North Virginia region so what I'm\ngoing to do is just go over to Ohio here\nuh because it is per region activated\nand I'll go over to config and then what\nwe'll have to do is set it up so there\nis this oneclick setup and it did Skip\nme to the review step because it's kind\nof piggybacking on the configuration of\nmy original one here but the idea is\nthat you'll just say uh record all\nresources in this region or things like\nthat you'll have to create a service\nroll link if you have not done so so\nthis will look a little bit different\nbut here it's using the existing one\nyou'll have to choose a bucket so or\ncreate a bucket uh it's not super\ncomplicated so you get through there you\nhit confirm and basically you're going\nto end up with this so the inventory um\nlets you see all the the resources that\nor not all of them but most resources\nthat are in your account in this\nparticular region it this will not\npopulate right away so you will have to\nwait a little bit of time for that to\nappear one really nice thing are\nconformance packs I really love these\nthings when ad of us first brought these\nout there was only like a couple but now\nthey have tons and tons and tons of\nconformance packs so you can go deploy a\nconformance pack and you can open up the\ntemplates I just want to show you look\nat how many they have so there some of\nyou might recognize like\nnist uh CIS things like that well\ndetected uh stuff and all these are um\nand I'm not sure if it's easy to open\nthese up but all these are if we open\nthem up they're on GitHub is these are\njust Cloud foration templates to set up\nconfiguration rules so there's a variety\nof suggested rules uh like around IM\nbest practices and things like that that\nwe can load in um but the idea is that\nyou're just going to create rules so you\ngo here and you add a rule and they have\na bunch of manage rules here um that we\ncan look at but I think it might be fun\nto actually run a um a conformance pack\nI'll just show you what it looks like to\nadd a rule first so let's say we wanted\nto do something for\nS3 um and it was making sure that we are\nblocking Public Access so we go next\nhere generally you'll have a trigger\ntype you can choose whether it's uh\nconfigured when it happens or it's\nperiodic this is disabled in this case\nhere and you just scroll on down um and\nthen once you've added the rule what you\ncan\ndo is also manage remediation so if this\nrule said hey this thing is\nnon-compliant we want you to take a\nparticular action and you have all these\nadus actions that you can perform and\nyou can notify the right people to\ncorrect it or have it auto correct if\nyou choose to do so um for rules you can\nalso make your own custom one so that's\njust you providing your own Lambda\nfunctions you're providing that Lambda\nArn and so basically you can have it do\nanything that you want whatever you want\nto put in a Lambda you can make adist\nconfig check for okay so it's not super\ncomplic at here but um this one here is\njust going to go ahead and check and so\nif we go and\nreevaluate it might just take some time\nto show up it's either going to say that\nit's compliant or non-compliant okay and\nI it should be compliant but while we're\nwaiting for that to happen let's just\nsee how hard it is to deploy a\nconformance pack because I feel like\nthat's something that's really important\noh you can just drop them down and\nchoose them that's great so we might\nwant to go to I am here oops identity\nand access\nmanagement and hit next and say uh my my\num uh IM best practices and you might\nnot want to do this because it does have\nspend and I want I say spend it's not\ngoing to happen instantly but the idea\nis that if you turn this on and forget\nto remove it uh you will see some kind\nof charges over time because it does\ncheck based on the rules it's not super\nexpensive but it is something to\nconsider about um but anyway so it looks\nlike we created that conformance pack so\nif I refresh it looks like it's in\nprogress I wonder if that's going to set\nup a cloud formation template I'm kind\nof curious about that so we'll make our\nway over to cloud\nformation and it is so that's really\nnice because once that is done what we\ncan do is just tear it down by deleting\nthe stack so I'm going to go back over\nto our conformance pack\nhere let's take a look here and so it\nstill says it's in progress but it is\ncompleted and we can click into\nit and we can see all the things that\nit's doing so it says item groups have\nuser check informance pack um and so it\nlooks like there's a bunch of of uh cool\nrules uh here so what we'll do is we'll\njust wait a little while and we'll come\nback here and then just see if um this\nupdates and see how compliant we are\nfrom a uh a basic account okay all right\nso after waiting a little while there it\nlooks like some of them are being set so\nI just gave it a hard refresh here uh\nand here you can see that it's saying is\nroot account um whoops we give it a\nmoment here to refresh but uh is the\nroot account MFA applied yes have we\ndone a password policy no and actually I\nnever did a password policy which is\nsomething I forgot to do but here\nthey're just talking about the minimums\nand maximums of things that you can\ndo okay so that's a conformance pack um\nbut if we go to rules actually I guess\nit's all the rules here I can't really\ntell the difference between the\nconformance pack rules and our plane\nrules kind it's kind of all mixed\ntogether here I\nthink yeah so it's a bit hard to see\nwhat's going on there if we go to the\nperformance pack and click in again it\nmight show the rules yeah there we go so\nhere's the rules there just see a little\nbit more information so use a hardware\nMFA so you know how they're talking\nabout using a security key like what I\nshowed you that I had earlier in the\ncourse things like that um I am password\npolicy things like that so you know not\ntoo complicated but um I think I'm all\ndone here so what I'm going to do is I'm\ngoing to go over to cloud formation and\ntear that on down but you get the\nidea well I might want to show you uh\ndrift so there used to be a way it's go\nlike keep changing things on me here but\nthere's a way to see uh history over\ntime and so that was\nsomething that they used to show and I'm\njust trying to like find where they put\nit because it is like somewhere else\nresources\nmaybe ah resource timeline okay so they\nmoved it over into the resource\ninventory and so if we were to take a\nlook at something anything maybe this\nhere resource timeline um and there\nmight not be much here but the idea is\nit will show you over time how things\nhave changed so the idea is that not\nonly can you say with a config is\nsomething compliant but when was it\ncompliant and that is something that is\nreally important to know okay so very\nsimple example maybe not the best but\nthe idea is that we can see when it was\nand was not compliant based on uh\nchanges to our stuff but uh anyway that\nlooks all good to me here so I'm going\nto make my way over to cloud formation\nactually already already have it open\nover here we're going to go ahead and\ndelete that stack um um termination\nprotection is enabled you must first\ndisable it so we'll edit it disable it\nwhatever okay we'll hit delete there and\nas that's deleting I'm going to go look\nfor and config my\noriginal rule there again I'm not really\nworried about it I don't think it's\ngoing to really cost me anything but uh\nI'm also just kind of clear the house\nhere just so you're you're okay as well\nand so if we go over to our rules um the\none that I spun up that was custom um I\nthink was this one here because these\nare all grayed out right so I can go\nahead there delete that rule type in\ndelete and we are good so there you\ngo that\nis it all\n[Music]\nright adabs quick starts are pre-built\ntemplates by adabs and adus partners to\nhelp deploy a wide range of stacks it\nreduces hundreds of manual uh procedures\ninto just a few steps the uh Quick Start\nis composed of three parts it has a\nreference architecture for the\ndeployment an itus cloud formation\ntemplates that automate and configure\nthe deployment a deployment guide\nexplain the architecture implementation\nin detail so here's an example of one\nthat you might want to launch like the\nadus Q&A bot and then you will get an\narchitectural diagram and a lot of\ninformation about it and from there you\ncan just go press the button and launch\nthis infrastructure most quick start\nreference deployments enable you to spin\nup a fully functional architecture in\nless than an hour and there is a lot as\nwe will see here when we take a look for\n[Music]\nourselves all right so here is uh adus\nquick starts where we have a bunch of\ncloudformation templates uh built by\nadabs or Amazon or adus partner networks\nAPM partners and uh there's a variety of\ndifferent things here so I'm just going\nto try to find something like Q&A\nbot Q&A bot just type in bot here and I\ndon't know why it was here the other day\nnow it's not showing up which is totally\nfine but um you know I just want\nanything to deploy just to kind of show\nyou what we can do with it so you scroll\non down we have uh this graphic here\nthat's representing what will get\ndeployed so we have cloudfront S3 Dynamo\nDB assistance manager Lex paully all\nthese kind of fun stuff um and there's\nsome information about how it is\narchitected and the idea is you can go\nahead and launch in the console or view\nthe implementation guide let's go take a\nlook here um and there's a bunch of\nstuff so we have Solutions and things\nlike that conversational things like\nthat but what I'm going to do is go\nahead and see how far I can get to\nlaunching with this it doesn't really\nmatter if we do launch it it's it's just\nthe fact that um I want to just show you\nwhat you can do with it so if we go to\nthe designer it's always fun to look at\nit in there because then we can kind of\nvisualize all the resources that are\navailable and I thought that that would\npopulate over there but maybe we did the\nwrong thing so I'm just going to go back\nand\nclick I'm just going to click out of\nthis oops cancel let's close that leave\nyes and we will launch that\nagain and so this oh viewing the\ndesigner I hit the wrong button\nokay so now this should show us the\ntemplate might just be\nloading there we go so this is what it's\ngoing to launch and you can see there's\na lot going on here just going to shrink\nthat there\nuh and I don't know if you can make any\nsense of it but clearly it's doing a lot\nand so if we were happy with this and we\nwanted to launch it I know I keep\nbacking out of this but we're going to\ngo back into it one more\ntime we can go here and we can go next\nand then we would just fill in what we\nwant so you name it put the language in\nand this is stuff that they set up so\nmaybe you want a mail voice set the ab\nin and stuff like that and it's that\nsimple really um and every stack is\ngoing to be different so they're all\ngoing to have different configurations\nation options but hopefully that gives\nyou kind of an idea of what you can do\nwith quick starts\n[Music]\nokay let's take a look at the concept of\ntagging within AWS so a tag is a key and\nvalue pair that you can assign to anus\nresource so as you are creating a\nresource it's going to prompt you to say\nhey what tags do you want to add you're\ngoing to give a key you're going to give\na value and so some examples could be\nsomething like based on Department the\nstatus\nthe team the environment uh the project\nas we have the example here the location\num and so tags allow you to organize\nyour resources in the following way for\nresource management so specific\nworkloads so you can say you know\ndeveloper environments cost management\nand optimization so cost tracking\nbudgets and alerts operations management\nso business commitments SLA operations\nMission critical Services security so\nclassification of data security impact\ngovernance and Regulatory Compliance\nautomation workload Automation and so\nit's important to understand that\ntagging can be used in Junction with um\nIM policy so that you can restrict\naccess or things like that based on\nthose tags\n[Music]\nokay all right I just want to show you\none interesting thing about tags um and\nit's just the fact that it's used as the\nname for some services so when you go to\nec2 and you launch an instance uh the\nway you set the name is by giving it a\ntag called name and I just want to prove\nprove that to you just like one of those\nlittle exceptions here so we choose an\ninstance\nhere we go to configure storage and then\nwhat we do is we add a tag and we say\nname um and my server name okay and then\nwe go ahead and review and launch we're\ngoing to launch this I don't need a key\npair so we'll just say proceed without\nkey pair I\nacknowledge\nokay and we will go view the instances\nand you'll see that is the name so um\nthat's just like one of those exceptions\nor things that you can do with tags if\nthere's other things with tags I have no\nidea that's just like a a basic one that\neverybody should know and that's why I'm\nshown to you with the tags but there you\n[Music]\ngo so we just looked at tags now let's\nsee what we can do with resource groups\nwhich are a collection of resources that\nshare one or more tags or another way to\nlook at it it it's a way for you to take\nmultiple tags and organize them uh into\nresource groups so it helps you organize\nand consolidate information based on\nyour project and the resources that you\nuse resource groups can display details\nabout a group of resources based on\nmetrics alarms configuration settings\nand at any time you can modify the\nsettings of your resource groups to\nchange what resources appear resource\ngroups appear in the global console\nheader uh which is over here and under\nthe systems manager so technically it's\npart of an simple system assists manager\nor System Manager interface but it's\nalso part of the global interface so\nsometimes that's a bit confusing but uh\nthat's where you can find it\n[Music]\nokay all right so what I want to do is\nexplore resource groups and also um\ntagging so what I want you to do is type\nin resource groups at the top here and\nit used to be\naccessible not sure where they put it\nbut it used to be accessible here at the\ntop but they might have moved it over to\nsystems manager so I'm going to go to\nSSA here not sure why I can't seem to\nfind it today and on the left hand side\nwe're going to look\nfor resource\ngroups\nfor for\nall right so what I want to do is take a\nlook at resource groups and I'm really\nsurprised because it used to be\nsomewhere in the global now but I think\nthey might have changed it um and what's\nalso frustrating is if I go over to\nsystems manager it was over here as well\nand so on the left hand side I'm looking\nfor resource groups it's not showing up\nso I don't know best you keep moving\nthings around on me and I'm I can only\nupdate things so quickly in my courses\nbut if you type in resource groups and\ntag editor it's actually over here um I\nguess it's its own Standalone service\nnow why they keep changing things I\ndon't know but uh the idea is we want to\ncreate a resource Group so you can\ncreate unlimited single region groups in\nyour ab account use the group to view\nrelated insights things like that so I'm\ngoing to go ahead and create a resource\nGroup you can see it can be tag based or\ncloud formation based but I don't have\nany tags I don't really have anything\ntags so what I'm going to do is make my\nway over to S3 we're just going to\ncreate some resources or a couple\nresources here with some tags so that we\ncan do some filtration so I can go ahead\nand create a bucket I'm going to say my\nbucket uh this like that\nwhoops and then down below I'm going to\ngo down to tags and we're going to say\nproject and we're going to say um RG for\nResource\nGroup okay and then I can go back over\nhere and then I'm going to just say I\ncan say exactly what type I want I'm\ngoing to support all resource\ntypes and I'm going to say\nproject RG see how it aut completes and\nwe'll go down below we'll just\nsay my\nRG a test\nRG we'll create\nthat and so now we have a resource Group\nand we can see them all in one place uh\nresource groups are probably useful for\nusing in um policies so I can say say\nlike Resource Group IM\npolicies that's probably what they're\nused for\nokay so before you use I am managed to\naccess resour groups you should\nunderstand I am features things like\nthat and so administrators can use Json\npolicies to specify who has access to\nwhat and so a policy action or Resource\nGroup is used following the prefix\nresource groups so my thought process\nthere is that if you want to say okay\nyou have access to a resource you can\njust specify a resource Group and it\nwill include all the resources within\nthere and so that might be um a better\nway to apply permissions at a per\nproject basis um and that could save you\na lot of time writing out IM policies so\nthat's basically all there really is to\nit also you kind of get an overview of\nof the U resources that are there so\nthat can be kind of useful as well\nthere's the tag editor here I can't\nremember what you use this for you can\nset up tag\npolicies um tag policies help you\nstandardize tags on resource groups in\nyour accounts use uh to Define Tech\npolicies and Abus org to attach them to\nthe entire organization um we're not in\nthe OR account so I'm not going to show\nyou this and it's not that important um\nbut just understand that resource groups\ncan be created and they are used within\nI policies in order to um uh Grant or\ndeny access to stuff I'm go ahead and\ndelete that Resource Group and really\nstop moving that on me if you move it\none more time I'm just never going to\ntalk about resource groups again\n[Music]\nokay hey hey this is Andrew Brown from\nexam Pro and we are taking a look at\nbusiness Centric services and you might\nsay well why because in the exam guide\nIt's explicitly says that these are not\ncovered but the thing is is that when\nyou're taking the exam some of the uh\nchoices might be some of these Services\nas distractors and if you know what they\nare it's going to help make sure that\nyou um uh guess correctly and the thing\nis that some of these services are\nuseful you should know about them so\nthat's another reason why I'm talking\nabout them here so first one is Amazon\nconnction this is a virtual call center\nyou can create workflows to Route\ncallers you can record phone calls\nmanage a que of callers based on the\nsame proven system used by Amazon\ncustomer service teams we have\nworkspaces this is a virtual Remote\nDesktop Service secure manage service\nfor provision either windows or Linux\ndesktops in just a few minutes which\nquickly scales up to thousands of\ndesktops we have work docs which is a\nshared collaboration service\nessentialized storage to share content\nin files it is similar to Microsoft\nSharePoint think of it as a shared\nfolder where the company has ownership\nwe have chime which is a video\nconference service it is similar to zoom\nor Skype you can screen share have\nmultiple people on the on the same call\nit is secure by default and can show you\na calendar of upcoming calls we have\nworkmail this is a manag business uh\nemail contacts calendar service with\nsupport of existing desktop and mobile\nemail client applications that can\nhandle things like IMAP similar to Gmail\nor exchange we have pinpoint this is a\nmarketing campaign Management Service\npinpoint is for sending targeted emails\nVia SMS push notifications voice\nmessages you can perform um A to B\ntesting or create Journey so complex\nemail response workflows we have sces\nthis is a transactional email service\nyou can integrate sces into your\napplication to send emails you can\ncreate common templates track open rates\nkeep track of your reputation we have\nquick site this is a business\nintelligence uh service connect multiple\ndata sources and quickly visualize data\nin the form of graphs with little to no\nknowledge definitely you want to\nremember quick site SCS pinpoint Point\nuh cuz those definitely will show up in\nthe exam the rest probably not but they\ncould show up as distractors\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at\nprovisioning services so let's first\nDefine what is provisioning so\nprovisioning is the allocation or\ncreation of resources and services to a\ncustomer and IT provisioning services\nare responsible for setting up and\nmanaging those adaus Services we have a\nlot of services that do provisioning\nmost of them are just using cloud\nformation underneath which we will\nmention here but let's get to it the\nfirst is elastic beanock this is a\nplatform as a service to easily deploy\nweb apps eie will provision various a\nwith services like ec2 S3 SNS cloudwatch\nec2 Auto scaling groups load balancers\nuh and you can think of it as the Heroku\nequivalent to AWS then you have opsworks\nthis is a configuration Management\nService that also provides managed\ninstances of Open Source configuration\nmanaged software such as chef and p\npuppet so you'll say I want to have a\nload balcer or I want to have servers\nand it will provision those for you uh\nindirectly then you have Cloud\ninformation itself this is an\ninfrastructure modeling and provisioning\nservice it automates the provisioning of\nAD Services by writing Cloud information\ntemplates in either Json or yaml and\nthis is known as IAC or infrastructures\nof code you have quick starts these are\npre-made packages that can uh be\nlaunched and configure your Aus compute\nnetwork storage and other services\nrequired to deploy a workload ons we do\ncover this in this course but quick\nstarts is basically just Cloud\ninformation templates that are authored\nby the community or um buy um Amazon\npartner Network okay then we have abis\nMarketplace this is a digital catalog\nfor thousands of software listings of\nindependent software vendors that you\ncan use toine by in tes and deploy\nsoftware so the idea is that um you know\nyou can go there and provision whatever\nkind of resource you want we have Abus\namplify this is a mobile web app\nframework that will provision multiple\nAus Services as your backend it's\nspecifically for serverless services I\ndon't know why I didn't write that in\nthere um but you know like Dynamo DB um\nthings like uh whatever the graphql\nservice is called API Gateway things\nlike that uh then we have ads app Runner\nthis is a fully managed service that\nmakes it easy for developers to quickly\ndeploy containerized web apps and apis\nat scale with no prior information\nexperience required it's basically a\nplatform as a service but for containers\nwe have AIS co-pilot this is a command\nline interface that enables customers to\nquickly launch and manage containerized\napplications any bus it basically is a a\nCLI tool that sets up a bunch of scripts\nto set up pipelines for you makes things\nsuper easy we have Adis code start this\nprovides a unified user interface\nenabling you to manage your software\ndevelopment activities in one place\nusually launch common types of stacks\nlike lamp then we have cdk and so this\nis infrastructure as a code tool allows\nyou to use your favorite programming\nlanguage generates out Cloud information\ntemplates as a means of I so there you\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we are taking a look at a\nelastic bean stock before we do let's\njust Define what passes so platform as a\nservice allows customers to develop run\nand manage applications without uh the\ncomplexity of building and maintaining\nthe infrastructure typically associated\nwith developing and launching an app and\nso elastic beanock is a pass for\ndeploying web apps with little to know\nuh knowledge of the underlying\ninfrastructure so you can focus on\nwriting application code instead of\nsetting up an automated deployment\npipeline or devops tasks the idea here\nis you choose a platform upload your\ncode and it runs with little uh\nknowledge of the infrastructure and adab\nus will say that it's generally not\nrecommended for production apps but just\nunderstand that they are saying this for\nEnterprises and large companies if\nyou're a small to medium company you can\nrun elastic beanock for quite a long\ntime it'll work out great elastic\nbeanock is powered by cloud formation\ntemplates and it sets up for you elastic\nload balancer asgs RDS ec2 instances\npreconfigured for particular platforms\nuh monitoring integration with\ncloudwatch SNS uh deployment strategies\nlike in place blue green green uh\ndeployment has security built in so it\ncould rotate out your passwords for your\ndatabases and it could run dockerized\nenvironments and so when we talk about\nplatforms you can see we have Docker\nmulticontainer Docker uh go.net Java\nnodejs Ruby PHP python Tomcat go a bunch\nof stuff and just to kind of give you\nthat architectural diagram to show you\nthat it it can launch of multiple things\n[Music]\nokay hey it's Andrew Brown from exam Pro\nand this fall along we're going to learn\nall about elastic beanock maybe not\neverything but we're going to definitely\nknow how to at least um use the service\nso elastic beanock is a platform as a\nservice and what it does is it allows\nyou to uh deploy web applications very\neasily so here I've made my way over to\nelastic beanock that we an environment\nand app and then we set up our\napplication we have two tiers a web\nserver environment a worker environment\nworker environment is great for long\nrunning\nworkloads performing uh background jobs\nand things like that and then you have\nyour web server which is your web server\nand you can have both and it's generally\nrecommended to do so um but anyway what\nwe'll do is create a new application so\nlet's say my app here and uh there's\nsome tags we can do and then it will\nname based on the environment then we\nneed to choose an environment name so\nI'll say my environment and just put a\nbunch of numbers in there hit the check\navailability scroll on down and we have\ntwo options manage platform custom\nplatform and I'm not sure why custom is\nblanked out but it would allow you to um\nit would allow you to I think use your\nown containers so I'm a big fan of Ruby\nso I'm going to drop down to Ruby and\nhere we have a bunch of different\nversions and so 2.7 is pretty pretty new\nwhich is pretty good and then there's\nthe platform version which is fine and\nthe great thing is it comes with a\nsample application now you could hit\ncreate environment but you'd be missing\non a lot if you don't hit this configure\nmore options I don't know why they put\nit there it's a not a very good UI but\num if you click here you actually get to\nsee everything possible and so up here\nwe can have some presets where we can\nhave a single instance so this is where\nit's literally running a single E2\ninstance so it's very cost effective you\ncan have it with spot uh spot pricing so\nyou save money um there's High\navailability so you know if you want it\nset up with a load balcer an auto\nscaling group it will scale very well or\nyou can do custom configuration we\nscroll on down\nhere you can enable Amazon x-ray you can\nrotate out logs you can do log\nstreaming um there's a lot of stuff here\nand basically it's just like it sets up\nmost for you but you can pretty much\nconfigure what you want as well if we\nhad the load balcer set if I go here go\nto High availability now we'll be able\nto change our load balancer options you\nhave different ways of deploying so you\ncan go here and then change it from all\nat once rolling immutable traffic\nsplitting depends on what your use case\nis um we can set up a key pair to be\nable to log into the\nmachine there's a whole variety of\nthings you can connect your database as\nwell so it can create the database\nalongside with it and then it can\nactually rotate out the key so you don't\nhave to worry about it which is really\nnice what I'm going to do is go to the\ntop here and just choose a single\ninstance because I want this to be very\ncost effective we're going to go ahead\nand hit create\nenvironment and so we are just going to\nwait for that to start up and I'll see\nyou back when it's done\nokay okay so it's been uh quite a while\nhere and it says a few minutes so if it\ndoes do this what you can do is just\ngive it a hard refresh I have feeling\nthat it's already done is it done yeah\nit's already done so and here it says on\nSeptember 2020 elastic talku Etc default\ndefault I don't care um but anyway so\nthis application I guess it's in a\npending State um I'm not sure why let's\ngo take a look here causes instance has\nnot sent any data since launch uh none\nof the instances are sending data so\nthat's kind of interesting because um I\nshouldn't have any problems you know\nwhat I mean so what I'm going to do is\njust reboot this Miss machine and see if\nthat fixes the issue there but usually\nit's not that difficult cuz it's the\nsample application it's not up to me um\nas to how to fix this you know what I\nmean\nso I'm not sure but um what we'll do is\nwe will let the machine reboot and see\nif that makes any difference okay all\nright so after rebooting that machine\nnow it looks like the server is healthy\nso it's not all that bad right if you do\nrun issues that is something that you\ncan do and so uh let's go see if there's\nis actually working so at the top here\nwe have a link and so I can just right\nclick here it says congratulations your\nfirst 8us elastic uh beanock Ruby\napplication is now running so it's all\nin good shape um there's a lot of stuff\nthat's going on here in elastic beanock\nthat we can do uh we can go back to our\nconfiguration and change any of our\noptions here so there's a lot of stuff\nas you can see uh we get logging uh so\nclick the request log so if we click on\nthis and say last 100\nlines should be able to get uh logging\ndata we have to download it I wish it\nwas kind of in line but here you can\nkind of see what's going on so we have\nSTD access logs error logs Puma logs\nelastic beam stock engine so you could\nuse that to debug very common to take\nthat over to uh support if you do have\nissues uh for Health it monitors the\nhealth of the instances which is great\nthen we have some uh monitoring uh data\nhere so gives you uh like a built\ndashboard so that's kind of nice you can\nset up alarms uh you have not defined\nalarms you can add them via the\nmonitoring dashboard so I guess you'd\nhave\nto you'd have to somehow add them um I\ndon't think I've ever added alarms for\num Classic Bean but it's nice to know\nthat they have them you can set up\nschedules for managed events then this\nis event data so it's just kind of\ntelling you it's kind of like logs it\njust tells you of things that have\nchanged so there's stuff like that what\nI'm looking for is to see how I can\ndownload the existing\napplication because there's a version\nuploaded here oh the source is over here\nokay\nso I think it's probably over here the\none that's running so that's\nit if it was easy to find what I\nprobably would do is just modify it and\noh yeah it's over here so if we go here\nand download the\nzip I wonder if it'd be even worth um\nplaying with this so let's I'm just\ngoing to see if we can go over to\nCloud9 and give this a go quickly\nso if we go over and launch a Cloud9\nenvironment maybe we can tweak it and\nupload a revised version so we say\ncreate new we'll say EB\num uh environment for elastic beanock\nwe'll set it all the defaults that's all\nfine it's all within the free tier we'll\ncreate that environment what I'm going\nto do is just take this uh Ruby zip file\nand move it to my\ndesktop and as that is loading we'll\ngive it a moment here I'm just going to\ngo back and I was just curious ious does\nit let you download it directly from\nhere no so the only thing is that you\nknow if you download that application\nelastic beanock usually has a\nconfiguration file with it and so I\ndon't know if they would have given that\nto us but if they did that would be\nreally great but we just have to wait\nfor that to uh launch there as well I\nguess you can save configurations and\nroll back on those as\nwell um but we will just wait a moment\nhere\nwhile it's going I might just peek\ninside of this file to see what it is\nthis ZIP\ncontains just going to go to my desktop\nhere open up that\nzip so it looks pretty simple it doesn't\neven look like a rails app it looks like\nmaybe it's a Sinatra app I thought\nbefore that it would it would have\ndeployed a Ruby on Rails application but\nmaybe they keep it really\nsimple\num I don't see usually it's like yamell\nfiles they use for configuration I don't\nsee that there\nso it might be that the default settings\nwill work fine uh there's a king fig. Ru\nand stuff like that but once Cloud9 is\nup here we will upload this and see what\nwe can do with it okay so there we go uh\nCloud9 is ready to go and so if we right\nclick here whoops right click here we\nshould be up be able to upload a file if\nnot we can go up here to the\ntop or it's here or\nthere where is the upload I've I've\nuploaded things in here so I absolutely\nknow we can I just got to find it\nis that the\nupload upload files\nCloud9 oh boy that's not helpful that's\nnot helpful at all so let me just click\naround a little bit here I mean worst\ncase I can always just bring it in Via a\ncurl oh upload local files there it is I\nwas is just not um being patient okay so\nwe'll drag that on in there and we\nwill did it upload yep it's right there\nokay great so we need to unzip it so\nwhat I'll do is just drag this on up\nhere I'll do an LS and we'll say\nunzip\nrubyzip and so that unzipped the\ncontents there I think the readme was\npart of Cloud9 so I'm going to go ahead\nand delete that out not that it's going\nto hurt anything and so now what we can\ndo and we'll delete the original\nthe original zip\nthere um and let's see if we can make a\nchange here so I'm just going to open up\nsee what it is so it's yeah it's running\nSinatra so that's pretty clear there we\nhave a proc file to say how it runs we\nhave a worker sample so that's just\ntells how the requests go you don't need\nto know any of this I'm just kind of\nclicking through it because I know Ruby\nvery well we have a cron yamel file so\nthat could be something that gets loaded\nin here so I think basically a Sinatra\napp probably just works off the bat here\nbut if we want to make a change we\nprobably just make a change over to here\nso I'll go down here and this is\nyour second 8s elastic beanock\napplication so the next thing we need to\ndo is actually zip the contents here I\ndon't know if it would let us zip it\nwith in here but I'll have to look like\nZip the contents of a\ndirectory Linux this goes to\nshow Google is\neverything so the easiest way to zip a\nfull\nfolder\num\nzip everything in the current\ndirectory\nLinux okay that's easy so we'll go back\nover here and we will type in\nzip and it wants hyphen R for recursive\nwhich makes sense and then the name of\nthe zip so\num uh Ruby 2.zip and we'll do\nperiod zip warning found is who is\nzip\noh uh yum install zip maybe we have to\ninstall uh ZIP but maybe it's not\ninstalled pseudo yum install\nzip since it's Amazon 2 uses\nyum and so package already installed so\nI'm going to type zip again so zip is\nthere now great oops don't need to\ninstall\ntwice zip warning Ruby to zip not found\nor\nempty okay so install zip and use zip\npyph R you can use the flag to best\ncompensate so if that's not working what\nI'm going to do is just go up a\ndirectory why is it saying not found or\nempty\n[Music]\nmaybe I need to\nuse okay so I think the problem was is I\nwas using the wrong flag so I put F\ninstead of R I don't know why I did that\nso I probably should have done this okay\nand so that should have copied all the\ncontents of that file so what I'm going\nto do is go ahead whoops make sure I\nhave that selected and download that\nfile and once I have downloaded that\nfile I'm going to just open the contents\nto make sure it is what I expect it to\nbe so we're going to open that up and\nwhoops get out of here when and it looks\nlike everything I want so what I'm going\nto do is go back over to here I'm going\nto make sure I have my Ruby 2 on my\ndesktop we're going to see if we can to\nupload another version here so upload\nand deploy choose the file we're going\nto go all the way to my desktop here and\nwe're going to choose Ruby 2 and um like\nRuby 2 will be the version name or we'll\njust say two and we'll deploy and we'll\nsee if that works okay but there are\nlike uh elastic beanock configuration\nfiles like yaml files that can sit in\nthe root directory and so generally\nyou're used to seeing them there but you\nknow I imagine that eight of us probably\nengineered these examples so that it\nuses all the default settings but uh\nonce this is deployed I'll see you back\nhere in a moment okay after a short\nlittle wait it looks like it has\ndeployed so what I'm going to do is just\nclose my other tabs here and open this\nup and see if it's worked it says your\nsecond ad elastic being stck Ruby\napplication so uh we were successful uh\ndeploying that out which is really great\nso what we can do now is just close that\ntab there and uh since we have that\ncloud environment it will shut down on\nits own but you know just for your\nbenefit I think that we should shut it\noff right now so go ahead and delete\nthat I'm going to go back over to\nelastic beanock here and I just want to\ndestroy all of it so we'll see if we can\njust do that from here terminate the\napplication enter the name so I think we\nprobably have to enter that in\nthere and so I think that oh a problem\noccurred rate\nexceeded what that's AWS for you so it's\nnot a big deal I would just go and check\nit\nagain and maybe what we'll do is just\ndelete the application\nfirst okay so that one is possibly\ndeleting\nlet's go in here is anything\nchanging can't even tell we'll go ahead\noh can't take that one\nout delete application\nagain if it takes you a couple times\nit's not a big\ndeal it's AWS 4 yes so there's a lot of\nmoving parts so it looks like it is\nterminating the instance and so we just\nhave to wait for that to complete uh\nonce that is done we might have to just\ntear down the environment so I'll see\nyou back here when it has finished\ntearing this down okay all right and so\nafter a short little wait here I think\nit's been destroyed we'll just double\ncheck by going to the applications going\nto the environments yeah and it's all\ngone probably because I initially\ndeleted that environment and then took\nthe application with it so I probably\ndidn't have to delete the app separately\num but uh yeah so there you go just make\nsure your Cloud9 environment is gone and\nyou are a okay there'll probably be some\nlike lingering S3 buckets so if you do\nwant to get rid of those you can it's\nnot going to hurt anything having those\naround uh but they do tend to stack up\nafter a while which is kind of annoying\nso if you don't like them you can just\nempty them\nout as I am doing here whoops oh just\npermanently\ndelete copy that text\nthere we go back\nto here and then just go take out that\nbucket delete that\nthere oh if you get this this is kind of\nannoying but uh elastic beanock lights\nto put in an I am permission or policy\nin here so if you go down here there's a\nbucket policy you just have to delete it\nout it prevents it from being\ndeleted and we'll go back over here and\nthen we will delete\nit okay and yeah there we go that's\n[Music]\nit so let's take a look at serverless\nservices on AWS and this is not\nincluding all of them because we're\nlooking at the most purely serverless\nServices uh if we try to include all the\nserverless services it would just be too\nlong of a list uh but let's take a look\nhere so um before we do let's just\nredefine what is serverless so when the\nunderlying servers infrastructure and\noperating system is taken care of by the\nCSP serverless is generally by default\nhighly available scalable cost effective\nyou pay for what you use the first one\nis Dynamo DB which is a serverless nosql\nkey value and document database is\ndesigned to scale to billions of records\nwith guaranteed consistent data return\nin at least a second you do not have to\nworry about managing chars you have\nsimple storage service S3 which is a\nserverless object storage service you\ncan upload very large and unlimited\namounts of files you can pay for what\nyou store you don't worry about the\nunderlying file system or upgrading the\ndis size we have e CS fargate which is a\nseress orchestration container service\nis the same as ECS except you pay on\ndemand per running container with ECS\nyou have to keep a ec2 server running\neven if you have no containers running\nwhere adus manages the underlying server\nso you don't have to scale or upgrade\nthe ec2 server we have adus Lambda which\nis a serverless function service you can\nrun code without provisioning or\nmanaging servers you upload a small\npiece of code choose uh how much memory\nyou want how long want the function is\nallowed to run before timing out your\ncharge based on the runtime of the\nservice function rounded to the nearest\n100 milliseconds we have step functions\nthis is the state machine service it\ncoordinates multiple Services into\nserverless workflows easily shared data\namong lambdas have a group of lambdas\nwait for each other create logical steps\nalso work with fargate tasks we have\nAurora servus this is a serous on demand\nversion of Aurora so when you want most\nof the benefits of Aurora but uh trade\nyou have to trade off those cold starts\nor you don't have lots of traffic or\ndemand so things Ser the services that\nwe could have put in here as well is\nlike API Gateway appsync it amplify um\nand those are like the the first two\nwere application Integrations you could\nsay sqs SNS those are all serous\nservices but you know again we'd be here\nall day if I I I listed them all\n[Music]\nright all right let's take a look at\nwhat is is serverless and we did look at\nit from a server perspective earlier in\nthe course but let's just try to\nabstractly Define it and talk about the\narchitecture so serverless architecture\ngenerally describes fully managed cloud\nservices and the classification of a\ncloud service being serverless is not a\nBoolean answer it's it's not a yes or no\nbut an answer on a scale where a cloud\nservice has a degree of serverless and I\ndo have to point out that this\ndefinition might not be accepted by um\neverybody because calist is one of those\nuh terms where um we've had a bunch of\ndifferent cloud service providers Define\nit differently and then we have thought\nleaders that have a particular concept\nof what it is so you know I just do my\nbest to try to make this practical here\nfor you but a seress service could have\nall or most of the following\ncharacteristics and so it could be\nhighly elastic and scalable highly\navailable highly durable secure by\ndefault it abstracts away the underlying\ninfrastructure and our build based on\nthe execution of your business tasks a\nlot of times that that cost is not uh is\nnot always represented as something that\nis like I'm paying X for compute it\ncould be abstracted out into some kind\nof um credit that uh doesn't necessarily\nmaap to something physical then we have\nserverless can scale to zero meaning\nwhen it's not in use the serverless\nresources cost nothing uh and these two\nlast topics basically pull into pay for\nValue so you don't pay for Idol servers\nyou're paying for the value uh that your\nservice\nprovides and uh my friend Daniel who\nruns the servus Toronto group he likes\nto describe servus as being similar to\nlike energy efficient rating so an\nanalogy of servus could be similar to\nenergy rating labels which allows\nconsumers to compare the Energy\nEfficiency of a product so some services\nare more servoless than others and again\nyou know some people might not agree\nwith that where there's a a definitive\nyes or no answer but I think that's the\nbest way to look at it\n[Music]\nokay hey it's Andrew Brown from exam Pro\nand we're taking a look at windows on\nads so ads has multiple cloud services\nand tools to make it easy for you to run\nwindow workloads on ads so let's get to\nit so the first is Windows servers on\nec2 so you can select from a number of\nWindows Server versions including the\nlatest version uh like Windows Server\n2019 uh for uh databases we have SQL\nserver on RDS you can select from a\nnumber of SQL database versions then we\nhave adabs directory service which lets\nyou run Microsoft active directory ad as\na managed service we have ads license\nmanager which makes it easier to manage\nyour software licenses from software\nvendors such as Microsoft we have Amazon\nFSX for Windows file server which is a\nfully managed scalable storage built for\nWindows we have the ads SDK which allows\nyou to write code in your favorite\nlanguage to interact with adus API but\nit specifically has support for net a\nlanguage favorite for Windows developers\nwe have Amazon workspaces so this allows\nyou to run a virtual desktop you can\nlaunch a Windows 10 desktop to provide\nsecure and durable workstations that is\naccessible from wherever you have an\ninternet connection AOS Lambda supports\npoers shells a programming language to\nwrite your serverless functions and we\nhave adus migration acceleration program\nmap for Windows is a migration\nmethodology for moving large Enterprises\nit us has Amazon partners that\nspecialize in providing professional\nservices for map this is not just\neverything for Windows on AWS like if\nyou want to move your SQL Server over to\nRDS postest I believe they've like they\ncreated an adapter to do that um but\nyeah hopefully that gives you an idea\nwhat you can do with Windows on AWS\n[Music]\nokay hey this is Andrew Brown from exam\nPro and I want to show you how you can\nlaunch a Windows uh server on AWS so\nwhat you're going to do is go to the top\nhere and we are going to type in ec2 and\nfrom here uh what we'll do is we'll go\nahead and launch ourselves a new ec2\ninstance and we are going to have um a\nselection of instances that we can\nlaunch and so we're looking for the\nMicrosoft Windows uh server and this is\ninteresting there's actually a free tier\nuh eligible that is crazy because if you\ngo over to Azure they don't have a free\ntier Windows Server us does so that's\npretty crazy um and it runs on a T2\nmicro no that can't be right there's no\nway it can run a T2 micro that seems\nlike that's too small let's try it okay\nI just don't believe it because when you\nuse Azure you have to choose a\nparticular size of instance by default\nand it's a lot more expensive and there\nis no free tier so we'll go here there\nare free tiar just not really for\nWindows in particular so we'll go here\nthis looks good security groups this\nopens up RDP so we can get into that\nmachine we're gon to go next here\nand launch this\nmachine says if you plan to use Ami the\nbenefits the Microsoft license Mobility\ncheck out this form that's not something\nwe're worried about today and I mean I\nguess we can create a key pair I'm not\nsure what we would use a key pair for\nhere um for Windows Amis the private key\nfile is required to obtain the password\nused to log into the instance okay so I\nguess we're going to need it\nso Windows key\ngreat we'll launch that\ninstance and uh I'll see you back here\nwhen it launches but I just don't\nbelieve that it would launch that fast\nyou know all right so after a short\nlittle wait here the server is ready and\nso let's see if we can actually go ahead\nand connect to this so I'm going to hit\nconnect here and we'll go over to rdb\nclient so you connect to your windows\ninstance using a remote desktop client\nof your choice and downloading and\nrunning the RDP shortcut below so I'm\ngon to go ahead and download this and\nyou're GNA have to be on a um Windows\nmachine to be able to do this or have an\nrdb client installed I think there's one\nfor Mac that you can get from the Apple\nStore um but all I'm going to do is just\ndouble click the file\nso you probably can't see it here I'm\njust going to expand this try to oh my\ncomputer is being silly but anyway there\nwe go we moved it over there I'm just\ngoing to drag over here and just double\nclick this image so you can see that I'm\ndoing it I'm saying\nconnect okay\nand it's going to ask for a password so\nI'm going to hope that I can just click\nthat and get the password so to decrypt\nthe password you will need your key PA\ninstance you'll have to upload that and\nI don't know if I remember having to do\nthat before but it's a great security\nmeasure so I'm fine with it I'm going to\ndrag my key to my desktop so I can see\nwhat's going on there as\nwell and we're going to go grab that and\ndecrypt the password and so\nnow um where's our password oh it's\nright here okay so we're going to grab\nthat password\nthere we will paste that in said\nokay say yes and see if we can connect\nto this instance and if this is running\non a T2 micro I'm going to lose it\nbecause that is just\ncheap it just just doesn't seem possible\nto me because again on Azure you have to\nlaunch an instance with a lot of stuff\nand it just uh seems uh crazy what's\nalso interesting is that adabs uh on\nWindows like launches so fast it's\nunbelievable how fast these servers spin\nup and it's just very unusual but yeah\nso we are in\nhere\num it's not asking me to activate or\nanything so I guess there's already a\nWindows license\nhere and um I'm not sure if there's any\nkind of like games installed like do we\nhave mind sweeper can I play M sweeper\non here\nit's a data center server so I'm\nassuming not um but yeah so this is a\nWindows server and it's pretty\nimpressive that this works I'm not sure\nif this is going to have an outbound\nconnection here um just because we\nprobably would have to configure it just\nsay okay I just I really don't think\nit's going to go out to the Internet by\ndefault yeah so you'd probably have\nto do some stuff you\nknow oh no we go so yeah we got to the\nInternet so it's totally possible but uh\nyeah that's about it that's all I really\nwanted to show you so what I'm going to\ndo is just go back to ec2 and we're\ngoing to shut down the server here just\nexpand that\nthere and we will go here and we will\nterminate that\ninstance good we'll give that a refresh\nthat's shutting down and we are\n[Music]\ndone hey this is Andre Brown from exam\nPro and we are taking a look at Abus\nlicense manager and before we do let's\ntalk about what b y l or bring your own\nlicense mean so this is the process of\nreusing an existing software license to\nrun vendor software on a cloud vendor\nComputing service Bol allows companies\nto save money since they may have\npurchased the license in bulk or the\ntime that provided a greater discount\nthan if purchased again and so the\nexample of this could be the license\nMobility provided by Microsoft volume\nlicensing to customers with eligible\nserver applications covered by the\nMicrosoft software Assurance program uh\nand I don't know what I was trying to do\nthere I guess maybe it's just essay and\nI missed the parentheses there on the\nend no big big deal um but Aus license\nmanager is a service that makes it\neasier for you to manage your software\nlicenses from software vendors centrally\nacross ads in your on premise\nenvironments ads license manager\nsoftware uh that is licensed based on\nVirtual cores uh physical cores sockets\nor a number of machines this includes a\nvariety of software products for\nMicrosoft IBM sap Oracle and other\nvendors so that's the idea you say what\nis my license type it's it's bound to\nthis amount of vcpus aabus license\nmanager works with ec2 with dedicated\ninstances dedicated hosts and even spot\ninstances and for RDS there's only for\nOracle databases so you can import that\nlicense for your Oracle server um just\nunderstand that um if you're doing\nMicrosoft Windows servers or Microsoft\nSQL Server license you're generally\ngoing to need a dedicated host because\nof the insurance program uh and this can\nreally show up on your exam so even\nthough AIS license manager works on\ndedicated instances and spot instances\njust try to gravitate towards dedicated\nhosts on the server or on the exam\n[Music]\nokay all right let's take a look at the\nlogging services that we have available\nin AWS so the first one here is cloud\ntrail and this logs all API calls\nwhether it's SDK or the CLI so if it's\nmaking a call to the API it's going to\nget tracked between AD services and this\nis really useful to say who can we blame\nwho was the person that did this so who\ncreated this bucket who spent up that\nexpensive ec2 instance who launched the\nstagemaker notebook um and the idea here\nis you can detect developer\nmisconfigurations detect malicious\nactors or automate responses through the\nsystem then you have cloudwatch which is\na collection of multiple Services I\ncommonly say this is like an umbrella\nservice because it has so many things\nunderneath it so we have cloudwatch logs\nwhich is a centralized place to store\nyour cloud services log data and\napplication logs metrics which\nrepresents a Time ordered set of data\npoints a variable uh to monitor uh event\nBridge or previously known as cloudwatch\nevents triggers an event based on a\ncondition so every hour take a snapshot\nof the server alarms triggers\nnotifications based on metrics\ndashboards creates visualizations based\non metrics and that's not all of the\nthings that are under cloudwatch but\nthose are the core five ones you should\nalways know um absolutely there then we\nhave adus x-ray this is for distributed\ntracing system so you can use it to\npinpoint issues within your\nmicroservices so you see how data moves\nfrom one app to another how long it took\nto move and if it failed uh to move\nforward\n[Music]\nokay let's take a closer look here at\nABA cloud trail because it's a very\nimportant service so it's a service that\nenables governance compliance\noperational auditing and risk auditing\nof your A's account and the idea is that\nevery time you make an API call it's\ngoing to show up as some kind of\nstructured data that you can uh interact\nwith or read through so AB cloud trail\nis used to monitor API calls and actions\nmade on ads account easily identify\nwhich users and accounts made the call\nto AWS so you might have the WHERE so\nthe source IP address the when the event\ntime the who the user agent uh and the\nwhat the region resource and action so\nI'm just going to get my pen tool out\nhere for a moment and just notice you\nhave the event time so when it happened\nthe source the name the region The\nSource IP address the user agent uh who\nwas doing it so here was leforge the\nresponse element so you know it's very\nclear what is going on here um and then\nyou know cloud trail is already logging\nby default and will collect logs for the\nuh for the last 90 days via event\nhistory if you need more than 90 days\nyou need to create a trail which is very\ncommon you'll go into AWS and make one\nright away trails are outputed to S3 and\ndo not have like event history to\nanalyze a trail you have to use Amazon\nAthena and I'm sure there are other ways\nto analyze it within AWS but here's just\nwhat the event history looks like so\nright off the bat you can already see\nthat there are information there there\nI'm not sure if they've updated the UI\nthere they might have uh as even when\nI'm recording this I kind of feel like\nif we go into the follow along which we\nwill um I bet they might have updated\nthat the idea here is that you know you\ncan browse the last 90 days but anything\noutside of that you're going to have to\ndo a little bit of work yourself\n[Music]\nokay so we're not going to cover all the\ncloudwatch services there's just too\nmany but let's look at the most\nimportant ones and one of that those\nimportant ones is cloudwatch alarms so\ncloudwatch alarms monitors a cloud watch\nmetric based on a defined threshold uh\nso here you can see there's kind of a\ncondition being set there so if the\nnetwork in is greater than 300 for one\ndata points within five minutes it's\ngoing to breach an alarm so uh that's\nwhen it goes outside is defined\nthreshold and so the state's going to\neither be something like okay so the\nmetric or expression is within the\ndefined threshold so do nothing alarm\nthe metric or expression is outside of\nthe defined threshold so do something or\ninsufficient data the alarm has just\nstarted the metric is not available none\nenough data is available and so when the\nstate has changed you can Define actions\nthat it should take and so that could be\ndoing a notification autoscaling group\nor any C2 action um so cloudwatch alarms\nare really useful for a variety of\nreasons the one that we will come across\nright away will be setting up a billing\n[Music]\nalarm so let's take a look here at the\nautonomy of an alarm and so I have this\nnice graphic here to kind of explain\nthat there and so the first thing is we\nhave our threshold condition uh and so\nhere you can just set a value and say\nokay the value is a th000 or 100\nwhatever you want it to be and this is\ngoing to be for a particular metric the\nactual data we are measuring so maybe in\nthis case we're measuring Network in so\nthe volume of incoming Network traffic\nmeasured in bytes so when using 5 minute\nmonitoring divide by 300 we get bytes\nper second if you're trying to figure\nout that calculation there you have data\npoints so these represent the metrics\nmeasurement at a given point then you\nhave the period how often it checks to\nevaluate the alarm so we could say every\nfive minutes uh you have the evaluation\nperiod so the number of previous periods\nand the data points to alarm so you can\nsay one data point is breach and\nevaluation period going back four\nperiods so this is what triggers the\nalarm uh the thing I just want you to\nknow is that you can set a value right\nand that it's based on a particular\nmetric and there is a bit of logic here\nin terms of uh the alarm so it's not as\nsimple as just it's breached but there's\nthis period thing happening\n[Music]\nokay let's take a look at cloudwatch log\nso to understand that we have log\nstreams and log groups so a log stream\nis a stream that represents a sequence\nof events from an application or\ninstance being monitored so imagine you\nhave an ec2 instance running a web\napplication and you want those logs to\nbe streamed to cloudwatch logs that's\nwhat we're talking about here so you can\ncreate log streams manually uh but\ngenerally this is automatically done by\nthe service you using uh unless you\ncollecting application logs on an ec2\ninstance as I just described here is a\nlog group of a Lambda function you can\nsee the log streams are named after the\nrunning instance lambda's fre uh\nfrequency run on New instances so the\nstream contains timestamps so what I'm\ntrying to say here is that there's a\nvariety of different Services Lambda RDS\nwhat have you and they already send\ntheir logs to cloudwatch logs and\nthey're and they're going to vary okay\nso here's a log group of an application\nlog running on uc2 you can see here the\nlog streams are named after the running\ninstance ID here is the log group for\nAdis glue you can see that the log\nstreams are named after the glue jobs um\nand so you know we have the streams but\nlet's talk about the actual data that's\nmade up of it the log events so this\nrepresents a single event in a log file\nlog events can be seen within the log\nstream and so here's an example of you\nwould open this up in cloudwatch logs\nand you can actually see what what was\nbeing reported back by your server you\ncan filter these events to filter out uh\nlogs based on simple or pattern matching\nuh syntax so here I'm just typing in\nsaying give me all those debug stuff and\nyou know this isn't very robust but 8 of\nus does have a better way of analyzing\nyour logs which is log insights which\nwe'll look at here in a moment\nso we were just looking at uh cloudwatch\nlog events and how those are collected\nbut there's an easier way to analyze\nthem and that's with log insights so you\ncan interactively search and analyze\nyour cloudwatch log data and it has the\nfollowing advantages more robust\nfiltering than using the simple filter\nin the in a log stream less burdensome\nthan having to export logs to S3 and\nanalyze them via Athena cloudwatch log\nInsight supports all types of logs so\ncloudwatch log insights is commonly used\nvia the console to do ad hoc queries\nagainst log groups\nso that's just kind of an example of\nsomeone writing a query and cloudwatch\nlog insights uses a query syntax so a\nsingle request can query up to 20 logs\nquery time out after 50 minutes if not\ncompleted and queries results are\navailable for seven days so abis provide\nsample queries that you can get started\nfor common tasks and uh and ease the\nlearning into the query syntax a good\nexample is filtering VPC flow logs so\nyou go there you click it and you start\nto getting some data you can create and\nsave your own queries uh to make future\nrepetitive tasks easier on the certified\nCloud prer they're not going to ask you\nall these details about this stuff but I\njust conceptually want you to understand\nthat in login sites you can use it to uh\nrobustly filter your logs based on this\nquery syntax language you get this kind\nof visual and it's really really\nuseful let's take a look here at\ncloudwatch metric which represents a\nTime ordered set of data points it's a\nvariable that is monitored over time so\ncloudwatch comes with many predefined\nmetrics that are generally names spaced\nby Services uh so the idea is that like\nwe were to look at the ec2 it has these\nparticular metric so we have CPU\nutilization discre Ops dis write Ops\ndisre bytes dis write bytes Network in\nnetwork out Network packet in uh Network\npackets out and the idea is that you can\njust like click there into ec2 and then\nkind of get that data there and so Cloud\nmetrics are leveraged by other things\nlike Cloud watch events Cloud watch\nalarms cloudwatch dashboards so just\nunderstand that\n[Music]\nokay all right so what I want to do in\nthis follow along is show you a bit\nabout cloud trail so we're going to go\nto the top here and type in cloud trail\nthe great thing about cloud trail is\nit's already turned on by default so\nit's already kind of collecting some\ninformation so it's here it says now use\nI am access analyzer on cloud trail\ntrails that sounds pretty cool to me but\nuh we shouldn't have to create a trail\nright off the bat because we'll have\nsome event history and the event history\nallows us to see\nthings that are happening within our\naccount in the last 90 days um but the\nthing is if you want something Beyond 90\ndays you're going to have to create a\ntrail uh but if we just take a look here\nwe can kind of see uh as we've been\ndoing a lot of things all the kind of\nactions that's been happening so here we\nhave an instance that I terminated so if\nI go in here and and look at it I can\nkind of see uh more information about it\nso we can see when it terminated who had\ndone that what access key they had used\nthe Event Source the request\nID um the Source IP what whether it was\nreadon what was the event type that was\ncalled the resource there and this is\nthe actual raw record so this is\ngenerally how I would look at it or this\nis how you had to look at it back in the\nday um but the idea is that you'd have\nthat user identity described the event\ntime the source the event name the\nregion The Source IP the uh the agent\nall the information there okay and so\nthis is a great way to kind of find\nstuff so you can go through here and try\nto debug things this way so you can go\nto the event name and so if you if you\ngo here you can kind of get uh see a bit\nof stuff here so if I was just trying to\nsay like maybe create I'm just trying to\nfind something that I know that I've\nbeen doing like create access keys I can\nsee the access keys that going to be\ncreated within this uh sandbox account\nhere for the user and things like that\nso it's a great way to kind of find\nthings but generally you're going to\nalways want to turn on uh or create your\nown trail so if you go here and hit\ncreate Trail say my new Trail and um\nyou're going to need an bucket for that\nyou'll probably want encryption turned\non which sounds good to me you'll\nabsolutely want log file validation and\ngenerally you don't want to store your\nyour Cloud tra logs within the existing\naccount you want to have a isolated\nhardened account that's that is uh\ninfrequently accessed or only by your\nyour Cloud security Engineers um away\nfrom here because you don't want people\ntampering with it deleting it or\nchanging stuff but um we'll just take an\nexisting one here I don't want a c\ncustomer manage don't I have one that is\nmanaged bys here new\ncustom um we'll just choose that one I\ndon't know which one that is we'll just\nhit next usually adus gives you a manage\nkey there so I was kind of surprised um\nyou can also include additional data so\nif you do data events this would collect\ninformation from S3 um but the thing is\nyou might not want to track everything\nbecause if you track everything it can\nget very expensive very quickly uh but\nif you don't you just leave on\nmanagement events it'll save you more\nmoney there's inside events uh this is\nnew I haven't seen this yet so ident I\nidentify unusual activity errors users\nbehavior that sounds really good but\nthese can come also add additional\ncharges but I'm going to hit next anyway\nfor fun I'm going to create that\ntrail\nokay and uh the key policy does not\nGrant sufficient access to etc etc so\nI'm going to go turn that off even\nthough I should really have it turned on\nbut I just want to be able to show you\nthis okay so we have this new\nTrail and so this Trail is being dumped\nto S3 so we might not be able to see\nanything in here as of yet but I'm just\ngoing to pop over here and just see\nright I probably have one in my other\naccount but it's not um it's not that\nimportant we basically saw what the data\nwould look like so we go into here\nthere's a digest I don't remember there\nbeing a digest so that's nice so there's\nno data yet but when there is it will\npop into there um I'm not sure if we're\ngoing to be able to do anything with\ninsights here at least not in this\naccount\ninsights are events that are show\nunusual API activity and things like\nthat so that's kind of cool I don't know\nwhat cloudwatch insights looks\nlike uh inside events are shown in the\ntable for 90 days okay so I'm just\ncurious if we can see kind of a\nscreenshot of what that looks like\nwhoops well we're at least on the\narticle here so I guess you could kind\nof get like some kind of graphs or\nsomething saying like hey this looks\nunusual and they might select it so not\npretty clear in terms of what that looks\nlike but I mean sounds like a cool\nfeature and I'm sure when I when working\non my uh security certification course I\nwill definitely include in there but\nthat's pretty much all there is to it um\nI'm going to go ahead and delete um that\ntrail because I I just don't really need\nin this account but uh generally you\nalways want to go in and create a trail\num and what you can do is if you're in\nyour root account I'm not this is\nactually a an account that's part of an\norganization but if you're at that\norganization level you can create a\ntrail that that spans all the regions\nthat spans all the ad accounts with an\norganization and that's what you should\nbe doing okay but uh that's about\n[Music]\nit hey this is Andrew Brown from exam\nPro we're looking at ML and AI services\non AWS but let's first just Define what\nis AI ML and deep learning so AI also\nknown as artificial intelligence is when\nmachines that perform jobs that may make\nhuman behavior ml or machine learning\nare machines that get better a task\nwithout explicit programming and deep\nlearning or DL are machines that are\nhave an artificial neural network\ninspired by the human brain to solve\ncomplex problems and a lot of times\nyou'll see this kind of onion where\nthey're showing you that um you know AI\nuh can be using ml or deep learning and\nthen deep learning is definitely using\nmachine learning but it's using neural\nnetworks and so for AWS the flexship\nproduct here is Amazon sagemaker it is a\nfully managed service to build train\ndeploy machine learning models at scale\num and there's a bunch of different kind\nof Open Source Frameworks you can use\nwith it like Apachi mxnet on us which is\nan open source deep learning framework\nthat is the one that it decided to say\nhey we are going to back this one and so\nyou'll see a lot of example code for\nthat one we have tensorflow that you can\nuse pie torch uh hugging face other\nthings as well okay um and so there's a\nlot of services underneath some that\nmight be of interest to mention right\naway is like Amazon sagemaker ground\ntruth which is a data labeling service\nwhere you have humans that label a data\nset that will be used to train machine\nlearning models or maybe something like\nAmazon uh augmented AI so human\nintervention review Services when\nsagemaker uses machine learning to make\na prediction that is not confident uh it\nhas the right answer cue up to the\npredict for a human review and these are\nall about just labeling data um you know\nwhen you're using supervised um\nsupervised learning but there are a lot\nof Services Under sagemaker itself and\njust AI services in general so we'll\nlook at that next\n[Music]\nokay all right let's take a look at all\nthe ML and AI services and there's a lot\non AWS so the first is Amazon code Guru\nthis is a machine learning code analysis\nservice and code Guru performs code\nreviews and will suggest to improve the\ncode quality of your code it can show\nvisual code profiles so show the\ninternals of your code to pinpoint\nperformance next we have Amazon Lex this\nis a conversation interface service with\nLex you can build voice and text chat\nBots we have Amazon personalized this is\na real-time recommendation service it's\nthe same technology used to make product\nrecommendations to customer shopping on\nthe Amazon platform then we have Amazon\npoly this is a text to speech service\nupload your text and an audio file\nspoken by synthe synthesized voice uh\nand that will be generated you have\nAmazon recognition this is an image and\nvideo recognition Service uh analyze\nimage and videos to detect and label\nobjects peoples and celebrities then we\nhave Amazon transcribe this is a speech\nto text service so you upload your audio\nand that'll be converted into text we\nhave Amazon text extract this is an OCR\ntool so it extracts text from scan\ndocuments when you have uh paper forms\nand you want to digitally extract that\ndata you have Amazon translate this is a\nneural machine learning translation\nservice so use deep learning mod models\nto deliver more accurate and natural\nsounding translations we have Amazon\ncomprehend this is an NLP so natural\nlanguage processing service find\nrelationships between text to produce\ninsights looks at data such as customer\nemail support tickets social media and\nmakes\npredictions then we have Amazon forecast\nthis is a Time series forecasting\nservice and it's you know uh I mean\ntechnically I guess it's a bit of a\ndatabase but the idea here is that it\ncan forecast business outcome such as\nproduct demand resource needs or\nfinancial uh performance and it's\npowered by ml or AI if you want to call\nit we have ads deep learning Ami so\nthese are Amazon ec2 instances they're\npre-installed with popular deep learning\nFrameworks and interfaces such as\ntensorflow pytorch Apachi mxnet chainer\nGL uh gluon uh horovod and\nkiras we have adus deep learning\ncontainers so Docker images instances\npre-installed with popular deep learning\nFrameworks interfaces such as tensorflow\npytorch apachi mxnet uh we have adsd\ncomposer this is machine learning\nenabled musical keyboard uh I don't know\nmany people using this but it sounds\nlike fun it was deep lens is a video\ncamera that uses deep learning it's more\nof like a learning tool so again we\ndon't see many people using this adus\ndeep racer is a toy race card that can\nbe powered with machine learning to\nperform autonomous driving again this is\nanother learning tool for learning ml\nthey like to do these at reinvent to\nhave like these racing\ncompetitions Amazon elastic interface so\nthis allows you to attach lowcost GPU\nperform uh powered acceleration to ec2\ninstances to red the cost of running\ndeep learning interfaces by\n75% we have Amazon fraud detector so\nthis is a fully managed fraud detection\nuh as a service uh it identifies\npotentially fraudulent uh online\nactivities such as online payment fraud\nand the creation of fake accounts Amazon\nKendra so this is an Enterprise machine\nlearning uh search engine service it\nuses natural language to suggest answers\nto questions instead of just simple\nkeyword matching so there you\n[Music]\ngo hey hey it's Andrew Brown from exam\nPro and we're going to do a quick review\nhere of the big data and analytic\nservices that are on AWS but before we\ndo let's just to find what big data is\nso it's a term used to describe massive\nvolumes of structured or unstructured\ndata that is so large it is difficult to\nmove and process using traditional\ndatabase and software techniques so the\nfirst here we have is Amazon Athena this\nis a serverless interactive query\nservice it can take a bunch of CSV or\nJson files in an S3 bucket and load them\ninto a temporary SQL table and so you\ncan run SQL queries so it's when you\nwant to create CSV or Json files if\nyou've ever heard of um Apachi Presto\nit's basically that okay then we have\nAmazon Cloud search so this is a fully\nmanaged full teex search service so when\nyou want to add search to your website\nwe have Amazon elastic search service um\ncommonly abbreviated to es and this is a\nmanage elastic search cluster and\nelastic search is an open source full\nTech search engine it is more robust\nthan Cloud search but requires more\nserver and operational maintenance then\nwe have Amazon elastic map produce\ncommonly known as EMR and this is for\ndata processing and Analysis it can be\nused for creating reports just like red\nshift but is more suited when you need\nto transform unstructured data into\nstructured data on the Fly and it\nleverages open-source um technology so\nlike spark um Hive Pig things like\nthat then we have Kines is data Stream\nSo This is a real-time streaming data\nservice it creates producers uh which\nsends data to a stream it has multiple\nconsumers that can consume data within a\nstream and use uh it for real-time\nanalytics click streams ingestion data\nfrom a fleet of iot\ndevices then we have Kinesis fire hose\nthis is a serverless and a simple\nversion of a data stream and you pay on\ndemand based on how much data is\nconsumed through the stream and you\ndon't worry about the underlying\nservers then you have Amazon Kinesis\ndata analytics this allows you to run\nqueries against data that is flowing\nthrough your real-time stream so you can\ncreate reports and Analysis on emerging\ndata and last on the Kinesis side here\nwe have Amazon Kinesis video streams\nthis allows you to analyze or apply\nprocessing on real-time streaming videos\nonto the second page here we have manage\nkofka service\nmsk um and it might be MKS um now that\nI'm looking at it here so just be aware\nthat that might be incorrect but a fully\nmanage aachi kofka service kofka is an\nopen-source platform for building\nreal-time streaming data pipelines and\napplications it is similar to Kinesis\nbut with more robust functionality then\nwe have red shift which is um a this\nFlagship uh Big Data tool it's a\npetabyte size data warehouse the data\nwarehouses are for online uh online\nanalytical processing olap so data\nwarehouses can be expensive because they\nare keeping data hot meaning that we can\nrun a very complex query in a large\namount of data and get that data back\nvery fast but this is great when you\nneed to quickly generate analytics or\nreports from a large amount of data we\nhave Amazon quick site this is a\nbusiness intelligence tool or a business\nintelligence dashboard bi for short you\ncan use it to create business dashboards\nto power business decisions it requires\nlittle to know programming and connect\nand adjust to many different types of\ndatabases if you ever heard of Tableau\nor powerbi this is just the adus\nequivalent we have adus data pipelines\nthis automates the movement of data you\ncan reliably move data between compute\nstorage and services we have Abus glue\nthis is an ETL service so it allows you\nto move data from one location to\nanother where you need to perform\nTransformations before the Final\nDestination it's simar similar to DMS\nbut it's more robust we have Aus Lake\nformation this is a centralized curated\nand secured repository that stores all\nyour data so it's a data Lake it is a\nstorage repository that holds a vast\namount of raw data in its native format\nuntil it is needed and then last on here\nwe have adab state exchange this is a\ncatalog of third-party data sets you can\ndownload for free uh or subscribe or\npurchase data sets so they might have\nlike the covid-19 foot traffic data the\nIMDb TV movie data historical weather\ndata and sometimes this is really great\nif you're just trying to learn how to\nwork with these tools\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look here at\nAmazon quick site which is a business\nintelligence dashboard or bi dashboard\nthat allows you to ingest data from\nvarious databus storage or database\nservices to quickly visualize business\ndata with minimal programming or data\nformula knowledge so here's an example\nof a quick site dashboard um and so the\nway quick site is able to make these\ndashboards super fast is via spice the\nsuper fast parallel in memory\ncalculation engine um and the thing is\nyou don't have to use spice um but\ngenerally it is good to use it uh and\nthere are some caveats when getting your\ndata into Quick site sometimes it can't\ningest data directly from a particular\nuh data store so you might have to dump\nit to S3 first but it's not too bad\nbecause you can use Adis glue to\ntransform that data over um there are\nadditional features sometimes Market as\nservices but we have quick site ml\ninsights this detects anomalies perform\naccurate uh forecasting it can generate\nnatural language narrative so basically\nlike you know describe it as if you're\ngoing to read it out as a business\nreport you know then there's Amazon\nquick site Q this allows you to ask\nquestions using natural language on all\nyour data and receive answers in seconds\nso there you go\n[Music]\nhey this is Andrew Brown from exam Pro\nand let's go take a look at Amazon quick\nsites which is a or quick site which is\num a business intelligence tool so when\nyou go here you have to uh sign up\nbecause it's kind of part of ads but on\nits own separate thing and then you have\nto choose what you want so we have\nEnterprise and standard um I do not want\nto pay that much so I'm going to go to\nstandard over here I'm not really sure\nwhat the difference is it's not really\ntelling me what\num between standard and\nEnterprise but I'm going to assume\nstandard is more cost effective but here\nwe it says user use I am Federated\nidentities which is fine use I am\nFederate identities only um we can stick\nwith the top one there that seems fine\nto me we need to enter a name so we'll\njust say my quick site\naccount and we probably have to fill\nsomething in there so let's say Andrew\nexample . Co and these are the services\nthat are going to integrate with it\nAthena S3 RDS things like that I guess\nwe could select some of those buckets\nI'm not too worried about doing that\nright now the provided account name is\nnot available that is a terrible UI but\nthat's AWS for you so I'm just going to\ndump some numbers there going put my\nemail in here\nagain um we probably want some S3\nbuckets I'm going\nto make a new\nbucket because I think that's how we're\ngoing to do this we're gonna have to\nmake a bucket here and say uh quick\nsite\ndata okay and we're going to create\nourselves a bucket here I'm going to go\nback and hopefully that shows\nup uh it does not so what I'll have to\ndo is just back\nout and I'm just going to give it a hard\nrefresh here and we're hit quick sign up\nfor quicksite again and we'll choose\nstandard and we'll say my quick site\naccount account a bunch of numbers there\nAndrew exam. I don't really care about\nadjusting data from everywhere else I\njust want it from\nS3 there's my\ndata uh sure we'll give it right\npermissions even though I don't plan to\ndo anything with Athena here\ntoday and we'll give it a moment to\nload so what I'm thinking is\nso what I'm thinking is just making like\nan Excel spreadsheet here and just\nfilling in some data so oh it says our\naccount is set up here so we'll go to\nQuick site because I bet it can import\nlike a CSV or\nsomething um I'm more of a tableau or\npowerbi kind of person um but uh you\nknow for the purpose of the cloud\npractitioner I am going to show you this\nAmazon quick set lets you easily\nvisualize data and Etc that sounds great\nnext next next I know what I'm doing oh\ndo we have some examp great so I don't\neven have to make a spreadsheet okay so\nwhat we'll do is just click on\nthat and we have stuff it looks like\nthey've really improved this since the\nlast time I've seen it which is quite\nnice um but I could try and make my\nown I'm just trying to think how do we\ndo this\nagain yeah we have the spice there so\nit's a lot easier from starting from\nscratch I'm just going to say\nclose and\nuser analysis we want data sets in here\noh we already have some data sets these\nare coming from S3 I think that's the\nold S3 logo I'm not sure why they're\nusing that one we can go here and create\na new data set oh we can upload directly\nso I don't even have to use S3 that's\ngreat so what I'm going to do is just\nhave some values in here so I'm going to\njust say\num uh type value so we'll say\nbanana 125 123 we'll say\nApple\n11\norange nobody likes\noranges I shouldn't say I'm sure it's\nlike lots of people like\noranges oh we got to put pears on\nthere I actually really like pears\npeople think I like bananas which is not\ntrue I actually like pears that's what I\nlike so I'm going to go ahead and save\nthis save\nas and I'm just going to save this to my\ndesktop here so just give me a moment\njust doing this soft\nscreen and I'm just save this uh data\nset quick\nsite CSV it can even take an XLS so I\ndon't have to save it as a uh I'll just\nsave it as an\nXLS okay and so we're going to just\nupload that so there is that data\nset it's going to scan that file it's\ngoing to see that sheet you even preview\nit there's the information we're going\nto add that data\nuh I get added as a data data\nset well how do I or where do I it's\nlike it says add the data I just want to\nadd it as a data set so data set up here\nmaybe save and visualize up\nhere and is it autographing yet maybe if\nI drag in is it working is it thinking\nokay it's at 100% so I'm going to just\ndrag that onto\nthere and it says pear orange\nbanana just kind of trying to make sense\nof this here is it taking in count the\nvalue maybe put the value down there wow\nthat's so much easier I've been used\nthis for like a year and um I'm going to\ntell you this has gotten a lot easier to\nuse so I'm quite impressed with this but\nyeah I mean this is pretty much what\nquick site is if you want to visualize\nthings in different types you can drag\nthem out you can probably like click on\nthe the wheel here and change\nit again I'm not sure\nexactly how all the uh the dials and\nknobs work here but I mean another thing\nwe could do is just drag out like\nanother object and do the same thing so\nmaybe I'd want a pie\nchart um\nso add a\nvisual yeah it's not as nice as powerbi\nbut like it's still great that it's here\nyou know type\nvalue so we got a nice pie chart\nthere uh let's try something weird let's\ngive this one a go\ndoesn't color it which is not very nice\num there's probably some kind of way to\ncolor it but focus on banana only I\ndon't know I don't know what the point\nof there but anyway that's quick site so\num I really don't want to pay for this\nso what I'm going to do let's go up\nhere um there's you have to deactivate\nI'm just trying to remember\nhow because they Chang the interface\nagain they change everything on\nyou so maybe we go I'm on a trial for 4\ndays here maybe quantity for just the\nfour 29 day trial so if I want to get\nout of this trial what do I do I don't\nwant to use it anymore um\nso how to delete ads quick\nsite canceling your subscription so\nbefore you can unsubscribe uh you're\nsigned in the IM am account your\nquicksite administrator you're the root\nI am administrator sure uh you deleted\nany secondary name spaces to find the\nexisting name space Etc so choose your\nusername in the application bars manage\nquick site account settings\nunsubscribe so I was almost there I\nthought I was in the right\nplace uh this one\nno I was just\nthere manage quick\nsite your\nsubscriptions\nedit there's no unsubscribe\noption so I'm not\nsure can I\ncancel\nunsubscribe button does not appear in\nquick site\nand it could just be because we're on\ntrial and so maybe after the end of the\ntrial it will uh it will vanish\nthere they are not making this easy for\nme account settings ah delete account so\nthis is what we probably want to do\npermanently delete the account\nyes I mean that has to get rid of the\nsubcription because it gets rid of\neverything there we\ngo we'll say\nconfirm delete\naccount unless you're using them in the\nservices blah blah blah blah blah um\nsuccessful okay great so now I should go\nback ads. amazon.com and just to confirm\nthat it's gone I'm going\nto go to quicksite again and just see if\nit's trying to ask me to sign again so\nit is so I've gotten R of my account so\nwe're all in good shape and uh yeah that\nis that is quick\nsite all right let's take a look at some\nmore machine learning AI services\nbecause adab us won't stop making these\nthings um and basically last time I made\nuh the videos all this generative stuff\ndid not exist so we need to cover it the\nfirst is Amazon Bedrock so the uh this\nuses large language models and makes it\na cloud service offering to generate\ntext and images responses if you know\nwhat chat GPT is you know what Bedrock\nis we have Amazon code Whisperer it's an\nAI code generator that will predict code\nto meet your use case uh so if you've\nheard ever heard of GitHub co-pilot it's\nthe same thing basically it's going to\nwrite code for you or along with you I\nshould say we have Amazon devops Guru\nthis uses ml or machine learning to\nanalyze your operational data and\napplication metrics and the events to\ndetect operational\nabnormalities um imagine if you had kind\nof like a junior devops person digging\ninto your metrics to figure out if\nthere's something wrong then we have\nAmazon Lookout this is actually three\ndifferent um offerings we have Amazon\nlookout for equipment Amazon uh lookout\nfor metrics and Amazon look out for\nvision they all seem to have to do\nsomething with quality control and\nPerforming automated inspection so\nvision of course would use Vision to\ndetect anomalies uh one would be for\nequipment to detect if there's anything\nwrong with operational equipment uh and\nthen metrics would be you know with\nmetric data so something probably more\nfor um the hard Industries uh to utilize\nand you have Amazon monotron so this\nuses machine learning models to predict\nunplanned equipment downtime and so the\nway they do that is they have these uh\niot sensors that's going to capture\nvibrations and sensor data from your\nHardware then we also have adus neuron\nthis is an ad SDK used to run deep\nlearning workloads on adus uh infer I\ncan't say that word but I know what it\nis it's basically um it's a machine\nlearning acceleration on gpus that you\ncan attach and ads train\ntrainum so yeah I wish the words weren't\nso hard there's actually more um stuff\nthat Aus has for machine learning I\ndidn't include them because they were\njust too far out there and they're\ndefinitely not going to show up in your\nexam you'll definitely never see them\nbut we now have better coverage what I\nreally wanted to show was Bedrock hod\nWhisperer because I feel like those two\nuh will show up on future exams I'm just\ntrying to get those in front of you now\neven if they're not on the exam uh at\nthe time of this recording okay\n[Music]\nciao all right so you probably are\nalready know what generative AI is but\njust in case you don't I want to just\nquickly cover it and show a very tiny\nexample uh so generative AI which also\ncan be shorten to gen AI though most\npeople don't say that uh is a type of\nartificial intelligence capable capable\nof generating new content such as text\nimages music or other forms of media so\nan example would be something like a\nsoftware that I like to use called mid\nJourney uh where you can put in a prompt\nand so it will then go ahead and\ngenerate out an image um so all the\ncloud service providers have some kind\nof offering with both image and text um\nbut yeah hopefully that makes sense the\nidea is that you can plug stuff in you\nget stuff out\n[Music]\nokay let's us take a look here at\nmachine learning and deep learning\nFrameworks and so these are Frameworks\nthat uh can be used with sagemaker or\nhave direct support for them I just want\nto get you some uh exposure and to uh\nget you some context in terms of these\nbecause machine learning and Ai and all\nthis stuff is becoming more popular so\nyou should at least have heard of these\nthings so I have all the logos on the\nleft hand side and we'll go through them\nthe first is Apachi mxnet so this is a\nmachine learning framework adopted by\nads basically um every single cloud\nservice provider backs their own kind of\nopen- source framework and they try to\nmake that the one that they suggest you\nto use but in practice uh there's ones\nthat are good and there's ones that\npeople just don't want to use and Apachi\nmxnet is not fun to use whatsoever um\nand so you'll see it all over in the\nmarketing and pushed everywhere but\nreally people want to use things like\ncurus tensor flow but anyway I just\nwanted to point that out that it was has\na bias because they've invested energy\ninto uh their team of machine learning\nFrameworks you got pytorch optimized for\ntensor Library uh for deep learning\nusing GPU and CPU it's created by\nFacebook Facebook does not necessarily\num have its own cloud service provider\noffering so it's kind of out there and\nso you'll see good support for pytorch\nand all the major providers U the next\nis tensorflow this is made by Google\nwhat's interesting with tensor flow is\nGoogle made uh their own um GPU or TPU\nthey call it a tensor Processing Unit so\ntensor is a a unit of thing in\ntensorflow and it they have optimized\nhardware for it I personally find\ntensorflow the easy to use or I should\nsay cires so um CES is a highlevel\nmachine learning framework built on top\nof tensorflow because these lower level\nones were just really hard to use and so\nbasically pytorch came along and it was\nmuch easier to use and then everyone\nnoticed how easier py torch was and so\nthat's where curus came from was to be\ncompetitive with pytorch and be easier\nto use then you have a poy spark which\nis a unified analytics engine for large\nscale data processing but they do have\nml offerings within it called spark ml\num so there's definitely things you can\ndo there uh there's a piece of software\ncalled chainer um and it's for it's a\ndeep learning framework that supports\nCuda then there's hugging face which is\nnot exactly a framework or tool it's\njust a way of accessing a lot of models\nonline and data sets and quickly\nlaunching them for whatever reason I uh\nadus has uh strong synergies with\nhugging face I've seen like developer\nAdvocates and other uh folks that worked\nat AOS go over to hugging face and so\nthere seems to be strong uh\nrelationships between hugging face and\nadabs for whatever reason there's a lot\nof ml Frameworks out there but because\nuh ml is uh just uh\nprogressively um or rapidly innovating\nyou'll see Frameworks come and go and so\nI remember when I researched this and I\nwas just trying to understand all the\nFrameworks out there there was just a\nlot and I just kept digging into them\nfinding oh they're not active anymore\nthey're not active anymore so I just\nwant to point out that we have all these\nones up on screen if they become active\ntomorrow I would not be surprised but uh\nfor the most part all of these seem to\nbe very popular uh and uh they're being\nwell supported uh but yeah hopefully\nthat gives you an idea of these\nFrameworks okay\n[Music]\nciao all right let's take a look here at\nApachi mxnet a little bit more in detail\nbecause this is the framework that aabus\nwants you to use whether you want to use\nit or not is a different story uh but\nyou'll see it all over in their\nmarketing pages and things like that so\napachi mxnet is a deep learning machine\nlearning framework which supports many\nmany different programming languages so\nthat is one advantage of it uh the key\nfeatures uh is that it's scalable it's\nflexible it's portable it's it supports\nmultiple programming language inabus has\nmade Apachi mxet their framework of\nchoice so there's lots of support for it\nwithin ad sagemaker and the ad ml\ncontainers but I have noticed that\nthey've been increasing support for p\ntorch so maybe you know they're just\ntrying to meet the customer where they\nare but but anyway um there is a lot of\nstuff for mxnet mxnet has two highlevel\ninterfaces uh one's called glue on and\nthere is module API so uh depending on\nwhich one you use one is imperative\nprogramming one's symbolic programming\nuh this is more of a deeper concept for\nmachine learning but I'm going to tell\nyou one is really easy one is really\nhard um but uh let's look at a very\nsimple example of uh some code for using\nthe gluon API so it kind of looks like\nthat you can see that they are using\npython so hopefully that gives you an\nidea of uh mxnet and its offering the\nkey thing is that it offers it in a lot\nof different programming languages will\nthis appear on your exam absolutely not\nbut should you know it you absolutely\nshould um just so you have good context\nwith adus and ml so there you\n[Music]\ngo I want to talk a little bit about\nIntel because I think it's very\nimportant to remember the hardware that\nis running with these um cloud service\nproviders because it really does matter\num and there's a couple terms you might\nsee when using a compute that you're not\naware of and I want to make sure you\nknow what they are so let's talk about\nwhat is Intel so Intel is a\nmultinational corporation is one of the\nworld's largest semiconductor chip\nmanufacturers Intel is the inventor of\nthe\nx86 instruction set so basically uh they\nreleased this chip back in 1978 this\none's called the Intel 8086 chip and the\nidea is that um they came up with an\ninstruction set um it's basically a\nbunch of words that you can use um to\nprogram the chip and it's a lower level\nlanguage so um that lower level language\nwould be in assembly um if if that makes\nany sense so the idea is that you have\nthis um instruction set and you have to\nwrite an assembly and so basically most\nmodern programs like when you use uh\nprogramming languages like uh C it will\nactually compile down to assembly um or\nother languages will compile down to\nassembly because that is what the chip\nunderstands and then assembly is turned\ninto machine code like the zeros and\nones and the reason I'm mentioning this\nis that when you go and you uh launch uh\na compute uh instance let's say on AWS\nuh you're launching a ec2 instance you\nhave to choose uh whether it's x86 or a\ndifferent instruction set or\narchitecture and so the other one is arm\nand they're both really really good it\njust depends on whether uh uh your stuff\ncan support it but for the most part\nIntel has arm chips as well so so um\nthere is no company that produces arm\nchips per se it's just an architecture\nand uh the way it works is that it just\nhas fewer instruction sets so there's\nfewer uh rules that you can write in so\nit's a more limited writing it in\nassembly but at the end of the day it\ndoesn't matter because your programming\nlanguage is going to compile it down so\nyou don't have to worry about those\nfewer instructions but because it has\nfewer instructions it generally results\nin a better uh Power efficiency and so\nit can have better performance or better\nor better cost to to you the customer so\nwhen I can I try to run arm and for the\nmost part it's always great to run arm\nbut uh it really depends on if your\nsoftware is going to be able to run on\narm um and stuff like that so I just\nwanted to point out those two things\nthere about uh at least a Intel and then\ninstruction sets\n[Music]\nokay all right I want to talk about two\nthings um that Intel has with ads and\nthe first is Intel Zeon scalable\nprocessor and the second is Intel Gotti\num so it us of course does work with or\npurchases um Hardware from other um uh\nother companies like they use AMD and\nNvidia but I think it's worth mentioning\nIntel in a little bit more detail here\nbecause every time I go to reinvent\nIntel has a big giant booth and you can\ngo scour the ads website and it just\nlooks like ADS works more closely with\nIntel as opposed to the other uh\nproviders not to say that Intel is not\nbeing utilized on gcp and Azure and\nothers but uh I just noticed something\nmore going on there with AWS but let's\nfirst talk about Intel xon scalable\nprocessors these are high performance\nCPUs designed for Enterprise and server\napplications commonly used in a\ninstances um that scalable part makes\nthem very good for machine learning so\nyou often are going to be be using Intel\nZeon processors whether you know or not\non\nads the Intel is the Intel uh Habana\nGotti processor so this is a a processor\nspecialized for AI training uh you could\nsay that this is a direct competitor to\nNvidia or a similar competitor because\nuh they uh they uh do something very\nsimilar um I believe that Intel Gotti\nhas their own SDK called synapse AI uh\nthat you can use to interact with it so\nyou launch up Sage maker and then use uh\nthat uh that API or SDK in order to best\nutilize uh that Hardware there but both\nof these um pieces of Hardware are\noffered uh on ads and I think it's just\ngood to know them at least to name uh\nwhat they are\n[Music]\nokay hey this is angrew brown and let's\ntalk about gpus I'm sure most people\nknow what gpus are here but I'm going to\ntalk about it anyway because I want to\ntalk about cudas so a GPU stands for\nGeneral processing unit and it's a\nprocessor that is specialized to quickly\nrender high resolution images and videos\nconcurrently if youve ever played video\ngames you know you need a good GPU\nbecause it's all about those images\nhowever gpus can perform parallel\noperations on multiple sets of data so\nthey can also be used for non-graphical\ntasks and this makes it really good for\nmachine learning and scientific uh\ncomputation so if you're trying to uh\nconvince your significant other that you\nneed a better graphics card you can just\ntell them it's for work I need it for\nmachine learning and scientific comp\ncomputation it's not your fault that you\ncan also play video games with it and so\nwe have like a graphic there on the\nright hand side I think I got that from\nNvidia and so they're kind of trying to\ndemonstrate the difference between uh\nthe paralyzation with GPU versus serial\ntasks with CPU but let's go and just\nread a little bit more so CPUs can have\nan average of four to 16 processor cores\ngpus can have thousands of processor\ncores how that works I have no idea but\nI just know that that's how it works uh\nso we have 48 gpus can provide as many\nas 40,000 C\nso that is a lot gpus are best suited\nfor repetitive and highly parallel\nComputing tasks such as rendering\nGraphics cryptocurrency mining if people\nare even still doing that and deep\nlearning and machine learning so you\nknow there you go that's\n[Music]\ngpus all right let's take a look here at\nCuda but before we do let's talk about\nNvidia so Nvidia is a company that\nmanufactures graphical processing units\nfor gaming and professional markets if\nyou have ever played video games and you\nbuild your own rig um a lot of people\nlike to choose Nvidia but Nvidia can do\nthings other than video games and this\nis due to their framework uh called cuda\nwhich stands for compute unified device\narchitecture so it's a parallel\nComputing platform and API I said\nframework but I guess it's an API bu in\nvideo that allows developers to use Cuda\nenable gpus for general purpose\nComputing gpus and it says GP GPU\nbecause it's saying general purpose gpus\nI know that's a mouthful there um so\nover on AWS they have a bunch of\ninstances that um can utilize uh Nvidia\nGPU so I adus is always changing the\ninstances so these could be old but you\ncan see we have a P3 which has the Tesla\nTesla V100 you have the G3 with a Tesla\nM M60 the G4 with a T4 uh the P4 with\nthe Tesla a 100 so there's probably\nthese are probably old ones there's new\ninstances with newer Nvidia cards but my\npoint is is that adus has uh gpus that\nyou can utilize another thing I want to\npoint out with Cuda is that all major\ndeep learning Frameworks are integrated\nwith Nvidia deep learning sdks there's a\nbig fight or War over um uh these\ncompanies that make uh gpus and CPS\nbecause they really want the uh Theirs\nto be used for machine learning so you\ncan definitely be sure that AMD probably\nhas some kind of similar offering or\nsomething uh and definitely Intel as\nwell um but Nvidia has done a very good\njob in uh making sure that theirs is the\nmost popular um so Nvidia deep learning\nSDK is a collection of En uh Nvidia\nlibraries for deep learning so this is\nsomething that this is the SDK you can\nuse with Cuda to interact with their API\nuh so one of those libraries are called\ncuda deep neural network library so\nthat's something you can use with it and\nit's uh tuned for a bunch of stuff if it\nlooks like it's getting a little bit too\num uh technical it's because this slide\nwas was for my machine learning uh\ninabus specialty and I didn't do a whole\nlot to change it and brought it over uh\nso you don't don't really need to know\nthat last part there but just understand\nwhat Cuda is and that it's uh very\nimportant uh for working with machine\nlearning and adus has uh good offerings\nuh for instances with it okay\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are taking a look at the ads well\narchitectur framework so this is a white\npaper created by ads to help customers\nbuild using best practices defined by\nAWS you can find this at aws.amazon.com\narchitecture forwell architected this\nidea is not unique to AWS the other\nproviders have it but I believe AWS was\nthe first one to Define this and they\nhave a really good uh a good approach to\nthis and this is pretty much Essential\nKnowledge that you have to have uh four\ncertifications when we're looking at the\ncloud practitioner the soci architect\nassociate and professional because um\nthere's a lot of principles here are\nbest practices that adus uses themselves\nto architect their infrastructure okay\nso the framework is divided into five\nsections called pillars which address\ndifferent aspects or lenses that can be\napplied to a cloud workload so imagine\nyou have your Cloud workload you're\ngoing to want to adopt an a architect\nframework some things that you know\npeople don't consider outside the Five\nPillars is that you need to know en\ndefinitions uh General design principles\nand the review process um and then from\nthere you have your five pillars so you\nhave operational excellence security\nreliability performance efficiency and\ncost optimization and all these have\nmajor sections in this uh white paper\nbut outside of just the main white paper\neach of these have their own white\npapers that go even into farther detail\nso if you really want to uh really focus\non security and get a lot more\ninformation they have that as well okay\n[Music]\nlet's take a look at the general\ndefinitions for the well architecture\nframework starting with the pillars so\nthe operational excellent pillar is\nthere to run and monitor systems the\nsecurity pillar is to protect data and\nsystems to mitigate risk the reliability\npillar is to mitigate and recover from\nuh disruptions the performance\nefficiency pillar is about using\nComputing resources efficiently or\neffectively and the cost optimization\npillar is about getting the lowest price\nand this is where you're going to find\nall the business value and I put an\naster there because uh you know you\nmight obsess saying we need to meet the\nrequirements for all these pillars and\nthat's not the case you can trade off\npillars based on the business context so\nyou know don't take it as literally\nImplement every single thing but just\nconsider that uh you know you might have\nto adapt it based on your workloads then\nwe have some general definitions that we\nwill come across so there's components\nso code configuration itless resources\nagainst the requirement a workload so a\nset of components that work together to\ndeliver business value mileston so key\nchanges of your architecture through the\nproduct life cycle then there's\narchitecture itself so how components\nwork together in a workload and then we\nhave technology portfolio so a\ncollection of workloads required for the\nbusiness to operate\n[Music]\nokay so the well architected framework\nis designed around a different kind of\nteam structure so when you're looking at\nEnterprises they generally have a\ncentralized team with specific roles\nwhere ADS structures their teams as\nbeing distributed with flexible roles\nand so this new kind of methodology of\ndistributed teams uh has some major\nadvantages but it does come with some\nrisks and so it us has baked in some uh\npractices or uh things that they do to\nmitigate these issues okay so let's\ncompare on premise Enterprise uh to what\nitus is proposing for your team\nstructure so on premise what we'd see is\na centralized team consisting of\ntechnical Architects solution AR\nArchitects data Architects Network\nArchitects security Architects and you\nkind of see that they all have a\nspecialized vertical and they are\nusually managed by either TF or Zack man\nframework so those are just ways of\nstructuring your teams those are very\npopular and so what adus is proposing\nhere is that you have a distribute team\nand uh the way you're going to make that\nteam work because obviously just\nthinking about distribute team they're\ngoing to be a lot more agile but to make\nsure that they effectively work you have\npractices like team experts who raise\nthe the bar uh making sure that you know\nuh in any areas we can always say how\ncan we do this better uh then there are\nmechanisms in place for automated checks\nfor standards so that's the great thing\nabout Cloud can all be automated to say\nhey does it meet our Regulatory\nCompliance or or what have you and then\nthere's the concept of the Amazon\nleadership principles which we will\ncover on in the next slide in detail and\nso um you know iTab us is not obviously\nusing uh these other Frameworks because\nit has its own which is this one here\nbut the the mechanism to which they stay\norgan oriz and up to date is they are\nsupported by a virtual community of\nsubject matter experts principal\nEngineers so that what they'll do is\nthey'll engineer things like lunchtime\ntalks and then recycle that into their\nonboarding material or into this\nframework itself\n[Music]\nokay so we're taking a look here at\nAmazon's leadership principles and these\nare a set of principles used during the\ncompany's decision- making problem\nsolving simple brainstorming and hiring\nall right um and so I can't say I like\nall of these but definitely some of them\nreally stand out as being great\nespecially the first one which is\ncustomer Obsession so instead of\nworrying about what your competitors are\ndoing think about what the customer\nwants work your way back and uh you know\nreally focus on the customer's needs\nthen there's ownership so if you're\ngoing to go do something uh you know try\nto be your own mini boss uh and take\nresponsibility for whatever it is you're\nbuilding event and simplify so you know\nalways look for the simplest solution\ndon't try to engineer something super\ncomplicated if it's not necessary uh or\nright a lot so you know try to be right\nuh learn and be curious so that's pretty\nself-explanatory hire and develop the\nbest insist on the high standards adus\nalways refers to this as raising the bar\nthink big buys for Action frugality and\nadus is really Frugal if you didn't know\nthat but not just for like themselves\nbut also for their customers they want\ncustomers to uh spend the least amount\nof money possible when using their\ninfrastructure earn trust uh dive deep\nhave a backbone disagree and commit\ndeliver results strive to be the earth's\nbest employer success and scale bring\nbroad responsibility and if you want to\nread these in detail because they have a\nbig block of text for each of these uh\nyou can go to amazon. jobs\nuhen principles and read all about it\n[Music]\nokay all right let's talk about some\ngeneral design principles uh that you\nshould be considering when you are\ndesigning your infrastructure no matter\nwhat pillar that you are looking to\nadopt the first is stop guessing your\ncapacity need so the great thing with\ncloud computing is you use as little or\nmuch based on demand whereas on premise\nyou would have to purchase a machine and\nyou'd have to make sure you have\nadditional capacity so that you could\ngrow into it right and so here with uh\nCloud you do not have to worry about\nthat uh test systems at production scale\nso be able to clone your production\nenvironment to testing tear down testing\nwhile not in use to save money so a lot\nof people will have a staging server\nthat they run all the time but the great\nthing here is that with Cloud you know\nit's you can just spin it up and have it\nright away and then tear it down and\nsave money um there's automating to make\narchitectural experimentation easier\nthis is talking about using\ninfrastructure as a code so for ad ofs\nthis would be using cloud formation\ncreating change sets which kind of um uh\nsay exactly what is going to change\nstack updates drift detection to see if\nyour stuff is uh uh being changed over\ntime by developers through manual\nconfiguration things like that then we\nhave allow for evolutionary\narchitectures so this is about adapting\ncicd um doing nightly releases or if\nyou're using serverless if you adopted\nlambdas they deprecate over time forcing\nyou to use the latest version uh and so\nthat is evolutionary architectures then\nwe have drive architectures using data\nso um when you're using Cloud there's a\nlot of Tooling in there to automatically\nstart collecting data so cloudwatch will\nbe collecting some things by default and\ncloud trail will as well so you know\nthat is another thing and then improving\nthings through game days so this is\nabout stimulating traffic on production\nor purposely killing ec2 instances or or\nmessing with your services to see how\nwell they recover all\n[Music]\nright before we jump into each of the\npillars let's go open them up and take a\nlook at what structure we should expect\nto see so we have design principles\ndefinition best practices and resources\nall the pillars follow this to a t so\nlet's just talk about what these are so\nthe design principles are a list of\ndesign principles that needs to be\nconsidered during implementation and\nthat's where we're going to focus a lot\nof our energy then you have definition\nso this is an overview of the best\npractice categories then you have the\nbest practices themselves these are\ndetailed information about each practice\nwith uh various a services and then you\nhave resources these are additional\ndocumentation white papers uh and videos\nto implement this pillar and I just want\nto tell you that if you're doing the\ncertified Cloud practitioner we're\nreally just going to cover the design\nprinciples but for the solutions\narchitect associate or anything uh\nthat's associate or above that's where\nwe're going to actually dive deep into\nto the implementation of the best\npractices because there is a lot of\nstuff there so uh yeah there we\n[Music]\ngo let's take a look here at the design\nprinciples for operational excellence so\nthe first here is perform operations as\ncode so apply the same engineering\ndiscipline you would to application code\nto your infrastructure so by trating\nyour operations as code you can limit\nhuman error and enable consistent\nresponses to events generally we're\ntalking about infrast infrastructure as\na code here so this would probably like\nthings like cloud formation there's\nother things you could do like policy as\na code and a bunch of other ones then we\nhave make frequent small reversible\nchanges so design your workloads to\nallow components to be updated regularly\nuh this could be talking about doing\nrollbacks incremental changes Blu green\ndeployments having a cicd pipeline\nrefine operations procedures frequently\nso look for continuous opportunities to\nimprove your operations uh here you use\ngame days to simulate traffic or event\nfailure on your production workloads\nanticipate failure so perform post\nmodems on system failures to better\nimprove write test code kill production\nservers um there's a small spelling\nmistake it should have an R here so\nservers to test recovery learn from all\noperational failure so share Lessons\nLearned in a knowledge base for\noperational events and failures across\nyour entire organization but you know if\nyou can just remember these headings\nhere uh and be able to categorize what\nwould be under operational excellence\nyou'll be okay all right\n[Music]\nall right let's take a look at the\ndesign principles for the security\npillar so the first here is Implement a\nstrong identity foundation so implement\nthe principle of lease privilege or PP\nthat's a very uh popular concept meaning\ngiving people only the permissions that\nthey need use centralized identity so\nthat would be using adus am avoid Long\nLive credentials then we have enable\ntraceability so monitor alerts and audit\nactions and changes to your environment\nin real time integrate log and Metric\ncollection and automate investigations\nand Remediation then we have apply\nsecurity at all layers so take defense\nin depth approach with multiple security\ncontrols for everything from Edge\nnetworks vbcs load balancing instances\nOS application code uh we might have a\nslide in this course on defense and uh\ndepth where basically you see like a\nring of things and you can kind of see\nhow like there's layers that go from\noutward to Inward and that's what\nthey're talking about when they're\nlisting out all these things here\nautomate security best practices uh\nprotect prot your data in transit at\nrest uh keep people away from your data\nthe reason I don't have descriptions\nthere is because those are pretty\nself-evident prepare for security events\nso Incident Management systems and\ninvestigation policies and processes\ntools to detect investigate and recovery\nfrom incidences and uh there are a lot\nof security tools out there and they all\nhave funny uh initialisms I didn't put\nany of them in here but I'm sure there\nare some there um but yeah there you go\nfor\n[Music]\nsecurity all right let's take a look at\nthe design principles for reliability\nand the first here is automatically\nrecover from failure so Monitor kpis and\nTrigger automations when the threshold\nis breach test recovery procedures so\ntest how your workload fails and you\nvalidate your recovery procedures you\ncan use automation to simulate different\nfailures or to recreate scenarios that\nled to failures before scale\nhorizontally to increase aggregate\nsystem availability so replace one large\nresource with multiple small resources\nto reduce the impact of a single failure\non the over overall workload to\ndistribute requests across multiple\nsmaller resources to ensure that they\ndon't share a common point of failure so\nwe're talking about multi-az uh High\navailability okay stop guessing capacity\nwe've seen this multiple times so in on\npremise it takes a lot of guess work to\ndetermine the elasticity of your\nworkloads uh workload demands with Cloud\nyou don't need to guess how much you\nneed because you can request the right\nsize of resources on demand that's going\nto give you better reliability okay\nmanage change in automation so making\nchanges via infrastructure as a code\nwill allow for a formal process to track\nand review infrastructure you're going\nto see IC show up a lot in this\nframework\n[Music]\nokay let's take a look at design\nprinciples for performance efficiency so\nthe first here is democratize advanced\ntechnology so focus on product\ndevelopment rather than procurement\nprovisioning and management of services\nbecause if you're on Prem you'd have to\norder those machines set them up and so\ntake advantage of advanced technology\nspecialize in optimize for your use case\nwith on demand cloud services because\nagain if you're using on Prem uh you you\nknow you might not have the option to\nhave Sage maker right it's just going to\nbe a VM and you're going to have to do\nall the work yourselves whereas ads has\nall these specialized things so you can\nmove quickly uh Go Global in minutes so\ndeploying your workload in multiple Abus\nregions around the world allows you to\nprovide lower latency and a better\nexperience for your customers at a\nminimal cost we have used serverless\narchitecture so serverless architecture\nremoves the need for you to run and\nmaintain physical servers for\ntraditional Computing activities removes\nthe operational burden of managing\nphysical servers and can lower\ntransactional costs because manag\nServices operate at Cloud scale and can\nbe a lot better at um running them\nefficiently than you will uh experiment\nmore often so with virtual and\nautomatable uh resources you can quickly\ncarry out comparative testing using\ndifferent types of instances storage or\nconfigurations to make the best choice\nwe call this right sizing choosing the\nright size consider mechanical sympathy\nso understand how cloud services are\nconsumed and always use technology\napproach that aligns best with your\nworkload goals for example consider data\naccess patterns when you select database\nor storage\n[Music]\napproaches let's take a look here at\ndesign principles for cost optimization\nso the first one here is Implement Cloud\nfinancial management so dedicate time\nand resources to build capacity uh via\nCloud financial management and cost\noptimization tooling soab us is saying\nhey take advantage of all our tooling\nthat makes it easy for you to know\nexactly what you're spending adopt a\nconsumption model so pay only for\ncomputing resources that you require uh\nan increase or decrease using uh\ndepending on the business requirements\nwe're talking about on demand pricing\nmeasure overall efficiency so measure\nthe business output of the workload and\nthe cost associ associated with\ndelivering use this measure to know the\ngains you make from increasing output\nand reducing costs so stop spending\nmoney on\nundifferentiated that's a hard word to\nsay\nundifferentiated heavy lifting so adus\ndoes the heavy lifting of the data\ncenter operations like racking stacking\nand power servers it also removes the\noperational burden of managing op\noperating systems and applications with\nmanaged services this allows you to\nfocus on your customers and business\nprojects rather than your it\ninfrastructure and the last one here is\nanalyze and attribute expenditure so the\ncloud makes it easier to uh accurately\nidentify the usage and cost of systems\nwhich then allow transparent uh\nattribution of it costs to individualize\nworkload owners this helps measure\nreturn on investment and gives workload\nowners an opportunity to optimize their\nresources and reduce costs so there you\ngo\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are taking a look at the adus\nwell architected tool so this is an\nauditing tool to be used to assess your\nCloud workloads for alignment with the\nAWS well architected framework and so\nwhat it is it's essentially a checklist\nuh but it also has nearby references so\nyou know as you're reading through it it\nwill show you information uh and\nresources so that it can help you with\nthis checklist here and the idea is when\nyou're done you can generate out report\nand then you can provide that report to\nyour Executives and key stakeholders to\nprove uh you know how well architected\nyour workload is on AWS\n[Music]\nokay hey this is Andrew Brown from exam\nPro and in this video I want to show you\ntwo things the well architected\nframework and the well architected tool\nso first let's go look for the well\narchitected framework so we're going to\nlook up white papers uh AWS and so if we\ngo here to a amazon.com white papers we\nhave a bunch of pages here and so I'm\ngoing to just checkbox on white papers\nso that we can kind of reduce the amount\nthere and then I'm going to checkbox\nwell architector framework if we scroll\nall the way top here one of these you\nthink it'd be right at the top but one\nof these is the well architected\nframework and here it is and so if we\nopen it up I used to just directly open\nup as a PDF I'm sure you can still\ndownload it as is but generally you're\ngoing to open up as this HTML page and\nyou can basically read through it see\nall the stuff see the multiple pillars\nwe can click into here see the design\nprinciples read the definitions and then\nstart reading about uh the best\npractices and they have these things at\nthe bottom of each one uh very boring\nvery very boring but um you know when\nyou get to the solutions architect and\nthings like that you're going to need to\nknow this stuff inside and out it's\ngoing to really help you out at this\nCloud practitioner we only need to know\nsurface level\ninformation um but that's the architect\nframework let's take a look at the well\narchitected tool so we going type in\nwell here we'll get the well architected\ntool and if we go here you can see that\nI've created a couple before probably\ndemos for um our videos and so I'm going\nto go Define a new workload I'm going to\nsay my my workload here uh my\nworkload whoops my workload it is\nmessing up because I probably have\ngrammarly installed so it does not like\ngrammarly so I'm just going to turn it\noff for now so my workload\nand it's still not typing correctly so I\nhave to kill out kill out grammarly here\nwhich is kind of frustrating so that's a\nbug that that's not grammarly's fault\nthat's adab Us's fault for not playing\nwell with grammarly and that's something\nI will definitely report to them because\nit's very annoying so I'm going to go\nahead and refresh this\npage my workload my\nworkload um and this is Andrew Brown\nproduction or pre-production doesn't\nmatter pick your regions Us East or Us\nEast 2\nsure I'm selecting\nit there we go uh optional optional\noptional optional you go to next and\nthen you can choose your lens servus\nlens FTR lens so that's the foundational\ntechnical review SAS lens we can go with\narchitected framework and then once that\nis there we can start\nreviewing okay and then we get this big\nchecklist and so we can go through this\nand read each one so we say Ops one how\ndo you determine what your priorities\nare and all these things like Ops and\nstuff like that these are all the\nsummaries in each of the well\narchitected framework sections so you\npretty much don't need to really read\nthe dock you just go through this so\neveryone needs to understand their part\nin enabling business success have shared\ngoals in order to set priorities of\nresources this will maximize the benefit\nof your efforts so select from the\nfollowing evaluate the customer's\nexternal needs external customer needs\nevaluate internal customer needs if you\nclick info it's going to highlight each\none here so evolve key stakeholders\nincluding Business Development\noperations teams this will ensure Etc\nand so you just go through this and uh\nyou know once you have that and you save\nand\nexit Okay uh you'll have uh the\nquestions that are answered it'll say\nwhat's high risk what's not things like\nthat very simplistic it's really just a\nway of making a very organized report or\nchecklist and proving that you went\nthrough it uh to the executive level or\nto the management level there so\nhopefully that makes sense to you um\nit's not too complicated but there you\n[Music]\ngo hey it's Andrew Brown from exam Pro\nand we are looking at the Adas\narchitecture Center so the architecture\nCenter is a web portal that contains\nbest practices and reference\narchitectures for a variety of different\nworkloads and you can find this at adab.\namazon.com architecture so if you're\nlooking for Best Practices inter terms\nof security they have a huge section on\nthat and they have it for pretty much\nevery kind of category on AWS or if\nyou're looking for practical examples\nyou can view the large library of\nreference architectures so here's one to\nmake an ads Q&A bot and it will have an\narchitectural diagram but you can also\nuh deploy it via cloud formation or\npossibly cdk um and this way you can get\na working example and then tweak it for\nyour use case so this is a really great\ntool um when you are done the it well\narchitect framework and you're saying\nokay how do we apply it can we get more\nconcrete examples and I wouldn't be\nsurprised if a lot of the resources\nwithin the well architectured framework\nwhite paper are just pointing to the\ncenter\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at the\nconcept of total cost of ownership also\nknown as TCO so what is TCO well it is a\nfinancial estimate intended to help\nbuyers and owners determine the direct\nand indirect cost of a product or\nservice so here is is an example of you\nknow TCO for maybe like a data center so\nwe have Hardware monitoring installation\nIT personnel training software uh\nsecurity licensing and taxes but that's\nnot just the limit of it it's just kind\nof the examples we show here uh the idea\nof creating TCO is useful when your\ncompany's looking to migrate from on\nPrem to cloud and we will have a better\nuh kind of visual here to kind of\nunderstand how you would contrast\nagainst on premise to Cloud but let's\njust talk about how it actually works in\npracticality which I think gets kind of\nof overlooked when cloud service\nproviders are selling you on TCO so the\nidea is that Gardener um you know they\nuh they were they wrote this article\nbased on This research where an\norganization had moved uh 2,500 virtual\nmachines over to Amazon dc2 and so what\nyou're seeing here is that there is a an\nadditional cost that we're not\nconsidering which is the migration cost\nSee This Bar up here um so the idea is\nthat the company was paying around\n400,000 and so they started to move over\nand as you see uh the cost initially\nwent up for a short period of time here\nuh but then once that migration cost was\nover uh you can notice that they had a\n55% reduction so it's uh totally\npossible to save money uh and clearly\nthere is great savings uh now is it\nexactly what AWS promises probably not\nand that's that could be the reason why\nthey updated their TCO calculator but\nlet's now just do that contrast against\nthe two so we have on premise on the\nleft and ads on the right or any cloud\nservice provider and what I want to do\nis help you think about what costs do\npeople generally think about because if\nwe have like Iceberg the idea here is\nthat these are the costs that we always\nthink about above the iceberg and then\nthere's these hidden costs that we just\ndon't consider when factoring in our\nmove and that's the idea of T TCO is to\nconsider all the cost not just the\nsuperficial ones and so people say these\nlook like teeth and that's why I add\npenguins and a whale here um and so when\nwe're talking about on premise what we\ngenerally think are software license\nfees and subscription fees but when you\ncompare those against each other they\nmight look the same um ad us might just\nlook slightly cheaper or even more and\nso the idea is you need to then factor\nin everything so on on premise there's\nimplementation configuration training\nphysical security Hardware IT personnel\nmaintenance and on the adab side you\nknow you are you don't have to do as\nmuch of that stuff so you just have\nimplementation configuration and\ntraining and so adab us with their TCO\ncalculator their old one used to make a\npromise of 75% in savings um again you\nknow this is going to really vary based\non what your migration strategy looks\nlike um but you know it's totally\npossible you could save 75% or you could\nsave 50% over a third year threeyear\nperiod And there's a an initial Spike so\nthat's just something you have to\nconsider but the nice thing though is\nthat once you've moved over all the\nstuff over here on the left hand side\nwill be ad Us's responsibility\n[Music]\nokay all right so let's take a look at\nCapital versus operational expenditure\nso there's capex and Opex so on the\ncapex side the idea here is you're\nspending money upfront on physical\ninfrastructure deducting that expenses\nfrom your tax bill over time uh a lot of\ncompanies that are running their own\ndata centers uh or have a lot of on-\npremise stuff understand what capex is\nbecause um it's something that a lot of\ntimes they get tax breakes on and that's\nwhy we see a lot of people that have a\nhard time moving away from the cloud\nbecause you know they keep on thinking\nabout that money they save from the\ngovernment but capex costs would be\nthings like server costs storage Network\ncosts backups and archives Disaster\nRecovery costs data center costs\ntechnical Personnel so the idea is with\ncapital exp expenses you have to guess\nup front what you plan to spend okay\nwith operational expenditure the idea\nhere is the cost associated with an on-\npremise data center that has shifted the\ncost to the service provider the\ncustomer only has to be concerned with\nnon-physical costs so leasing software\nand customizing features uh training\nemployees and cloud services paying for\ncloud support uh billing based on cloud\nmetrics so compute usage storage usage\nand so the idea here is with operational\nexpenses you can try a product or\nservice without investing in equipment\nso basically kex is what we think about\nwhen we think of on premise and then\nOpex is what we think about um you know\nwhen we're thinking about cloud or AWS\n[Music]\nokay all right let's ask a very\nimportant question about Cloud migration\nso does cloud make it Personnel\nredundant so a company is considering\nmigrating their workloads from on\npremise to the cloud to take advantage\nof the savings there is a concern among\nthe staff that there will be Mass\nlayoffs does cloud make it Personnel\nredundant and that's a very important\nquestion to to have an answer to and\nthis all talks about shifting your it\nteam into different responsibilities so\na company needs it Personnel during the\nmigration phase as we saw with that\nGardener research report that there was\na period at least like a year where they\nneeded that for you know depending on\nthe size of your company so you're still\ngoing to need those people around a\ncompany can transition some roles to new\nCloud roles so a very traditional\nexample would be you have your\ntraditional networking roles or people\nhave like their CCNA and now they're\nmoving over to Cloud networking uh they\nhave a reduced workload but there's\nother things uh that they could be doing\nin the cloud um a company may decide to\ntake a hybrid approach so they'll always\nneed to have a traditional it team and a\ncloud uh it team um and the last one and\nthis would you'd actually see on the\nexam which is a company can change\nemployees AC ities from managing\ninfrastructure to re Revenue generating\nactivities okay so the idea is that you\nknow if you a company why would you get\nrid of all your staff when you can just\nput them all into Revenue generation I\nsuppose you know you could uh you know\nuh lay them off and some companies might\ndo that um or you know you could just\nretrain them because if that IT\npersonnel team has uh technical\nexpertise I'm sure they can translate\nthat to the\n[Music]\ncloud let's talk about the adus pricing\ncalculator and this this is a free cost\nestimate tool that can be used within\nyour web browser without the need of an\nadus account to estimate the cost of a\nvarious adus services and this is um\navailable at calculator. AWS and the\nreason we're bringing this up is because\nthere used to be a TCO calculator but\nnow this is the calculator that you use\nso the adabs pricing calculator contains\n100 plus services that you configure for\ncost estimate and so you can just click\nthrough a bunch of knobs and uh boxes to\nuh you know uh exactly figure out a very\naccurate cost so the idea here is that\nto calculate your TCO an organization\nneeds to compare that existing costs\nagainst their adus costs and so the adus\npricing calculator can be used to\ndetermine uh you know the adus costs and\nobviously the organization knows its\ncost so we can compare it against that\num and the way you can get data out of\nthis is you can export it as a final\nestimate to a CSV\n[Music]\nokay hey this is this is Andre Brown\nfrom exam Pro and we are taking a look\nat the AWS pricing calculator so to get\nthere it's calculator. AWS what you're\ngoing to do is hit create estimate and\nthen here you have a bunch of services\nso you just choose what you want so you\ntype in ec2 we're going to configure\nthat and from there we can do a quick\nestimate or an advanced estimate so\nchoose this option for fast and easy\nroute to Ballpark and estimate choose\nthis option for detailed estimate for\naccounts workloads and stuff so notice\ndown below very simplistic we hit\nAdvanced and we get all sort sorts of\nstuff okay so you know it's really up to\nyou I'm very comfortable with the\nadvanced options so I might be running a\nLinux machine what is my usage it's\ngoing to have uh daily spikes of traffic\nbecause of the use cases you could say\nit's not busy on Saturday and Sunday\nthat it has a baseline of one a peak of\ntwo eight things like that then you can\nchoose what you're using um T4 G I don't\neven know what that is uh but we'll just\nsay like\nt uh T2 micro which is not that big 23\nmicro and you can say we're doing on\ndemand cuz a lot of people would be\ndoing that and you see like $7 a month\nit's not a lot of money then you're\nlooking at your storage data in data\nout okay so we can add that another\nthing that we might see is something\nlike\nRDS so we go to RDS and we add post\nCrest and not all of them have the\nsimple and complex sometimes they're\nsimple so production database\nwe'll have one here and which're just\ngoing to be say a dbt2 micro T T3 micro\nthere we go uh 100 that's fine we're not\ngoing to have multi-az we'll have single\na on demand show the calculation $13 a\nmonth add that to our estimate so you're\nkind of getting the idea there\nright um and so you know we have our\nsummary that's our monthly\n$391 um oh sorry over $12 months our\nmonthly cost is\n$32 okay you can go back there clone the\nservice edit it stuff like that you can\nexport the estimate I think it goes out\nas a CSV you can also hit\nshare um and then hit agree and so then\nyou have a public link and if I have\nthat link we can just see what happens\nif I paste it okay and it just brings\nthem to the same estimate so there you\n[Music]\ngo hey this is Brown from exam Pro and\nwe are taking a look at migration\nevaluator so it was formerly known as\nTCL logic and then abos acquired the\ncompany and it is an estimate tool used\nto determine an organization existing on\npremise costs so it can compare it\nagainst its aabus cost for Planned Cloud\nmigration uh so the idea is that you can\nget uh very very detailed information\nand the way it collects information is\nvia an agentless collector to collect\ndata from your on- premise\ninfrastructure to extract from your own\non premise costs I don't know if you can\nsee there but you can see that it works\nwith a lot of different kinds of on-\npremise technology like VMware Microsoft\nuh tsql all sorts of things\n[Music]\nokay one migration tool that we can use\nwith AWS is the VM import export and\nthis allows us to import virtual\nmachines into ec2 so inabus has import\ninstructions for VMware Citrix Microsoft\nhyperv windows vhd from Azure and also\nLinux vhd from Azure and so the way this\nworks is that you prepare your virtual\nimage for upload and adus has a bunch of\ninstructions for that once it is ready\nyou're going to upload that to an S3\nbucket and once it's uploaded to an S3\nbucket then what you can do is use the\nadab CLI to import your image um and so\nthat is the CLI command down below and\nonce it is produced it will generate out\nan Amazon machine image and so from an\nAmi you can then go your ec2\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at the\ndatabase migration service which allows\nyou to quickly and securely migrate one\ndatabase to another DMS can be used to\nmigrate your on premise database to ads\nand that's why we're talking about it uh\nand so here's a general diagram where\nyou have your Source database which\nconnects to a source endpoint goes\nthrough a replication instance so that's\na ec2 instance that's going to replicate\nthe data to the Target endpoint onto the\nthe target database uh and so we have a\nbunch of possible sources so we have\nOracle database Microsoft SQL MySQL Mari\nDB post SQL mongodb sap\nASC IMDb db2 AZ your SQL database Amazon\nRDS Amazon S3 and I'm assuming these are\ndatabase dumps Amazon Aurora Amazon\ndocument DB and so for possible targets\nit's very similar we got Oracle database\nMicrosoft SQL MySQL Mario DB post SQL\nreddis saps SE Amazon red shift Amazon\nRDS Amazon Dynamo DB Amazon S3 Amazon\nAurora Amazon open search service Amazon\nelasticache for reddis Amazon document\nDB Amazon Neptune Apachi Kafka I'm just\nshowing you the list to give you an idea\nof how flexible this service is uh but\nyou can tell that these are very\ndifferent databases so how can it uh\nmove them over right and so so in not\nall cases can it easily do it like it's\nvery easy to go from myql to postest um\nbut you know for ones that are like\nrelational to uh nosql uh this is where\nthe adaba schema conversion tool comes\ninto play it's used in many cases to\nautomatically convert a source database\nschema to a Target database schema or\nsemi-automate it so that you can kind of\nlike uh you know uh figure out how to\nmap the new schema uh each migration\npath requires a bit of research since\nnot all combinations of sources and\ntargets are possible and it really comes\ndown to even versions of these things so\nbut I just want you to know about that\nit's an option as a database migration\nservice and I've migrated a very large\ndatabase before and it's super fast uh\nso and it's not that hard to use so\nsomething you definitely want to\nremember when you're\n[Music]\nmigrating hey this is Andrew Brown from\nexam Pro and we are taking a look at the\ncloud adoption framework so this is a\nwhite paper to help you plan your\nmigration from on premise to AWS at the\nhighest level the AWS CAF organizes\nguidance into six Focus areas we got\nbusiness people governance platform\nsecurity and operations and this white\npaper is pretty high level uh so you\nknow it doesn't get into uh granular\ndetails on how that migration should\nwork uh but gives you kind of a holistic\napproach and I believe that probably\nthrough the adus uh Amazon partner\nNetwork there's people that specialize\nin using this particular framework to\nhelp organizations move over and I\nbelieve that Abus has Professional\nServices through the APN but let's just\nkind of break down what these six\ncategories are we're not going to go too\ndeep into this um but let's do it so the\nfirst is the business perspective so\nthese are business managers Finance\nmanagers budget owners strategy\nstakeholders so it's how to update the\nstaff skills and organizational\nprocesses to optimize business value as\nthey move Ops to the cloud you have\npeople perspectives so Human Resources\nStaffing people managers so how to\nupdate the staff skills and\norganizational processes to optimize and\nmaintain the workforce and ensure\ncompetencies are in place at the\nappropriate time you have governance\nperspective so cios program managers\nproject managers Enterprise Architects\nbusiness analysts so how to update the\nstaff skills and organizational\nprocesses that are necessary to ensure\nbusiness governance in the cloud and\nmanage uh and measure Cloud Investments\nto evaluate the business outcomes we\nhave platform perspectives so CTO it\nmanagers solution Architects so how to\nupdate the staff skills and\norganizational processes that are\nnecessary to deliver and optimize Cloud\nSolutions and services security\nperspectives so ciso it security\nmanagers it security analysts so how to\nupdate the staff skills and\norganizational processes that are\nnecessary to ensure that the\narchitecture deployed in in the cloud\naligns to the organization security\ncontrol requirements resilience and\ncompliance requirements we have\noperational or operations perspective so\nit operations managers it support\nmanagers so how to update the staff\nskills and organizational processes that\nare necessary to ensure system health\nand reliability during the move of\noperations to the cloud and then to\noperate operate using agile ongoing\ncloud computing best practices so this\njust Taps the surface of what the CAF is\nuh and I think for each of these they\nactually have a more detailed breakdown\nso you know business is going to break\ndown to even more uh uh finite things\nthere\n[Music]\nokay so itus has free services that are\nfree forever unlike the free tier that\nare up to a point of usage or time um\nand so there are a lot here this is not\neven the full list there's definitely\nmore and we have am Amazon VPC Auto\nscaling cloud formation elastic bean\nstock opsw Works amplify Apps sync code\nstar organizations Consolidated building\nit with cost Explorer Sage maker systems\nmanager there's a lot of them okay um\nbut the thing is is that uh these\nservices are free but some of these um\ncan spin up other resources so the\nservices are free themselves however\nones that provision Services May cost\nyou money so cloud formation which is an\ninfrastructure is a code tool could\nlaunch virtual machines those virtual\nmachines will cost money right opsworks\ncan launch servers that can cost money\namply can launch um lambdas that can\ncost money so that's something you just\nhave to consider um but uh yeah there\nyou\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we are taking a look at the adus\nsupport plans so we got basic developer\nbusiness and Enterprise and you\nabsolutely absolutely need to know this\nstuff inside out for exam they will ask\nyou questions on this okay so basic is\nfor email support only uh such as\nbilling and account so if you think it\ngot over bu and that's something you\nshould do if if you've uh uh\nmisconfigured something and you end up\nwith a big Bill just go Um open up a\nsupport uh ticket under basic for\nbilling and they're likely to refund you\nbut if you do have questions about\nbilling accounts that's what we're going\nto be using for everything else that is\nfor tech support um and so for developer\nbusiness Enterprise you're going to get\nemail support which they'll uh roughly\nreply within 24 hours I believe this is\nbusiness hours so if you message them on\nFriday um or sorry Saturday you might be\nwaiting till Monday for it okay um in\nterms of thirdparty support uh the only\none that doesn't have third party\nsupport is developer so if you are using\nsomething like Ruby on Rails or Azure or\nsomething that has interruptibility\nbetween AWS and something else business\nEnterprise will absolutely help you out\nwith it same with Enterprise but the\ndeveloper one not so much uh if you like\nto use the phone or you like to chat\nwith people um that's available at the\nbusiness Enterprise tier this is the way\nI end up talking to people if you are um\nyou know like if you're in North America\nand you're calling between 9 to5 and a\nMonday and Friday you're likely to get\nsomebody that is within North America if\nnot it'll be one of uh one of the\nsupports from some other area so just be\naware of that that can also affect the\ntime they pick up uh sometimes it's 5\nminutes times it's 30 minutes to to an\nhour uh you know it just depends on what\nservice you're asking for and you know\nwhat time a day okay um in terms of\nresponsiveness uh for General guidance\neverything is 24 hours or less for\ndeveloper business Enterprise if your\nsystem is impaired it's within 12 hours\nor less with production system impaired\nit's four hours or less with production\nsystem down it's 1 hour or less and if\nyou're for Enterprise um it's going to\nbe business critical system\nless than 50 minutes so just notice who\nhas what for these things um I've\ndefinitely waited like 3 days on General\nguidance before so just take these with\na grain of salt that they're not you\nknow they don't really stick to these\nthat or maybe I'm just not paying enough\nfor them to care okay um in terms of uh\ngetting actual people assigned to you\nthis only happens at the Enterprise\nlevel where they have their coner team\nso they uh help your um organization uh\nlearn how to use ad asking them any\nquestions personally and then you have a\ntam a technical account manager that is\nsomebody that knows um a side inside and\nout and they'll help you architect\nthings and make correct choices or\nthey'll check your bill and help you try\nto reduce that bill things like that\nokay in terms of trust advisory checks\nat the basic developer you get seven\nadvisor checks once you're paying for\nbusiness you get all the checks the cost\nhere for business is zero um for\ndeveloper it's starting at $29 a month\nfor businesses starting at $100 a month\nand then for Enterprise it's 15,000 uh a\nmonth so I said starting at because it's\ndependent on your usage okay so let's\njust look at developer business\nEnterprise here cuz basic's not going to\nbe applicable here so for developers $29\nUSD a month or 3% of the monthly adist\nusage which whichever is greater on the\nexam they're only going to ask you like\nis it $2,900 like generally do you know\nthe tier of expensiveness but they're\nnot going to ask you the percentage of\nusage okay there's not going to be\nformulas here um when you get into\nbusiness it's a little bit uh different\nwhere they have it in different brackets\nso it's going to be 10% for the first uh\n10,000 and the next is going to be the\nnext 7,000 stuff like that similar for\nEnterprise as well so let's just do some\nmath so we know that we understand how\nthis works so if you if you had a\nmonthly spend of $500 at the developer\ntier that's 3% of $500 is $15 so they go\nokay what is greater $29 or $15 so\nyou're paying $29 if your spent is\n$1,000 that comes up to $30 uh so you're\nyou're going to end up paying $30\nbecause that's greater than 29 okay for\nbusiness uh if your monthly spend is\n,000 that's 10% of ,000 that's $100 if\nyour spend is $5,000 then you're going\nto be paying $500 if your monthly spend\nis 12,000 then the first 10% of 10,000\nis a th000 and then the next is 7% of\n2,000 so your total bill is 140 USD\nwe're not going to do a calculation for\nEnterprise because it's the same for\nbusiness but hopefully that gives you an\nidea there okay\n[Music]\nhey it's Andrew Brown from exam Pro and\nwe are taking a look at a technical\naccount manager also known as a tam and\nthese provide both proactive guidance\nand reactive support to help you succeed\nwith your adus journey so what does a\ntam do and this is straight from an adus\njob\nposting what they would do is build\nSolutions provide technical guidance and\nadvocate for the customer ensure Adas\nenvironments remain operationally\nhealthy while reducing cost and\ncomplexity\ndevelop trusting relationship with\ncustomers understanding their business\nneeds and Technical challenges using\nyour technical uh acumin and customer\nObsession you'll drive technical\ndiscussions regarding incidents\ntradeoffs risk management consult with a\nrange of Partners from developers\nthrough the SE Suite Executives\ncollaborat with a Solutions architect\nbusiness developers Professional Service\nconsultants and sales account managers\nproactively find opportunities for\ncustomers to gain additional value from\nads provide detailed reviews of service\ndisruptions metrics detailed pre-launch\nplanning being uh part of a wider\nEnterprise support team providing post\nscale cons uh uh consultative expertise\nsolve a variety of problems across\ndifferent customers as they migrate\ntheir workloads to the cloud uplift\ncustomer uh capabilities by running\nworkshops Brown Bag sessions Brown Bag\nsessions being sessions that occur at\nlunchtime something you can learn in 30\nminutes an hour and so one thing that's\nreally important to understand is that\nTams follow the Amazon leadership\nprinciples especially about customer uh\nbeing customer obsessed and we do cover\nthe Amazon leadership principle\nsomewhere in this course and Tams are\nonly available at the Enterprise support\ntier so hopefully that gives you an idea\nwhat a tam\n[Music]\ndoes hey this is Andrew Brown from exam\nPro and this follow along I'm going to\nshow you um a support and in order to\nuse ad support or to change your level\nof support you're going to need to be\nlogged into the rout account I should\nsay you can use support with IM users\nbut if you want to change the support\nplan you're going to have to be the root\nuser so in the top right corner I'm\ngoing to support and notice here on left\nhand side right now I have a basic\nplan and so uh before we look at\nchanging our plan I'm just going to go\ncreate a case and we're going to uh just\ntake a look at some of the options that\nare open to us so we have account\nbilling support service limit increase\ntechnical support notice this is grayed\nout so we cannot select anything here\nI can go to here and increase our\nservice limit and this is something that\nyou might have to do uh pretty soon\nearly in your account you might say hey\nI need more of something like ec2 or um\na very common thing is SC so for SCS you\nmight say hey um I need to have this\namount of emails for ETC okay so um if\nwe go over to count and billing support\nuh we can go here and ask anything we\nwant so if it's about the free tier I\ncould say ask a general question getting\nstarted and saying uh what is free on\nAWS um I want to know what is free on\nAWS and you can attach uh three\nattachments there you can choose via web\nand phone which is really nice um but\ntoday I'm just going to do web here and\nsubmit that just to kind of show you\nthat as an example and so what that is\ngoing to do is open a case and then we\nwill see probably respond in 24 hours to\n48 hours just depends on on um whether\nit's the weekend or not because it's\nbased on business hours of course so now\nthat we have an understanding of basic\nlet's go take a look at what the other\ntiers look like so we have basic\ndeveloper business and enterprise\nEnterprise being extremely expensive\ndeveloper being affordable and then\nbusiness being um you know affordable\nfor businesses so I would say developer\nis okay it gives you um uh it gives you\nuh better support but it's all via email\nand so you know if you really want good\nsupport you're going to going to have to\npay the business one and that's the one\nthat I use quite a bit so if I change my\nplan I'm going to go over to business\nand this is going to cost me 93 bucks\njust to do to show you here today so I'm\ngoing to go ahead and click that and so\nit's now processing it and so what's\ngoing to happen is I'm going to have to\nwait for this basic to switch to\nbusiness so if I go to the case here it\nhasn't happened as of yet so no I cannot\nselect this so I'm going to see you back\nhere in maybe like four five minutes or\nhowever long it takes and we'll take a\nlook then okay okay great so after a few\nminutes it says my plan is now business\nand what I can do is go ahead and create\na new case and so I can go over to\ntechnical support and ask a question so\nif I was having issues with anything it\ndoesn't matter what I could go over to\nec2 Linux and then I could choose my\ncategory so I could say I'm having an\nissue with um systems\nmanager and a lot of times they like you\nto provide the instance ID it's going to\nchange based on what service you choose\nhere um but you'll get different\ninformation I'll just say I need\nhelp with um logging into my ec2\ninstance managed by SSM so I can say I\ncreated an ec2 instance and I am\nattempting to access uh the instance\nvia sessions\nmanager but it is not\nworking I think I have a ro issue and\nthen I'm just going to go down here and\nsay this is not got a real\nquestion I am filming a demo video for\ntutorial\nvideo on how to use support okay and so\nonce we do that we have the option of\nweb chat and phone so if you use phone\nyou're going to enter your phone number\nin and they're going to call you back uh\nusually you will be on hold for anywhere\nfor 5 minutes to an hour it just depends\nusually it's within 15 minutes so it's\nvery very good of course it depends on\nthe time of day and your location things\nlike that and the service because\nthere's different support Engineers for\ndifferent types of services and the the\nbalance of those are different but\ngenerally chat is pretty good so I can\ngo here and I'm just going to hit submit\nand it's going to open a chat box and so\nyou just wait okay and sometimes it's\nsuper fast and sometimes it takes uh\nminutes okay so we are going to just sit\nhere for a bit and um you know I'll just\npop back here when there is somebody to\ntalk to\nokay okay so after waiting a little\nwhile looks like uh we've been connected\nhere so it took a bit of time so we're\njust going to say hello hi um uh this is\nAndrew\nBrown um I am recording a video to teach\npeople how to use\nAWS and I wanted to show them how it\nsupport\nworks so I'm just showing them how the\nchat system\nworks say\nhello and hopefully they'll appreciate\nor they won't it just doesn't really\nmatter we'll give them a moment\nthere we\ngo that's\nit thanks for your\nhelp okay and so that's pretty much it\num so you know there's nothing really uh\nuh special about that but the idea is\nwhen you are typing with them it will\nappear in the ch respondence there so\nI'm just going to end the chat okay uh\nand then I'm just going to mark that\ncase as resolve sometimes they will ask\nyou to resolve it if I go to cases I\nprobably have some previous ones here um\nand I have a lot but I don't know why\nthey don't all show up here so you can\nsee this one is pending this one is\nresolved I go back to this one you can\nkind of see that the uh history of a\nconversation is kept and you can go back\nand forth uh with the people there um\nyeah that's pretty much it uh you can\nalso do screen sharing so they might\nsend you request to go on Zoom or\ndownload this piece of software that\nshares your screen and so that is\nanother option as well so they can get\npretty handson to help you uh with your\nproblems there but that's pretty much\nall I wanted to show you with support\nI'm going to downgrade this and I'm not\nsure if they're going to give you back\nmy money sometimes it'll PR rate it for\nyou but I'm go here and go back to basic\num so we will also refund your credit\ncard directly in the month's remaining\nfees on your old plan which you\npreviously paid you're obligated to pay\na minimum of 30 days of support each\ntime you register so I'm not going to\nget any money back which is totally fine\nbecause I just wanted to show you how\nthat works but business support is\ndefinitely worth it and uh you know\nthat's\n[Music]\nit so the anabis marketpl is a curated\ndigital catalog with thousands of\nsoftware listings from independent\nsoftware vendors uh easily find buy test\nand deploy software that already runs an\n8s the product can be free to use or can\nhave an Associated charge the charge\nbecomes part of your adus bill and once\nyou pay adus Market pays the provider\nthe sales channel for isv and Consulting\nPartners allow you to sell your\nsolutions to other adus customers\nproducts can be offered such as Amis Aus\nCL information templates software of\nservice offerings web acl's it WAFF and\nrules so it sounds great um if you want\nto sell here I think you need like a US\nbank account to do it um and you know\nsometimes zus Marketplace is just part\nof AWS so like when you're using the ec2\nmarketplace you are technically using\nthe itus marketplace um but they also\nhave like a dedicated page for it so\nit's integrated with some services and\nit's also stand alone\n[Music]\nokay hey this is Andrew Brown from exam\nPro and this follow along we're going to\ntake a look at the adus marketplace so\nwhat I want you to do is go on the top\nand type in Marketplace and that'll\nbring us over to here the marketplace\ncan be found in a variety of different\nplaces on the platform here you can see\nthat uh previously I was using something\ncalled guaca Bastian host to launch a\nserver um but the idea is that um you\ncan discover products and subscriptions\nthat you might want to utilize so if I\ngo over here there's a variety of\ndifferent\nthings and so it could be like I want to\nhave something like a firewall that\nmight be something that we might be\ninterested in so we could search there\nand there's like bring your own license\nfirewall so maybe you have a license\nwith this and you want to run it on an\nec2 instance something like that again\nit's not like super complicated what's\ngoing on here but a lot of times you\nknow when you're using Services you're\naccessing the marketplace anyway so like\nwhen I'm launching an ec2\ninstance notice on the left hand side\nsays ABS Marketplace and so I don't have\nto go to the marketplace there I can\njust kind of like check out the thing I\nwant um and that's pretty much all there\nreally is to it okay so you know\nhopefully that makes\nsense let's take a look here at\nConsolidated billing so this is a\nfeature of Abus organizations that\nallows you to pay for for multiple\naccounts via one bill so the idea here\nis we have a master account and we have\nmember accounts and I'm pretty sure that\nwe probably call this root account now I\ndon't think uh master account might be a\ndata term but it's still showing up in\nthe documentation the idea is that if\nyou have member accounts within your\norganization they're all going to be\nConsolidated under the single account if\nyou have an account outside of your\norganization um you know this is not\ngoing to give you uh this is going to be\nbasically a separate bill um as if it's\nlike a standalone organization or what\nhave you okay\nso uh for billing adus treats all\naccounts in an organization as if they\nwere one account you can designate one\nuh uh master or root account that pays\nthe charges for all the other member\naccounts consolidate billing is offered\nat no additional cost you can use uh\ncost Explorer to visualize usage for\nConsolidated billing which we can see I\nhave the icon here uh you can combine\nthe usage across all accounts in the\norganization to uh to share the volume\npricing discount which we did Cover in\nthis course separately if you want an\naccount to be able to leave the\norganization you do have to attach it to\na new payment method so if let's say you\nhad an account and you want to give it\nto your friend or whatever they're have\nto hook up their uh their credit card\nbut you can totally have uh an account\nleave an organization but you have to\ndeal with that billing aspect\n[Music]\nokay all right so there's a really cool\nway to save an ads and that's through\nvolume discounts and it's available for\nmany services the more you use the more\nyou save is the IDE aide behind it um\nand so consolidating building lets you\ntake advantage of volume discounts this\nis a particular feature of AIS\norganization so if you do not have the\nor turn on you're not going to be able\nto take advantage of that okay so one\nexample would be something like data\ntransfer where it is build uh for the\nfirst 10 terabytes at at 17 cents or\nsorry 17 cents and then the next 40\nterabytes it will be AT3 cents okay so\nif we had two accounts um such as Odo\nand Dax and they're not within an abl\norganization we can calculate those and\nsee what they are unconsolidated and\njust so you know 1 terab equals 1024\ngigabytes and that's what you're going\nto see in these calculations so for Odo\nuh you know if he has four terabytes and\nthat is uh we calculate the gigabytes\nthere we times it by uh the um scent\nvalue there we're going to get\n$696 okay for Dax we're going to end up\nwith uh about 1392 there and so if we\nwere to add those up the bill would come\nout to\n$2,088 okay so the idea is that there's\nan organization and they like a your\ncompany and they created two accounts\nbut they're just not within an\norganization by having them in the\norganization you're going to save um\nabout almost $80 there so um that is a\nreason why you'd want to use volume\ndiscounts\n[Music]\nokay hey this is Andrew Brown from\nexampro and we're taking a look at IIs\ntrusted advisor so trusted advisor is a\nrecommendation tool which automatically\nand actively monitors your adus accounts\nto provide acual recommendations across\na series of categories so this is what\nit looks like I personally prefer the\nolder dashboard but this is what they\nhave now and you can see along the side\nwe have a bunch of categories and then\nwe have some checks here saying uh you\nknow what are we meeting what are we not\nand you can go in and read each one and\nthey'll tell you so much information\nthey'll even show you like what things\nare not meeting that requirements in\nsome case you can easily remediate by\npressing a button not in all cases but\nthe thing with adus trust advisor is\nthink of adus trust advisor like an\nautomated checklist of best practices on\nAWS and they kind of map to the pillars\nof the well architecture framework not\nexactly but pretty close but there are\nfive categories of adus trusted advisor\nso we have cost optimization how much\nmoney can we save performance so how can\nuh we improve performance security how\ncan we improve security fall tolerance\nhow we can we prevent disaster or data\nloss and service limit so are we going\nto hit the maximum limit for a service\nand so uh the next thing we need to\ndiscuss is um there's a variation of the\namount of checks that are available to\nyou based on your support plan so you\nknow if you're using basic or developer\nyou have seven trusted advisor checks\nand if you have business Enterprise you\nhave all the trusted advisor checks so\nuh if we're talking about just the ones\nthat are available to you the ones that\ncome for free is MFA on root account\nsecurity specified ports of unrestricted\nAmazon S3 bucket permissions Amazon EBS\npublic snapshots Amazon RDS public\nsnapshots IMU so this is just about\nalerting you about discouraging the use\nof the root account service limits so\nall service limit checks are free um\nit's weird because they call it the like\nseven Security checks but if you counted\nall the service limits it obviously be\ntoo large of a number but notice that 1\nthrough six are all Security checks so\nyou're not getting anything from the\nother tiers just the security tier and\nwhat I want to do is just go over a\nbunch of available checks out there it's\nprobably not the full list because I\ncouldn't even be bothered to update it\nif they've added more but it will give\nyou the general idea of what you could\nexpect under each category so for cost\noptimization um it could be things like\nlooking at idle load bouncers so you\nknow if you have load bouncers you're\nnot using you're paying for them so get\nrid of them unassociate elastic IP\naddresses so for every IP that's not\nassociated you're paying for as well\nmaybe under performance you have um High\nutilization of Amazon ec2 instances so\nmaybe you can save money by switching to\nsmaller instances under security we saw\nMFA on rout account very popular one\nmaking sure you turn on key rotation\ncould be something as well there under\nfault tolerance um it could be making\nsure that you're using backups on your\nAmazon RDS database maybe that's turned\noff uh for service limits there's just a\nton of them and so uh one that that you\nknow might be PR to use vpcs or ec2\nlimits so there you go\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we're going to take a look at\ntrusted advisor so what I want you to do\nis go to the top and type in trusted\nadvisor and once you're there you're\ngoing to notice on the left hand side we\nhave cost optimization performance\nsecurity fault tolerance and service\nlimits right now there are no\nrecommended actions because there's not\nmuch going on this account and when you\nuh have the uh Free level of support the\nbasic support you're not going to have\nall these checks but if we go in here we\ncan still see kind of what they do um so\nwe have like performance security things\nlike that so these are the ones that we\nactually can see and they generally work\nall the same way if you expand here it's\ngoing to say Amazon EBS public snapshot\nso check the permission settings for the\nEBS volume snapshots and alert you if\nthe any snapshots are marked as public\nand so if you scroll on down if there\nwere ones that were an issue it would\ntell you right here okay then down below\nhere we see like check buckets in Amazon\nS3 that have open access permissions or\nallow access to authenticated aabus\nusers so yellow the ACL allows uh list\naccess for everyone uh a bucket policy\nallows for any kind of Open Access\nbucket policy statements have public\nGrant access so maybe what we can do is\nsee if we can get this to\ntrigger and so what I'm going to do here\nis go over to S3 and what we're going to\ndo is make a B bucket that has full\naccess okay so I'm going to create a new\nbucket and it'll say my exposed\nbucket we'll scroll on down here and\nwe'll just checkbox that off and create\nthe bucket I say I acknowledge that is\ntotally\nfine okay so now I have a bucket that is\n100% exposed if we go back to trusted\nadvisor give this a\nrefresh I'm not sure how fast it will\nshow up here but if I\nexpand so it says the bucket ACL allows\nupload delete for everyone the trusted\nadvisor does not have permissions to\ncheck the policy uh bucket policy has\nstatements that Grant Public\nAccess so what we could try to do is\nmake a\npolicy and try to Grant all access here\nso I'm not writing these every single\nday but I'm sure we could try to figure\nthis\nout\num we'll say S3 bucket policy Public\nAccess public\nread and so that one might be a good\nexample so I'm going to go ahead and\ncopy this one granting read only\npermission to anomymous\nusers I don't recommend you doing this\nI'm just doing this to show you to see\nif we can get the trusted advisor to\ncheck because I don't want you to uh do\nthis and forget about it and then have a\nserious issue but the principal is set\nto anybody so anyone can read it and\nhere it saying get object Etc then it's\nsaying what particular resource so this\none is going to be for uh the bucket in\nquestion here which is my\nexposed\nbucket we're going to scroll on down\nsave the\nchanges okay so this bucket is publicly\naccessible we're going to go back over\nhere refresh and see what we can\nsee okay so checks buckets in S3 Etc so\nit should appear under\nhere and it could be that it's just\ngoing to take some time so what I'm\ngoing to do is I'm just going to hang\ntight for a little bit oh there we go\nokay so it's showing up and I guess it\njust took some time to populate and so\nhere we can see we have a a yellow\nsymbol it's a warning saying hey there's\na problem here if we go back to the\ndashboard I wonder if that shows up so\nthis one's for investigation and\nrecommendation so you know hopefully\nthat kind of makes sense to you I think\nin some cases you can do remediation\nfrom from here or at least you can go\nand check box and say okay um\nignore could of swore there's\nremediation for some of\nthese but in any case you know that's\ngenerally what trusted adviser does um I\nthink that you probably can have it so\nthat gives you alerts so yeah you could\nset recipients for particular things\nlike if there's a security issue then I\ncould email a particular person on your\nteam and they could deal with it but\nthat's pretty much it so what I'm going\nto do is go ahead and delete this bucket\nI'm all done with it\nwe'll go\ndelete and say my delete uh my exposed\nbucket here to delete it and that is it\n[Music]\nokay let's cover the concepts of service\nlevel agreements also known as SLA so an\nSLA is a formal commitment about the\nexpected level of service between a\ncustomer provider when a service level\nis not met and if customer meets its\nobligation under the SLA customer will\nbe eligible to receive compensation so\nFinancial or service credits and so when\nwe talk about slas then we talk about\nSLI so SLI service level indicator is a\nmetric or measurement that indicates\nwhat measure of performance the customer\nis receiving at a given time a SLI\nmetric could be uptime performance\navailability throughput latency error\nrate durability correctness and if we're\ntalking about sis then we're talking\nabout slos service level objectives so\nthe objective that that the provider has\nagreed to meet slos are represented as a\nspecific Target percentage over a period\nof time and so an example of a Target\npercentage would be something that says\nan availability SLA of\n99.99% in a period of 3 months all right\nand let's just talk about Target\npercentages and the way they can be\nrepresented very common ones we will see\nis\n99.95%\n99.99% uh then we have 99 followed by\n99 and so commonly we just say we call\nthis 99 okay and then there's one 911s\nso if somebody says we have an SLA\nguarantee of of 911s it's going to be\nthe 99 followed by 911s all\n[Music]\nright let's take a look at Abus service\nlevel agreements and so there are a lot\nof them and I just wanted to show you a\nfew services to give you an idea how\nthey work uh on the exam they're not\ngoing to ask you like oh what's Dynamo\nDB's SLA for Global tables um but\ngenerally we should just go through this\nbecause it's good practice so let's take\na look at dynamodb SLA so adus will use\ncommercially reasonable efforts to make\ndynb available with a monthly uptime\npercentage of each adus region during\nany monthly billing cycle uh so for a at\nleast\n99.999% if Global tables slas applies or\n99.99% if the standard SLA applies in\nthe event Dynamo DB does not meet the\nservice commitment you'll be eligible to\nreceive service credits described below\nso we have monthly uptime percentage and\nthe service credit percentage we get\nGlobal tables standard tables so let's\ntake a look here so if less than\n99.999% but equal to or greater than\n99.0% is met so if if the service ends\nup being this you'll get 10% back of\nwhat you spent as service credits if it\ndrops between U 99.0 and 95.0 you get\n25% back if it's less than 95\nuh% um then it's 100% back okay and you\nget the general idea here SLA is going\nto be slightly different with their\ndrops now let's take a look at um\ncompute and so compute is going to apply\nacross a bunch of compute\nServices probably because they're all\nusing ec2 underneath so that's probably\nthe reason for it so we have ec2 EBS ECS\neks and ab uh makes two SLA commitments\nuh for the included services so we have\na region level SLA that uh governs\nincluded Services deployed across\nmultiple A's or regions and an instance\nlevel SLA that governs Amazon ec2\ninstances individually and again we have\nour monthly up up time percentage our\nservice CED percentage region and\ninstance level so you can just see the\nsame thing it's like it's going to\nchange based on uh what it can meet then\nwe'll take a look at one more like RDS\nso relational database service so it was\nwe'll use commercially reasonable\nefforts to make multi-az instances\navailable with monthly uptime percentage\nof 99.95% during any monthly billing\ncycle and again you know if if they\ndon't meet those requirements you're\ngoing to get service credits back which\nbasically equal USD dollars on the\nplatform and so for this it looks like\nthat so just notice that you know with\nlike compute it was for a a bunch of\nservices for Dynamo DB it was based on\nuh particular features like global\nstandard tables SLA it's very\nstraightforward uh we didn't do S3\nbecause I just did not want to show you\nthat one it's just too complicated but\nmy point is is that it's going to vary\nso you have to look up per service okay\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are taking a look at Amazon's\nservice level agreements and so the way\nyou find slas is you pretty much just\ntype in SLA for whatever it is so if\nyou're looking for compute you type in\nSLA or you look for a particular service\nso maybe you say sage maker SLA AWS I\ndon't think there's like a generic SLA\npage at least I don't know where it is I\nalways just type in SLA to find what it\nis and through that you can just kind of\nread through and try to find out uh the\nthings that that matter to you for your\nbusiness\n[Music]\nokay let's take a look here at the\nservice Health dashboard and so the\nservice Health dashboard shows General\nstatus of agus services and it's really\nsimple the idea is that you can uh check\nbased on the geographic area so you'd\nsay North America Europe Etc and what\nyou'll see is an icon that says whether\nthe service is in in good standing and\nthe details the service is operating\nnormally Etc notice they also have an\nRSS feed the reason I'm talking about\nservice Health dashboards is because I\nwant to talk about personal health\ndashboards and because they're both\ncalled Health dashboards it's confusing\nso I wanted to tell you about this one\nfirst so now we'll jump into the adabs\npersonal health\ndashboard so we saw the service Health\ndashboard now let's take a look at the\nadus personal health dashboard so this\nis what it looks like and it provides\nalerts and guidance for adus events that\nmight affect your environment all Abus\ncustomers can access the personal health\ndashboard the personal health dashboard\nshows recent events to help you manage\nactive events and show proactive\nnotifications so that you can plan for\nscheduled activities you uh you can use\nthese alerts to get notified about\nchanges that can affect your aess\nresources and then follow the guidance\nto diagnose and resolve the issue so\nthis is very similar to the service\nHealth dashboard but it's personalized\nfor you um and it's uh you know I I\ndon't see crop up very often but if you\nhad to create alerts or be reactive to\nuh things that are happening within us\nthis is where You' do it\n[Music]\nokay so there's a team called adus trust\nand safety that specifically deals with\nabuses occurring on the adus platform\nand so I'm going to just list of all the\ncases where you'd want to be contacting\nthem as opposed to support so the first\nis Spam so you're receiving unwanted\nemails from an adus owned IP address or\nadus resources are used to spam websites\nor forms Port scanning your log show\nthat one or more adus owned IP addresses\nare sending packets to multiple ports on\nyour server uh you also believe uh this\nis an attempt to discover unsecured\nports uh dos attack so your logs show\nthat one or more itus owned IP addresses\nare used to flood ports on your\nresources with packets you also believe\nthis is an attempt to overwhelm or crash\nyour server or the software running on\nyour server intrusion attempts so your\nlogs show that one or more ad of owned\nIP addresses are used to attempt to log\ninto your resources hosting prohibited\ncontent so you have evidence that Abus\nresources are used to host distribute\nprohibited content such as illegal\ncontent or copyrighted content without\nthe consent of the copyright holder\nDistributing malware so you have\nevidence that abis resources are used to\ndistribute software that was knowingly\ncreated to compromise or cause harm to\ncomputers machines that it's installed\non and so in any of these cases you're\nnot going to Ed support you're going to\nopen up an abuse ticket and so you got\nto contact abuse at amazon.com\nor fill out the uh Amazon abuse uh form\nso and this is whether it's coming from\nuh an outside AOS account or even your\ninternally if you think that some\nsomeone has compromised your account and\nit's being used in any of these ways uh\nthis is what you're going to do\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we're looking at AWS so uh we're\nsaying that adus has the adus trust and\nsafety team and what you'll want to do\nis if you uh find that there's an issue\nyou're going to report it to this email\nat abuse Amazon.com or you're going to\nuse this form which is the report Amazon\na abuse so you'll go down here you'll\nsign in you'll put your email in your\nfirst name last name or phone number um\nSource IP the the details uh uh in uh\nhere you can even select the type of\nabuse so you say if it's this kind or\nthat kind things like that it's very\nstraightforward um and that's pretty\nmuch it okay\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are taking a look at the adus\nfree tier and this allows you to use\nadus at no cost um and when we say free\ntier there there there's the idea of the\nfirst 12 months of sign up there's going\nto be special offerings or it's free\nusage up to a certain monthly Limit\nForever um and then there's just\nservices that are inherently free which\nwe have a total separate slide on but\nlet's talk about just the free tier\nstuff and this is absolutely not the\nfull list um but uh it's a good idea\nlike it gives you a good um overview of\nstuff that is free so for ec2 which you\nuse a web server you get a T2 micro for\n750 hours per month for one year and so\nthere's about 730 hours um in a month\nand so that means you could have a\nserver\nrunning uh the entire month for free uh\nand an additional server for a bit as\nwell so for RDS which is a relational\ndatabase service for either my schol or\npostgress we can do it T2 DB micro for\n750 hours for free so there we get our\nfree database and you would be surprised\nhow far you can get with a uh a T2 DB\nmicro um you know even for a mediumsized\nstartup you can run it on uh a T2 DB\nmicro with no problems then you have\nyour lassic load balancer you get 750\nhours per month for one year um so that\nis a really good thing uh load balancers\nusually cost $150 a month so that's\ngreat actually all these pretty much\ncost $15 a month so that's about um 1530\n$45\nmonth over month for a year that's uh\nfree then you have Amazon cloudfront\nthis is where you'd have your homepage\ncaching your videos things like that so\nyou get 50 gigabyt data transfer out for\nthe total year then there's Amazon\nconnect you get your total free number\nthere 90 minutes of a call time per\nmonth for one month or for one year\nsorry Amazon elasticache so you could\nlaunch a redis or elasticache server you\nget 70 hours on a Cash3 micro for a year\num elastic search service so this full\nTech search so again 7 50 hours per\nmonth for one year pinpoint campaign\nmarketing email so you can send out\n5,000 targeted users per month for one\nyear sces so um simple email uh service\nso this is for um transactional emails\num so that you send up from your web app\nso 62,000 emails per month forever it\ncode pipeline so one pipeline free it\ncode build so uh this is for building\nout uh projects or things like that so\n100 build minutes per month forever it\nwas Lambda service compute 1 Mill ion\nfree requests per month 3.2 million uh\nmillion seconds of compute time per\nmonth for free uh and you know I like to\nhighlight these ones because for\ntraditional architecture you're always\ngoing to have a web server a database a\nload balancer um and you might even have\ncloudfront in there as well but uh yeah\nagain there's a huge list and this does\nnot even tap the surface of what's free\non\n[Music]\nAWS hey this is Andrew Brown from exam\nPro and we are taking a look at a\npromotional credits and these are the\nequivalent to USD dollars on adus\nplatform ad credits can be earned\nseveral ways this could be joining adus\nactivate startup program winning a\nhackathon participating surveys and any\nother reason that Adis wants to give\ncredits out uh once you uh have um a\npromotional code you click the redeem\ncredit button in the billing console you\nenter it in and then your credits will\nbe shown there you can monitor them via\nadus budgets or uh via cost Explorer and\nprobably even building alarms it credits\ngenerally have an expired dat tax maum\ncould be a few months to a year itus\ncredits can be used for most services\nbut there are exceptions where itus\ncredits cannot be used like purchasing a\ndomain via row 53 because uh that domain\ncosts money outside of ad's cost like\nfor their infrastructure and virtual\nstuff and so for things like that uh you\nknow they're not going to be you're not\ngoing to be able to use credits for that\n[Music]\nokay the adabs partner Network also know\nas APN is a global partner program for\nads so joining the APN will open your\norganization up to business\nopportunities and allow exclusive\ntraining and marketing events so when\njoining the APN you can either be a\nConsulting partner so you help companies\nutilize adabs or a technology partner\nyou build technology on top of adabs as\na service offering and a partner belongs\nto a specific tier so it's either going\nto be select advance or Premiere when\nyou sign up it's free to sign up but\nyou're not going to be able to do much\nuntil you start uh committing to an\nannual fee so that's it's like a certain\namount of money to uh be able to be part\nof that tier and it starts in the\nthousands okay so I think the first tier\nis like something like a, or $2,000 and\nit gets uh more expensive as you go up\nas a tier and you also have to have\nparticular knowledge requirements so\nthis could be holding uh particular ad\ncertifications at the at the\nfoundational level at the associate\nlevel things like that um or it could be\nadus APN exclusive certifications so\ntraining that um is not a with\ncertifications but there're\ncertifications that are only available\nto Partners saying like how do you it\ncould be like something like how do you\nuh talk to customers or communication\nthings like that you can get back\npromotional Abus credits so you know if\nyou say oh man I spent uh\n$2,000 on just being able to uh get into\nthe APN at least the idea is that you\ncan generally get back that uh that\nspend on AWS so it's like you committing\nif you give like $2,000 it's like you're\ngoing to commit to keep using ads I'm\nnot showing the annual fee commitment\nhere and the promotional credits that\nyou get back just because they've\nchanged it a couple times on me and I\njust don't want this slide to go stale\nin case they happen to change it again\nso you'll have to look that up to find\nout what they actually are right now uh\nyou can have unique speaking\nopportunities in the official adus\nmarketing channels like the blogs or\nwebinars being part of the APN is a\nrequirement to be a sponsor with a\nvendor booth at adus events so when you\nwhen you go to reinvent or any ads um\nevent all the vendors are part of the\nAPN all right so they've paid their fee\nand now they paid an additional fee to\nget their Booth but um yeah the ab\npartner network uh is very good for uh\nuh helping you find new business and\nconnecting with other people that are\nbuilding workloads onws but hopefully\nthat gives you an idea of how that works\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at adus\nbudgets so adus budgets gives you the\nability to set up alerts if you exceed\nor approaching your defined budget\ncreate cost usage or reservation budgets\nit can be tracked at the monthly\nquarterly or yearly levels with\ncustomizable start and end dates alert\nsupport ec2 RDS red shift elastic cast\nreservations uh and so the idea here is\nyou can choose your budget amount so it\ncould be like $100 it'll even show you\nwhat was the last amount if you're uh\nresetting the budget is something new\nyou can choose based on a different kind\nof unit so if you wanted to be based on\nrunning hours on ec2 you could totally\ndo that is budgets can be used to\nforecast costs but is limited compared\nto cost Explorer or doing your own\nanalysis related with cost and usage\nreports along with business intelligence\ntools budgets uh based on a fixed cost\nor or you can plan your cost uh upfront\nbased on your chosen level can be easily\nmanaged from the adus budgets dashboard\nvia the ad budgets API get notified by\nproviding email or chatbot and threshold\nuh how close to the current or\nforecasted budget um so you'd see a list\nof budgets here uh current versus\nforecasted the amount used things like\nthat you can see your budget history you\ncan download a CSV uh it'll show you the\ncost history right in line there which I\ncan't show you it it's hard to see there\nyou get the first two budgets are free\nso there's no reason not to set a budget\nwhen you first get into AWS and each\nbudget costs about uh 002 cents a day so\nit's like 60 cents um uh USD per month\nfor a budget so they're very cheap to\nuse and you got a limit of 20,000\nbudgets they're going to be in good\nshape\n[Music]\nokay let's take a look here it was\nbudget reports which is use alongside\nabos budgets to create and send daily\nweekly or monthly reports to monitor the\nperformance of your abos budgets that\nwill be email to specific emails so it's\nnot too complicated here you say create\nthe report budget choose your frequency\nuh the emails you want um and ab budget\nreport serves as a more convenient way\nof staying on top of reports since\nthey're delivered to your email instead\nof logging into the abis Management\nconsole so it's just for those people\nthat just can't be bothered to log in\nokay\nlet's take a look here at adus cost and\nuse as report so generate a detailed\nspreadsheet enabling you to better\nanalyze and understand your adus cost so\nthis is kind of what it looks like and\nwhen you turn this feature on it will\nplace it into an S3 bucket you could use\nsomething like Athena to turn the report\ninto a queriable database since it's\nvery easy to consume S3 csvs into Athena\nyou could use Quick site to visualize\nyour building data as grass so quick\nsite is a business intelligence tool\nsimilar to Tableau or powerbi you can\nalso ingest this into red shift um but\nthe idea here is when you turn it on you\ncan choose how granular you want the\ndata to be hourly daily or monthly if\nyou turn on daily you'll be able to even\nsay spikes of uh of of of costs for uc2\ninstances which is kind of nice the\nreport will contain cost allocation tags\num which I think we have a separate\nslide on that type of tags and the data\nis stored in e as either a CSV it'll be\nzipped or it will be a parket format it\njust depends on how you want it um uh\nfor that\n[Music]\nokay let's talk about cost allocation\ntags so these are optional metadata that\ncan be attached to adus resources so\nwhen you generate a a cost and uses\nreport you can use that data to better\nanalyze your data so what you'd have to\ndo is make your way over to cost\nallocation tags and need to activate the\ntags you want to show up there are two\ntypes of tags so we have user defin so\nwhatever you've previously tagged will\nshow up probably there\nyou turn it on so if you made one with\nproject you turn on project and there's\na lot of Adis generated ones that you\ncan turn on so there's a huge list there\nbut uh yeah that's particular with cost\num usage and reports if it says like\ncost allocation reports it's just that's\nwhat cost and usage reports used to be\ncalled um and some of the documentation\nis a bit old there but yep there you\n[Music]\ngo so you can create your own alarms in\ncloudwatch alarms to monitor spend and\nthey are commonly called building alarms\nuh and so it's just a regular alarm but\nit's just focused on spend but in order\nto do this you have to turn on building\nalerts first in order to uh be able to\nuse it uh and then you'll go to\ncloudwatch alarms and you can choose\nbilling as your metric and then you just\nset your alarm however you'd want\nbilding alarms are much more flexible\nthan abess budgets and are ideal for\nmore complex use cases for monitoring\nspend and usage in terms of alerting so\nyou just have to decide what you want to\ndo uh before this was the only way to do\nit and so this is the way I'm used to\ndoing it and I still do it this way\ntoday but you know both options are\nvalid you just have to decide what is\nyour use case\n[Music]\nokay let's take a look at abos Cost\nExplorer which lets you visualize\nunderstand and manage your adus cost and\nusage over time so uh here's a big\ngraphic of Adis cost Explorer and you\ncan specify time and range and\naggregation and it has a lot of robust\nfiltering um what's really nice is that\nthey have a bunch of default reports for\nyou so I'm just going to get my pen tool\njust to show you where that button is\nit's over uh here uh if you can see my\nmarker there but but you know you can\nlook at things like monthly cost by\nservice monthly cost by linked account\ndaily cost a Marketplace R utilization\nso there's a bunch there you can also\nnotice you can create your own report so\nif you do find something that you like\nyou can save it for later um you can you\ncould have access to forecasting here so\nyou get an idea of the future cost and\nwhether it's been it's gone up or down\njust to kind of zoom in on some of those\nfiltration options you can choose um\neither monthly or daily level of of how\nyou want the data to be grouped together\nand you have a lot of filter control so\nif I want to just have ec2 instances for\na particular region then I can get that\nfiltered information over here and you\ncan see you have a breakdown of the\ndifferent types so it's very detailed\nand class Explorer shows up in Us East\none I'm pretty sure if you click on\nclass Explorer it will just switch you\nover to that region but just understand\nthat's where it lives okay\n[Music]\nhey this is Andrew Brown from exam Pro\nand in this video I want to show you ad\ncost Explorer so what we'll do is go to\nthe top here and actually on the right\nhand side we're going to click on the\nright and go to my billing dashboard and\nfrom there on the left hand side we're\ngoing to look for cost Explorer and then\nclick launch cost Explorer and this is\nwhere we're going to get to the aist\ncost management dashboard where this is\nwhere we find savings plans reservations\nthings like that on the left hand side\nclick on cost Explorer and you can get\nthis nice chart and so the idea is you\ncan change it from monthly to daily if\nyou if you uh\nprefer okay you can change the scope\nhere maybe we don't need six months we\ncan just go\nback\num three months here so there's less\ndata it is a bit delayed when I'm\nclicking here so it also could be just\nbecause I'm doing the daily instead of\nmonthly so you just have to be a little\nbit patient when uh using this interface\nyou can change it to stack line graph\nyou can kind of see the details there\nit's not always clear like what others\nis or things like that and so uh you can\ndrill down and there's like ways of\napplying filters and things like\nthat I always forget how to uh do this\nit's because it's it's bringing\neverything in so you have to hit clear\nall first I\nthink and\num oh you have to click into it so like\nif you wanted to click into it and pick\na particular service we could go here\nand type in\nec2 and say ec2 instances and then apply\nthat filter so now we can just see\nexactly that cost or if we want to\nchoose like maybe just\nRDS okay so you know that could be\nuseful for you to see but yeah sometimes\nit's not always clear and so what I\nrecommend is just go back to your\nbilling dashboard and from there just go\nto bills okay bills is really really\nuseful because here it shows you exactly\nevery single little service that you're\nbeing built for you can expand it and\nsee exactly where if you have other\naccounts you can go into this side here\nas well and find spend that way um but\ncost Explorer is very useful just it's\nuseful in a different way okay so there\nyou\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we are taking a look at the adus\npricing API so with adabs you can\nprogrammatically access pricing\ninformation to get the latest price\npricing offerings for services this\nmakes sense because abos can change them\nat any time and so uh you know you might\nwant to know exactly what the current\nprice is uh there are two versions of\nthis API so we have the career API known\nas the pricing service API and you\naccess this via Json and then there's\nthe batch API also known as the price uh\nlist API via HTML what's odd is that um\nthe batch API returns Json but you're\naccessing it via HTML so you can\nliterally paste those links in your\nbrowser for the API you're actually\nsending an an application Json request\nso you'd have to use something like\nPostman or something uh you can also\nsubscribe to SNS uh notifications to get\nalerts when pricing for the services\nchange ads prices change periodically\nsuch as when ads Cuts prices when new\ninstance types are launched or when new\nservices are introduced so there you\n[Music]\ngo hey this is Angie Brown from exam Pro\nand what I want to do here is show you\nsavings plans and so savings is going to\nbe found under the it cost Explorer so\njust type in cost Explorer at the top\nhere or if you want you can type in\nsavings plan as well and once we are\nhere on the left hand side we are going\nto have uh savings plans options so\nwe're going to go to the overview and\nhere it just describes um what our\nsavings plans if you want to read\nthrough it but down below if you have\nalready some spend happening it's going\nto make some suggestions and in this\nparticular account it's saying that I\ncould save some money on compute before\nwe take a look here I'm just going to go\nto the form here and see what we can see\nso up here we can say uh commitment\nthrough 3 years by the way you have\ncompute savings which applies to ec2\nfargate or Lambda then you have the ec2\nspecific one where uh we can select a\nvery particular type of instance family\nand then there's the sage maker savings\nplans um but if we go here and we just\nenter in like\n$2 all up front uh I don't really\nunderstand it from here because it\ndoesn't make it clear what the savings\nare um but uh I what it does make it\nvery easy is probably if we go over here\nand then click down on the compute so I\nkind of feel like here it would autofill\nit in for you and so here I filled it in\nuh or sorry it's filled it in for me and\nso here it's saying with a one-year plan\nall Upfront for uh based on the past 30\ndays that it's going to see that I'm\ngoing to see a monthly savings of\n$25. 36 and then I can add it to the\ncart that way and I kind of feel like\nthat is the easiest way to um figure\nthat out where with um with how it was\ngoing to that form I just configured out\nmyself what the savings were uh there\nare some utilization reports and\ncoverage reports honestly I've never\nreally looked at these before um but uh\nI'm just curious like what we're looking\nat monthly\ndaily the\nlast let's go a few months here I've\nbeen running stuff in this account for a\nwhile so there should be\nsomething\napply so nothing nothing of interest but\num I mean I guess you have a lot of use\nand coverage report and utilization\nreport could be interesting but I\nimagine it's maybe you have to be using\nyou have to have a savings plan before\nyou can see this so that's probably the\nreason why um but yeah hopefully that\ngives you a clear idea that you know you\ncan just go down to those\nrecommendations and and see exactly what\nyou can save and you just add it to your\ncart and then once you want to pay for\nit you just choose to submit that order\nand you're all good to go all right so\nthat's savings plans\n[Music]\nlet's take a look here at defense in\ndepth to understand the layers of\nsecurity ads has to consider uh for\ntheir data centers for their uh virtual\nworkloads and things that you also have\nto consider when you are uh thinking\nabout security for your Cloud resources\nso in the most interior we have data so\nthis is access to business and customer\ndata and encryption to protect your data\nthen we have applications so\napplications are secure and free of\nsecurity vulnerabilities then you have\ncomput so access to Virtual machines\nports on premise and Cloud you have the\nnetwork layer so this limits\ncommunication between resources using\nsegmentation and access controls you\nhave the perimeter itself so distributed\ndenial of service protection to filter\nlarge scale attacks before they can\ncause denial of service of users you\ncould say that's part of the network\nlayer and that's when I say there are\nvariants on this but we're just\nseparating it out uh explicitly there we\nhave identity and access so controlling\naccess to infrastructure and change\ncontrol and then there's the physical\nphysical layer so limiting access to\ndata centers to only authorized\nPersonnel you'll notice I highlighted\nidentity and access in yellow it's\nbecause that is considered the new\nprimary um perimeter from the customer's\nperspective of course adab best has\nconcerned about the physical perimeter\nand things like that but as a as a\ncustomer that's what you're going to be\nthinking about especially with the zero\ntrust model and when you see these\ndepths the idea is that in order to get\nhere you have to pass through all this\nstuff so if this um if this outward one\nis protected pretty well then you\ngenerally don't have to worry about the\nInteriors but of course you should um\nbut yeah there you\n[Music]\ngo let's take a look here at\nconfidentiality integrity and\navailability also known as the CIA Triad\nis a model describing the foundation to\nsecurity principles and their tradeoff\nrelationships so here is our Triad so we\nhave confidentiality so confidentiality\nis a component of privacy that\nimplements to protect our data from\nunauthorized viewers in practice this\ncan be using cryptographic keys to\nencrypt our data and using keys to\nencrypt our keys so envelope encryption\nthen we have integrity so maintaining\nand ensuring the accuracy and\ncompleteness of data over its entire\nlife cycle in practice utilizing asset\ncompliant databases for valid\ntransactions utilizing tamper evident or\ntamper proof Hardware security modules\nhsms availability so information needs\nto be available when needed in practice\nso high availability mitigating dos uh\ndecryption access so the CIA Triad was\nfirst mentioned in N publication 1977\nthere have been efforts to expand and\nmodernize or suggest alternatives to the\nCIA triab so one was in 1998 for the six\nAtomic elements of information uh or in\n2004 we have the N engineering\nprinciples for uh for information\ntechnology security so it has 33\nsecurity principles but this is still a\nvery popular um model for security uh\nand it's just to kind of tell you like\nyou know you don't always get everything\nyou don't get all three of them\nsometimes you have to trade off in your\nscenario um you know and hopefully some\nof the terminology here will uh resonate\nas we go through more security\n[Music]\ncontent what I want to do here is just\nDefine the term vulnerability so\nvulnerability is a whole or weakness in\nan application which can be designed a\ndesign flaw or implementation bug that\nallows an attacker to cause harm to\nstakeholders or applications and uh\nthere's a lot of great definitions of\nvulnerabilities but OAS has a ton of\nthem and we talked about OAS when we\ntalk about Abus Waf uh but it's an\norganization that creates security\nprojects that help you know what you\nshould protect uh or gives you a working\nexamples so that you can understand how\nto get better at security and so they\nhave a lot of ones here but maybe you'll\nmight notice some here like using a\nbroken or risky cryptographic algorithm\nmaybe there's a memory leak least\nprivilege violation so that's um uh\nlease privilege is something that is a\nthing that you're always worried about\ninsecurity improper data validation\nbuffer overflows so you know just to\nkind of set the tone of what a\nvulnerability is and things you should\nbe thinking about\n[Music]\nokay let's understand what encryption is\nbut before we do we need to understand\nwhat is cryptography so this is the\npractice and study of techniques for\nsecure communication in the presence of\nthird parties called adversaries and\nencryption is the process of encoding or\nscrambling information using a key and a\ncipher to store sensitive data in an\nunintelligible format as a means of\nprotection an encryption takes in plain\ntext and produces produces a cipher text\nso here's an example of a very old um\nencryption machine this is the Enigma\nmachine used during World War II and it\nhas a different key for each day that it\nwas used to set the position of the\nrotors and it relied on simple Cipher\nsubstitution and so you might be asking\nwhat is a cipher and that's what we're\ngoing to look at next\n[Music]\nso what is a cipher it is an algorithm\nthat performs encryption or decryption\nso Cipher is synomous with code uh and\nthe idea is that you use the code to\neither unlock or or lock up the\ninformation that you have so what is a\ncipher text a cipher text is the result\nof encryption performed on Plain text\nvia an algorithm so you lock that up you\nscramble it it doesn't make sense and\nyou need that code to unlock ET to get\nthe information so a good practical\nexample back in the day was a code book\nand this was the type of document used\nfor Gathering and storing cryptographic\ncodes or ciphers so the idea is if we\nzoomed up on here notice where we have\ncannot so uh and it would be0 0 and then\nthere would be give them Authority so\nthe idea is 0 0 or if you had the word\ncannot it would translate to 0 and then\nyou use 0 to match that up to say what\ndoes that mean and so that is kind of a\nvery practical example of ciphers in\n[Music]\naction so we just took a look at\nencryption but what are cryptographic\nkeys so a c a cryptographic key an easy\nway to think of it is a variable used in\nconjunction with an encryption algorithm\nin order to encrypt or decrypt data and\nthere are different kinds of um ones we\nhave so we have symmetric encryption so\nthis is where we have the same key that\nis used for encoding and decoding uh and\na very popular one and the one you'll\nsee on AWS is called Advanced encryption\nstandard AES so just take a look at that\ngraphic very closely so we have one key\nand it is used to encrypt so it produces\nthe cipher and then or Cipher text we\nshould say and then it will uh decrypt\nand we will get our plain text so one\nsingle key then we have asymmetric\nencryption so two keys are used one to\nencode and one to decode and a very\npopular one here is RSA if you're\nwondering what those uh those words are\nit's three people's names put together\nwho helped uh invent this type of\nalgorithm and so here we have uh one key\nfor ecrypt and one key for decrypt and\nthey're two different Keys all\n[Music]\nright all right let's look at the\nconcept of hashing and salting so for\nhashing we have a hashing function and\nthis accepts arbitrary size values and\nMaps it to a fixed size data structure\nhashing can reduce the size of a store\nvalue and hashing is a one-way process\nand is deterministic so a deterministic\nfunction always returns the same output\noutput for the same input so if we have\nsomething like John Smith and we pass it\nto the hash function it's going to\ncreate something that is not human\nreadable but it'll say something like 02\nFae X XY whatever um and it will always\nproduce the same thing if the same key\nor you know value is being input there\nso the reason we use hashing functions\nor hashing General is to Hash passwords\nso hash functions are used to store\npasswords in a database so that the\npassword does not reside in a plain text\nformat so you've heard about all these\ndata reaches where they've stored the\npassword in plain text this is the thing\nthat helps us avoid that issue um and\nthe thing again is it because it's one\nway you can't take that hash and unhash\nit um well there are some conditions to\nit but so to authenticate a user when a\nuser inputs their password it is then\nhashed so the one that was inputed at\nthe time of you know login and then that\nhash is compared to the stored hash in\nthe database and if they match the user\nis successfully logged in so in that\ncase we never ever had to know what the\noriginal password looked like uh popular\nhashing functions are md5 Shaw 256 or\nbcrypt uh if an attacker knows the\nfunction you are using uh and uh and\nstole your database they could enumerate\na dictionary of passwords to determine\nthe password so they'll never see it but\nthey could just keep on going through\nthat so that's why we salt our passwords\nso a salt is a random string not known\nto the attacker that the hash function\naccepts to mitigate the deterministic\nnature of a hashing function so there\nyou\n[Music]\ngo let's take a look here at digital\nsignatures and signing so what is a\ndigital signature it is a mathematical\nscheme for verifying the authenticity of\ndigital messages or documents and a\ndigital signature gives us tamper\nevidence so did someone mess or modify\nthe data is this data from uh someone we\ndid not expect it to be is it from the\nactual sender and so we kind of have\nthis diagram where we have a person who\nsends or is going to send a message so\nthey sign it and then uh Bob verifies\nthat it was for the person who it's from\nso there are three algorithms to a\ndigital signature the key generation so\ngenerates a public and private key um\nthen there is signing the process of\ngenerating a digital signature with a\nprivate key and the inputed value so\nsigning which is what is happening up\nhere signing verification verifies the\nauthenticity of the message with a\npublic key so remember the private key\nis used for signing and the public key\nis used for verifying SSH uses a public\nand private key to authorize remote\naccess into a remote machine such as a\nvirtual machine it is common to use RSA\nand we saw that RSA is a type of\nalgorithm earlier and so SSH hyen keyen\nis a well-known command to generate a\npublic and private key on Linux I know\nthis one off the top of my head I always\nknow to do this um and so what is code\nsigning so when you use a digital\nsignature to ensure computer code has\nnot been tampered and so that's just a\nlike subset of digital signatur so you\ncan use this as a means to get into a\nvirtual machine or you can use signing\nas a means to make sure that the code\nbeing committed to your repository is\nwho you expect it to be from so there\nyou\n[Music]\ngo let's talk about in transit versus at\nrest encryption so encryption and\nTransit this is data that is secure when\nmoving between locations and the\nalgorithms here are TLS and SSL then you\nhave encryption at rest so this is data\nthat is secure when residing on storage\nor within a database so we're looking at\nAES or RSA which we both covered\npreviously uh these algorithms so ones\nthat we did not cover was TLS and SSL so\nwe'll cover them now so TLS transport\nlayer security is an encryption protocol\nfor data Integrity between two or more\ncommun communicating computer\napplication so 1.0 and 1.1 are no longer\nused but TLS 1.2 and 1.3 is the current\nbest practice then we have SSL secure\nsocket layers so an encrypted protocol\nfor data Integrity between two or more\ncommunicating uh computer application so\n1.0 2.0 and 3.0 are deprecated um and\nhonestly I always get these two mixed up\nand I always fig fig uh uh get confused\nwhich is being used but um you know\nthey're always changing on us but just\nunderstand generally what these concepts\nare and that you're familiar with the\nterms\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at common\ncompliance programs so these are a set\nof internal policies and procedures for\na company to comply with laws rules and\nregulations or to uphold business\nreputation so here we have a bunch of\ndifferent compliance programs and so\nsome popular ones are like Hippa or um\nPCI CSS the question is should you know\nthese yes you should generally know the\nmost popular ones because you're going\nto see them throughout your Cloud career\num and so just getting familiar now is a\ngood time uh so let's jump into it okay\nso the first one I want to introduce you\nto is for I ISO and they have a bunch of\ndifferent ones so ISO is the\ninternational organization of\nstandardization and there other one\ncalled IEC which is the international\nelectr technical commission One deals\nwith uh you know like uh virtual things\nthe other one deals with Hardware things\nbut they have a lot of overlapping um\ncompliance programs okay and so the most\npopular absolutely most popular one that\nI know of is the 27100 I know a lot of\norganizations that are going for their\n271 this is for control implementation\nguidance you have the\n2707 this is enhanced focus on cloud\nsecurity the 27018 this is protection of\npersonal data in the cloud then you have\nthe 2771 this is Privacy Information\nManagement System so framework this\noutlines controls and processes to\nmanage data privacy and protect piis so\nthat's personally identifi information\nthen you have system and organization\ncontrol sock and this is a very popular\nthing that organizations go for\nespecially the sock two so sock one is\n18 standards and report on the\neffectiveness of internal controls at\nthe service organization relevant to the\nclient's internal control over financial\nreporting we have sock 2 evaluates\ninternal controls policies and\nprocedures that directly relate to the\nsecurity of the system at a organization\nand sock three a report based on the\ntrust uh service Services criteria that\ncan be freely\ndistributed then we have PCI DSS a set\nof security standards designed to ensure\nthat all companies that accept process\nstore and transmit credit card\ninformation maintains in a secure\nenvironment we have a federal\ninformation procedure standards or fips\nso 140 hyphen 2 This Is Us and Canadian\ngovernment standard that specifies the\nsecurity requirements for cryptographic\nmodules that protect sensitive\ninformation then we have uh phipa this\nis more relevant to me because I'm\nactually in onario in Canada but it's\nalso very uh wellknown um uh one out\nthere outside of HIPPA so this regulates\npatient protected health information\nthen you actually have Hippa this is the\nUS federal law that regulates patient\nprocedure health information then we\nhave uh Cloud security Alliance so CSA\nstar certification independent\nthird-party assessment\nof a cloud provider security posture if\nyou've never heard of CSA they have a\nvery well-known fundamental uh security\ncertification called the cssk or ccsk I\nalways get that mixed up then we have uh\nfed ramp which we covered earlier in\nthis course or in the future depending\non where we put it but um fed ramp\nstands for federal risk and\nauthorization Management program it's a\nUS Government standardization approach\nto security authorizations for cloud\nservice offerings if you want to work\nwith the US government or places that\nsell the US government need fed ramp\nthat similar to criminal justice\nInformation Services any US state or\nlocal agency that wants to access the\nFBI's cgis database is required to\nadhere to the cgis security policy then\nwe have gdpr uh the general data\nprotection regulation everyone knows\nwhat this is in Europe maybe not so much\nin North America or other places a\nEuropean Privacy Law imposes new rules\non companies governments agencies\nnonprofits and other organizations that\noffer goods and services to people\npeople in the European Union or that\ncollect analyze data try tied to eu's\nResidents there's a lot of compliance\nprograms out there one that's also very\npopular is fips but we'll get to that\nwhen we talk about KMS um but yeah uh\nthere you\n[Music]\ngo so I just wanted to quickly show you\nhere the Adis compliance programs page\nwhere they list out all the types of\ncompliance programs that ad us is uh\nworking with and that it has different\ntypes of certification and attestment\nwhich we can use itus artifact or Amazon\nartifact whichever prefix they decide to\nuse for the name there um to uh ensure\nthat itus has in order to meet those\nRegulatory Compliance you can see them\nall there and if you want to know a\nlittle bit more about any of these you\njust go ahead and click them and you can\nread and they have additional\ninformation so you have a better idea\n[Music]\nokay let's talk about pen testing so pen\ntesting is an authorized simulated Cyber\nattack on a computer system performed to\nevaluate the security of the system and\non AWS you are allowed to perform uh pen\ntesting but um there are some\nrestrictions so permitted services or\nec2 instances Knack gateways elbs RDS so\nthat's um relational database service\ncloudfront Aurora API gateways Lambda\nLambda Edge functions light cell\nresources elastic beanock environments\nthings you cannot do or you should not\nbe doing is DNS Zone walking via row 53\nhosted zones then there's dos simulation\ntesting so you should not be doing do or\nDoss do doses or simulated Doss or\nsimulated dos is okay and that doesn't\nmean that you can't necessarily do them\nuh again there's a lot of exceptions to\nthe pen testing they have a whole page\non this but generally you're not allowed\nto do dsing uh Port flooding protocol\nflooding request flooding can't do any\nof those things for other simulated\nevents you need to submit a request to\nads a reply could take up to 7 days uh\nyou know again there's a lot of uh\nlittle intricacies here so you'd have to\nreally read up on it if you're\ninterested in doing this\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at pen\ntesting on the adus platform so they\nhave this page here that tells you what\nyou're allowed to do what you're not\nallowed to do um and there's some\nadditional things you can read into like\nthe stress test policy the Dos simulate\nsimulation testing policy which I didn't\ncover in detail uh in the course content\nbut for whatever reason you're\ninterested in it I just want you to be\naware of that kind of stuff if you want\nto simulate events there is a simulate\nevent form that you have to fill out so\nyou open it up and you can kind of read\nabout it and it gives it us a heads up\nof what you're going to be doing stress\ntest fishing malware analysis other so\nthat way that if you are doing it you're\nnot going to get in trouble they're\naware of what you are doing okay so\nthat's pretty much\n[Music]\nit hey this is Brown from exam Pro and\nwe are taking a look at itus artifact\nwhich is a selfs serve portal for on\ndemand access to ibus compliance reports\nso here's an example of a a bunch of\ndifferent compliance reports that adus\ncould be meeting and the idea is that\nwhen you go to this portal within the\nadus management conso you'll have a huge\nlist of reports that you can go and\naccess so here I'm searching for Canada\nto get the government of Canada partner\npackage and then I go ahead and I\ndownload that report as a PDF and then\nwithin the PDF we can click a link to\nget the downloadable Excel and that's\npretty much what it is it's just if you\nwant to see that adus is being compliant\nfor different\n[Music]\nprograms hey this is Andrew Brown from\nexam Pro and we're going to take a look\nat adus artifact so in the top here\nwe're going to type in\nartifact and not be confused with code\nartifact which I guess is a new service\nthere's just always releasing new\nServices a and so here we have a video\nand some things but uh it's not too hard\nall we got to do is go to view reports\nand from here we have all the types of\ncompliance programs or Regulatory\nCompliance programs that ad is uh\nmeeting and we can do is search for\nsomething so we type in Canada and\nthat's the government of Canada partner\npackage and I can go ahead and download\nthat report so when you download it you\nreally want to open this up\nin um you're going to really want to\nopen this up in um Adobe Acrobat because\nif you don't open it up in Adobe acrobat\nyou're not going to be able to access\nthe\ndownloadblack reader and once you have\nit open and I'm just moving it over here\nthis is what you're going to see and um\nit's going to say like hey um oops no I\ndon't want to do that so please scroll\nto the next page to view the artifact\ndownload and so I think that if we go\nhere you know they say scroll to the\nnext page page but I'm pretty sure we\ncan just go here on the left hand side\nand this is what we're looking for that\nExcel spreadsheet so we're going to save\nthat\nattachment or actually we just going to\nopen it\nup open this\nfile okay and we'll give it a moment I\nhave Excel\ninstalled and there we\ngo there it is okay so I know it's a\nlittle bit odd way to get to those um uh\ncertificates or reports but that's just\nhow it works um but yeah I mean that's\nthe idea is like if you need to prove\nthat ads is meeting whatever those\nstandards are you can just type them in\nwhatever it is I like maybe there like\nfed ramp right whatever it is and\ndownload those certificate attestment\nwhatever um and just double check that\nads is Meeting those standards\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at AIS\ninspector but before we can answer what\nit does let's talk about hardening so\nhardening is the act of eliminating as\nmany security risk risks as possible\nhardening is common for virtual machines\nwhere you run a collection of C Security\nchecks known as a security Benchmark so\nadus inspector runs a security Benchmark\nagainst specific ec2 instances and you\ncan run a variety of security benchmarks\nand you can perform Network and host\nassessments and so here's an example of\nthose two check boxes there which you'd\nsay which assessments you want to do so\nthe idea is you have to install the edus\nagent on your ec2 instance you run an\nassessment for your assessment Target\nyou review your findings and remediate\nsecur issues and one very popular\nBenchmark you can run is the CIS which\nhas 699 checks so if you don't know what\nCIS it stands for the center of Internet\nSecurity uh and so they are this\norganization that has a bunch of um uh\nsecurity controls or check marks uh that\nare published that they suggest that you\nshould check on your\n[Music]\nmachine hey this is Andrew Brown from\nexam Pro and we're looking at dos so\ndods is a type of ious attack to disrupt\nnormal traffic by flooding a website\nwith a large amount of fake traffic so\nthe idea is we have an attacker and the\nvictim the victim is us and it could be\nour virtual machines our cloud services\nthe idea is that it's some kind of uh\nresource which um can take in uh\nincoming requests over the Internet so\nthe idea is the attacker is utilizing\nthe internet and so they may control a\nbunch of uh virtual machines or servers\nthat're loaded up with malicious\nsoftware and the idea is that the\nattacker is going to tell them all to\nsend a flood of traffic over the\nInternet uh at your uh Computing\nresource and uh this is where your\nwebsite is going to either start to\nstall or it's going to become\nunavailable for your users and so the\nidea here is that you know if you want\nto protect against dos you need some\nkind of Dos protection traditionally\nthose used to be like third party\nservices that you uh would have to pay\nfor and and it would sit in front of uh\nyour load balcer or your uh n server but\nnow the great thing with cloud service\nproviders is that generally their\nnetworks have built in DOS protection so\nthe idea is just by having your compute\nor your resources on AWS you're going to\nget uh built-in protection for free via\naw shield and we'll talk about that\n[Music]\nnext hey this is Andrew Brown from exam\nPro and we are taking a look at it\nShield which is a managed dos Protection\nService that safeguards applications\nrunning on ad\nso when you route your traffic through\nR3 or cloudfront you are using a shield\nstandard so here's a diagram to kind of\nshow you that it's not just those\nservices but these are the most common\nones where you'll have a point of entry\ninto AWS so here we could also be\nincluding elastic IP Aus Global\naccelerator but the idea is that when\nyou uh go through these Services into\nthe Aus Network it has Shield built in\nand so you're going to get that\nprotection before those uh before that\ntraffic reaches your uh cloud service\nand in this case we're showing ec2\ninstances so Shield protects against\nlayers three four and seven attacks uh\nlayer 3 four and 7even is based off the\nOSI model which is a um a fundamental\nnetworking concept so seven is for the\napplication layer four is the transport\nLayer Three is the network layer um\nthere are two different types of plans\nfor a shield we have Shield standard\nwhich is free and then Shield Advance\nwhich starts at 3,000 USD per year plus\nsome additional uh costs based on usage\nof the size of the tack or what services\nyou're using how much traffic is moving\nin and out so protection against the\nmost common dos attacks is what Shield\nstandard does uh you have access to\ntools and best practices to build dos\nBrazilian architecture it's\nautomatically available on all aable\nservices for additional protection\nagainst larger and more sophisticated\nattacks that's where Shield Advance\ncomes into play it's available for\nspecific a\nservices so R 53 cloudfront elb Aus\nGlobal accelerator elastic IP uh and\nsome notable features here is visibility\nreporting on layer 3 4 and 7even you're\nonly going to get seven if you are using\nawaf with it uh you have access to team\nand support so these are DOs experts but\nyou're only going to get it if you're\npaying for business or Enterprise\nsupport as you're paying for this as\nwell uh you also get dos cost protection\njust ensure that you know your bills\ndon't go crazy\nuh and it comes with an SLA so you have\na guarantee that it's going to work both\nplants integrate with itless web\napplication uh firewall so Waf to give\nyou that layer 7even application\nprotection so understand that if you're\nnot using Waf you're not going to be\nhaving that layer 7even production\n[Music]\nokay hey this is Andre Brown from exam\nPro and we are looking at Amazon guard\nDuty so before we look at that we need\nto understand what is an IDs IPS so an\nintrusion detection system and intrusion\nprotection system is used as a device or\nsoftware application that monitors and\nnetwork or systems for malicious\nactivity or policy violations so guard\nduty is a threat detection service which\nis IDs IPS that continuously monitors\nfor malicious and suspicious activity\nand unauthorized Behavior it uses\nmachine learning to analyze the\nfollowing itus logs your cloud trail\nlogs your VPC flow logs your DN logs and\nwhat it will do is report back to you\nand say hey um there's this issue here\nand this is actually one that's very\neasy to replicate it's just saying\nsomebody is using the root credentials\nand it's suggesting that you should not\nbe doing that right because you're never\nsupposed to be uh invoking API calls\nwith the root credentials or you should\nbe limiting that you'll might also\nnotice that if you want to investigate\nyou can kind of follow up that with uh\nAmazon detective or adus detective\nwhichever uh prefix they decided to put\non that service it will alert you of\nfindings which you can automate an\nincident uh response via cloudwatch\nevents which this uh it's been renamed\nto event Bridge so you know or third\nparty services so you can follow up a\nremediation action um and here is a\ngraphic of Amazon guard Duty just a bit\nup closer so you can see all the\nfindings and you can just see you have a\nlot of detailed information there\n[Music]\nokay hey this is Brown from exam Pro and\nwe're going to take a look at guard Duty\nso guard duty is um an intrusion\nprotection and detection uh service and\nso what I've done is I've um I've done\nsome bad practices purposely so that I\ncan show you um some information in\nthere so I'm going to go over to guard\nDuty okay and you do have to turn guard\nDuty on and so once guard duty is on\nyou're going to start getting reports\ncoming in so notice here that we have\nsome anomalous Behavior 8 days ago and\nso uh that's B he's uh my co-founder\nhe's also named as well and so we can\nkind of see some details here about\nwho's accessing what and what they were\ndoing he's not doing anything malicious\nbut we can have an idea where they're\nfrom even shows generally where he is\nwhich he is near Thunder Bay and his his\nprovider would be\nTB um and you can see that he is making\nuh API calls to describe account\nattributes and things like that then the\nother issue is the root account so\nthere's MFA I turned it off so that we\ncan or maybe this just usage here I\nactually do have it turned on I suppose\nhere we see root credential usage and so\nit's saying hey you used it 77 times\nbecause sometimes I go in and and use uh\nthe Roo account for tutorials but saying\nyou're using this way too much you got\nto stop doing that okay so that's\nsomething that is uh pretty interesting\nwith guard Duty um and it's really cost\neffective and easy to turn on so you can\nturn it on looks like they have a new\nthing for S3 um have not looked at that\nas of yet but that's kind of cool kind\nof feels like that would overlap with uh\nAmazon Macy but whatever and here we get\na breakdown of cost so we see cloud\ntrail VPC FL logs DS logs and this is\nwhere it would be ingesting data if you\nwant to use that S3 protection you'd\nhave to probably be turning or creating\na custom Cloud watch trail that has data\nevents to consume that information um\nyou know so you know hopefully that\ngives you kind of an idea of things you\ncan do and you can also centralize guard\nDuty uh into one account so you can have\none thing that takes care of everything\nand and move all the data across all\nyour accounts into a single place so\nthat's kind of interesting and you can\nset up follow followups um and it's\npossible that uh I not seeing this this\nhere but generally it would show\nyou uh it would show you a way of like\ntriggering into Cloud watch probably you\ncould do it pragmatically this is\nsomething interesting like the list\nmanagement you can add trusted IPS or\nthreat list so if there's people that\nyou know are fine you can just Whit list\nthem or if there's people that you know\nthat are bad make sure that they are\nnever allowed to get through so that's\npretty much it with guard Duty okay\nlet's take a look here at Amazon Macy so\nMacy is a fully managed service that\ncontinuously monitors S3 data access\nactivity for anomalies and generates\ndetailed alerts when it detects risks of\nunauthorized access or inav virgent data\nleaks so Macy works by using machine\nlearning to analyze your cloud trail\nlogs and Macy has a variety of alerts so\nwe have anomaly access config compliance\ncredential loss data compliance file\nhosting identity numeration information\nloss um location anomaly open\npermissions privilege escalation\nransomware service disruption suspicious\naccess and mayy will identify your most\nat risk users which could lead to\ncompromise so here's just one little\nkind of uh tidbit from the um app itself\nwhere you have the total users and they\ncategorize them into different uh risks\nI can't remember which flag means what\nin here uh Amazon Macy is an okay\nService uh it's it's very important if\nyou're storing things in\nS3 but uh I don't I don't use it very\noften to be\n[Music]\nhonest hey this is Andie Brown from exam\nPro and we are taking a look at adus\nvirtual private Network also known as\nVPN so itus VPN lets you establish a\nsecure and private tunnel from your\nnetwork or device to the idus global\nNetwork it's very important to emphasize\nthe word secure here uh because when\nyou're using Direct Connect that will\nwill establish a private connection but\nit's not using any kind of protocol to\nsecure that data in transit whereas a\nVPN will be using a secure protocol\nthere are two options here we have adus\nsite tosite VPN so securely connect on\npremise Network or branch office site to\nVPC and adabs client VPN that securely\nconnect users to adabs or on premises\nnetworks one thing that we need to\nunderstand alongside VPN is IPC this\nstands for Internet Protocol security\nand is a secure network protocol Suite\nthat authenticates and encrypts the\npackets of data to provide secure\nencrypted communication between two\ncomputers over an Internet Protocol\nNetwork and it is used in vpns and Abus\ndefinitely uses it\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at Abus web\napplication firewall also known as WF\nwhich protects you uh protects your web\napplication from common web exploits so\nthe idea here is you write your own\nrules to allow or deny traffic based on\nthe contents of an HTP requests you use\na rule set from a trusted adus security\npartner in the adus Waf rule Marketplace\nWaf can be attached to either cloudfront\nor an application load balancer so here\nis that diagram the idea is you see\ncloudfront with the WAFF or ALB with the\nw and what it does is it can protect uh\nweb applications from attacks covered\nand the OAS 10 uh top 10 most dangerous\nattacks if you don't know OAS they're\nthe open web application security\nproject and they basically have all\nthese uh security projects which are\nthings to say hey these are things that\nyou should commonly protect against or\nthey might have like example\napplications that uh serve as a means to\nlearn security so when we look at the\ntop 10 it's injection broken\nauthentication sensitive data exposure\nXML external entities so xxe broken\nAccess Control security\nmisconfigurations cross-site scripting\nso xss uh insecure deserialization using\ncomponents with known vulnerabilities\nand insufficient logging and monitoring\nso there you\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we are going to take a quick\nlook at adus web application firewall\nalso known as Waf and so um in this\naccount I have to have a Waf running uh\nso we don't have to create one uh we\nalready have something we can take a\nlook here so I'm going to go to Waf and\nshield and then on the left hand side\nyou'll Noti this is a global Service but\non the leand side we're going to be\nlooking for our web acl's and so the\nidea is that when you want a w you\ncreate a web ACL and then within within\nthat web ACL you have uh the overview\nand then you have you can kind of show\nyou kind of the traffic that's going on\nhere we can have our rules and so um\nthere's a lot of different kind of\nmanage rule groups that you can use so\nthese are ones that are provided by AWS\nso and a lot of these some of these can\nbe paid some of these are free so you\nsee there's these free rule groups where\nyou're like hey I don't want any\nanomymous IPS you checkbox that on you\nknow or I want to protect against SQL\ninjection now the interesting thing is\nthat abis has this capacity in it so um\nyou can't add all of these you can add a\ncertain amount of capacity before you\nhave to um um uh pay for more or\nsomething like that it's just kind of a\nway to um uh kind of cap the amount of\nstuff that you can put in in terms of\nrules um but there's a lot of other um\nrule groups from third party services\nlike security companies that know what\nthey're doing so if you like Fort Net's\nOS top 10 you can uh subscribe to that\nin the marketplace and be able to use it\nbut uh yeah so that's how you apply\nrules there's something called bot\ncontrol I've never used this before get\nreal-time visibility into bot AC on your\nresource and controllers what Bots allow\nand block from your resources that\nsounds really cool I cannot stand bots\nso I might turn that on myself or take a\nlook at the cost there and see what we\ncan find out but that's pretty much it\nwith Waf um one thing I would say is\nthat you can block out specific IP\naddresses or whitel list specific IP\naddresses and you might do that through\nrules I'm just going to see yeah like\nmaybe the bypass here and so these IP\naddresses are some of our um uh Cloud\nsupport Engineers where they're using\nour admid panel and um uh WF is being\ntoo aggressive in terms of protection\nand so sometimes you have to uh say hey\nallow this IP address and let my um you\nknow let my cloud support engineer be\nable to use the mid panel because\nthey're not malicious okay so that's one\nlittle exception there but that's pretty\nmuch it okay\n[Music]\nhey this is Andrew Brown from exam Pro\nand we are taking a look at Hardware\nsecurity modules also known as HSM and\nit's a piece of Hardware designed to\nstore encryption keys and it holds keys\nin memory and never writes on the disk\nso the idea is that if the HSM was shut\ndown uh that key would be gone and that\nwould be a guarantee of protection\nbecause nobody could you know take the\ndrive and steal it so here is an example\nof an HSM uh these are extremely\nexpensive so you definitely don't want\nto have to buy them yourselves uh they\ngenerally follow fips so fips is the\nfederal information processing standard\nso it's a us and Canadian government\nstandard that specifies the security\nrequirements for cryptographic modules\nthat protect sensitive information fips\nis something you want to definitely\nremember um and there are two different\num uh protocols here there's actually a\nbunch of different uh fips versions but\nwe have fips 142 level two and then fips\n143 level 3 so let's talk about the\ndifference here so hsms that are\nmulti-tenant are going to be using fips\n142 hyphen 2 level two compliant where\nyou have multiple customers virtually\nisolated on the\nHSM and then there are hsms that are\nsingle tenant and so they're going to be\nutilizing fips 140 hyphen 2 level three\ncompliant so a single customer on a\ndedicated\nHSM and so the reason why we have these\ntwo levels is that when you have\nmultiple tenants you can say oh right\nthis thing is uh has temper evidence so\nwe can see that somebody was trying to\nbreak into it but there's no guarantee\nof uh T it being tamper proof where\nlevel three is tamper proof there's also\nuh fips 140 hyphen 3 which is the new uh\nthe newer um standard but not all uh\nCloud resources uh can meet that\nstandard just because of how they offer\nthe service uh so again fips 142 is\nreally good but just understand that\nthere are other ones out there and it's\nvery easy to get fips 1402 level three\nmixed up with fips 140 hyphen 3\nsomething that I always had um a hard\ntime uh remembering the distinguishing\nbetween those two so for multi-tenant\nthis is where we're using ads Key\nManagement Service and for single tenant\nwe're using adus Cloud HSM and the only\ntime you're really using Cloud HSM is if\nyou're a large Enterprise and you need\nthat Regulatory Compliance of getting\nfips 140 hi 2 level three\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at Key\nManagement Service also known as KMS and\nit is a manage service that makes it\neasy for you to create and control the\nencryption Keys you use to encrypt your\ndata so KMS is a multi-tenant HSM so\nit's a Hardware security module and many\nadaa services are integrated to use KMS\nToc your data with a simple checkbox and\nK KMS uses envelope encryption so here's\nthat example of a simple checkbox in\nthis case it's for RDS and what you'll\ndo is choose a master key A lot of times\nads will have a default for uh key for\nyou that's managed by them that is free\nto use which is really great uh so for\nKMS it's using envelope encryption so\nwhen you encrypt your data your data is\nprotected but you have to protect your\nencryption key when you encrypt your\ndata key with a master key as an\nadditional layer of security so that's\nit works so just to make this really\nclear I have my data I use this key to\nencrypt this data and I need to protect\nthis key so I use another key to encrypt\nuh this key which forms an envelope and\nthen I store this uh master key in KMS\nand this one's considered the data key\nall\n[Music]\nright hey this is Andrew Brown from exam\nPro and we're going to take a look at\nKey Management service also known as KMS\nso type in KMS on the top here and we'll\npop over here and KMS is a way for you\nto create your own keys or you can use\nadus manage keys so up here and not all\nthese appear right away but as you use\nServices um you will adus will generate\nout manage keys for you and these are\nfree you can uh create your own Keys um\nand these cost a dollar each so if I go\nahead here and create a key I can choose\nwhether it's symmetric or asymmetric\nwhich we definitely learned in the\ncourse which is nice for asymmetric you\ncan make it encrypt and decrypt\nsign and verify and they're just kind of\nnarrowing down the type of key you would\nuse um for this you know if I went to\nsymmetric I go here I'm just kind of\nseeing if I can enter the uh actual\nmaterial into the key here um so I'm\njust going to keep clicking through here\nU my custom key generally you don't\nreally need to do this but um you know\nif it's interesting you can set up\nadministrators to say who's allowed to\nadminister the key and then you have\nsomeone that um is allowed to use the\nkey you usually want to keep those two\naccounts separate you don't want to have\nthe same person administrating and using\nthe key okay keep those two separate and\nso we would have a key policy so you can\nchange this to say the rules that is\nallowed to use um and then we can go\nhere and hit finish and so there we now\nhave our own custom key and one thing we\ncan\ndo is it's possible to rotate out these\nKeys when you need to be um but anyway\nwhen we want to use canas it's built to\nbasically everything and we've seen it\nmultiple times throughout this course\nwhen we've gone over to ec2 we'll just\ngo take a peek at a few different places\nhere so when we've gone to go launch an\nec2 instance and we go over to uh\nstorage we say\nselect and review or next and we go over\nto storage notice that here this is\nusing encryption right so I can choose\nthat or even my custom key if you're in\nDynamo DB or anywhere else it's always\nsomething like a checkbox and you choose\nyour key so that's pretty much all there\nreally is to KMS it's very easy to use\nand there you\n[Music]\ngo hey this is Andrew Brown from exam\nPro and we are going to take a look here\nat Cloud HSM it is a single tenant uh\nHSM as a service that automates Hardware\nprovisioning software patching High\navailability and backups so here's the\nidea is that you have your adus Cloud\nHSM you have your developers interacting\nwith it your application interacting\nwith it you have HSM client installed in\nyour uh ec2 instance so that it can\naccess uh the cloud HSM keys so adus\nCloud HSM enables you to generate and\nuse your encryption keys on fips 140\nhyphen 2 level 3 validated Hardware it's\nbuilt on open HSM industry standards to\nintegrate with things like PK uh\ncs1 Java cryptography uh extension so\njce Microsoft crypto and G libraries you\ncan transfer your keys to other\ncommercial commercial HSM Solutions to\nmake it easy for you to migrate keys on\nor off ads configure ads KMS to use adus\ncloud HSM uh cluster as a custom uh key\nstore rather than the default KMS key\nstore uh so Cloud HSM is way more\nexpensive than KMS KMS is like free or a\ndollar per key where Cloud HSM is a\nfixed cost per month because you are\ngetting a dedicated piece of Hardware um\nand there's not a lot of stuff around it\nso other than the ad KMS integration a\nlot of times it can be really hard to\nuse this as well so the only time you're\nreally going to be using Cloud HSM is if\nyou're an Enterprise and you need to\nmeet fips 140 hyphen 2 level three\ncompliancy\n[Music]\nokay hey this is Andrew Brown from exam\nPro and we are taking a look at know\nyour initialism so a lot of adus\nservices and Concepts and Cloud\nTechnologies use initial isms to just\nkind of shorten uh common things that we\nneed to use on a frequent basis and it's\ngoing to really help if you learn these\nbecause then what you can do is\nsubstitute them when you are uh seeing a\nservice name or something particular and\nthat's going to get you through content\na lot faster um and in the wild you're\ngoing to see these all over the place\nbecause people aren't going to say the\nfull name they're going to say the\ninitialism so let's go through them so\nfor IM it's identity and access\nmanagement for S3 that's simp Le storage\nfor S SWS it's uh swf that's simple\nworkflow service SNS is simple\nnotification service sqs is simple Q\nservice SCS is simple email service SSM\nis simple systems manager but uh you\nknow when we see the name it's usually\njust systems manager but we still use\nthe uh initialism SSM then there's RDS\nrelational database service VPC virtual\nprivate Cloud VPN virtual private\nNetwork CFN cloud formation\nWF web application firewall and that is\na very common initialism not just adus\nbut outside of it as well mq for Amazon\nactive mq ASG for auto scaling groups\nTam for technical account manager elb\nfor elastic load bouncer ALB for the\napplication load bouncer NLB for the\nnetwork load bouncer G wlb for the\nGateway load balancer clb for the\nclassic load balancer ec2 for elastic\ncloud or Cloud compute e CS for elastic\ncontainer service ECR for elastic\ncontainer repository EBS for elastic\nblock storage EMR for elastic map\nproduce EFS for elastic fall store EB or\nEB for elastic beant stock es for\nelastic search eeks for elastic kuber\nnetti service msk for managed kofka\nservice and if you think I got the S and\nK backwards I did not for whatever\nreason it's msk uh then uh there's AIS\nresource manager which is known as Ram\nACM for Amazon certificate manager Pol\nfor principal of lease privilege which\nis a concept not a service iot internet\nthings this is not a service but is a\ntech concept or Cloud concept RI for\nreserved instances and I'm sure there\nare more but these are the ones that I\nknow off the top of my head uh and\nthey're in my uh usual use case uh for\nwhat I'm doing day to-day but a lot of\ntimes you'll probably just end up need\nto remember ASG\nelb um ec2 S3 things like that\n[Music]\nokay all right let's compare adus config\nand app config which both have config in\nthe name but there are two completely\ndifferent services so adus config and\napp config so adus config is a\ngovernance tool for compliance as code\nyou can create rules that will check to\nsee if resources are configured the way\nyou expect them to be if a resource\ndrifts from the expected configuration\nyou are notified or adus config can auto\nremediate correct the configuration back\nto the expected state for app config it\nis used to automate the process of\ndeploying application configuration\nvariable changes to your web application\nyou can write a validator to ensure uh\nthe changed variable will not break your\nweb app uh you can monitor deployments\nand automate Integrations to catch\nerrors or roll backs so config is for\ncompliance governance app config is for\nconf application configur configuration\nvaribles so there you\n[Music]\ngo well let us take a look at SNS versus\nsqs and uh these things have something\nin common and it's they both connect\napps via messages uh so they're for\napplication integration so let's take a\nlook at SNS so simple notification\nservice and then simple Q service okay\nso SNS is intended to pass along\nmessages via a pub sub model whereas sqs\ncues up messages and has a guaranteed\ndelivery so the idea with SNS you send\nnotifications to subscribers of topics\nvia multiple protocols so it can be H\nHTTP email sqs SMS and SNS is generally\nused for sending plane text emails which\nis triggered via other aab services the\nbest example here is billing alarms I\nknow we mentioned this but I like to\nrepeat it so that you absolutely know uh\nit can retry sending in the case of\nfailures of https so it does have a\nretry attempt but that doesn't mean\nthere's a guarantee of delivery it's\nreally good for web hooks simple\ninternal emails triggering Lambda\nfunctions if you had to compare the to\nthird party Services it's similar to\nPusher or uh pubnub so sqs is uh the\nidea here is that messages are placed\ninto a queue applications pull the queue\nusing the itus SDK you can uh uh retain\na message for up to 14 days you can send\nthem in sequential order a sequential\norder or in parallel you can ensure only\none message is sent you can ensure\nmessages are delivered at least once\nit's really good for delayed tasks\nqueuing up emails um comparable uh stuff\nwould be something like rabbit mq or uh\nRuby on Rails sidekick\n[Music]\nokay hey this is Andy Brown from exam\nPro and we're doing variation study with\nSNS versus SCS versus pinpoint versus\nworkmail and so SNS and SCS get confused\nuh quite often but all of these Services\nuh have something in common they all\nsend emails but uh the utility of email\nis completely different for each one so\nthe first one is simple notification\nservice is for practical and internal\nemails so you send notifications to\nsubscribers of topics via multiple\nprotocols so it's not just for email it\ncan handle HTTP it can send sqs it can\nsend SNS me or SMS messages so um\nmessages to your phone um but uh it does\nsend emails and so SNS is generally used\nfor sending plain text emails which is\ntriggered via other IT services the best\nexample of this is a building alarm so\nmost exam questions are going to be\ntalking about SNS because lots of\nservices can trigger um SNS for\nnotifications and so that's the idea\nit's like oh um you know did somebody\nspend up a server send off an email\nthrough via SNS uh did we spend too much\nmoney here you know all sorts of things\ncan go through SNS to send out emails\nand you need to know what are topics and\nsubscriptions regarding SNS then you\nhave sces so simple email service and\nthis is for transactional emails and\nwhen I say transaction emails I'm\ntalking about emails that should be\ntriggered based on inapp action so sign\nup reset password invoices um so a\ncloud-based email service that is\nsimilar to this would be like send grid\nSCS sends HTML emails uh SNS cannot so\nthat is the distinction is that SCS can\ndo HTML and plain text but SNS just do\ndoes plain text and you would not use\nSNS for transactional emails SCS can\nreceive inbound emails SCS can create\nemail templates custom domain name\nemails so when you use SNS it's whatever\nAmazon gives you it's going to be some\nweird address but SCS is whatever custom\ndomain you want you can also monitor\nemail reputation for SCS then you have\nAmazon pinpoint and so this is for\npromotional emails so these when we say\npromotional we're talking about emails\nfor marketing so you can create email\ncampaigns you can segment your contacts\nyou can create customer Journeys via\nemails um it can do a be email testing\nand so sces and pinpoint get mixed up\nbecause a lot of people think well can I\njust use my transaction emails for\npromotion emails absolutely you can it's\nnot recommended because um you know\npinpoint has a lot more functionality\naround promotional emails they're built\ndifferently uh and so you know just\nunderstand that those two have\noverlapping responsibilities but\ngenerally should use them for what\nthey're for then you have Amazon\nworkmail and this is just an email web\nclient so it's similar to Gmail or\nOutlook you can create company emails\nread write and send emails from a web\nclient within the adus Management\nconsole so there you\n[Music]\ngo let us compare Amazon inspector\nversus adus trusted advisor so both of\nthese are security tools and they both\nperform audits but what they do is\nslightly different so Amazon inspector\naudits a single ec2 instance that you've\nselected or I suppose you could select\nmultiple e2s it generates a report from\na long list of Security checks um and so\ntrusted advisor has checks but uh the\nthe key difference here is that it\ndoesn't generate out a PDF report though\nI'm sure you could export CSV data if\nyou wanted to and then turn that into a\nreport uh it it gives you a holistic\nview of recommendations across multiple\nservices and best practices so for\nexample if you have an open port on\nthese security groups that can tell you\nabout about that you should enable MFA\non your root account when using trusted\nadvisor things like that um one thing\nthough is that trust advisor isn't just\nfor security it does checks across um uh\nfive different things um but they both\ndo security and they both technically do\nchecks\n[Music]\nokay so there are a few services that\nhave connected the name you'd think\nthey' be related in some way but they\nabsolutely are not and they don't even\nhave similar functionality but let's\ntake a look here so we know the\ndifference the first is direct connect\nit is a dedicated fiber optics\nconnection from your data center tows\nit's intended for large Enterprises with\ntheir own Data Center and they need an\ninsanely fast and private connection\ndirectly uh to AWS and you'll notice\nthey give private empasis because if you\nneed a secure connection you need to\napply uh an adus virtual private network\nconnection on top of direct connect then\nyou have Amazon connect this is a call\ncenter as a service get a toll-free\nnumber accept inbound and outbound calls\nset up automated phone systems uh so if\nyou ever heard of an interactive voice\nsystem and IVs this is basically what\nAmazon connect is you have media connect\nthis is the new version of elastic\ntranscoder it it converts videos to\ndifferent video types so if you have\nlet's say a th videos and you need to\ntranscode them into different video\nformats maybe you need to apply\nwatermarks insert introduction videos in\nin front of each one uh this is what you\nuse media connect for\n[Music]\nokay just in case you see elastic\ntranscoder as an option I just want you\nto know what it is compared to Media\nconnect so both these services are used\nfor transcoding and technically elastic\ntranscoder is old way and iTab this\nElemental media convert or just media\nconvert is the new way so elastic\ntranscoder was the original transcoding\nservice it may still have promatic apis\nor workflows not available in media\nconvert so this could be reasons why we\nsee Legacy customers still using it or\nyou know it's just too much effort for\nthem to upgrade to the new one it\ntranscodes videos to streaming formats\nuh media convert is more robust\ntranscoding service that can perform\nvarious operations during transcoding so\nit also transcodes videos to streaming\ndifferent streaming formats but it\noverlays images it inserts uh video\nclips extracts captions data it has a\nrobust UI so generally it's recommended\nto use the uh media convert in terms of\ncosts are basically the same so there's\nno reason not to use media convert\n[Music]\nokay so it artifact versus Amazon\ninspector get commonly mixed up all the\ntime but both artifact and inspector\ncompal out PDF reports so that's where\nthe confusion comes from but let's talk\nabout what is different about the\nreports so Abus artifact and Abus\ninspector so for artifact you're\nanswering why should an Enterprise trust\nAWS it generates a security report\nthat's based on global compliance\nframework such as sock or PCI or a\nvariety of others where Amazon inspector\nis all about how do we know this ec2\ninstance is secure can you prove it so\nit runs a script that analyzes your ec2\ninstance then generates a PDF report\ntelling you which Security checks had\npassed um so the idea here is it's an\naudit tool for security of P2 instances\nso there you\n[Music]\ngo so let us compare elb versus ALB\nversus NLB versus J wlb versus clb uh\nbecause you know when I was first\nlearning AWS I was getting confused\nbecause there was elastic load balancer\nbut there was these other ones so what\ngives right so what's happening here is\nthat there is a main service called\nelastic load balancer elb and it has\nfour different types of possible load\nBal bouncers so we'll go through all the\ntypes so the first is application load\nbouncer commonly uh initialized as ALB\nand so this operates on layer 7 for\nhttps this makes sense because that is\nthe application layer and it has some\nspecial powers in terms of routing rules\nso the idea here is you can create rules\nto change routing based on information\nfound within the htps request so let's\nsay you wanted some uh routes to go that\nhave a particular subdomain to this\nserver and a different sub domain to\nanother one you could do that and\nbecause it is an application load\nbalancer uh you can attach a web\napplication firewall for protection you\ncan't attach this on the NLB or other\nones because they're not application\nbased so that is just a little caveat\nthere then you have Network load bouncer\nuh commonly abbreviated to NLB this\noperates on layer three and four so\nwe're talking TCP UDP this is great for\nwhen you have Extreme Performance that\nthat requires T TCP and TLS traffic it's\ncapable of handling millions of requests\nper seconds uh while maintaining ultra\nlow latency it's optimized for sudden\nand volatile traffic patterns while\nusing a single static IP address per\navailability Zone uh if you're making\nvideo games this is what they like to\nuse is the network load balcer but it\nhas other utilities outside of that then\nyou have Gateway load bouncer G wlb this\nis when you need to deploy a fleet of\nthird-party virtual appliances that\nsupport uh I don't know how to say that\nin abbreviation but I'll just uh say\nit's G NE v um and there's not much we\nneed to know outside of that okay then\nthere is the classic load balancer uh\ncommonly initializes clb this operates\non layer 3 four and 7 it's intended for\napplications that were built within the\nec2 classic Network it doesn't support\nTarget groups so albs nlbs uh use Target\ngroups which is just an easier way of\ngrouping together um a bunch of uh\nTarget resources like compute uh that\nwe're going to load balance to and with\nclassic load balance you just directly\nassign ec2 instances uh and it's going\nto be retired on August 15th of 2022 so\nyeah it looks like it can do a lot of\nstuff but um it also doesn't have any of\nthe superpowers of these specialized\nones and so uh there's no reason to keep\nit around and generally you should not\nbe using it um and so yeah that's about\nit\n",
  "words": [
    "hey",
    "andrew",
    "brown",
    "free",
    "camp",
    "bringing",
    "another",
    "free",
    "cloud",
    "certification",
    "study",
    "course",
    "time",
    "looking",
    "ads",
    "cloud",
    "practitioner",
    "also",
    "known",
    "clf",
    "c02",
    "way",
    "going",
    "achieve",
    "ads",
    "certification",
    "lectur",
    "content",
    "labs",
    "always",
    "provide",
    "full",
    "free",
    "practice",
    "exam",
    "best",
    "way",
    "support",
    "uh",
    "free",
    "study",
    "courses",
    "like",
    "one",
    "purchase",
    "optional",
    "paid",
    "additional",
    "materials",
    "going",
    "help",
    "exam",
    "going",
    "allow",
    "produce",
    "uh",
    "great",
    "cloud",
    "uh",
    "certification",
    "study",
    "courses",
    "know",
    "andrew",
    "brown",
    "fourth",
    "time",
    "taught",
    "uh",
    "certification",
    "really",
    "refined",
    "point",
    "taught",
    "bit",
    "everything",
    "cloud",
    "looked",
    "ads",
    "azure",
    "gcp",
    "terraform",
    "kuber",
    "denes",
    "name",
    "taught",
    "uh",
    "see",
    "class",
    "next",
    "video",
    "ciao",
    "music",
    "hey",
    "angie",
    "brown",
    "start",
    "journey",
    "asking",
    "important",
    "question",
    "first",
    "adus",
    "cloud",
    "practitioner",
    "well",
    "ad",
    "entrylevel",
    "certification",
    "going",
    "teach",
    "things",
    "like",
    "cloud",
    "fundamentals",
    "talking",
    "cloud",
    "concepts",
    "architectures",
    "deployment",
    "models",
    "close",
    "look",
    "adus",
    "core",
    "services",
    "would",
    "compute",
    "storage",
    "network",
    "databases",
    "quick",
    "look",
    "vast",
    "amount",
    "adus",
    "services",
    "functionality",
    "around",
    "adus",
    "looking",
    "identity",
    "security",
    "billing",
    "pricing",
    "support",
    "lot",
    "stuff",
    "get",
    "course",
    "even",
    "look",
    "exam",
    "guide",
    "outline",
    "uh",
    "yeah",
    "lot",
    "stuff",
    "um",
    "course",
    "code",
    "certification",
    "clf",
    "c02",
    "old",
    "one",
    "c01",
    "uh",
    "way",
    "know",
    "new",
    "course",
    "becomes",
    "c03",
    "see",
    "course",
    "um",
    "may",
    "date",
    "um",
    "uh",
    "yeah",
    "right",
    "c02",
    "um",
    "often",
    "people",
    "refer",
    "certification",
    "ccp",
    "stand",
    "certified",
    "clock",
    "practitioner",
    "want",
    "refer",
    "uh",
    "ways",
    "describing",
    "certification",
    "want",
    "point",
    "adus",
    "leading",
    "cloud",
    "service",
    "provider",
    "world",
    "cloud",
    "practitioner",
    "common",
    "starting",
    "point",
    "people",
    "breaking",
    "cloud",
    "even",
    "going",
    "uh",
    "utilize",
    "another",
    "cloud",
    "service",
    "provider",
    "going",
    "say",
    "going",
    "get",
    "really",
    "good",
    "uh",
    "foundation",
    "certification",
    "even",
    "uh",
    "provider",
    "uh",
    "certification",
    "well",
    "consider",
    "cloud",
    "practitioner",
    "new",
    "cloud",
    "learning",
    "fundamentals",
    "executive",
    "management",
    "sales",
    "level",
    "need",
    "acquire",
    "strategic",
    "information",
    "cloud",
    "adoption",
    "migration",
    "senior",
    "cloud",
    "engineer",
    "solutions",
    "architect",
    "needs",
    "reset",
    "refresh",
    "adus",
    "knowledge",
    "working",
    "uh",
    "cloud",
    "services",
    "adus",
    "multiple",
    "years",
    "um",
    "always",
    "surprise",
    "come",
    "back",
    "refresh",
    "course",
    "uh",
    "things",
    "changed",
    "easy",
    "miss",
    "things",
    "yeah",
    "certification",
    "everybody",
    "value",
    "certification",
    "well",
    "uh",
    "certification",
    "provides",
    "expansive",
    "view",
    "possible",
    "cloud",
    "architecture",
    "ads",
    "uh",
    "would",
    "describe",
    "bird",
    "eye",
    "view",
    "ft",
    "view",
    "mind",
    "uh",
    "idea",
    "promote",
    "big",
    "picture",
    "thinking",
    "zooming",
    "assessing",
    "cloud",
    "itus",
    "landscape",
    "things",
    "like",
    "changes",
    "trends",
    "opportunities",
    "um",
    "important",
    "understand",
    "strategic",
    "approach",
    "process",
    "journey",
    "like",
    "certification",
    "much",
    "strongly",
    "uh",
    "recommend",
    "everybody",
    "journey",
    "value",
    "certification",
    "well",
    "difficult",
    "exam",
    "uh",
    "going",
    "validate",
    "build",
    "cloud",
    "workloads",
    "trying",
    "obtain",
    "technical",
    "implementation",
    "role",
    "like",
    "develop",
    "cloud",
    "developer",
    "cloud",
    "engineer",
    "devops",
    "engineer",
    "uh",
    "going",
    "enough",
    "attain",
    "technical",
    "cloud",
    "roles",
    "um",
    "could",
    "help",
    "short",
    "list",
    "resume",
    "interviews",
    "um",
    "exam",
    "covers",
    "content",
    "found",
    "certifications",
    "recommended",
    "essential",
    "study",
    "guide",
    "uh",
    "adus",
    "journey",
    "skip",
    "one",
    "uh",
    "people",
    "like",
    "go",
    "straight",
    "solution",
    "architect",
    "realize",
    "set",
    "good",
    "foundation",
    "gaps",
    "uh",
    "knowledge",
    "could",
    "really",
    "help",
    "careers",
    "really",
    "skip",
    "one",
    "um",
    "like",
    "make",
    "road",
    "maps",
    "give",
    "idea",
    "uh",
    "terms",
    "go",
    "certification",
    "uh",
    "certifications",
    "currently",
    "notice",
    "data",
    "engineer",
    "really",
    "small",
    "one",
    "became",
    "uh",
    "came",
    "beta",
    "exam",
    "hard",
    "professionals",
    "place",
    "diagram",
    "um",
    "idea",
    "lot",
    "different",
    "ways",
    "navigate",
    "uh",
    "work",
    "certifications",
    "generally",
    "map",
    "particular",
    "roles",
    "cloud",
    "uh",
    "often",
    "people",
    "go",
    "right",
    "uh",
    "solutions",
    "architect",
    "getting",
    "pen",
    "often",
    "approach",
    "go",
    "straight",
    "uh",
    "right",
    "solution",
    "architect",
    "similar",
    "um",
    "terms",
    "uh",
    "scope",
    "challenge",
    "difficulty",
    "solution",
    "architect",
    "broad",
    "certification",
    "like",
    "cloud",
    "practitioner",
    "focused",
    "technical",
    "knowledge",
    "uh",
    "whereas",
    "one",
    "course",
    "much",
    "broad",
    "cloud",
    "prer",
    "people",
    "generally",
    "go",
    "developer",
    "cis",
    "office",
    "administrator",
    "personal",
    "opinion",
    "really",
    "think",
    "people",
    "study",
    "three",
    "associates",
    "three",
    "associates",
    "time",
    "uh",
    "really",
    "find",
    "uh",
    "makes",
    "sense",
    "leave",
    "ssops",
    "admin",
    "developer",
    "knowledge",
    "um",
    "way",
    "itus",
    "engineers",
    "certifications",
    "go",
    "ones",
    "like",
    "let",
    "say",
    "google",
    "one",
    "associate",
    "um",
    "call",
    "cloud",
    "engineer",
    "everything",
    "uh",
    "feel",
    "like",
    "take",
    "three",
    "decide",
    "works",
    "um",
    "know",
    "see",
    "various",
    "routes",
    "want",
    "make",
    "clear",
    "certifications",
    "validate",
    "programming",
    "uh",
    "make",
    "technical",
    "diagramming",
    "necessarily",
    "make",
    "code",
    "management",
    "many",
    "technical",
    "skills",
    "required",
    "obtaining",
    "technical",
    "roles",
    "like",
    "roles",
    "um",
    "purpose",
    "certification",
    "certification",
    "supposed",
    "give",
    "knowledge",
    "specifically",
    "us",
    "understand",
    "need",
    "make",
    "sure",
    "get",
    "skills",
    "uh",
    "somewhere",
    "else",
    "try",
    "uh",
    "slot",
    "lot",
    "uh",
    "technical",
    "skills",
    "uh",
    "uh",
    "something",
    "course",
    "wondering",
    "certification",
    "trying",
    "give",
    "adjacent",
    "skills",
    "uh",
    "successful",
    "um",
    "future",
    "okay",
    "long",
    "take",
    "uh",
    "study",
    "pass",
    "exam",
    "well",
    "depends",
    "right",
    "depends",
    "beginner",
    "probably",
    "looking",
    "30",
    "hours",
    "someone",
    "never",
    "used",
    "datab",
    "bus",
    "cloud",
    "provider",
    "uh",
    "never",
    "written",
    "code",
    "technical",
    "role",
    "experienced",
    "uh",
    "study",
    "time",
    "going",
    "low",
    "like",
    "low",
    "6",
    "hours",
    "even",
    "lower",
    "uh",
    "possible",
    "um",
    "especially",
    "already",
    "taken",
    "certification",
    "sat",
    "um",
    "uh",
    "blind",
    "right",
    "look",
    "anything",
    "passed",
    "uh",
    "problem",
    "um",
    "uh",
    "says",
    "know",
    "practiced",
    "experience",
    "working",
    "ads",
    "equivalent",
    "experience",
    "another",
    "cloud",
    "service",
    "provider",
    "people",
    "coming",
    "azure",
    "gcp",
    "kind",
    "map",
    "knowledge",
    "adabs",
    "strong",
    "background",
    "technology",
    "uh",
    "might",
    "really",
    "already",
    "familiar",
    "kind",
    "offerings",
    "another",
    "uh",
    "like",
    "another",
    "discipline",
    "study",
    "time",
    "really",
    "low",
    "would",
    "say",
    "um",
    "know",
    "average",
    "study",
    "time",
    "probably",
    "24",
    "hours",
    "yes",
    "closer",
    "beginner",
    "level",
    "average",
    "study",
    "time",
    "found",
    "basically",
    "split",
    "50",
    "lectures",
    "labs",
    "labs",
    "skills",
    "50",
    "practice",
    "exams",
    "uh",
    "lot",
    "people",
    "forget",
    "practice",
    "exams",
    "part",
    "study",
    "process",
    "make",
    "sure",
    "uh",
    "recommend",
    "study",
    "study",
    "time",
    "one",
    "two",
    "hours",
    "day",
    "uh",
    "14",
    "days",
    "uh",
    "take",
    "pass",
    "exam",
    "still",
    "going",
    "know",
    "watch",
    "lecture",
    "videos",
    "memorize",
    "key",
    "information",
    "knowledge",
    "based",
    "exam",
    "uh",
    "test",
    "skills",
    "knowledge",
    "key",
    "uh",
    "labs",
    "uh",
    "call",
    "follow",
    "alongs",
    "within",
    "account",
    "uh",
    "going",
    "help",
    "uh",
    "sment",
    "knowledge",
    "head",
    "really",
    "makes",
    "huge",
    "difference",
    "really",
    "labs",
    "get",
    "practice",
    "exams",
    "simulate",
    "real",
    "exam",
    "absolutely",
    "need",
    "going",
    "find",
    "study",
    "materials",
    "uh",
    "exam",
    "uh",
    "beast",
    "make",
    "sure",
    "go",
    "get",
    "practice",
    "exams",
    "lot",
    "places",
    "get",
    "uh",
    "get",
    "uh",
    "offer",
    "full",
    "free",
    "practice",
    "exam",
    "think",
    "provider",
    "um",
    "give",
    "like",
    "full",
    "free",
    "practice",
    "exam",
    "also",
    "paid",
    "ones",
    "best",
    "way",
    "support",
    "content",
    "produce",
    "purchase",
    "additional",
    "paid",
    "materials",
    "uh",
    "money",
    "okay",
    "still",
    "least",
    "one",
    "full",
    "free",
    "practice",
    "exam",
    "help",
    "find",
    "exampro",
    "doco",
    "cfy",
    "c02",
    "looks",
    "like",
    "know",
    "zero",
    "uh",
    "let",
    "talk",
    "content",
    "outline",
    "four",
    "domains",
    "understand",
    "domain",
    "waiting",
    "going",
    "determine",
    "many",
    "questions",
    "domain",
    "show",
    "exam",
    "first",
    "one",
    "cloud",
    "concepts",
    "24",
    "looking",
    "15",
    "16",
    "questions",
    "domain",
    "two",
    "security",
    "compliance",
    "30",
    "quite",
    "high",
    "1920",
    "questions",
    "cloud",
    "technologies",
    "services",
    "34",
    "understanding",
    "offerings",
    "ads",
    "important",
    "thing",
    "exam",
    "highest",
    "percentage",
    "going",
    "definitely",
    "get",
    "22",
    "questions",
    "uh",
    "domain",
    "four",
    "billing",
    "pricing",
    "support",
    "12",
    "eight",
    "questions",
    "lot",
    "billing",
    "pricing",
    "support",
    "definitely",
    "important",
    "easy",
    "get",
    "overbuild",
    "stuff",
    "know",
    "point",
    "need",
    "know",
    "wide",
    "range",
    "adus",
    "services",
    "need",
    "know",
    "core",
    "services",
    "depth",
    "take",
    "exam",
    "well",
    "take",
    "um",
    "inperson",
    "test",
    "center",
    "online",
    "convenience",
    "home",
    "personally",
    "like",
    "take",
    "test",
    "center",
    "one",
    "near",
    "used",
    "live",
    "toronto",
    "test",
    "centers",
    "near",
    "online",
    "much",
    "less",
    "stressful",
    "walking",
    "building",
    "everything",
    "uh",
    "controlled",
    "whereas",
    "home",
    "might",
    "lot",
    "things",
    "going",
    "cause",
    "lot",
    "stress",
    "know",
    "makes",
    "sense",
    "adus",
    "delivers",
    "exams",
    "via",
    "pearson",
    "view",
    "uh",
    "pearon",
    "view",
    "online",
    "system",
    "uh",
    "install",
    "computer",
    "also",
    "network",
    "test",
    "centers",
    "partner",
    "uh",
    "previously",
    "adabs",
    "also",
    "offered",
    "via",
    "psi",
    "um",
    "anymore",
    "sure",
    "changed",
    "psi",
    "added",
    "pearson",
    "dropped",
    "psi",
    "option",
    "pearson",
    "view",
    "want",
    "point",
    "project",
    "exam",
    "means",
    "means",
    "someone",
    "supervising",
    "uh",
    "um",
    "exam",
    "taking",
    "cheating",
    "common",
    "check",
    "going",
    "ask",
    "look",
    "around",
    "room",
    "might",
    "even",
    "talk",
    "uh",
    "make",
    "sure",
    "um",
    "exam",
    "legit",
    "legit",
    "issue",
    "badge",
    "know",
    "real",
    "anyway",
    "let",
    "talk",
    "grading",
    "passing",
    "grade",
    "700",
    "th000",
    "points",
    "need",
    "get",
    "around",
    "70",
    "pass",
    "ads",
    "like",
    "many",
    "cl",
    "providers",
    "use",
    "scaled",
    "scoring",
    "um",
    "mean",
    "get",
    "exactly",
    "70",
    "pass",
    "uh",
    "mean",
    "less",
    "works",
    "okay",
    "response",
    "types",
    "uh",
    "well",
    "first",
    "65",
    "questions",
    "50",
    "questions",
    "scored",
    "15",
    "unscored",
    "sounds",
    "bizarre",
    "mean",
    "agree",
    "think",
    "odd",
    "give",
    "15",
    "unscored",
    "questions",
    "reason",
    "ads",
    "want",
    "introduce",
    "new",
    "questions",
    "um",
    "help",
    "test",
    "difficulty",
    "exam",
    "um",
    "know",
    "maybe",
    "people",
    "know",
    "uh",
    "expecting",
    "adjust",
    "difficulty",
    "exam",
    "think",
    "use",
    "mechanism",
    "well",
    "test",
    "taker",
    "get",
    "bit",
    "stressful",
    "get",
    "15",
    "really",
    "crazy",
    "wild",
    "questions",
    "um",
    "uh",
    "course",
    "studies",
    "us",
    "testing",
    "things",
    "want",
    "point",
    "get",
    "stressed",
    "take",
    "exam",
    "get",
    "really",
    "funny",
    "question",
    "probably",
    "one",
    "unscored",
    "questions",
    "top",
    "know",
    "15",
    "scored",
    "questions",
    "get",
    "wrong",
    "get",
    "total",
    "30",
    "questions",
    "wrong",
    "exam",
    "pass",
    "want",
    "make",
    "uh",
    "really",
    "clear",
    "penalty",
    "wrong",
    "questions",
    "absolutely",
    "always",
    "submit",
    "answer",
    "take",
    "best",
    "guess",
    "format",
    "questions",
    "multiple",
    "choice",
    "multiple",
    "answer",
    "know",
    "stressful",
    "terms",
    "uh",
    "formatting",
    "questions",
    "um",
    "15",
    "unscored",
    "questions",
    "exam",
    "count",
    "towards",
    "final",
    "score",
    "unscored",
    "questions",
    "uh",
    "evaluate",
    "introduction",
    "new",
    "questions",
    "determine",
    "exam",
    "easy",
    "passing",
    "score",
    "question",
    "difficulty",
    "needs",
    "increased",
    "discover",
    "users",
    "attempting",
    "cheat",
    "exam",
    "steal",
    "dump",
    "exam",
    "questions",
    "encounter",
    "questions",
    "never",
    "studied",
    "uh",
    "seemed",
    "really",
    "hard",
    "keep",
    "cool",
    "remember",
    "may",
    "unscored",
    "questions",
    "really",
    "want",
    "emphasize",
    "terms",
    "duration",
    "get",
    "hours",
    "minutes",
    "per",
    "question",
    "exam",
    "time",
    "90",
    "minutes",
    "seat",
    "time",
    "120",
    "minutes",
    "saying",
    "say",
    "seat",
    "time",
    "time",
    "takes",
    "uh",
    "allocate",
    "full",
    "exam",
    "uh",
    "includes",
    "uh",
    "things",
    "like",
    "reviewing",
    "instructions",
    "uh",
    "showing",
    "uh",
    "showing",
    "online",
    "proctor",
    "workspace",
    "reading",
    "accepting",
    "nda",
    "completing",
    "exam",
    "provide",
    "feedback",
    "exam",
    "lot",
    "people",
    "go",
    "okay",
    "exam",
    "start",
    "star",
    "90",
    "90",
    "minutes",
    "exam",
    "really",
    "want",
    "show",
    "30",
    "minutes",
    "prior",
    "uh",
    "checking",
    "process",
    "really",
    "really",
    "stressful",
    "know",
    "consider",
    "uh",
    "full",
    "scope",
    "time",
    "need",
    "dedicate",
    "exams",
    "uh",
    "certification",
    "valid",
    "36",
    "months",
    "3",
    "years",
    "recertification",
    "providers",
    "uh",
    "like",
    "azure",
    "fundamentals",
    "forever",
    "um",
    "ones",
    "require",
    "refresh",
    "every",
    "year",
    "ones",
    "um",
    "take",
    "full",
    "exam",
    "reassessment",
    "free",
    "inabus",
    "likes",
    "way",
    "nice",
    "thing",
    "though",
    "pass",
    "certification",
    "um",
    "somewhere",
    "adus",
    "allows",
    "get",
    "next",
    "exam",
    "half",
    "uh",
    "least",
    "cost",
    "saving",
    "mechanisms",
    "pass",
    "exam",
    "next",
    "certification",
    "yeah",
    "uh",
    "pretty",
    "much",
    "breakdown",
    "uh",
    "exam",
    "guide",
    "go",
    "take",
    "look",
    "actual",
    "exam",
    "guide",
    "uh",
    "understand",
    "full",
    "scope",
    "uh",
    "yeah",
    "see",
    "next",
    "one",
    "okay",
    "music",
    "ciao",
    "hey",
    "everybody",
    "andrew",
    "brown",
    "training",
    "certification",
    "page",
    "adus",
    "website",
    "want",
    "want",
    "pull",
    "exam",
    "guide",
    "um",
    "make",
    "sure",
    "know",
    "exactly",
    "getting",
    "uh",
    "cover",
    "summary",
    "previous",
    "video",
    "uh",
    "think",
    "always",
    "useful",
    "know",
    "exactly",
    "things",
    "adabs",
    "always",
    "changing",
    "marketing",
    "pages",
    "already",
    "noticed",
    "changes",
    "um",
    "understand",
    "nature",
    "cloud",
    "notice",
    "talking",
    "uh",
    "beta",
    "exam",
    "certification",
    "even",
    "earlier",
    "talked",
    "data",
    "engineer",
    "least",
    "showed",
    "journey",
    "map",
    "even",
    "even",
    "100",
    "beta",
    "see",
    "kind",
    "prepping",
    "future",
    "also",
    "want",
    "point",
    "like",
    "certifications",
    "path",
    "uh",
    "thing",
    "really",
    "like",
    "think",
    "accurate",
    "first",
    "thing",
    "show",
    "solutions",
    "architect",
    "even",
    "say",
    "need",
    "get",
    "two",
    "associate",
    "certifications",
    "absolutely",
    "go",
    "solutions",
    "architect",
    "professional",
    "data",
    "analytics",
    "longer",
    "uh",
    "certification",
    "adus",
    "producing",
    "document",
    "want",
    "understand",
    "marketing",
    "pages",
    "maximize",
    "amount",
    "certifications",
    "need",
    "obtain",
    "goal",
    "make",
    "take",
    "every",
    "certification",
    "goal",
    "make",
    "sure",
    "prepared",
    "uh",
    "job",
    "want",
    "know",
    "help",
    "avoid",
    "going",
    "certification",
    "route",
    "getting",
    "many",
    "certifications",
    "going",
    "benefit",
    "take",
    "grain",
    "salt",
    "reading",
    "okay",
    "anyway",
    "want",
    "drop",
    "go",
    "cloud",
    "partitioner",
    "um",
    "cloud",
    "cloud",
    "practitioner",
    "page",
    "scroll",
    "got",
    "prepare",
    "exam",
    "click",
    "exam",
    "guide",
    "open",
    "pdf",
    "give",
    "us",
    "information",
    "need",
    "know",
    "ab",
    "long",
    "time",
    "making",
    "um",
    "exam",
    "guide",
    "p",
    "f",
    "really",
    "like",
    "uh",
    "anyway",
    "first",
    "thing",
    "confirm",
    "course",
    "code",
    "one",
    "says",
    "cf",
    "co2",
    "know",
    "right",
    "track",
    "says",
    "exam",
    "validates",
    "candidates",
    "ability",
    "complete",
    "following",
    "task",
    "want",
    "highlight",
    "key",
    "words",
    "explain",
    "understand",
    "describe",
    "identify",
    "understand",
    "certification",
    "checking",
    "whether",
    "know",
    "cloud",
    "understand",
    "cloud",
    "um",
    "majority",
    "aable",
    "certifications",
    "fact",
    "multiple",
    "choice",
    "multiple",
    "answers",
    "ca",
    "really",
    "check",
    "able",
    "something",
    "cloud",
    "understand",
    "limits",
    "certifications",
    "least",
    "eight",
    "certifications",
    "based",
    "testing",
    "mechanisms",
    "says",
    "target",
    "candidate",
    "saying",
    "uh",
    "order",
    "pass",
    "exam",
    "suggesting",
    "six",
    "months",
    "exposure",
    "adabs",
    "uh",
    "cloud",
    "design",
    "implementation",
    "operate",
    "operation",
    "uh",
    "able",
    "pass",
    "weird",
    "uh",
    "worded",
    "strangely",
    "makes",
    "sound",
    "like",
    "experience",
    "um",
    "even",
    "start",
    "studying",
    "true",
    "mean",
    "like",
    "want",
    "pass",
    "need",
    "six",
    "months",
    "pass",
    "exam",
    "crazy",
    "need",
    "recommended",
    "um",
    "amount",
    "hours",
    "said",
    "average",
    "hours",
    "24",
    "hours",
    "um",
    "sure",
    "put",
    "six",
    "months",
    "guess",
    "really",
    "hard",
    "time",
    "cloud",
    "give",
    "lot",
    "uh",
    "um",
    "scope",
    "room",
    "see",
    "pointing",
    "non",
    "backgrounds",
    "recommended",
    "knowledge",
    "cloud",
    "concept",
    "security",
    "core",
    "services",
    "economics",
    "repeating",
    "domains",
    "um",
    "notice",
    "says",
    "job",
    "tasks",
    "scope",
    "coding",
    "um",
    "cloud",
    "architecture",
    "design",
    "load",
    "performance",
    "testing",
    "highlighting",
    "three",
    "want",
    "point",
    "associate",
    "level",
    "professional",
    "specialty",
    "actually",
    "ask",
    "questions",
    "around",
    "troubleshooting",
    "implementation",
    "suppose",
    "architectural",
    "design",
    "never",
    "ever",
    "ever",
    "certification",
    "8s",
    "going",
    "test",
    "coding",
    "skills",
    "architectural",
    "diagram",
    "skills",
    "really",
    "good",
    "load",
    "performance",
    "testing",
    "like",
    "use",
    "case",
    "scenarios",
    "um",
    "understand",
    "limits",
    "certifications",
    "coming",
    "response",
    "types",
    "got",
    "multiple",
    "choice",
    "multiple",
    "response",
    "um",
    "pretty",
    "clear",
    "uh",
    "50",
    "scored",
    "questions",
    "15",
    "unscored",
    "questions",
    "clear",
    "uh",
    "uh",
    "point",
    "system",
    "based",
    "thousand",
    "th",
    "points",
    "lowest",
    "get",
    "100",
    "points",
    "know",
    "works",
    "like",
    "ca",
    "get",
    "zero",
    "points",
    "know",
    "passing",
    "score",
    "700",
    "need",
    "score",
    "talking",
    "course",
    "outline",
    "actually",
    "comparison",
    "old",
    "clf",
    "co1",
    "take",
    "look",
    "see",
    "actually",
    "changed",
    "cloud",
    "concepts",
    "security",
    "compliance",
    "cloud",
    "technology",
    "services",
    "billing",
    "pricing",
    "support",
    "comes",
    "starts",
    "describing",
    "stuff",
    "need",
    "make",
    "clear",
    "inabus",
    "makes",
    "exams",
    "give",
    "huge",
    "list",
    "things",
    "need",
    "learn",
    "learn",
    "um",
    "one",
    "things",
    "end",
    "overstudying",
    "find",
    "like",
    "exam",
    "guide",
    "outline",
    "one",
    "one",
    "give",
    "example",
    "look",
    "something",
    "else",
    "going",
    "go",
    "hashi",
    "corp",
    "second",
    "hashy",
    "corp",
    "terraform",
    "certification",
    "example",
    "different",
    "adus",
    "certifications",
    "hashicorp",
    "exam",
    "guide",
    "give",
    "items",
    "100",
    "sure",
    "every",
    "single",
    "thing",
    "every",
    "one",
    "one",
    "things",
    "show",
    "exam",
    "one",
    "one",
    "easy",
    "know",
    "exactly",
    "need",
    "study",
    "um",
    "uh",
    "know",
    "things",
    "pass",
    "ad",
    "us",
    "list",
    "things",
    "wo",
    "show",
    "pulling",
    "large",
    "pool",
    "kind",
    "narrow",
    "need",
    "study",
    "need",
    "good",
    "sense",
    "um",
    "overall",
    "everything",
    "going",
    "get",
    "things",
    "wrong",
    "um",
    "anyway",
    "coming",
    "back",
    "first",
    "cloud",
    "concepts",
    "talking",
    "benefits",
    "cloud",
    "section",
    "benefits",
    "cloud",
    "talk",
    "value",
    "proposition",
    "like",
    "six",
    "nine",
    "forget",
    "multiple",
    "slides",
    "talking",
    "economics",
    "scale",
    "benefits",
    "global",
    "infrastructure",
    "advantages",
    "high",
    "availability",
    "elasticity",
    "uh",
    "agility",
    "think",
    "call",
    "cloud",
    "architecture",
    "terminologies",
    "really",
    "benefits",
    "mean",
    "benefits",
    "cloud",
    "like",
    "group",
    "little",
    "bit",
    "differently",
    "identified",
    "design",
    "principles",
    "abus",
    "cloud",
    "well",
    "architect",
    "framework",
    "uh",
    "part",
    "never",
    "clf",
    "co1",
    "90",
    "history",
    "decided",
    "maybe",
    "like",
    "last",
    "year",
    "something",
    "add",
    "um",
    "uh",
    "even",
    "even",
    "solution",
    "architect",
    "associate",
    "even",
    "level",
    "totally",
    "fine",
    "need",
    "know",
    "high",
    "level",
    "um",
    "difficult",
    "learn",
    "white",
    "paper",
    "pdf",
    "um",
    "know",
    "describes",
    "adus",
    "thinks",
    "design",
    "uh",
    "architecture",
    "understand",
    "benefits",
    "strategies",
    "migration",
    "cloud",
    "cloud",
    "adoption",
    "strategies",
    "cloud",
    "adoption",
    "framework",
    "um",
    "last",
    "exam",
    "luckily",
    "included",
    "thought",
    "something",
    "important",
    "already",
    "certification",
    "course",
    "even",
    "last",
    "one",
    "actually",
    "ask",
    "quite",
    "questions",
    "around",
    "cloud",
    "adoption",
    "framework",
    "look",
    "one",
    "like",
    "white",
    "paper",
    "like",
    "one",
    "talk",
    "white",
    "papers",
    "never",
    "heard",
    "term",
    "uh",
    "make",
    "sense",
    "course",
    "cloud",
    "adoption",
    "framework",
    "um",
    "lot",
    "exam",
    "ask",
    "lot",
    "questions",
    "around",
    "good",
    "common",
    "sense",
    "um",
    "uh",
    "choosing",
    "answers",
    "makes",
    "sense",
    "um",
    "identifying",
    "appropriate",
    "migration",
    "strategies",
    "sure",
    "guess",
    "never",
    "got",
    "snowball",
    "questions",
    "um",
    "say",
    "snowball",
    "go",
    "understand",
    "concepts",
    "cloud",
    "economics",
    "cost",
    "savings",
    "moving",
    "cloud",
    "aspects",
    "cloud",
    "economics",
    "uh",
    "fixed",
    "cost",
    "compared",
    "variable",
    "cost",
    "talking",
    "um",
    "opex",
    "opex",
    "capex",
    "understanding",
    "associate",
    "premise",
    "environments",
    "uh",
    "understand",
    "difference",
    "licensing",
    "strategies",
    "adabs",
    "never",
    "ever",
    "really",
    "ever",
    "mentioned",
    "uh",
    "bring",
    "licenses",
    "ever",
    "certification",
    "courses",
    "never",
    "got",
    "exam",
    "people",
    "sat",
    "new",
    "exam",
    "never",
    "uh",
    "encountered",
    "still",
    "good",
    "know",
    "saying",
    "know",
    "listed",
    "definitely",
    "exam",
    "good",
    "thing",
    "basic",
    "level",
    "understand",
    "concept",
    "right",
    "sizing",
    "um",
    "maybe",
    "go",
    "back",
    "make",
    "slide",
    "cu",
    "think",
    "actually",
    "make",
    "deliberate",
    "slide",
    "think",
    "mean",
    "understanding",
    "uh",
    "like",
    "horizontal",
    "scaling",
    "stuff",
    "uh",
    "stuff",
    "like",
    "works",
    "um",
    "get",
    "questions",
    "exam",
    "right",
    "sizing",
    "least",
    "technical",
    "definition",
    "like",
    "identify",
    "benefits",
    "automation",
    "think",
    "might",
    "one",
    "question",
    "saying",
    "like",
    "hey",
    "one",
    "lets",
    "automate",
    "stuff",
    "chose",
    "cloud",
    "information",
    "really",
    "talk",
    "whole",
    "ask",
    "lot",
    "questions",
    "exam",
    "iac",
    "infrastructure",
    "code",
    "identifying",
    "uh",
    "manag",
    "ad",
    "services",
    "something",
    "lot",
    "exams",
    "like",
    "describe",
    "service",
    "pick",
    "security",
    "compliance",
    "ed",
    "shared",
    "responsibility",
    "model",
    "absolutely",
    "need",
    "know",
    "sure",
    "always",
    "always",
    "appears",
    "exam",
    "um",
    "customers",
    "responsibility",
    "lot",
    "say",
    "like",
    "give",
    "scenario",
    "um",
    "like",
    "typical",
    "workload",
    "resource",
    "uh",
    "determine",
    "customers",
    "responsibility",
    "adab",
    "us",
    "responsibility",
    "describing",
    "responsibility",
    "customer",
    "adus",
    "share",
    "share",
    "responsibility",
    "model",
    "still",
    "describing",
    "itus",
    "respons",
    "responsibilities",
    "customer",
    "responsibilities",
    "shift",
    "depending",
    "service",
    "used",
    "yeah",
    "basically",
    "share",
    "responsibility",
    "model",
    "understand",
    "cloud",
    "security",
    "governance",
    "compliance",
    "uh",
    "compliance",
    "governments",
    "concepts",
    "benefits",
    "cloud",
    "security",
    "really",
    "talk",
    "uh",
    "really",
    "directly",
    "ask",
    "exam",
    "yes",
    "cover",
    "capture",
    "locate",
    "logs",
    "associated",
    "cloud",
    "security",
    "absolutely",
    "ask",
    "exam",
    "sure",
    "um",
    "identify",
    "find",
    "compliance",
    "information",
    "absolutely",
    "exam",
    "understanding",
    "compliance",
    "needs",
    "among",
    "geographic",
    "locations",
    "industries",
    "sure",
    "mean",
    "talking",
    "slide",
    "um",
    "global",
    "infrastructure",
    "um",
    "like",
    "data",
    "sovereignty",
    "like",
    "gov",
    "cloud",
    "things",
    "like",
    "describing",
    "customers",
    "secure",
    "resources",
    "ads",
    "generally",
    "knowing",
    "security",
    "services",
    "absolutely",
    "exam",
    "identifying",
    "different",
    "encryption",
    "options",
    "um",
    "never",
    "got",
    "exam",
    "never",
    "heard",
    "anyone",
    "else",
    "getting",
    "um",
    "going",
    "talk",
    "probably",
    "going",
    "talk",
    "around",
    "s3",
    "recognizing",
    "services",
    "aid",
    "governance",
    "compliance",
    "absolutely",
    "absolutely",
    "sure",
    "get",
    "questions",
    "around",
    "uh",
    "things",
    "like",
    "fips",
    "hippa",
    "like",
    "common",
    "common",
    "compliance",
    "certifications",
    "specific",
    "datab",
    "best",
    "general",
    "um",
    "talking",
    "specific",
    "security",
    "services",
    "kind",
    "repeat",
    "talking",
    "um",
    "identity",
    "service",
    "governance",
    "service",
    "thing",
    "recognizing",
    "compliance",
    "requirements",
    "uh",
    "vary",
    "among",
    "ad",
    "services",
    "sure",
    "identify",
    "itus",
    "management",
    "capabilities",
    "talking",
    "im",
    "um",
    "itus",
    "root",
    "account",
    "got",
    "uh",
    "separate",
    "slide",
    "uh",
    "principal",
    "lease",
    "privilege",
    "absolutely",
    "absolutely",
    "ask",
    "single",
    "sign",
    "also",
    "known",
    "adis",
    "identity",
    "center",
    "know",
    "anyone",
    "gotten",
    "question",
    "exam",
    "uh",
    "got",
    "slide",
    "understanding",
    "access",
    "keys",
    "yep",
    "cover",
    "po",
    "uh",
    "password",
    "policies",
    "credential",
    "storage",
    "secrets",
    "manager",
    "systems",
    "manager",
    "um",
    "bunch",
    "stuff",
    "identify",
    "components",
    "resources",
    "security",
    "describing",
    "security",
    "features",
    "acl",
    "uh",
    "ad",
    "us",
    "wff",
    "security",
    "groups",
    "really",
    "ask",
    "exam",
    "trying",
    "make",
    "point",
    "asking",
    "stuff",
    "even",
    "even",
    "show",
    "exam",
    "um",
    "know",
    "keep",
    "going",
    "going",
    "could",
    "keep",
    "telling",
    "go",
    "gets",
    "even",
    "crazier",
    "go",
    "stuff",
    "could",
    "show",
    "exam",
    "like",
    "big",
    "list",
    "crazy",
    "know",
    "know",
    "seems",
    "stressful",
    "know",
    "follow",
    "follow",
    "follow",
    "uh",
    "course",
    "absolutely",
    "pass",
    "go",
    "content",
    "issue",
    "avoid",
    "stuff",
    "show",
    "stress",
    "exam",
    "guide",
    "let",
    "go",
    "take",
    "look",
    "see",
    "rebalance",
    "changed",
    "notice",
    "went",
    "26",
    "24",
    "never",
    "used",
    "really",
    "appreciate",
    "exam",
    "guide",
    "got",
    "25",
    "30",
    "33",
    "34",
    "16",
    "12",
    "would",
    "reduce",
    "one",
    "know",
    "shuffle",
    "whatever",
    "um",
    "course",
    "increased",
    "uh",
    "technology",
    "section",
    "basic",
    "rewarding",
    "support",
    "always",
    "always",
    "section",
    "uh",
    "nice",
    "labeled",
    "um",
    "notice",
    "says",
    "content",
    "deleted",
    "exam",
    "um",
    "largest",
    "struggle",
    "certification",
    "already",
    "made",
    "content",
    "last",
    "one",
    "old",
    "one",
    "expired",
    "struggling",
    "already",
    "well",
    "thing",
    "added",
    "new",
    "certification",
    "rework",
    "numbers",
    "um",
    "know",
    "added",
    "add",
    "added",
    "labs",
    "added",
    "um",
    "stuff",
    "going",
    "say",
    "like",
    "know",
    "update",
    "co1",
    "co2",
    "barely",
    "anything",
    "changed",
    "say",
    "exam",
    "questions",
    "change",
    "noticed",
    "exam",
    "questions",
    "um",
    "quality",
    "kind",
    "uh",
    "dropped",
    "wondering",
    "using",
    "generative",
    "ai",
    "generate",
    "questions",
    "something",
    "um",
    "something",
    "quality",
    "questions",
    "definitely",
    "um",
    "different",
    "would",
    "say",
    "uh",
    "worded",
    "clearly",
    "used",
    "whatever",
    "reason",
    "um",
    "anyway",
    "still",
    "okay",
    "totally",
    "fine",
    "uh",
    "recategorization",
    "clf",
    "co2",
    "shuffle",
    "um",
    "points",
    "really",
    "think",
    "new",
    "one",
    "better",
    "useful",
    "exam",
    "guide",
    "probably",
    "give",
    "survey",
    "feedback",
    "anyway",
    "give",
    "idea",
    "much",
    "stuff",
    "stress",
    "stick",
    "course",
    "absolutely",
    "pass",
    "uh",
    "uh",
    "know",
    "hopefully",
    "gives",
    "uh",
    "better",
    "confidence",
    "see",
    "next",
    "one",
    "uh",
    "chiao",
    "music",
    "chiao",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "free",
    "practice",
    "exam",
    "provide",
    "uh",
    "course",
    "sign",
    "exam",
    "pro",
    "even",
    "need",
    "credit",
    "card",
    "redeem",
    "uh",
    "free",
    "available",
    "content",
    "really",
    "date",
    "well",
    "simulates",
    "see",
    "actual",
    "exam",
    "full",
    "set",
    "full",
    "65",
    "questions",
    "getting",
    "real",
    "simulation",
    "going",
    "start",
    "going",
    "whole",
    "thing",
    "going",
    "click",
    "show",
    "couple",
    "idea",
    "um",
    "level",
    "difficulty",
    "questions",
    "first",
    "question",
    "got",
    "presented",
    "support",
    "plans",
    "provide",
    "access",
    "seven",
    "core",
    "trusted",
    "advisor",
    "checks",
    "question",
    "might",
    "need",
    "answer",
    "want",
    "spoil",
    "going",
    "tell",
    "answer",
    "go",
    "next",
    "one",
    "large",
    "accounting",
    "firm",
    "wants",
    "utilize",
    "os",
    "store",
    "customer",
    "accounting",
    "information",
    "archive",
    "storage",
    "must",
    "store",
    "information",
    "7",
    "years",
    "due",
    "regulatory",
    "compliance",
    "dat",
    "service",
    "meets",
    "requirement",
    "first",
    "one",
    "notice",
    "one",
    "multiple",
    "choice",
    "sorry",
    "multiple",
    "answers",
    "select",
    "multiples",
    "submit",
    "answer",
    "next",
    "one",
    "single",
    "choice",
    "two",
    "types",
    "questions",
    "see",
    "exam",
    "going",
    "ask",
    "anything",
    "coding",
    "going",
    "see",
    "kind",
    "code",
    "um",
    "terms",
    "length",
    "pretty",
    "much",
    "see",
    "terms",
    "uh",
    "questions",
    "think",
    "many",
    "cases",
    "wrote",
    "little",
    "bit",
    "like",
    "um",
    "style",
    "solutions",
    "architect",
    "associate",
    "make",
    "slightly",
    "difficult",
    "little",
    "bit",
    "overprepared",
    "well",
    "practice",
    "exams",
    "going",
    "uh",
    "well",
    "real",
    "exam",
    "okay",
    "okay",
    "wanted",
    "kind",
    "get",
    "exposure",
    "music",
    "okay",
    "hey",
    "everyone",
    "andrew",
    "brown",
    "opened",
    "exam",
    "simulator",
    "exam",
    "pro",
    "platform",
    "freet",
    "uh",
    "promised",
    "uh",
    "folks",
    "course",
    "cost",
    "go",
    "get",
    "one",
    "sign",
    "access",
    "reason",
    "open",
    "really",
    "want",
    "talk",
    "specific",
    "type",
    "question",
    "included",
    "appear",
    "exam",
    "uh",
    "familiar",
    "azure",
    "certifications",
    "um",
    "associate",
    "level",
    "higher",
    "question",
    "type",
    "called",
    "case",
    "study",
    "case",
    "study",
    "pull",
    "believe",
    "uh",
    "randomization",
    "practice",
    "exam",
    "set",
    "think",
    "one",
    "case",
    "study",
    "gives",
    "scenario",
    "read",
    "case",
    "study",
    "company",
    "read",
    "company",
    "look",
    "objective",
    "requirements",
    "constraints",
    "stuff",
    "different",
    "could",
    "diagrams",
    "sorts",
    "stuff",
    "idea",
    "contextualizing",
    "business",
    "use",
    "case",
    "going",
    "asked",
    "series",
    "questions",
    "uh",
    "multiple",
    "choice",
    "multiple",
    "select",
    "ties",
    "back",
    "case",
    "study",
    "reason",
    "included",
    "um",
    "believe",
    "going",
    "give",
    "better",
    "comprehension",
    "higher",
    "chance",
    "passing",
    "going",
    "appear",
    "exam",
    "include",
    "uh",
    "extra",
    "challenge",
    "um",
    "higher",
    "chance",
    "passing",
    "like",
    "practice",
    "exams",
    "course",
    "paid",
    "uh",
    "normal",
    "style",
    "multiple",
    "choice",
    "multiple",
    "select",
    "um",
    "course",
    "cloud",
    "practitioner",
    "um",
    "know",
    "half",
    "practice",
    "exam",
    "sets",
    "uh",
    "think",
    "going",
    "good",
    "hopefully",
    "see",
    "bonus",
    "wanted",
    "give",
    "heads",
    "um",
    "uh",
    "encountering",
    "like",
    "heck",
    "um",
    "thing",
    "want",
    "point",
    "enter",
    "case",
    "study",
    "like",
    "mini",
    "exam",
    "within",
    "exam",
    "answered",
    "questions",
    "uh",
    "ca",
    "go",
    "back",
    "um",
    "within",
    "case",
    "study",
    "get",
    "end",
    "submit",
    "case",
    "study",
    "ca",
    "go",
    "back",
    "update",
    "aware",
    "um",
    "know",
    "hopefully",
    "like",
    "love",
    "feedback",
    "hear",
    "people",
    "like",
    "always",
    "appeared",
    "azure",
    "exams",
    "uh",
    "want",
    "see",
    "ad",
    "us",
    "ones",
    "well",
    "think",
    "really",
    "good",
    "uh",
    "testing",
    "knowledge",
    "anyway",
    "see",
    "next",
    "one",
    "okay",
    "ciao",
    "music",
    "hey",
    "everyone",
    "andrew",
    "brown",
    "favorite",
    "cloud",
    "instructor",
    "want",
    "video",
    "show",
    "um",
    "unique",
    "feature",
    "platform",
    "um",
    "case",
    "come",
    "across",
    "uh",
    "materials",
    "ca",
    "remember",
    "free",
    "paid",
    "tier",
    "believe",
    "paid",
    "tier",
    "trying",
    "upsell",
    "anyone",
    "want",
    "make",
    "sure",
    "people",
    "aware",
    "um",
    "taking",
    "course",
    "sometimes",
    "see",
    "follow",
    "along",
    "like",
    "example",
    "s3",
    "uh",
    "cloud",
    "simple",
    "storage",
    "uh",
    "always",
    "included",
    "videos",
    "um",
    "point",
    "might",
    "idea",
    "um",
    "validators",
    "validators",
    "verify",
    "uh",
    "whether",
    "actually",
    "uh",
    "resources",
    "uh",
    "deployed",
    "cloud",
    "account",
    "um",
    "like",
    "additional",
    "check",
    "make",
    "sure",
    "right",
    "example",
    "one",
    "s3",
    "says",
    "set",
    "s3",
    "bucket",
    "account",
    "validation",
    "tool",
    "perform",
    "perms",
    "automated",
    "check",
    "personal",
    "cloud",
    "infrastructure",
    "confirm",
    "alignment",
    "build",
    "project",
    "requirements",
    "make",
    "sure",
    "input",
    "precise",
    "values",
    "infrastructure",
    "components",
    "let",
    "go",
    "show",
    "showing",
    "example",
    "know",
    "see",
    "follow",
    "alongs",
    "lookout",
    "stuff",
    "believe",
    "even",
    "show",
    "uh",
    "watch",
    "video",
    "watch",
    "end",
    "press",
    "button",
    "get",
    "uh",
    "star",
    "uh",
    "way",
    "works",
    "let",
    "go",
    "first",
    "thing",
    "want",
    "uh",
    "click",
    "new",
    "run",
    "button",
    "agreement",
    "agreement",
    "confirming",
    "understand",
    "using",
    "cloud",
    "account",
    "uh",
    "going",
    "uh",
    "need",
    "get",
    "readon",
    "access",
    "understand",
    "using",
    "uh",
    "providing",
    "us",
    "access",
    "account",
    "account",
    "company",
    "account",
    "obviously",
    "want",
    "get",
    "trouble",
    "accessing",
    "data",
    "supposed",
    "want",
    "get",
    "trouble",
    "friendly",
    "reminder",
    "going",
    "click",
    "agree",
    "accept",
    "next",
    "thing",
    "going",
    "ask",
    "adus",
    "account",
    "id",
    "region",
    "deploying",
    "might",
    "additional",
    "uh",
    "parameters",
    "wants",
    "know",
    "test",
    "going",
    "log",
    "adus",
    "account",
    "take",
    "moment",
    "fill",
    "real",
    "okay",
    "course",
    "filling",
    "example",
    "want",
    "point",
    "um",
    "uh",
    "know",
    "going",
    "follow",
    "procedure",
    "slightly",
    "different",
    "one",
    "uh",
    "okay",
    "back",
    "second",
    "right",
    "logged",
    "uh",
    "one",
    "ad",
    "accounts",
    "lot",
    "think",
    "one",
    "developers",
    "one",
    "uh",
    "particular",
    "follow",
    "long",
    "would",
    "created",
    "s3",
    "bucket",
    "right",
    "um",
    "going",
    "go",
    "s3",
    "already",
    "know",
    "hard",
    "going",
    "go",
    "ahead",
    "create",
    "new",
    "bucket",
    "going",
    "make",
    "note",
    "region",
    "deploying",
    "s3",
    "bit",
    "unique",
    "shows",
    "global",
    "still",
    "deploying",
    "specific",
    "region",
    "go",
    "ahead",
    "create",
    "bucket",
    "going",
    "say",
    "validator",
    "bu",
    "test",
    "notice",
    "deploying",
    "us",
    "east",
    "one",
    "could",
    "change",
    "anything",
    "else",
    "like",
    "ca",
    "central",
    "um",
    "canada",
    "hurt",
    "deploy",
    "go",
    "go",
    "way",
    "going",
    "go",
    "create",
    "bucket",
    "okay",
    "um",
    "bucket",
    "name",
    "forget",
    "like",
    "something",
    "like",
    "validator",
    "need",
    "copy",
    "name",
    "go",
    "back",
    "asking",
    "bucket",
    "name",
    "bucket",
    "name",
    "need",
    "account",
    "id",
    "always",
    "appears",
    "top",
    "right",
    "corner",
    "nice",
    "um",
    "clipboard",
    "button",
    "get",
    "region",
    "deploy",
    "ca",
    "central",
    "1",
    "says",
    "ca",
    "central",
    "one",
    "always",
    "using",
    "uh",
    "programmer",
    "name",
    "full",
    "name",
    "fun",
    "handle",
    "see",
    "right",
    "hand",
    "side",
    "sure",
    "go",
    "back",
    "paste",
    "user",
    "region",
    "going",
    "create",
    "um",
    "cloud",
    "formation",
    "template",
    "going",
    "give",
    "access",
    "us",
    "uh",
    "account",
    "go",
    "ahead",
    "hit",
    "save",
    "continue",
    "uh",
    "inputed",
    "parameters",
    "saved",
    "saying",
    "need",
    "access",
    "cloud",
    "resources",
    "want",
    "generate",
    "cloud",
    "formation",
    "template",
    "going",
    "press",
    "button",
    "wait",
    "moment",
    "either",
    "download",
    "template",
    "use",
    "ads",
    "cli",
    "run",
    "um",
    "cli",
    "command",
    "lot",
    "easier",
    "use",
    "going",
    "recommend",
    "always",
    "uh",
    "going",
    "generate",
    "cli",
    "command",
    "going",
    "get",
    "oneline",
    "command",
    "going",
    "go",
    "back",
    "aws",
    "sorry",
    "know",
    "going",
    "really",
    "fast",
    "top",
    "left",
    "corner",
    "little",
    "button",
    "cloud",
    "shell",
    "going",
    "open",
    "know",
    "coding",
    "scary",
    "really",
    "important",
    "get",
    "much",
    "coding",
    "experience",
    "scripting",
    "strongly",
    "recommend",
    "follow",
    "along",
    "uh",
    "going",
    "open",
    "open",
    "paste",
    "sometimes",
    "wants",
    "kind",
    "ebs",
    "storage",
    "might",
    "say",
    "yes",
    "wait",
    "little",
    "bit",
    "um",
    "norm",
    "cloud",
    "storage",
    "going",
    "go",
    "back",
    "going",
    "copy",
    "command",
    "okay",
    "going",
    "go",
    "back",
    "going",
    "right",
    "click",
    "paste",
    "uh",
    "always",
    "happens",
    "multitext",
    "line",
    "got",
    "pop",
    "going",
    "review",
    "looks",
    "good",
    "notice",
    "template",
    "url",
    "template",
    "pulling",
    "um",
    "temporary",
    "credentials",
    "uh",
    "allow",
    "uh",
    "going",
    "create",
    "stack",
    "name",
    "called",
    "exam",
    "pro",
    "validation",
    "going",
    "say",
    "capability",
    "named",
    "might",
    "fail",
    "done",
    "go",
    "ahead",
    "paste",
    "going",
    "hit",
    "enter",
    "looks",
    "like",
    "creating",
    "stack",
    "go",
    "cloud",
    "formation",
    "uh",
    "go",
    "get",
    "way",
    "want",
    "open",
    "right",
    "going",
    "give",
    "refresh",
    "create",
    "right",
    "name",
    "stack",
    "right",
    "exam",
    "pro",
    "validation",
    "correct",
    "go",
    "uh",
    "date",
    "today",
    "even",
    "know",
    "cuz",
    "might",
    "older",
    "date",
    "mean",
    "november",
    "think",
    "one",
    "worked",
    "already",
    "uh",
    "working",
    "um",
    "going",
    "going",
    "go",
    "ahead",
    "delete",
    "one",
    "okay",
    "want",
    "point",
    "like",
    "multiple",
    "validators",
    "system",
    "always",
    "roll",
    "back",
    "tear",
    "okay",
    "like",
    "old",
    "one",
    "delete",
    "one",
    "strong",
    "confidence",
    "actually",
    "deployed",
    "back",
    "moment",
    "tears",
    "right",
    "actually",
    "uh",
    "finish",
    "tearing",
    "um",
    "going",
    "go",
    "back",
    "going",
    "attempt",
    "run",
    "command",
    "go",
    "ahead",
    "copy",
    "paste",
    "say",
    "paste",
    "hit",
    "enter",
    "uh",
    "says",
    "already",
    "existed",
    "sack",
    "well",
    "talking",
    "definitely",
    "uh",
    "definitely",
    "thought",
    "would",
    "get",
    "error",
    "first",
    "time",
    "around",
    "ca",
    "central",
    "1",
    "oh",
    "know",
    "north",
    "virginia",
    "got",
    "careful",
    "um",
    "regions",
    "go",
    "delete",
    "one",
    "another",
    "one",
    "confused",
    "thought",
    "already",
    "existed",
    "delete",
    "th",
    "normal",
    "cloud",
    "right",
    "understand",
    "follow",
    "alongs",
    "edit",
    "tricky",
    "parts",
    "know",
    "makes",
    "little",
    "bit",
    "confusing",
    "really",
    "help",
    "uh",
    "demonstrate",
    "uh",
    "confusing",
    "cloud",
    "work",
    "problems",
    "see",
    "central",
    "deployed",
    "date",
    "deployed",
    "makes",
    "sense",
    "uh",
    "uh",
    "got",
    "uh",
    "aware",
    "c",
    "central",
    "one",
    "uh",
    "go",
    "back",
    "done",
    "know",
    "done",
    "region",
    "expected",
    "uh",
    "permissions",
    "done",
    "run",
    "polar",
    "polar",
    "going",
    "going",
    "pull",
    "data",
    "account",
    "uh",
    "uh",
    "way",
    "going",
    "uh",
    "able",
    "validate",
    "whether",
    "things",
    "correct",
    "go",
    "ahead",
    "run",
    "pull",
    "notice",
    "says",
    "s3",
    "api",
    "list",
    "buckets",
    "flashed",
    "really",
    "quickly",
    "way",
    "tool",
    "works",
    "actually",
    "using",
    "adus",
    "cli",
    "underneath",
    "going",
    "go",
    "ahead",
    "show",
    "uh",
    "show",
    "quick",
    "reference",
    "c",
    "pratic",
    "way",
    "um",
    "uh",
    "access",
    "uh",
    "information",
    "uh",
    "eight",
    "us",
    "probably",
    "show",
    "somewhere",
    "course",
    "command",
    "running",
    "believe",
    "know",
    "coded",
    "s3",
    "api",
    "like",
    "list",
    "buckets",
    "uh",
    "list",
    "buckets",
    "command",
    "ran",
    "really",
    "validator",
    "ads",
    "s3",
    "api",
    "list",
    "buckets",
    "okay",
    "notice",
    "returns",
    "back",
    "json",
    "get",
    "back",
    "payload",
    "storing",
    "itus",
    "account",
    "way",
    "delete",
    "period",
    "time",
    "remember",
    "much",
    "time",
    "hold",
    "data",
    "cuz",
    "really",
    "want",
    "um",
    "yeah",
    "returning",
    "back",
    "data",
    "somewhere",
    "buckets",
    "right",
    "pulled",
    "data",
    "run",
    "validator",
    "click",
    "run",
    "validator",
    "super",
    "fast",
    "already",
    "data",
    "downloaded",
    "one",
    "check",
    "says",
    "bucket",
    "matching",
    "name",
    "see",
    "loading",
    "json",
    "file",
    "called",
    "s3",
    "api",
    "list",
    "buckets",
    "always",
    "name",
    "json",
    "files",
    "commands",
    "looking",
    "buckets",
    "go",
    "top",
    "moment",
    "see",
    "buckets",
    "looking",
    "array",
    "trying",
    "match",
    "name",
    "called",
    "validator",
    "bucket",
    "provided",
    "us",
    "somewhere",
    "lot",
    "buckets",
    "account",
    "somewhere",
    "uh",
    "works",
    "um",
    "yeah",
    "look",
    "validators",
    "um",
    "uh",
    "try",
    "run",
    "validate",
    "uh",
    "able",
    "uh",
    "stuff",
    "okay",
    "see",
    "next",
    "one",
    "okay",
    "ciao",
    "oh",
    "wait",
    "wait",
    "wait",
    "wait",
    "wait",
    "wa",
    "wait",
    "show",
    "clean",
    "running",
    "screen",
    "done",
    "uh",
    "go",
    "cloud",
    "formation",
    "go",
    "ahead",
    "delete",
    "stack",
    "okay",
    "um",
    "going",
    "tear",
    "permissions",
    "longer",
    "access",
    "account",
    "um",
    "kind",
    "important",
    "thing",
    "um",
    "uh",
    "go",
    "ahead",
    "thing",
    "permissions",
    "asking",
    "exactly",
    "need",
    "access",
    "uh",
    "permissions",
    "generate",
    "get",
    "access",
    "uh",
    "s3",
    "bucket",
    "specifically",
    "accessing",
    "even",
    "left",
    "usually",
    "okay",
    "safe",
    "um",
    "know",
    "reason",
    "us",
    "access",
    "anymore",
    "obviously",
    "delete",
    "um",
    "yeah",
    "one",
    "gone",
    "absolutely",
    "done",
    "going",
    "go",
    "ahead",
    "close",
    "yeah",
    "hopefully",
    "uh",
    "makes",
    "pretty",
    "clear",
    "validators",
    "work",
    "system",
    "see",
    "benefit",
    "uh",
    "getting",
    "uh",
    "check",
    "real",
    "account",
    "music",
    "ciao",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "start",
    "journey",
    "asking",
    "important",
    "question",
    "first",
    "cloud",
    "computing",
    "cloud",
    "computing",
    "practice",
    "using",
    "network",
    "remote",
    "servers",
    "hosted",
    "internet",
    "store",
    "manage",
    "process",
    "data",
    "rather",
    "local",
    "server",
    "personal",
    "computer",
    "talking",
    "premise",
    "servers",
    "hire",
    "people",
    "pay",
    "rent",
    "real",
    "estate",
    "take",
    "risks",
    "cloud",
    "provider",
    "uh",
    "someone",
    "else",
    "owns",
    "servers",
    "someone",
    "else",
    "hires",
    "people",
    "someone",
    "else",
    "pays",
    "rents",
    "real",
    "estate",
    "responsible",
    "configuring",
    "cloud",
    "services",
    "code",
    "someone",
    "takes",
    "care",
    "rest",
    "music",
    "okay",
    "understand",
    "cloud",
    "computing",
    "need",
    "look",
    "evolution",
    "cloud",
    "hosting",
    "going",
    "way",
    "back",
    "1995",
    "wanted",
    "host",
    "website",
    "web",
    "app",
    "get",
    "dedicated",
    "server",
    "would",
    "one",
    "physical",
    "machine",
    "dedicated",
    "single",
    "business",
    "running",
    "single",
    "project",
    "site",
    "app",
    "imagine",
    "expensive",
    "uh",
    "buy",
    "right",
    "hardware",
    "place",
    "store",
    "network",
    "connection",
    "person",
    "maintain",
    "um",
    "give",
    "guarantee",
    "high",
    "security",
    "um",
    "still",
    "today",
    "model",
    "gone",
    "away",
    "specialized",
    "particular",
    "use",
    "case",
    "came",
    "along",
    "virtual",
    "private",
    "server",
    "idea",
    "still",
    "one",
    "physical",
    "machine",
    "able",
    "subdivide",
    "machine",
    "submachines",
    "via",
    "virtualization",
    "essentially",
    "running",
    "machine",
    "within",
    "machine",
    "better",
    "utilization",
    "machine",
    "um",
    "running",
    "multiple",
    "web",
    "apps",
    "opposed",
    "physical",
    "machine",
    "per",
    "project",
    "got",
    "better",
    "utilization",
    "isolation",
    "resources",
    "uh",
    "two",
    "options",
    "still",
    "required",
    "purchase",
    "machine",
    "machine",
    "dedicated",
    "machine",
    "still",
    "kind",
    "expensive",
    "came",
    "along",
    "shared",
    "hosting",
    "remember",
    "uh",
    "mid",
    "2000s",
    "like",
    "godaddy",
    "hostgator",
    "sites",
    "really",
    "cheap",
    "hosting",
    "idea",
    "one",
    "physical",
    "machine",
    "shared",
    "hundreds",
    "businesses",
    "way",
    "worked",
    "relied",
    "uh",
    "tenants",
    "underutilizing",
    "resources",
    "know",
    "would",
    "submachine",
    "folder",
    "permissions",
    "could",
    "use",
    "um",
    "would",
    "really",
    "share",
    "cost",
    "cheap",
    "um",
    "limited",
    "whatever",
    "machine",
    "could",
    "restricted",
    "terms",
    "functionality",
    "poor",
    "isolation",
    "meaning",
    "know",
    "one",
    "person",
    "decided",
    "utilize",
    "server",
    "could",
    "hang",
    "websites",
    "single",
    "server",
    "came",
    "along",
    "cloud",
    "hosting",
    "idea",
    "um",
    "multiple",
    "physical",
    "machines",
    "act",
    "one",
    "system",
    "distributed",
    "computing",
    "system",
    "abstracted",
    "multiple",
    "cloud",
    "services",
    "idea",
    "basically",
    "get",
    "advantages",
    "lot",
    "things",
    "flexible",
    "add",
    "servers",
    "um",
    "scalable",
    "secure",
    "get",
    "uh",
    "virtual",
    "isolation",
    "get",
    "extremely",
    "low",
    "cost",
    "sharing",
    "cost",
    "users",
    "shared",
    "hosting",
    "might",
    "hundreds",
    "businesses",
    "looking",
    "thousands",
    "businesses",
    "also",
    "highly",
    "configurable",
    "full",
    "virtual",
    "machine",
    "uh",
    "cloud",
    "actually",
    "uh",
    "still",
    "includes",
    "types",
    "hosting",
    "gone",
    "away",
    "uh",
    "idea",
    "selection",
    "use",
    "case",
    "uh",
    "hopefully",
    "gives",
    "idea",
    "uh",
    "cloud",
    "hosting",
    "looks",
    "like",
    "really",
    "come",
    "distributed",
    "computing",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "talk",
    "aws",
    "need",
    "know",
    "amazon",
    "amazon",
    "american",
    "multinational",
    "computer",
    "technology",
    "corporation",
    "headquartered",
    "seattle",
    "washington",
    "seattle",
    "skyline",
    "bas",
    "needle",
    "amazon",
    "founded",
    "1994",
    "jeff",
    "bezos",
    "company",
    "started",
    "online",
    "store",
    "books",
    "expanded",
    "products",
    "see",
    "jeff",
    "bezos",
    "long",
    "time",
    "ago",
    "interesting",
    "spray",
    "painted",
    "sign",
    "desk",
    "held",
    "cinder",
    "blocks",
    "looks",
    "like",
    "uh",
    "desk",
    "like",
    "old",
    "uh",
    "table",
    "something",
    "working",
    "really",
    "late",
    "used",
    "millionaire",
    "time",
    "would",
    "driving",
    "work",
    "honda",
    "accord",
    "know",
    "motivation",
    "always",
    "put",
    "money",
    "back",
    "company",
    "really",
    "shows",
    "worked",
    "really",
    "hard",
    "pay",
    "amazon",
    "expanded",
    "uh",
    "beyond",
    "online",
    "ecommerce",
    "store",
    "lot",
    "different",
    "things",
    "cloud",
    "computing",
    "amazon",
    "web",
    "services",
    "digital",
    "streaming",
    "amazon",
    "prime",
    "video",
    "prime",
    "music",
    "bought",
    "owned",
    "whole",
    "foods",
    "market",
    "grocery",
    "store",
    "artificials",
    "intelligence",
    "low",
    "orbit",
    "satellites",
    "uh",
    "lot",
    "stuff",
    "hard",
    "list",
    "jeff",
    "bezos",
    "today",
    "um",
    "ceo",
    "actually",
    "andy",
    "jasse",
    "current",
    "ceo",
    "amazon",
    "previously",
    "ceo",
    "aws",
    "jeff",
    "bezos",
    "focus",
    "space",
    "travel",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "amazon",
    "web",
    "services",
    "name",
    "amazon",
    "calls",
    "cloud",
    "provider",
    "service",
    "commonly",
    "referred",
    "aws",
    "old",
    "logo",
    "see",
    "full",
    "name",
    "new",
    "logo",
    "like",
    "showing",
    "old",
    "logo",
    "cubes",
    "best",
    "represent",
    "aws",
    "collection",
    "cloud",
    "services",
    "used",
    "together",
    "single",
    "unified",
    "api",
    "uh",
    "build",
    "uh",
    "lot",
    "different",
    "kinds",
    "workloads",
    "adus",
    "launched",
    "2006",
    "leading",
    "cloud",
    "service",
    "provider",
    "world",
    "put",
    "aster",
    "technically",
    "uh",
    "adus",
    "exist",
    "2006",
    "cloud",
    "service",
    "provider",
    "uh",
    "adus",
    "often",
    "initialized",
    "csp",
    "hear",
    "saying",
    "csp",
    "saying",
    "cloud",
    "service",
    "provider",
    "okay",
    "time",
    "look",
    "timeline",
    "services",
    "rolled",
    "first",
    "one",
    "came",
    "uh",
    "2004",
    "simple",
    "q",
    "service",
    "sqs",
    "service",
    "still",
    "exists",
    "today",
    "time",
    "service",
    "publicly",
    "available",
    "exactly",
    "cloud",
    "service",
    "provider",
    "time",
    "neither",
    "ads",
    "sqs",
    "couple",
    "years",
    "later",
    "simple",
    "storage",
    "service",
    "also",
    "known",
    "s3",
    "launched",
    "uh",
    "march",
    "2006",
    "couple",
    "months",
    "later",
    "elastic",
    "compute",
    "cloud",
    "also",
    "known",
    "ec2",
    "um",
    "ec2",
    "still",
    "uh",
    "like",
    "used",
    "service",
    "within",
    "aws",
    "like",
    "backbone",
    "pretty",
    "much",
    "everything",
    "2010",
    "reported",
    "retail",
    "sites",
    "migrated",
    "aws",
    "even",
    "amazon",
    "using",
    "ads",
    "uh",
    "full",
    "steam",
    "support",
    "industrywide",
    "training",
    "skill",
    "standardization",
    "ads",
    "began",
    "offering",
    "certification",
    "program",
    "computer",
    "engineers",
    "april",
    "2013",
    "uh",
    "type",
    "certifications",
    "speak",
    "um",
    "want",
    "know",
    "ads",
    "one",
    "leading",
    "uh",
    "cloud",
    "certifications",
    "want",
    "take",
    "look",
    "executive",
    "level",
    "today",
    "ceo",
    "adam",
    "former",
    "cto",
    "tableau",
    "spent",
    "decade",
    "adus",
    "vp",
    "marketing",
    "sales",
    "support",
    "left",
    "bit",
    "back",
    "uh",
    "wner",
    "cto",
    "aws",
    "uh",
    "cto",
    "pretty",
    "much",
    "entire",
    "time",
    "aw",
    "existed",
    "exception",
    "time",
    "first",
    "year",
    "famous",
    "uh",
    "quoting",
    "everything",
    "fails",
    "time",
    "jeff",
    "bar",
    "chief",
    "evangelist",
    "um",
    "ever",
    "wondering",
    "writing",
    "blog",
    "posts",
    "talking",
    "anys",
    "always",
    "jeff",
    "bar",
    "okay",
    "music",
    "right",
    "want",
    "expand",
    "cloud",
    "service",
    "provider",
    "also",
    "known",
    "csp",
    "lot",
    "things",
    "market",
    "might",
    "look",
    "like",
    "csp",
    "uh",
    "actually",
    "let",
    "go",
    "list",
    "see",
    "makes",
    "csp",
    "company",
    "provides",
    "multiple",
    "cloud",
    "services",
    "ranging",
    "tens",
    "hundreds",
    "services",
    "cloud",
    "services",
    "chained",
    "together",
    "create",
    "cloud",
    "architectures",
    "cloud",
    "services",
    "accessible",
    "via",
    "single",
    "unified",
    "api",
    "ad",
    "cases",
    "adus",
    "api",
    "um",
    "access",
    "cli",
    "sdk",
    "management",
    "console",
    "cloud",
    "services",
    "utilize",
    "metered",
    "building",
    "based",
    "usage",
    "could",
    "per",
    "second",
    "per",
    "hour",
    "uh",
    "vpcu",
    "memory",
    "storage",
    "things",
    "like",
    "cloud",
    "services",
    "rich",
    "monitoring",
    "built",
    "know",
    "every",
    "api",
    "action",
    "tracked",
    "access",
    "case",
    "cloud",
    "trail",
    "idea",
    "cloud",
    "services",
    "infrastructure",
    "service",
    "offering",
    "ias",
    "means",
    "networking",
    "compute",
    "uh",
    "storage",
    "databases",
    "things",
    "like",
    "cloud",
    "services",
    "offers",
    "automation",
    "via",
    "infrastructure",
    "code",
    "write",
    "code",
    "set",
    "everything",
    "kind",
    "example",
    "architecture",
    "simple",
    "uh",
    "web",
    "application",
    "running",
    "ec2",
    "behind",
    "load",
    "bouncer",
    "domain",
    "r",
    "53",
    "idea",
    "show",
    "know",
    "changing",
    "things",
    "together",
    "company",
    "offers",
    "multiple",
    "cloud",
    "services",
    "single",
    "ui",
    "meet",
    "requirements",
    "would",
    "referred",
    "cloud",
    "platform",
    "hear",
    "twilio",
    "hashi",
    "corp",
    "datab",
    "bricks",
    "cloud",
    "platforms",
    "adab",
    "us",
    "azure",
    "gcp",
    "cloud",
    "service",
    "providers",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "landscape",
    "cl",
    "service",
    "providers",
    "generally",
    "broken",
    "tier",
    "one",
    "tier",
    "2",
    "tier",
    "three",
    "modified",
    "give",
    "tier",
    "name",
    "like",
    "think",
    "rankings",
    "uh",
    "cloud",
    "service",
    "providers",
    "specialized",
    "uh",
    "particular",
    "thing",
    "um",
    "also",
    "added",
    "fourth",
    "tier",
    "know",
    "internet",
    "always",
    "talked",
    "three",
    "tiers",
    "really",
    "fourth",
    "tier",
    "wanted",
    "make",
    "sure",
    "uh",
    "full",
    "scope",
    "included",
    "top",
    "tier",
    "going",
    "recognize",
    "uh",
    "common",
    "names",
    "amazon",
    "web",
    "service",
    "microsoft",
    "azure",
    "google",
    "cloud",
    "platform",
    "alibaba",
    "cloud",
    "north",
    "america",
    "europe",
    "uh",
    "adab",
    "us",
    "azure",
    "gcp",
    "known",
    "big",
    "three",
    "um",
    "alibaba",
    "cloud",
    "huge",
    "well",
    "asia",
    "region",
    "specifically",
    "china",
    "really",
    "going",
    "dependent",
    "live",
    "uh",
    "considered",
    "um",
    "commonly",
    "known",
    "popular",
    "uh",
    "talk",
    "moment",
    "reason",
    "um",
    "call",
    "tier",
    "one",
    "top",
    "tier",
    "know",
    "providers",
    "ear",
    "early",
    "market",
    "strong",
    "synergies",
    "services",
    "um",
    "really",
    "good",
    "cloud",
    "service",
    "providers",
    "go",
    "wrong",
    "uh",
    "providers",
    "tier",
    "two",
    "would",
    "call",
    "tier",
    "uh",
    "backed",
    "really",
    "tech",
    "companies",
    "would",
    "say",
    "um",
    "ability",
    "become",
    "top",
    "tier",
    "uh",
    "work",
    "way",
    "planned",
    "ibm",
    "one",
    "point",
    "looking",
    "top",
    "tier",
    "provider",
    "um",
    "keep",
    "um",
    "aws",
    "slipped",
    "mid",
    "tier",
    "kind",
    "specialized",
    "least",
    "ml",
    "ai",
    "services",
    "like",
    "expensive",
    "um",
    "enterprise",
    "uh",
    "managed",
    "infrastructure",
    "existing",
    "clientele",
    "oracle",
    "um",
    "inexpensive",
    "play",
    "try",
    "uh",
    "cheapest",
    "uh",
    "service",
    "um",
    "overall",
    "uh",
    "fun",
    "use",
    "interestingly",
    "enough",
    "believe",
    "microsoft",
    "azure",
    "signing",
    "contract",
    "use",
    "oracle",
    "cloud",
    "unusual",
    "cloud",
    "service",
    "providers",
    "organizations",
    "use",
    "providers",
    "want",
    "use",
    "global",
    "infrastructure",
    "uh",
    "yeah",
    "oracle",
    "cloud",
    "uh",
    "great",
    "ones",
    "asia",
    "region",
    "like",
    "hawaii",
    "cloud",
    "10cent",
    "cloud",
    "honestly",
    "know",
    "whole",
    "lot",
    "show",
    "magic",
    "quadrant",
    "possible",
    "asia",
    "region",
    "big",
    "three",
    "uh",
    "aws",
    "azure",
    "gcp",
    "play",
    "larger",
    "role",
    "perspective",
    "put",
    "mid",
    "tier",
    "global",
    "uh",
    "awareness",
    "global",
    "um",
    "market",
    "dominance",
    "like",
    "three",
    "uh",
    "looking",
    "light",
    "tier",
    "uh",
    "traditionally",
    "virtual",
    "private",
    "servers",
    "specialized",
    "turn",
    "offer",
    "core",
    "infrastructure",
    "service",
    "offerings",
    "vulture",
    "saw",
    "pronounced",
    "voler",
    "actually",
    "vulture",
    "digital",
    "ocean",
    "aimi",
    "connected",
    "cloud",
    "formerly",
    "known",
    "leno",
    "lenoe",
    "um",
    "merg",
    "companies",
    "together",
    "mean",
    "want",
    "like",
    "cloud",
    "service",
    "providers",
    "light",
    "terms",
    "offering",
    "um",
    "know",
    "things",
    "like",
    "serverless",
    "able",
    "run",
    "uh",
    "kubernetes",
    "cluster",
    "cloud",
    "storage",
    "stuff",
    "wo",
    "things",
    "like",
    "um",
    "level",
    "event",
    "driven",
    "um",
    "metered",
    "billing",
    "kinds",
    "uh",
    "functionality",
    "come",
    "expect",
    "top",
    "tiers",
    "know",
    "working",
    "smaller",
    "organization",
    "lot",
    "simpler",
    "uh",
    "utilize",
    "great",
    "introduction",
    "cloud",
    "companies",
    "find",
    "top",
    "tier",
    "uh",
    "complex",
    "looking",
    "fourth",
    "tier",
    "call",
    "private",
    "tier",
    "basically",
    "software",
    "deploy",
    "onto",
    "uh",
    "machines",
    "data",
    "centers",
    "get",
    "kind",
    "um",
    "functionality",
    "would",
    "using",
    "let",
    "say",
    "adabs",
    "providers",
    "um",
    "know",
    "previously",
    "would",
    "put",
    "open",
    "stack",
    "mid",
    "tier",
    "sense",
    "kind",
    "like",
    "cloud",
    "service",
    "provider",
    "using",
    "uh",
    "quite",
    "bit",
    "feel",
    "like",
    "good",
    "fit",
    "made",
    "fourth",
    "tier",
    "different",
    "softwares",
    "open",
    "stack",
    "apachi",
    "cloud",
    "stack",
    "open",
    "source",
    "vmware",
    "vpar",
    "aster",
    "really",
    "thing",
    "used",
    "lot",
    "everywhere",
    "manage",
    "lot",
    "virtual",
    "machines",
    "kind",
    "feel",
    "like",
    "fit",
    "gives",
    "kind",
    "idea",
    "landscape",
    "cloud",
    "see",
    "next",
    "music",
    "one",
    "determine",
    "leader",
    "cloud",
    "well",
    "one",
    "way",
    "indicating",
    "gardner",
    "magic",
    "quadrant",
    "cloud",
    "magic",
    "quadrant",
    "series",
    "market",
    "research",
    "reports",
    "published",
    "consulting",
    "firm",
    "gard",
    "rely",
    "proprietary",
    "qualitative",
    "qualitative",
    "data",
    "analysis",
    "methods",
    "demonstrate",
    "market",
    "trends",
    "direction",
    "maturity",
    "participants",
    "says",
    "series",
    "reports",
    "uh",
    "thing",
    "ever",
    "seen",
    "graphics",
    "show",
    "um",
    "uh",
    "quadrant",
    "diagram",
    "summarizes",
    "information",
    "think",
    "might",
    "pay",
    "access",
    "uh",
    "reports",
    "um",
    "definitely",
    "uh",
    "publicly",
    "accessible",
    "knowledge",
    "think",
    "would",
    "show",
    "uh",
    "stuff",
    "calculated",
    "uh",
    "let",
    "take",
    "look",
    "graphic",
    "notice",
    "challengers",
    "top",
    "left",
    "corner",
    "leaders",
    "top",
    "right",
    "corner",
    "bottom",
    "left",
    "corner",
    "niche",
    "players",
    "bottom",
    "right",
    "corner",
    "visionaries",
    "idea",
    "closer",
    "top",
    "corner",
    "uh",
    "better",
    "one",
    "closest",
    "amazon",
    "web",
    "services",
    "followed",
    "microsoft",
    "pretty",
    "close",
    "uh",
    "second",
    "google",
    "left",
    "alibaba",
    "cloud",
    "next",
    "oracle",
    "ibm",
    "10cent",
    "hawaii",
    "players",
    "small",
    "showing",
    "showed",
    "landscape",
    "csps",
    "um",
    "maybe",
    "first",
    "consider",
    "call",
    "first",
    "tier",
    "top",
    "tier",
    "cloud",
    "service",
    "providers",
    "really",
    "useful",
    "look",
    "last",
    "year",
    "uh",
    "mq",
    "see",
    "things",
    "moved",
    "looks",
    "like",
    "uh",
    "uh",
    "microsoft",
    "shifted",
    "little",
    "bit",
    "forward",
    "gone",
    "little",
    "bit",
    "closer",
    "google",
    "cifically",
    "moved",
    "um",
    "alibaba",
    "cloud",
    "seems",
    "moving",
    "uh",
    "right",
    "um",
    "showing",
    "movements",
    "year",
    "year",
    "oracle",
    "way",
    "whatever",
    "reason",
    "huawei",
    "cloud",
    "board",
    "interesting",
    "see",
    "move",
    "another",
    "thing",
    "um",
    "interesting",
    "one",
    "2022",
    "june",
    "one",
    "july",
    "2021",
    "right",
    "time",
    "recording",
    "video",
    "2023",
    "near",
    "end",
    "year",
    "um",
    "could",
    "find",
    "2023",
    "one",
    "even",
    "says",
    "june",
    "july",
    "release",
    "october",
    "november",
    "etc",
    "way",
    "later",
    "year",
    "whatever",
    "reason",
    "yet",
    "make",
    "um",
    "latest",
    "one",
    "available",
    "still",
    "curious",
    "see",
    "giving",
    "information",
    "look",
    "stuff",
    "um",
    "basically",
    "garder",
    "website",
    "want",
    "see",
    "um",
    "magic",
    "quadrants",
    "industries",
    "find",
    "compan",
    "really",
    "well",
    "always",
    "post",
    "website",
    "easy",
    "find",
    "uh",
    "magic",
    "quadrant",
    "cloud",
    "website",
    "leader",
    "definitely",
    "want",
    "show",
    "uh",
    "yeah",
    "music",
    "go",
    "cloud",
    "service",
    "provider",
    "hundreds",
    "cloud",
    "services",
    "grouped",
    "various",
    "types",
    "services",
    "four",
    "common",
    "types",
    "cloud",
    "services",
    "infrastructures",
    "service",
    "uh",
    "call",
    "four",
    "core",
    "would",
    "compute",
    "imagine",
    "virtual",
    "computer",
    "run",
    "applications",
    "programs",
    "code",
    "networking",
    "imagine",
    "virtual",
    "network",
    "defining",
    "internet",
    "connections",
    "network",
    "isolation",
    "services",
    "outbound",
    "internet",
    "storage",
    "imagine",
    "virtual",
    "hard",
    "drive",
    "store",
    "files",
    "databases",
    "imagine",
    "virtual",
    "database",
    "storing",
    "reporting",
    "data",
    "database",
    "general",
    "purpose",
    "web",
    "applications",
    "uh",
    "aws",
    "particular",
    "200",
    "plus",
    "cloud",
    "services",
    "want",
    "clarify",
    "cloud",
    "computing",
    "means",
    "notice",
    "cloud",
    "computing",
    "cloud",
    "networking",
    "cloud",
    "storage",
    "cloud",
    "databases",
    "industry",
    "often",
    "says",
    "cloud",
    "computing",
    "refer",
    "categories",
    "even",
    "though",
    "uh",
    "computer",
    "name",
    "understand",
    "someone",
    "says",
    "cloud",
    "computing",
    "uh",
    "generally",
    "mean",
    "subcategory",
    "talking",
    "cloud",
    "okay",
    "music",
    "adus",
    "lot",
    "different",
    "cloud",
    "services",
    "want",
    "kind",
    "go",
    "quickly",
    "types",
    "categories",
    "encounter",
    "mention",
    "four",
    "core",
    "csp",
    "ias",
    "always",
    "four",
    "core",
    "service",
    "offerings",
    "computes",
    "nat",
    "would",
    "ec2",
    "vms",
    "storage",
    "could",
    "something",
    "like",
    "ebs",
    "virtual",
    "hard",
    "drives",
    "database",
    "could",
    "rds",
    "sql",
    "databases",
    "networking",
    "content",
    "delivery",
    "really",
    "networking",
    "uh",
    "would",
    "vpc",
    "private",
    "cloud",
    "network",
    "okay",
    "uh",
    "let",
    "look",
    "categories",
    "outside",
    "four",
    "core",
    "could",
    "analytics",
    "application",
    "integration",
    "arvr",
    "ads",
    "cost",
    "management",
    "blockchain",
    "business",
    "application",
    "containers",
    "customer",
    "engagement",
    "developer",
    "tools",
    "user",
    "computing",
    "game",
    "tech",
    "iot",
    "machine",
    "learning",
    "management",
    "governance",
    "media",
    "services",
    "migration",
    "uh",
    "transfer",
    "mobile",
    "quantum",
    "technology",
    "robotics",
    "satellites",
    "security",
    "identity",
    "compliance",
    "would",
    "surprised",
    "see",
    "lot",
    "stuff",
    "going",
    "let",
    "take",
    "look",
    "ita",
    "services",
    "available",
    "us",
    "marketing",
    "website",
    "adab",
    "see",
    "top",
    "left",
    "corner",
    "products",
    "categories",
    "whatever",
    "want",
    "like",
    "ec2",
    "go",
    "read",
    "usually",
    "overview",
    "right",
    "useful",
    "go",
    "features",
    "kind",
    "useful",
    "get",
    "basic",
    "information",
    "pricing",
    "something",
    "lot",
    "aws",
    "always",
    "going",
    "going",
    "service",
    "looking",
    "price",
    "make",
    "way",
    "uh",
    "every",
    "single",
    "one",
    "different",
    "uh",
    "important",
    "page",
    "would",
    "like",
    "getting",
    "started",
    "give",
    "basic",
    "information",
    "like",
    "go",
    "way",
    "bottom",
    "find",
    "way",
    "documentation",
    "go",
    "documentation",
    "get",
    "deeper",
    "knowledge",
    "service",
    "see",
    "things",
    "get",
    "pretty",
    "deep",
    "aws",
    "terms",
    "information",
    "hopefully",
    "gives",
    "idea",
    "scope",
    "also",
    "logged",
    "aws",
    "create",
    "account",
    "uh",
    "explore",
    "services",
    "way",
    "well",
    "ad",
    "services",
    "uh",
    "notice",
    "two",
    "ways",
    "uh",
    "explore",
    "actually",
    "actually",
    "utilizing",
    "services",
    "marketing",
    "website",
    "reading",
    "learning",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "evolution",
    "computing",
    "cloud",
    "service",
    "provider",
    "offerings",
    "idea",
    "need",
    "choose",
    "one",
    "meets",
    "use",
    "case",
    "lot",
    "times",
    "come",
    "around",
    "utilization",
    "space",
    "trying",
    "illustrate",
    "section",
    "might",
    "want",
    "use",
    "offerings",
    "okay",
    "dedicated",
    "talking",
    "uh",
    "physically",
    "physical",
    "server",
    "wholly",
    "utilized",
    "single",
    "customer",
    "considered",
    "single",
    "tenant",
    "uh",
    "google",
    "cloud",
    "talking",
    "um",
    "single",
    "node",
    "clusters",
    "bare",
    "metal",
    "machines",
    "control",
    "virtualization",
    "install",
    "kind",
    "hypervisor",
    "virtualization",
    "wanted",
    "system",
    "though",
    "guess",
    "upfront",
    "capacity",
    "going",
    "never",
    "going",
    "100",
    "utilize",
    "machine",
    "going",
    "bit",
    "case",
    "utilization",
    "goes",
    "choosing",
    "cp",
    "use",
    "memories",
    "going",
    "end",
    "overpaying",
    "uh",
    "underutilized",
    "server",
    "uh",
    "going",
    "easy",
    "vertically",
    "scale",
    "like",
    "say",
    "resize",
    "machine",
    "right",
    "ca",
    "add",
    "mean",
    "suppose",
    "insert",
    "memory",
    "manual",
    "migration",
    "uh",
    "difficult",
    "um",
    "replacing",
    "server",
    "also",
    "difficult",
    "okay",
    "limited",
    "host",
    "operating",
    "system",
    "virtualized",
    "whatever",
    "um",
    "apps",
    "going",
    "access",
    "decide",
    "run",
    "one",
    "app",
    "good",
    "practice",
    "kind",
    "machines",
    "uh",
    "going",
    "end",
    "uh",
    "resource",
    "sharing",
    "one",
    "machine",
    "might",
    "utilize",
    "others",
    "technically",
    "dedicated",
    "machine",
    "guarantee",
    "security",
    "privacy",
    "full",
    "utility",
    "underlying",
    "resources",
    "put",
    "aster",
    "yes",
    "secure",
    "uh",
    "make",
    "sure",
    "secure",
    "skills",
    "security",
    "right",
    "whereas",
    "virtual",
    "machine",
    "anything",
    "responsibility",
    "cloud",
    "service",
    "provider",
    "provide",
    "secure",
    "machine",
    "better",
    "job",
    "would",
    "use",
    "dedicated",
    "machine",
    "well",
    "maybe",
    "high",
    "performance",
    "computing",
    "need",
    "machines",
    "like",
    "close",
    "together",
    "choose",
    "kind",
    "virtualization",
    "need",
    "okay",
    "looking",
    "virtual",
    "machines",
    "idea",
    "run",
    "machine",
    "within",
    "machine",
    "way",
    "works",
    "hypervisor",
    "software",
    "layer",
    "lets",
    "run",
    "virtual",
    "machines",
    "uh",
    "idea",
    "share",
    "cost",
    "multiple",
    "customers",
    "paying",
    "fraction",
    "server",
    "uh",
    "still",
    "end",
    "overpaying",
    "underutilized",
    "virtual",
    "machine",
    "virtual",
    "machine",
    "like",
    "still",
    "say",
    "many",
    "v",
    "vcpus",
    "much",
    "memory",
    "app",
    "want",
    "app",
    "uses",
    "100",
    "right",
    "want",
    "use",
    "exactly",
    "amount",
    "need",
    "see",
    "know",
    "still",
    "going",
    "underutilization",
    "uh",
    "limited",
    "guest",
    "operating",
    "system",
    "virtualized",
    "least",
    "easy",
    "uh",
    "possibly",
    "migrate",
    "away",
    "choose",
    "run",
    "uh",
    "one",
    "app",
    "virtual",
    "machine",
    "still",
    "run",
    "resource",
    "sharing",
    "conflicts",
    "uh",
    "easier",
    "export",
    "import",
    "images",
    "migration",
    "easier",
    "vertically",
    "horizontally",
    "scale",
    "okay",
    "virtual",
    "machines",
    "common",
    "popular",
    "offering",
    "compute",
    "people",
    "comfortable",
    "containers",
    "idea",
    "virtual",
    "machine",
    "running",
    "things",
    "called",
    "containers",
    "way",
    "similar",
    "hypervisor",
    "instead",
    "um",
    "like",
    "docker",
    "demon",
    "um",
    "container",
    "uh",
    "software",
    "layer",
    "okay",
    "run",
    "containers",
    "different",
    "kinds",
    "docker",
    "popular",
    "uh",
    "great",
    "thing",
    "maximize",
    "uh",
    "capacity",
    "easily",
    "add",
    "new",
    "containers",
    "resize",
    "containers",
    "use",
    "rest",
    "space",
    "lot",
    "flexible",
    "okay",
    "uh",
    "containers",
    "share",
    "underlying",
    "os",
    "efficient",
    "multiple",
    "vms",
    "uh",
    "multiple",
    "apps",
    "run",
    "side",
    "side",
    "without",
    "limited",
    "uh",
    "os",
    "requirements",
    "cause",
    "conflicts",
    "resource",
    "sharing",
    "containers",
    "really",
    "good",
    "know",
    "tradeoff",
    "lot",
    "work",
    "maintain",
    "functions",
    "functions",
    "go",
    "even",
    "step",
    "idea",
    "uh",
    "containers",
    "talked",
    "lot",
    "work",
    "maintain",
    "cloud",
    "service",
    "provider",
    "taking",
    "care",
    "containers",
    "generally",
    "sometimes",
    "depends",
    "serverless",
    "idea",
    "even",
    "think",
    "called",
    "seress",
    "compute",
    "even",
    "think",
    "uh",
    "os",
    "anything",
    "know",
    "runtime",
    "run",
    "ruby",
    "python",
    "node",
    "upload",
    "code",
    "say",
    "uh",
    "want",
    "able",
    "run",
    "uh",
    "uh",
    "long",
    "uh",
    "use",
    "amount",
    "memory",
    "okay",
    "responsible",
    "code",
    "data",
    "nothing",
    "else",
    "cost",
    "effective",
    "pay",
    "time",
    "code",
    "running",
    "uh",
    "vms",
    "run",
    "code",
    "executed",
    "concept",
    "cold",
    "starts",
    "uh",
    "machine",
    "spin",
    "sometimes",
    "requests",
    "bit",
    "slow",
    "bit",
    "tradeoff",
    "functions",
    "serverless",
    "compute",
    "generally",
    "one",
    "best",
    "offerings",
    "today",
    "people",
    "still",
    "getting",
    "kind",
    "comfortable",
    "paradigm",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "types",
    "cloud",
    "computing",
    "best",
    "way",
    "represent",
    "stacked",
    "pyramid",
    "start",
    "way",
    "top",
    "sas",
    "also",
    "known",
    "software",
    "service",
    "product",
    "run",
    "managed",
    "cloud",
    "service",
    "provider",
    "worry",
    "service",
    "maintained",
    "works",
    "remains",
    "available",
    "examples",
    "actually",
    "uh",
    "first",
    "uh",
    "company",
    "coin",
    "actually",
    "salesforce",
    "um",
    "things",
    "like",
    "gmail",
    "office",
    "65",
    "think",
    "microsoft",
    "word",
    "excel",
    "things",
    "like",
    "run",
    "cloud",
    "okay",
    "sas",
    "generally",
    "designed",
    "customers",
    "mind",
    "came",
    "along",
    "platforms",
    "service",
    "um",
    "also",
    "known",
    "pass",
    "focus",
    "development",
    "sorry",
    "deployment",
    "management",
    "apps",
    "worry",
    "provisioning",
    "configuring",
    "understanding",
    "hardware",
    "operating",
    "system",
    "things",
    "like",
    "elastic",
    "beant",
    "stock",
    "heroku",
    "popular",
    "among",
    "developers",
    "want",
    "launch",
    "code",
    "google",
    "app",
    "engine",
    "old",
    "logo",
    "logo",
    "like",
    "use",
    "think",
    "looks",
    "cool",
    "intended",
    "developers",
    "idea",
    "deploy",
    "code",
    "um",
    "platform",
    "rest",
    "infrastructure",
    "service",
    "um",
    "way",
    "say",
    "like",
    "easy",
    "say",
    "sas",
    "pass",
    "easy",
    "way",
    "say",
    "ias",
    "basic",
    "building",
    "blocks",
    "cloud",
    "provides",
    "access",
    "networking",
    "features",
    "computers",
    "data",
    "storage",
    "space",
    "idea",
    "worry",
    "staff",
    "data",
    "centers",
    "hardware",
    "would",
    "like",
    "microsoft",
    "azure",
    "aws",
    "oracle",
    "cloud",
    "things",
    "like",
    "administrators",
    "okay",
    "go",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "cloud",
    "computing",
    "deployment",
    "models",
    "starting",
    "public",
    "cloud",
    "idea",
    "everything",
    "say",
    "everything",
    "talking",
    "workloads",
    "projects",
    "code",
    "built",
    "cloud",
    "service",
    "provider",
    "diagram",
    "ec2",
    "instance",
    "virtual",
    "machine",
    "running",
    "application",
    "database",
    "rds",
    "internet",
    "coming",
    "adus",
    "account",
    "everything",
    "contained",
    "infrastructure",
    "within",
    "aws",
    "right",
    "uh",
    "known",
    "cloud",
    "native",
    "cloud",
    "first",
    "put",
    "aster",
    "beside",
    "cloud",
    "native",
    "term",
    "uh",
    "used",
    "prior",
    "cloud",
    "service",
    "providers",
    "refer",
    "containers",
    "source",
    "um",
    "uh",
    "models",
    "deployed",
    "mobile",
    "places",
    "understand",
    "two",
    "meanings",
    "context",
    "cloud",
    "native",
    "like",
    "native",
    "cloud",
    "like",
    "using",
    "cloud",
    "begin",
    "okay",
    "private",
    "cloud",
    "everything",
    "built",
    "company",
    "data",
    "center",
    "uh",
    "built",
    "data",
    "center",
    "known",
    "premise",
    "data",
    "center",
    "resides",
    "near",
    "work",
    "could",
    "using",
    "cloud",
    "using",
    "openstack",
    "would",
    "private",
    "cloud",
    "premise",
    "data",
    "center",
    "uh",
    "internet",
    "coming",
    "data",
    "center",
    "running",
    "open",
    "stack",
    "launch",
    "virtual",
    "machines",
    "database",
    "okay",
    "concept",
    "hybrid",
    "cloud",
    "using",
    "premise",
    "cloud",
    "service",
    "provider",
    "together",
    "idea",
    "premise",
    "data",
    "center",
    "established",
    "connection",
    "maybe",
    "vpn",
    "connection",
    "maybe",
    "direct",
    "connection",
    "um",
    "idea",
    "bridging",
    "connection",
    "uh",
    "utilizing",
    "private",
    "public",
    "uh",
    "stuff",
    "uh",
    "create",
    "cloud",
    "workload",
    "fourth",
    "one",
    "called",
    "cross",
    "cloud",
    "um",
    "sometimes",
    "known",
    "multicloud",
    "sometimes",
    "erroneously",
    "referred",
    "hybrid",
    "cloud",
    "generally",
    "hybrid",
    "cloud",
    "okay",
    "idea",
    "using",
    "multiple",
    "cloud",
    "providers",
    "one",
    "example",
    "could",
    "using",
    "services",
    "like",
    "azure",
    "arc",
    "azure",
    "arc",
    "allows",
    "extend",
    "um",
    "control",
    "plane",
    "uh",
    "deploy",
    "containers",
    "kubernetes",
    "um",
    "azure",
    "within",
    "amazon",
    "eks",
    "within",
    "gcp",
    "kubernetes",
    "engine",
    "know",
    "cross",
    "cloud",
    "necessarily",
    "mean",
    "running",
    "uh",
    "using",
    "service",
    "use",
    "works",
    "across",
    "cloud",
    "manages",
    "could",
    "mean",
    "using",
    "multiple",
    "providers",
    "time",
    "another",
    "service",
    "similar",
    "azure",
    "arch",
    "google",
    "cloud",
    "uh",
    "platform",
    "also",
    "know",
    "anthos",
    "um",
    "adab",
    "us",
    "traditionally",
    "um",
    "cross",
    "cloud",
    "uh",
    "friendly",
    "seen",
    "kind",
    "developments",
    "see",
    "uh",
    "services",
    "cloud",
    "service",
    "providers",
    "behind",
    "aws",
    "trying",
    "promote",
    "uh",
    "grab",
    "market",
    "share",
    "music",
    "okay",
    "let",
    "talk",
    "different",
    "deployment",
    "models",
    "kind",
    "companies",
    "organizations",
    "still",
    "utilizing",
    "uh",
    "particular",
    "categories",
    "cloud",
    "fly",
    "utilizing",
    "cloud",
    "computing",
    "hybrid",
    "combination",
    "public",
    "cloud",
    "private",
    "cloud",
    "prem",
    "deploying",
    "resources",
    "premise",
    "using",
    "virtualization",
    "resource",
    "management",
    "tools",
    "sometimes",
    "called",
    "private",
    "cloud",
    "could",
    "utilizing",
    "something",
    "like",
    "open",
    "stack",
    "companies",
    "starting",
    "today",
    "small",
    "enough",
    "make",
    "leap",
    "virtual",
    "private",
    "server",
    "cloud",
    "service",
    "provider",
    "looking",
    "cloud",
    "looking",
    "startups",
    "sas",
    "offerings",
    "new",
    "projects",
    "companies",
    "um",
    "maybe",
    "would",
    "like",
    "base",
    "camp",
    "dropbox",
    "squarespace",
    "hybrid",
    "organizations",
    "started",
    "data",
    "center",
    "ca",
    "fully",
    "move",
    "cloud",
    "due",
    "effort",
    "migration",
    "security",
    "compliance",
    "talking",
    "banks",
    "fintech",
    "investment",
    "management",
    "large",
    "professional",
    "servic",
    "providers",
    "legacy",
    "prem",
    "maybe",
    "cibc",
    "bank",
    "deoe",
    "uh",
    "ccp",
    "cpp",
    "investment",
    "board",
    "premise",
    "organizations",
    "run",
    "cloud",
    "due",
    "strict",
    "regulatory",
    "compliance",
    "sheer",
    "size",
    "organization",
    "like",
    "outdated",
    "uh",
    "idea",
    "cloud",
    "lot",
    "uh",
    "difficulties",
    "terms",
    "politics",
    "adopting",
    "cloud",
    "um",
    "would",
    "public",
    "sector",
    "like",
    "government",
    "super",
    "sens",
    "data",
    "like",
    "hospitals",
    "large",
    "enterprise",
    "heavy",
    "regul",
    "insurance",
    "companies",
    "um",
    "hospitals",
    "maybe",
    "aig",
    "government",
    "canada",
    "say",
    "using",
    "cloud",
    "um",
    "know",
    "uh",
    "adabs",
    "cloud",
    "service",
    "providers",
    "um",
    "uh",
    "public",
    "sector",
    "offering",
    "um",
    "know",
    "trying",
    "stage",
    "example",
    "things",
    "could",
    "still",
    "using",
    "premise",
    "know",
    "know",
    "government",
    "canada",
    "definitely",
    "uses",
    "uh",
    "cloud",
    "lot",
    "ways",
    "aig",
    "hospitals",
    "know",
    "generally",
    "last",
    "holdouts",
    "prem",
    "really",
    "good",
    "reason",
    "fully",
    "premise",
    "anymore",
    "uh",
    "things",
    "still",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "start",
    "journey",
    "creating",
    "adus",
    "account",
    "need",
    "go",
    "adab",
    "us",
    "lot",
    "confidence",
    "get",
    "type",
    "adus",
    "google",
    "click",
    "link",
    "says",
    "adabs",
    "take",
    "place",
    "notice",
    "big",
    "orange",
    "button",
    "top",
    "right",
    "corner",
    "says",
    "sign",
    "os",
    "console",
    "um",
    "first",
    "time",
    "ever",
    "website",
    "go",
    "ads",
    "incognito",
    "create",
    "anus",
    "account",
    "button",
    "um",
    "know",
    "keep",
    "consistent",
    "across",
    "board",
    "wish",
    "screen",
    "click",
    "um",
    "see",
    "something",
    "say",
    "uh",
    "know",
    "create",
    "account",
    "etc",
    "sign",
    "okay",
    "hit",
    "create",
    "new",
    "account",
    "way",
    "going",
    "get",
    "going",
    "put",
    "email",
    "password",
    "create",
    "adist",
    "account",
    "name",
    "um",
    "created",
    "many",
    "times",
    "hard",
    "set",
    "new",
    "emails",
    "going",
    "complicated",
    "one",
    "thing",
    "need",
    "tell",
    "need",
    "credit",
    "card",
    "create",
    "account",
    "without",
    "credit",
    "card",
    "um",
    "places",
    "maybe",
    "traditional",
    "credit",
    "card",
    "maybe",
    "get",
    "prepaid",
    "one",
    "canada",
    "company",
    "called",
    "coo",
    "coo",
    "um",
    "visa",
    "debit",
    "card",
    "basically",
    "virtual",
    "prepaid",
    "credit",
    "card",
    "work",
    "platform",
    "well",
    "traditional",
    "credit",
    "card",
    "possibly",
    "could",
    "find",
    "one",
    "uh",
    "still",
    "load",
    "money",
    "give",
    "bit",
    "flexibility",
    "create",
    "account",
    "want",
    "go",
    "process",
    "complicated",
    "see",
    "end",
    "okay",
    "finished",
    "creating",
    "account",
    "within",
    "adus",
    "management",
    "console",
    "page",
    "always",
    "going",
    "see",
    "log",
    "always",
    "going",
    "show",
    "recent",
    "services",
    "um",
    "notice",
    "top",
    "right",
    "corner",
    "account",
    "called",
    "exam",
    "pro",
    "wondering",
    "change",
    "name",
    "go",
    "accounts",
    "account",
    "settings",
    "go",
    "edit",
    "uh",
    "change",
    "name",
    "okay",
    "know",
    "sometimes",
    "create",
    "account",
    "like",
    "account",
    "name",
    "gave",
    "opportunity",
    "fix",
    "um",
    "account",
    "want",
    "immediately",
    "log",
    "want",
    "get",
    "familiar",
    "way",
    "log",
    "aws",
    "bit",
    "um",
    "different",
    "providers",
    "want",
    "uh",
    "get",
    "hung",
    "later",
    "account",
    "logged",
    "going",
    "go",
    "ahead",
    "log",
    "back",
    "click",
    "orange",
    "button",
    "like",
    "drop",
    "account",
    "go",
    "adus",
    "management",
    "console",
    "lot",
    "clear",
    "notice",
    "going",
    "two",
    "options",
    "root",
    "user",
    "user",
    "talking",
    "confusion",
    "log",
    "root",
    "user",
    "account",
    "always",
    "using",
    "email",
    "logging",
    "user",
    "actually",
    "going",
    "entering",
    "account",
    "id",
    "account",
    "alias",
    "go",
    "root",
    "user",
    "email",
    "use",
    "sign",
    "account",
    "uh",
    "called",
    "one",
    "andrew",
    "plus",
    "sandbox",
    "exampro",
    "doco",
    "going",
    "go",
    "next",
    "sometimes",
    "get",
    "character",
    "box",
    "annoying",
    "happens",
    "time",
    "time",
    "going",
    "go",
    "ahead",
    "type",
    "okay",
    "hopefully",
    "likes",
    "going",
    "enter",
    "password",
    "right",
    "back",
    "account",
    "notice",
    "takes",
    "back",
    "abis",
    "management",
    "console",
    "root",
    "account",
    "something",
    "want",
    "generally",
    "using",
    "uh",
    "except",
    "um",
    "particular",
    "use",
    "cases",
    "cover",
    "course",
    "uh",
    "want",
    "go",
    "set",
    "proper",
    "account",
    "go",
    "top",
    "type",
    "stands",
    "identity",
    "access",
    "management",
    "click",
    "left",
    "hand",
    "side",
    "going",
    "see",
    "bunch",
    "options",
    "um",
    "notice",
    "right",
    "away",
    "get",
    "dashboard",
    "going",
    "start",
    "make",
    "recommendations",
    "us",
    "first",
    "one",
    "always",
    "add",
    "mfa",
    "multiactor",
    "authentication",
    "another",
    "thing",
    "set",
    "account",
    "alias",
    "see",
    "set",
    "one",
    "prior",
    "go",
    "ahead",
    "remove",
    "way",
    "log",
    "via",
    "account",
    "alias",
    "uh",
    "account",
    "id",
    "really",
    "like",
    "going",
    "rename",
    "deep",
    "space",
    "9",
    "uh",
    "unique",
    "pick",
    "something",
    "unique",
    "could",
    "company",
    "name",
    "things",
    "like",
    "going",
    "make",
    "lot",
    "easier",
    "log",
    "uh",
    "create",
    "additional",
    "user",
    "come",
    "back",
    "mfa",
    "point",
    "want",
    "go",
    "users",
    "go",
    "ahead",
    "make",
    "new",
    "user",
    "going",
    "call",
    "one",
    "andrew",
    "brown",
    "going",
    "enable",
    "programmatic",
    "access",
    "going",
    "enable",
    "adus",
    "management",
    "console",
    "one",
    "going",
    "allow",
    "use",
    "apis",
    "programmatically",
    "work",
    "ads",
    "one",
    "going",
    "allow",
    "log",
    "console",
    "uh",
    "pretty",
    "fair",
    "autogenerate",
    "give",
    "custom",
    "password",
    "going",
    "autogenerate",
    "time",
    "says",
    "must",
    "create",
    "new",
    "password",
    "next",
    "sign",
    "sounds",
    "fair",
    "go",
    "ahead",
    "create",
    "new",
    "group",
    "pretty",
    "common",
    "create",
    "group",
    "called",
    "admin",
    "notice",
    "going",
    "bunch",
    "different",
    "policies",
    "first",
    "one",
    "admin",
    "access",
    "provides",
    "full",
    "access",
    "ao",
    "services",
    "resources",
    "pretty",
    "much",
    "gives",
    "almost",
    "nearly",
    "almost",
    "capabilities",
    "um",
    "aws",
    "root",
    "user",
    "account",
    "uh",
    "going",
    "okay",
    "admin",
    "account",
    "checkbox",
    "want",
    "show",
    "dro",
    "filter",
    "policies",
    "went",
    "adus",
    "manage",
    "job",
    "functions",
    "bunch",
    "uh",
    "uh",
    "adus",
    "uh",
    "policies",
    "could",
    "apply",
    "uh",
    "different",
    "users",
    "really",
    "popular",
    "administrator",
    "access",
    "usually",
    "give",
    "power",
    "user",
    "access",
    "one",
    "allows",
    "um",
    "user",
    "basically",
    "anything",
    "want",
    "exception",
    "management",
    "users",
    "groups",
    "know",
    "could",
    "something",
    "want",
    "users",
    "want",
    "trouble",
    "going",
    "give",
    "us",
    "um",
    "admin",
    "access",
    "going",
    "go",
    "ahead",
    "create",
    "group",
    "group",
    "creating",
    "going",
    "go",
    "next",
    "apply",
    "tags",
    "want",
    "going",
    "bother",
    "going",
    "hit",
    "next",
    "review",
    "hit",
    "create",
    "user",
    "right",
    "showing",
    "us",
    "access",
    "id",
    "access",
    "uh",
    "key",
    "secret",
    "use",
    "programmatically",
    "access",
    "aws",
    "password",
    "going",
    "go",
    "ahead",
    "show",
    "going",
    "copy",
    "clipboard",
    "anywhere",
    "copying",
    "screen",
    "going",
    "need",
    "log",
    "going",
    "remember",
    "username",
    "well",
    "right",
    "go",
    "ahead",
    "hit",
    "close",
    "go",
    "back",
    "dashboard",
    "remember",
    "set",
    "account",
    "alias",
    "deep",
    "space",
    "9",
    "could",
    "also",
    "use",
    "account",
    "id",
    "log",
    "going",
    "grab",
    "account",
    "id",
    "screen",
    "want",
    "go",
    "ahead",
    "log",
    "log",
    "user",
    "one",
    "always",
    "using",
    "uh",
    "within",
    "ad",
    "account",
    "using",
    "root",
    "user",
    "account",
    "go",
    "user",
    "notice",
    "says",
    "account",
    "id",
    "12",
    "digits",
    "account",
    "alas",
    "enter",
    "uh",
    "numbers",
    "enter",
    "alias",
    "deep",
    "space",
    "9",
    "come",
    "creative",
    "uh",
    "one",
    "go",
    "ahead",
    "hit",
    "next",
    "notice",
    "going",
    "ask",
    "im",
    "username",
    "name",
    "defined",
    "mine",
    "andrew",
    "brown",
    "uh",
    "autogenerated",
    "password",
    "saw",
    "going",
    "place",
    "go",
    "ahead",
    "hit",
    "sign",
    "right",
    "away",
    "going",
    "ask",
    "reset",
    "password",
    "going",
    "put",
    "old",
    "password",
    "need",
    "new",
    "password",
    "strongly",
    "recommend",
    "generate",
    "uh",
    "passwords",
    "strong",
    "like",
    "go",
    "password",
    "generator",
    "drop",
    "something",
    "really",
    "long",
    "like",
    "48",
    "characters",
    "um",
    "like",
    "weird",
    "characters",
    "take",
    "sometimes",
    "loads",
    "got",
    "try",
    "twice",
    "um",
    "going",
    "go",
    "whoops",
    "48",
    "go",
    "pretty",
    "darn",
    "long",
    "going",
    "copy",
    "screen",
    "forget",
    "probably",
    "would",
    "want",
    "put",
    "password",
    "manager",
    "something",
    "like",
    "dashlane",
    "sort",
    "thing",
    "like",
    "go",
    "ahead",
    "paste",
    "see",
    "whoops",
    "want",
    "google",
    "save",
    "uh",
    "see",
    "takes",
    "go",
    "log",
    "make",
    "sure",
    "new",
    "password",
    "works",
    "really",
    "want",
    "problems",
    "later",
    "type",
    "deep",
    "space",
    "9",
    "andrew",
    "brown",
    "going",
    "based",
    "uh",
    "set",
    "go",
    "ahead",
    "log",
    "notice",
    "say",
    "um",
    "exam",
    "pro",
    "whatever",
    "says",
    "andrew",
    "brown",
    "deep",
    "space",
    "9",
    "using",
    "county",
    "ellias",
    "showing",
    "name",
    "going",
    "know",
    "whether",
    "root",
    "account",
    "user",
    "whether",
    "logged",
    "user",
    "right",
    "music",
    "go",
    "okay",
    "proper",
    "user",
    "account",
    "log",
    "want",
    "point",
    "uh",
    "regions",
    "top",
    "right",
    "corner",
    "notice",
    "says",
    "north",
    "virginia",
    "possibly",
    "say",
    "something",
    "completely",
    "else",
    "click",
    "drop",
    "see",
    "big",
    "list",
    "regions",
    "sometimes",
    "log",
    "ads",
    "likes",
    "default",
    "u",
    "east",
    "uh",
    "us",
    "east",
    "ohio",
    "honestly",
    "like",
    "launch",
    "stuff",
    "us",
    "east",
    "north",
    "virginia",
    "even",
    "though",
    "canada",
    "probably",
    "using",
    "canada",
    "central",
    "region",
    "um",
    "default",
    "region",
    "going",
    "based",
    "locality",
    "okay",
    "understand",
    "might",
    "different",
    "strongly",
    "recommend",
    "um",
    "follow",
    "alongs",
    "run",
    "us",
    "east",
    "one",
    "us",
    "east1",
    "original",
    "um",
    "original",
    "region",
    "also",
    "access",
    "ada",
    "services",
    "adaa",
    "services",
    "um",
    "like",
    "billing",
    "cost",
    "things",
    "like",
    "going",
    "show",
    "us",
    "east",
    "uh",
    "north",
    "virginia",
    "make",
    "lives",
    "lot",
    "easier",
    "going",
    "set",
    "want",
    "understand",
    "services",
    "global",
    "services",
    "meaning",
    "matter",
    "region",
    "going",
    "default",
    "global",
    "one",
    "example",
    "could",
    "cloudfront",
    "jump",
    "cloudfront",
    "moment",
    "uh",
    "seem",
    "uh",
    "clr",
    "distributions",
    "prior",
    "uh",
    "follow",
    "along",
    "notice",
    "says",
    "global",
    "clr",
    "require",
    "region",
    "selection",
    "let",
    "make",
    "way",
    "s3",
    "right",
    "one",
    "also",
    "global",
    "one",
    "require",
    "region",
    "selection",
    "go",
    "something",
    "like",
    "ec2",
    "okay",
    "region",
    "dependency",
    "really",
    "careful",
    "lot",
    "times",
    "follow",
    "along",
    "like",
    "resources",
    "whatever",
    "got",
    "switched",
    "happen",
    "time",
    "uh",
    "cautious",
    "aware",
    "music",
    "okay",
    "one",
    "major",
    "advantages",
    "using",
    "ads",
    "cloud",
    "service",
    "provider",
    "utilizes",
    "metered",
    "billing",
    "different",
    "fixed",
    "cost",
    "say",
    "okay",
    "want",
    "server",
    "x",
    "amount",
    "dollars",
    "every",
    "month",
    "way",
    "ats",
    "works",
    "going",
    "build",
    "hour",
    "second",
    "based",
    "bunch",
    "factors",
    "going",
    "able",
    "get",
    "services",
    "lower",
    "cost",
    "however",
    "choose",
    "expensive",
    "service",
    "forget",
    "misconfiguration",
    "thought",
    "launching",
    "something",
    "cost",
    "effective",
    "turned",
    "expensive",
    "could",
    "end",
    "large",
    "bill",
    "quickly",
    "uh",
    "major",
    "concern",
    "lot",
    "people",
    "utilizing",
    "cloud",
    "lot",
    "great",
    "toolings",
    "built",
    "ads",
    "allow",
    "catch",
    "happen",
    "make",
    "mistake",
    "go",
    "ahead",
    "learn",
    "want",
    "show",
    "uh",
    "place",
    "could",
    "end",
    "excessive",
    "spend",
    "without",
    "knowing",
    "one",
    "example",
    "actually",
    "happened",
    "first",
    "started",
    "using",
    "aws",
    "uh",
    "even",
    "knew",
    "billing",
    "tools",
    "wanted",
    "launch",
    "reddis",
    "uh",
    "instance",
    "watch",
    "um",
    "elasticache",
    "service",
    "allows",
    "launch",
    "either",
    "mem",
    "cach",
    "uh",
    "database",
    "wanted",
    "store",
    "single",
    "value",
    "went",
    "scrolled",
    "looked",
    "good",
    "hit",
    "create",
    "paying",
    "attention",
    "apparently",
    "itus",
    "likes",
    "default",
    "type",
    "cash",
    "r6g",
    "llarge",
    "right",
    "know",
    "might",
    "think",
    "adus",
    "best",
    "interest",
    "play",
    "services",
    "pretty",
    "good",
    "make",
    "sure",
    "either",
    "free",
    "low",
    "spend",
    "elastic",
    "cash",
    "older",
    "service",
    "weird",
    "defaults",
    "um",
    "know",
    "go",
    "look",
    "rg6",
    "uh",
    "large",
    "right",
    "look",
    "spend",
    "right",
    "would",
    "go",
    "whoops",
    "think",
    "went",
    "china",
    "one",
    "go",
    "look",
    "instance",
    "trying",
    "find",
    "cost",
    "one",
    "um",
    "say",
    "pricing",
    "say",
    "pricing",
    "one",
    "cost",
    "um",
    "one",
    "costs",
    "2",
    "cents",
    "per",
    "hour",
    "sound",
    "like",
    "lot",
    "go",
    "math",
    "say",
    "730",
    "730",
    "amount",
    "hours",
    "month",
    "150",
    "okay",
    "know",
    "forget",
    "going",
    "150",
    "going",
    "tell",
    "used",
    "lot",
    "higher",
    "pretty",
    "sure",
    "used",
    "default",
    "something",
    "like",
    "like",
    "remember",
    "bill",
    "came",
    "like",
    "usd",
    "canada",
    "like",
    "usd",
    "like",
    "million",
    "dollars",
    "remember",
    "um",
    "big",
    "concern",
    "freaked",
    "okay",
    "go",
    "support",
    "done",
    "went",
    "support",
    "center",
    "opened",
    "support",
    "case",
    "said",
    "hey",
    "really",
    "big",
    "bill",
    "go",
    "right",
    "look",
    "billing",
    "uh",
    "look",
    "something",
    "like",
    "charging",
    "query",
    "misspend",
    "say",
    "know",
    "um",
    "know",
    "like",
    "help",
    "bill",
    "high",
    "say",
    "like",
    "explain",
    "problem",
    "saying",
    "hey",
    "know",
    "using",
    "elastic",
    "cash",
    "set",
    "large",
    "default",
    "aware",
    "please",
    "give",
    "back",
    "money",
    "great",
    "thing",
    "ads",
    "going",
    "give",
    "free",
    "pass",
    "first",
    "time",
    "misspending",
    "generally",
    "say",
    "okay",
    "um",
    "know",
    "happens",
    "get",
    "build",
    "go",
    "ahead",
    "learn",
    "set",
    "billing",
    "alerts",
    "things",
    "like",
    "okay",
    "know",
    "freak",
    "really",
    "high",
    "bill",
    "going",
    "get",
    "single",
    "free",
    "pass",
    "know",
    "let",
    "go",
    "learn",
    "uh",
    "set",
    "budget",
    "music",
    "okay",
    "right",
    "bit",
    "story",
    "um",
    "spend",
    "misconfiguration",
    "let",
    "learn",
    "protect",
    "going",
    "go",
    "ahead",
    "set",
    "budget",
    "go",
    "top",
    "type",
    "budget",
    "bring",
    "us",
    "billing",
    "dashboard",
    "another",
    "way",
    "get",
    "go",
    "click",
    "top",
    "go",
    "billing",
    "dashboard",
    "see",
    "leftand",
    "menu",
    "great",
    "thing",
    "budgets",
    "first",
    "two",
    "free",
    "says",
    "additional",
    "charge",
    "budgets",
    "pay",
    "configured",
    "us",
    "usage",
    "pretty",
    "sure",
    "true",
    "used",
    "abs",
    "budget",
    "reports",
    "okay",
    "cost",
    "something",
    "used",
    "abus",
    "budgets",
    "um",
    "success",
    "enabled",
    "occur",
    "10",
    "cents",
    "daily",
    "addition",
    "budget",
    "monitor",
    "add",
    "actions",
    "budgets",
    "first",
    "two",
    "action",
    "enable",
    "budgets",
    "free",
    "okay",
    "aware",
    "says",
    "additional",
    "charge",
    "read",
    "sometimes",
    "fine",
    "line",
    "tell",
    "cost",
    "something",
    "know",
    "first",
    "two",
    "free",
    "go",
    "ahead",
    "create",
    "budget",
    "going",
    "close",
    "tabs",
    "since",
    "need",
    "going",
    "presented",
    "bunch",
    "budget",
    "types",
    "uh",
    "considered",
    "cost",
    "today",
    "going",
    "go",
    "cost",
    "budget",
    "notice",
    "change",
    "period",
    "monthly",
    "daily",
    "quarterly",
    "annually",
    "change",
    "daily",
    "um",
    "wo",
    "get",
    "forecasting",
    "want",
    "today",
    "monthly",
    "pretty",
    "good",
    "reoccurring",
    "strongly",
    "recommended",
    "put",
    "fixed",
    "cost",
    "notice",
    "already",
    "spend",
    "account",
    "like",
    "25",
    "bucks",
    "last",
    "month",
    "going",
    "set",
    "uh",
    "budget",
    "100",
    "add",
    "filters",
    "um",
    "uh",
    "filter",
    "cost",
    "want",
    "say",
    "region",
    "things",
    "like",
    "could",
    "uh",
    "notice",
    "spend",
    "um",
    "budget",
    "actual",
    "cost",
    "notice",
    "cost",
    "going",
    "last",
    "months",
    "things",
    "account",
    "say",
    "simple",
    "budget",
    "hit",
    "next",
    "asking",
    "us",
    "want",
    "configure",
    "alerts",
    "probably",
    "hit",
    "add",
    "alert",
    "set",
    "threshold",
    "like",
    "80",
    "could",
    "say",
    "absolute",
    "value",
    "put",
    "emails",
    "like",
    "andrew",
    "exampro",
    "doco",
    "want",
    "point",
    "using",
    "um",
    "itus",
    "sns",
    "anyway",
    "amazon",
    "sns",
    "upfront",
    "cost",
    "based",
    "stuff",
    "even",
    "though",
    "filling",
    "email",
    "know",
    "maybe",
    "show",
    "pretty",
    "sure",
    "would",
    "create",
    "sns",
    "topic",
    "hit",
    "next",
    "alert",
    "uh",
    "reviewing",
    "actually",
    "attaching",
    "actions",
    "maybe",
    "want",
    "kind",
    "thing",
    "happen",
    "say",
    "add",
    "action",
    "uh",
    "require",
    "specific",
    "permissions",
    "behalf",
    "okay",
    "sure",
    "guess",
    "could",
    "follow",
    "actions",
    "different",
    "um",
    "building",
    "alarm",
    "really",
    "worried",
    "right",
    "going",
    "bother",
    "action",
    "go",
    "ahead",
    "create",
    "budget",
    "going",
    "say",
    "budget",
    "100",
    "going",
    "show",
    "us",
    "amount",
    "use",
    "forecast",
    "amount",
    "current",
    "budget",
    "sometimes",
    "takes",
    "time",
    "uh",
    "show",
    "going",
    "hit",
    "refresh",
    "see",
    "shows",
    "yet",
    "go",
    "notice",
    "forecasted",
    "amount",
    "23",
    "current",
    "budget",
    "etc",
    "forecasted",
    "budget",
    "uh",
    "forecasted",
    "versus",
    "budget",
    "pretty",
    "straightforward",
    "works",
    "u",
    "curious",
    "actually",
    "created",
    "sns",
    "event",
    "going",
    "go",
    "lot",
    "services",
    "utilize",
    "sns",
    "go",
    "default",
    "cloud",
    "watch",
    "alarm",
    "um",
    "think",
    "something",
    "created",
    "going",
    "go",
    "ahead",
    "delete",
    "says",
    "default",
    "cloud",
    "watch",
    "alarms",
    "going",
    "click",
    "see",
    "confirmed",
    "think",
    "might",
    "used",
    "created",
    "um",
    "reason",
    "bringing",
    "sns",
    "lot",
    "services",
    "allow",
    "uh",
    "email",
    "alerts",
    "always",
    "integrates",
    "service",
    "want",
    "kind",
    "want",
    "point",
    "remember",
    "sns",
    "um",
    "yeah",
    "setting",
    "budget",
    "hard",
    "music",
    "go",
    "right",
    "set",
    "budget",
    "want",
    "talk",
    "free",
    "tier",
    "free",
    "tier",
    "something",
    "available",
    "uh",
    "first",
    "12",
    "months",
    "new",
    "adus",
    "account",
    "allows",
    "utilize",
    "adus",
    "services",
    "without",
    "incurring",
    "cost",
    "advantage",
    "utilize",
    "free",
    "tier",
    "um",
    "experimenting",
    "learning",
    "cloud",
    "want",
    "learn",
    "offerings",
    "go",
    "google",
    "type",
    "adus",
    "free",
    "tier",
    "get",
    "page",
    "explains",
    "sorts",
    "things",
    "get",
    "uh",
    "750",
    "hours",
    "ec2",
    "rds",
    "things",
    "like",
    "stipulations",
    "terms",
    "would",
    "t2",
    "t3",
    "micel",
    "mic",
    "uh",
    "micro",
    "running",
    "linux",
    "red",
    "hat",
    "um",
    "type",
    "os",
    "okay",
    "uh",
    "details",
    "read",
    "fine",
    "print",
    "services",
    "available",
    "first",
    "two",
    "months",
    "things",
    "like",
    "going",
    "highly",
    "vary",
    "based",
    "service",
    "worth",
    "giving",
    "us",
    "read",
    "areas",
    "interested",
    "thing",
    "know",
    "still",
    "free",
    "tier",
    "go",
    "outside",
    "want",
    "talk",
    "right",
    "actually",
    "another",
    "ad",
    "account",
    "top",
    "right",
    "corner",
    "says",
    "brown",
    "laap",
    "hyphen",
    "laptop",
    "exampro",
    "doco",
    "sometimes",
    "switch",
    "different",
    "accounts",
    "fall",
    "alongs",
    "best",
    "show",
    "um",
    "know",
    "settings",
    "make",
    "way",
    "billing",
    "actually",
    "show",
    "go",
    "dealing",
    "b",
    "dashboard",
    "trying",
    "consistent",
    "go",
    "hand",
    "side",
    "billing",
    "preferences",
    "enable",
    "receive",
    "free",
    "tier",
    "usage",
    "alerts",
    "put",
    "email",
    "save",
    "turn",
    "feature",
    "receive",
    "email",
    "alerts",
    "adabs",
    "service",
    "usage",
    "approaching",
    "exceeded",
    "databus",
    "free",
    "tier",
    "usage",
    "limits",
    "wish",
    "receive",
    "alerts",
    "etc",
    "etc",
    "etc",
    "right",
    "want",
    "also",
    "checkbox",
    "receive",
    "billion",
    "alerts",
    "show",
    "set",
    "billion",
    "uh",
    "billi",
    "alert",
    "ad",
    "us",
    "says",
    "know",
    "budgets",
    "new",
    "thing",
    "bliing",
    "alerts",
    "still",
    "something",
    "use",
    "today",
    "checkbox",
    "able",
    "see",
    "cost",
    "go",
    "back",
    "uh",
    "show",
    "um",
    "free",
    "tier",
    "account",
    "would",
    "show",
    "alerts",
    "know",
    "usage",
    "example",
    "scroll",
    "documentation",
    "tracking",
    "ais",
    "free",
    "tier",
    "usage",
    "would",
    "see",
    "like",
    "box",
    "like",
    "would",
    "say",
    "hey",
    "free",
    "tier",
    "usage",
    "limit",
    "okay",
    "generally",
    "would",
    "show",
    "panel",
    "outside",
    "free",
    "tier",
    "seeing",
    "um",
    "today",
    "okay",
    "know",
    "hopefully",
    "clear",
    "um",
    "yeah",
    "go",
    "music",
    "right",
    "created",
    "budget",
    "monitoring",
    "free",
    "tier",
    "another",
    "way",
    "monitor",
    "spend",
    "building",
    "alerts",
    "alarms",
    "old",
    "way",
    "uh",
    "budget",
    "way",
    "could",
    "still",
    "recommend",
    "bit",
    "flexibility",
    "service",
    "wanted",
    "teach",
    "early",
    "know",
    "available",
    "want",
    "play",
    "around",
    "future",
    "go",
    "top",
    "type",
    "typ",
    "cloudwatch",
    "cloudwatch",
    "one",
    "services",
    "actually",
    "collection",
    "services",
    "cloudwatch",
    "alarms",
    "cloudwatch",
    "logs",
    "cloudwatch",
    "metrics",
    "individual",
    "services",
    "abus",
    "loves",
    "update",
    "interface",
    "sometimes",
    "present",
    "option",
    "uh",
    "change",
    "latest",
    "interface",
    "going",
    "try",
    "new",
    "interface",
    "um",
    "one",
    "challenge",
    "datab",
    "always",
    "expect",
    "going",
    "change",
    "ui",
    "going",
    "work",
    "understand",
    "try",
    "keep",
    "videos",
    "dat",
    "best",
    "part",
    "challenge",
    "getting",
    "used",
    "today",
    "know",
    "going",
    "stick",
    "looks",
    "like",
    "want",
    "make",
    "way",
    "alarms",
    "left",
    "hand",
    "side",
    "notice",
    "actually",
    "section",
    "billing",
    "interesting",
    "remember",
    "new",
    "uh",
    "says",
    "abus",
    "cloud",
    "watch",
    "help",
    "help",
    "monitor",
    "charges",
    "abus",
    "bill",
    "remember",
    "turn",
    "get",
    "10",
    "free",
    "alarms",
    "free",
    "email",
    "notifications",
    "month",
    "part",
    "free",
    "understand",
    "create",
    "billing",
    "alarms",
    "cost",
    "money",
    "um",
    "well",
    "go",
    "limit",
    "sure",
    "get",
    "lot",
    "10",
    "free",
    "alarms",
    "quite",
    "bit",
    "go",
    "ahead",
    "create",
    "alarm",
    "going",
    "go",
    "choose",
    "metric",
    "options",
    "choose",
    "think",
    "would",
    "like",
    "um",
    "billing",
    "see",
    "buy",
    "service",
    "total",
    "estimated",
    "charge",
    "going",
    "total",
    "estimated",
    "charge",
    "select",
    "usd",
    "never",
    "seen",
    "currency",
    "kind",
    "get",
    "little",
    "graph",
    "see",
    "stuff",
    "um",
    "lot",
    "powerful",
    "budgets",
    "anomaly",
    "detection",
    "uh",
    "like",
    "actually",
    "check",
    "base",
    "range",
    "opposed",
    "going",
    "particular",
    "value",
    "set",
    "value",
    "like",
    "uh",
    "50",
    "right",
    "notice",
    "sets",
    "line",
    "current",
    "spend",
    "right",
    "back",
    "anomaly",
    "detection",
    "lot",
    "smarter",
    "uh",
    "idea",
    "something",
    "outside",
    "inside",
    "band",
    "certain",
    "amounts",
    "um",
    "would",
    "alert",
    "okay",
    "going",
    "go",
    "back",
    "going",
    "set",
    "50",
    "looks",
    "okay",
    "change",
    "period",
    "6",
    "hours",
    "fine",
    "um",
    "additional",
    "configuration",
    "fine",
    "well",
    "going",
    "go",
    "ahead",
    "hit",
    "next",
    "uh",
    "idea",
    "um",
    "know",
    "passes",
    "red",
    "line",
    "go",
    "alarm",
    "state",
    "uh",
    "want",
    "uh",
    "trigger",
    "topic",
    "would",
    "generally",
    "create",
    "new",
    "one",
    "say",
    "billing",
    "alarm",
    "okay",
    "set",
    "email",
    "andre",
    "exam",
    "pro",
    "go",
    "ahead",
    "create",
    "topic",
    "set",
    "know",
    "would",
    "uh",
    "confirm",
    "might",
    "go",
    "email",
    "confirm",
    "notice",
    "says",
    "pending",
    "confirmation",
    "done",
    "sent",
    "email",
    "wants",
    "click",
    "link",
    "confirm",
    "um",
    "want",
    "subscribe",
    "might",
    "offc",
    "screen",
    "show",
    "okay",
    "going",
    "pull",
    "email",
    "give",
    "moment",
    "okay",
    "come",
    "back",
    "email",
    "came",
    "going",
    "confirm",
    "subscription",
    "says",
    "confirmed",
    "good",
    "refresh",
    "page",
    "see",
    "confirmed",
    "right",
    "scroll",
    "uh",
    "trigger",
    "autoscaling",
    "action",
    "maybe",
    "know",
    "many",
    "servers",
    "say",
    "hey",
    "cost",
    "much",
    "shut",
    "servers",
    "ec2",
    "actions",
    "things",
    "like",
    "kind",
    "similar",
    "um",
    "budgets",
    "right",
    "system",
    "manager",
    "actions",
    "imagine",
    "things",
    "available",
    "budgets",
    "well",
    "budgets",
    "makes",
    "little",
    "bit",
    "easier",
    "look",
    "say",
    "simple",
    "building",
    "alarm",
    "hit",
    "next",
    "right",
    "hit",
    "create",
    "alarm",
    "go",
    "billing",
    "alarms",
    "like",
    "forecasting",
    "things",
    "like",
    "um",
    "know",
    "kind",
    "special",
    "utility",
    "utilize",
    "okay",
    "go",
    "go",
    "back",
    "management",
    "console",
    "move",
    "next",
    "music",
    "one",
    "one",
    "strongest",
    "recommendations",
    "abus",
    "gives",
    "say",
    "set",
    "mfa",
    "adus",
    "root",
    "user",
    "account",
    "something",
    "going",
    "right",
    "make",
    "sure",
    "logged",
    "root",
    "user",
    "account",
    "going",
    "go",
    "log",
    "im",
    "user",
    "going",
    "go",
    "back",
    "log",
    "going",
    "log",
    "uh",
    "root",
    "user",
    "sometimes",
    "expanded",
    "user",
    "click",
    "sign",
    "root",
    "user",
    "root",
    "user",
    "going",
    "go",
    "ahead",
    "enter",
    "email",
    "used",
    "switch",
    "accounts",
    "frequently",
    "ask",
    "silly",
    "captures",
    "drive",
    "crazy",
    "uh",
    "know",
    "happens",
    "probably",
    "wo",
    "encounter",
    "much",
    "going",
    "go",
    "ahead",
    "grab",
    "password",
    "paste",
    "want",
    "want",
    "make",
    "way",
    "going",
    "go",
    "look",
    "users",
    "actually",
    "sorry",
    "right",
    "add",
    "mfa",
    "root",
    "user",
    "going",
    "go",
    "ahead",
    "hit",
    "add",
    "mfa",
    "right",
    "going",
    "bring",
    "us",
    "screen",
    "activate",
    "mfa",
    "options",
    "virtual",
    "mfa",
    "device",
    "u2f",
    "security",
    "key",
    "hardware",
    "like",
    "uh",
    "gem",
    "gem",
    "gy",
    "alto",
    "token",
    "know",
    "generally",
    "use",
    "security",
    "key",
    "want",
    "show",
    "talking",
    "log",
    "machine",
    "ad",
    "account",
    "security",
    "key",
    "ub",
    "key",
    "sits",
    "desk",
    "tape",
    "fall",
    "fall",
    "cord",
    "idea",
    "log",
    "press",
    "little",
    "button",
    "double",
    "confirm",
    "get",
    "account",
    "uh",
    "security",
    "key",
    "use",
    "virtual",
    "mfa",
    "means",
    "going",
    "um",
    "use",
    "something",
    "phone",
    "log",
    "click",
    "continue",
    "says",
    "install",
    "compatible",
    "app",
    "mobile",
    "phone",
    "device",
    "click",
    "open",
    "tell",
    "things",
    "use",
    "um",
    "scroll",
    "virtual",
    "suggest",
    "uh",
    "android",
    "iphone",
    "ai",
    "dual",
    "mobile",
    "last",
    "path",
    "microsoft",
    "authenticator",
    "google",
    "authenticator",
    "google",
    "authenticator",
    "microsoft",
    "authenticator",
    "three",
    "installed",
    "um",
    "honestly",
    "aie",
    "nicest",
    "simplest",
    "um",
    "ui",
    "using",
    "microsoft",
    "authen",
    "authenticator",
    "quite",
    "bit",
    "anyway",
    "whichever",
    "want",
    "fine",
    "go",
    "back",
    "says",
    "use",
    "virtual",
    "mfa",
    "app",
    "device",
    "camera",
    "scan",
    "qr",
    "code",
    "one",
    "apps",
    "installed",
    "like",
    "aie",
    "whatever",
    "one",
    "want",
    "going",
    "open",
    "application",
    "ca",
    "tell",
    "exactly",
    "hit",
    "add",
    "account",
    "app",
    "ask",
    "scan",
    "qr",
    "code",
    "ready",
    "hit",
    "show",
    "qr",
    "code",
    "hit",
    "scan",
    "qr",
    "code",
    "phone",
    "holding",
    "phone",
    "um",
    "uh",
    "computer",
    "screen",
    "going",
    "find",
    "going",
    "take",
    "moment",
    "rename",
    "account",
    "tell",
    "naming",
    "ws",
    "sandbox",
    "cuz",
    "call",
    "account",
    "going",
    "go",
    "ahead",
    "save",
    "enter",
    "uh",
    "two",
    "consecutive",
    "mfa",
    "codes",
    "always",
    "confused",
    "wanted",
    "idea",
    "going",
    "see",
    "one",
    "code",
    "right",
    "whatever",
    "screen",
    "right",
    "going",
    "type",
    "says",
    "734",
    "051",
    "going",
    "wait",
    "new",
    "code",
    "shows",
    "like",
    "timer",
    "apps",
    "go",
    "across",
    "screen",
    "count",
    "wait",
    "happen",
    "going",
    "wait",
    "little",
    "bit",
    "get",
    "new",
    "number",
    "one",
    "07153",
    "0",
    "going",
    "hit",
    "assign",
    "mfa",
    "go",
    "ca",
    "tell",
    "many",
    "times",
    "like",
    "messed",
    "understand",
    "consecutive",
    "numbers",
    "waiting",
    "uh",
    "number",
    "screen",
    "enter",
    "enter",
    "next",
    "one",
    "turn",
    "mfa",
    "account",
    "protected",
    "every",
    "time",
    "log",
    "going",
    "enter",
    "mfa",
    "let",
    "log",
    "see",
    "looks",
    "like",
    "go",
    "ahead",
    "sign",
    "uh",
    "put",
    "root",
    "user",
    "account",
    "type",
    "74m",
    "32t",
    "submit",
    "need",
    "go",
    "grab",
    "password",
    "password",
    "manager",
    "give",
    "moment",
    "wants",
    "mfa",
    "code",
    "phone",
    "going",
    "go",
    "enter",
    "one",
    "says",
    "475",
    "841",
    "right",
    "hit",
    "submit",
    "okay",
    "go",
    "going",
    "happen",
    "every",
    "single",
    "time",
    "want",
    "log",
    "uh",
    "going",
    "tell",
    "get",
    "one",
    "much",
    "easier",
    "use",
    "press",
    "button",
    "okay",
    "stand",
    "entering",
    "code",
    "time",
    "time",
    "um",
    "know",
    "options",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "concept",
    "innovation",
    "waves",
    "talking",
    "innovation",
    "waves",
    "talking",
    "krava",
    "k",
    "waves",
    "hypothesized",
    "cyclik",
    "phenomena",
    "global",
    "world",
    "economy",
    "phenomenon",
    "closely",
    "connected",
    "technology",
    "life",
    "cycles",
    "example",
    "wave",
    "irreversibly",
    "changes",
    "society",
    "global",
    "scale",
    "look",
    "across",
    "top",
    "kind",
    "see",
    "talking",
    "steam",
    "engine",
    "cotton",
    "uh",
    "railway",
    "steel",
    "electric",
    "engineering",
    "chemistry",
    "pet",
    "chemicals",
    "automobiles",
    "information",
    "technology",
    "idea",
    "cloud",
    "technology",
    "latest",
    "wave",
    "sure",
    "fit",
    "web",
    "3",
    "well",
    "ml",
    "ai",
    "maybe",
    "part",
    "wave",
    "separate",
    "waves",
    "generally",
    "broken",
    "based",
    "prde",
    "says",
    "perspective",
    "recession",
    "depression",
    "movement",
    "uh",
    "improvement",
    "sorry",
    "common",
    "pattern",
    "wave",
    "see",
    "change",
    "supply",
    "demand",
    "seeing",
    "know",
    "wave",
    "wave",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "concept",
    "burning",
    "platform",
    "burning",
    "platform",
    "term",
    "used",
    "company",
    "abandons",
    "old",
    "technology",
    "new",
    "technology",
    "uncertainty",
    "success",
    "motivated",
    "fear",
    "organization",
    "future",
    "surv",
    "uh",
    "survival",
    "hinges",
    "digital",
    "transformation",
    "kind",
    "give",
    "visualization",
    "literal",
    "burning",
    "platform",
    "platform",
    "imagine",
    "jump",
    "jump",
    "make",
    "change",
    "um",
    "know",
    "burning",
    "platform",
    "could",
    "know",
    "stop",
    "using",
    "prem",
    "start",
    "using",
    "cloud",
    "maybe",
    "going",
    "cloud",
    "web",
    "3",
    "um",
    "generally",
    "idea",
    "talk",
    "burning",
    "music",
    "platform",
    "want",
    "quickly",
    "show",
    "digital",
    "transformation",
    "checklist",
    "mentioned",
    "way",
    "get",
    "typing",
    "digital",
    "transformation",
    "aw",
    "us",
    "bring",
    "public",
    "sector",
    "page",
    "click",
    "pdf",
    "uh",
    "new",
    "2017",
    "mean",
    "uh",
    "valid",
    "anymore",
    "uh",
    "made",
    "scroll",
    "see",
    "transforming",
    "vision",
    "checklist",
    "click",
    "uh",
    "see",
    "things",
    "like",
    "communicate",
    "vision",
    "success",
    "looks",
    "like",
    "define",
    "clear",
    "governance",
    "strategy",
    "including",
    "framework",
    "achieving",
    "goals",
    "uh",
    "build",
    "cross",
    "functional",
    "team",
    "identify",
    "tech",
    "technical",
    "uh",
    "part",
    "ers",
    "talk",
    "shifting",
    "culture",
    "assume",
    "one",
    "related",
    "one",
    "unusual",
    "know",
    "checklist",
    "sub",
    "checklist",
    "must",
    "clear",
    "reorganize",
    "staff",
    "smaller",
    "teams",
    "things",
    "like",
    "super",
    "complicated",
    "see",
    "category",
    "go",
    "go",
    "cloud",
    "native",
    "checklist",
    "um",
    "know",
    "executive",
    "level",
    "sales",
    "level",
    "trying",
    "convince",
    "vps",
    "stuff",
    "like",
    "give",
    "read",
    "might",
    "give",
    "something",
    "uh",
    "useful",
    "end",
    "uh",
    "help",
    "better",
    "communicate",
    "transformation",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "evolution",
    "computing",
    "power",
    "computing",
    "power",
    "throughput",
    "measured",
    "computer",
    "complete",
    "computational",
    "tasks",
    "uh",
    "pretty",
    "much",
    "used",
    "right",
    "days",
    "general",
    "computing",
    "good",
    "example",
    "would",
    "zeon",
    "cpu",
    "processor",
    "uh",
    "processor",
    "something",
    "find",
    "home",
    "computer",
    "talking",
    "data",
    "centers",
    "specifically",
    "uh",
    "um",
    "know",
    "inabus",
    "data",
    "centers",
    "zeon",
    "cpu",
    "processors",
    "going",
    "come",
    "across",
    "uh",
    "came",
    "along",
    "new",
    "type",
    "compute",
    "gpu",
    "computing",
    "um",
    "talking",
    "google",
    "uh",
    "cloud",
    "tensor",
    "computing",
    "get",
    "50",
    "times",
    "faster",
    "based",
    "metric",
    "exact",
    "metric",
    "aws",
    "um",
    "solution",
    "mid",
    "tier",
    "computing",
    "power",
    "borrowed",
    "50",
    "times",
    "idea",
    "gp",
    "computing",
    "tensor",
    "computing",
    "uh",
    "50",
    "times",
    "faster",
    "traditional",
    "cpu",
    "generally",
    "going",
    "used",
    "uh",
    "specialized",
    "tasks",
    "machine",
    "learning",
    "ai",
    "something",
    "going",
    "uh",
    "regular",
    "uh",
    "web",
    "workloads",
    "understand",
    "uh",
    "fits",
    "getting",
    "rid",
    "general",
    "computing",
    "adding",
    "uh",
    "new",
    "levels",
    "compute",
    "latest",
    "uh",
    "quantum",
    "computing",
    "example",
    "rig",
    "r",
    "retti",
    "16q",
    "aspen",
    "4",
    "literally",
    "looks",
    "like",
    "um",
    "science",
    "fiction",
    "thing",
    "like",
    "100",
    "million",
    "times",
    "faster",
    "super",
    "cutting",
    "edge",
    "even",
    "know",
    "exactly",
    "works",
    "even",
    "anything",
    "applicable",
    "use",
    "idea",
    "done",
    "evolution",
    "computing",
    "power",
    "things",
    "going",
    "get",
    "lot",
    "faster",
    "solve",
    "last",
    "one",
    "service",
    "offering",
    "would",
    "general",
    "computing",
    "looking",
    "elastic",
    "compute",
    "cloud",
    "ec2",
    "variety",
    "different",
    "uh",
    "instance",
    "types",
    "going",
    "different",
    "types",
    "hardware",
    "different",
    "types",
    "general",
    "computing",
    "um",
    "gpu",
    "computing",
    "specialized",
    "chip",
    "adus",
    "produced",
    "called",
    "adus",
    "um",
    "know",
    "say",
    "abbreviate",
    "infer",
    "adus",
    "infer",
    "chip",
    "um",
    "designed",
    "direct",
    "competitor",
    "uh",
    "gcps",
    "uh",
    "tensor",
    "computing",
    "uh",
    "unit",
    "uh",
    "tpu",
    "um",
    "intended",
    "ai",
    "ml",
    "workloads",
    "works",
    "um",
    "tensor",
    "flow",
    "works",
    "machine",
    "learning",
    "framework",
    "one",
    "advantage",
    "uh",
    "tpus",
    "um",
    "last",
    "one",
    "adus",
    "brackets",
    "actually",
    "use",
    "quantum",
    "computing",
    "service",
    "adus",
    "uh",
    "even",
    "today",
    "um",
    "way",
    "adus",
    "able",
    "work",
    "caltech",
    "california",
    "technology",
    "um",
    "university",
    "institute",
    "sure",
    "name",
    "um",
    "exactly",
    "adus",
    "producing",
    "adus",
    "partnership",
    "give",
    "quantum",
    "computing",
    "accessible",
    "okay",
    "ab",
    "console",
    "want",
    "prove",
    "use",
    "quantum",
    "computing",
    "aws",
    "accessible",
    "go",
    "top",
    "type",
    "bracket",
    "uh",
    "make",
    "amazon",
    "bracket",
    "uh",
    "like",
    "set",
    "quantum",
    "tasks",
    "first",
    "time",
    "set",
    "got",
    "uh",
    "go",
    "process",
    "um",
    "think",
    "go",
    "onboarding",
    "able",
    "show",
    "next",
    "steps",
    "going",
    "go",
    "ahead",
    "enable",
    "bracket",
    "abis",
    "account",
    "okay",
    "going",
    "launch",
    "anything",
    "going",
    "try",
    "kind",
    "show",
    "little",
    "bit",
    "accessible",
    "super",
    "exciting",
    "fact",
    "kind",
    "interesting",
    "inside",
    "different",
    "types",
    "quantum",
    "computing",
    "know",
    "nq",
    "uh",
    "retti",
    "things",
    "like",
    "quantum",
    "processing",
    "units",
    "qpu",
    "simulators",
    "kind",
    "simulate",
    "uh",
    "things",
    "um",
    "think",
    "kind",
    "interesting",
    "uh",
    "terms",
    "cost",
    "like",
    "scroll",
    "um",
    "abis",
    "bracket",
    "part",
    "theus",
    "free",
    "tier",
    "gives",
    "one",
    "free",
    "hour",
    "quantum",
    "circuit",
    "simulation",
    "time",
    "per",
    "month",
    "first",
    "12",
    "months",
    "free",
    "uh",
    "circuit",
    "simulation",
    "actually",
    "want",
    "run",
    "actual",
    "hardware",
    "see",
    "cost",
    "per",
    "task",
    "price",
    "per",
    "shot",
    "price",
    "things",
    "like",
    "uh",
    "could",
    "know",
    "things",
    "called",
    "like",
    "quad",
    "bits",
    "something",
    "like",
    "ca",
    "imagine",
    "going",
    "anything",
    "useful",
    "think",
    "like",
    "sending",
    "quad",
    "bits",
    "whatever",
    "observing",
    "um",
    "could",
    "idea",
    "exciting",
    "spend",
    "activating",
    "kind",
    "showing",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "benefits",
    "cloud",
    "summary",
    "reasons",
    "organization",
    "would",
    "uh",
    "consider",
    "adopting",
    "migrating",
    "utilizing",
    "public",
    "cloud",
    "quickly",
    "go",
    "list",
    "uh",
    "followup",
    "slides",
    "actually",
    "go",
    "bit",
    "detailed",
    "agility",
    "page",
    "go",
    "economy",
    "scale",
    "global",
    "reach",
    "security",
    "reliability",
    "high",
    "availability",
    "scalability",
    "um",
    "elasticity",
    "thing",
    "eight",
    "us",
    "called",
    "six",
    "advantages",
    "cloud",
    "reworked",
    "include",
    "additional",
    "items",
    "um",
    "see",
    "uh",
    "sub",
    "bullets",
    "original",
    "six",
    "see",
    "1",
    "2",
    "3",
    "4",
    "five",
    "six",
    "kind",
    "put",
    "kind",
    "uh",
    "fall",
    "new",
    "categories",
    "notice",
    "included",
    "high",
    "availability",
    "elasticity",
    "reliability",
    "security",
    "uh",
    "new",
    "okay",
    "thing",
    "um",
    "always",
    "always",
    "even",
    "original",
    "uh",
    "uh",
    "think",
    "original",
    "cloud",
    "practitioner",
    "cloud",
    "architecture",
    "separate",
    "section",
    "included",
    "things",
    "great",
    "thing",
    "see",
    "abis",
    "included",
    "um",
    "terms",
    "organized",
    "course",
    "going",
    "cover",
    "section",
    "cloud",
    "architecture",
    "section",
    "understand",
    "come",
    "eventually",
    "would",
    "say",
    "adab",
    "us",
    "still",
    "missing",
    "something",
    "list",
    "fault",
    "tolerance",
    "know",
    "list",
    "like",
    "except",
    "would",
    "add",
    "fault",
    "tolerance",
    "everything",
    "um",
    "disaster",
    "recovery",
    "okay",
    "benefits",
    "cloud",
    "reworking",
    "expansion",
    "six",
    "advantages",
    "cloud",
    "look",
    "original",
    "six",
    "advantages",
    "um",
    "look",
    "another",
    "one",
    "generalized",
    "one",
    "used",
    "across",
    "courses",
    "fully",
    "understand",
    "benefits",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "six",
    "advantages",
    "cloud",
    "defined",
    "still",
    "uh",
    "part",
    "marketing",
    "pages",
    "um",
    "know",
    "interesting",
    "ca",
    "find",
    "benefits",
    "cloud",
    "single",
    "page",
    "least",
    "time",
    "making",
    "bit",
    "disconnect",
    "um",
    "exam",
    "guide",
    "actual",
    "marketing",
    "material",
    "okay",
    "fill",
    "know",
    "noting",
    "six",
    "advantage",
    "cloud",
    "original",
    "description",
    "cloud",
    "benefits",
    "go",
    "okay",
    "first",
    "trade",
    "capital",
    "expense",
    "variable",
    "variable",
    "expense",
    "pay",
    "demand",
    "meaning",
    "upfront",
    "cost",
    "pay",
    "consume",
    "pay",
    "hour",
    "minutes",
    "seconds",
    "instead",
    "paying",
    "upfront",
    "costs",
    "data",
    "centers",
    "servers",
    "next",
    "benefit",
    "uh",
    "massive",
    "eon",
    "uh",
    "economies",
    "scale",
    "sharing",
    "cost",
    "customers",
    "get",
    "unbeatable",
    "savings",
    "hundreds",
    "thousands",
    "customers",
    "utilizing",
    "fraction",
    "server",
    "stop",
    "guessing",
    "capacity",
    "scale",
    "meet",
    "current",
    "needs",
    "launch",
    "destroy",
    "services",
    "whenever",
    "instead",
    "paying",
    "idle",
    "underutilized",
    "servers",
    "increase",
    "speed",
    "agility",
    "launch",
    "resources",
    "within",
    "clicks",
    "minutes",
    "instead",
    "waiting",
    "days",
    "weeks",
    "implement",
    "solution",
    "premise",
    "stopped",
    "spending",
    "money",
    "running",
    "maintaining",
    "data",
    "centers",
    "focus",
    "customers",
    "developing",
    "configuring",
    "applications",
    "instead",
    "operations",
    "racking",
    "stacking",
    "powering",
    "servers",
    "last",
    "go",
    "global",
    "minutes",
    "deploy",
    "app",
    "multiple",
    "regions",
    "around",
    "world",
    "clicks",
    "provide",
    "load",
    "latency",
    "better",
    "experience",
    "customers",
    "minimal",
    "cost",
    "six",
    "advantage",
    "cloud",
    "still",
    "apply",
    "um",
    "like",
    "include",
    "different",
    "kind",
    "lens",
    "uh",
    "angle",
    "looking",
    "stuff",
    "looked",
    "six",
    "advantages",
    "cloud",
    "let",
    "take",
    "look",
    "next",
    "slide",
    "reworking",
    "six",
    "advantage",
    "cloud",
    "generalized",
    "music",
    "okay",
    "right",
    "wanted",
    "show",
    "six",
    "advantages",
    "cloud",
    "computing",
    "comes",
    "part",
    "itus",
    "documentation",
    "typed",
    "see",
    "still",
    "around",
    "uh",
    "unusual",
    "used",
    "part",
    "marketing",
    "website",
    "nice",
    "little",
    "graphics",
    "um",
    "whatever",
    "reason",
    "overview",
    "amazon",
    "web",
    "services",
    "way",
    "starting",
    "starting",
    "adabs",
    "light",
    "read",
    "good",
    "read",
    "uh",
    "get",
    "started",
    "obviously",
    "cover",
    "stuff",
    "course",
    "um",
    "know",
    "maybe",
    "get",
    "something",
    "different",
    "idea",
    "abus",
    "definitely",
    "expanded",
    "whatever",
    "reason",
    "documentation",
    "changed",
    "understand",
    "polyfilled",
    "course",
    "music",
    "okay",
    "right",
    "seven",
    "advantages",
    "cloud",
    "said",
    "six",
    "meant",
    "say",
    "seven",
    "um",
    "know",
    "since",
    "created",
    "fundamental",
    "courses",
    "clusters",
    "providers",
    "started",
    "notice",
    "kind",
    "trend",
    "normalized",
    "seven",
    "advantages",
    "actually",
    "maps",
    "really",
    "well",
    "new",
    "benefits",
    "cloud",
    "looks",
    "like",
    "os",
    "thinking",
    "um",
    "exception",
    "cloud",
    "architect",
    "stuff",
    "keep",
    "separate",
    "section",
    "let",
    "go",
    "see",
    "first",
    "cost",
    "effective",
    "pay",
    "consume",
    "upfront",
    "cost",
    "demand",
    "pricing",
    "pay",
    "go",
    "p",
    "yg",
    "thousands",
    "customers",
    "sharing",
    "uh",
    "sharing",
    "cost",
    "resources",
    "adabs",
    "used",
    "refer",
    "always",
    "demand",
    "pricing",
    "azure",
    "always",
    "said",
    "pay",
    "go",
    "looks",
    "like",
    "adus",
    "uses",
    "demand",
    "pay",
    "go",
    "describe",
    "great",
    "um",
    "go",
    "global",
    "launch",
    "workloads",
    "anywhere",
    "world",
    "choose",
    "region",
    "secure",
    "cloud",
    "provider",
    "takes",
    "care",
    "physical",
    "security",
    "cloud",
    "services",
    "secured",
    "default",
    "ability",
    "configure",
    "access",
    "granular",
    "level",
    "uh",
    "reliable",
    "data",
    "backup",
    "disaster",
    "recovery",
    "data",
    "replication",
    "fault",
    "tolerance",
    "scalable",
    "increase",
    "decrease",
    "resources",
    "services",
    "based",
    "demand",
    "uh",
    "elastic",
    "automate",
    "scaling",
    "spikes",
    "drop",
    "demand",
    "current",
    "underlying",
    "hardware",
    "managed",
    "uhof",
    "software",
    "patched",
    "upgraded",
    "replaced",
    "cloud",
    "provider",
    "without",
    "interruption",
    "think",
    "one",
    "benefits",
    "cloud",
    "really",
    "good",
    "one",
    "um",
    "uh",
    "yeah",
    "music",
    "seven",
    "hey",
    "angie",
    "brown",
    "taking",
    "look",
    "aus",
    "global",
    "infrastructure",
    "well",
    "adus",
    "global",
    "infrastructure",
    "globally",
    "distributed",
    "hardware",
    "data",
    "centers",
    "physically",
    "networked",
    "together",
    "act",
    "one",
    "large",
    "resource",
    "end",
    "customers",
    "mean",
    "well",
    "look",
    "globe",
    "right",
    "hand",
    "side",
    "globe",
    "really",
    "cool",
    "adab",
    "us",
    "used",
    "website",
    "could",
    "uh",
    "see",
    "3d",
    "uh",
    "globe",
    "see",
    "resources",
    "whatever",
    "reason",
    "took",
    "still",
    "screenshot",
    "idea",
    "um",
    "global",
    "infrastructure",
    "represents",
    "hardware",
    "connectivity",
    "hardware",
    "around",
    "world",
    "kind",
    "resources",
    "talking",
    "talking",
    "regions",
    "talking",
    "availability",
    "zones",
    "direct",
    "connections",
    "uh",
    "pops",
    "also",
    "known",
    "point",
    "presence",
    "local",
    "zones",
    "wavelength",
    "zones",
    "uh",
    "point",
    "abus",
    "millions",
    "active",
    "users",
    "uh",
    "customers",
    "tens",
    "thousands",
    "partners",
    "globally",
    "really",
    "uh",
    "kind",
    "everywhere",
    "um",
    "wondering",
    "well",
    "resources",
    "going",
    "get",
    "next",
    "going",
    "break",
    "particular",
    "resources",
    "definitely",
    "need",
    "know",
    "hopefully",
    "gives",
    "high",
    "level",
    "adus",
    "thing",
    "called",
    "global",
    "infrastructure",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "marketing",
    "website",
    "adabs",
    "global",
    "infrastructure",
    "great",
    "way",
    "want",
    "explore",
    "make",
    "sense",
    "global",
    "infrastructure",
    "scroll",
    "nice",
    "map",
    "kind",
    "indicating",
    "regions",
    "notice",
    "uh",
    "ones",
    "red",
    "coming",
    "soon",
    "canada",
    "west",
    "talking",
    "think",
    "couple",
    "years",
    "still",
    "waiting",
    "know",
    "like",
    "every",
    "cloud",
    "service",
    "provider",
    "always",
    "expanding",
    "looks",
    "like",
    "get",
    "full",
    "list",
    "um",
    "indicate",
    "launched",
    "launching",
    "things",
    "know",
    "nice",
    "little",
    "list",
    "uh",
    "get",
    "access",
    "go",
    "way",
    "top",
    "across",
    "top",
    "go",
    "regions",
    "azs",
    "uh",
    "get",
    "better",
    "information",
    "definitely",
    "different",
    "think",
    "top",
    "canidate",
    "supposed",
    "look",
    "like",
    "uh",
    "guess",
    "best",
    "uh",
    "want",
    "point",
    "pages",
    "uh",
    "terms",
    "uh",
    "number",
    "resources",
    "going",
    "bump",
    "font",
    "little",
    "bit",
    "small",
    "even",
    "go",
    "see",
    "describing",
    "um",
    "let",
    "say",
    "particular",
    "region",
    "canada",
    "see",
    "uh",
    "three",
    "availability",
    "zones",
    "launched",
    "sometimes",
    "asters",
    "says",
    "located",
    "montreal",
    "uh",
    "metropolian",
    "area",
    "good",
    "indicator",
    "central",
    "canada",
    "could",
    "mean",
    "toronto",
    "could",
    "mean",
    "winnipeg",
    "put",
    "asterisk",
    "um",
    "notice",
    "usually",
    "see",
    "availability",
    "zones",
    "never",
    "see",
    "anything",
    "beyond",
    "six",
    "sure",
    "seems",
    "max",
    "usually",
    "region",
    "launches",
    "three",
    "availability",
    "availability",
    "zones",
    "think",
    "past",
    "might",
    "um",
    "least",
    "three",
    "reason",
    "important",
    "three",
    "zone",
    "get",
    "high",
    "availability",
    "uh",
    "way",
    "um",
    "let",
    "say",
    "talking",
    "compute",
    "compute",
    "um",
    "running",
    "redundantly",
    "two",
    "uh",
    "data",
    "centers",
    "region",
    "ensure",
    "um",
    "time",
    "case",
    "two",
    "go",
    "make",
    "note",
    "coming",
    "azure",
    "azure",
    "uh",
    "launch",
    "things",
    "without",
    "uh",
    "zones",
    "uh",
    "gcp",
    "really",
    "good",
    "always",
    "least",
    "three",
    "uh",
    "provider",
    "works",
    "little",
    "bit",
    "differently",
    "um",
    "yeah",
    "see",
    "north",
    "america",
    "scroll",
    "find",
    "particular",
    "area",
    "look",
    "map",
    "uh",
    "wonder",
    "distorted",
    "yeah",
    "hopefully",
    "gives",
    "kind",
    "idea",
    "want",
    "explore",
    "uh",
    "particular",
    "offerings",
    "absolutely",
    "course",
    "cover",
    "course",
    "really",
    "necessary",
    "thought",
    "uh",
    "nice",
    "show",
    "page",
    "okay",
    "music",
    "ciao",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "regions",
    "regions",
    "geographically",
    "distinct",
    "locations",
    "consisting",
    "one",
    "availability",
    "zone",
    "world",
    "map",
    "showing",
    "regions",
    "abos",
    "world",
    "blue",
    "ones",
    "represent",
    "regions",
    "already",
    "available",
    "orange",
    "ones",
    "represent",
    "ones",
    "adus",
    "planning",
    "open",
    "adus",
    "always",
    "expanding",
    "infrastructure",
    "uh",
    "world",
    "always",
    "expect",
    "uh",
    "upcoming",
    "ones",
    "every",
    "region",
    "physically",
    "isolated",
    "independent",
    "every",
    "region",
    "terms",
    "location",
    "power",
    "water",
    "supply",
    "important",
    "region",
    "give",
    "attention",
    "us",
    "east",
    "one",
    "uh",
    "particular",
    "northern",
    "virginia",
    "ad",
    "first",
    "region",
    "saw",
    "launch",
    "sq",
    "us",
    "s3",
    "uh",
    "lot",
    "uh",
    "special",
    "use",
    "cases",
    "things",
    "work",
    "us",
    "east",
    "ones",
    "find",
    "moment",
    "want",
    "show",
    "looks",
    "like",
    "architectural",
    "diagram",
    "seeing",
    "region",
    "notice",
    "um",
    "uh",
    "little",
    "flag",
    "says",
    "us",
    "east",
    "one",
    "us",
    "west",
    "one",
    "inside",
    "e2",
    "instance",
    "going",
    "represent",
    "region",
    "architectural",
    "diagrams",
    "uh",
    "let",
    "look",
    "facts",
    "understand",
    "us",
    "east",
    "us",
    "east",
    "one",
    "important",
    "region",
    "generally",
    "three",
    "availability",
    "zones",
    "intention",
    "talk",
    "get",
    "availability",
    "zone",
    "section",
    "new",
    "users",
    "limited",
    "two",
    "uh",
    "two",
    "uh",
    "generally",
    "always",
    "three",
    "okay",
    "new",
    "services",
    "almost",
    "always",
    "become",
    "available",
    "first",
    "us",
    "east",
    "specifically",
    "us",
    "east",
    "one",
    "services",
    "available",
    "regions",
    "billing",
    "information",
    "appears",
    "us",
    "east",
    "one",
    "us1",
    "particular",
    "thing",
    "uh",
    "cost",
    "aa",
    "services",
    "vary",
    "per",
    "region",
    "marketing",
    "website",
    "forious",
    "global",
    "infrastructure",
    "see",
    "uh",
    "north",
    "america",
    "say",
    "like",
    "launched",
    "many",
    "availability",
    "zones",
    "might",
    "conditions",
    "notice",
    "like",
    "asteris",
    "uh",
    "beside",
    "things",
    "um",
    "one",
    "particular",
    "asteris",
    "saying",
    "hey",
    "three",
    "zones",
    "generally",
    "limited",
    "two",
    "okay",
    "choose",
    "region",
    "four",
    "factors",
    "need",
    "consider",
    "uh",
    "regulatory",
    "compliance",
    "region",
    "meet",
    "cost",
    "inus",
    "service",
    "region",
    "services",
    "available",
    "region",
    "distance",
    "distance",
    "latency",
    "end",
    "users",
    "four",
    "factors",
    "remember",
    "music",
    "okay",
    "right",
    "talked",
    "adus",
    "regions",
    "let",
    "talk",
    "uh",
    "affects",
    "services",
    "versus",
    "regional",
    "global",
    "services",
    "regional",
    "services",
    "scoped",
    "based",
    "set",
    "adus",
    "management",
    "console",
    "selected",
    "region",
    "drop",
    "say",
    "okay",
    "want",
    "resour",
    "sources",
    "canada",
    "europe",
    "uh",
    "determine",
    "na",
    "service",
    "launched",
    "seen",
    "within",
    "ad",
    "services",
    "console",
    "generally",
    "explicitly",
    "set",
    "region",
    "service",
    "time",
    "creation",
    "explicitly",
    "mentioned",
    "use",
    "something",
    "like",
    "gcp",
    "azure",
    "create",
    "resource",
    "select",
    "region",
    "ads",
    "kind",
    "global",
    "thing",
    "unique",
    "platform",
    "um",
    "concept",
    "global",
    "services",
    "services",
    "operate",
    "across",
    "multiple",
    "reg",
    "region",
    "fixed",
    "word",
    "global",
    "services",
    "like",
    "s3",
    "cloudfront",
    "r",
    "53",
    "idea",
    "go",
    "cloudfront",
    "go",
    "cloudfront",
    "console",
    "notice",
    "say",
    "global",
    "ca",
    "switch",
    "uh",
    "global",
    "services",
    "um",
    "time",
    "creation",
    "bit",
    "different",
    "saying",
    "regional",
    "ones",
    "select",
    "region",
    "clearing",
    "global",
    "services",
    "using",
    "something",
    "like",
    "concept",
    "region",
    "globally",
    "available",
    "determine",
    "subset",
    "regions",
    "using",
    "s3",
    "bucket",
    "one",
    "region",
    "actually",
    "select",
    "region",
    "time",
    "creation",
    "um",
    "something",
    "like",
    "cloud",
    "firm",
    "distributions",
    "choosing",
    "group",
    "regions",
    "either",
    "say",
    "world",
    "north",
    "america",
    "like",
    "geographic",
    "distribution",
    "say",
    "region",
    "particular",
    "know",
    "hopefully",
    "gives",
    "distinction",
    "regional",
    "services",
    "global",
    "music",
    "services",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "availability",
    "zones",
    "availability",
    "zones",
    "commonly",
    "abbreviated",
    "frequently",
    "using",
    "term",
    "physical",
    "locations",
    "made",
    "one",
    "data",
    "centers",
    "data",
    "center",
    "secured",
    "building",
    "contains",
    "hundreds",
    "thousands",
    "computers",
    "uh",
    "one",
    "favorite",
    "graphics",
    "like",
    "show",
    "course",
    "uh",
    "know",
    "ads",
    "would",
    "never",
    "dog",
    "um",
    "data",
    "center",
    "thought",
    "would",
    "fun",
    "region",
    "generally",
    "contain",
    "three",
    "availability",
    "zones",
    "say",
    "generally",
    "cases",
    "see",
    "uh",
    "less",
    "three",
    "might",
    "two",
    "um",
    "data",
    "centers",
    "within",
    "region",
    "isolate",
    "um",
    "different",
    "buildings",
    "close",
    "enough",
    "provide",
    "low",
    "latency",
    "within",
    "uh",
    "10",
    "milliseconds",
    "less",
    "low",
    "uh",
    "common",
    "practice",
    "run",
    "workloads",
    "least",
    "three",
    "azs",
    "ensure",
    "services",
    "remain",
    "available",
    "case",
    "one",
    "two",
    "data",
    "centers",
    "fail",
    "known",
    "high",
    "availability",
    "generally",
    "driven",
    "based",
    "regulatory",
    "compliance",
    "lot",
    "companies",
    "uh",
    "know",
    "least",
    "running",
    "3",
    "itus",
    "tries",
    "always",
    "least",
    "three",
    "azs",
    "within",
    "region",
    "uh",
    "represented",
    "region",
    "code",
    "followed",
    "letter",
    "know",
    "us",
    "east",
    "one",
    "would",
    "region",
    "would",
    "represent",
    "particular",
    "availability",
    "zone",
    "region",
    "um",
    "subnet",
    "related",
    "availability",
    "zones",
    "associated",
    "uh",
    "two",
    "availability",
    "zones",
    "never",
    "choose",
    "launching",
    "resources",
    "always",
    "choose",
    "subnet",
    "associated",
    "lot",
    "services",
    "um",
    "know",
    "even",
    "require",
    "choose",
    "subnet",
    "fully",
    "managed",
    "aws",
    "case",
    "like",
    "virtual",
    "machines",
    "always",
    "choosing",
    "subnet",
    "okay",
    "graphical",
    "uh",
    "representation",
    "diagram",
    "representing",
    "two",
    "availability",
    "zones",
    "region",
    "us",
    "east",
    "1",
    "us",
    "west",
    "2",
    "2",
    "1",
    "1",
    "b",
    "effectively",
    "subnets",
    "okay",
    "within",
    "subnets",
    "see",
    "availability",
    "zones",
    "see",
    "two",
    "virtual",
    "machines",
    "okay",
    "us",
    "east1",
    "region",
    "six",
    "azs",
    "thought",
    "kind",
    "like",
    "fun",
    "fact",
    "every",
    "single",
    "one",
    "um",
    "think",
    "anyone",
    "comes",
    "close",
    "us",
    "east",
    "one",
    "course",
    "popular",
    "uh",
    "first",
    "uh",
    "um",
    "region",
    "surprise",
    "many",
    "music",
    "okay",
    "covered",
    "regions",
    "availability",
    "zones",
    "really",
    "want",
    "make",
    "clear",
    "uh",
    "look",
    "like",
    "kind",
    "visual",
    "representation",
    "let",
    "say",
    "adus",
    "region",
    "particular",
    "one",
    "canada",
    "central",
    "particular",
    "montreal",
    "ca",
    "central",
    "1",
    "uh",
    "idea",
    "region",
    "multiple",
    "availability",
    "zones",
    "see",
    "uh",
    "1",
    "one",
    "1b",
    "1d",
    "reason",
    "adus",
    "decided",
    "uh",
    "launch",
    "1",
    "c",
    "maybe",
    "haunted",
    "knows",
    "know",
    "um",
    "within",
    "um",
    "availability",
    "zones",
    "made",
    "one",
    "data",
    "centers",
    "understand",
    "single",
    "data",
    "center",
    "could",
    "collection",
    "buildings",
    "azs",
    "um",
    "interconnected",
    "high",
    "bandwidth",
    "low",
    "latency",
    "networking",
    "fully",
    "redundant",
    "dedicated",
    "metrof",
    "fiber",
    "providing",
    "high",
    "throughput",
    "low",
    "latency",
    "networking",
    "fast",
    "connections",
    "traffic",
    "azs",
    "encrypted",
    "azs",
    "within",
    "100",
    "km",
    "60",
    "mil",
    "uh",
    "music",
    "okay",
    "want",
    "show",
    "uh",
    "regions",
    "availability",
    "zones",
    "work",
    "different",
    "adus",
    "services",
    "general",
    "idea",
    "selecting",
    "uh",
    "region",
    "within",
    "aos",
    "want",
    "select",
    "region",
    "going",
    "go",
    "going",
    "apply",
    "regional",
    "services",
    "famous",
    "example",
    "regional",
    "service",
    "would",
    "ec2",
    "go",
    "ec2",
    "elastic",
    "uh",
    "cloud",
    "computing",
    "compute",
    "whatever",
    "forget",
    "name",
    "go",
    "instances",
    "going",
    "launch",
    "instance",
    "going",
    "complete",
    "process",
    "want",
    "show",
    "would",
    "happen",
    "go",
    "select",
    "things",
    "going",
    "go",
    "amazon",
    "l",
    "2",
    "um",
    "going",
    "go",
    "uh",
    "next",
    "going",
    "select",
    "um",
    "availability",
    "zone",
    "north",
    "virginia",
    "region",
    "say",
    "selecting",
    "availability",
    "zone",
    "actually",
    "selecting",
    "subnet",
    "choosing",
    "subnet",
    "subnet",
    "associated",
    "availability",
    "zone",
    "every",
    "single",
    "um",
    "uh",
    "region",
    "default",
    "vpc",
    "vpc",
    "uh",
    "subnets",
    "set",
    "subnets",
    "defaulted",
    "availability",
    "zones",
    "available",
    "usc",
    "1",
    "six",
    "server",
    "going",
    "launch",
    "us",
    "east",
    "1b",
    "regional",
    "service",
    "okay",
    "uh",
    "global",
    "services",
    "like",
    "s3",
    "go",
    "s3",
    "says",
    "global",
    "right",
    "going",
    "go",
    "ahead",
    "create",
    "bucket",
    "choose",
    "region",
    "go",
    "going",
    "say",
    "region",
    "want",
    "choose",
    "availability",
    "zone",
    "nothing",
    "um",
    "uh",
    "choose",
    "adabs",
    "going",
    "run",
    "multiple",
    "matter",
    "okay",
    "um",
    "something",
    "like",
    "cloudfront",
    "cloud",
    "front",
    "little",
    "bit",
    "uh",
    "different",
    "go",
    "cloudfront",
    "create",
    "distribution",
    "um",
    "yeah",
    "option",
    "sometimes",
    "databus",
    "like",
    "splash",
    "screen",
    "click",
    "left",
    "hand",
    "side",
    "go",
    "distributions",
    "okay",
    "well",
    "changed",
    "always",
    "changing",
    "ui",
    "scroll",
    "allow",
    "us",
    "change",
    "um",
    "change",
    "going",
    "launch",
    "like",
    "global",
    "stuff",
    "like",
    "literally",
    "recently",
    "changed",
    "confused",
    "uh",
    "scroll",
    "used",
    "maybe",
    "legacy",
    "additional",
    "customized",
    "oh",
    "sorry",
    "okay",
    "noce",
    "price",
    "class",
    "says",
    "use",
    "edge",
    "locations",
    "best",
    "performance",
    "north",
    "america",
    "europe",
    "north",
    "america",
    "europe",
    "asia",
    "middle",
    "uh",
    "middle",
    "east",
    "africa",
    "choosing",
    "particular",
    "region",
    "picking",
    "geographical",
    "area",
    "pretty",
    "much",
    "major",
    "um",
    "uh",
    "uh",
    "examples",
    "uh",
    "course",
    "things",
    "like",
    "even",
    "say",
    "go",
    "know",
    "create",
    "something",
    "like",
    "group",
    "uh",
    "user",
    "group",
    "whoops",
    "say",
    "create",
    "group",
    "know",
    "saying",
    "oh",
    "particular",
    "region",
    "something",
    "like",
    "okay",
    "yeah",
    "hopefully",
    "makes",
    "music",
    "sense",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "let",
    "take",
    "look",
    "fault",
    "tolerance",
    "specifically",
    "global",
    "infrastructure",
    "jump",
    "let",
    "define",
    "fault",
    "terminology",
    "uh",
    "let",
    "describe",
    "fault",
    "domain",
    "fault",
    "domain",
    "section",
    "network",
    "vulnerable",
    "damage",
    "critical",
    "device",
    "system",
    "fails",
    "purpose",
    "fault",
    "domain",
    "failure",
    "occurs",
    "cascade",
    "outside",
    "domain",
    "limiting",
    "possible",
    "damage",
    "uh",
    "popular",
    "meme",
    "called",
    "fine",
    "uh",
    "obviously",
    "serious",
    "problem",
    "uh",
    "person",
    "freaking",
    "gave",
    "context",
    "say",
    "well",
    "reason",
    "freaking",
    "know",
    "fault",
    "domain",
    "nothing",
    "outside",
    "room",
    "going",
    "affected",
    "okay",
    "fault",
    "domains",
    "nested",
    "inside",
    "fault",
    "domains",
    "uh",
    "generally",
    "grouped",
    "something",
    "called",
    "fault",
    "level",
    "fault",
    "level",
    "collection",
    "fault",
    "domains",
    "um",
    "scoping",
    "fault",
    "domain",
    "could",
    "something",
    "like",
    "specific",
    "specific",
    "servers",
    "rack",
    "entire",
    "rack",
    "data",
    "center",
    "entire",
    "room",
    "data",
    "center",
    "entire",
    "data",
    "set",
    "building",
    "really",
    "cloud",
    "service",
    "provider",
    "define",
    "boundaries",
    "domain",
    "adus",
    "abstracts",
    "way",
    "think",
    "compare",
    "something",
    "else",
    "using",
    "azure",
    "actually",
    "define",
    "fault",
    "domain",
    "might",
    "say",
    "like",
    "okay",
    "uh",
    "make",
    "sure",
    "workload",
    "never",
    "running",
    "vm",
    "rack",
    "things",
    "uh",
    "know",
    "might",
    "like",
    "level",
    "control",
    "really",
    "like",
    "fact",
    "itus",
    "abstracts",
    "away",
    "sure",
    "segment",
    "uh",
    "fault",
    "domains",
    "definitely",
    "broader",
    "ones",
    "describe",
    "right",
    "looking",
    "abis",
    "region",
    "would",
    "considered",
    "fault",
    "level",
    "within",
    "fault",
    "level",
    "would",
    "uh",
    "availability",
    "zones",
    "would",
    "considered",
    "fault",
    "domains",
    "course",
    "data",
    "centers",
    "uh",
    "fault",
    "domains",
    "within",
    "okay",
    "like",
    "maybe",
    "know",
    "everything",
    "particular",
    "room",
    "room",
    "secure",
    "like",
    "fire",
    "room",
    "going",
    "affect",
    "room",
    "things",
    "like",
    "um",
    "amazon",
    "region",
    "designed",
    "completely",
    "isolated",
    "amazon",
    "region",
    "uh",
    "achieve",
    "greatest",
    "possible",
    "fault",
    "tolerance",
    "stability",
    "uh",
    "availab",
    "availability",
    "zone",
    "also",
    "isolated",
    "availability",
    "zone",
    "region",
    "connected",
    "low",
    "latency",
    "links",
    "availability",
    "zone",
    "designed",
    "independent",
    "failure",
    "zone",
    "kind",
    "different",
    "language",
    "adus",
    "using",
    "um",
    "never",
    "experienced",
    "terminology",
    "cloud",
    "service",
    "provider",
    "kind",
    "feel",
    "like",
    "something",
    "us",
    "made",
    "basically",
    "failure",
    "zone",
    "basically",
    "saying",
    "fault",
    "domain",
    "let",
    "kind",
    "expand",
    "fault",
    "uh",
    "failure",
    "zone",
    "terminology",
    "availability",
    "zones",
    "physically",
    "separated",
    "within",
    "typical",
    "metropolitan",
    "region",
    "located",
    "lower",
    "risk",
    "uh",
    "flood",
    "planes",
    "discret",
    "uninterruptible",
    "power",
    "supply",
    "ups",
    "backup",
    "uh",
    "generation",
    "facilities",
    "uh",
    "data",
    "centers",
    "located",
    "different",
    "azs",
    "uh",
    "designed",
    "supplied",
    "independent",
    "substations",
    "reduce",
    "risk",
    "event",
    "power",
    "grid",
    "impacting",
    "one",
    "availability",
    "zone",
    "availability",
    "zones",
    "redundantly",
    "connected",
    "multiple",
    "tier",
    "one",
    "transit",
    "providers",
    "talk",
    "uh",
    "upcoming",
    "slide",
    "one",
    "thing",
    "want",
    "note",
    "adopt",
    "get",
    "high",
    "availability",
    "application",
    "partitioned",
    "across",
    "companies",
    "better",
    "isolated",
    "protected",
    "issues",
    "power",
    "outages",
    "lightning",
    "strikes",
    "tornadoes",
    "earthquakes",
    "idea",
    "behind",
    "know",
    "want",
    "run",
    "okay",
    "fault",
    "music",
    "domains",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "talking",
    "adus",
    "global",
    "network",
    "global",
    "network",
    "represents",
    "interconnections",
    "global",
    "infrastructure",
    "commonly",
    "referred",
    "backbone",
    "aws",
    "ec",
    "understand",
    "could",
    "used",
    "one",
    "way",
    "think",
    "private",
    "express",
    "way",
    "things",
    "move",
    "fast",
    "data",
    "centers",
    "uh",
    "one",
    "thing",
    "utilized",
    "lot",
    "get",
    "data",
    "aws",
    "quickly",
    "edge",
    "locations",
    "act",
    "ramps",
    "uh",
    "ad",
    "global",
    "network",
    "course",
    "uh",
    "get",
    "network",
    "pops",
    "talk",
    "um",
    "know",
    "upcoming",
    "slides",
    "let",
    "talk",
    "edge",
    "locations",
    "services",
    "use",
    "uh",
    "talking",
    "things",
    "getting",
    "adus",
    "network",
    "looking",
    "things",
    "like",
    "abus",
    "global",
    "accelerator",
    "adus",
    "s3",
    "transfer",
    "acceleration",
    "uh",
    "use",
    "agile",
    "locations",
    "quickly",
    "reach",
    "adus",
    "resources",
    "regions",
    "traversing",
    "fast",
    "adus",
    "global",
    "network",
    "notice",
    "names",
    "say",
    "accelerator",
    "acceleration",
    "idea",
    "moving",
    "really",
    "fast",
    "okay",
    "side",
    "talk",
    "like",
    "offramp",
    "looking",
    "amazon",
    "cloudfront",
    "content",
    "distribution",
    "network",
    "uses",
    "edge",
    "locations",
    "uh",
    "offramp",
    "provide",
    "edge",
    "storage",
    "compute",
    "near",
    "end",
    "user",
    "uh",
    "one",
    "thing",
    "kind",
    "always",
    "utilized",
    "global",
    "network",
    "vpc",
    "end",
    "points",
    "using",
    "edge",
    "locations",
    "idea",
    "ensures",
    "resources",
    "stay",
    "within",
    "aus",
    "network",
    "traverse",
    "public",
    "internet",
    "know",
    "uh",
    "know",
    "resource",
    "running",
    "us",
    "east",
    "one",
    "one",
    "uh",
    "eu",
    "would",
    "never",
    "go",
    "internet",
    "would",
    "make",
    "sense",
    "always",
    "enforce",
    "stay",
    "within",
    "network",
    "going",
    "lot",
    "faster",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "point",
    "presence",
    "also",
    "known",
    "pop",
    "intermediate",
    "location",
    "anabis",
    "region",
    "end",
    "user",
    "location",
    "could",
    "data",
    "center",
    "collection",
    "hardware",
    "aws",
    "point",
    "presence",
    "data",
    "center",
    "owned",
    "aws",
    "trusted",
    "partner",
    "utilized",
    "byus",
    "services",
    "related",
    "content",
    "delivery",
    "expediated",
    "upload",
    "pop",
    "res",
    "could",
    "something",
    "like",
    "edge",
    "location",
    "regional",
    "edge",
    "cache",
    "example",
    "see",
    "s3",
    "bucket",
    "go",
    "regional",
    "edge",
    "cache",
    "get",
    "edge",
    "location",
    "let",
    "go",
    "define",
    "edge",
    "location",
    "data",
    "centers",
    "hold",
    "cache",
    "copies",
    "popular",
    "files",
    "web",
    "pages",
    "images",
    "videos",
    "delivery",
    "distance",
    "end",
    "users",
    "reduced",
    "regional",
    "edge",
    "locations",
    "data",
    "centers",
    "hold",
    "much",
    "larger",
    "caches",
    "less",
    "popular",
    "files",
    "reduce",
    "full",
    "round",
    "trip",
    "also",
    "reduce",
    "cost",
    "transfer",
    "music",
    "fees",
    "kind",
    "help",
    "put",
    "pops",
    "presence",
    "general",
    "sense",
    "uh",
    "diagram",
    "got",
    "wikipedia",
    "kind",
    "shows",
    "bunch",
    "different",
    "networks",
    "notice",
    "pop",
    "edge",
    "intersection",
    "uh",
    "two",
    "networks",
    "know",
    "um",
    "know",
    "tier",
    "three",
    "tier",
    "two",
    "pop",
    "okay",
    "tier",
    "one",
    "networks",
    "network",
    "reach",
    "every",
    "network",
    "internet",
    "without",
    "purchasing",
    "ip",
    "transit",
    "paying",
    "peering",
    "inabus",
    "availability",
    "zones",
    "redundantly",
    "connected",
    "multiple",
    "tier",
    "one",
    "transit",
    "providers",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "somea",
    "services",
    "utilizing",
    "pops",
    "edge",
    "locations",
    "content",
    "delivery",
    "expediated",
    "upload",
    "amazon",
    "cloudfront",
    "content",
    "delivery",
    "network",
    "service",
    "idea",
    "point",
    "website",
    "cloudfront",
    "route",
    "requests",
    "nearest",
    "edge",
    "location",
    "cache",
    "going",
    "allow",
    "choose",
    "origin",
    "could",
    "web",
    "server",
    "storage",
    "source",
    "cach",
    "cach",
    "content",
    "origin",
    "would",
    "return",
    "various",
    "edge",
    "locations",
    "around",
    "world",
    "amazon",
    "s3",
    "transfer",
    "acceleration",
    "allows",
    "generate",
    "special",
    "url",
    "used",
    "end",
    "users",
    "upload",
    "files",
    "nearby",
    "edge",
    "location",
    "file",
    "uploaded",
    "edge",
    "location",
    "move",
    "much",
    "faster",
    "within",
    "adus",
    "network",
    "reach",
    "s3",
    "end",
    "adus",
    "global",
    "accelerator",
    "find",
    "optimal",
    "path",
    "end",
    "user",
    "web",
    "servers",
    "global",
    "accelerators",
    "deployed",
    "within",
    "edge",
    "location",
    "send",
    "user",
    "traffic",
    "edge",
    "location",
    "instead",
    "directly",
    "web",
    "application",
    "service",
    "really",
    "really",
    "great",
    "let",
    "say",
    "running",
    "web",
    "server",
    "us",
    "east",
    "one",
    "time",
    "uh",
    "set",
    "infrastructure",
    "regions",
    "turn",
    "basically",
    "get",
    "boost",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "let",
    "take",
    "look",
    "itus",
    "direct",
    "connect",
    "private",
    "dedicated",
    "connection",
    "data",
    "center",
    "office",
    "collocation",
    "aws",
    "idea",
    "imagine",
    "fiber",
    "optic",
    "cable",
    "running",
    "uh",
    "data",
    "center",
    "way",
    "ads",
    "feels",
    "like",
    "uh",
    "using",
    "stuff",
    "data",
    "center",
    "like",
    "local",
    "virtual",
    "machines",
    "uh",
    "like",
    "next",
    "latency",
    "okay",
    "direct",
    "connect",
    "two",
    "fast",
    "network",
    "connection",
    "options",
    "lower",
    "bandwidth",
    "50",
    "500",
    "megabytes",
    "per",
    "second",
    "higher",
    "bandwidth",
    "1",
    "gb",
    "10",
    "gbes",
    "per",
    "second",
    "using",
    "direct",
    "connect",
    "helps",
    "reduce",
    "network",
    "costs",
    "increase",
    "bandwidth",
    "throughput",
    "great",
    "hi",
    "trffic",
    "networks",
    "provides",
    "consistent",
    "network",
    "experience",
    "typical",
    "connection",
    "reliable",
    "secure",
    "u",
    "want",
    "point",
    "term",
    "collocation",
    "never",
    "heard",
    "collocation",
    "carrier",
    "hotel",
    "data",
    "center",
    "equipment",
    "space",
    "bandwidth",
    "available",
    "rental",
    "uh",
    "retail",
    "customers",
    "want",
    "also",
    "point",
    "even",
    "though",
    "says",
    "private",
    "language",
    "aws",
    "used",
    "usually",
    "say",
    "dedicated",
    "connection",
    "private",
    "necessarily",
    "mean",
    "secure",
    "okay",
    "uh",
    "talk",
    "reach",
    "ads",
    "vpns",
    "use",
    "direct",
    "connect",
    "make",
    "sure",
    "connections",
    "secure",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "direct",
    "connect",
    "location",
    "direct",
    "connect",
    "location",
    "trusted",
    "partner",
    "data",
    "centers",
    "establish",
    "dedicated",
    "highspeed",
    "low",
    "latency",
    "connection",
    "premise",
    "aws",
    "example",
    "partner",
    "data",
    "center",
    "would",
    "one",
    "like",
    "toronto",
    "allied",
    "data",
    "center",
    "tell",
    "right",
    "uh",
    "toronto",
    "center",
    "would",
    "use",
    "uh",
    "uh",
    "part",
    "direct",
    "connect",
    "service",
    "order",
    "establish",
    "connection",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "local",
    "zones",
    "data",
    "centers",
    "located",
    "close",
    "densely",
    "populated",
    "areas",
    "provide",
    "singled",
    "digigit",
    "millisecond",
    "low",
    "latency",
    "performance",
    "thinks",
    "like",
    "7",
    "milliseconds",
    "area",
    "map",
    "uh",
    "local",
    "zones",
    "exist",
    "ones",
    "coming",
    "believe",
    "orange",
    "ones",
    "probably",
    "ones",
    "way",
    "use",
    "local",
    "zone",
    "need",
    "opt",
    "got",
    "go",
    "talk",
    "aws",
    "probably",
    "open",
    "support",
    "ticket",
    "get",
    "access",
    "first",
    "one",
    "ever",
    "launched",
    "uh",
    "la",
    "one",
    "uh",
    "um",
    "know",
    "want",
    "see",
    "looks",
    "like",
    "availability",
    "zone",
    "going",
    "show",
    "whatever",
    "region",
    "always",
    "tied",
    "existing",
    "regions",
    "la1",
    "tied",
    "us",
    "west",
    "uh",
    "region",
    "az",
    "would",
    "look",
    "like",
    "us",
    "west",
    "2",
    "hyphen",
    "lax",
    "hyphen",
    "1a",
    "okay",
    "specific",
    "services",
    "made",
    "available",
    "particular",
    "ec2",
    "types",
    "ebs",
    "amazon",
    "fsx",
    "application",
    "load",
    "balancer",
    "amazon",
    "vpc",
    "probably",
    "extended",
    "services",
    "need",
    "know",
    "exam",
    "know",
    "point",
    "limited",
    "subset",
    "things",
    "available",
    "purpose",
    "local",
    "zone",
    "support",
    "highly",
    "demanding",
    "application",
    "sensitive",
    "delancy",
    "media",
    "entertainment",
    "electronic",
    "design",
    "automation",
    "adte",
    "machine",
    "learning",
    "kind",
    "makes",
    "sense",
    "like",
    "look",
    "la",
    "media",
    "entertainment",
    "dealing",
    "lots",
    "media",
    "content",
    "really",
    "low",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "prep",
    "taking",
    "look",
    "abus",
    "wavelength",
    "zones",
    "allow",
    "edge",
    "computing",
    "5g",
    "networks",
    "applications",
    "ultra",
    "low",
    "latency",
    "close",
    "possible",
    "users",
    "abus",
    "partnered",
    "various",
    "telecom",
    "companies",
    "utilize",
    "5g",
    "networks",
    "looking",
    "verizon",
    "vhone",
    "kddi",
    "sk",
    "telecom",
    "idea",
    "create",
    "subnet",
    "tied",
    "wavelength",
    "zone",
    "think",
    "like",
    "availability",
    "zone",
    "wavelength",
    "zone",
    "launch",
    "vms",
    "edge",
    "targeted",
    "5g",
    "network",
    "network",
    "using",
    "uh",
    "aws",
    "deploy",
    "ec2",
    "instance",
    "users",
    "uh",
    "connect",
    "know",
    "radio",
    "tower",
    "um",
    "cell",
    "towers",
    "going",
    "routed",
    "um",
    "know",
    "nearby",
    "hardware",
    "running",
    "virtual",
    "machines",
    "okay",
    "uh",
    "ec2",
    "instances",
    "um",
    "know",
    "advantage",
    "like",
    "super",
    "super",
    "low",
    "latency",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "data",
    "residency",
    "physical",
    "geographical",
    "location",
    "organization",
    "cloud",
    "resources",
    "reside",
    "concept",
    "comp",
    "uh",
    "compliance",
    "boundaries",
    "regulatory",
    "compliance",
    "legal",
    "requirement",
    "government",
    "organization",
    "describes",
    "data",
    "cloud",
    "resources",
    "allowed",
    "reside",
    "idea",
    "data",
    "sovereignty",
    "data",
    "sovereignty",
    "jurisdictional",
    "control",
    "legal",
    "authority",
    "asserted",
    "data",
    "physical",
    "location",
    "within",
    "uh",
    "jurisdictional",
    "boundary",
    "reason",
    "care",
    "stuff",
    "want",
    "work",
    "canadian",
    "government",
    "us",
    "government",
    "like",
    "hey",
    "got",
    "make",
    "sure",
    "know",
    "want",
    "work",
    "us",
    "data",
    "stay",
    "canada",
    "need",
    "give",
    "guarantee",
    "data",
    "residency",
    "guarantee",
    "says",
    "data",
    "right",
    "compliance",
    "boundaries",
    "um",
    "controls",
    "place",
    "say",
    "okay",
    "going",
    "make",
    "sure",
    "data",
    "stays",
    "want",
    "data",
    "sovereignty",
    "like",
    "idea",
    "scope",
    "legal",
    "legal",
    "stuff",
    "ties",
    "compliance",
    "boundaries",
    "aws",
    "well",
    "different",
    "ways",
    "um",
    "let",
    "take",
    "look",
    "ways",
    "meet",
    "compliance",
    "boundaries",
    "one",
    "uh",
    "expensive",
    "also",
    "cool",
    "adamus",
    "outposts",
    "physical",
    "rack",
    "servers",
    "put",
    "data",
    "center",
    "know",
    "exactly",
    "data",
    "resides",
    "know",
    "physical",
    "data",
    "center",
    "canada",
    "going",
    "okay",
    "uh",
    "believe",
    "know",
    "subset",
    "uh",
    "adus",
    "services",
    "available",
    "know",
    "one",
    "option",
    "another",
    "using",
    "like",
    "um",
    "services",
    "governance",
    "like",
    "one",
    "could",
    "adus",
    "config",
    "policy",
    "code",
    "service",
    "create",
    "rules",
    "continuously",
    "check",
    "adus",
    "resource",
    "configuration",
    "deviate",
    "expectations",
    "alerted",
    "orus",
    "config",
    "cases",
    "auto",
    "remediate",
    "expecting",
    "know",
    "um",
    "know",
    "adus",
    "account",
    "saying",
    "account",
    "used",
    "candid",
    "reason",
    "resources",
    "somebody",
    "launches",
    "let",
    "say",
    "something",
    "another",
    "region",
    "could",
    "get",
    "alert",
    "tell",
    "config",
    "go",
    "delete",
    "resource",
    "okay",
    "want",
    "prevent",
    "people",
    "uh",
    "al",
    "together",
    "im",
    "policies",
    "come",
    "play",
    "written",
    "explicitly",
    "deny",
    "access",
    "specific",
    "adus",
    "regions",
    "know",
    "great",
    "applying",
    "users",
    "roles",
    "wanted",
    "organizational",
    "wide",
    "across",
    "um",
    "ais",
    "accounts",
    "use",
    "something",
    "called",
    "service",
    "control",
    "policy",
    "policy",
    "used",
    "within",
    "organizations",
    "makes",
    "organizational",
    "wide",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "ads4",
    "government",
    "answer",
    "first",
    "understand",
    "public",
    "sector",
    "public",
    "sector",
    "includes",
    "public",
    "goods",
    "government",
    "services",
    "military",
    "law",
    "enforcement",
    "infrastructure",
    "public",
    "transit",
    "public",
    "education",
    "healthcare",
    "government",
    "aos",
    "utilized",
    "public",
    "sector",
    "organizations",
    "developing",
    "cloud",
    "workloads",
    "public",
    "sector",
    "aes",
    "achieve",
    "meeting",
    "regulatory",
    "compliance",
    "programs",
    "along",
    "specific",
    "governance",
    "security",
    "controls",
    "could",
    "meeting",
    "requirements",
    "hippa",
    "fed",
    "ramp",
    "um",
    "cjis",
    "uh",
    "fips",
    "okay",
    "iis",
    "special",
    "regions",
    "special",
    "regions",
    "us",
    "regulation",
    "called",
    "gov",
    "cloud",
    "talk",
    "next",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "govcloud",
    "understand",
    "govcloud",
    "need",
    "know",
    "fedramp",
    "fedramp",
    "stands",
    "federal",
    "risk",
    "authorization",
    "management",
    "program",
    "us",
    "program",
    "provides",
    "standardized",
    "approach",
    "security",
    "assessment",
    "authorization",
    "continuous",
    "monitoring",
    "cloud",
    "products",
    "services",
    "know",
    "fed",
    "ramp",
    "gocloud",
    "well",
    "uh",
    "particular",
    "aws",
    "azure",
    "go",
    "cloud",
    "well",
    "cloud",
    "service",
    "provider",
    "like",
    "inabus",
    "azure",
    "j",
    "offer",
    "isolated",
    "region",
    "run",
    "fed",
    "ramp",
    "workloads",
    "called",
    "govcloud",
    "specialized",
    "regions",
    "allow",
    "customers",
    "host",
    "sensitive",
    "controlled",
    "unclassified",
    "information",
    "types",
    "regulated",
    "workloads",
    "govcloud",
    "regions",
    "operated",
    "uh",
    "us",
    "citizens",
    "us",
    "soil",
    "accessible",
    "us",
    "entries",
    "root",
    "account",
    "holders",
    "pass",
    "screening",
    "process",
    "customers",
    "architect",
    "secure",
    "cloud",
    "solutions",
    "comply",
    "fed",
    "ramp",
    "uh",
    "doj",
    "uh",
    "criminal",
    "justice",
    "information",
    "systems",
    "security",
    "policy",
    "us",
    "international",
    "traffic",
    "arms",
    "regulation",
    "uh",
    "uh",
    "export",
    "administration",
    "regulations",
    "department",
    "defense",
    "cloud",
    "computing",
    "security",
    "requirements",
    "guides",
    "want",
    "work",
    "us",
    "government",
    "want",
    "uh",
    "engineer",
    "use",
    "gov",
    "cloud",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "uh",
    "running",
    "adab",
    "us",
    "china",
    "adus",
    "china",
    "adus",
    "cloud",
    "offering",
    "mainland",
    "china",
    "adus",
    "china",
    "completely",
    "isolate",
    "intentionally",
    "adus",
    "global",
    "meet",
    "regulatory",
    "compliance",
    "mainland",
    "china",
    "means",
    "make",
    "workload",
    "adus",
    "global",
    "uh",
    "ca",
    "uh",
    "interact",
    "within",
    "adus",
    "china",
    "one",
    "okay",
    "basically",
    "treated",
    "like",
    "completely",
    "separate",
    "service",
    "like",
    "adus",
    "chinese",
    "version",
    "uh",
    "adus",
    "china",
    "domain",
    "everybody",
    "else",
    "considered",
    "global",
    "using",
    "adus",
    "canada",
    "use",
    "us",
    "india",
    "europe",
    "wherever",
    "adus",
    "global",
    "okay",
    "order",
    "operate",
    "adus",
    "china",
    "regions",
    "need",
    "chinese",
    "business",
    "license",
    "icp",
    "license",
    "services",
    "available",
    "china",
    "uh",
    "use",
    "route",
    "53",
    "uh",
    "might",
    "say",
    "well",
    "run",
    "singapore",
    "global",
    "could",
    "advantage",
    "running",
    "mainland",
    "china",
    "means",
    "would",
    "traverse",
    "great",
    "firewall",
    "okay",
    "traffic",
    "already",
    "within",
    "china",
    "uh",
    "deal",
    "abus",
    "two",
    "regions",
    "mainland",
    "china",
    "uh",
    "one",
    "northwest",
    "region",
    "operated",
    "ns",
    "wcf",
    "one",
    "beijing",
    "north",
    "one",
    "operated",
    "sinnet",
    "know",
    "itab",
    "us",
    "could",
    "meet",
    "compliance",
    "requirement",
    "partner",
    "local",
    "providers",
    "uh",
    "data",
    "centers",
    "works",
    "music",
    "okay",
    "right",
    "want",
    "show",
    "get",
    "um",
    "chinese",
    "adus",
    "management",
    "console",
    "one",
    "adab",
    "global",
    "one",
    "everyone",
    "outside",
    "mainland",
    "china",
    "want",
    "run",
    "resources",
    "uh",
    "data",
    "centers",
    "within",
    "mainland",
    "china",
    "looks",
    "similar",
    "go",
    "create",
    "free",
    "account",
    "going",
    "fill",
    "stuff",
    "uh",
    "notice",
    "need",
    "business",
    "registration",
    "certificate",
    "uh",
    "additional",
    "information",
    "order",
    "run",
    "data",
    "centers",
    "ad",
    "partnered",
    "also",
    "notice",
    "logo",
    "say",
    "aws",
    "good",
    "reason",
    "type",
    "aws",
    "trademark",
    "china",
    "uh",
    "adus",
    "actually",
    "banned",
    "using",
    "adus",
    "logo",
    "china",
    "uh",
    "whatever",
    "reason",
    "weird",
    "reason",
    "ever",
    "want",
    "read",
    "see",
    "aws",
    "right",
    "um",
    "yeah",
    "go",
    "music",
    "hey",
    "andre",
    "brown",
    "exam",
    "pro",
    "looking",
    "sustainability",
    "adus",
    "global",
    "infrastructure",
    "talk",
    "let",
    "talk",
    "climate",
    "pledge",
    "amazon",
    "climate",
    "pledge",
    "achieve",
    "net",
    "zero",
    "carbon",
    "emissions",
    "2040",
    "across",
    "amazon",
    "businesses",
    "includes",
    "aws",
    "youall",
    "want",
    "find",
    "information",
    "go",
    "sustainability",
    "lot",
    "great",
    "information",
    "learn",
    "exactly",
    "uh",
    "achieving",
    "particular",
    "like",
    "data",
    "centers",
    "interesting",
    "okay",
    "adus",
    "cloud",
    "sustainabil",
    "goals",
    "composed",
    "three",
    "parts",
    "first",
    "renewable",
    "energy",
    "adus",
    "working",
    "towards",
    "adus",
    "global",
    "infrastructure",
    "powered",
    "100",
    "renewable",
    "energy",
    "2025",
    "abus",
    "purchases",
    "retires",
    "environmental",
    "attributes",
    "cover",
    "energy",
    "abus",
    "global",
    "infrastructure",
    "would",
    "purchase",
    "things",
    "like",
    "renewable",
    "energy",
    "credits",
    "also",
    "known",
    "rec",
    "guarantees",
    "origins",
    "go",
    "second",
    "point",
    "cloud",
    "efficiency",
    "adus",
    "infrastructure",
    "times",
    "energy",
    "efficient",
    "medium",
    "us",
    "enterprises",
    "data",
    "centers",
    "surveyed",
    "going",
    "really",
    "rely",
    "survey",
    "surveys",
    "always",
    "great",
    "know",
    "take",
    "grain",
    "salt",
    "okay",
    "water",
    "uh",
    "stewardship",
    "uh",
    "direct",
    "evaporative",
    "technology",
    "cool",
    "data",
    "centers",
    "use",
    "non",
    "portable",
    "uh",
    "water",
    "cooling",
    "purposes",
    "recycling",
    "water",
    "water",
    "treatment",
    "allows",
    "us",
    "remove",
    "us",
    "remove",
    "scale",
    "forming",
    "minerals",
    "reuse",
    "waters",
    "uh",
    "cycles",
    "water",
    "efficiency",
    "metrics",
    "determine",
    "monitor",
    "optimal",
    "water",
    "use",
    "adus",
    "region",
    "find",
    "water",
    "plays",
    "large",
    "part",
    "uh",
    "making",
    "um",
    "uh",
    "data",
    "centers",
    "efficient",
    "music",
    "okay",
    "wanted",
    "show",
    "get",
    "sustainability",
    "information",
    "went",
    "adis",
    "global",
    "infrastructure",
    "click",
    "sustainability",
    "going",
    "bring",
    "us",
    "whoops",
    "twitter",
    "open",
    "sustainability",
    "cloud",
    "want",
    "read",
    "bunch",
    "stuff",
    "things",
    "going",
    "us",
    "see",
    "uh",
    "progressing",
    "renewable",
    "energy",
    "um",
    "cloud",
    "efficiency",
    "know",
    "efficient",
    "worth",
    "read",
    "really",
    "understand",
    "lot",
    "water",
    "involved",
    "like",
    "reducing",
    "water",
    "data",
    "centers",
    "thought",
    "really",
    "interesting",
    "um",
    "mean",
    "podcast",
    "think",
    "really",
    "much",
    "podcast",
    "stories",
    "tech",
    "makes",
    "world",
    "better",
    "necessarily",
    "sustainability",
    "podcast",
    "invis",
    "podcast",
    "general",
    "download",
    "center",
    "um",
    "amazon",
    "2020",
    "sustainability",
    "reports",
    "guess",
    "download",
    "reports",
    "see",
    "going",
    "download",
    "progress",
    "see",
    "okay",
    "bunch",
    "numbers",
    "things",
    "like",
    "okay",
    "short",
    "reports",
    "hey",
    "least",
    "download",
    "okay",
    "case",
    "uh",
    "interested",
    "sustainability",
    "music",
    "right",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "abus",
    "ground",
    "station",
    "fully",
    "managed",
    "service",
    "lets",
    "control",
    "satellite",
    "communications",
    "process",
    "data",
    "scale",
    "operations",
    "without",
    "worry",
    "building",
    "managing",
    "ground",
    "station",
    "infrastructure",
    "talking",
    "ground",
    "station",
    "really",
    "good",
    "way",
    "cement",
    "service",
    "think",
    "big",
    "anten",
    "ey",
    "dish",
    "pointing",
    "sky",
    "trying",
    "communicate",
    "satellites",
    "essentially",
    "service",
    "use",
    "cases",
    "could",
    "weather",
    "forecasting",
    "surface",
    "imaging",
    "communications",
    "video",
    "broadcasts",
    "use",
    "ground",
    "station",
    "idea",
    "would",
    "schedule",
    "contact",
    "selecting",
    "satellite",
    "start",
    "end",
    "time",
    "ground",
    "location",
    "use",
    "ground",
    "station",
    "ec2",
    "ami",
    "amazon",
    "machine",
    "image",
    "launch",
    "ec2",
    "instances",
    "uplink",
    "downlink",
    "uh",
    "data",
    "contact",
    "receive",
    "downlink",
    "data",
    "amazon",
    "s3",
    "bucket",
    "use",
    "case",
    "could",
    "something",
    "like",
    "company",
    "reached",
    "agreement",
    "satellite",
    "image",
    "provider",
    "use",
    "satellites",
    "take",
    "photos",
    "specific",
    "region",
    "time",
    "whatever",
    "idea",
    "using",
    "adus",
    "ground",
    "station",
    "communicate",
    "uh",
    "company",
    "satellite",
    "download",
    "uh",
    "image",
    "data",
    "s3",
    "bucket",
    "okay",
    "music",
    "hey",
    "andreww",
    "brown",
    "looking",
    "aus",
    "outposts",
    "fully",
    "managed",
    "service",
    "offers",
    "aus",
    "infrastructure",
    "services",
    "apis",
    "tools",
    "virtually",
    "data",
    "center",
    "space",
    "premise",
    "facility",
    "truly",
    "consistent",
    "hybrid",
    "experience",
    "kind",
    "summarize",
    "rack",
    "servers",
    "running",
    "adaba",
    "stuff",
    "physical",
    "location",
    "okay",
    "jump",
    "service",
    "technology",
    "uh",
    "let",
    "talk",
    "rack",
    "server",
    "rack",
    "frame",
    "designed",
    "organized",
    "equipment",
    "example",
    "42u",
    "rack",
    "uh",
    "concept",
    "rack",
    "heights",
    "u",
    "stands",
    "rack",
    "units",
    "u",
    "spaces",
    "uh",
    "equal",
    "industry",
    "standard",
    "rack",
    "48",
    "u",
    "um",
    "7t",
    "rack",
    "full",
    "size",
    "rack",
    "cage",
    "commonly",
    "42",
    "high",
    "okay",
    "uh",
    "might",
    "equipment",
    "different",
    "sizes",
    "could",
    "one",
    "u",
    "2",
    "u",
    "3",
    "u",
    "4",
    "u",
    "high",
    "example",
    "know",
    "interior",
    "rack",
    "notice",
    "like",
    "one",
    "u",
    "2",
    "u",
    "4",
    "u",
    "little",
    "bit",
    "shaped",
    "differently",
    "uh",
    "give",
    "kind",
    "idea",
    "um",
    "know",
    "outpost",
    "comes",
    "three",
    "form",
    "factors",
    "42",
    "u",
    "one",
    "u",
    "2",
    "u",
    "uh",
    "first",
    "one",
    "42u",
    "basically",
    "full",
    "rack",
    "servers",
    "provided",
    "bys",
    "getting",
    "frame",
    "actually",
    "comes",
    "know",
    "servers",
    "uh",
    "adus",
    "delivers",
    "preferred",
    "physical",
    "site",
    "fully",
    "assembled",
    "ready",
    "rolled",
    "final",
    "position",
    "installed",
    "adus",
    "rack",
    "needs",
    "simply",
    "plugged",
    "power",
    "network",
    "lot",
    "details",
    "um",
    "specs",
    "adus",
    "website",
    "know",
    "going",
    "go",
    "um",
    "servers",
    "place",
    "existing",
    "racks",
    "one",
    "u",
    "suitable",
    "19in",
    "24",
    "deep",
    "cabinets",
    "using",
    "ust",
    "uh",
    "gravitron",
    "2",
    "um",
    "cpus",
    "64",
    "virtual",
    "cpus",
    "128",
    "gigabytes",
    "uh",
    "4",
    "terabytes",
    "local",
    "nvm",
    "storage",
    "um",
    "u",
    "sorry",
    "2",
    "u",
    "suitable",
    "19in",
    "wide",
    "36",
    "deep",
    "intel",
    "processors",
    "128",
    "virtual",
    "cpus",
    "256",
    "gbt",
    "memory",
    "8",
    "terab",
    "local",
    "nvme",
    "storage",
    "go",
    "music",
    "let",
    "take",
    "look",
    "cloud",
    "architecture",
    "terminologies",
    "let",
    "talk",
    "roles",
    "around",
    "uh",
    "cloud",
    "architecture",
    "first",
    "solutions",
    "architect",
    "role",
    "technical",
    "organization",
    "architects",
    "technical",
    "solution",
    "using",
    "multiple",
    "systems",
    "via",
    "researching",
    "documentation",
    "experimentation",
    "cloud",
    "architect",
    "solutions",
    "architect",
    "focused",
    "solely",
    "architecting",
    "technical",
    "solutions",
    "using",
    "cloud",
    "services",
    "understand",
    "uh",
    "actual",
    "marketplace",
    "lot",
    "times",
    "solutions",
    "architect",
    "used",
    "describe",
    "cloud",
    "architect",
    "solutions",
    "architect",
    "know",
    "going",
    "highly",
    "vary",
    "based",
    "locality",
    "companies",
    "want",
    "use",
    "terms",
    "broadly",
    "defining",
    "take",
    "perfect",
    "word",
    "terms",
    "representing",
    "cloud",
    "architect",
    "needs",
    "understand",
    "following",
    "terms",
    "factors",
    "uh",
    "factor",
    "designed",
    "architecture",
    "based",
    "business",
    "requirements",
    "idea",
    "availability",
    "ability",
    "ensure",
    "service",
    "remains",
    "available",
    "scalability",
    "ability",
    "grow",
    "rapidly",
    "unimpeded",
    "elasticity",
    "ability",
    "shrink",
    "grow",
    "meet",
    "demand",
    "fault",
    "tolerance",
    "ability",
    "prevent",
    "failure",
    "disaster",
    "recover",
    "ability",
    "recover",
    "failure",
    "couple",
    "things",
    "uh",
    "considered",
    "terminologies",
    "definitely",
    "important",
    "solutions",
    "architect",
    "cloud",
    "architect",
    "uh",
    "things",
    "always",
    "need",
    "consider",
    "uh",
    "well",
    "talking",
    "solutions",
    "architect",
    "friends",
    "always",
    "ask",
    "two",
    "questions",
    "presentation",
    "say",
    "secure",
    "solution",
    "much",
    "going",
    "cost",
    "right",
    "terminologies",
    "going",
    "define",
    "right",
    "away",
    "going",
    "figure",
    "throughout",
    "course",
    "two",
    "giant",
    "sections",
    "cost",
    "security",
    "alone",
    "uh",
    "music",
    "go",
    "first",
    "term",
    "looking",
    "high",
    "availability",
    "ability",
    "service",
    "remain",
    "available",
    "ensuring",
    "single",
    "point",
    "failure",
    "ensure",
    "certain",
    "level",
    "performance",
    "way",
    "going",
    "ews",
    "want",
    "run",
    "workload",
    "across",
    "multiple",
    "availability",
    "zones",
    "ensure",
    "one",
    "two",
    "availability",
    "zones",
    "became",
    "unavailable",
    "servers",
    "applications",
    "remain",
    "available",
    "um",
    "servers",
    "going",
    "way",
    "would",
    "accomplish",
    "via",
    "elastic",
    "load",
    "balcer",
    "load",
    "balancer",
    "allows",
    "evenly",
    "distribute",
    "traffic",
    "multiple",
    "servers",
    "one",
    "data",
    "center",
    "data",
    "center",
    "server",
    "becomes",
    "unavailable",
    "unhealthy",
    "load",
    "bouncer",
    "route",
    "traffic",
    "available",
    "data",
    "centers",
    "within",
    "server",
    "understand",
    "additional",
    "servers",
    "mean",
    "uh",
    "available",
    "might",
    "need",
    "meet",
    "particular",
    "threshold",
    "availability",
    "might",
    "need",
    "least",
    "two",
    "servers",
    "always",
    "running",
    "meet",
    "demand",
    "based",
    "demand",
    "traffic",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "high",
    "scaleability",
    "ability",
    "increase",
    "capacity",
    "based",
    "increasing",
    "demand",
    "traffic",
    "memory",
    "computing",
    "power",
    "terms",
    "vertical",
    "scaling",
    "scaling",
    "um",
    "upgrade",
    "bigger",
    "server",
    "horizontal",
    "scaling",
    "scaling",
    "add",
    "servers",
    "size",
    "great",
    "thing",
    "scaling",
    "adding",
    "additional",
    "servers",
    "also",
    "going",
    "get",
    "um",
    "high",
    "availability",
    "need",
    "two",
    "servers",
    "always",
    "better",
    "know",
    "add",
    "additional",
    "server",
    "opposed",
    "larger",
    "server",
    "going",
    "dependent",
    "lot",
    "factors",
    "okay",
    "music",
    "scalability",
    "elasticity",
    "seem",
    "similar",
    "crucial",
    "difference",
    "ability",
    "automatically",
    "increase",
    "decrease",
    "capacity",
    "based",
    "current",
    "demand",
    "traffic",
    "memory",
    "computing",
    "power",
    "fact",
    "happens",
    "automatically",
    "go",
    "ways",
    "increase",
    "decrease",
    "horizontal",
    "scaling",
    "concept",
    "scaling",
    "add",
    "servers",
    "size",
    "scaling",
    "removing",
    "underutilized",
    "servers",
    "size",
    "vertical",
    "scaling",
    "generally",
    "hard",
    "traditional",
    "architectures",
    "usually",
    "see",
    "horizontal",
    "scaling",
    "described",
    "elasticity",
    "um",
    "way",
    "would",
    "accomplish",
    "uh",
    "highly",
    "elastic",
    "using",
    "autoscaling",
    "groups",
    "asgs",
    "naus",
    "feature",
    "automatically",
    "add",
    "remove",
    "servers",
    "based",
    "scaling",
    "rules",
    "define",
    "based",
    "metrics",
    "music",
    "okay",
    "let",
    "talk",
    "highly",
    "fault",
    "tolerant",
    "ability",
    "service",
    "ensure",
    "single",
    "point",
    "failure",
    "preventing",
    "chance",
    "failure",
    "way",
    "could",
    "fail",
    "overs",
    "plan",
    "shift",
    "traffic",
    "redundant",
    "system",
    "case",
    "primary",
    "system",
    "fails",
    "common",
    "example",
    "copy",
    "secondary",
    "uh",
    "uh",
    "uh",
    "database",
    "ongoing",
    "changes",
    "synced",
    "secondary",
    "system",
    "use",
    "fail",
    "occurs",
    "becomes",
    "primary",
    "database",
    "talking",
    "databases",
    "abs",
    "concept",
    "rds",
    "run",
    "duplicate",
    "standby",
    "database",
    "another",
    "availability",
    "zone",
    "case",
    "primary",
    "database",
    "music",
    "fails",
    "last",
    "high",
    "durability",
    "ability",
    "recover",
    "disaster",
    "prevent",
    "loss",
    "data",
    "solutions",
    "recover",
    "disaster",
    "uh",
    "disaster",
    "known",
    "disaster",
    "recovery",
    "backup",
    "fast",
    "restore",
    "backup",
    "backup",
    "still",
    "work",
    "ensure",
    "current",
    "live",
    "data",
    "corrupt",
    "maybe",
    "solution",
    "ads",
    "would",
    "using",
    "cloud",
    "endurer",
    "disaster",
    "recovery",
    "uh",
    "service",
    "continuously",
    "replicates",
    "machines",
    "lowcost",
    "staging",
    "area",
    "target",
    "ab",
    "account",
    "preferred",
    "region",
    "enabling",
    "fast",
    "reliable",
    "recovery",
    "case",
    "data",
    "center",
    "fails",
    "music",
    "okay",
    "understand",
    "disaster",
    "recovery",
    "need",
    "know",
    "uh",
    "things",
    "around",
    "like",
    "business",
    "continuity",
    "plans",
    "bcps",
    "rto",
    "rpos",
    "bcp",
    "document",
    "outlines",
    "business",
    "continue",
    "operating",
    "unplanned",
    "disruption",
    "services",
    "basically",
    "plan",
    "going",
    "execute",
    "uh",
    "happens",
    "disaster",
    "see",
    "chance",
    "data",
    "loss",
    "downtime",
    "two",
    "um",
    "uh",
    "factors",
    "rpo",
    "rto",
    "going",
    "define",
    "length",
    "durations",
    "recovery",
    "point",
    "objective",
    "maximum",
    "acceptable",
    "amount",
    "data",
    "loss",
    "unplanned",
    "data",
    "loss",
    "incident",
    "express",
    "amount",
    "time",
    "much",
    "data",
    "willing",
    "lose",
    "recovery",
    "time",
    "objective",
    "maximum",
    "amount",
    "downtime",
    "business",
    "tolerate",
    "without",
    "inuring",
    "significant",
    "financial",
    "loss",
    "much",
    "time",
    "willing",
    "go",
    "okay",
    "two",
    "let",
    "go",
    "take",
    "look",
    "disaster",
    "recovery",
    "options",
    "use",
    "define",
    "music",
    "bcp",
    "let",
    "take",
    "look",
    "disaster",
    "recovery",
    "options",
    "uh",
    "based",
    "choose",
    "going",
    "trade",
    "cost",
    "versus",
    "time",
    "recover",
    "based",
    "rpos",
    "rto",
    "course",
    "sometimes",
    "rep",
    "represented",
    "vertically",
    "like",
    "thermostat",
    "horizontally",
    "um",
    "valid",
    "ways",
    "displaying",
    "information",
    "horizontally",
    "today",
    "low",
    "high",
    "could",
    "say",
    "um",
    "even",
    "though",
    "written",
    "could",
    "cold",
    "could",
    "hot",
    "okay",
    "um",
    "left",
    "hand",
    "side",
    "got",
    "backup",
    "restore",
    "pilot",
    "light",
    "warm",
    "standby",
    "site",
    "notice",
    "using",
    "like",
    "words",
    "like",
    "pilot",
    "light",
    "warm",
    "things",
    "relating",
    "temperature",
    "cold",
    "hot",
    "right",
    "let",
    "walk",
    "things",
    "conceptually",
    "uh",
    "terms",
    "architecture",
    "backup",
    "restore",
    "back",
    "basically",
    "back",
    "data",
    "time",
    "disaster",
    "recovery",
    "going",
    "restore",
    "new",
    "infrastructure",
    "uh",
    "pilot",
    "light",
    "data",
    "replicated",
    "another",
    "region",
    "minimal",
    "services",
    "running",
    "keep",
    "replicating",
    "data",
    "might",
    "core",
    "services",
    "running",
    "warm",
    "standby",
    "scale",
    "copy",
    "infrastructure",
    "basically",
    "everything",
    "would",
    "absolutely",
    "need",
    "run",
    "application",
    "idea",
    "scale",
    "time",
    "incident",
    "going",
    "scale",
    "capacity",
    "need",
    "active",
    "active",
    "scaled",
    "copy",
    "infrastructure",
    "another",
    "region",
    "basically",
    "everything",
    "identically",
    "another",
    "region",
    "terms",
    "rpos",
    "rto",
    "back",
    "restore",
    "looking",
    "hours",
    "uh",
    "pilot",
    "light",
    "looking",
    "10",
    "minutes",
    "warm",
    "standby",
    "looking",
    "minutes",
    "multi",
    "sight",
    "uh",
    "active",
    "active",
    "looking",
    "uh",
    "real",
    "time",
    "know",
    "hopefully",
    "gives",
    "idea",
    "know",
    "difference",
    "terms",
    "scale",
    "let",
    "look",
    "detail",
    "backup",
    "restore",
    "low",
    "priority",
    "use",
    "cases",
    "restore",
    "data",
    "event",
    "deploy",
    "resources",
    "event",
    "cost",
    "effective",
    "uh",
    "pilot",
    "light",
    "less",
    "stringent",
    "rto",
    "rpos",
    "going",
    "running",
    "core",
    "services",
    "uh",
    "going",
    "start",
    "scale",
    "resources",
    "event",
    "little",
    "bit",
    "expensive",
    "uh",
    "good",
    "warm",
    "standby",
    "good",
    "business",
    "critical",
    "services",
    "scale",
    "resources",
    "event",
    "uh",
    "uh",
    "almost",
    "costly",
    "expensive",
    "active",
    "active",
    "get",
    "zero",
    "downtime",
    "near",
    "zero",
    "loss",
    "uh",
    "great",
    "mission",
    "critical",
    "services",
    "expensive",
    "original",
    "uh",
    "structure",
    "basically",
    "doubling",
    "class",
    "music",
    "okay",
    "already",
    "defined",
    "rto",
    "let",
    "redefine",
    "based",
    "adus",
    "describes",
    "white",
    "paper",
    "look",
    "maps",
    "um",
    "disaster",
    "recovery",
    "option",
    "recovery",
    "time",
    "objective",
    "maximum",
    "acceptable",
    "delay",
    "interruption",
    "service",
    "restoration",
    "service",
    "objective",
    "determines",
    "uh",
    "considered",
    "acceptable",
    "time",
    "window",
    "service",
    "unavailable",
    "defined",
    "organization",
    "diagram",
    "found",
    "white",
    "paper",
    "left",
    "hand",
    "side",
    "cost",
    "complexity",
    "lengths",
    "serious",
    "interruption",
    "see",
    "cost",
    "complexity",
    "sight",
    "active",
    "active",
    "high",
    "length",
    "service",
    "interruption",
    "zero",
    "go",
    "warm",
    "standby",
    "significantly",
    "like",
    "least",
    "half",
    "uh",
    "complexity",
    "one",
    "pilot",
    "light",
    "back",
    "restore",
    "notice",
    "backup",
    "restore",
    "takes",
    "longest",
    "amount",
    "time",
    "notice",
    "recovery",
    "time",
    "objective",
    "bcp",
    "kind",
    "define",
    "based",
    "cost",
    "business",
    "impact",
    "might",
    "calculate",
    "saying",
    "okay",
    "cost",
    "time",
    "based",
    "length",
    "service",
    "interruption",
    "want",
    "rto",
    "acceptable",
    "recovery",
    "cost",
    "going",
    "decide",
    "want",
    "pilot",
    "light",
    "backup",
    "restore",
    "company",
    "decide",
    "whether",
    "want",
    "pilot",
    "light",
    "going",
    "backham",
    "restore",
    "sounds",
    "like",
    "going",
    "pilot",
    "uh",
    "light",
    "acceptable",
    "business",
    "use",
    "case",
    "music",
    "okay",
    "let",
    "rpo",
    "recovery",
    "point",
    "objective",
    "maximum",
    "acceptable",
    "amount",
    "time",
    "since",
    "last",
    "data",
    "recovery",
    "point",
    "objective",
    "determines",
    "considered",
    "acceptable",
    "loss",
    "data",
    "last",
    "recovery",
    "point",
    "interruption",
    "service",
    "defined",
    "organization",
    "pulled",
    "white",
    "paper",
    "disaster",
    "recovery",
    "uh",
    "cost",
    "complexity",
    "time",
    "replaced",
    "data",
    "loss",
    "service",
    "interruption",
    "uh",
    "multisite",
    "going",
    "expensive",
    "high",
    "notice",
    "like",
    "perfect",
    "um",
    "uh",
    "curve",
    "bit",
    "different",
    "terms",
    "looks",
    "like",
    "warm",
    "stand",
    "standby",
    "pilot",
    "light",
    "um",
    "see",
    "data",
    "loss",
    "um",
    "big",
    "deal",
    "backup",
    "restore",
    "really",
    "juts",
    "see",
    "get",
    "pretty",
    "good",
    "good",
    "results",
    "pilot",
    "light",
    "cost",
    "complexity",
    "low",
    "look",
    "cost",
    "business",
    "impact",
    "got",
    "follow",
    "line",
    "need",
    "see",
    "acceptable",
    "uh",
    "recovery",
    "cost",
    "uh",
    "going",
    "notice",
    "uh",
    "bit",
    "intersection",
    "okay",
    "need",
    "determine",
    "know",
    "like",
    "going",
    "warm",
    "standby",
    "looks",
    "like",
    "cost",
    "um",
    "uh",
    "know",
    "really",
    "depends",
    "know",
    "want",
    "okay",
    "hopefully",
    "helps",
    "visualize",
    "information",
    "music",
    "hey",
    "andrew",
    "brown",
    "exampro",
    "want",
    "show",
    "real",
    "world",
    "architectural",
    "diagram",
    "created",
    "ago",
    "previous",
    "version",
    "um",
    "exam",
    "pro",
    "technically",
    "teacher",
    "seat",
    "platform",
    "uh",
    "powers",
    "learning",
    "experience",
    "uh",
    "class",
    "certifications",
    "hoping",
    "giving",
    "exposure",
    "absorb",
    "information",
    "uh",
    "carry",
    "really",
    "help",
    "cement",
    "services",
    "work",
    "together",
    "um",
    "might",
    "asking",
    "make",
    "well",
    "adobe",
    "xd",
    "photoshop",
    "sorry",
    "adobe",
    "free",
    "download",
    "lot",
    "options",
    "first",
    "thing",
    "need",
    "aws",
    "architectural",
    "icons",
    "free",
    "aws",
    "download",
    "powerpoint",
    "download",
    "asset",
    "svgs",
    "pgs",
    "done",
    "start",
    "using",
    "um",
    "uh",
    "whatever",
    "software",
    "like",
    "also",
    "third",
    "party",
    "providers",
    "like",
    "lucid",
    "charts",
    "love",
    "lucid",
    "charts",
    "use",
    "make",
    "architectural",
    "diagrams",
    "uh",
    "aws",
    "um",
    "know",
    "drag",
    "drop",
    "stuff",
    "already",
    "library",
    "bunch",
    "choose",
    "uh",
    "know",
    "interesting",
    "let",
    "take",
    "look",
    "one",
    "download",
    "maybe",
    "everyone",
    "familiar",
    "powerpoint",
    "adus",
    "architectural",
    "icons",
    "reason",
    "showing",
    "contains",
    "icons",
    "also",
    "suggests",
    "build",
    "go",
    "give",
    "definition",
    "system",
    "elements",
    "uh",
    "would",
    "look",
    "like",
    "group",
    "icons",
    "layer",
    "group",
    "service",
    "icons",
    "res",
    "icons",
    "go",
    "uh",
    "interesting",
    "guidelines",
    "like",
    "dos",
    "like",
    "simple",
    "example",
    "get",
    "s3",
    "bucket",
    "um",
    "example",
    "using",
    "vpc",
    "subnets",
    "things",
    "like",
    "inside",
    "um",
    "see",
    "kind",
    "like",
    "groups",
    "show",
    "like",
    "uh",
    "um",
    "arrows",
    "big",
    "faux",
    "pa",
    "make",
    "u",
    "diagonal",
    "arrows",
    "something",
    "eight",
    "us",
    "toine",
    "see",
    "lot",
    "people",
    "anyway",
    "see",
    "icons",
    "make",
    "like",
    "ad",
    "suggest",
    "know",
    "like",
    "way",
    "look",
    "fine",
    "everyone",
    "whatever",
    "want",
    "honestly",
    "anyway",
    "seen",
    "know",
    "go",
    "get",
    "resources",
    "make",
    "adobe",
    "xd",
    "open",
    "kind",
    "want",
    "walk",
    "going",
    "said",
    "traditional",
    "um",
    "architecture",
    "meaning",
    "powered",
    "virtual",
    "machines",
    "need",
    "look",
    "uh",
    "ec2",
    "going",
    "start",
    "virtual",
    "machine",
    "notice",
    "one",
    "t2",
    "um",
    "uh",
    "running",
    "t2",
    "okay",
    "uh",
    "blue",
    "green",
    "environment",
    "running",
    "environment",
    "going",
    "zoom",
    "okay",
    "web",
    "app",
    "would",
    "running",
    "um",
    "outside",
    "autoscaling",
    "group",
    "autoscaling",
    "groups",
    "allow",
    "us",
    "um",
    "manage",
    "group",
    "ec2",
    "instances",
    "automatically",
    "scale",
    "demand",
    "increases",
    "decline",
    "machine",
    "ca",
    "handle",
    "automatically",
    "provision",
    "new",
    "one",
    "contained",
    "environment",
    "representing",
    "blue",
    "green",
    "deploy",
    "meaning",
    "deploy",
    "get",
    "environment",
    "replaces",
    "things",
    "see",
    "lot",
    "lines",
    "drawn",
    "around",
    "um",
    "uh",
    "um",
    "parameter",
    "store",
    "parameter",
    "store",
    "place",
    "store",
    "environment",
    "variables",
    "um",
    "application",
    "configuration",
    "variables",
    "line",
    "going",
    "saying",
    "going",
    "take",
    "environment",
    "variables",
    "put",
    "application",
    "okay",
    "uh",
    "also",
    "uh",
    "database",
    "credential",
    "using",
    "postgress",
    "need",
    "database",
    "credential",
    "grabbing",
    "database",
    "credentials",
    "stored",
    "secrets",
    "manager",
    "giving",
    "application",
    "app",
    "knows",
    "connect",
    "database",
    "one",
    "knows",
    "uh",
    "configure",
    "okay",
    "um",
    "bunch",
    "uh",
    "buckets",
    "different",
    "organiz",
    "ganizations",
    "know",
    "s3",
    "storage",
    "way",
    "going",
    "um",
    "store",
    "variety",
    "things",
    "like",
    "user",
    "data",
    "assets",
    "artifacts",
    "cloud",
    "information",
    "templates",
    "app",
    "infrastructure",
    "one",
    "thing",
    "okay",
    "u",
    "cicd",
    "pipeline",
    "code",
    "pipeline",
    "code",
    "pipeline",
    "triggered",
    "github",
    "put",
    "code",
    "github",
    "happens",
    "going",
    "code",
    "build",
    "going",
    "build",
    "server",
    "um",
    "going",
    "run",
    "another",
    "code",
    "build",
    "server",
    "going",
    "um",
    "uh",
    "uh",
    "use",
    "code",
    "deploy",
    "code",
    "deploy",
    "going",
    "trigger",
    "deploy",
    "create",
    "new",
    "environment",
    "going",
    "create",
    "copy",
    "um",
    "sorry",
    "going",
    "create",
    "cop",
    "actually",
    "environment",
    "running",
    "copy",
    "new",
    "environment",
    "right",
    "okay",
    "deploy",
    "done",
    "swap",
    "environment",
    "become",
    "new",
    "one",
    "um",
    "know",
    "actually",
    "really",
    "running",
    "server",
    "kind",
    "easy",
    "get",
    "hung",
    "one",
    "idea",
    "um",
    "know",
    "deployment",
    "works",
    "let",
    "say",
    "uh",
    "know",
    "want",
    "get",
    "uh",
    "traffic",
    "actual",
    "instance",
    "going",
    "come",
    "internet",
    "internet",
    "going",
    "probably",
    "go",
    "rid",
    "3",
    "ref3",
    "used",
    "domain",
    "names",
    "like",
    "exampro",
    "doco",
    "pass",
    "elastic",
    "load",
    "balancer",
    "case",
    "application",
    "load",
    "bouncer",
    "called",
    "alb",
    "going",
    "distribute",
    "traffic",
    "wanted",
    "run",
    "server",
    "another",
    "um",
    "another",
    "availability",
    "zone",
    "make",
    "highly",
    "available",
    "um",
    "know",
    "alb",
    "elastic",
    "load",
    "bouncer",
    "application",
    "load",
    "balcer",
    "going",
    "uh",
    "traffic",
    "go",
    "traffic",
    "go",
    "uh",
    "blue",
    "environment",
    "whichever",
    "current",
    "environment",
    "want",
    "deploy",
    "new",
    "versions",
    "going",
    "use",
    "launch",
    "templates",
    "launch",
    "templates",
    "um",
    "uh",
    "necessary",
    "using",
    "autos",
    "scaling",
    "groups",
    "um",
    "know",
    "define",
    "launch",
    "template",
    "says",
    "like",
    "shape",
    "instance",
    "type",
    "like",
    "family",
    "need",
    "amazon",
    "machine",
    "image",
    "amazon",
    "machine",
    "image",
    "custom",
    "built",
    "installing",
    "stuff",
    "want",
    "order",
    "automate",
    "process",
    "using",
    "um",
    "ssm",
    "automation",
    "documents",
    "ssm",
    "stands",
    "systems",
    "manager",
    "automation",
    "allows",
    "automate",
    "step",
    "going",
    "launch",
    "instance",
    "install",
    "ruby",
    "install",
    "postgress",
    "download",
    "codebase",
    "going",
    "create",
    "ami",
    "um",
    "bunch",
    "stuff",
    "well",
    "going",
    "run",
    "weekly",
    "actually",
    "time",
    "uh",
    "running",
    "nightly",
    "nightly",
    "builds",
    "would",
    "always",
    "get",
    "latest",
    "um",
    "updates",
    "server",
    "um",
    "virtual",
    "machine",
    "could",
    "always",
    "uh",
    "new",
    "updates",
    "linux",
    "version",
    "amazon",
    "machine",
    "li",
    "version",
    "using",
    "bunch",
    "stuff",
    "know",
    "um",
    "hopefully",
    "kind",
    "gives",
    "idea",
    "like",
    "complexity",
    "know",
    "like",
    "make",
    "architectural",
    "diagrams",
    "detailed",
    "um",
    "look",
    "yeah",
    "much",
    "fine",
    "know",
    "complexity",
    "build",
    "start",
    "really",
    "grasp",
    "stuff",
    "pretty",
    "well",
    "music",
    "okay",
    "want",
    "show",
    "high",
    "availability",
    "built",
    "ad",
    "services",
    "cases",
    "explicitly",
    "choose",
    "want",
    "something",
    "highly",
    "available",
    "uh",
    "going",
    "make",
    "way",
    "s3",
    "s3",
    "create",
    "s3",
    "buckets",
    "allows",
    "uh",
    "store",
    "things",
    "great",
    "thing",
    "s3",
    "basically",
    "serverless",
    "storage",
    "idea",
    "going",
    "choose",
    "region",
    "default",
    "going",
    "replicate",
    "data",
    "across",
    "multiple",
    "um",
    "uh",
    "data",
    "centers",
    "azs",
    "one",
    "already",
    "highly",
    "available",
    "default",
    "standard",
    "tier",
    "uh",
    "something",
    "really",
    "nice",
    "services",
    "uh",
    "know",
    "like",
    "ec2",
    "idea",
    "going",
    "launch",
    "ec2",
    "instance",
    "launch",
    "one",
    "problem",
    "launch",
    "single",
    "ec2",
    "highly",
    "available",
    "single",
    "server",
    "running",
    "single",
    "um",
    "az",
    "know",
    "would",
    "choose",
    "subnet",
    "subnet",
    "availability",
    "zone",
    "launch",
    "least",
    "two",
    "additional",
    "servers",
    "route",
    "um",
    "uh",
    "uh",
    "something",
    "would",
    "balance",
    "uh",
    "traffic",
    "three",
    "load",
    "balcer",
    "case",
    "construct",
    "high",
    "availability",
    "services",
    "like",
    "elastic",
    "beanock",
    "platform",
    "service",
    "um",
    "go",
    "environments",
    "sure",
    "showing",
    "um",
    "idea",
    "elastic",
    "beant",
    "stock",
    "going",
    "click",
    "main",
    "service",
    "going",
    "go",
    "ahead",
    "uh",
    "create",
    "application",
    "create",
    "environment",
    "probably",
    "want",
    "create",
    "environment",
    "first",
    "okay",
    "would",
    "choose",
    "web",
    "server",
    "idea",
    "name",
    "application",
    "uh",
    "environment",
    "go",
    "configure",
    "options",
    "whoops",
    "wants",
    "choose",
    "everything",
    "totally",
    "fine",
    "say",
    "configure",
    "options",
    "going",
    "create",
    "um",
    "want",
    "create",
    "one",
    "idea",
    "uh",
    "could",
    "choose",
    "whether",
    "want",
    "high",
    "highly",
    "available",
    "see",
    "says",
    "single",
    "instance",
    "free",
    "tier",
    "uh",
    "choose",
    "going",
    "set",
    "bunch",
    "stuff",
    "going",
    "set",
    "application",
    "load",
    "balancer",
    "going",
    "set",
    "auto",
    "scaling",
    "groups",
    "make",
    "highly",
    "available",
    "going",
    "run",
    "least",
    "uh",
    "1",
    "four",
    "instances",
    "everything",
    "uh",
    "ec2",
    "manually",
    "setting",
    "really",
    "nice",
    "okay",
    "know",
    "options",
    "make",
    "way",
    "rds",
    "cating",
    "anything",
    "looking",
    "options",
    "gives",
    "us",
    "uh",
    "start",
    "things",
    "make",
    "way",
    "rds",
    "gives",
    "us",
    "moment",
    "go",
    "ahead",
    "create",
    "new",
    "database",
    "look",
    "something",
    "like",
    "postgress",
    "database",
    "notice",
    "production",
    "option",
    "dev",
    "test",
    "option",
    "mean",
    "usually",
    "shows",
    "us",
    "price",
    "even",
    "test",
    "dev",
    "118",
    "true",
    "make",
    "cheaper",
    "idea",
    "choose",
    "two",
    "options",
    "um",
    "going",
    "set",
    "uh",
    "going",
    "means",
    "going",
    "run",
    "additional",
    "um",
    "uh",
    "database",
    "another",
    "availability",
    "zone",
    "replicate",
    "data",
    "stays",
    "highly",
    "available",
    "um",
    "know",
    "going",
    "autoscaling",
    "uh",
    "uh",
    "part",
    "services",
    "choose",
    "abstractly",
    "understand",
    "highly",
    "availability",
    "going",
    "mean",
    "underneath",
    "hopefully",
    "kind",
    "gives",
    "picture",
    "high",
    "availability",
    "music",
    "aws",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "adus",
    "application",
    "programming",
    "interface",
    "also",
    "known",
    "adus",
    "api",
    "talk",
    "uh",
    "api",
    "let",
    "describe",
    "application",
    "programming",
    "interface",
    "api",
    "software",
    "allows",
    "two",
    "applications",
    "services",
    "talk",
    "common",
    "type",
    "api",
    "via",
    "http",
    "requests",
    "ads",
    "api",
    "actually",
    "http",
    "api",
    "interact",
    "sending",
    "hps",
    "requests",
    "using",
    "application",
    "interacting",
    "apis",
    "like",
    "postman",
    "kind",
    "example",
    "request",
    "would",
    "would",
    "sent",
    "way",
    "works",
    "ad",
    "service",
    "generally",
    "service",
    "endpoint",
    "see",
    "says",
    "monitoring",
    "going",
    "cloud",
    "watch",
    "sometimes",
    "named",
    "services",
    "sometimes",
    "name",
    "bit",
    "obscure",
    "course",
    "ca",
    "call",
    "uh",
    "call",
    "api",
    "request",
    "without",
    "authenticating",
    "authorizing",
    "sign",
    "request",
    "process",
    "making",
    "separate",
    "request",
    "uh",
    "adus",
    "credentials",
    "get",
    "back",
    "temporary",
    "token",
    "uh",
    "order",
    "authorize",
    "room",
    "show",
    "thing",
    "also",
    "going",
    "along",
    "requests",
    "would",
    "provide",
    "action",
    "look",
    "um",
    "adus",
    "api",
    "show",
    "bunch",
    "actions",
    "call",
    "basically",
    "ones",
    "see",
    "im",
    "policies",
    "could",
    "like",
    "describe",
    "ec2",
    "instances",
    "list",
    "buckets",
    "um",
    "also",
    "accompanied",
    "parameters",
    "okay",
    "know",
    "probably",
    "going",
    "show",
    "uh",
    "make",
    "api",
    "request",
    "directly",
    "something",
    "would",
    "generally",
    "um",
    "would",
    "probably",
    "use",
    "abis",
    "management",
    "console",
    "powered",
    "api",
    "use",
    "adis",
    "sdk",
    "powered",
    "api",
    "using",
    "ad",
    "cli",
    "cover",
    "three",
    "music",
    "okay",
    "right",
    "want",
    "point",
    "find",
    "resources",
    "use",
    "api",
    "program",
    "automatically",
    "uh",
    "going",
    "actually",
    "use",
    "api",
    "lot",
    "uh",
    "going",
    "show",
    "least",
    "familiar",
    "api",
    "works",
    "ads",
    "website",
    "type",
    "docs",
    "type",
    "top",
    "going",
    "bring",
    "main",
    "documentation",
    "looking",
    "scroll",
    "general",
    "reference",
    "area",
    "service",
    "endpoints",
    "click",
    "going",
    "uh",
    "talk",
    "um",
    "service",
    "endpoint",
    "structured",
    "go",
    "abis",
    "api",
    "see",
    "additional",
    "information",
    "course",
    "use",
    "um",
    "api",
    "going",
    "sign",
    "api",
    "requests",
    "first",
    "super",
    "simple",
    "process",
    "use",
    "authorization",
    "header",
    "um",
    "send",
    "along",
    "uh",
    "credentials",
    "things",
    "like",
    "want",
    "know",
    "service",
    "endpoints",
    "available",
    "search",
    "service",
    "endpoints",
    "list",
    "aws",
    "big",
    "list",
    "go",
    "look",
    "ec2",
    "uh",
    "might",
    "common",
    "example",
    "going",
    "tell",
    "us",
    "points",
    "see",
    "regional",
    "based",
    "idea",
    "could",
    "take",
    "something",
    "like",
    "okay",
    "could",
    "grab",
    "using",
    "something",
    "like",
    "postman",
    "could",
    "go",
    "create",
    "new",
    "request",
    "probably",
    "post",
    "sure",
    "supposed",
    "probably",
    "post",
    "set",
    "authorization",
    "header",
    "might",
    "even",
    "one",
    "adabs",
    "see",
    "says",
    "adabs",
    "signature",
    "go",
    "put",
    "access",
    "key",
    "secret",
    "within",
    "um",
    "something",
    "nice",
    "postman",
    "going",
    "signing",
    "requests",
    "makes",
    "life",
    "lot",
    "easier",
    "go",
    "body",
    "want",
    "enter",
    "json",
    "json",
    "would",
    "probably",
    "raw",
    "drop",
    "format",
    "json",
    "send",
    "payload",
    "whatever",
    "done",
    "common",
    "uh",
    "thing",
    "like",
    "describe",
    "ec2",
    "instances",
    "probably",
    "like",
    "action",
    "additional",
    "information",
    "send",
    "along",
    "um",
    "know",
    "hopefully",
    "gives",
    "kind",
    "idea",
    "api",
    "works",
    "know",
    "never",
    "pro",
    "uh",
    "practice",
    "ever",
    "really",
    "work",
    "api",
    "uh",
    "way",
    "directly",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "itus",
    "management",
    "console",
    "itus",
    "management",
    "console",
    "unified",
    "console",
    "build",
    "manage",
    "monitor",
    "everything",
    "simple",
    "web",
    "apps",
    "complex",
    "cloud",
    "deployments",
    "create",
    "adus",
    "account",
    "log",
    "using",
    "adus",
    "management",
    "console",
    "would",
    "surprised",
    "uh",
    "watching",
    "video",
    "already",
    "changed",
    "um",
    "default",
    "page",
    "since",
    "aos",
    "loves",
    "change",
    "ui",
    "us",
    "time",
    "uh",
    "uh",
    "way",
    "would",
    "access",
    "via",
    "console",
    "ab",
    "click",
    "sign",
    "go",
    "console",
    "link",
    "going",
    "uh",
    "idea",
    "point",
    "click",
    "manually",
    "launch",
    "configure",
    "adus",
    "resources",
    "limited",
    "programming",
    "knowledge",
    "known",
    "click",
    "ops",
    "since",
    "perform",
    "system",
    "operations",
    "via",
    "clicks",
    "okay",
    "music",
    "let",
    "talk",
    "adus",
    "management",
    "console",
    "brief",
    "know",
    "course",
    "homepage",
    "go",
    "adus",
    "management",
    "console",
    "end",
    "logging",
    "uh",
    "make",
    "way",
    "adus",
    "management",
    "console",
    "say",
    "adus",
    "management",
    "console",
    "referring",
    "uh",
    "homepage",
    "also",
    "referring",
    "anything",
    "web",
    "ui",
    "whether",
    "subservice",
    "know",
    "lot",
    "times",
    "people",
    "call",
    "dashboard",
    "uh",
    "homepage",
    "um",
    "know",
    "technically",
    "cre",
    "adus",
    "management",
    "console",
    "everything",
    "adus",
    "management",
    "console",
    "drop",
    "services",
    "like",
    "favorite",
    "left",
    "hand",
    "side",
    "find",
    "particularly",
    "useful",
    "see",
    "recent",
    "ones",
    "also",
    "show",
    "recently",
    "well",
    "search",
    "top",
    "notice",
    "hotkey",
    "alt",
    "think",
    "ever",
    "use",
    "type",
    "service",
    "like",
    "ec2",
    "going",
    "get",
    "services",
    "subfeatures",
    "click",
    "main",
    "service",
    "console",
    "would",
    "call",
    "ec2",
    "console",
    "ec2",
    "service",
    "console",
    "ever",
    "hear",
    "saying",
    "go",
    "ec2",
    "console",
    "saying",
    "notice",
    "like",
    "stuff",
    "left",
    "hand",
    "side",
    "come",
    "back",
    "ec2",
    "image",
    "builder",
    "ec2",
    "global",
    "views",
    "considered",
    "services",
    "drop",
    "says",
    "top",
    "features",
    "go",
    "says",
    "dashboard",
    "limits",
    "amis",
    "go",
    "uh",
    "ec2",
    "dashboard",
    "limits",
    "amis",
    "limits",
    "somewhere",
    "right",
    "okay",
    "kind",
    "map",
    "pretty",
    "well",
    "plls",
    "documentation",
    "knowledge",
    "based",
    "articles",
    "marketplace",
    "think",
    "ever",
    "touched",
    "life",
    "uh",
    "cloud",
    "shell",
    "click",
    "launch",
    "cloud",
    "shell",
    "cover",
    "get",
    "section",
    "little",
    "bell",
    "tells",
    "us",
    "open",
    "issues",
    "think",
    "personal",
    "health",
    "dashboard",
    "yeah",
    "says",
    "phd",
    "bottom",
    "left",
    "corner",
    "left",
    "corner",
    "open",
    "bring",
    "phd",
    "personal",
    "health",
    "dashboard",
    "right",
    "uh",
    "region",
    "selector",
    "nothing",
    "super",
    "exciting",
    "kind",
    "giving",
    "bit",
    "tour",
    "know",
    "things",
    "um",
    "change",
    "look",
    "think",
    "right",
    "yet",
    "um",
    "way",
    "sure",
    "aos",
    "thinking",
    "high",
    "uh",
    "request",
    "demand",
    "uh",
    "looks",
    "like",
    "today",
    "music",
    "okay",
    "right",
    "want",
    "describe",
    "service",
    "console",
    "service",
    "customized",
    "console",
    "access",
    "consoles",
    "searching",
    "service",
    "name",
    "would",
    "go",
    "ahead",
    "type",
    "ec2",
    "refer",
    "screen",
    "ec2",
    "console",
    "reason",
    "telling",
    "going",
    "lot",
    "labs",
    "follow",
    "alongs",
    "hear",
    "instructor",
    "say",
    "go",
    "ec2",
    "console",
    "go",
    "stagemaker",
    "console",
    "go",
    "rds",
    "console",
    "telling",
    "go",
    "type",
    "name",
    "service",
    "go",
    "um",
    "particular",
    "services",
    "uh",
    "console",
    "okay",
    "uh",
    "service",
    "consoles",
    "act",
    "umbrella",
    "console",
    "containing",
    "many",
    "adus",
    "services",
    "uh",
    "know",
    "vpc",
    "console",
    "ec2",
    "console",
    "systems",
    "manager",
    "console",
    "stagemaker",
    "console",
    "uh",
    "cloudwatch",
    "console",
    "contain",
    "multiple",
    "services",
    "know",
    "um",
    "ec2",
    "might",
    "say",
    "okay",
    "well",
    "need",
    "security",
    "group",
    "security",
    "group",
    "console",
    "ec2",
    "console",
    "okay",
    "uh",
    "aware",
    "music",
    "want",
    "show",
    "service",
    "consoles",
    "kind",
    "distinguish",
    "might",
    "vary",
    "per",
    "per",
    "service",
    "okay",
    "look",
    "ec2",
    "um",
    "look",
    "interesting",
    "thing",
    "uh",
    "consoles",
    "ec2",
    "console",
    "uh",
    "home",
    "databus",
    "services",
    "learn",
    "time",
    "know",
    "instance",
    "elastic",
    "block",
    "store",
    "service",
    "tightly",
    "uh",
    "linked",
    "ec2",
    "instances",
    "always",
    "thing",
    "amis",
    "uh",
    "security",
    "groups",
    "thing",
    "interesting",
    "basically",
    "part",
    "virtual",
    "networking",
    "think",
    "vpc",
    "console",
    "actually",
    "ec2",
    "load",
    "balancing",
    "auto",
    "scaling",
    "groups",
    "tightly",
    "coupled",
    "um",
    "uh",
    "ec2",
    "make",
    "way",
    "vpc",
    "um",
    "know",
    "going",
    "contain",
    "new",
    "stuff",
    "new",
    "experience",
    "guess",
    "newest",
    "one",
    "looks",
    "bit",
    "old",
    "little",
    "bit",
    "new",
    "know",
    "lot",
    "different",
    "things",
    "like",
    "fire",
    "firewalls",
    "vpns",
    "transit",
    "gateways",
    "traffic",
    "mirroring",
    "make",
    "way",
    "cloud",
    "watch",
    "okay",
    "cloudwatch",
    "uh",
    "uh",
    "focused",
    "services",
    "actually",
    "named",
    "like",
    "feels",
    "like",
    "single",
    "service",
    "focused",
    "um",
    "services",
    "alarms",
    "logs",
    "metrics",
    "events",
    "insights",
    "right",
    "going",
    "notice",
    "like",
    "ui",
    "highly",
    "varies",
    "looked",
    "cloud",
    "watch",
    "looked",
    "u",
    "vpc",
    "looks",
    "like",
    "looked",
    "ec2",
    "looked",
    "like",
    "inconsistencies",
    "um",
    "service",
    "uh",
    "team",
    "like",
    "work",
    "per",
    "service",
    "whatever",
    "full",
    "control",
    "ui",
    "um",
    "uh",
    "different",
    "states",
    "updating",
    "people",
    "might",
    "updated",
    "column",
    "part",
    "old",
    "might",
    "click",
    "around",
    "like",
    "something",
    "else",
    "like",
    "ec2",
    "dashboard",
    "um",
    "maybe",
    "better",
    "example",
    "might",
    "amis",
    "remember",
    "something",
    "looked",
    "old",
    "yeah",
    "see",
    "old",
    "buttons",
    "everything",
    "uh",
    "modular",
    "get",
    "updated",
    "time",
    "challenge",
    "dealing",
    "always",
    "like",
    "three",
    "different",
    "versions",
    "cobbled",
    "together",
    "uh",
    "um",
    "ui",
    "one",
    "thing",
    "found",
    "really",
    "interesting",
    "um",
    "vpc",
    "console",
    "management",
    "console",
    "look",
    "uh",
    "sdk",
    "look",
    "um",
    "abs",
    "sdk",
    "uh",
    "ec2",
    "okay",
    "looking",
    "r",
    "ruby",
    "example",
    "know",
    "um",
    "look",
    "let",
    "say",
    "want",
    "pragmatically",
    "work",
    "vpcs",
    "think",
    "would",
    "top",
    "level",
    "vpc",
    "console",
    "uh",
    "management",
    "console",
    "actually",
    "vpc",
    "tightly",
    "coupled",
    "ec2",
    "want",
    "pragmatically",
    "use",
    "vpc",
    "going",
    "um",
    "using",
    "actually",
    "ec2",
    "uh",
    "built",
    "trying",
    "get",
    "apis",
    "one",
    "one",
    "match",
    "kind",
    "stuff",
    "kind",
    "interesting",
    "kind",
    "uh",
    "differences",
    "uh",
    "big",
    "deal",
    "trying",
    "say",
    "like",
    "know",
    "keep",
    "mind",
    "open",
    "looking",
    "stuff",
    "music",
    "okay",
    "every",
    "adist",
    "account",
    "unique",
    "account",
    "id",
    "account",
    "id",
    "easily",
    "found",
    "dropping",
    "current",
    "user",
    "global",
    "navigation",
    "going",
    "pull",
    "pen",
    "tool",
    "show",
    "right",
    "uh",
    "ab",
    "account",
    "id",
    "composed",
    "12",
    "digits",
    "could",
    "look",
    "like",
    "theab",
    "account",
    "id",
    "used",
    "logging",
    "uh",
    "nonroot",
    "user",
    "account",
    "uh",
    "generally",
    "lot",
    "people",
    "like",
    "set",
    "alias",
    "tiring",
    "remember",
    "account",
    "uh",
    "id",
    "uh",
    "use",
    "creating",
    "cross",
    "account",
    "r",
    "target",
    "account",
    "source",
    "account",
    "id",
    "gain",
    "access",
    "resources",
    "another",
    "account",
    "uh",
    "dealing",
    "support",
    "cases",
    "ads",
    "commonly",
    "ask",
    "account",
    "id",
    "identify",
    "account",
    "want",
    "look",
    "generally",
    "good",
    "keep",
    "account",
    "id",
    "private",
    "one",
    "many",
    "components",
    "used",
    "dentify",
    "account",
    "attack",
    "malicious",
    "actor",
    "uh",
    "overly",
    "sensitive",
    "know",
    "try",
    "hide",
    "easy",
    "music",
    "okay",
    "right",
    "let",
    "talk",
    "account",
    "id",
    "appears",
    "top",
    "right",
    "corner",
    "uh",
    "get",
    "account",
    "id",
    "also",
    "appears",
    "im",
    "go",
    "look",
    "right",
    "hand",
    "side",
    "show",
    "example",
    "keeps",
    "trying",
    "take",
    "us",
    "old",
    "dashboard",
    "fine",
    "um",
    "notice",
    "mfa",
    "turned",
    "im",
    "user",
    "account",
    "turned",
    "everything",
    "given",
    "uh",
    "know",
    "want",
    "show",
    "also",
    "might",
    "using",
    "one",
    "example",
    "would",
    "use",
    "would",
    "need",
    "know",
    "account",
    "id",
    "would",
    "something",
    "like",
    "creating",
    "cross",
    "account",
    "policy",
    "went",
    "went",
    "policy",
    "went",
    "create",
    "policy",
    "um",
    "went",
    "maybe",
    "roll",
    "think",
    "actually",
    "sorry",
    "want",
    "cross",
    "account",
    "roll",
    "policy",
    "sorry",
    "go",
    "say",
    "want",
    "access",
    "something",
    "another",
    "account",
    "specify",
    "account",
    "id",
    "specify",
    "accounts",
    "use",
    "role",
    "give",
    "think",
    "id",
    "account",
    "okay",
    "one",
    "place",
    "use",
    "another",
    "place",
    "would",
    "creating",
    "policies",
    "go",
    "back",
    "policies",
    "create",
    "policy",
    "choose",
    "something",
    "like",
    "s3",
    "okay",
    "choose",
    "list",
    "request",
    "conditions",
    "might",
    "specify",
    "think",
    "account",
    "ide",
    "um",
    "know",
    "limit",
    "based",
    "account",
    "id",
    "principal",
    "account",
    "could",
    "principal",
    "account",
    "looked",
    "abs",
    "principal",
    "account",
    "got",
    "get",
    "used",
    "googling",
    "things",
    "always",
    "happening",
    "able",
    "specify",
    "account",
    "id",
    "yeah",
    "like",
    "would",
    "principle",
    "took",
    "matter",
    "put",
    "value",
    "um",
    "string",
    "equals",
    "add",
    "able",
    "go",
    "see",
    "full",
    "statement",
    "sometimes",
    "happens",
    "fully",
    "filled",
    "um",
    "yeah",
    "pretty",
    "much",
    "pretty",
    "much",
    "use",
    "like",
    "would",
    "normally",
    "show",
    "go",
    "ahead",
    "go",
    "next",
    "policy",
    "contains",
    "error",
    "required",
    "choose",
    "resource",
    "mean",
    "resource",
    "right",
    "oh",
    "okay",
    "sorry",
    "uh",
    "say",
    "resources",
    "flip",
    "valid",
    "see",
    "condition",
    "saying",
    "account",
    "id",
    "allowed",
    "um",
    "places",
    "going",
    "see",
    "account",
    "ids",
    "um",
    "ars",
    "right",
    "ec2",
    "instance",
    "one",
    "launched",
    "right",
    "go",
    "ahead",
    "oh",
    "maybe",
    "prior",
    "ones",
    "yeah",
    "checkbox",
    "might",
    "prior",
    "ones",
    "might",
    "nothing",
    "see",
    "look",
    "ar",
    "ar",
    "sometimes",
    "show",
    "arn",
    "services",
    "sometimes",
    "wish",
    "abot",
    "always",
    "showed",
    "arn",
    "make",
    "lives",
    "bit",
    "easier",
    "could",
    "reasons",
    "even",
    "though",
    "r",
    "think",
    "shows",
    "us",
    "shows",
    "us",
    "owner",
    "id",
    "account",
    "uh",
    "account",
    "id",
    "number",
    "tell",
    "12",
    "digits",
    "hopefully",
    "gives",
    "kind",
    "tour",
    "account",
    "id",
    "purpose",
    "account",
    "okay",
    "music",
    "right",
    "let",
    "take",
    "look",
    "tools",
    "powershell",
    "powershell",
    "powershell",
    "task",
    "automation",
    "configuration",
    "management",
    "framework",
    "command",
    "like",
    "shell",
    "scripting",
    "language",
    "uh",
    "windows",
    "user",
    "used",
    "seeing",
    "big",
    "blue",
    "window",
    "unlike",
    "shells",
    "accept",
    "return",
    "text",
    "powershell",
    "built",
    "top",
    "net",
    "common",
    "language",
    "runtime",
    "clr",
    "accepts",
    "returns",
    "net",
    "objects",
    "uh",
    "thing",
    "called",
    "adus",
    "tools",
    "powershell",
    "lets",
    "interact",
    "adus",
    "api",
    "via",
    "powershell",
    "commandlets",
    "commandlets",
    "special",
    "type",
    "command",
    "powerwell",
    "form",
    "capitalized",
    "verb",
    "noun",
    "case",
    "new",
    "hyphen",
    "s3",
    "bucket",
    "know",
    "looked",
    "cli",
    "generally",
    "bash",
    "um",
    "uh",
    "know",
    "shells",
    "po",
    "shell",
    "another",
    "type",
    "shell",
    "popular",
    "wanted",
    "highlight",
    "people",
    "uh",
    "know",
    "used",
    "using",
    "microsoft",
    "workloads",
    "azure",
    "workloads",
    "uh",
    "actually",
    "exists",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "pow",
    "shell",
    "tools",
    "um",
    "actually",
    "used",
    "one",
    "yet",
    "kind",
    "curious",
    "windows",
    "machine",
    "um",
    "open",
    "cm",
    "powershell",
    "probably",
    "ca",
    "see",
    "bring",
    "type",
    "powershell",
    "computer",
    "notice",
    "um",
    "would",
    "launch",
    "looks",
    "like",
    "blue",
    "screen",
    "okay",
    "um",
    "mac",
    "going",
    "totally",
    "fine",
    "need",
    "windows",
    "machine",
    "use",
    "powershell",
    "go",
    "ahead",
    "use",
    "cloud",
    "shell",
    "make",
    "sure",
    "region",
    "supports",
    "cloud",
    "shell",
    "switch",
    "back",
    "north",
    "virginia",
    "uh",
    "important",
    "exam",
    "kind",
    "fun",
    "go",
    "like",
    "want",
    "watch",
    "uh",
    "want",
    "change",
    "powershell",
    "imagine",
    "must",
    "um",
    "change",
    "powershell",
    "type",
    "ad",
    "us",
    "po",
    "us",
    "cloud",
    "shell",
    "power",
    "shell",
    "like",
    "okay",
    "going",
    "scroll",
    "following",
    "shells",
    "uh",
    "bash",
    "power",
    "shell",
    "z",
    "shell",
    "identify",
    "yeah",
    "course",
    "switch",
    "new",
    "shell",
    "enter",
    "shell",
    "program",
    "name",
    "command",
    "line",
    "prompt",
    "oh",
    "wow",
    "easy",
    "um",
    "want",
    "pwsh",
    "type",
    "pwsh",
    "let",
    "find",
    "give",
    "moment",
    "think",
    "oh",
    "go",
    "okay",
    "using",
    "powershell",
    "would",
    "think",
    "ads",
    "would",
    "give",
    "us",
    "go",
    "instructions",
    "scroll",
    "probably",
    "like",
    "oh",
    "wait",
    "like",
    "use",
    "powershell",
    "lot",
    "easy",
    "install",
    "modules",
    "um",
    "done",
    "never",
    "remember",
    "let",
    "see",
    "find",
    "want",
    "documentation",
    "powershell",
    "going",
    "go",
    "um",
    "maybe",
    "reference",
    "want",
    "see",
    "examples",
    "commandlets",
    "look",
    "s3",
    "never",
    "done",
    "always",
    "great",
    "jumping",
    "uh",
    "things",
    "want",
    "list",
    "buckets",
    "going",
    "search",
    "word",
    "list",
    "um",
    "see",
    "find",
    "something",
    "simple",
    "calls",
    "get",
    "list",
    "buckets",
    "api",
    "operation",
    "think",
    "going",
    "going",
    "click",
    "okay",
    "going",
    "see",
    "copy",
    "command",
    "go",
    "ahead",
    "copy",
    "paste",
    "like",
    "got",
    "little",
    "shell",
    "tweak",
    "need",
    "bucket",
    "name",
    "want",
    "return",
    "list",
    "buckets",
    "owned",
    "author",
    "bucket",
    "name",
    "want",
    "explicitly",
    "set",
    "required",
    "false",
    "remove",
    "okay",
    "look",
    "next",
    "one",
    "select",
    "required",
    "false",
    "use",
    "select",
    "command",
    "control",
    "command",
    "l",
    "output",
    "default",
    "bucket",
    "specifying",
    "select",
    "result",
    "turning",
    "whole",
    "buckets",
    "specifying",
    "name",
    "uh",
    "says",
    "required",
    "let",
    "take",
    "well",
    "think",
    "need",
    "actually",
    "let",
    "go",
    "put",
    "think",
    "must",
    "something",
    "need",
    "put",
    "front",
    "right",
    "well",
    "let",
    "see",
    "happens",
    "uh",
    "term",
    "recognized",
    "name",
    "command",
    "l",
    "function",
    "script",
    "operable",
    "think",
    "missing",
    "something",
    "front",
    "go",
    "user",
    "guide",
    "quickly",
    "get",
    "getting",
    "started",
    "want",
    "super",
    "simple",
    "example",
    "new",
    "bucket",
    "get",
    "bucket",
    "well",
    "let",
    "try",
    "one",
    "work",
    "right",
    "going",
    "change",
    "us",
    "east",
    "one",
    "term",
    "new",
    "bucket",
    "recognized",
    "name",
    "commandlet",
    "function",
    "guessing",
    "commandlets",
    "installed",
    "would",
    "thought",
    "would",
    "installed",
    "default",
    "guess",
    "look",
    "install",
    "installing",
    "linux",
    "suppose",
    "install",
    "modulized",
    "version",
    "powershell",
    "computers",
    "install",
    "adus",
    "tools",
    "linux",
    "pw",
    "h",
    "start",
    "powershell",
    "core",
    "session",
    "guess",
    "must",
    "start",
    "linux",
    "install",
    "module",
    "way",
    "yeah",
    "said",
    "easy",
    "install",
    "things",
    "hit",
    "enter",
    "cross",
    "fingers",
    "hope",
    "works",
    "hope",
    "fast",
    "going",
    "take",
    "look",
    "peek",
    "forward",
    "uh",
    "notified",
    "repository",
    "un",
    "trusted",
    "asked",
    "want",
    "trust",
    "anyway",
    "hit",
    "waiting",
    "um",
    "installing",
    "module",
    "usted",
    "repository",
    "funny",
    "untrusted",
    "aws",
    "maybe",
    "kind",
    "drama",
    "microsoft",
    "letting",
    "aws",
    "official",
    "module",
    "looks",
    "like",
    "installed",
    "type",
    "get",
    "s3",
    "buckets",
    "um",
    "unless",
    "typed",
    "wrong",
    "still",
    "seem",
    "working",
    "go",
    "try",
    "create",
    "new",
    "bucket",
    "still",
    "recom",
    "recognize",
    "command",
    "command",
    "lit",
    "must",
    "going",
    "um",
    "notified",
    "install",
    "module",
    "service",
    "okay",
    "well",
    "installing",
    "modules",
    "untrusted",
    "trust",
    "change",
    "uh",
    "change",
    "installation",
    "policy",
    "value",
    "running",
    "set",
    "policy",
    "command",
    "sure",
    "want",
    "install",
    "module",
    "ps",
    "gallery",
    "said",
    "yes",
    "gave",
    "capital",
    "anything",
    "else",
    "oh",
    "hold",
    "installer",
    "actual",
    "tool",
    "want",
    "install",
    "install",
    "oh",
    "installed",
    "thing",
    "use",
    "thing",
    "install",
    "s3",
    "okay",
    "great",
    "hard",
    "okay",
    "say",
    "yes",
    "going",
    "install",
    "guess",
    "everything",
    "oh",
    "said",
    "ec2",
    "s3",
    "well",
    "need",
    "fine",
    "going",
    "go",
    "get",
    "bucket",
    "recognizes",
    "lists",
    "items",
    "go",
    "create",
    "new",
    "bucket",
    "okay",
    "make",
    "way",
    "back",
    "databas",
    "management",
    "console",
    "go",
    "s3",
    "need",
    "buckets",
    "lying",
    "around",
    "going",
    "go",
    "ahead",
    "delete",
    "buckets",
    "say",
    "delete",
    "bucket",
    "great",
    "go",
    "one",
    "say",
    "delete",
    "bucket",
    "excellent",
    "right",
    "idea",
    "use",
    "powershell",
    "powershell",
    "really",
    "popular",
    "way",
    "inputs",
    "standardized",
    "outputs",
    "come",
    "popular",
    "um",
    "powerful",
    "scripting",
    "tool",
    "cli",
    "tool",
    "well",
    "uh",
    "know",
    "hopefully",
    "interesting",
    "close",
    "go",
    "back",
    "homepage",
    "always",
    "clicking",
    "logo",
    "music",
    "go",
    "amazon",
    "resource",
    "names",
    "uniquely",
    "identif",
    "aws",
    "resources",
    "ars",
    "required",
    "specify",
    "resource",
    "ambiguously",
    "across",
    "aws",
    "ar",
    "following",
    "format",
    "variations",
    "different",
    "things",
    "notice",
    "sometimes",
    "resource",
    "id",
    "path",
    "resource",
    "type",
    "could",
    "separated",
    "colon",
    "partition",
    "um",
    "could",
    "either",
    "ads",
    "china",
    "gov",
    "cloud",
    "basically",
    "adus",
    "uh",
    "portal",
    "url",
    "completely",
    "separated",
    "uh",
    "talked",
    "earlier",
    "course",
    "uh",
    "service",
    "identifier",
    "ec2",
    "s3",
    "im",
    "pretty",
    "much",
    "every",
    "service",
    "uh",
    "service",
    "uh",
    "name",
    "would",
    "identified",
    "region",
    "would",
    "pretty",
    "obvious",
    "us",
    "east",
    "one",
    "ca",
    "central",
    "1",
    "count",
    "id",
    "would",
    "12",
    "digits",
    "uh",
    "resource",
    "id",
    "uh",
    "could",
    "name",
    "pass",
    "like",
    "um",
    "im",
    "users",
    "user",
    "bob",
    "ec2",
    "instance",
    "irns",
    "accessible",
    "via",
    "aas",
    "management",
    "console",
    "usually",
    "click",
    "r",
    "copy",
    "clipboard",
    "s3",
    "bucket",
    "notice",
    "little",
    "bit",
    "different",
    "global",
    "service",
    "aws",
    "reason",
    "specify",
    "region",
    "account",
    "id",
    "uh",
    "anything",
    "else",
    "like",
    "resource",
    "type",
    "straight",
    "away",
    "already",
    "know",
    "bucket",
    "say",
    "bucket",
    "one",
    "really",
    "short",
    "cases",
    "really",
    "long",
    "load",
    "balcer",
    "information",
    "notice",
    "like",
    "pass",
    "low",
    "bouncer",
    "app",
    "server",
    "id",
    "okay",
    "paths",
    "ars",
    "also",
    "include",
    "wild",
    "card",
    "aster",
    "see",
    "like",
    "im",
    "policies",
    "paths",
    "really",
    "useful",
    "um",
    "uh",
    "policies",
    "specify",
    "ar",
    "want",
    "say",
    "group",
    "things",
    "things",
    "like",
    "music",
    "go",
    "right",
    "let",
    "take",
    "look",
    "amazon",
    "resource",
    "name",
    "also",
    "known",
    "arn",
    "um",
    "ars",
    "used",
    "reference",
    "objects",
    "commonly",
    "used",
    "using",
    "cli",
    "sdk",
    "reference",
    "something",
    "um",
    "easiest",
    "example",
    "s3",
    "right",
    "go",
    "s3",
    "create",
    "new",
    "bucket",
    "um",
    "go",
    "ahead",
    "create",
    "new",
    "one",
    "say",
    "new",
    "bucket",
    "going",
    "put",
    "bunch",
    "numbers",
    "matter",
    "hit",
    "create",
    "bucket",
    "see",
    "click",
    "orange",
    "properties",
    "okay",
    "many",
    "cases",
    "might",
    "want",
    "use",
    "rn",
    "lot",
    "times",
    "copy",
    "uh",
    "common",
    "example",
    "would",
    "policies",
    "go",
    "policies",
    "right",
    "want",
    "get",
    "policies",
    "save",
    "trouble",
    "create",
    "policy",
    "know",
    "might",
    "want",
    "restrict",
    "someone",
    "use",
    "bucket",
    "say",
    "s3",
    "okay",
    "going",
    "say",
    "um",
    "want",
    "able",
    "read",
    "write",
    "particular",
    "bucket",
    "go",
    "drop",
    "resources",
    "lot",
    "options",
    "um",
    "maybe",
    "get",
    "rid",
    "read",
    "option",
    "going",
    "actually",
    "expand",
    "right",
    "creating",
    "much",
    "work",
    "want",
    "um",
    "put",
    "put",
    "object",
    "use",
    "put",
    "something",
    "bucket",
    "expand",
    "resource",
    "notice",
    "says",
    "add",
    "irn",
    "go",
    "could",
    "type",
    "bucket",
    "name",
    "paste",
    "top",
    "probably",
    "easier",
    "grab",
    "sometimes",
    "know",
    "ar",
    "lot",
    "times",
    "expand",
    "fill",
    "get",
    "ar",
    "put",
    "let",
    "list",
    "oh",
    "could",
    "also",
    "way",
    "easier",
    "go",
    "json",
    "valid",
    "go",
    "saying",
    "um",
    "policy",
    "allows",
    "somebody",
    "put",
    "object",
    "particular",
    "bucket",
    "would",
    "example",
    "would",
    "use",
    "um",
    "r",
    "okay",
    "uh",
    "using",
    "uh",
    "support",
    "might",
    "use",
    "r",
    "um",
    "get",
    "help",
    "support",
    "saying",
    "hey",
    "look",
    "particular",
    "resource",
    "exactly",
    "cloud",
    "support",
    "engineer",
    "help",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "adus",
    "command",
    "line",
    "interface",
    "got",
    "define",
    "terms",
    "cli",
    "command",
    "line",
    "interface",
    "processes",
    "commands",
    "computer",
    "program",
    "form",
    "lines",
    "text",
    "operating",
    "system",
    "implement",
    "command",
    "line",
    "interface",
    "sh",
    "l",
    "okay",
    "terminal",
    "terminal",
    "text",
    "interface",
    "input",
    "output",
    "environment",
    "console",
    "physical",
    "computer",
    "physically",
    "input",
    "information",
    "terminal",
    "shell",
    "shell",
    "command",
    "line",
    "program",
    "users",
    "interact",
    "uh",
    "input",
    "commands",
    "popular",
    "shell",
    "programs",
    "bash",
    "uh",
    "zsh",
    "powershell",
    "uh",
    "might",
    "remember",
    "one",
    "ms",
    "dos",
    "prompt",
    "around",
    "obviously",
    "long",
    "time",
    "maybe",
    "kind",
    "primes",
    "mind",
    "shell",
    "know",
    "people",
    "commonly",
    "erroneously",
    "use",
    "terminal",
    "shell",
    "console",
    "generally",
    "describe",
    "interacting",
    "shell",
    "say",
    "shell",
    "console",
    "terminal",
    "talking",
    "thing",
    "technically",
    "difference",
    "three",
    "things",
    "people",
    "care",
    "would",
    "worry",
    "much",
    "okay",
    "let",
    "take",
    "look",
    "itus",
    "command",
    "line",
    "interface",
    "allows",
    "programmatically",
    "interact",
    "itus",
    "api",
    "via",
    "entering",
    "single",
    "commands",
    "shell",
    "say",
    "terminal",
    "really",
    "shell",
    "okay",
    "uh",
    "example",
    "one",
    "trying",
    "describe",
    "uh",
    "ec2",
    "instances",
    "getting",
    "output",
    "asked",
    "back",
    "table",
    "like",
    "view",
    "cli",
    "python",
    "executable",
    "program",
    "python",
    "required",
    "install",
    "cli",
    "cli",
    "installed",
    "windows",
    "mac",
    "linux",
    "unix",
    "name",
    "ca",
    "program",
    "aws",
    "notice",
    "top",
    "left",
    "corner",
    "lot",
    "need",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "aus",
    "cli",
    "easiest",
    "way",
    "get",
    "started",
    "actually",
    "via",
    "cloud",
    "shell",
    "notice",
    "little",
    "icon",
    "top",
    "right",
    "corner",
    "cloud",
    "shell",
    "going",
    "allow",
    "us",
    "um",
    "uh",
    "pratically",
    "things",
    "without",
    "set",
    "environments",
    "click",
    "okay",
    "uh",
    "say",
    "show",
    "close",
    "way",
    "see",
    "cloud",
    "shell",
    "could",
    "region",
    "like",
    "go",
    "canada",
    "central",
    "search",
    "cloudshell",
    "okay",
    "going",
    "say",
    "supported",
    "regions",
    "bit",
    "annoying",
    "cloud",
    "shell",
    "loads",
    "already",
    "uh",
    "credentials",
    "loaded",
    "within",
    "account",
    "going",
    "save",
    "us",
    "lot",
    "time",
    "terms",
    "uh",
    "know",
    "trying",
    "get",
    "set",
    "exception",
    "wait",
    "environment",
    "create",
    "takes",
    "little",
    "bit",
    "time",
    "bad",
    "um",
    "waiting",
    "show",
    "actually",
    "would",
    "install",
    "cli",
    "typed",
    "itus",
    "cli",
    "install",
    "right",
    "uh",
    "went",
    "way",
    "would",
    "install",
    "believe",
    "python",
    "library",
    "went",
    "version",
    "two",
    "said",
    "linux",
    "uh",
    "go",
    "instructions",
    "curl",
    "unzip",
    "um",
    "know",
    "installed",
    "cli",
    "commands",
    "still",
    "going",
    "know",
    "maybe",
    "show",
    "would",
    "like",
    "install",
    "cli",
    "hand",
    "want",
    "one",
    "easy",
    "way",
    "go",
    "github",
    "matter",
    "repository",
    "looking",
    "anything",
    "open",
    "git",
    "pod",
    "go",
    "top",
    "type",
    "git",
    "pod",
    "maybe",
    "want",
    "see",
    "whoops",
    "maybe",
    "get",
    "pods",
    "oh",
    "get",
    "pod",
    "giving",
    "oh",
    "know",
    "doio",
    "okay",
    "go",
    "back",
    "sorry",
    "type",
    "doio",
    "launch",
    "temporary",
    "environment",
    "outside",
    "aws",
    "actually",
    "install",
    "cli",
    "would",
    "great",
    "opportunity",
    "show",
    "install",
    "cli",
    "way",
    "git",
    "pod",
    "free",
    "use",
    "um",
    "know",
    "going",
    "set",
    "environment",
    "let",
    "us",
    "simulate",
    "installing",
    "cli",
    "cli",
    "going",
    "see",
    "bump",
    "font",
    "um",
    "let",
    "make",
    "font",
    "large",
    "go",
    "light",
    "dark",
    "dark",
    "sounds",
    "good",
    "type",
    "aws",
    "give",
    "moment",
    "see",
    "uh",
    "command",
    "say",
    "abs",
    "s3",
    "ls",
    "whoops",
    "able",
    "list",
    "things",
    "bucket",
    "currently",
    "bucket",
    "wondering",
    "know",
    "commands",
    "type",
    "cli",
    "commands",
    "okay",
    "go",
    "um",
    "go",
    "cli",
    "ref",
    "reference",
    "um",
    "anything",
    "want",
    "right",
    "go",
    "want",
    "see",
    "running",
    "s3",
    "go",
    "scroll",
    "going",
    "show",
    "commands",
    "like",
    "copy",
    "move",
    "remove",
    "sync",
    "uh",
    "mbr",
    "rb",
    "uh",
    "list",
    "right",
    "looking",
    "particular",
    "command",
    "go",
    "say",
    "okay",
    "look",
    "ls",
    "explain",
    "little",
    "options",
    "always",
    "give",
    "examples",
    "right",
    "see",
    "examples",
    "like",
    "wanted",
    "move",
    "something",
    "s3",
    "bucket",
    "let",
    "say",
    "want",
    "create",
    "new",
    "s3",
    "bucket",
    "um",
    "type",
    "aws",
    "s3",
    "hit",
    "enter",
    "tell",
    "us",
    "um",
    "sub",
    "commands",
    "maybe",
    "like",
    "help",
    "like",
    "scroll",
    "guess",
    "pulls",
    "documentation",
    "let",
    "hoping",
    "would",
    "give",
    "us",
    "like",
    "tiny",
    "summary",
    "okay",
    "want",
    "create",
    "bucket",
    "type",
    "like",
    "buckets",
    "know",
    "something",
    "go",
    "ads",
    "s3",
    "cli",
    "create",
    "bucket",
    "go",
    "um",
    "always",
    "go",
    "examples",
    "ads",
    "s3",
    "api",
    "create",
    "bucket",
    "know",
    "unusual",
    "s3",
    "s3",
    "api",
    "know",
    "always",
    "way",
    "question",
    "anymore",
    "go",
    "ahead",
    "create",
    "new",
    "bucket",
    "go",
    "ahead",
    "paste",
    "command",
    "want",
    "change",
    "bit",
    "name",
    "could",
    "unique",
    "make",
    "sure",
    "get",
    "want",
    "putting",
    "random",
    "numbers",
    "going",
    "choose",
    "region",
    "us",
    "east",
    "one",
    "wanted",
    "things",
    "could",
    "scroll",
    "look",
    "flags",
    "uh",
    "looks",
    "fine",
    "think",
    "go",
    "back",
    "hit",
    "uh",
    "paste",
    "okay",
    "created",
    "bucket",
    "go",
    "s3",
    "wait",
    "moment",
    "see",
    "bucket",
    "exists",
    "wanted",
    "place",
    "something",
    "bucket",
    "like",
    "touch",
    "file",
    "say",
    "um",
    "touch",
    "touch",
    "linux",
    "command",
    "make",
    "empty",
    "file",
    "say",
    "um",
    "s3",
    "um",
    "would",
    "sp",
    "copy",
    "going",
    "give",
    "local",
    "path",
    "need",
    "give",
    "bucket",
    "address",
    "s3",
    "colon",
    "sl",
    "sl",
    "bucket",
    "name",
    "named",
    "going",
    "try",
    "type",
    "hand",
    "hard",
    "want",
    "say",
    "want",
    "put",
    "file",
    "going",
    "say",
    "right",
    "work",
    "expected",
    "says",
    "uploaded",
    "file",
    "make",
    "way",
    "back",
    "s3",
    "refresh",
    "file",
    "want",
    "copy",
    "file",
    "back",
    "locally",
    "um",
    "going",
    "remove",
    "going",
    "delete",
    "original",
    "hello",
    "txt",
    "file",
    "ls",
    "show",
    "nothing",
    "need",
    "oops",
    "revert",
    "instead",
    "saying",
    "address",
    "go",
    "type",
    "ls",
    "file",
    "know",
    "address",
    "bucket",
    "um",
    "lot",
    "times",
    "go",
    "find",
    "always",
    "changing",
    "ui",
    "go",
    "properties",
    "arn",
    "uh",
    "usually",
    "good",
    "way",
    "find",
    "go",
    "actual",
    "object",
    "go",
    "give",
    "full",
    "url",
    "could",
    "grabbed",
    "could",
    "pasted",
    "um",
    "know",
    "learn",
    "time",
    "hard",
    "remember",
    "s3",
    "co",
    "sl",
    "unique",
    "name",
    "want",
    "show",
    "install",
    "hand",
    "git",
    "pods",
    "um",
    "sure",
    "change",
    "dark",
    "theme",
    "really",
    "like",
    "eyes",
    "go",
    "color",
    "theme",
    "say",
    "get",
    "pa",
    "dark",
    "go",
    "temporary",
    "workspace",
    "close",
    "gone",
    "totally",
    "fine",
    "going",
    "typee",
    "aws",
    "see",
    "installed",
    "going",
    "go",
    "runs",
    "linux",
    "default",
    "already",
    "know",
    "going",
    "use",
    "linux",
    "want",
    "use",
    "version",
    "two",
    "um",
    "latest",
    "version",
    "use",
    "command",
    "specific",
    "version",
    "want",
    "generic",
    "one",
    "going",
    "go",
    "ahead",
    "copy",
    "whoops",
    "yes",
    "allow",
    "paste",
    "hit",
    "enter",
    "okay",
    "take",
    "next",
    "command",
    "paste",
    "hit",
    "enter",
    "go",
    "take",
    "next",
    "command",
    "hit",
    "enter",
    "run",
    "uh",
    "aws",
    "type",
    "aws",
    "command",
    "uh",
    "thing",
    "aws",
    "s3",
    "ls",
    "going",
    "work",
    "credentials",
    "set",
    "give",
    "moment",
    "think",
    "says",
    "unable",
    "locate",
    "credentials",
    "configure",
    "credentials",
    "running",
    "adus",
    "configure",
    "type",
    "ad",
    "configure",
    "way",
    "font",
    "small",
    "believe",
    "bump",
    "like",
    "great",
    "way",
    "um",
    "works",
    "says",
    "ads",
    "access",
    "key",
    "id",
    "go",
    "im",
    "looking",
    "particular",
    "user",
    "remember",
    "first",
    "created",
    "account",
    "generated",
    "access",
    "key",
    "go",
    "security",
    "credentials",
    "key",
    "need",
    "secret",
    "key",
    "useless",
    "going",
    "go",
    "ahead",
    "deactivate",
    "cuz",
    "even",
    "want",
    "key",
    "going",
    "create",
    "new",
    "key",
    "going",
    "access",
    "id",
    "secret",
    "whenever",
    "generate",
    "never",
    "ever",
    "ever",
    "ever",
    "ever",
    "show",
    "anyone",
    "alone",
    "okay",
    "cloud",
    "shell",
    "fine",
    "going",
    "close",
    "going",
    "go",
    "back",
    "get",
    "pods",
    "hit",
    "enter",
    "id",
    "going",
    "go",
    "grab",
    "secret",
    "hit",
    "enter",
    "paste",
    "want",
    "go",
    "us",
    "east",
    "one",
    "save",
    "trouble",
    "uh",
    "change",
    "output",
    "json",
    "tables",
    "going",
    "leave",
    "default",
    "type",
    "abs",
    "s3",
    "ls",
    "get",
    "list",
    "want",
    "grab",
    "file",
    "going",
    "grab",
    "s3",
    "u",
    "type",
    "s3",
    "api",
    "sorry",
    "ls",
    "sorry",
    "sorry",
    "cp",
    "going",
    "paste",
    "link",
    "going",
    "say",
    "must",
    "done",
    "command",
    "wrong",
    "missing",
    "s3",
    "hit",
    "keyboard",
    "get",
    "command",
    "back",
    "type",
    "ls",
    "list",
    "mean",
    "code",
    "know",
    "repo",
    "want",
    "github",
    "really",
    "matter",
    "uh",
    "see",
    "file",
    "probably",
    "used",
    "one",
    "makes",
    "bit",
    "mess",
    "um",
    "yeah",
    "pretty",
    "straightforward",
    "one",
    "thing",
    "show",
    "credentials",
    "stored",
    "default",
    "going",
    "stored",
    "um",
    "going",
    "hidden",
    "directory",
    "root",
    "home",
    "directory",
    "called",
    "ad",
    "credentials",
    "like",
    "ls",
    "see",
    "config",
    "file",
    "credentials",
    "file",
    "cat",
    "lets",
    "print",
    "contents",
    "file",
    "go",
    "saying",
    "default",
    "region",
    "us",
    "east1",
    "tomel",
    "file",
    "even",
    "though",
    "toml",
    "end",
    "know",
    "looking",
    "config",
    "lets",
    "set",
    "uh",
    "defaults",
    "going",
    "apply",
    "credentials",
    "uh",
    "within",
    "credential",
    "file",
    "actual",
    "credentials",
    "wanted",
    "set",
    "could",
    "go",
    "set",
    "also",
    "set",
    "multiple",
    "credentials",
    "go",
    "going",
    "open",
    "buy",
    "sure",
    "open",
    "main",
    "one",
    "wanted",
    "multiple",
    "accounts",
    "like",
    "exam",
    "pro",
    "repeat",
    "different",
    "keys",
    "right",
    "wanted",
    "use",
    "cli",
    "command",
    "actually",
    "going",
    "go",
    "back",
    "second",
    "okay",
    "want",
    "um",
    "way",
    "using",
    "vi",
    "never",
    "use",
    "vim",
    "bit",
    "tricky",
    "use",
    "uh",
    "might",
    "want",
    "use",
    "nano",
    "instead",
    "kind",
    "new",
    "uh",
    "use",
    "like",
    "regular",
    "key",
    "key",
    "cuts",
    "shows",
    "like",
    "control",
    "x",
    "alt",
    "x",
    "alt",
    "x",
    "nop",
    "contr",
    "x",
    "go",
    "um",
    "anyway",
    "go",
    "file",
    "delete",
    "original",
    "one",
    "right",
    "try",
    "um",
    "command",
    "even",
    "though",
    "already",
    "file",
    "either",
    "hang",
    "complain",
    "could",
    "kill",
    "control",
    "c",
    "ads",
    "s3",
    "ls",
    "notice",
    "hanging",
    "unable",
    "locate",
    "credentials",
    "default",
    "one",
    "go",
    "put",
    "profile",
    "say",
    "exam",
    "pro",
    "right",
    "use",
    "profile",
    "way",
    "um",
    "hopefully",
    "gives",
    "kind",
    "crash",
    "course",
    "cli",
    "um",
    "yeah",
    "go",
    "okay",
    "going",
    "go",
    "ahead",
    "close",
    "delete",
    "bucket",
    "want",
    "probably",
    "good",
    "idea",
    "delete",
    "going",
    "say",
    "permanently",
    "delete",
    "okay",
    "good",
    "okay",
    "close",
    "yeah",
    "introduction",
    "cli",
    "yeah",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "development",
    "kits",
    "uh",
    "software",
    "development",
    "kit",
    "sdk",
    "collection",
    "software",
    "development",
    "tools",
    "one",
    "installable",
    "package",
    "use",
    "aws",
    "sdk",
    "programmatically",
    "create",
    "modify",
    "delete",
    "interact",
    "adabs",
    "resources",
    "adabs",
    "sdk",
    "offered",
    "variety",
    "programming",
    "languages",
    "java",
    "python",
    "nodejs",
    "ruby",
    "php",
    "javascript",
    "would",
    "example",
    "uh",
    "rub",
    "code",
    "creating",
    "um",
    "s3",
    "bucket",
    "uploading",
    "file",
    "music",
    "okay",
    "okay",
    "going",
    "show",
    "use",
    "adabs",
    "sdk",
    "uh",
    "uh",
    "going",
    "need",
    "kind",
    "ide",
    "um",
    "basically",
    "code",
    "editor",
    "looked",
    "g",
    "pods",
    "thirdparty",
    "service",
    "fine",
    "let",
    "take",
    "look",
    "cloud9",
    "built",
    "aws",
    "type",
    "cloud9",
    "go",
    "ide",
    "going",
    "launch",
    "new",
    "environment",
    "hit",
    "create",
    "going",
    "say",
    "sdk",
    "environment",
    "env",
    "hard",
    "time",
    "typing",
    "environment",
    "like",
    "options",
    "create",
    "new2",
    "instance",
    "direct",
    "access",
    "create",
    "via",
    "assistance",
    "manager",
    "run",
    "remote",
    "ssh",
    "going",
    "leave",
    "default",
    "option",
    "choose",
    "size",
    "want",
    "leave",
    "t2",
    "micro",
    "free",
    "tier",
    "going",
    "scroll",
    "amazon",
    "linux",
    "2",
    "linux",
    "ami",
    "going",
    "stick",
    "uh",
    "amazon",
    "link",
    "2",
    "turn",
    "30",
    "minutes",
    "great",
    "option",
    "us",
    "go",
    "ahead",
    "hit",
    "next",
    "hit",
    "create",
    "environment",
    "going",
    "wait",
    "little",
    "bit",
    "launch",
    "take",
    "minutes",
    "going",
    "let",
    "go",
    "google",
    "type",
    "itus",
    "sdk",
    "um",
    "get",
    "main",
    "page",
    "idea",
    "bunch",
    "different",
    "languages",
    "use",
    "go",
    "java",
    "javascript",
    "net",
    "php",
    "python",
    "ruby",
    "uh",
    "really",
    "big",
    "fan",
    "ruby",
    "using",
    "ruby",
    "since",
    "2005",
    "going",
    "also",
    "really",
    "easy",
    "use",
    "really",
    "great",
    "language",
    "um",
    "know",
    "showing",
    "different",
    "things",
    "go",
    "sdk",
    "click",
    "ruby",
    "examples",
    "developer",
    "guide",
    "api",
    "reference",
    "tells",
    "get",
    "started",
    "even",
    "saying",
    "like",
    "hey",
    "go",
    "get",
    "started",
    "cloud9",
    "great",
    "well",
    "suppose",
    "um",
    "might",
    "show",
    "install",
    "um",
    "open",
    "api",
    "references",
    "looks",
    "like",
    "lot",
    "times",
    "want",
    "something",
    "know",
    "like",
    "want",
    "something",
    "s3",
    "scroll",
    "look",
    "s3",
    "right",
    "kind",
    "like",
    "uh",
    "scroll",
    "around",
    "look",
    "know",
    "mean",
    "sometimes",
    "expand",
    "go",
    "client",
    "every",
    "api",
    "slightly",
    "different",
    "kind",
    "figure",
    "navigate",
    "actually",
    "s3",
    "right",
    "looking",
    "client",
    "know",
    "memory",
    "first",
    "create",
    "client",
    "api",
    "operations",
    "wanted",
    "like",
    "list",
    "buckets",
    "search",
    "word",
    "list",
    "scroll",
    "click",
    "example",
    "list",
    "bucket",
    "going",
    "go",
    "back",
    "cloud9",
    "ready",
    "started",
    "dark",
    "mode",
    "um",
    "dark",
    "mode",
    "really",
    "honestly",
    "would",
    "want",
    "dark",
    "mode",
    "um",
    "go",
    "think",
    "like",
    "file",
    "uh",
    "preferences",
    "got",
    "click",
    "cloud9",
    "option",
    "seeing",
    "like",
    "remembers",
    "settings",
    "really",
    "like",
    "two",
    "two",
    "soft",
    "tabs",
    "uh",
    "something",
    "themes",
    "um",
    "seem",
    "like",
    "used",
    "like",
    "oh",
    "go",
    "choose",
    "like",
    "whatever",
    "want",
    "jet",
    "dark",
    "classic",
    "light",
    "something",
    "like",
    "fix",
    "um",
    "going",
    "go",
    "fiddle",
    "settings",
    "really",
    "like",
    "use",
    "vim",
    "uh",
    "keys",
    "recommend",
    "uh",
    "change",
    "programmer",
    "going",
    "change",
    "type",
    "efficiently",
    "looking",
    "option",
    "moved",
    "move",
    "probably",
    "like",
    "key",
    "bindings",
    "ah",
    "bim",
    "mode",
    "go",
    "uh",
    "move",
    "around",
    "different",
    "way",
    "want",
    "way",
    "looks",
    "like",
    "default",
    "screen",
    "could",
    "changed",
    "clicked",
    "nothing",
    "entire",
    "time",
    "um",
    "need",
    "need",
    "make",
    "sure",
    "credentials",
    "type",
    "ads",
    "um",
    "s3",
    "ls",
    "like",
    "sanity",
    "check",
    "always",
    "like",
    "make",
    "sure",
    "credentials",
    "notice",
    "set",
    "credentials",
    "already",
    "machine",
    "really",
    "nice",
    "going",
    "create",
    "new",
    "file",
    "okay",
    "know",
    "anything",
    "ruby",
    "going",
    "fun",
    "follow",
    "along",
    "going",
    "example",
    "rb",
    "going",
    "make",
    "sure",
    "ruby",
    "installed",
    "ruby",
    "hyphen",
    "v",
    "installed",
    "great",
    "uh",
    "need",
    "gem",
    "file",
    "say",
    "new",
    "gem",
    "file",
    "go",
    "back",
    "installation",
    "guide",
    "uh",
    "need",
    "gem",
    "stk",
    "actually",
    "going",
    "look",
    "generate",
    "gem",
    "file",
    "gem",
    "file",
    "stuff",
    "goes",
    "top",
    "files",
    "like",
    "think",
    "need",
    "line",
    "going",
    "grab",
    "whoops",
    "paste",
    "allow",
    "good",
    "uh",
    "gem",
    "ads",
    "sdk",
    "install",
    "everything",
    "uh",
    "want",
    "work",
    "s3",
    "going",
    "vary",
    "based",
    "language",
    "know",
    "type",
    "s3",
    "get",
    "s3",
    "really",
    "need",
    "need",
    "use",
    "bundle",
    "install",
    "going",
    "make",
    "sure",
    "correct",
    "directory",
    "going",
    "type",
    "ls",
    "notice",
    "gem",
    "file",
    "uh",
    "way",
    "fonts",
    "small",
    "probably",
    "bump",
    "let",
    "see",
    "uh",
    "editor",
    "size",
    "font",
    "user",
    "settings",
    "good",
    "luck",
    "trying",
    "find",
    "today",
    "um",
    "project",
    "think",
    "user",
    "settings",
    "right",
    "ah",
    "okay",
    "um",
    "probably",
    "editor",
    "go",
    "18",
    "co",
    "code",
    "editor",
    "trying",
    "find",
    "one",
    "terminal",
    "probably",
    "go",
    "much",
    "easier",
    "okay",
    "notice",
    "example",
    "rb",
    "gem",
    "file",
    "correct",
    "directory",
    "make",
    "sure",
    "save",
    "going",
    "type",
    "bundle",
    "install",
    "going",
    "install",
    "gems",
    "give",
    "moment",
    "going",
    "fetch",
    "notice",
    "installed",
    "um",
    "adabs",
    "sdks",
    "s3",
    "everything",
    "dependent",
    "go",
    "example",
    "rb",
    "file",
    "really",
    "coding",
    "cloud",
    "pretty",
    "much",
    "copy",
    "paste",
    "everything",
    "found",
    "code",
    "s3",
    "list",
    "buckets",
    "um",
    "going",
    "go",
    "ahead",
    "paste",
    "okay",
    "know",
    "looks",
    "really",
    "complicated",
    "quickly",
    "simplify",
    "know",
    "output",
    "need",
    "okay",
    "ruby",
    "need",
    "parentheses",
    "curries",
    "uh",
    "anything",
    "things",
    "need",
    "define",
    "client",
    "click",
    "uh",
    "go",
    "top",
    "file",
    "think",
    "client",
    "right",
    "way",
    "top",
    "way",
    "top",
    "need",
    "okay",
    "going",
    "paste",
    "uh",
    "set",
    "region",
    "going",
    "say",
    "us",
    "east",
    "one",
    "right",
    "credentials",
    "um",
    "credentials",
    "machine",
    "um",
    "credentials",
    "file",
    "going",
    "autoload",
    "believe",
    "think",
    "need",
    "set",
    "going",
    "take",
    "second",
    "okay",
    "want",
    "slightly",
    "different",
    "syntax",
    "might",
    "easier",
    "read",
    "way",
    "okay",
    "need",
    "double",
    "client",
    "client",
    "like",
    "name",
    "like",
    "s3",
    "know",
    "put",
    "puts",
    "response",
    "going",
    "inspect",
    "puts",
    "like",
    "print",
    "okay",
    "type",
    "bundle",
    "exact",
    "let",
    "make",
    "sure",
    "context",
    "bundler",
    "file",
    "ruby",
    "example",
    "rb",
    "um",
    "syntax",
    "error",
    "line",
    "unexpected",
    "thing",
    "oh",
    "commented",
    "going",
    "curly",
    "parenthesis",
    "comment",
    "okay",
    "actually",
    "make",
    "bit",
    "easier",
    "going",
    "bring",
    "like",
    "okay",
    "paste",
    "okay",
    "try",
    "un",
    "initialized",
    "constants",
    "ad",
    "us",
    "oh",
    "yeah",
    "require",
    "require",
    "abus",
    "sdk",
    "s3",
    "think",
    "hit",
    "uh",
    "got",
    "struck",
    "back",
    "working",
    "getting",
    "object",
    "back",
    "want",
    "play",
    "around",
    "bit",
    "going",
    "install",
    "another",
    "gem",
    "called",
    "pry",
    "pry",
    "allows",
    "us",
    "um",
    "inspect",
    "code",
    "going",
    "bundle",
    "install",
    "going",
    "go",
    "back",
    "ruby",
    "going",
    "put",
    "binding",
    "pry",
    "hit",
    "bundle",
    "exact",
    "ruby",
    "example",
    "rb",
    "um",
    "installed",
    "right",
    "install",
    "yes",
    "undefine",
    "method",
    "pry",
    "oh",
    "require",
    "bad",
    "habit",
    "okay",
    "hit",
    "interactive",
    "shall",
    "kind",
    "analyze",
    "object",
    "response",
    "type",
    "rsp",
    "structure",
    "object",
    "type",
    "buckets",
    "okay",
    "showing",
    "bucket",
    "give",
    "get",
    "name",
    "um",
    "oh",
    "think",
    "array",
    "think",
    "say",
    "like",
    "say",
    "like",
    "zero",
    "could",
    "say",
    "first",
    "ruby",
    "language",
    "works",
    "say",
    "name",
    "get",
    "name",
    "creation",
    "date",
    "okay",
    "get",
    "idea",
    "whatever",
    "want",
    "know",
    "search",
    "say",
    "want",
    "delete",
    "bucket",
    "want",
    "create",
    "bucket",
    "right",
    "look",
    "say",
    "create",
    "bucket",
    "click",
    "see",
    "options",
    "always",
    "really",
    "good",
    "giving",
    "example",
    "always",
    "tell",
    "parameters",
    "sdk",
    "works",
    "uh",
    "yeah",
    "credentials",
    "uh",
    "soft",
    "loaded",
    "could",
    "easily",
    "provide",
    "show",
    "anything",
    "else",
    "variations",
    "um",
    "trying",
    "look",
    "separate",
    "code",
    "could",
    "one",
    "way",
    "could",
    "separate",
    "code",
    "wanted",
    "configure",
    "right",
    "could",
    "could",
    "lot",
    "clients",
    "would",
    "want",
    "keep",
    "like",
    "client",
    "would",
    "want",
    "put",
    "region",
    "every",
    "time",
    "could",
    "take",
    "put",
    "right",
    "okay",
    "file",
    "credentials",
    "would",
    "um",
    "access",
    "key",
    "id",
    "never",
    "want",
    "put",
    "code",
    "directly",
    "open",
    "go",
    "cat",
    "would",
    "never",
    "want",
    "going",
    "show",
    "example",
    "uh",
    "credentials",
    "oops",
    "got",
    "get",
    "exit",
    "ads",
    "credentials",
    "oh",
    "even",
    "show",
    "machine",
    "would",
    "smart",
    "would",
    "really",
    "want",
    "see",
    "credentials",
    "uh",
    "hit",
    "say",
    "ls",
    "oh",
    "okay",
    "cat",
    "whoops",
    "credentials",
    "okay",
    "know",
    "look",
    "see",
    "credentials",
    "set",
    "little",
    "bit",
    "different",
    "like",
    "session",
    "token",
    "guess",
    "make",
    "sure",
    "expires",
    "time",
    "take",
    "okay",
    "paste",
    "one",
    "way",
    "would",
    "um",
    "never",
    "ever",
    "want",
    "ever",
    "ever",
    "ever",
    "ever",
    "never",
    "want",
    "end",
    "committing",
    "code",
    "um",
    "really",
    "dirty",
    "ever",
    "recommend",
    "um",
    "wanted",
    "apply",
    "everything",
    "could",
    "put",
    "call",
    "client",
    "um",
    "course",
    "loaded",
    "machine",
    "thing",
    "like",
    "want",
    "could",
    "load",
    "via",
    "environment",
    "variables",
    "usually",
    "want",
    "say",
    "ads",
    "uh",
    "access",
    "key",
    "right",
    "say",
    "environment",
    "databus",
    "access",
    "secret",
    "set",
    "think",
    "like",
    "export",
    "um",
    "environment",
    "variables",
    "set",
    "linux",
    "think",
    "know",
    "like",
    "15",
    "years",
    "never",
    "remember",
    "type",
    "export",
    "go",
    "oops",
    "type",
    "export",
    "say",
    "something",
    "like",
    "going",
    "show",
    "example",
    "see",
    "works",
    "going",
    "say",
    "hello",
    "world",
    "okay",
    "uh",
    "hello",
    "like",
    "echo",
    "see",
    "prints",
    "would",
    "set",
    "set",
    "actually",
    "specific",
    "ones",
    "adabs",
    "uses",
    "um",
    "api",
    "ones",
    "always",
    "want",
    "use",
    "okay",
    "put",
    "course",
    "know",
    "like",
    "already",
    "said",
    "machine",
    "even",
    "specify",
    "cuz",
    "would",
    "auto",
    "load",
    "environment",
    "variables",
    "think",
    "set",
    "right",
    "type",
    "echo",
    "take",
    "look",
    "going",
    "get",
    "autoloaded",
    "anyway",
    "could",
    "go",
    "example",
    "well",
    "actually",
    "show",
    "right",
    "see",
    "access",
    "key",
    "go",
    "type",
    "um",
    "export",
    "going",
    "paste",
    "key",
    "going",
    "go",
    "front",
    "type",
    "adab",
    "us",
    "access",
    "key",
    "id",
    "equals",
    "enter",
    "echo",
    "ads",
    "access",
    "key",
    "id",
    "okay",
    "shows",
    "want",
    "show",
    "kind",
    "vary",
    "conditions",
    "around",
    "yeah",
    "adus",
    "sdk",
    "um",
    "yeah",
    "lot",
    "times",
    "copying",
    "pasting",
    "code",
    "kind",
    "tweaking",
    "really",
    "writing",
    "uh",
    "real",
    "programming",
    "okay",
    "hopefully",
    "less",
    "intimidating",
    "going",
    "close",
    "want",
    "close",
    "cloud9",
    "environment",
    "um",
    "might",
    "reopen",
    "another",
    "tab",
    "go",
    "management",
    "console",
    "go",
    "cloud9",
    "close",
    "tab",
    "go",
    "ahead",
    "delete",
    "environment",
    "oops",
    "type",
    "delete",
    "even",
    "would",
    "turn",
    "30",
    "minutes",
    "free",
    "tier",
    "big",
    "deal",
    "whether",
    "want",
    "use",
    "cloud9",
    "g",
    "pods",
    "cloud9",
    "really",
    "good",
    "allows",
    "um",
    "uh",
    "allows",
    "uh",
    "use",
    "runs",
    "virtual",
    "machine",
    "right",
    "container",
    "run",
    "time",
    "easy",
    "run",
    "containers",
    "um",
    "whereas",
    "like",
    "issues",
    "g",
    "pods",
    "um",
    "yeah",
    "two",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "itus",
    "cloud",
    "shell",
    "browser",
    "based",
    "shell",
    "built",
    "adus",
    "management",
    "console",
    "cloud",
    "shell",
    "scoped",
    "per",
    "region",
    "credentials",
    "loged",
    "user",
    "free",
    "service",
    "looks",
    "like",
    "great",
    "thing",
    "know",
    "hard",
    "time",
    "setting",
    "uh",
    "shell",
    "terminal",
    "computer",
    "um",
    "maybe",
    "access",
    "privilege",
    "great",
    "databus",
    "makes",
    "uh",
    "available",
    "click",
    "shell",
    "icon",
    "top",
    "expand",
    "things",
    "note",
    "cloud",
    "shell",
    "tools",
    "cli",
    "python",
    "nodejs",
    "git",
    "make",
    "pip",
    "pseudo",
    "tar",
    "vim",
    "wg",
    "vim",
    "includes",
    "1",
    "gab",
    "storage",
    "free",
    "per",
    "adus",
    "region",
    "save",
    "files",
    "home",
    "directory",
    "available",
    "future",
    "sessions",
    "adus",
    "region",
    "uh",
    "support",
    "single",
    "shell",
    "environment",
    "bash",
    "powershell",
    "zsh",
    "um",
    "adis",
    "cloud",
    "shell",
    "available",
    "select",
    "regions",
    "canada",
    "region",
    "like",
    "little",
    "shell",
    "icon",
    "realized",
    "limited",
    "areas",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "infrastructure",
    "code",
    "also",
    "known",
    "iac",
    "allows",
    "write",
    "configuration",
    "script",
    "automate",
    "creating",
    "updating",
    "destroying",
    "cloud",
    "infrastructure",
    "way",
    "think",
    "ic",
    "blueprint",
    "infrastructure",
    "allows",
    "easily",
    "share",
    "version",
    "inventory",
    "cloud",
    "infrastructure",
    "adus",
    "two",
    "different",
    "offerings",
    "iac",
    "first",
    "cloud",
    "formation",
    "uh",
    "commonly",
    "abbreviated",
    "cfn",
    "declarative",
    "tool",
    "aus",
    "cloud",
    "development",
    "kit",
    "commonly",
    "known",
    "cdk",
    "imperative",
    "iac",
    "tool",
    "let",
    "talk",
    "difference",
    "declarative",
    "imperative",
    "look",
    "tools",
    "little",
    "bit",
    "closer",
    "uh",
    "okay",
    "declarative",
    "means",
    "see",
    "get",
    "explicit",
    "aose",
    "uh",
    "zero",
    "chance",
    "misconfiguration",
    "unless",
    "file",
    "big",
    "missing",
    "something",
    "uh",
    "commonly",
    "declarative",
    "files",
    "written",
    "things",
    "like",
    "json",
    "yaml",
    "xml",
    "cloud",
    "formation",
    "json",
    "yaml",
    "uh",
    "side",
    "imperative",
    "say",
    "want",
    "rest",
    "filled",
    "implicit",
    "uh",
    "less",
    "could",
    "end",
    "misconfiguration",
    "totally",
    "possible",
    "uh",
    "declarative",
    "get",
    "use",
    "favorite",
    "programming",
    "language",
    "maybe",
    "python",
    "javascript",
    "actually",
    "cdk",
    "support",
    "ruby",
    "right",
    "general",
    "description",
    "imperative",
    "music",
    "okay",
    "right",
    "quick",
    "look",
    "cloud",
    "formation",
    "cloud",
    "formation",
    "allows",
    "write",
    "infrastructures",
    "code",
    "either",
    "json",
    "yaml",
    "reason",
    "adus",
    "started",
    "json",
    "everybody",
    "got",
    "sick",
    "writing",
    "json",
    "introduced",
    "jaml",
    "lot",
    "concise",
    "see",
    "right",
    "hand",
    "side",
    "cloud",
    "formation",
    "simple",
    "lead",
    "large",
    "files",
    "limited",
    "regards",
    "creating",
    "dynamic",
    "repeal",
    "infrastructure",
    "compared",
    "cdk",
    "cloud",
    "information",
    "easier",
    "devops",
    "engineers",
    "background",
    "web",
    "programming",
    "languages",
    "lot",
    "times",
    "know",
    "scripting",
    "basically",
    "scripting",
    "since",
    "cdk",
    "generates",
    "outloud",
    "information",
    "still",
    "important",
    "able",
    "read",
    "understand",
    "cloud",
    "information",
    "order",
    "debug",
    "iac",
    "stacks",
    "knowing",
    "cloud",
    "formation",
    "kind",
    "cloud",
    "essential",
    "go",
    "tiers",
    "aws",
    "um",
    "like",
    "solutions",
    "architect",
    "associate",
    "professional",
    "associates",
    "need",
    "know",
    "cloud",
    "information",
    "inside",
    "music",
    "okay",
    "okay",
    "want",
    "introduce",
    "infrastructure",
    "code",
    "going",
    "take",
    "look",
    "cloud",
    "formation",
    "using",
    "cloud",
    "stk",
    "going",
    "go",
    "back",
    "create",
    "new",
    "cloud9",
    "environment",
    "write",
    "uh",
    "code",
    "go",
    "ahead",
    "hit",
    "create",
    "going",
    "say",
    "uh",
    "cfn",
    "sort",
    "cloud",
    "formation",
    "example",
    "hit",
    "next",
    "step",
    "create",
    "new",
    "environment",
    "t2",
    "micro",
    "uh",
    "amazon",
    "x",
    "2",
    "totally",
    "fine",
    "hit",
    "next",
    "delete",
    "30",
    "minutes",
    "fine",
    "within",
    "free",
    "tier",
    "going",
    "give",
    "moment",
    "load",
    "um",
    "remember",
    "set",
    "theme",
    "keyboard",
    "mode",
    "whatever",
    "want",
    "loads",
    "going",
    "going",
    "look",
    "cloud",
    "formation",
    "cloud",
    "formation",
    "intimidating",
    "first",
    "get",
    "motions",
    "bad",
    "um",
    "go",
    "user",
    "guide",
    "always",
    "go",
    "getting",
    "started",
    "going",
    "tell",
    "us",
    "things",
    "going",
    "read",
    "yaml",
    "files",
    "um",
    "think",
    "really",
    "need",
    "read",
    "much",
    "think",
    "go",
    "start",
    "looking",
    "codes",
    "something",
    "might",
    "interesting",
    "launch",
    "ec2",
    "instance",
    "cloudformation",
    "type",
    "want",
    "e2",
    "instance",
    "start",
    "pasting",
    "code",
    "scroll",
    "going",
    "go",
    "examples",
    "want",
    "small",
    "example",
    "something",
    "might",
    "want",
    "going",
    "give",
    "moment",
    "almost",
    "done",
    "ad",
    "bu",
    "come",
    "going",
    "going",
    "open",
    "new",
    "tab",
    "going",
    "make",
    "way",
    "cloud",
    "formation",
    "okay",
    "um",
    "see",
    "older",
    "stacks",
    "notice",
    "cloud9",
    "create",
    "environment",
    "actually",
    "creates",
    "cloud",
    "formation",
    "stack",
    "kind",
    "interesting",
    "um",
    "go",
    "create",
    "stack",
    "create",
    "file",
    "upload",
    "okay",
    "good",
    "going",
    "go",
    "ahead",
    "make",
    "new",
    "file",
    "going",
    "call",
    "template",
    "yaml",
    "um",
    "know",
    "yaml",
    "ml",
    "ml",
    "big",
    "debate",
    "one",
    "use",
    "um",
    "think",
    "adabs",
    "likes",
    "use",
    "full",
    "version",
    "stick",
    "yaml",
    "going",
    "double",
    "click",
    "cc2",
    "example",
    "going",
    "copy",
    "okay",
    "going",
    "paste",
    "going",
    "type",
    "resources",
    "oops",
    "capital",
    "okay",
    "resource",
    "want",
    "create",
    "um",
    "create",
    "cloud",
    "information",
    "always",
    "template",
    "version",
    "need",
    "basic",
    "example",
    "top",
    "guess",
    "simple",
    "one",
    "like",
    "hello",
    "world",
    "bucket",
    "maybe",
    "bucket",
    "lot",
    "easier",
    "make",
    "liv",
    "super",
    "hard",
    "okay",
    "um",
    "looking",
    "version",
    "first",
    "thing",
    "specify",
    "trying",
    "find",
    "within",
    "example",
    "oh",
    "freak",
    "sakes",
    "cloud",
    "formation",
    "version",
    "format",
    "version",
    "going",
    "complain",
    "okay",
    "copy",
    "go",
    "back",
    "paste",
    "might",
    "fun",
    "like",
    "output",
    "going",
    "like",
    "output",
    "outputs",
    "uh",
    "maybe",
    "instead",
    "type",
    "ads",
    "s3",
    "c",
    "formation",
    "looking",
    "set",
    "output",
    "say",
    "return",
    "values",
    "um",
    "maybe",
    "want",
    "returns",
    "domain",
    "name",
    "say",
    "um",
    "value",
    "ref",
    "going",
    "get",
    "reference",
    "say",
    "hello",
    "bucket",
    "uh",
    "type",
    "string",
    "say",
    "outputs",
    "cloud",
    "formation",
    "example",
    "even",
    "though",
    "written",
    "tons",
    "cloud",
    "information",
    "like",
    "day",
    "day",
    "start",
    "forget",
    "outputs",
    "need",
    "logical",
    "id",
    "description",
    "value",
    "export",
    "um",
    "want",
    "going",
    "go",
    "ahead",
    "copy",
    "back",
    "run",
    "going",
    "able",
    "observe",
    "output",
    "cloud",
    "information",
    "file",
    "okay",
    "logical",
    "id",
    "whatever",
    "want",
    "hello",
    "bucket",
    "domain",
    "funny",
    "um",
    "kind",
    "would",
    "format",
    "terraform",
    "getting",
    "mixed",
    "domain",
    "bucket",
    "value",
    "going",
    "ref",
    "hello",
    "bucket",
    "domain",
    "name",
    "output",
    "export",
    "value",
    "export",
    "uh",
    "get",
    "example",
    "b",
    "name",
    "oh",
    "know",
    "export",
    "uh",
    "cross",
    "stacks",
    "need",
    "okay",
    "fine",
    "set",
    "take",
    "old",
    "one",
    "create",
    "us",
    "s3",
    "bucket",
    "cloud",
    "information",
    "uh",
    "provide",
    "template",
    "providing",
    "url",
    "upload",
    "file",
    "directly",
    "um",
    "trying",
    "decide",
    "want",
    "also",
    "use",
    "sample",
    "file",
    "create",
    "template",
    "designer",
    "going",
    "go",
    "designer",
    "like",
    "paste",
    "want",
    "go",
    "yamel",
    "go",
    "back",
    "copy",
    "going",
    "paste",
    "going",
    "hit",
    "refresh",
    "button",
    "nobody",
    "ever",
    "uses",
    "designer",
    "kind",
    "easy",
    "example",
    "uh",
    "place",
    "really",
    "working",
    "maybe",
    "got",
    "go",
    "template",
    "dude",
    "refresh",
    "go",
    "bucket",
    "nice",
    "little",
    "visualization",
    "believe",
    "going",
    "work",
    "expected",
    "designer",
    "template",
    "think",
    "hit",
    "close",
    "button",
    "say",
    "validate",
    "template",
    "probably",
    "good",
    "idea",
    "validating",
    "template",
    "template",
    "contains",
    "errors",
    "unresolved",
    "resource",
    "dependency",
    "output",
    "block",
    "template",
    "hello",
    "domain",
    "seems",
    "like",
    "fine",
    "let",
    "go",
    "whoops",
    "let",
    "go",
    "back",
    "said",
    "reference",
    "value",
    "oh",
    "uh",
    "maybe",
    "get",
    "trib",
    "okay",
    "get",
    "att",
    "sorry",
    "get",
    "trib",
    "cloud",
    "information",
    "ca",
    "remember",
    "r",
    "end",
    "oh",
    "trying",
    "get",
    "return",
    "intrinsic",
    "value",
    "reference",
    "like",
    "default",
    "one",
    "every",
    "time",
    "like",
    "logical",
    "name",
    "attribute",
    "get",
    "uh",
    "going",
    "hit",
    "refresh",
    "going",
    "validate",
    "one",
    "time",
    "valid",
    "hover",
    "going",
    "upload",
    "create",
    "stack",
    "could",
    "save",
    "save",
    "oh",
    "save",
    "s3",
    "bucket",
    "say",
    "hello",
    "bucket",
    "url",
    "going",
    "copy",
    "honestly",
    "never",
    "use",
    "editor",
    "kind",
    "interesting",
    "going",
    "leave",
    "probably",
    "could",
    "hit",
    "create",
    "stack",
    "find",
    "bit",
    "easier",
    "kind",
    "uh",
    "go",
    "back",
    "create",
    "stack",
    "going",
    "paste",
    "url",
    "going",
    "say",
    "next",
    "going",
    "say",
    "uh",
    "new",
    "stack",
    "see",
    "name",
    "bucket",
    "oh",
    "name",
    "going",
    "randomize",
    "perfect",
    "go",
    "next",
    "bunch",
    "options",
    "hit",
    "hit",
    "next",
    "give",
    "moment",
    "guess",
    "review",
    "create",
    "stack",
    "part",
    "watch",
    "says",
    "create",
    "progress",
    "wait",
    "hit",
    "refresh",
    "see",
    "happening",
    "trying",
    "create",
    "bucket",
    "go",
    "resources",
    "lot",
    "easier",
    "track",
    "see",
    "resources",
    "created",
    "notice",
    "use",
    "c",
    "uh",
    "using",
    "databas",
    "management",
    "call",
    "create",
    "bucket",
    "instantaneous",
    "like",
    "cloud",
    "information",
    "bit",
    "delay",
    "communication",
    "going",
    "board",
    "notice",
    "go",
    "outputs",
    "value",
    "bucket",
    "domain",
    "name",
    "make",
    "could",
    "also",
    "export",
    "name",
    "would",
    "used",
    "cross",
    "referencing",
    "stacks",
    "something",
    "uh",
    "care",
    "um",
    "yeah",
    "create",
    "stack",
    "way",
    "um",
    "know",
    "also",
    "via",
    "sdk",
    "um",
    "look",
    "adis",
    "uh",
    "cli",
    "cloud",
    "formation",
    "commands",
    "go",
    "new",
    "one",
    "old",
    "one",
    "go",
    "create",
    "stack",
    "yeah",
    "things",
    "like",
    "like",
    "create",
    "stack",
    "update",
    "um",
    "wanted",
    "way",
    "okay",
    "copied",
    "going",
    "put",
    "read",
    "second",
    "uh",
    "say",
    "new",
    "stack",
    "could",
    "provide",
    "template",
    "url",
    "could",
    "specify",
    "local",
    "path",
    "like",
    "template",
    "body",
    "going",
    "go",
    "ahead",
    "grab",
    "okay",
    "would",
    "like",
    "yaml",
    "um",
    "need",
    "specify",
    "file",
    "template",
    "yaml",
    "going",
    "go",
    "pwd",
    "get",
    "full",
    "path",
    "okay",
    "going",
    "paste",
    "whoops",
    "okay",
    "going",
    "ls",
    "okay",
    "gives",
    "us",
    "full",
    "path",
    "file",
    "also",
    "specify",
    "template",
    "url",
    "um",
    "work",
    "well",
    "take",
    "paste",
    "command",
    "unable",
    "locate",
    "parameter",
    "file",
    "oh",
    "three",
    "three",
    "triple",
    "slashes",
    "fix",
    "paste",
    "unable",
    "load",
    "param",
    "file",
    "file",
    "directory",
    "missing",
    "okay",
    "like",
    "like",
    "make",
    "sure",
    "spelly",
    "mistakes",
    "okay",
    "type",
    "clear",
    "see",
    "hit",
    "enter",
    "whoops",
    "unable",
    "load",
    "parameter",
    "file",
    "file",
    "directory",
    "home",
    "well",
    "want",
    "slash",
    "another",
    "thing",
    "try",
    "think",
    "take",
    "relative",
    "work",
    "ever",
    "remember",
    "specify",
    "entire",
    "path",
    "err",
    "occurred",
    "calling",
    "crate",
    "stack",
    "stack",
    "name",
    "already",
    "exists",
    "go",
    "back",
    "give",
    "refresh",
    "oh",
    "named",
    "stack",
    "one",
    "going",
    "say",
    "stack",
    "two",
    "okay",
    "template",
    "format",
    "unsupported",
    "structure",
    "calling",
    "create",
    "stack",
    "operation",
    "kidding",
    "time",
    "template",
    "body",
    "file",
    "cloud",
    "formation",
    "unsupported",
    "structure",
    "take",
    "look",
    "oh",
    "know",
    "think",
    "uh",
    "one",
    "date",
    "go",
    "old",
    "stack",
    "actually",
    "see",
    "template",
    "go",
    "ahead",
    "copy",
    "whoops",
    "go",
    "ahead",
    "paste",
    "know",
    "reason",
    "working",
    "okay",
    "hit",
    "enter",
    "um",
    "unsupported",
    "structure",
    "supported",
    "let",
    "see",
    "cloud",
    "information",
    "help",
    "us",
    "um",
    "apparently",
    "unhelpful",
    "error",
    "message",
    "batting",
    "try",
    "validate",
    "template",
    "option",
    "wonder",
    "could",
    "maybe",
    "would",
    "help",
    "hitting",
    "try",
    "run",
    "nope",
    "guess",
    "try",
    "validate",
    "like",
    "much",
    "luck",
    "today",
    "say",
    "maybe",
    "even",
    "loading",
    "file",
    "errors",
    "going",
    "make",
    "one",
    "line",
    "okay",
    "created",
    "whatever",
    "reason",
    "must",
    "bug",
    "putting",
    "sometimes",
    "putting",
    "one",
    "line",
    "helps",
    "must",
    "obvious",
    "mistake",
    "see",
    "stack",
    "cating",
    "exact",
    "thing",
    "creating",
    "uh",
    "different",
    "bucket",
    "though",
    "go",
    "s3",
    "know",
    "need",
    "able",
    "pass",
    "exam",
    "trying",
    "show",
    "like",
    "kind",
    "absorb",
    "kind",
    "knowledge",
    "going",
    "notes",
    "uses",
    "stack",
    "name",
    "followed",
    "uh",
    "logical",
    "name",
    "resource",
    "okay",
    "um",
    "wait",
    "create",
    "created",
    "go",
    "ahead",
    "delete",
    "stacks",
    "could",
    "also",
    "use",
    "ad",
    "us",
    "cloud",
    "information",
    "say",
    "like",
    "delete",
    "stack",
    "want",
    "uh",
    "bore",
    "today",
    "hit",
    "refresh",
    "wait",
    "stacks",
    "vanish",
    "okay",
    "gone",
    "uh",
    "going",
    "kill",
    "cloud9",
    "environment",
    "uh",
    "way",
    "never",
    "known",
    "go",
    "back",
    "dashboard",
    "well",
    "nice",
    "know",
    "go",
    "ahead",
    "delete",
    "okay",
    "close",
    "tab",
    "good",
    "shape",
    "introduction",
    "cloud",
    "information",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "cdk",
    "cdk",
    "allows",
    "use",
    "favorite",
    "programming",
    "language",
    "write",
    "infrastructure",
    "code",
    "technically",
    "true",
    "ruby",
    "favorite",
    "anyway",
    "uh",
    "languages",
    "include",
    "nodejs",
    "typescript",
    "python",
    "example",
    "typescript",
    "typescript",
    "first",
    "language",
    "um",
    "introduced",
    "cdk",
    "usually",
    "upto",
    "date",
    "always",
    "cdk",
    "reflect",
    "exactly",
    "cloud",
    "formation",
    "think",
    "getting",
    "better",
    "okay",
    "cdk",
    "powered",
    "cloud",
    "formation",
    "generates",
    "cloud",
    "formation",
    "templates",
    "intermediate",
    "step",
    "uh",
    "sometimes",
    "feel",
    "bit",
    "slow",
    "really",
    "like",
    "know",
    "uh",
    "cdk",
    "large",
    "library",
    "reusable",
    "cloud",
    "components",
    "called",
    "cdk",
    "constructs",
    "constructs",
    "dodev",
    "kind",
    "concept",
    "terraform",
    "modules",
    "really",
    "really",
    "useful",
    "uh",
    "really",
    "well",
    "ridden",
    "um",
    "reduce",
    "lot",
    "effort",
    "cd",
    "cdk",
    "comes",
    "cli",
    "um",
    "mention",
    "cloud",
    "formation",
    "also",
    "uh",
    "cli",
    "okay",
    "cdk",
    "pipelines",
    "uh",
    "allow",
    "quickly",
    "set",
    "cicd",
    "pipelines",
    "cd",
    "k",
    "projects",
    "big",
    "pain",
    "point",
    "cloud",
    "formation",
    "write",
    "lot",
    "code",
    "whereas",
    "um",
    "cdk",
    "bat",
    "makes",
    "really",
    "easy",
    "cdk",
    "also",
    "testing",
    "framework",
    "unit",
    "integration",
    "testing",
    "think",
    "might",
    "limited",
    "typescript",
    "see",
    "rest",
    "languages",
    "um",
    "know",
    "100",
    "sure",
    "uh",
    "one",
    "thing",
    "cdk",
    "easily",
    "uh",
    "confused",
    "sdk",
    "allow",
    "pragmatically",
    "work",
    "aws",
    "uh",
    "using",
    "favorite",
    "language",
    "key",
    "difference",
    "cdk",
    "ensures",
    "uh",
    "itap",
    "poent",
    "uh",
    "infrastructure",
    "means",
    "hard",
    "word",
    "say",
    "means",
    "um",
    "know",
    "use",
    "cdk",
    "say",
    "give",
    "virtual",
    "machine",
    "always",
    "single",
    "virtual",
    "machine",
    "uh",
    "trying",
    "manage",
    "state",
    "file",
    "whereas",
    "uh",
    "use",
    "sdk",
    "run",
    "every",
    "time",
    "end",
    "servers",
    "uh",
    "really",
    "managing",
    "states",
    "hope",
    "hopefully",
    "clear",
    "difference",
    "music",
    "okay",
    "looked",
    "cloud",
    "formation",
    "let",
    "take",
    "look",
    "cdk",
    "cloud",
    "formation",
    "cloud",
    "formation",
    "cloud",
    "development",
    "kit",
    "like",
    "cloud",
    "formation",
    "use",
    "programming",
    "language",
    "order",
    "uh",
    "implement",
    "infrastructure",
    "code",
    "use",
    "often",
    "particularly",
    "like",
    "um",
    "know",
    "developer",
    "like",
    "writing",
    "cloud",
    "information",
    "files",
    "want",
    "something",
    "programmatic",
    "might",
    "used",
    "um",
    "think",
    "deleting",
    "cuz",
    "deleting",
    "last",
    "one",
    "notice",
    "grayed",
    "ca",
    "select",
    "worry",
    "create",
    "new",
    "one",
    "say",
    "cdk",
    "example",
    "hit",
    "next",
    "t2",
    "micro",
    "ec2",
    "instance",
    "amazon",
    "x2",
    "know",
    "drill",
    "fine",
    "go",
    "ahead",
    "create",
    "new",
    "environment",
    "going",
    "let",
    "spin",
    "going",
    "going",
    "look",
    "uh",
    "adus",
    "cdk",
    "adis",
    "cdk",
    "um",
    "probably",
    "want",
    "go",
    "github",
    "okay",
    "open",
    "source",
    "want",
    "go",
    "getting",
    "started",
    "used",
    "never",
    "remember",
    "use",
    "probably",
    "easiest",
    "way",
    "uh",
    "use",
    "using",
    "typescript",
    "example",
    "initialize",
    "project",
    "make",
    "directory",
    "cdk",
    "oh",
    "first",
    "got",
    "install",
    "right",
    "give",
    "moment",
    "node",
    "know",
    "like",
    "bundle",
    "install",
    "like",
    "thing",
    "uh",
    "typescript",
    "install",
    "update",
    "cdk",
    "cli",
    "npm",
    "recommend",
    "using",
    "version",
    "etc",
    "etc",
    "waiting",
    "launch",
    "uh",
    "wait",
    "simple",
    "going",
    "install",
    "create",
    "directory",
    "um",
    "go",
    "directory",
    "initialize",
    "example",
    "setting",
    "sqsq",
    "um",
    "quite",
    "complex",
    "example",
    "um",
    "see",
    "code",
    "right",
    "run",
    "cdk",
    "deploy",
    "deploy",
    "hopefully",
    "resource",
    "waiting",
    "cloud",
    "n",
    "go",
    "cloud9",
    "less",
    "ready",
    "terminal",
    "seems",
    "like",
    "still",
    "thinking",
    "javascript",
    "one",
    "care",
    "go",
    "environment",
    "going",
    "make",
    "sure",
    "mpm",
    "type",
    "mpm",
    "great",
    "says",
    "version",
    "asking",
    "10",
    "okay",
    "know",
    "gives",
    "us",
    "like",
    "mvm",
    "installed",
    "mvm",
    "mvm",
    "list",
    "stands",
    "node",
    "version",
    "manager",
    "ruby",
    "one",
    "well",
    "telling",
    "us",
    "version",
    "want",
    "update",
    "um",
    "looks",
    "like",
    "pretty",
    "uh",
    "pretty",
    "new",
    "version",
    "want",
    "latest",
    "version",
    "oh",
    "node",
    "version",
    "necessarily",
    "mpm",
    "node",
    "version",
    "oh",
    "17",
    "okay",
    "well",
    "well",
    "uh",
    "range",
    "new",
    "stuff",
    "going",
    "scroll",
    "going",
    "grab",
    "link",
    "code",
    "hit",
    "enter",
    "going",
    "install",
    "adus",
    "cdk",
    "says",
    "uh",
    "file",
    "already",
    "exists",
    "oh",
    "maybe",
    "already",
    "installed",
    "machine",
    "um",
    "cdk",
    "type",
    "cdk",
    "course",
    "adus",
    "wants",
    "make",
    "easy",
    "us",
    "software",
    "tested",
    "warning",
    "uh",
    "node",
    "1701",
    "may",
    "encounter",
    "runtime",
    "issues",
    "great",
    "aws",
    "like",
    "one",
    "installed",
    "stuff",
    "get",
    "bunch",
    "commands",
    "great",
    "follow",
    "simple",
    "instructions",
    "say",
    "hello",
    "cdk",
    "cd",
    "um",
    "run",
    "cdk",
    "andit",
    "language",
    "going",
    "bunch",
    "stuff",
    "creates",
    "tons",
    "files",
    "going",
    "vary",
    "based",
    "uh",
    "using",
    "like",
    "language",
    "cdk",
    "comes",
    "available",
    "variety",
    "languages",
    "type",
    "ads",
    "cdk",
    "um",
    "documentation",
    "notice",
    "python",
    "think",
    "three",
    "languages",
    "um",
    "know",
    "wish",
    "supported",
    "like",
    "yeah",
    "see",
    "c",
    "java",
    "really",
    "wish",
    "ruby",
    "give",
    "moment",
    "get",
    "installed",
    "see",
    "back",
    "done",
    "okay",
    "okay",
    "uh",
    "turns",
    "wait",
    "like",
    "second",
    "says",
    "newer",
    "version",
    "cdk",
    "probably",
    "install",
    "want",
    "get",
    "going",
    "long",
    "run",
    "issues",
    "care",
    "um",
    "anyway",
    "looking",
    "rarely",
    "ever",
    "look",
    "developer",
    "hard",
    "figure",
    "lib",
    "stack",
    "creating",
    "loading",
    "sqs",
    "loading",
    "sns",
    "core",
    "library",
    "creating",
    "sqs",
    "q",
    "setting",
    "visibility",
    "timeout",
    "also",
    "creating",
    "sns",
    "topic",
    "two",
    "resources",
    "expect",
    "created",
    "scroll",
    "getting",
    "started",
    "says",
    "cdk",
    "deploy",
    "go",
    "ahead",
    "hit",
    "enter",
    "let",
    "whatever",
    "wants",
    "thinking",
    "go",
    "im",
    "statement",
    "changes",
    "saying",
    "deployment",
    "potentially",
    "make",
    "potential",
    "sensitive",
    "changes",
    "according",
    "current",
    "security",
    "approval",
    "options",
    "may",
    "security",
    "related",
    "changes",
    "list",
    "want",
    "deploy",
    "sure",
    "hit",
    "deploying",
    "creating",
    "cloud",
    "formation",
    "change",
    "set",
    "cdk",
    "using",
    "cloud",
    "formation",
    "underneath",
    "complicated",
    "um",
    "going",
    "going",
    "make",
    "way",
    "ius",
    "console",
    "go",
    "cloud",
    "formation",
    "see",
    "see",
    "anything",
    "yet",
    "creating",
    "stack",
    "click",
    "go",
    "events",
    "see",
    "things",
    "created",
    "always",
    "confusing",
    "always",
    "go",
    "resources",
    "see",
    "individually",
    "created",
    "done",
    "go",
    "exist",
    "says",
    "q",
    "called",
    "right",
    "sometimes",
    "links",
    "link",
    "notice",
    "click",
    "topic",
    "get",
    "resource",
    "sns",
    "nice",
    "sqs",
    "going",
    "type",
    "sqs",
    "enter",
    "uh",
    "okay",
    "really",
    "understand",
    "could",
    "delete",
    "stack",
    "way",
    "probably",
    "cdk",
    "way",
    "delete",
    "stack",
    "uh",
    "cdk",
    "destroy",
    "assume",
    "destroy",
    "okay",
    "type",
    "cdk",
    "destroy",
    "give",
    "moment",
    "going",
    "say",
    "yes",
    "okay",
    "deleting",
    "progress",
    "even",
    "go",
    "back",
    "double",
    "check",
    "still",
    "thinking",
    "know",
    "deleted",
    "real",
    "would",
    "take",
    "like",
    "second",
    "uh",
    "know",
    "sometimes",
    "slow",
    "sometimes",
    "resource",
    "get",
    "hung",
    "well",
    "um",
    "uh",
    "think",
    "anything",
    "problem",
    "see",
    "problem",
    "necessarily",
    "problem",
    "sqs",
    "taking",
    "long",
    "longer",
    "time",
    "delete",
    "sns",
    "subscriptions",
    "lot",
    "faster",
    "see",
    "back",
    "moment",
    "okay",
    "okay",
    "short",
    "little",
    "wait",
    "finally",
    "finished",
    "uh",
    "kept",
    "oning",
    "refresh",
    "saw",
    "deleted",
    "get",
    "rid",
    "cloud9",
    "environment",
    "since",
    "done",
    "type",
    "cloud9",
    "top",
    "go",
    "ahead",
    "delete",
    "go",
    "ahead",
    "delete",
    "thank",
    "go",
    "back",
    "adabs",
    "amazon",
    "console",
    "get",
    "bearing",
    "straight",
    "music",
    "go",
    "right",
    "let",
    "take",
    "look",
    "adus",
    "toolkit",
    "vs",
    "code",
    "adus",
    "toolkit",
    "open",
    "source",
    "plugin",
    "vs",
    "code",
    "create",
    "debug",
    "deploy",
    "resources",
    "since",
    "vs",
    "code",
    "popular",
    "uh",
    "editor",
    "uh",
    "days",
    "use",
    "vim",
    "popular",
    "um",
    "figured",
    "make",
    "sure",
    "aware",
    "um",
    "plugin",
    "four",
    "things",
    "get",
    "abus",
    "explorer",
    "allows",
    "explore",
    "wide",
    "range",
    "adus",
    "resources",
    "linked",
    "adus",
    "account",
    "uh",
    "sometimes",
    "view",
    "sometimes",
    "delete",
    "going",
    "vary",
    "per",
    "service",
    "available",
    "adabs",
    "cdk",
    "explorer",
    "allows",
    "explore",
    "stacks",
    "defined",
    "cdk",
    "uh",
    "amazon",
    "elastic",
    "uh",
    "container",
    "service",
    "ecs",
    "provides",
    "intellisense",
    "ecs",
    "task",
    "definition",
    "files",
    "intense",
    "means",
    "type",
    "uh",
    "uh",
    "get",
    "like",
    "auto",
    "completion",
    "also",
    "get",
    "description",
    "typing",
    "serverless",
    "applications",
    "pretty",
    "much",
    "main",
    "reason",
    "theus",
    "toolkit",
    "allows",
    "create",
    "debug",
    "deploy",
    "service",
    "applications",
    "via",
    "sam",
    "cfn",
    "uh",
    "see",
    "command",
    "pallet",
    "kind",
    "access",
    "stuff",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "access",
    "keys",
    "access",
    "key",
    "key",
    "secret",
    "required",
    "programmatic",
    "access",
    "adus",
    "resources",
    "interacting",
    "adabs",
    "api",
    "outside",
    "adus",
    "management",
    "console",
    "uh",
    "access",
    "key",
    "commonly",
    "referred",
    "adus",
    "credentials",
    "someone",
    "says",
    "adus",
    "credentials",
    "generally",
    "talking",
    "access",
    "key",
    "necessarily",
    "um",
    "username",
    "password",
    "log",
    "user",
    "must",
    "granted",
    "access",
    "use",
    "access",
    "key",
    "creating",
    "user",
    "checkbox",
    "access",
    "key",
    "um",
    "always",
    "fact",
    "good",
    "creating",
    "user",
    "generate",
    "access",
    "key",
    "secret",
    "never",
    "share",
    "access",
    "keys",
    "anyone",
    "give",
    "someone",
    "else",
    "like",
    "giving",
    "keys",
    "house",
    "dangerous",
    "uh",
    "never",
    "commit",
    "access",
    "keys",
    "code",
    "base",
    "uh",
    "good",
    "place",
    "uh",
    "get",
    "leaked",
    "point",
    "uh",
    "two",
    "active",
    "keys",
    "given",
    "time",
    "deactivate",
    "access",
    "keys",
    "obviously",
    "delete",
    "well",
    "access",
    "keys",
    "whatever",
    "access",
    "user",
    "adus",
    "resources",
    "uh",
    "know",
    "inabus",
    "management",
    "console",
    "key",
    "access",
    "keys",
    "stored",
    "ads",
    "adabs",
    "credentials",
    "uh",
    "file",
    "um",
    "familiar",
    "linux",
    "tilda",
    "actually",
    "represents",
    "home",
    "folder",
    "whether",
    "windows",
    "linux",
    "going",
    "home",
    "folder",
    "period",
    "aws",
    "means",
    "hidden",
    "folder",
    "obviously",
    "access",
    "toml",
    "like",
    "file",
    "think",
    "toml",
    "um",
    "never",
    "uh",
    "100",
    "verified",
    "toml",
    "looks",
    "like",
    "toml",
    "uh",
    "uh",
    "default",
    "profile",
    "would",
    "use",
    "um",
    "uh",
    "tools",
    "use",
    "like",
    "cli",
    "anything",
    "else",
    "would",
    "automatically",
    "use",
    "um",
    "specify",
    "profile",
    "course",
    "store",
    "multiple",
    "access",
    "keys",
    "give",
    "profile",
    "name",
    "um",
    "first",
    "time",
    "might",
    "want",
    "type",
    "ads",
    "config",
    "prompt",
    "enter",
    "well",
    "think",
    "default",
    "one",
    "using",
    "sdk",
    "uh",
    "would",
    "rather",
    "probably",
    "use",
    "environment",
    "variables",
    "safest",
    "way",
    "access",
    "writing",
    "code",
    "right",
    "um",
    "music",
    "go",
    "right",
    "let",
    "talk",
    "access",
    "keys",
    "access",
    "keys",
    "important",
    "account",
    "um",
    "go",
    "im",
    "root",
    "user",
    "go",
    "uh",
    "generate",
    "access",
    "keys",
    "people",
    "um",
    "generally",
    "account",
    "go",
    "users",
    "going",
    "click",
    "mine",
    "go",
    "security",
    "credentials",
    "going",
    "notice",
    "access",
    "keys",
    "one",
    "thing",
    "interesting",
    "ever",
    "two",
    "access",
    "keys",
    "time",
    "hit",
    "create",
    "going",
    "close",
    "notice",
    "button",
    "grayed",
    "uh",
    "uh",
    "deactivate",
    "feel",
    "used",
    "make",
    "active",
    "bring",
    "back",
    "access",
    "um",
    "make",
    "active",
    "right",
    "delete",
    "recommend",
    "right",
    "even",
    "want",
    "programmatically",
    "using",
    "account",
    "anything",
    "always",
    "want",
    "fill",
    "reason",
    "security",
    "reasons",
    "somebody",
    "wanted",
    "come",
    "uh",
    "uh",
    "get",
    "account",
    "would",
    "would",
    "try",
    "find",
    "user",
    "um",
    "access",
    "would",
    "try",
    "generate",
    "key",
    "keys",
    "tak",
    "generate",
    "keys",
    "okay",
    "one",
    "want",
    "use",
    "deactivate",
    "one",
    "okay",
    "going",
    "use",
    "one",
    "way",
    "fill",
    "slot",
    "okay",
    "strong",
    "recommendation",
    "ever",
    "two",
    "going",
    "uh",
    "delete",
    "want",
    "uh",
    "whatever",
    "next",
    "tutorial",
    "go",
    "generate",
    "okay",
    "go",
    "ahead",
    "clear",
    "hopefully",
    "enough",
    "understand",
    "access",
    "keys",
    "okay",
    "going",
    "go",
    "back",
    "music",
    "go",
    "let",
    "take",
    "look",
    "adus",
    "documentation",
    "large",
    "collection",
    "technical",
    "documentation",
    "use",
    "adus",
    "services",
    "find",
    "doc",
    "adab",
    "uh",
    "kind",
    "like",
    "landing",
    "page",
    "see",
    "guides",
    "api",
    "references",
    "expand",
    "uh",
    "ec2",
    "click",
    "user",
    "guide",
    "see",
    "html",
    "pdf",
    "format",
    "kindle",
    "notice",
    "link",
    "github",
    "docs",
    "open",
    "source",
    "contribute",
    "choose",
    "done",
    "multiple",
    "times",
    "past",
    "quite",
    "fun",
    "adus",
    "good",
    "providing",
    "detailed",
    "information",
    "every",
    "adus",
    "service",
    "basis",
    "course",
    "adus",
    "certification",
    "derive",
    "mostly",
    "uh",
    "adus",
    "documentation",
    "like",
    "say",
    "really",
    "coming",
    "new",
    "information",
    "uh",
    "taking",
    "docs",
    "trying",
    "make",
    "digestible",
    "think",
    "thing",
    "like",
    "docs",
    "really",
    "good",
    "read",
    "end",
    "end",
    "dense",
    "um",
    "bit",
    "hard",
    "figure",
    "read",
    "um",
    "uh",
    "really",
    "great",
    "resource",
    "spend",
    "time",
    "music",
    "okay",
    "want",
    "quickly",
    "show",
    "adabs",
    "documentation",
    "like",
    "give",
    "bit",
    "tour",
    "go",
    "ad",
    "type",
    "docs",
    "sure",
    "might",
    "seen",
    "tutorials",
    "idea",
    "basically",
    "documentation",
    "basically",
    "possible",
    "service",
    "want",
    "lot",
    "times",
    "click",
    "get",
    "little",
    "boxes",
    "show",
    "different",
    "guides",
    "going",
    "vary",
    "based",
    "service",
    "lot",
    "times",
    "user",
    "guide",
    "api",
    "reference",
    "two",
    "see",
    "go",
    "something",
    "simpler",
    "like",
    "s3",
    "might",
    "simpler",
    "example",
    "yeah",
    "user",
    "guide",
    "api",
    "api",
    "reference",
    "github",
    "right",
    "open",
    "documentation",
    "find",
    "something",
    "like",
    "submit",
    "issues",
    "uh",
    "correct",
    "things",
    "even",
    "submit",
    "examples",
    "um",
    "uh",
    "committed",
    "uh",
    "example",
    "code",
    "uh",
    "docs",
    "specifically",
    "ai",
    "services",
    "might",
    "looking",
    "examples",
    "implemented",
    "even",
    "ruby",
    "examples",
    "since",
    "really",
    "like",
    "promote",
    "ruby",
    "aws",
    "download",
    "pdf",
    "take",
    "html",
    "lot",
    "times",
    "going",
    "user",
    "guide",
    "way",
    "build",
    "courses",
    "actually",
    "go",
    "read",
    "end",
    "end",
    "know",
    "wanted",
    "wanted",
    "like",
    "uh",
    "watch",
    "courses",
    "save",
    "trouble",
    "worry",
    "everything",
    "generally",
    "documentation",
    "extremely",
    "extremely",
    "good",
    "exceptions",
    "like",
    "amazon",
    "cognito",
    "content",
    "good",
    "well",
    "organized",
    "would",
    "say",
    "best",
    "every",
    "provider",
    "complete",
    "documentation",
    "uh",
    "generally",
    "keep",
    "examples",
    "like",
    "tutorials",
    "within",
    "usually",
    "pretty",
    "light",
    "examples",
    "um",
    "like",
    "like",
    "adus",
    "labs",
    "separately",
    "type",
    "ab",
    "labs",
    "github",
    "right",
    "go",
    "lot",
    "stuff",
    "instead",
    "lot",
    "great",
    "tutorials",
    "examples",
    "okay",
    "um",
    "yeah",
    "pretty",
    "much",
    "consistency",
    "documentations",
    "kind",
    "vary",
    "um",
    "know",
    "uh",
    "point",
    "always",
    "keeping",
    "date",
    "yeah",
    "need",
    "know",
    "inabus",
    "documentation",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "shared",
    "responsibility",
    "model",
    "cloud",
    "security",
    "framework",
    "defines",
    "security",
    "obligations",
    "customer",
    "versus",
    "cloud",
    "service",
    "provider",
    "case",
    "talking",
    "aws",
    "shared",
    "responsibility",
    "model",
    "big",
    "ugly",
    "blob",
    "um",
    "thing",
    "every",
    "single",
    "csp",
    "variant",
    "model",
    "uh",
    "generally",
    "visualizations",
    "make",
    "little",
    "bit",
    "uh",
    "easier",
    "understand",
    "kind",
    "uh",
    "include",
    "little",
    "bit",
    "information",
    "different",
    "parts",
    "get",
    "make",
    "sure",
    "knowledge",
    "going",
    "go",
    "beyond",
    "aws",
    "shared",
    "responsibility",
    "model",
    "show",
    "variants",
    "uh",
    "also",
    "variants",
    "per",
    "uh",
    "csp",
    "also",
    "type",
    "cloud",
    "deployment",
    "model",
    "sometimes",
    "also",
    "scoped",
    "uh",
    "based",
    "cloud",
    "service",
    "category",
    "like",
    "compute",
    "machine",
    "learning",
    "uh",
    "uh",
    "result",
    "specialized",
    "share",
    "responsibility",
    "models",
    "look",
    "section",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "ad",
    "shar",
    "responsibility",
    "model",
    "reworked",
    "graphic",
    "bit",
    "hard",
    "uh",
    "digest",
    "hoping",
    "way",
    "little",
    "bit",
    "easier",
    "include",
    "limited",
    "space",
    "worry",
    "follow",
    "next",
    "slide",
    "two",
    "people",
    "responsible",
    "two",
    "um",
    "organizations",
    "responsible",
    "customer",
    "aws",
    "aws",
    "side",
    "going",
    "responsible",
    "anything",
    "physical",
    "talking",
    "hardware",
    "global",
    "infrastructure",
    "regions",
    "availability",
    "zones",
    "edge",
    "locations",
    "physical",
    "security",
    "think",
    "hardware",
    "data",
    "centers",
    "um",
    "everything",
    "like",
    "also",
    "software",
    "services",
    "offering",
    "um",
    "know",
    "extends",
    "services",
    "generally",
    "breaks",
    "four",
    "core",
    "talking",
    "compute",
    "storage",
    "database",
    "networking",
    "okay",
    "say",
    "networking",
    "talking",
    "like",
    "physically",
    "setting",
    "wi",
    "also",
    "know",
    "software",
    "set",
    "routing",
    "kind",
    "stuff",
    "uh",
    "looking",
    "customer",
    "side",
    "responsible",
    "configuration",
    "managed",
    "services",
    "thirdparty",
    "software",
    "platforms",
    "use",
    "whether",
    "choose",
    "use",
    "particular",
    "type",
    "os",
    "uh",
    "applications",
    "want",
    "use",
    "like",
    "ruby",
    "rails",
    "uh",
    "identity",
    "access",
    "management",
    "uh",
    "create",
    "user",
    "grant",
    "permissions",
    "give",
    "things",
    "supposed",
    "access",
    "right",
    "configur",
    "virtual",
    "infrastructure",
    "systems",
    "would",
    "choosing",
    "os",
    "would",
    "uh",
    "networking",
    "could",
    "networking",
    "um",
    "virtual",
    "machines",
    "could",
    "talking",
    "cloud",
    "networking",
    "case",
    "firewalls",
    "talking",
    "virtual",
    "fire",
    "walls",
    "could",
    "virtual",
    "machine",
    "could",
    "configuring",
    "like",
    "knackles",
    "security",
    "groups",
    "aws",
    "security",
    "configuration",
    "data",
    "uh",
    "client",
    "side",
    "data",
    "encryption",
    "moving",
    "something",
    "s3",
    "local",
    "machine",
    "s3",
    "might",
    "need",
    "encrypt",
    "first",
    "send",
    "server",
    "side",
    "encryption",
    "might",
    "turning",
    "server",
    "side",
    "encryption",
    "within",
    "s3",
    "turning",
    "encryption",
    "ebs",
    "volume",
    "networking",
    "traffic",
    "protection",
    "know",
    "turning",
    "vpc",
    "flow",
    "log",
    "monitor",
    "turning",
    "ais",
    "guard",
    "duty",
    "detect",
    "anomalies",
    "traffic",
    "activities",
    "within",
    "um",
    "adus",
    "account",
    "customer",
    "data",
    "data",
    "upload",
    "behalf",
    "customer",
    "customers",
    "decide",
    "um",
    "know",
    "like",
    "levels",
    "sensitivity",
    "want",
    "lock",
    "want",
    "use",
    "amazon",
    "macy",
    "see",
    "public",
    "facing",
    "uh",
    "personally",
    "identifi",
    "information",
    "lot",
    "honestly",
    "lot",
    "easier",
    "think",
    "um",
    "instead",
    "thinking",
    "big",
    "diagram",
    "break",
    "said",
    "could",
    "fit",
    "um",
    "previous",
    "slide",
    "idea",
    "customers",
    "responsible",
    "security",
    "cloud",
    "data",
    "configuration",
    "data",
    "resigning",
    "something",
    "configure",
    "responsible",
    "adus",
    "side",
    "responsible",
    "security",
    "cloud",
    "anything",
    "physical",
    "hardware",
    "operation",
    "managed",
    "services",
    "global",
    "infrastructure",
    "going",
    "thing",
    "important",
    "exam",
    "absolutely",
    "know",
    "difference",
    "two",
    "kind",
    "adist",
    "concept",
    "see",
    "cloud",
    "service",
    "provider",
    "talking",
    "uh",
    "definitely",
    "need",
    "know",
    "music",
    "okay",
    "one",
    "variant",
    "might",
    "see",
    "uh",
    "shared",
    "responsibility",
    "model",
    "would",
    "types",
    "cloud",
    "computing",
    "could",
    "also",
    "applicable",
    "types",
    "uh",
    "deployment",
    "models",
    "types",
    "cloud",
    "computing",
    "customers",
    "responsibility",
    "cloud",
    "service",
    "providers",
    "responsibility",
    "seeing",
    "premise",
    "infrastructure",
    "service",
    "platform",
    "service",
    "software",
    "service",
    "prem",
    "basically",
    "responsible",
    "everything",
    "apps",
    "data",
    "runtime",
    "middleware",
    "os",
    "virtualization",
    "servers",
    "storage",
    "networking",
    "basically",
    "everything",
    "adopting",
    "cloud",
    "almost",
    "cutting",
    "responsibilities",
    "half",
    "cloud",
    "service",
    "provider",
    "going",
    "responsible",
    "physical",
    "networking",
    "uh",
    "physical",
    "storage",
    "physical",
    "servers",
    "offering",
    "virtual",
    "machines",
    "setting",
    "hyper",
    "visor",
    "uh",
    "behalf",
    "virtualization",
    "taking",
    "care",
    "um",
    "know",
    "launch",
    "ec2",
    "instance",
    "know",
    "going",
    "choose",
    "os",
    "responsible",
    "whatever",
    "middleware",
    "runtime",
    "whatever",
    "kind",
    "programs",
    "install",
    "uh",
    "data",
    "resides",
    "kind",
    "like",
    "major",
    "applications",
    "okay",
    "platform",
    "service",
    "uh",
    "know",
    "class",
    "service",
    "provider",
    "going",
    "take",
    "even",
    "responsibility",
    "talking",
    "thinking",
    "like",
    "elastic",
    "beant",
    "stock",
    "right",
    "know",
    "choose",
    "want",
    "managed",
    "might",
    "say",
    "want",
    "ruby",
    "real",
    "server",
    "saying",
    "os",
    "need",
    "um",
    "uh",
    "saying",
    "exact",
    "might",
    "say",
    "version",
    "ruby",
    "want",
    "manage",
    "breaks",
    "uh",
    "might",
    "managed",
    "updates",
    "things",
    "like",
    "last",
    "thing",
    "like",
    "software",
    "service",
    "something",
    "csp",
    "responsible",
    "everything",
    "thinking",
    "software",
    "service",
    "think",
    "like",
    "microsoft",
    "word",
    "writing",
    "uh",
    "know",
    "writing",
    "stuff",
    "know",
    "responsible",
    "might",
    "choose",
    "store",
    "data",
    "data",
    "like",
    "still",
    "handled",
    "cloud",
    "service",
    "fighter",
    "know",
    "cloud",
    "servers",
    "right",
    "um",
    "yeah",
    "hopefully",
    "gives",
    "kind",
    "idea",
    "across",
    "types",
    "cloud",
    "computing",
    "music",
    "responsibilities",
    "right",
    "want",
    "shift",
    "lens",
    "bit",
    "look",
    "share",
    "responsibility",
    "model",
    "uh",
    "observing",
    "subset",
    "cloud",
    "services",
    "compute",
    "going",
    "see",
    "infrastructures",
    "service",
    "platform",
    "service",
    "software",
    "service",
    "function",
    "service",
    "mean",
    "shift",
    "lens",
    "get",
    "new",
    "information",
    "uh",
    "see",
    "really",
    "want",
    "look",
    "uh",
    "one",
    "perspective",
    "okay",
    "starting",
    "top",
    "bare",
    "metal",
    "uh",
    "itab",
    "us",
    "offering",
    "called",
    "ec2",
    "bare",
    "metal",
    "instance",
    "basically",
    "get",
    "whole",
    "machine",
    "uh",
    "configure",
    "entire",
    "machine",
    "exception",
    "physical",
    "machine",
    "customer",
    "install",
    "host",
    "os",
    "um",
    "uh",
    "host",
    "os",
    "operating",
    "system",
    "runs",
    "physical",
    "machine",
    "install",
    "hypervisor",
    "um",
    "databas",
    "going",
    "responsible",
    "rest",
    "physical",
    "machine",
    "normally",
    "next",
    "step",
    "would",
    "dedicated",
    "dedicated",
    "exactly",
    "give",
    "responsibility",
    "gives",
    "assurance",
    "single",
    "tenant",
    "virtual",
    "machine",
    "kind",
    "left",
    "um",
    "see",
    "next",
    "slide",
    "kind",
    "model",
    "shares",
    "spot",
    "uh",
    "ec2",
    "um",
    "ec2",
    "virtual",
    "machine",
    "um",
    "customer",
    "responsible",
    "guest",
    "os",
    "means",
    "choose",
    "os",
    "want",
    "whether",
    "ubuntu",
    "debian",
    "windows",
    "actual",
    "os",
    "running",
    "physical",
    "machine",
    "going",
    "control",
    "ads",
    "going",
    "take",
    "care",
    "container",
    "runtime",
    "know",
    "install",
    "docker",
    "kind",
    "container",
    "layer",
    "want",
    "um",
    "another",
    "thing",
    "ads",
    "going",
    "responsible",
    "hypervisor",
    "uh",
    "physical",
    "machine",
    "host",
    "os",
    "right",
    "looking",
    "containers",
    "says",
    "one",
    "offering",
    "containers",
    "look",
    "ecs",
    "um",
    "going",
    "uh",
    "uh",
    "install",
    "guest",
    "os",
    "right",
    "guest",
    "os",
    "already",
    "going",
    "choose",
    "configuration",
    "containers",
    "going",
    "uh",
    "deploy",
    "containers",
    "going",
    "determine",
    "need",
    "access",
    "storage",
    "containers",
    "attach",
    "storage",
    "containers",
    "adus",
    "going",
    "responsible",
    "guest",
    "os",
    "might",
    "even",
    "guest",
    "os",
    "host",
    "os",
    "guest",
    "os",
    "hypervisor",
    "container",
    "runtime",
    "uh",
    "responsible",
    "containers",
    "okay",
    "going",
    "next",
    "level",
    "platform",
    "service",
    "one",
    "also",
    "little",
    "bit",
    "odd",
    "fits",
    "um",
    "thing",
    "could",
    "using",
    "anything",
    "underneath",
    "could",
    "using",
    "containers",
    "could",
    "using",
    "virtual",
    "machines",
    "um",
    "exactly",
    "fit",
    "well",
    "linear",
    "graph",
    "let",
    "take",
    "look",
    "things",
    "uploading",
    "code",
    "uh",
    "configuration",
    "environment",
    "options",
    "deployment",
    "strategies",
    "um",
    "configuration",
    "associated",
    "services",
    "abus",
    "going",
    "responsible",
    "servers",
    "os",
    "networking",
    "storage",
    "security",
    "taking",
    "responsibility",
    "infrastructures",
    "service",
    "um",
    "whereas",
    "know",
    "adus",
    "going",
    "responsible",
    "virtual",
    "machine",
    "uh",
    "use",
    "going",
    "responsible",
    "customer",
    "stuff",
    "okay",
    "containers",
    "abus",
    "going",
    "responsible",
    "depends",
    "platform",
    "service",
    "set",
    "actually",
    "way",
    "elastic",
    "beanock",
    "set",
    "actually",
    "access",
    "infrastructure",
    "fiddle",
    "case",
    "um",
    "whereas",
    "like",
    "use",
    "heroku",
    "third",
    "party",
    "provider",
    "um",
    "know",
    "would",
    "take",
    "care",
    "stuff",
    "um",
    "would",
    "worry",
    "aws",
    "actually",
    "responsible",
    "uh",
    "underlying",
    "infrastructure",
    "configure",
    "touch",
    "know",
    "fit",
    "perfectly",
    "ca",
    "look",
    "platform",
    "service",
    "meaning",
    "um",
    "responsible",
    "certain",
    "things",
    "really",
    "comes",
    "service",
    "offering",
    "okay",
    "taking",
    "look",
    "software",
    "service",
    "aws",
    "um",
    "going",
    "something",
    "like",
    "um",
    "amazon",
    "work",
    "docs",
    "believe",
    "competitor",
    "uh",
    "popular",
    "competitor",
    "competitor",
    "microsoft",
    "sharepoint",
    "content",
    "collaboration",
    "customer",
    "responsible",
    "contents",
    "document",
    "management",
    "files",
    "configuration",
    "sharing",
    "access",
    "controls",
    "databas",
    "responsible",
    "servers",
    "os",
    "networking",
    "storage",
    "security",
    "everything",
    "else",
    "know",
    "use",
    "microsoft",
    "word",
    "doc",
    "type",
    "stuff",
    "say",
    "say",
    "responsible",
    "okay",
    "last",
    "one",
    "list",
    "functions",
    "offer",
    "lambda",
    "customer",
    "uploading",
    "code",
    "databus",
    "going",
    "take",
    "care",
    "rest",
    "deployment",
    "container",
    "runtime",
    "networking",
    "storage",
    "security",
    "physical",
    "machine",
    "basically",
    "everything",
    "um",
    "really",
    "left",
    "uh",
    "develop",
    "okay",
    "know",
    "hopefully",
    "gives",
    "kind",
    "idea",
    "know",
    "could",
    "thrown",
    "services",
    "like",
    "could",
    "fit",
    "slide",
    "um",
    "uh",
    "adus",
    "fargate",
    "serverless",
    "container",
    "function",
    "sorry",
    "serverless",
    "serverless",
    "container",
    "service",
    "container",
    "service",
    "uh",
    "know",
    "unique",
    "properties",
    "model",
    "well",
    "okay",
    "let",
    "kind",
    "visualization",
    "linear",
    "graph",
    "customers",
    "responsibility",
    "left",
    "hand",
    "side",
    "itus",
    "responsibility",
    "right",
    "look",
    "broad",
    "category",
    "got",
    "bare",
    "metal",
    "dedicated",
    "virtual",
    "machines",
    "containers",
    "functions",
    "matter",
    "uh",
    "uh",
    "type",
    "compute",
    "using",
    "using",
    "always",
    "responsible",
    "code",
    "um",
    "containers",
    "know",
    "uh",
    "know",
    "like",
    "uh",
    "functions",
    "using",
    "functions",
    "containers",
    "say",
    "want",
    "use",
    "ruby",
    "ruby",
    "container",
    "configure",
    "obviously",
    "um",
    "know",
    "using",
    "container",
    "service",
    "configuring",
    "container",
    "responsible",
    "um",
    "virtual",
    "machines",
    "know",
    "responsible",
    "runtime",
    "install",
    "container",
    "runtime",
    "install",
    "bunch",
    "different",
    "packages",
    "like",
    "ruby",
    "stuff",
    "like",
    "uh",
    "operating",
    "system",
    "control",
    "virtual",
    "machines",
    "dedicated",
    "saw",
    "bare",
    "metal",
    "uh",
    "controls",
    "host",
    "os",
    "guest",
    "os",
    "bare",
    "metal",
    "allows",
    "control",
    "virtualization",
    "install",
    "hypervisor",
    "hopefully",
    "gives",
    "idea",
    "compute",
    "offering",
    "also",
    "kind",
    "lot",
    "little",
    "caveats",
    "looking",
    "shared",
    "responsibility",
    "model",
    "okay",
    "music",
    "right",
    "one",
    "variant",
    "share",
    "responsibility",
    "model",
    "one",
    "actually",
    "used",
    "google",
    "um",
    "going",
    "apply",
    "aws",
    "uh",
    "see",
    "works",
    "let",
    "kind",
    "redefine",
    "share",
    "responsibility",
    "model",
    "slightly",
    "different",
    "way",
    "fully",
    "understand",
    "share",
    "responsibility",
    "model",
    "simple",
    "visualization",
    "helps",
    "determine",
    "customer",
    "responsible",
    "csp",
    "responsible",
    "related",
    "aws",
    "across",
    "top",
    "infrastructure",
    "service",
    "platform",
    "service",
    "software",
    "service",
    "remember",
    "ones",
    "like",
    "functions",
    "service",
    "going",
    "fit",
    "um",
    "okay",
    "uh",
    "along",
    "side",
    "content",
    "access",
    "policies",
    "usage",
    "deployment",
    "web",
    "application",
    "security",
    "identity",
    "operations",
    "access",
    "authentication",
    "network",
    "security",
    "remember",
    "cloud",
    "networking",
    "security",
    "guest",
    "os",
    "data",
    "content",
    "audit",
    "logging",
    "actual",
    "traditional",
    "networking",
    "physical",
    "networking",
    "storage",
    "encryption",
    "probably",
    "talking",
    "physical",
    "storage",
    "harden",
    "kernel",
    "ipc",
    "uh",
    "boot",
    "hardware",
    "bars",
    "csp",
    "responsibility",
    "customer",
    "responsibility",
    "looking",
    "sas",
    "software",
    "service",
    "uh",
    "customer",
    "going",
    "responsible",
    "content",
    "remember",
    "like",
    "think",
    "like",
    "word",
    "processor",
    "writing",
    "content",
    "access",
    "policies",
    "like",
    "say",
    "want",
    "share",
    "document",
    "someone",
    "usage",
    "like",
    "utilize",
    "upgrade",
    "plan",
    "things",
    "like",
    "next",
    "list",
    "platform",
    "service",
    "generally",
    "uh",
    "know",
    "platform",
    "services",
    "developers",
    "de",
    "develop",
    "deploy",
    "applications",
    "generally",
    "one",
    "deploy",
    "strategy",
    "uh",
    "know",
    "might",
    "measures",
    "choose",
    "like",
    "uh",
    "might",
    "pay",
    "additional",
    "security",
    "uh",
    "configure",
    "particular",
    "way",
    "might",
    "integrate",
    "services",
    "uh",
    "know",
    "saw",
    "pass",
    "perfect",
    "uh",
    "definition",
    "fit",
    "know",
    "look",
    "elastic",
    "bean",
    "stock",
    "access",
    "resources",
    "change",
    "underneath",
    "might",
    "responsibility",
    "think",
    "would",
    "okay",
    "next",
    "one",
    "infrastructure",
    "service",
    "extending",
    "identity",
    "allowed",
    "uh",
    "know",
    "log",
    "adabs",
    "account",
    "operations",
    "things",
    "allowed",
    "account",
    "access",
    "authentication",
    "use",
    "mfa",
    "uh",
    "things",
    "like",
    "network",
    "security",
    "obviously",
    "configure",
    "security",
    "uh",
    "cloud",
    "infrastructure",
    "cloud",
    "network",
    "um",
    "know",
    "know",
    "isolate",
    "everything",
    "single",
    "vpc",
    "set",
    "security",
    "groups",
    "things",
    "like",
    "uh",
    "know",
    "virtual",
    "machines",
    "set",
    "guest",
    "os",
    "data",
    "content",
    "remember",
    "bare",
    "metal",
    "part",
    "uh",
    "infrastructure",
    "service",
    "offering",
    "see",
    "hardware",
    "hardware",
    "host",
    "host",
    "os",
    "virtualization",
    "perfect",
    "representation",
    "uh",
    "generally",
    "works",
    "okay",
    "last",
    "list",
    "um",
    "looking",
    "ads",
    "responsible",
    "auto",
    "logging",
    "course",
    "adus",
    "cloud",
    "trail",
    "uh",
    "uh",
    "logging",
    "uh",
    "api",
    "um",
    "events",
    "auto",
    "loging",
    "could",
    "things",
    "uh",
    "internally",
    "happening",
    "physical",
    "servers",
    "networking",
    "physical",
    "storage",
    "uh",
    "harding",
    "kernel",
    "os",
    "think",
    "called",
    "nitro",
    "system",
    "like",
    "security",
    "chip",
    "uh",
    "installed",
    "servers",
    "boot",
    "os",
    "uh",
    "hardware",
    "okay",
    "remember",
    "customer",
    "responsible",
    "data",
    "configuration",
    "access",
    "controls",
    "reside",
    "aws",
    "configure",
    "put",
    "data",
    "responsible",
    "forward",
    "okay",
    "customer",
    "responsible",
    "configuration",
    "cloud",
    "services",
    "granting",
    "access",
    "users",
    "via",
    "permissions",
    "right",
    "give",
    "uh",
    "one",
    "employees",
    "access",
    "um",
    "know",
    "even",
    "fault",
    "fault",
    "remember",
    "um",
    "csp",
    "generally",
    "responsible",
    "underlying",
    "infrastructure",
    "say",
    "generally",
    "know",
    "edge",
    "cases",
    "like",
    "bare",
    "metal",
    "coming",
    "back",
    "adses",
    "cloud",
    "cloud",
    "cloud",
    "configure",
    "store",
    "customer",
    "responsible",
    "cloud",
    "configure",
    "csp",
    "probably",
    "responsible",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "share",
    "responsibility",
    "model",
    "perspective",
    "architecture",
    "getting",
    "sick",
    "share",
    "responsibility",
    "model",
    "worry",
    "think",
    "last",
    "slide",
    "section",
    "let",
    "take",
    "look",
    "uh",
    "less",
    "responsibility",
    "responsibility",
    "bottom",
    "traditional",
    "virtual",
    "machine",
    "architecture",
    "global",
    "workforce",
    "familiar",
    "kind",
    "architecture",
    "lots",
    "documentation",
    "frameworks",
    "support",
    "maybe",
    "would",
    "using",
    "elastic",
    "beanock",
    "platform",
    "service",
    "using",
    "ec2",
    "instances",
    "alongside",
    "autoscaling",
    "groups",
    "uh",
    "code",
    "deploy",
    "uh",
    "load",
    "balancers",
    "things",
    "like",
    "next",
    "level",
    "microservices",
    "containers",
    "mix",
    "match",
    "languages",
    "better",
    "utilization",
    "resources",
    "maybe",
    "using",
    "fargate",
    "seress",
    "containers",
    "elastic",
    "container",
    "service",
    "elastic",
    "kubernetes",
    "service",
    "containers",
    "top",
    "serverless",
    "commonly",
    "functions",
    "service",
    "servers",
    "worry",
    "data",
    "uh",
    "code",
    "right",
    "literally",
    "functions",
    "code",
    "could",
    "using",
    "amplify",
    "serverless",
    "framework",
    "maybe",
    "abess",
    "lambda",
    "creating",
    "serverless",
    "architecture",
    "go",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "computing",
    "services",
    "jump",
    "uh",
    "entire",
    "suite",
    "computing",
    "services",
    "let",
    "talk",
    "ec2",
    "moment",
    "allows",
    "launch",
    "virtual",
    "machines",
    "virtual",
    "machine",
    "well",
    "virtual",
    "machine",
    "vm",
    "emulation",
    "physical",
    "computer",
    "using",
    "software",
    "server",
    "virtualization",
    "allows",
    "easily",
    "create",
    "copy",
    "resize",
    "migrate",
    "server",
    "multiple",
    "vms",
    "run",
    "physical",
    "servers",
    "share",
    "cost",
    "customers",
    "imagine",
    "server",
    "computer",
    "executable",
    "file",
    "computer",
    "okay",
    "kind",
    "way",
    "want",
    "think",
    "launch",
    "vm",
    "uh",
    "call",
    "instance",
    "ec2",
    "highly",
    "configurable",
    "server",
    "choose",
    "ami",
    "amazon",
    "machine",
    "image",
    "affects",
    "options",
    "amount",
    "cpus",
    "vcpus",
    "virtual",
    "cpus",
    "amount",
    "memory",
    "ram",
    "amount",
    "network",
    "bandwidth",
    "operating",
    "system",
    "whether",
    "windows",
    "ubuntu",
    "amazon",
    "2",
    "uh",
    "ability",
    "attach",
    "multiple",
    "virtual",
    "hard",
    "drives",
    "storage",
    "elastic",
    "block",
    "store",
    "um",
    "amazon",
    "machine",
    "image",
    "predefined",
    "configuration",
    "avm",
    "remember",
    "ec2",
    "also",
    "considered",
    "backbone",
    "ads",
    "majority",
    "services",
    "using",
    "uc2",
    "underlying",
    "servers",
    "whether",
    "s3",
    "rds",
    "10b",
    "lambdas",
    "using",
    "um",
    "say",
    "also",
    "talk",
    "network",
    "backbone",
    "global",
    "infrastructure",
    "networking",
    "large",
    "ec2",
    "services",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looked",
    "ec2",
    "well",
    "let",
    "look",
    "broader",
    "services",
    "computing",
    "uh",
    "common",
    "ones",
    "come",
    "across",
    "definitely",
    "going",
    "see",
    "single",
    "slide",
    "break",
    "virtual",
    "machines",
    "containers",
    "serverless",
    "virtual",
    "machines",
    "remember",
    "ul",
    "ation",
    "physical",
    "computer",
    "using",
    "software",
    "ec2",
    "main",
    "one",
    "vm",
    "category",
    "amazon",
    "light",
    "sale",
    "manage",
    "virtual",
    "server",
    "service",
    "friendly",
    "version",
    "ec2",
    "virtual",
    "machines",
    "need",
    "launch",
    "linux",
    "windows",
    "server",
    "much",
    "adus",
    "knowledge",
    "could",
    "launch",
    "wordpress",
    "uh",
    "could",
    "hook",
    "domain",
    "stuff",
    "like",
    "um",
    "good",
    "options",
    "beginners",
    "containers",
    "virtualizing",
    "operating",
    "system",
    "os",
    "run",
    "multiple",
    "workloads",
    "single",
    "os",
    "instance",
    "containers",
    "generally",
    "used",
    "microservice",
    "architecture",
    "divide",
    "application",
    "smaller",
    "applications",
    "talk",
    "would",
    "ecs",
    "elastic",
    "container",
    "service",
    "container",
    "orchestration",
    "service",
    "supports",
    "docker",
    "containers",
    "launches",
    "cluster",
    "servers",
    "these2",
    "instances",
    "docker",
    "installed",
    "need",
    "dockers",
    "service",
    "need",
    "run",
    "containers",
    "elastic",
    "container",
    "registry",
    "ecr",
    "repository",
    "container",
    "images",
    "order",
    "launch",
    "container",
    "need",
    "image",
    "image",
    "means",
    "save",
    "copy",
    "repository",
    "means",
    "storage",
    "version",
    "control",
    "ecs",
    "fargate",
    "fargate",
    "people",
    "kind",
    "forgetting",
    "runs",
    "ecs",
    "days",
    "servess",
    "orchestration",
    "container",
    "service",
    "ecs",
    "ex",
    "except",
    "pay",
    "demand",
    "per",
    "running",
    "containers",
    "ecs",
    "keep",
    "ec2",
    "server",
    "running",
    "even",
    "containers",
    "running",
    "manages",
    "underlying",
    "server",
    "scale",
    "upgrade",
    "ec2",
    "server",
    "advantage",
    "ecs",
    "okay",
    "elastic",
    "kubernetes",
    "service",
    "eks",
    "fully",
    "managed",
    "kubernetes",
    "service",
    "kuber",
    "kubernetes",
    "commonly",
    "rated",
    "k8",
    "orchestration",
    "software",
    "created",
    "google",
    "generally",
    "standard",
    "managing",
    "microservices",
    "need",
    "run",
    "kubernetes",
    "service",
    "serverless",
    "category",
    "underlying",
    "servers",
    "managed",
    "b",
    "us",
    "worry",
    "configure",
    "servers",
    "saus",
    "lambda",
    "serverless",
    "function",
    "service",
    "run",
    "code",
    "without",
    "provisioning",
    "managing",
    "servers",
    "upload",
    "small",
    "pieces",
    "code",
    "choose",
    "much",
    "uh",
    "much",
    "memory",
    "long",
    "want",
    "function",
    "run",
    "allowed",
    "run",
    "timing",
    "charged",
    "based",
    "runtime",
    "serv",
    "function",
    "rounded",
    "nearest",
    "100",
    "milliseconds",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "want",
    "show",
    "variety",
    "different",
    "computing",
    "services",
    "aws",
    "going",
    "try",
    "launch",
    "uh",
    "going",
    "anything",
    "going",
    "simply",
    "launch",
    "okay",
    "first",
    "want",
    "show",
    "ec2",
    "way",
    "go",
    "depth",
    "ec2",
    "later",
    "course",
    "um",
    "going",
    "go",
    "ahead",
    "launch",
    "instance",
    "worry",
    "stuff",
    "choose",
    "amazon",
    "linux",
    "2",
    "free",
    "tier",
    "right",
    "going",
    "choose",
    "instance",
    "type",
    "t2",
    "micro",
    "part",
    "free",
    "tier",
    "going",
    "set",
    "one",
    "options",
    "fine",
    "want",
    "go",
    "ahead",
    "review",
    "launch",
    "going",
    "launch",
    "want",
    "generate",
    "key",
    "pair",
    "going",
    "proceed",
    "without",
    "key",
    "pair",
    "going",
    "acknowledge",
    "want",
    "launching",
    "ec2",
    "instance",
    "go",
    "view",
    "instances",
    "see",
    "pending",
    "okay",
    "usually",
    "like",
    "little",
    "spinning",
    "icon",
    "maybe",
    "updated",
    "since",
    "go",
    "hard",
    "see",
    "terminated",
    "ones",
    "need",
    "anything",
    "wanted",
    "show",
    "actions",
    "launch",
    "actually",
    "leave",
    "alone",
    "maybe",
    "see",
    "launched",
    "next",
    "one",
    "want",
    "show",
    "e",
    "elastic",
    "container",
    "service",
    "um",
    "wow",
    "old",
    "let",
    "go",
    "let",
    "get",
    "new",
    "experience",
    "please",
    "old",
    "okay",
    "checkbox",
    "hit",
    "get",
    "started",
    "say",
    "create",
    "cluster",
    "options",
    "networking",
    "ec2",
    "linux",
    "plus",
    "networking",
    "uh",
    "use",
    "either",
    "ads",
    "fargate",
    "external",
    "windows",
    "um",
    "uh",
    "fargate",
    "right",
    "fargate",
    "part",
    "elastic",
    "container",
    "service",
    "used",
    "well",
    "used",
    "called",
    "ecs",
    "fargate",
    "us",
    "markets",
    "separate",
    "service",
    "go",
    "next",
    "say",
    "ecs",
    "cluster",
    "um",
    "create",
    "empty",
    "cluster",
    "would",
    "make",
    "fargate",
    "cluster",
    "want",
    "ond",
    "demand",
    "server",
    "look",
    "m6",
    "large",
    "afraid",
    "lot",
    "spend",
    "watch",
    "learn",
    "well",
    "going",
    "try",
    "find",
    "something",
    "super",
    "cheap",
    "want",
    "t2",
    "micro",
    "t3",
    "micro",
    "t2",
    "micro",
    "part",
    "free",
    "tier",
    "know",
    "get",
    "choose",
    "t2",
    "anymore",
    "might",
    "let",
    "know",
    "t3",
    "micro",
    "great",
    "whatever",
    "says",
    "free",
    "going",
    "go",
    "number",
    "instances",
    "one",
    "amazon",
    "lytic",
    "version",
    "fine",
    "care",
    "key",
    "pair",
    "uh",
    "use",
    "existing",
    "vpc",
    "want",
    "make",
    "new",
    "one",
    "select",
    "existing",
    "ones",
    "okay",
    "uh",
    "let",
    "create",
    "new",
    "security",
    "group",
    "totally",
    "fine",
    "allow",
    "fine",
    "create",
    "new",
    "role",
    "fine",
    "create",
    "okay",
    "going",
    "create",
    "cluster",
    "um",
    "going",
    "make",
    "new",
    "tab",
    "let",
    "check",
    "ec2",
    "instance",
    "look",
    "ec2",
    "instance",
    "running",
    "okay",
    "great",
    "private",
    "ip",
    "address",
    "public",
    "ip",
    "address",
    "right",
    "um",
    "much",
    "ca",
    "even",
    "log",
    "generate",
    "key",
    "pair",
    "l",
    "times",
    "want",
    "name",
    "things",
    "go",
    "name",
    "server",
    "okay",
    "go",
    "back",
    "ecs",
    "instance",
    "cluster",
    "ready",
    "go",
    "oh",
    "nice",
    "got",
    "new",
    "ui",
    "wanted",
    "deploy",
    "something",
    "service",
    "task",
    "um",
    "would",
    "need",
    "create",
    "template",
    "like",
    "task",
    "definition",
    "file",
    "uh",
    "new",
    "ui",
    "redirected",
    "previous",
    "version",
    "console",
    "available",
    "new",
    "experience",
    "yet",
    "course",
    "create",
    "new",
    "task",
    "definition",
    "file",
    "used",
    "run",
    "basically",
    "like",
    "docker",
    "file",
    "composed",
    "file",
    "whatever",
    "want",
    "um",
    "fargate",
    "ec2",
    "ecs",
    "going",
    "ec2",
    "say",
    "ecs",
    "uh",
    "tas",
    "def",
    "file",
    "um",
    "task",
    "ru",
    "opt",
    "optional",
    "im",
    "roll",
    "need",
    "one",
    "network",
    "mode",
    "care",
    "um",
    "idea",
    "container",
    "allows",
    "use",
    "particular",
    "amount",
    "um",
    "thing",
    "use",
    "memory",
    "look",
    "t2",
    "micro",
    "even",
    "remember",
    "size",
    "okay",
    "t2",
    "micro",
    "aws",
    "go",
    "look",
    "instance",
    "types",
    "going",
    "flip",
    "t2",
    "says",
    "one",
    "vcpu",
    "one",
    "gab",
    "memory",
    "one",
    "yeah",
    "yeah",
    "one",
    "okay",
    "fine",
    "want",
    "megabytes",
    "say",
    "500",
    "megabytes",
    "um",
    "know",
    "less",
    "one",
    "going",
    "one",
    "um",
    "task",
    "cpu",
    "must",
    "integer",
    "greater",
    "equal",
    "128",
    "okay",
    "fine",
    "128",
    "oh",
    "guess",
    "1024",
    "would",
    "utilize",
    "whole",
    "thing",
    "could",
    "say",
    "512",
    "okay",
    "would",
    "add",
    "container",
    "every",
    "day",
    "remember",
    "say",
    "container",
    "um",
    "need",
    "repository",
    "need",
    "like",
    "dockerhub",
    "hello",
    "world",
    "okay",
    "care",
    "need",
    "image",
    "simple",
    "looking",
    "address",
    "um",
    "hoping",
    "dockerhub",
    "url",
    "something",
    "like",
    "right",
    "probably",
    "docker",
    "io",
    "docker",
    "image",
    "um",
    "docker",
    "hub",
    "url",
    "ecs",
    "okay",
    "goes",
    "show",
    "often",
    "launch",
    "launching",
    "things",
    "repository",
    "url",
    "docker",
    "image",
    "think",
    "going",
    "would",
    "really",
    "like",
    "url",
    "please",
    "reviews",
    "tags",
    "somewhere",
    "right",
    "uh",
    "well",
    "let",
    "try",
    "go",
    "type",
    "says",
    "image",
    "tags",
    "hello",
    "world",
    "really",
    "need",
    "image",
    "id",
    "image",
    "url",
    "hello",
    "world",
    "docker",
    "hub",
    "making",
    "life",
    "easy",
    "today",
    "anything",
    "want",
    "see",
    "like",
    "single",
    "example",
    "docker",
    "iio",
    "url",
    "examples",
    "ecs",
    "like",
    "know",
    "going",
    "um",
    "know",
    "cloud",
    "engineer",
    "going",
    "googling",
    "lot",
    "trying",
    "find",
    "examples",
    "says",
    "name",
    "host",
    "name",
    "okay",
    "try",
    "okay",
    "think",
    "name",
    "underscore",
    "hello",
    "world",
    "throwing",
    "right",
    "docker",
    "io",
    "hold",
    "repository",
    "url",
    "tag",
    "know",
    "like",
    "tag",
    "going",
    "like",
    "latest",
    "view",
    "available",
    "tags",
    "latest",
    "okay",
    "thing",
    "got",
    "lot",
    "confidence",
    "hard",
    "limits",
    "soft",
    "limit",
    "um",
    "set",
    "set",
    "things",
    "go",
    "bottom",
    "hit",
    "add",
    "looks",
    "like",
    "okay",
    "scroll",
    "create",
    "create",
    "task",
    "definition",
    "file",
    "fine",
    "going",
    "go",
    "back",
    "cluster",
    "going",
    "bring",
    "us",
    "back",
    "new",
    "experience",
    "going",
    "click",
    "cluster",
    "holy",
    "smokes",
    "uh",
    "going",
    "hit",
    "deploy",
    "going",
    "choose",
    "service",
    "means",
    "going",
    "continuously",
    "run",
    "task",
    "means",
    "done",
    "running",
    "ends",
    "going",
    "choose",
    "family",
    "version",
    "task",
    "definition",
    "file",
    "compatible",
    "selected",
    "compute",
    "strategy",
    "task",
    "file",
    "choose",
    "task",
    "take",
    "okay",
    "maybe",
    "like",
    "code",
    "continuously",
    "runs",
    "care",
    "need",
    "run",
    "service",
    "selected",
    "task",
    "definition",
    "compatible",
    "selected",
    "compute",
    "strategy",
    "okay",
    "let",
    "see",
    "uh",
    "double",
    "check",
    "using",
    "fargate",
    "strategy",
    "instead",
    "ec2",
    "uh",
    "blog",
    "designed",
    "ec2",
    "strategy",
    "probably",
    "suggesting",
    "strategy",
    "file",
    "made",
    "right",
    "one",
    "tas",
    "music",
    "definitions",
    "go",
    "back",
    "well",
    "wrong",
    "task",
    "roll",
    "none",
    "container",
    "going",
    "trust",
    "going",
    "go",
    "ahead",
    "delete",
    "delete",
    "delete",
    "oh",
    "boy",
    "actions",
    "deregister",
    "deregister",
    "create",
    "new",
    "one",
    "us",
    "tools",
    "like",
    "us",
    "um",
    "cli",
    "make",
    "lot",
    "easier",
    "see",
    "frustrating",
    "chose",
    "task",
    "def",
    "requires",
    "compatibility",
    "ec2",
    "default",
    "512",
    "512",
    "add",
    "container",
    "going",
    "uh",
    "underscore",
    "called",
    "hello",
    "world",
    "latest",
    "say",
    "hello",
    "world",
    "say",
    "uh",
    "512",
    "fine",
    "care",
    "port",
    "mappings",
    "reading",
    "carefully",
    "see",
    "wants",
    "say",
    "512",
    "maybe",
    "specify",
    "complaining",
    "looks",
    "fine",
    "hit",
    "add",
    "okay",
    "constraints",
    "type",
    "looks",
    "fine",
    "try",
    "file",
    "let",
    "see",
    "run",
    "task",
    "see2",
    "another",
    "way",
    "choose",
    "cluster",
    "actually",
    "lot",
    "easier",
    "old",
    "old",
    "old",
    "eh",
    "ugly",
    "launches",
    "know",
    "trouble",
    "one",
    "way",
    "another",
    "way",
    "uh",
    "sometimes",
    "work",
    "expect",
    "task",
    "really",
    "work",
    "particular",
    "way",
    "pending",
    "fine",
    "fails",
    "fine",
    "successful",
    "fine",
    "care",
    "want",
    "go",
    "motion",
    "successful",
    "ran",
    "stopped",
    "know",
    "could",
    "see",
    "like",
    "output",
    "anywhere",
    "probably",
    "would",
    "would",
    "log",
    "something",
    "like",
    "somewhere",
    "know",
    "like",
    "logs",
    "turned",
    "go",
    "like",
    "cloud",
    "watch",
    "logs",
    "maybe",
    "could",
    "see",
    "something",
    "lot",
    "services",
    "automatically",
    "create",
    "cloudwatch",
    "logs",
    "sometimes",
    "go",
    "look",
    "drop",
    "go",
    "log",
    "groups",
    "stuff",
    "um",
    "couple",
    "created",
    "go",
    "ahead",
    "delete",
    "looking",
    "like",
    "ecs",
    "logging",
    "happening",
    "totally",
    "fine",
    "ecs",
    "um",
    "fargate",
    "pretty",
    "much",
    "uh",
    "difference",
    "fargate",
    "like",
    "start",
    "run",
    "lot",
    "slower",
    "watch",
    "okay",
    "let",
    "go",
    "take",
    "look",
    "lambda",
    "okay",
    "serverless",
    "compute",
    "go",
    "ahead",
    "create",
    "function",
    "uh",
    "start",
    "blueprint",
    "sound",
    "bad",
    "personally",
    "like",
    "ruby",
    "getting",
    "much",
    "look",
    "something",
    "like",
    "hello",
    "like",
    "hello",
    "world",
    "go",
    "hello",
    "world",
    "click",
    "say",
    "hello",
    "world",
    "uh",
    "going",
    "create",
    "permissions",
    "fine",
    "showing",
    "us",
    "code",
    "simple",
    "okay",
    "going",
    "console",
    "log",
    "values",
    "good",
    "hello",
    "world",
    "function",
    "even",
    "say",
    "hello",
    "world",
    "call",
    "hello",
    "world",
    "function",
    "say",
    "hello",
    "world",
    "understand",
    "going",
    "go",
    "ahead",
    "create",
    "function",
    "usually",
    "take",
    "long",
    "okay",
    "uh",
    "function",
    "code",
    "notice",
    "cloud9",
    "okay",
    "even",
    "move",
    "cloud9",
    "button",
    "kind",
    "cool",
    "hit",
    "test",
    "used",
    "guess",
    "wanted",
    "make",
    "obvious",
    "moved",
    "nice",
    "hit",
    "oops",
    "test",
    "going",
    "send",
    "payload",
    "actual",
    "function",
    "uh",
    "going",
    "tell",
    "us",
    "worked",
    "okay",
    "run",
    "test",
    "go",
    "test",
    "changed",
    "bit",
    "guess",
    "created",
    "succeeded",
    "logs",
    "okay",
    "going",
    "output",
    "values",
    "three",
    "values",
    "basically",
    "nothing",
    "maybe",
    "supposed",
    "set",
    "environment",
    "variable",
    "see",
    "uploading",
    "uh",
    "code",
    "right",
    "bit",
    "code",
    "like",
    "full",
    "app",
    "anything",
    "launched",
    "e2",
    "container",
    "um",
    "sorry",
    "ec2",
    "instance",
    "container",
    "seress",
    "function",
    "things",
    "like",
    "ekf",
    "yes",
    "really",
    "really",
    "hard",
    "set",
    "okay",
    "cuz",
    "use",
    "like",
    "kubernetes",
    "commands",
    "stuff",
    "like",
    "kubernetes",
    "knowledge",
    "always",
    "poor",
    "um",
    "taking",
    "peek",
    "see",
    "updated",
    "yeah",
    "create",
    "cluster",
    "like",
    "deploying",
    "forget",
    "trying",
    "think",
    "anything",
    "else",
    "kind",
    "want",
    "show",
    "um",
    "main",
    "three",
    "would",
    "say",
    "pretty",
    "happy",
    "um",
    "going",
    "go",
    "kill",
    "things",
    "going",
    "go",
    "lambda",
    "okay",
    "going",
    "go",
    "ahead",
    "delete",
    "saw",
    "ecs",
    "hardest",
    "matter",
    "many",
    "times",
    "built",
    "things",
    "ecs",
    "deployed",
    "full",
    "things",
    "ecs",
    "ca",
    "remember",
    "always",
    "much",
    "trouble",
    "task",
    "definition",
    "files",
    "unbelievable",
    "go",
    "cluster",
    "ecs",
    "cluster",
    "make",
    "sure",
    "fargate",
    "cluster",
    "know",
    "clicking",
    "really",
    "fast",
    "many",
    "things",
    "click",
    "going",
    "click",
    "cluster",
    "going",
    "go",
    "hit",
    "edit",
    "running",
    "ec2",
    "instance",
    "right",
    "need",
    "destroy",
    "um",
    "took",
    "back",
    "old",
    "one",
    "um",
    "want",
    "delete",
    "want",
    "delete",
    "cluster",
    "click",
    "back",
    "delete",
    "ca",
    "checkbox",
    "anything",
    "uh",
    "delete",
    "delete",
    "task",
    "first",
    "maybe",
    "go",
    "mean",
    "already",
    "stopped",
    "nothing",
    "edit",
    "uh",
    "huh",
    "account",
    "settings",
    "wow",
    "confusing",
    "okay",
    "delete",
    "ecs",
    "cluster",
    "got",
    "kidding",
    "actually",
    "look",
    "open",
    "uss",
    "console",
    "navigation",
    "navigation",
    "choose",
    "clusters",
    "new",
    "turn",
    "e",
    "uh",
    "turn",
    "new",
    "ecs",
    "experience",
    "choose",
    "old",
    "console",
    "delete",
    "cluster",
    "workflow",
    "supported",
    "ec",
    "ecs",
    "console",
    "serious",
    "like",
    "even",
    "let",
    "people",
    "use",
    "new",
    "experience",
    "functionality",
    "um",
    "oh",
    "going",
    "give",
    "feedback",
    "let",
    "says",
    "uh",
    "need",
    "delete",
    "ecs",
    "cluster",
    "okay",
    "big",
    "ugly",
    "cluster",
    "delete",
    "cluster",
    "okay",
    "yeah",
    "struggle",
    "okay",
    "like",
    "things",
    "always",
    "changing",
    "uh",
    "confidence",
    "done",
    "times",
    "know",
    "right",
    "um",
    "one",
    "biggest",
    "cloud",
    "would",
    "say",
    "going",
    "take",
    "minutes",
    "apparently",
    "delete",
    "cluster",
    "going",
    "let",
    "let",
    "go",
    "ec2",
    "close",
    "kept",
    "tab",
    "open",
    "uh",
    "ec2",
    "instance",
    "go",
    "ahead",
    "terminate",
    "instance",
    "terminate",
    "okay",
    "says",
    "terminating",
    "good",
    "shape",
    "terminator",
    "shutting",
    "fine",
    "notice",
    "ecs",
    "instance",
    "make",
    "sure",
    "shut",
    "server",
    "um",
    "ecs",
    "instance",
    "cuz",
    "stop",
    "already",
    "terminated",
    "go",
    "back",
    "notice",
    "says",
    "done",
    "clearly",
    "clearly",
    "shut",
    "okay",
    "going",
    "wait",
    "bit",
    "even",
    "though",
    "know",
    "deleted",
    "maybe",
    "deleting",
    "things",
    "like",
    "autoscaling",
    "group",
    "go",
    "right",
    "probably",
    "probably",
    "trying",
    "destroy",
    "auto",
    "scaling",
    "group",
    "show",
    "must",
    "already",
    "destroyed",
    "yeah",
    "task",
    "services",
    "delete",
    "back",
    "bit",
    "know",
    "safe",
    "already",
    "deleted",
    "see",
    "back",
    "bit",
    "okay",
    "waited",
    "literally",
    "second",
    "deleted",
    "deleted",
    "lambda",
    "deleted",
    "oh",
    "delete",
    "lambda",
    "good",
    "question",
    "really",
    "worried",
    "lambda",
    "guess",
    "really",
    "worried",
    "um",
    "know",
    "rests",
    "idle",
    "costing",
    "us",
    "anything",
    "ec",
    "ec2",
    "backed",
    "ec2",
    "instances",
    "shut",
    "okay",
    "remember",
    "make",
    "sure",
    "correct",
    "region",
    "sometimes",
    "gets",
    "flipped",
    "think",
    "resources",
    "gone",
    "actually",
    "running",
    "another",
    "region",
    "uh",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "higher",
    "performance",
    "computing",
    "services",
    "aws",
    "got",
    "talk",
    "nitro",
    "system",
    "combination",
    "dedicated",
    "hardware",
    "lightweight",
    "hypervisor",
    "enabling",
    "faster",
    "innovation",
    "enhanced",
    "security",
    "new",
    "ec2",
    "instant",
    "types",
    "use",
    "nitro",
    "system",
    "nitro",
    "system",
    "designed",
    "uh",
    "aws",
    "okay",
    "made",
    "things",
    "nitro",
    "cards",
    "specialized",
    "cards",
    "vpcs",
    "ebs",
    "instant",
    "storage",
    "uh",
    "controller",
    "cards",
    "nitro",
    "security",
    "chips",
    "integrated",
    "motherboard",
    "protects",
    "hardware",
    "resources",
    "nitro",
    "hypervisor",
    "lightweight",
    "hyper",
    "visor",
    "memory",
    "cpu",
    "allocation",
    "bare",
    "metal",
    "like",
    "performance",
    "also",
    "uh",
    "nitro",
    "enclaves",
    "bit",
    "scope",
    "like",
    "ec2",
    "isolation",
    "okay",
    "uh",
    "bare",
    "metal",
    "instances",
    "launch",
    "ec2",
    "instances",
    "hypervisor",
    "run",
    "workloads",
    "directly",
    "hardware",
    "maximum",
    "performance",
    "control",
    "m5",
    "r5",
    "um",
    "ec2",
    "instances",
    "run",
    "bare",
    "metal",
    "ones",
    "believe",
    "seen",
    "well",
    "um",
    "know",
    "running",
    "bare",
    "metal",
    "go",
    "investigate",
    "time",
    "okay",
    "bottle",
    "rocket",
    "linux",
    "based",
    "open",
    "source",
    "operating",
    "system",
    "purpose",
    "built",
    "adus",
    "running",
    "containers",
    "vms",
    "bare",
    "metal",
    "hosts",
    "uh",
    "let",
    "define",
    "hbc",
    "cluster",
    "hundred",
    "thousands",
    "servers",
    "fast",
    "connections",
    "purpose",
    "boosting",
    "computing",
    "capacity",
    "need",
    "supercomputer",
    "perform",
    "computational",
    "problems",
    "large",
    "run",
    "standard",
    "computer",
    "computers",
    "would",
    "take",
    "long",
    "know",
    "hbc",
    "comes",
    "play",
    "one",
    "solution",
    "databus",
    "parallel",
    "cluster",
    "uh",
    "adus",
    "supported",
    "open",
    "source",
    "cluster",
    "management",
    "tool",
    "makes",
    "easy",
    "deploy",
    "manage",
    "higher",
    "performance",
    "computing",
    "hbc",
    "clusters",
    "aws",
    "hopefully",
    "gives",
    "idea",
    "stuff",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "hpc",
    "high",
    "performance",
    "computing",
    "aws",
    "hpc",
    "uh",
    "running",
    "large",
    "complex",
    "simulations",
    "deep",
    "learning",
    "workloads",
    "cloud",
    "complete",
    "suite",
    "high",
    "performance",
    "computing",
    "product",
    "services",
    "gains",
    "insight",
    "faster",
    "quickly",
    "move",
    "idea",
    "market",
    "blah",
    "blah",
    "blah",
    "blah",
    "blah",
    "ml",
    "complex",
    "scientific",
    "computing",
    "stuff",
    "run",
    "least",
    "c5",
    "ns",
    "okay",
    "way",
    "works",
    "use",
    "um",
    "cli",
    "called",
    "p",
    "cluster",
    "parallel",
    "compute",
    "u",
    "parallel",
    "cluster",
    "stuff",
    "let",
    "see",
    "get",
    "installed",
    "easily",
    "um",
    "going",
    "see",
    "hard",
    "install",
    "stall",
    "recommend",
    "running",
    "cuz",
    "know",
    "going",
    "cost",
    "make",
    "misconfiguration",
    "want",
    "spend",
    "think",
    "dangerous",
    "going",
    "go",
    "back",
    "us",
    "east",
    "one",
    "going",
    "open",
    "cloudshell",
    "going",
    "give",
    "moment",
    "load",
    "loading",
    "let",
    "take",
    "look",
    "would",
    "go",
    "ahead",
    "install",
    "install",
    "current",
    "parallel",
    "um",
    "parallel",
    "think",
    "copy",
    "line",
    "okay",
    "wait",
    "environment",
    "spin",
    "right",
    "spun",
    "install",
    "jump",
    "tutorial",
    "okay",
    "give",
    "moment",
    "waiting",
    "little",
    "looks",
    "like",
    "shell",
    "ready",
    "looks",
    "like",
    "bash",
    "um",
    "going",
    "type",
    "ads",
    "s3",
    "ls",
    "sanity",
    "check",
    "okay",
    "works",
    "great",
    "go",
    "back",
    "going",
    "go",
    "back",
    "install",
    "linux",
    "need",
    "single",
    "command",
    "certain",
    "already",
    "linux",
    "python",
    "installed",
    "want",
    "command",
    "install",
    "saw",
    "moment",
    "ago",
    "going",
    "back",
    "till",
    "find",
    "uh",
    "one",
    "oh",
    "link",
    "talk",
    "documentations",
    "tricky",
    "sometimes",
    "click",
    "uh",
    "headings",
    "find",
    "stuff",
    "first",
    "time",
    "installing",
    "grab",
    "usually",
    "supposed",
    "create",
    "virtual",
    "environments",
    "python",
    "care",
    "cloud",
    "shell",
    "matter",
    "going",
    "go",
    "ahead",
    "download",
    "hopefully",
    "fast",
    "super",
    "fast",
    "really",
    "nice",
    "go",
    "check",
    "pcluster",
    "version",
    "okay",
    "looks",
    "fine",
    "going",
    "go",
    "run",
    "first",
    "job",
    "um",
    "returns",
    "gives",
    "outputs",
    "think",
    "need",
    "configure",
    "already",
    "cli",
    "going",
    "go",
    "ahead",
    "create",
    "new",
    "cluster",
    "um",
    "beginning",
    "cluster",
    "creation",
    "configuration",
    "file",
    "config",
    "found",
    "guess",
    "configure",
    "configure",
    "asking",
    "region",
    "want",
    "um",
    "us",
    "east",
    "one",
    "would",
    "choose",
    "reason",
    "way",
    "number",
    "13",
    "lucky",
    "number",
    "going",
    "choose",
    "anyway",
    "anyway",
    "key",
    "pair",
    "found",
    "us",
    "east",
    "one",
    "region",
    "please",
    "create",
    "one",
    "following",
    "um",
    "create",
    "ec2",
    "key",
    "pairs",
    "uh",
    "options",
    "found",
    "ec2",
    "key",
    "pairs",
    "fine",
    "go",
    "go",
    "ec2",
    "go",
    "key",
    "pairs",
    "key",
    "pairs",
    "key",
    "pairs",
    "key",
    "pairs",
    "create",
    "new",
    "new",
    "one",
    "say",
    "um",
    "hpc",
    "key",
    "pair",
    "hpc",
    "know",
    "putty",
    "pm",
    "going",
    "pem",
    "linux",
    "create",
    "notice",
    "downloaded",
    "pem",
    "going",
    "need",
    "later",
    "um",
    "type",
    "p",
    "cluster",
    "configure",
    "choose",
    "13",
    "choose",
    "number",
    "one",
    "uh",
    "allowed",
    "values",
    "scheduler",
    "idea",
    "uh",
    "let",
    "choose",
    "number",
    "one",
    "allowed",
    "values",
    "operating",
    "system",
    "amazon",
    "l",
    "2",
    "know",
    "minimum",
    "cluster",
    "size",
    "one",
    "maximum",
    "cluster",
    "size",
    "two",
    "head",
    "notice",
    "instance",
    "oh",
    "t2",
    "micro",
    "yeah",
    "let",
    "know",
    "could",
    "enter",
    "compute",
    "type",
    "uh",
    "t2",
    "micro",
    "sure",
    "thought",
    "use",
    "c5n",
    "guess",
    "apparently",
    "automate",
    "vpn",
    "uh",
    "vpc",
    "creation",
    "yes",
    "course",
    "network",
    "configuration",
    "allow",
    "values",
    "network",
    "configuration",
    "uh",
    "head",
    "node",
    "public",
    "subnet",
    "compute",
    "fleet",
    "private",
    "subnet",
    "uh",
    "head",
    "node",
    "compute",
    "yeah",
    "make",
    "lives",
    "easier",
    "care",
    "first",
    "one",
    "sounds",
    "secure",
    "course",
    "oh",
    "creating",
    "cloud",
    "information",
    "sack",
    "wow",
    "easy",
    "thought",
    "going",
    "super",
    "painful",
    "okay",
    "go",
    "go",
    "take",
    "look",
    "cloud",
    "formation",
    "right",
    "care",
    "actually",
    "run",
    "task",
    "interesting",
    "go",
    "process",
    "see",
    "hard",
    "go",
    "look",
    "resources",
    "created",
    "creating",
    "internet",
    "gateway",
    "literally",
    "creating",
    "isolate",
    "vpc",
    "totally",
    "fine",
    "guess",
    "um",
    "creating",
    "subnet",
    "creating",
    "route",
    "table",
    "refresh",
    "um",
    "sure",
    "much",
    "wants",
    "create",
    "looks",
    "like",
    "vpc",
    "creating",
    "thought",
    "maybe",
    "ec2",
    "instances",
    "would",
    "show",
    "maybe",
    "going",
    "launch",
    "need",
    "basis",
    "okay",
    "created",
    "oh",
    "vpc",
    "gateway",
    "think",
    "vpc",
    "gateways",
    "cost",
    "money",
    "let",
    "go",
    "take",
    "look",
    "vpc",
    "pricing",
    "yeah",
    "uh",
    "transfer",
    "fee",
    "careful",
    "know",
    "watch",
    "along",
    "default",
    "route",
    "depends",
    "public",
    "creating",
    "ec2",
    "route",
    "know",
    "ads",
    "ec2",
    "route",
    "never",
    "seen",
    "sometimes",
    "go",
    "ec2",
    "take",
    "look",
    "left",
    "hand",
    "side",
    "see",
    "anything",
    "know",
    "type",
    "ec2",
    "route",
    "cloud",
    "formation",
    "sometimes",
    "cloud",
    "formation",
    "great",
    "figuring",
    "component",
    "components",
    "represented",
    "um",
    "inabus",
    "um",
    "management",
    "console",
    "specify",
    "route",
    "route",
    "table",
    "oh",
    "route",
    "okay",
    "go",
    "back",
    "refresh",
    "done",
    "stack",
    "done",
    "created",
    "complete",
    "good",
    "go",
    "back",
    "cloud",
    "shell",
    "says",
    "edit",
    "configuration",
    "file",
    "simply",
    "etc",
    "let",
    "see",
    "create",
    "cluster",
    "assume",
    "would",
    "create",
    "ec2",
    "instances",
    "job",
    "schedule",
    "using",
    "sge",
    "deprecated",
    "future",
    "use",
    "parallel",
    "cluster",
    "well",
    "told",
    "okay",
    "new",
    "version",
    "301",
    "parallel",
    "available",
    "understand",
    "installed",
    "right",
    "go",
    "back",
    "cloud",
    "formation",
    "going",
    "probably",
    "create",
    "nested",
    "stacks",
    "thought",
    "would",
    "n",
    "stacks",
    "means",
    "reliant",
    "one",
    "main",
    "one",
    "uh",
    "children",
    "stack",
    "go",
    "see",
    "resources",
    "creating",
    "oh",
    "whole",
    "bunch",
    "stuff",
    "wow",
    "many",
    "things",
    "sqs",
    "q",
    "sns",
    "uh",
    "network",
    "interface",
    "dynamo",
    "db",
    "table",
    "yeah",
    "probably",
    "want",
    "run",
    "want",
    "watch",
    "go",
    "creating",
    "uh",
    "ec2",
    "volume",
    "going",
    "ebs",
    "uh",
    "log",
    "group",
    "know",
    "separated",
    "seem",
    "necessary",
    "waiting",
    "elastic",
    "ip",
    "always",
    "takes",
    "forever",
    "ever",
    "creating",
    "elastic",
    "ip",
    "root",
    "instance",
    "profile",
    "im",
    "ru",
    "take",
    "long",
    "take",
    "long",
    "time",
    "never",
    "know",
    "create",
    "roll",
    "really",
    "easy",
    "attaching",
    "policy",
    "always",
    "waiting",
    "um",
    "going",
    "stop",
    "back",
    "second",
    "want",
    "make",
    "watch",
    "stare",
    "screen",
    "okay",
    "right",
    "really",
    "really",
    "long",
    "wait",
    "um",
    "always",
    "takes",
    "time",
    "finally",
    "created",
    "sure",
    "made",
    "mean",
    "generally",
    "saw",
    "outputs",
    "usually",
    "cost",
    "worried",
    "whatever",
    "launching",
    "uc2",
    "might",
    "even",
    "launched",
    "servers",
    "going",
    "take",
    "look",
    "see",
    "anything",
    "master",
    "compute",
    "t2",
    "micros",
    "seems",
    "pretty",
    "safe",
    "um",
    "compute",
    "running",
    "yet",
    "assuming",
    "like",
    "machine",
    "machine",
    "computing",
    "maybe",
    "multiple",
    "machines",
    "like",
    "would",
    "cluster",
    "could",
    "manage",
    "multiple",
    "computes",
    "um",
    "particularly",
    "sure",
    "let",
    "keep",
    "going",
    "tutorial",
    "see",
    "next",
    "step",
    "need",
    "get",
    "pem",
    "key",
    "cloud",
    "shell",
    "know",
    "going",
    "going",
    "move",
    "desktop",
    "screen",
    "way",
    "moving",
    "desktop",
    "going",
    "go",
    "upload",
    "file",
    "okay",
    "say",
    "open",
    "say",
    "upload",
    "going",
    "upload",
    "onto",
    "machine",
    "believe",
    "like",
    "uh",
    "think",
    "used",
    "efs",
    "instance",
    "like",
    "wondering",
    "storage",
    "cloud",
    "shell",
    "go",
    "think",
    "efs",
    "h",
    "know",
    "okay",
    "maybe",
    "maybe",
    "somewhere",
    "else",
    "okay",
    "ca",
    "remember",
    "anyway",
    "um",
    "created",
    "cluster",
    "hit",
    "enter",
    "okay",
    "create",
    "tab",
    "like",
    "quit",
    "going",
    "kill",
    "exited",
    "think",
    "fine",
    "think",
    "stopped",
    "running",
    "ls",
    "key",
    "go",
    "back",
    "instructions",
    "many",
    "tabs",
    "open",
    "drag",
    "way",
    "left",
    "try",
    "use",
    "key",
    "log",
    "going",
    "go",
    "say",
    "hpc",
    "pm",
    "see",
    "works",
    "say",
    "yes",
    "permission",
    "denied",
    "required",
    "private",
    "key",
    "accessible",
    "chamod",
    "um",
    "um",
    "never",
    "remember",
    "command",
    "anymore",
    "rarely",
    "ssh",
    "machines",
    "go",
    "connect",
    "go",
    "ssh",
    "client",
    "tell",
    "us",
    "need",
    "run",
    "chamad",
    "400",
    "okay",
    "need",
    "need",
    "chamad",
    "400",
    "wanted",
    "grab",
    "code",
    "okay",
    "hit",
    "ssh",
    "machine",
    "instance",
    "type",
    "exit",
    "want",
    "run",
    "job",
    "machine",
    "go",
    "back",
    "guess",
    "go",
    "create",
    "first",
    "job",
    "vi",
    "going",
    "paste",
    "yep",
    "want",
    "first",
    "line",
    "oh",
    "okay",
    "perfect",
    "great",
    "right",
    "quit",
    "oh",
    "file",
    "name",
    "hold",
    "need",
    "name",
    "file",
    "something",
    "going",
    "say",
    "job",
    "dosh",
    "going",
    "paste",
    "say",
    "paste",
    "know",
    "cut",
    "yeah",
    "okay",
    "great",
    "one",
    "okay",
    "trust",
    "first",
    "line",
    "going",
    "go",
    "back",
    "tutorial",
    "shebang",
    "sl",
    "bin",
    "sl",
    "bash",
    "uh",
    "slash",
    "bin",
    "sl",
    "bash",
    "double",
    "check",
    "looks",
    "good",
    "going",
    "quit",
    "going",
    "make",
    "sure",
    "said",
    "job",
    "sh",
    "looks",
    "correct",
    "good",
    "try",
    "run",
    "job",
    "going",
    "say",
    "q",
    "um",
    "job",
    "sh",
    "ls",
    "guess",
    "really",
    "depends",
    "decided",
    "use",
    "set",
    "thing",
    "ca",
    "remember",
    "choose",
    "q",
    "q",
    "stat",
    "oh",
    "okay",
    "okay",
    "okay",
    "think",
    "thing",
    "like",
    "see",
    "sge",
    "think",
    "use",
    "queue",
    "jobs",
    "install",
    "probably",
    "install",
    "configure",
    "surid",
    "engine",
    "sg",
    "install",
    "um",
    "linux",
    "oh",
    "boy",
    "looks",
    "like",
    "lot",
    "work",
    "think",
    "need",
    "anything",
    "far",
    "understand",
    "idea",
    "choosing",
    "uh",
    "kind",
    "way",
    "manage",
    "sure",
    "cu",
    "q",
    "sub",
    "let",
    "go",
    "look",
    "q",
    "sub",
    "oh",
    "sun",
    "grid",
    "engine",
    "okay",
    "installed",
    "um",
    "going",
    "see",
    "install",
    "going",
    "think",
    "using",
    "yum",
    "clear",
    "clear",
    "yum",
    "install",
    "q",
    "sub",
    "let",
    "see",
    "kud",
    "yum",
    "install",
    "q",
    "sub",
    "package",
    "available",
    "amazon",
    "linux",
    "2",
    "q",
    "sub",
    "probably",
    "running",
    "cloud",
    "shell",
    "q",
    "sub",
    "tell",
    "us",
    "install",
    "great",
    "probably",
    "order",
    "use",
    "would",
    "install",
    "sun",
    "whatever",
    "whatever",
    "go",
    "q",
    "sub",
    "would",
    "queue",
    "um",
    "could",
    "qat",
    "cat",
    "hello",
    "destroy",
    "pretty",
    "much",
    "really",
    "need",
    "know",
    "understand",
    "um",
    "would",
    "nice",
    "queue",
    "job",
    "see",
    "work",
    "know",
    "getting",
    "kind",
    "hairy",
    "territory",
    "think",
    "fundamentally",
    "understand",
    "work",
    "going",
    "going",
    "go",
    "going",
    "remove",
    "job",
    "dosh",
    "want",
    "destroy",
    "cluster",
    "um",
    "going",
    "pcluster",
    "commands",
    "figure",
    "commands",
    "probably",
    "delete",
    "command",
    "go",
    "back",
    "b",
    "cluster",
    "crate",
    "say",
    "delete",
    "okay",
    "going",
    "tear",
    "stuff",
    "go",
    "cloud",
    "formation",
    "okay",
    "looks",
    "like",
    "destroying",
    "yeah",
    "see",
    "uh",
    "back",
    "bit",
    "destroyed",
    "okay",
    "right",
    "short",
    "little",
    "wait",
    "destroyed",
    "long",
    "uh",
    "connection",
    "vanished",
    "make",
    "sure",
    "follow",
    "along",
    "whatever",
    "reason",
    "uh",
    "know",
    "make",
    "sure",
    "stuff",
    "deleted",
    "looks",
    "like",
    "destroy",
    "uh",
    "going",
    "go",
    "ahead",
    "delete",
    "vpc",
    "stuff",
    "worried",
    "know",
    "going",
    "roll",
    "back",
    "problem",
    "going",
    "consider",
    "done",
    "going",
    "make",
    "way",
    "back",
    "management",
    "console",
    "close",
    "stuff",
    "good",
    "go",
    "uh",
    "next",
    "music",
    "thing",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "edge",
    "hybrid",
    "computing",
    "services",
    "edge",
    "computing",
    "push",
    "computing",
    "workloads",
    "outside",
    "network",
    "run",
    "close",
    "destination",
    "location",
    "uh",
    "example",
    "would",
    "pushing",
    "computing",
    "run",
    "phones",
    "iot",
    "devices",
    "external",
    "servers",
    "within",
    "cloud",
    "network",
    "hy",
    "computing",
    "able",
    "run",
    "workloads",
    "premise",
    "data",
    "center",
    "uh",
    "vpc",
    "okay",
    "services",
    "starting",
    "ads",
    "outpost",
    "physical",
    "rack",
    "servers",
    "put",
    "data",
    "center",
    "ads",
    "outpost",
    "allows",
    "use",
    "adus",
    "api",
    "services",
    "uh",
    "ec2",
    "wr",
    "data",
    "center",
    "adus",
    "wavelength",
    "allows",
    "build",
    "launch",
    "applications",
    "telecom",
    "data",
    "center",
    "applications",
    "ultra",
    "low",
    "latency",
    "since",
    "pushed",
    "5g",
    "network",
    "closest",
    "possible",
    "end",
    "user",
    "um",
    "partnered",
    "things",
    "like",
    "verizon",
    "vodaphone",
    "uh",
    "business",
    "others",
    "two",
    "noticeable",
    "ones",
    "okay",
    "vmware",
    "cloud",
    "aws",
    "allows",
    "manage",
    "premise",
    "virtual",
    "machines",
    "using",
    "vmware",
    "uh",
    "within",
    "ec2",
    "instances",
    "data",
    "center",
    "must",
    "uh",
    "using",
    "uh",
    "vmware",
    "virtualization",
    "work",
    "okay",
    "ab",
    "local",
    "zones",
    "edge",
    "uh",
    "data",
    "centers",
    "loc",
    "outside",
    "adus",
    "region",
    "use",
    "adus",
    "closer",
    "edge",
    "destination",
    "need",
    "faster",
    "computing",
    "storage",
    "databases",
    "populated",
    "areas",
    "outside",
    "aws",
    "region",
    "could",
    "edge",
    "offerings",
    "aws",
    "listed",
    "like",
    "sagemaker",
    "called",
    "like",
    "neo",
    "stage",
    "maker",
    "let",
    "edge",
    "computing",
    "um",
    "ml",
    "mean",
    "good",
    "enough",
    "music",
    "okay",
    "right",
    "wanted",
    "show",
    "example",
    "edge",
    "computer",
    "cover",
    "generic",
    "uh",
    "compute",
    "variety",
    "services",
    "allow",
    "edge",
    "computing",
    "like",
    "wavelength",
    "um",
    "never",
    "actually",
    "launched",
    "wavelength",
    "think",
    "uh",
    "request",
    "go",
    "support",
    "never",
    "done",
    "sure",
    "figure",
    "pretty",
    "easily",
    "feel",
    "create",
    "case",
    "um",
    "maybe",
    "like",
    "service",
    "limit",
    "type",
    "wavelength",
    "nop",
    "get",
    "wavelength",
    "wavelength",
    "ab",
    "us",
    "request",
    "looking",
    "okay",
    "use",
    "wavelength",
    "aws",
    "whoops",
    "sometimes",
    "go",
    "docs",
    "opt",
    "wavelength",
    "zones",
    "specify",
    "wavelength",
    "zone",
    "resource",
    "service",
    "must",
    "opt",
    "opt",
    "go",
    "adis",
    "console",
    "okay",
    "go",
    "ec2",
    "going",
    "say",
    "use",
    "region",
    "selector",
    "navigation",
    "bar",
    "select",
    "region",
    "supports",
    "wavelength",
    "know",
    "stuff",
    "uh",
    "us",
    "west",
    "las",
    "vegas",
    "right",
    "las",
    "vegas",
    "los",
    "angeles",
    "right",
    "go",
    "definitely",
    "navigation",
    "pane",
    "ec2",
    "dashboard",
    "account",
    "attributes",
    "select",
    "zones",
    "okay",
    "see",
    "zones",
    "zones",
    "oh",
    "ec2",
    "dashboard",
    "zones",
    "let",
    "go",
    "check",
    "navigation",
    "pane",
    "choose",
    "ec2",
    "dashboard",
    "right",
    "account",
    "attributes",
    "uh",
    "settings",
    "account",
    "attributes",
    "oh",
    "okay",
    "oh",
    "zones",
    "two",
    "zones",
    "see",
    "switch",
    "regions",
    "make",
    "uh",
    "zones",
    "different",
    "region",
    "okay",
    "zone",
    "groups",
    "turn",
    "wavelengths",
    "zone",
    "groups",
    "okay",
    "nothing",
    "going",
    "switch",
    "another",
    "one",
    "maybe",
    "oregon",
    "maybe",
    "uswest",
    "2",
    "oh",
    "look",
    "stuff",
    "never",
    "seen",
    "okay",
    "wavelength",
    "one",
    "los",
    "angeles",
    "one",
    "go",
    "ahead",
    "enable",
    "disabling",
    "zone",
    "group",
    "sure",
    "zone",
    "groups",
    "cost",
    "wavelength",
    "zone",
    "pricing",
    "might",
    "want",
    "watch",
    "might",
    "cost",
    "money",
    "um",
    "might",
    "want",
    "spend",
    "pricing",
    "uh",
    "provides",
    "mobile",
    "networks",
    "wavelengths",
    "available",
    "across",
    "whatever",
    "learn",
    "data",
    "transfers",
    "price",
    "ec2",
    "instances",
    "okay",
    "price",
    "go",
    "right",
    "going",
    "suggest",
    "use",
    "going",
    "going",
    "see",
    "experience",
    "like",
    "okay",
    "going",
    "update",
    "zone",
    "one",
    "say",
    "enable",
    "going",
    "assume",
    "like",
    "data",
    "transfer",
    "costs",
    "okay",
    "uh",
    "going",
    "go",
    "ec2",
    "going",
    "go",
    "instances",
    "going",
    "launch",
    "instance",
    "going",
    "see",
    "available",
    "know",
    "restricted",
    "particular",
    "uh",
    "instances",
    "assume",
    "launch",
    "linux",
    "machine",
    "really",
    "weird",
    "could",
    "know",
    "go",
    "configuration",
    "want",
    "choose",
    "uh",
    "zone",
    "turned",
    "confirmation",
    "confirm",
    "configure",
    "network",
    "create",
    "vpc",
    "create",
    "carrier",
    "gateway",
    "connect",
    "resources",
    "vpc",
    "telecommunication",
    "network",
    "holy",
    "smokes",
    "complicated",
    "kind",
    "interesting",
    "see",
    "like",
    "process",
    "right",
    "know",
    "use",
    "case",
    "uh",
    "carrier",
    "gateway",
    "right",
    "always",
    "check",
    "costs",
    "say",
    "carrier",
    "gateway",
    "pricing",
    "aws",
    "maybe",
    "price",
    "okay",
    "get",
    "pricing",
    "page",
    "usually",
    "hard",
    "say",
    "logically",
    "isolated",
    "virtual",
    "networks",
    "telling",
    "um",
    "use",
    "carrier",
    "need",
    "opt",
    "least",
    "one",
    "one",
    "wavelength",
    "zone",
    "right",
    "sometimes",
    "happens",
    "takes",
    "time",
    "optin",
    "go",
    "go",
    "manage",
    "zone",
    "settings",
    "lot",
    "easier",
    "way",
    "one",
    "opted",
    "right",
    "okay",
    "okay",
    "go",
    "one",
    "work",
    "um",
    "try",
    "guess",
    "regions",
    "denver",
    "things",
    "like",
    "opt",
    "opt",
    "one",
    "opt",
    "super",
    "exciting",
    "like",
    "going",
    "launch",
    "ec2",
    "instance",
    "know",
    "go",
    "process",
    "bit",
    "know",
    "ca",
    "create",
    "one",
    "go",
    "back",
    "instructions",
    "crate",
    "connect",
    "create",
    "route",
    "table",
    "using",
    "vpc",
    "route",
    "table",
    "think",
    "far",
    "going",
    "get",
    "seeing",
    "options",
    "idea",
    "would",
    "create",
    "carrier",
    "gateway",
    "update",
    "route",
    "tables",
    "would",
    "launching",
    "ec2",
    "instance",
    "know",
    "different",
    "launching",
    "choose",
    "different",
    "subnet",
    "think",
    "create",
    "subnet",
    "zone",
    "launch",
    "would",
    "edge",
    "computing",
    "another",
    "example",
    "edge",
    "computing",
    "would",
    "something",
    "like",
    "via",
    "cloudfront",
    "uh",
    "um",
    "edge",
    "functions",
    "edge",
    "functions",
    "yeah",
    "functions",
    "functions",
    "deploy",
    "cloudfront",
    "cloudfront",
    "function",
    "would",
    "deployed",
    "um",
    "edge",
    "locations",
    "right",
    "use",
    "javascript",
    "example",
    "one",
    "um",
    "fine",
    "development",
    "live",
    "function",
    "published",
    "go",
    "test",
    "test",
    "function",
    "good",
    "publish",
    "publish",
    "function",
    "advantage",
    "know",
    "functions",
    "lambda",
    "chance",
    "cold",
    "start",
    "um",
    "whereas",
    "deployed",
    "edge",
    "still",
    "probably",
    "cold",
    "start",
    "going",
    "lot",
    "faster",
    "lot",
    "closer",
    "edge",
    "location",
    "um",
    "know",
    "different",
    "uh",
    "different",
    "cases",
    "yeah",
    "one",
    "launching",
    "ec2",
    "workload",
    "wavelength",
    "could",
    "complete",
    "totally",
    "fine",
    "functions",
    "edge",
    "uh",
    "edge",
    "computing",
    "ser",
    "like",
    "within",
    "sage",
    "maker",
    "deploy",
    "think",
    "called",
    "like",
    "neo",
    "sagemaker",
    "iot",
    "devices",
    "obviously",
    "edge",
    "deploy",
    "well",
    "uh",
    "generally",
    "gives",
    "idea",
    "edge",
    "computing",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "cost",
    "capacity",
    "management",
    "computing",
    "services",
    "talk",
    "let",
    "define",
    "cost",
    "management",
    "save",
    "money",
    "capacity",
    "management",
    "meet",
    "demand",
    "traffic",
    "use",
    "usages",
    "adding",
    "upgrading",
    "servers",
    "let",
    "get",
    "first",
    "different",
    "types",
    "ec",
    "pricing",
    "models",
    "got",
    "spot",
    "instances",
    "reserved",
    "instances",
    "saving",
    "plans",
    "ways",
    "save",
    "computing",
    "paying",
    "full",
    "partially",
    "committing",
    "yearly",
    "contract",
    "contract",
    "uh",
    "flexible",
    "availability",
    "interruption",
    "computing",
    "services",
    "adus",
    "batch",
    "plans",
    "schedules",
    "executes",
    "batch",
    "computer",
    "workloads",
    "across",
    "full",
    "range",
    "adist",
    "computing",
    "services",
    "utilize",
    "spot",
    "instances",
    "save",
    "money",
    "aist",
    "compute",
    "optimizer",
    "suggest",
    "reduce",
    "cost",
    "improve",
    "performance",
    "using",
    "machine",
    "learning",
    "analyze",
    "uh",
    "uh",
    "previous",
    "usage",
    "history",
    "ec2",
    "auto",
    "scan",
    "groups",
    "asgs",
    "automatically",
    "add",
    "remove",
    "ec2",
    "servers",
    "meet",
    "current",
    "demand",
    "traffic",
    "save",
    "money",
    "meet",
    "capacity",
    "since",
    "run",
    "amount",
    "servers",
    "need",
    "elb",
    "elastic",
    "load",
    "balcer",
    "distributes",
    "traffic",
    "multiple",
    "instances",
    "reroute",
    "traffic",
    "unhealthy",
    "instances",
    "healthy",
    "instances",
    "route",
    "traffic",
    "ec2",
    "instances",
    "running",
    "different",
    "availability",
    "zones",
    "elastic",
    "beant",
    "stock",
    "easy",
    "deploying",
    "web",
    "applications",
    "without",
    "developers",
    "worry",
    "setting",
    "understanding",
    "underlying",
    "ad",
    "services",
    "similar",
    "heroku",
    "platform",
    "service",
    "cost",
    "capacity",
    "management",
    "like",
    "elb",
    "um",
    "yeah",
    "yeah",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "types",
    "storage",
    "services",
    "matter",
    "cloud",
    "service",
    "provider",
    "using",
    "usually",
    "broken",
    "three",
    "blocks",
    "file",
    "um",
    "uh",
    "object",
    "okay",
    "let",
    "take",
    "look",
    "first",
    "going",
    "block",
    "storage",
    "aws",
    "called",
    "elastic",
    "block",
    "store",
    "data",
    "split",
    "evenly",
    "split",
    "blocks",
    "directly",
    "accessed",
    "operating",
    "system",
    "supports",
    "single",
    "right",
    "volume",
    "imagine",
    "application",
    "application",
    "using",
    "virtual",
    "machine",
    "specific",
    "operating",
    "system",
    "drive",
    "mounted",
    "uh",
    "could",
    "using",
    "fc",
    "uh",
    "scuzzy",
    "um",
    "idea",
    "need",
    "virtual",
    "drive",
    "attached",
    "vm",
    "going",
    "using",
    "block",
    "okay",
    "next",
    "one",
    "um",
    "file",
    "basically",
    "file",
    "system",
    "aus",
    "elastic",
    "file",
    "storage",
    "file",
    "stored",
    "data",
    "metadata",
    "multiple",
    "connections",
    "via",
    "network",
    "share",
    "supports",
    "multiple",
    "reads",
    "writes",
    "locks",
    "file",
    "uh",
    "could",
    "application",
    "necessarily",
    "application",
    "using",
    "nasa",
    "exports",
    "means",
    "uh",
    "communicate",
    "protocols",
    "nfs",
    "smb",
    "common",
    "uh",
    "file",
    "system",
    "protocols",
    "idea",
    "need",
    "file",
    "share",
    "multiple",
    "users",
    "vms",
    "need",
    "access",
    "drive",
    "pretty",
    "common",
    "might",
    "multiple",
    "virtual",
    "machines",
    "want",
    "act",
    "like",
    "one",
    "uh",
    "drive",
    "uh",
    "one",
    "example",
    "could",
    "like",
    "let",
    "say",
    "running",
    "minecraft",
    "server",
    "allowed",
    "one",
    "world",
    "particular",
    "single",
    "drive",
    "want",
    "able",
    "multiple",
    "virtual",
    "machines",
    "maximize",
    "compute",
    "case",
    "um",
    "go",
    "last",
    "one",
    "like",
    "object",
    "storage",
    "fors",
    "called",
    "amazon",
    "simple",
    "storage",
    "service",
    "also",
    "known",
    "s3",
    "object",
    "stored",
    "data",
    "metadata",
    "unique",
    "id",
    "scales",
    "limmited",
    "uh",
    "uh",
    "limited",
    "file",
    "limit",
    "storage",
    "limit",
    "really",
    "little",
    "limit",
    "basically",
    "scales",
    "supports",
    "multiple",
    "reads",
    "wrs",
    "locks",
    "protocol",
    "going",
    "using",
    "htps",
    "api",
    "want",
    "upload",
    "files",
    "worry",
    "underlying",
    "infrastructure",
    "intended",
    "high",
    "uh",
    "op",
    "input",
    "outputs",
    "per",
    "seconds",
    "okay",
    "depending",
    "fast",
    "read",
    "wrs",
    "going",
    "determine",
    "uh",
    "know",
    "whether",
    "going",
    "uh",
    "direction",
    "way",
    "um",
    "know",
    "many",
    "need",
    "actually",
    "connect",
    "time",
    "whether",
    "connected",
    "mount",
    "drive",
    "virtual",
    "machine",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "going",
    "short",
    "introduction",
    "s3",
    "certified",
    "cloud",
    "practitioner",
    "ask",
    "little",
    "bit",
    "used",
    "need",
    "bit",
    "familiar",
    "s3",
    "um",
    "least",
    "think",
    "abus",
    "considers",
    "flagship",
    "uh",
    "storage",
    "service",
    "really",
    "one",
    "earliest",
    "services",
    "second",
    "one",
    "ever",
    "launched",
    "okay",
    "object",
    "storage",
    "object",
    "based",
    "storage",
    "data",
    "storage",
    "architecture",
    "manages",
    "data",
    "objects",
    "opposed",
    "storage",
    "architectures",
    "file",
    "systems",
    "uh",
    "others",
    "right",
    "manages",
    "data",
    "files",
    "hierarchy",
    "block",
    "storage",
    "manages",
    "data",
    "blocks",
    "ins",
    "sectors",
    "tracks",
    "get",
    "stored",
    "actual",
    "uh",
    "drive",
    "uh",
    "idea",
    "s3",
    "provides",
    "basically",
    "unlimited",
    "storage",
    "need",
    "think",
    "underlying",
    "infrastructure",
    "s3",
    "console",
    "provides",
    "interface",
    "upload",
    "access",
    "data",
    "okay",
    "concept",
    "s3",
    "object",
    "objects",
    "contain",
    "data",
    "like",
    "files",
    "objects",
    "may",
    "consist",
    "key",
    "name",
    "object",
    "value",
    "data",
    "made",
    "sequence",
    "bytes",
    "version",
    "id",
    "versioning",
    "enabled",
    "version",
    "object",
    "metadata",
    "additional",
    "information",
    "attached",
    "object",
    "s3",
    "buckets",
    "buckets",
    "hold",
    "objects",
    "buckets",
    "also",
    "folders",
    "turn",
    "hold",
    "objects",
    "s3",
    "universal",
    "name",
    "space",
    "bucket",
    "names",
    "must",
    "unique",
    "like",
    "domain",
    "name",
    "okay",
    "one",
    "interesting",
    "thing",
    "individual",
    "object",
    "z",
    "bytes",
    "5",
    "terabytes",
    "unlimited",
    "storage",
    "ca",
    "uh",
    "files",
    "uh",
    "incredible",
    "size",
    "uh",
    "mean",
    "5",
    "terabytes",
    "lot",
    "nothing",
    "beyond",
    "single",
    "file",
    "understand",
    "actually",
    "zerob",
    "byte",
    "file",
    "uh",
    "like",
    "associate",
    "certifications",
    "actual",
    "question",
    "music",
    "right",
    "let",
    "take",
    "look",
    "s3",
    "storage",
    "classes",
    "um",
    "certified",
    "cloud",
    "practitioner",
    "need",
    "know",
    "generally",
    "associate",
    "levels",
    "need",
    "detail",
    "let",
    "get",
    "adus",
    "offers",
    "range",
    "s3",
    "storage",
    "classes",
    "trade",
    "retrieval",
    "time",
    "accessibility",
    "durability",
    "cheaper",
    "storage",
    "farther",
    "go",
    "cost",
    "effective",
    "uh",
    "get",
    "uh",
    "pending",
    "uh",
    "know",
    "certain",
    "conditions",
    "okay",
    "put",
    "something",
    "s3",
    "going",
    "go",
    "standard",
    "uh",
    "tier",
    "default",
    "tier",
    "uh",
    "incredibly",
    "fast",
    "availability",
    "119",
    "durability",
    "replicated",
    "across",
    "3",
    "azs",
    "uh",
    "know",
    "cheaper",
    "meter",
    "left",
    "hand",
    "side",
    "would",
    "apply",
    "expensive",
    "actually",
    "expensive",
    "expensive",
    "scale",
    "uh",
    "better",
    "optimize",
    "tiers",
    "understand",
    "um",
    "s3",
    "intellig",
    "tiering",
    "uses",
    "ml",
    "analyze",
    "objects",
    "usage",
    "determine",
    "appropriate",
    "storage",
    "class",
    "dat",
    "moveed",
    "cost",
    "effective",
    "access",
    "tier",
    "without",
    "performance",
    "impact",
    "added",
    "overhead",
    "s3",
    "standard",
    "iia",
    "stands",
    "infrequent",
    "access",
    "fast",
    "s3",
    "standard",
    "cheaper",
    "access",
    "files",
    "less",
    "month",
    "going",
    "additional",
    "retrieval",
    "fee",
    "applied",
    "try",
    "retrieve",
    "data",
    "frequently",
    "s3",
    "standard",
    "going",
    "actually",
    "end",
    "costing",
    "want",
    "okay",
    "s3",
    "one",
    "zone",
    "iia",
    "says",
    "running",
    "single",
    "zone",
    "fast",
    "s3",
    "standard",
    "going",
    "lowered",
    "availability",
    "going",
    "save",
    "money",
    "okay",
    "one",
    "caveat",
    "though",
    "data",
    "could",
    "get",
    "destroyed",
    "remaining",
    "single",
    "uh",
    "data",
    "centers",
    "um",
    "suffer",
    "catastrophe",
    "going",
    "duplicate",
    "data",
    "retrieve",
    "okay",
    "um",
    "s3",
    "glacier",
    "clothed",
    "storage",
    "retrieval",
    "data",
    "take",
    "minutes",
    "hour",
    "cheap",
    "s3",
    "glacier",
    "uh",
    "deep",
    "archive",
    "lowest",
    "cost",
    "storage",
    "class",
    "data",
    "retrieval",
    "12",
    "hours",
    "know",
    "um",
    "going",
    "uh",
    "s3",
    "console",
    "amazon",
    "s3",
    "console",
    "s3",
    "glacier",
    "basically",
    "like",
    "service",
    "part",
    "s3",
    "kind",
    "lives",
    "weird",
    "state",
    "one",
    "list",
    "s3",
    "outputs",
    "storage",
    "class",
    "exactly",
    "fit",
    "well",
    "um",
    "kind",
    "linear",
    "cheaper",
    "uh",
    "thing",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "ous",
    "snow",
    "family",
    "storage",
    "compute",
    "devices",
    "used",
    "physically",
    "move",
    "data",
    "cloud",
    "moving",
    "data",
    "internet",
    "prov",
    "private",
    "connection",
    "slow",
    "difficult",
    "costly",
    "snow",
    "cone",
    "snowball",
    "edge",
    "snow",
    "mobile",
    "originally",
    "snowball",
    "came",
    "snowball",
    "edge",
    "uh",
    "edge",
    "introduced",
    "edge",
    "computing",
    "edge",
    "name",
    "pretty",
    "much",
    "devices",
    "edge",
    "computing",
    "uh",
    "individually",
    "come",
    "variant",
    "snowball",
    "snow",
    "cone",
    "comes",
    "two",
    "sizes",
    "8",
    "terabyt",
    "usable",
    "storage",
    "one",
    "14",
    "terabytes",
    "usable",
    "storage",
    "snowball",
    "edge",
    "technically",
    "like",
    "four",
    "versions",
    "going",
    "break",
    "two",
    "storage",
    "optimized",
    "80",
    "terab",
    "um",
    "uh",
    "usable",
    "storage",
    "compute",
    "optimize",
    "terab",
    "even",
    "though",
    "get",
    "lot",
    "vcpus",
    "increased",
    "memory",
    "could",
    "important",
    "need",
    "edge",
    "computing",
    "send",
    "aws",
    "last",
    "snowmobile",
    "store",
    "100",
    "pedabytes",
    "storage",
    "um",
    "uh",
    "associates",
    "cover",
    "lot",
    "detail",
    "much",
    "like",
    "security",
    "tamper",
    "proof",
    "like",
    "networking",
    "buil",
    "connection",
    "know",
    "exam",
    "much",
    "information",
    "um",
    "need",
    "know",
    "three",
    "uh",
    "three",
    "ones",
    "family",
    "generally",
    "sizes",
    "going",
    "placed",
    "amazon",
    "s3",
    "interesting",
    "know",
    "snowmobile",
    "100",
    "pedabytes",
    "adabs",
    "markets",
    "move",
    "exabytes",
    "um",
    "content",
    "order",
    "one",
    "devices",
    "market",
    "saying",
    "like",
    "snowball",
    "edg",
    "want",
    "move",
    "pedabytes",
    "data",
    "snowball",
    "mobile",
    "want",
    "move",
    "exabytes",
    "see",
    "single",
    "thing",
    "exabyte",
    "petabyte",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "itaba",
    "storage",
    "services",
    "brief",
    "let",
    "get",
    "first",
    "simple",
    "storage",
    "service",
    "s3",
    "seress",
    "object",
    "storage",
    "service",
    "upload",
    "large",
    "files",
    "unlimited",
    "amount",
    "files",
    "pay",
    "store",
    "worry",
    "unine",
    "file",
    "system",
    "upgrading",
    "dis",
    "size",
    "s3",
    "glacier",
    "cold",
    "storage",
    "service",
    "designed",
    "lowcost",
    "storage",
    "solution",
    "archiving",
    "backup",
    "uses",
    "previous",
    "generation",
    "uh",
    "hdd",
    "drives",
    "get",
    "low",
    "cost",
    "highly",
    "secure",
    "durable",
    "elastic",
    "block",
    "store",
    "ebs",
    "persistent",
    "block",
    "storage",
    "service",
    "virtual",
    "hard",
    "drive",
    "cloud",
    "attach",
    "ec2",
    "instances",
    "choose",
    "different",
    "kinds",
    "hard",
    "drives",
    "ssd",
    "iops",
    "ssd",
    "throughput",
    "hdd",
    "um",
    "cold",
    "hhd",
    "okay",
    "elastic",
    "file",
    "storage",
    "efs",
    "cloud",
    "native",
    "nfs",
    "file",
    "system",
    "service",
    "file",
    "storage",
    "uh",
    "mount",
    "multiple",
    "ec2",
    "instances",
    "time",
    "need",
    "share",
    "files",
    "multiple",
    "servers",
    "storage",
    "gateway",
    "hybrid",
    "cloud",
    "storage",
    "service",
    "extends",
    "premise",
    "storage",
    "cloud",
    "got",
    "three",
    "offerings",
    "file",
    "gateway",
    "extend",
    "local",
    "storage",
    "amazon",
    "s3",
    "volume",
    "gateway",
    "caches",
    "local",
    "drive",
    "s3",
    "continuous",
    "backup",
    "local",
    "files",
    "cloud",
    "tape",
    "gateway",
    "stores",
    "files",
    "onto",
    "virtual",
    "tapes",
    "backing",
    "files",
    "costeffective",
    "storage",
    "got",
    "one",
    "page",
    "cuz",
    "lot",
    "services",
    "adab",
    "us",
    "snow",
    "family",
    "storage",
    "devices",
    "used",
    "physically",
    "migrate",
    "large",
    "amounts",
    "data",
    "cloud",
    "snowball",
    "snowball",
    "edge",
    "briefcase",
    "size",
    "data",
    "storage",
    "devices",
    "50",
    "80",
    "terabytes",
    "believe",
    "snowball",
    "available",
    "anymore",
    "snowball",
    "edge",
    "uh",
    "good",
    "see",
    "going",
    "snowmobile",
    "cargo",
    "container",
    "filled",
    "racks",
    "storage",
    "compute",
    "transported",
    "semi",
    "trailer",
    "tractor",
    "truck",
    "transfer",
    "100",
    "pedabytes",
    "data",
    "per",
    "trailer",
    "think",
    "going",
    "ordering",
    "anytime",
    "soon",
    "cuz",
    "pretty",
    "darn",
    "expensive",
    "cool",
    "snow",
    "cone",
    "small",
    "version",
    "snowball",
    "transfer",
    "8",
    "terabytes",
    "data",
    "adab",
    "us",
    "backup",
    "fully",
    "managed",
    "backup",
    "service",
    "makes",
    "easy",
    "centralize",
    "automate",
    "backup",
    "data",
    "across",
    "multiple",
    "services",
    "ec2",
    "ebs",
    "rds",
    "tb",
    "efs",
    "storage",
    "gateway",
    "create",
    "backup",
    "plans",
    "cloud",
    "endure",
    "disaster",
    "recovery",
    "continuously",
    "replicates",
    "machine",
    "lowcost",
    "staging",
    "area",
    "target",
    "abl",
    "account",
    "preferred",
    "region",
    "enabling",
    "fast",
    "reliable",
    "recovery",
    "case",
    "data",
    "center",
    "failures",
    "amazon",
    "fsx",
    "feature",
    "rich",
    "highly",
    "performant",
    "file",
    "system",
    "used",
    "uh",
    "windows",
    "would",
    "using",
    "smb",
    "linux",
    "uses",
    "luster",
    "amazon",
    "fs",
    "fsx",
    "windows",
    "file",
    "server",
    "use",
    "smb",
    "protocol",
    "allow",
    "mount",
    "fsx",
    "windows",
    "servers",
    "luster",
    "one",
    "uses",
    "uh",
    "linux",
    "luster",
    "file",
    "system",
    "allows",
    "mount",
    "f",
    "fsx",
    "linux",
    "servers",
    "storage",
    "services",
    "missing",
    "really",
    "mean",
    "could",
    "count",
    "elastic",
    "container",
    "repository",
    "one",
    "um",
    "kind",
    "something",
    "else",
    "could",
    "also",
    "count",
    "maybe",
    "um",
    "uh",
    "code",
    "commit",
    "know",
    "kind",
    "put",
    "separate",
    "category",
    "developer",
    "tools",
    "containers",
    "music",
    "okay",
    "right",
    "want",
    "show",
    "around",
    "s3",
    "make",
    "way",
    "type",
    "s3",
    "let",
    "load",
    "going",
    "create",
    "new",
    "bucket",
    "see",
    "screen",
    "click",
    "side",
    "go",
    "buckets",
    "create",
    "new",
    "bucket",
    "bucket",
    "names",
    "unique",
    "let",
    "say",
    "bucket",
    "pound",
    "bunch",
    "numbers",
    "sure",
    "getting",
    "used",
    "making",
    "buckets",
    "um",
    "course",
    "far",
    "um",
    "scroll",
    "notice",
    "says",
    "block",
    "public",
    "access",
    "settings",
    "bucket",
    "turned",
    "uh",
    "like",
    "blocking",
    "turned",
    "default",
    "s3",
    "buckets",
    "number",
    "one",
    "thing",
    "point",
    "entry",
    "malicious",
    "actors",
    "people",
    "leave",
    "buckets",
    "open",
    "want",
    "uh",
    "grant",
    "access",
    "bucket",
    "people",
    "see",
    "publically",
    "turn",
    "okay",
    "going",
    "leave",
    "version",
    "things",
    "buckets",
    "pretty",
    "cool",
    "turn",
    "encryption",
    "turn",
    "default",
    "use",
    "amazon",
    "s3",
    "key",
    "certified",
    "cloud",
    "partitioner",
    "going",
    "ask",
    "client",
    "side",
    "encryption",
    "server",
    "side",
    "encryption",
    "definitely",
    "want",
    "know",
    "going",
    "turn",
    "time",
    "kind",
    "explore",
    "uh",
    "oursel",
    "um",
    "object",
    "lock",
    "lock",
    "files",
    "um",
    "know",
    "know",
    "people",
    "writing",
    "multiple",
    "times",
    "go",
    "ahead",
    "create",
    "bucket",
    "quick",
    "new",
    "bucket",
    "made",
    "notice",
    "nothing",
    "totally",
    "fine",
    "go",
    "properties",
    "um",
    "know",
    "see",
    "uh",
    "turn",
    "buck",
    "conversing",
    "turn",
    "encryption",
    "going",
    "going",
    "go",
    "grab",
    "files",
    "remember",
    "saved",
    "uh",
    "files",
    "recently",
    "going",
    "make",
    "new",
    "folder",
    "called",
    "star",
    "trek",
    "graphics",
    "pull",
    "anything",
    "internet",
    "want",
    "u",
    "going",
    "prepare",
    "folder",
    "take",
    "moment",
    "okay",
    "moment",
    "okay",
    "great",
    "folder",
    "prepared",
    "want",
    "upload",
    "first",
    "file",
    "go",
    "upload",
    "actually",
    "upload",
    "multiple",
    "files",
    "even",
    "add",
    "folder",
    "nice",
    "want",
    "upload",
    "files",
    "whoops",
    "select",
    "multiples",
    "hit",
    "open",
    "cue",
    "really",
    "nice",
    "see",
    "destination",
    "details",
    "want",
    "turn",
    "versioning",
    "could",
    "uh",
    "could",
    "apply",
    "permissions",
    "outside",
    "access",
    "uh",
    "things",
    "turned",
    "really",
    "important",
    "properties",
    "different",
    "tiers",
    "based",
    "tier",
    "use",
    "lower",
    "go",
    "least",
    "cheaper",
    "going",
    "get",
    "uh",
    "going",
    "tradeoffs",
    "cover",
    "course",
    "server",
    "side",
    "encryption",
    "um",
    "going",
    "hit",
    "upload",
    "individually",
    "turn",
    "going",
    "see",
    "progress",
    "go",
    "across",
    "top",
    "uploaded",
    "going",
    "cck",
    "click",
    "destination",
    "bucket",
    "uh",
    "open",
    "images",
    "show",
    "us",
    "right",
    "browser",
    "download",
    "need",
    "get",
    "right",
    "create",
    "folder",
    "say",
    "star",
    "trek",
    "enterprise",
    "enterprise",
    "okay",
    "really",
    "easy",
    "like",
    "drag",
    "um",
    "might",
    "able",
    "move",
    "option",
    "actually",
    "copy",
    "destination",
    "delete",
    "old",
    "one",
    "like",
    "using",
    "file",
    "system",
    "know",
    "um",
    "lot",
    "work",
    "involved",
    "know",
    "great",
    "storage",
    "solution",
    "um",
    "let",
    "look",
    "concpt",
    "selected",
    "click",
    "go",
    "permissions",
    "go",
    "versions",
    "see",
    "looking",
    "h",
    "encryption",
    "go",
    "turn",
    "enable",
    "encryption",
    "choose",
    "whether",
    "want",
    "use",
    "amazon",
    "s3",
    "key",
    "ss",
    "s3",
    "encryption",
    "key",
    "amazon",
    "s3",
    "creates",
    "manages",
    "uses",
    "ibus",
    "ss",
    "kms",
    "believe",
    "uses",
    "aes",
    "totally",
    "fine",
    "kms",
    "interesting",
    "like",
    "ads",
    "manage",
    "key",
    "one",
    "ads",
    "manage",
    "key",
    "slightly",
    "different",
    "one",
    "course",
    "lot",
    "simpler",
    "many",
    "reasons",
    "turn",
    "encryption",
    "u",
    "going",
    "go",
    "turn",
    "one",
    "encrypted",
    "encrypted",
    "mean",
    "ca",
    "access",
    "file",
    "still",
    "download",
    "still",
    "view",
    "databus",
    "going",
    "decrypt",
    "right",
    "go",
    "click",
    "one",
    "say",
    "open",
    "okay",
    "even",
    "though",
    "encrypted",
    "still",
    "view",
    "right",
    "means",
    "encrypted",
    "storage",
    "right",
    "somebody",
    "steal",
    "hard",
    "drive",
    "whatever",
    "hard",
    "drive",
    "sitting",
    "ads",
    "figure",
    "encrypted",
    "going",
    "able",
    "open",
    "file",
    "right",
    "logic",
    "um",
    "get",
    "something",
    "really",
    "interesting",
    "um",
    "um",
    "s3",
    "ability",
    "um",
    "uh",
    "life",
    "cycle",
    "events",
    "kind",
    "looking",
    "usually",
    "bucket",
    "go",
    "management",
    "set",
    "life",
    "cycle",
    "rule",
    "say",
    "like",
    "move",
    "deep",
    "storage",
    "okay",
    "say",
    "want",
    "filter",
    "maybe",
    "like",
    "data",
    "jpg",
    "say",
    "apply",
    "objects",
    "bucket",
    "acknowledge",
    "say",
    "move",
    "current",
    "versions",
    "objects",
    "storage",
    "classes",
    "checkbox",
    "say",
    "move",
    "glacier",
    "30",
    "days",
    "think",
    "go",
    "lower",
    "complain",
    "uh",
    "probably",
    "save",
    "idea",
    "move",
    "things",
    "distort",
    "maybe",
    "files",
    "coming",
    "showing",
    "right",
    "file",
    "uploaded",
    "30",
    "days",
    "move",
    "glacier",
    "save",
    "money",
    "okay",
    "big",
    "advantage",
    "s3",
    "lot",
    "things",
    "going",
    "s3",
    "like",
    "turn",
    "um",
    "uh",
    "wherever",
    "turn",
    "web",
    "hosting",
    "turn",
    "like",
    "website",
    "whole",
    "whole",
    "bunch",
    "things",
    "okay",
    "uh",
    "going",
    "get",
    "much",
    "work",
    "uh",
    "know",
    "learned",
    "basics",
    "s3",
    "want",
    "delete",
    "empty",
    "first",
    "watch",
    "like",
    "delete",
    "need",
    "empty",
    "bucket",
    "first",
    "go",
    "ahead",
    "empty",
    "say",
    "bucket",
    "empty",
    "sorry",
    "guess",
    "type",
    "permanently",
    "delete",
    "music",
    "perman",
    "delete",
    "used",
    "oh",
    "yeah",
    "copy",
    "okay",
    "great",
    "bucket",
    "emptied",
    "go",
    "back",
    "bucket",
    "go",
    "back",
    "one",
    "layer",
    "go",
    "ahead",
    "delete",
    "bucket",
    "many",
    "buckets",
    "think",
    "like",
    "100",
    "like",
    "100",
    "buckets",
    "many",
    "buckets",
    "ws",
    "100",
    "buckets",
    "yeah",
    "right",
    "think",
    "wanted",
    "know",
    "many",
    "pro",
    "probably",
    "like",
    "service",
    "limits",
    "page",
    "service",
    "limits",
    "service",
    "quotas",
    "go",
    "say",
    "services",
    "s3",
    "many",
    "buckets",
    "100",
    "right",
    "okay",
    "know",
    "gives",
    "kind",
    "idea",
    "going",
    "go",
    "s3",
    "right",
    "let",
    "go",
    "take",
    "look",
    "elastic",
    "block",
    "store",
    "uh",
    "virtual",
    "hard",
    "drives",
    "ec2",
    "going",
    "make",
    "way",
    "ec2",
    "console",
    "left",
    "hand",
    "side",
    "scroll",
    "see",
    "elastic",
    "block",
    "volumes",
    "elastic",
    "block",
    "store",
    "volumes",
    "go",
    "idea",
    "go",
    "ahead",
    "create",
    "volume",
    "notice",
    "different",
    "options",
    "general",
    "purpose",
    "provisioned",
    "iops",
    "cold",
    "hdd",
    "throughput",
    "optimized",
    "magnetic",
    "magnetic",
    "um",
    "basically",
    "like",
    "uh",
    "physical",
    "tape",
    "use",
    "back",
    "like",
    "old",
    "school",
    "stuff",
    "options",
    "choose",
    "size",
    "change",
    "options",
    "going",
    "notice",
    "things",
    "going",
    "change",
    "like",
    "uh",
    "throughput",
    "iops",
    "notice",
    "general",
    "purpose",
    "fixed",
    "300",
    "notice",
    "goes",
    "1",
    "gigabyte",
    "many",
    "ever",
    "lot",
    "complicated",
    "practicality",
    "really",
    "create",
    "volumes",
    "way",
    "go",
    "launch",
    "ec2",
    "instance",
    "say",
    "launch",
    "ec2",
    "instance",
    "choose",
    "amazon",
    "lytic",
    "2",
    "know",
    "done",
    "uc2",
    "uh",
    "follow",
    "along",
    "cover",
    "stuff",
    "detail",
    "worry",
    "um",
    "go",
    "configure",
    "instance",
    "go",
    "add",
    "storage",
    "going",
    "adding",
    "ebs",
    "volumes",
    "um",
    "ec2",
    "instances",
    "notice",
    "always",
    "root",
    "volume",
    "attached",
    "ec2",
    "instance",
    "remove",
    "change",
    "size",
    "believe",
    "oh",
    "shows",
    "us",
    "right",
    "30",
    "gigabytes",
    "sometimes",
    "might",
    "want",
    "max",
    "take",
    "advantage",
    "free",
    "tier",
    "notice",
    "also",
    "change",
    "uh",
    "might",
    "limitations",
    "terms",
    "root",
    "volume",
    "notice",
    "options",
    "cold",
    "hdd",
    "hdd",
    "root",
    "volume",
    "uh",
    "notice",
    "delete",
    "termination",
    "ebs",
    "volume",
    "persists",
    "independently",
    "running",
    "life",
    "choose",
    "automatically",
    "delete",
    "uh",
    "ebs",
    "volume",
    "associated",
    "instance",
    "terminated",
    "take",
    "ec2",
    "instance",
    "deleted",
    "volume",
    "still",
    "remain",
    "could",
    "something",
    "important",
    "uh",
    "encryption",
    "um",
    "might",
    "want",
    "turn",
    "generally",
    "adus",
    "always",
    "kms",
    "manage",
    "key",
    "free",
    "checkbox",
    "encrypted",
    "uh",
    "turn",
    "later",
    "um",
    "never",
    "turn",
    "encryption",
    "always",
    "uh",
    "turn",
    "encryption",
    "aware",
    "turn",
    "also",
    "add",
    "file",
    "systems",
    "maybe",
    "talk",
    "later",
    "think",
    "gets",
    "um",
    "e",
    "efs",
    "okay",
    "different",
    "type",
    "file",
    "storage",
    "pretty",
    "much",
    "uh",
    "go",
    "ahead",
    "create",
    "uh",
    "volume",
    "would",
    "show",
    "ebs",
    "could",
    "take",
    "snapshots",
    "back",
    "goes",
    "s3",
    "really",
    "need",
    "know",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "elastic",
    "file",
    "uh",
    "system",
    "efs",
    "uh",
    "storage",
    "manage",
    "file",
    "storage",
    "efs",
    "stand",
    "efs",
    "system",
    "elastic",
    "file",
    "system",
    "okay",
    "sorry",
    "go",
    "ahead",
    "create",
    "file",
    "system",
    "going",
    "say",
    "efs",
    "great",
    "thing",
    "basically",
    "serverless",
    "going",
    "white",
    "consume",
    "right",
    "store",
    "consume",
    "um",
    "think",
    "going",
    "based",
    "choose",
    "vpc",
    "want",
    "launch",
    "default",
    "vpc",
    "choice",
    "regional",
    "one",
    "zone",
    "um",
    "guess",
    "going",
    "based",
    "gets",
    "backed",
    "s3",
    "possibly",
    "onezone",
    "probably",
    "cost",
    "effective",
    "going",
    "choose",
    "regional",
    "new",
    "option",
    "never",
    "noticed",
    "opened",
    "see",
    "things",
    "general",
    "max",
    "io",
    "bursting",
    "provision",
    "things",
    "like",
    "hit",
    "next",
    "choose",
    "azs",
    "uh",
    "might",
    "set",
    "policy",
    "going",
    "hit",
    "next",
    "go",
    "ahead",
    "hit",
    "create",
    "know",
    "really",
    "interesting",
    "trick",
    "really",
    "mounting",
    "dc2",
    "instance",
    "kind",
    "pain",
    "okay",
    "go",
    "um",
    "mount",
    "commands",
    "like",
    "efs",
    "mounting",
    "linux",
    "commands",
    "okay",
    "done",
    "solutions",
    "architect",
    "associate",
    "uh",
    "know",
    "regular",
    "basis",
    "remember",
    "go",
    "trying",
    "see",
    "see",
    "code",
    "tells",
    "us",
    "mount",
    "mounting",
    "e2",
    "uh",
    "uh",
    "ec2",
    "linux",
    "instance",
    "efs",
    "mount",
    "helper",
    "um",
    "know",
    "sounds",
    "interesting",
    "pseudo",
    "mount",
    "hyphen",
    "file",
    "system",
    "efs",
    "mounting",
    "point",
    "yeah",
    "looks",
    "lot",
    "easier",
    "okay",
    "enter",
    "bunch",
    "weird",
    "commands",
    "looks",
    "like",
    "boiled",
    "single",
    "command",
    "efs",
    "instance",
    "um",
    "going",
    "assume",
    "entry",
    "point",
    "clicking",
    "around",
    "seeing",
    "see",
    "would",
    "imagine",
    "create",
    "access",
    "point",
    "access",
    "point",
    "sure",
    "know",
    "going",
    "let",
    "would",
    "imagine",
    "probably",
    "use",
    "access",
    "point",
    "let",
    "go",
    "back",
    "ifs",
    "mount",
    "point",
    "think",
    "thing",
    "think",
    "mount",
    "point",
    "access",
    "point",
    "create",
    "access",
    "points",
    "use",
    "uh",
    "go",
    "attach",
    "oh",
    "yeah",
    "command",
    "um",
    "mount",
    "via",
    "dns",
    "mount",
    "via",
    "ip",
    "address",
    "look",
    "hard",
    "try",
    "give",
    "go",
    "done",
    "looks",
    "like",
    "made",
    "easier",
    "maybe",
    "try",
    "okay",
    "go",
    "ec2",
    "going",
    "launch",
    "instance",
    "going",
    "choose",
    "amazon",
    "2",
    "okay",
    "going",
    "go",
    "choose",
    "want",
    "choose",
    "file",
    "system",
    "going",
    "mount",
    "okay",
    "storage",
    "fine",
    "fine",
    "going",
    "go",
    "ahead",
    "launch",
    "need",
    "new",
    "key",
    "pair",
    "create",
    "new",
    "key",
    "pair",
    "um",
    "efs",
    "example",
    "okay",
    "going",
    "download",
    "key",
    "pair",
    "going",
    "launch",
    "instance",
    "okay",
    "going",
    "go",
    "view",
    "launching",
    "going",
    "open",
    "cloud",
    "shell",
    "going",
    "want",
    "upload",
    "pen",
    "like",
    "going",
    "drag",
    "desktop",
    "screen",
    "going",
    "upload",
    "file",
    "efs",
    "example",
    "okay",
    "going",
    "upload",
    "want",
    "see",
    "access",
    "efs",
    "volume",
    "ls",
    "old",
    "one",
    "delete",
    "way",
    "never",
    "going",
    "use",
    "anytime",
    "soon",
    "yes",
    "ls",
    "going",
    "delete",
    "hello",
    "text",
    "bit",
    "cleaner",
    "need",
    "chod",
    "400",
    "uh",
    "efs",
    "example",
    "saw",
    "like",
    "want",
    "try",
    "connect",
    "server",
    "remotely",
    "right",
    "believe",
    "drive",
    "mounted",
    "go",
    "storage",
    "show",
    "show",
    "um",
    "waiting",
    "two",
    "status",
    "checks",
    "pass",
    "ssh",
    "machine",
    "going",
    "go",
    "back",
    "take",
    "look",
    "using",
    "efs",
    "mount",
    "helper",
    "pseudo",
    "mount",
    "hyphen",
    "efs",
    "tls",
    "volume",
    "efs",
    "imagine",
    "going",
    "mount",
    "efs",
    "using",
    "nfs",
    "client",
    "guess",
    "depends",
    "going",
    "available",
    "us",
    "even",
    "status",
    "checks",
    "passed",
    "going",
    "try",
    "get",
    "anyway",
    "um",
    "click",
    "grab",
    "public",
    "ip",
    "address",
    "type",
    "ssh",
    "uh",
    "ec2",
    "hyphen",
    "user",
    "sign",
    "paste",
    "hyphen",
    "efs",
    "example",
    "pem",
    "usually",
    "log",
    "via",
    "ssh",
    "um",
    "know",
    "example",
    "want",
    "see",
    "drive",
    "exists",
    "usually",
    "mount",
    "right",
    "okay",
    "already",
    "mounted",
    "us",
    "touch",
    "hello",
    "world",
    "text",
    "say",
    "pseudo",
    "say",
    "pseudo",
    "vi",
    "going",
    "open",
    "file",
    "say",
    "hello",
    "another",
    "computer",
    "okay",
    "saved",
    "file",
    "want",
    "oops",
    "oh",
    "okay",
    "sorry",
    "cloud",
    "shell",
    "want",
    "want",
    "kill",
    "machine",
    "okay",
    "going",
    "spin",
    "another",
    "ec2",
    "instance",
    "going",
    "see",
    "mount",
    "file",
    "actually",
    "worked",
    "wow",
    "much",
    "easier",
    "ca",
    "tell",
    "hard",
    "attach",
    "efs",
    "volume",
    "last",
    "time",
    "um",
    "go",
    "ahead",
    "add",
    "storage",
    "fine",
    "going",
    "go",
    "review",
    "going",
    "say",
    "launch",
    "going",
    "stick",
    "key",
    "pair",
    "going",
    "give",
    "moment",
    "launch",
    "going",
    "go",
    "view",
    "instances",
    "one",
    "launching",
    "launching",
    "let",
    "go",
    "peek",
    "around",
    "see",
    "see",
    "know",
    "imagine",
    "add",
    "file",
    "system",
    "boot",
    "um",
    "adding",
    "fact",
    "probably",
    "could",
    "ran",
    "line",
    "added",
    "really",
    "easily",
    "um",
    "going",
    "bother",
    "testing",
    "want",
    "go",
    "trouble",
    "um",
    "still",
    "ca",
    "remember",
    "access",
    "points",
    "um",
    "uh",
    "okay",
    "let",
    "kind",
    "scope",
    "certified",
    "cloud",
    "practitioner",
    "curious",
    "get",
    "nice",
    "monitoring",
    "right",
    "kind",
    "nice",
    "um",
    "guess",
    "trying",
    "suggest",
    "like",
    "anabis",
    "backup",
    "data",
    "sync",
    "transfer",
    "would",
    "backing",
    "simplify",
    "uh",
    "automates",
    "accelerates",
    "moving",
    "data",
    "okay",
    "pretty",
    "straightforward",
    "transfer",
    "family",
    "fully",
    "managed",
    "f",
    "sftp",
    "okay",
    "nothing",
    "exciting",
    "going",
    "refresh",
    "initializing",
    "let",
    "go",
    "see",
    "connect",
    "one",
    "going",
    "go",
    "ahead",
    "grab",
    "public",
    "ip",
    "address",
    "going",
    "hit",
    "okay",
    "going",
    "swap",
    "ip",
    "address",
    "going",
    "see",
    "connect",
    "machine",
    "yet",
    "say",
    "yes",
    "got",
    "great",
    "going",
    "go",
    "mount",
    "directory",
    "efs",
    "fs1",
    "ls",
    "going",
    "cat",
    "hello",
    "world",
    "works",
    "cool",
    "thing",
    "dfs",
    "file",
    "system",
    "share",
    "among",
    "um",
    "uh",
    "ec2",
    "instances",
    "sure",
    "users",
    "could",
    "connect",
    "using",
    "nfs",
    "protocol",
    "best",
    "like",
    "network",
    "storage",
    "networking",
    "going",
    "show",
    "today",
    "gives",
    "general",
    "idea",
    "efs",
    "works",
    "pay",
    "store",
    "serverless",
    "go",
    "type",
    "delete",
    "cu",
    "done",
    "probably",
    "uh",
    "destroy",
    "instance",
    "first",
    "get",
    "mixed",
    "clean",
    "little",
    "bit",
    "better",
    "going",
    "delete",
    "keys",
    "delete",
    "okay",
    "go",
    "ahead",
    "delete",
    "one",
    "well",
    "delete",
    "since",
    "done",
    "uh",
    "make",
    "sure",
    "tearing",
    "good",
    "make",
    "way",
    "back",
    "says",
    "enter",
    "probably",
    "id",
    "name",
    "enter",
    "hit",
    "confirm",
    "see",
    "deleting",
    "confident",
    "going",
    "one",
    "time",
    "confirm",
    "entering",
    "file",
    "systems",
    "id",
    "put",
    "destroying",
    "tell",
    "go",
    "destroying",
    "good",
    "shape",
    "gone",
    "data",
    "gone",
    "um",
    "yeah",
    "music",
    "efs",
    "right",
    "let",
    "take",
    "look",
    "um",
    "snow",
    "family",
    "ads",
    "type",
    "snow",
    "click",
    "ads",
    "snow",
    "family",
    "probably",
    "order",
    "device",
    "um",
    "might",
    "able",
    "order",
    "least",
    "originally",
    "looked",
    "like",
    "way",
    "back",
    "day",
    "uh",
    "available",
    "canada",
    "kind",
    "curious",
    "see",
    "idea",
    "going",
    "go",
    "order",
    "options",
    "import",
    "s3",
    "export",
    "s3",
    "local",
    "compute",
    "storage",
    "perform",
    "local",
    "comput",
    "storage",
    "workloads",
    "without",
    "transferring",
    "data",
    "order",
    "multiple",
    "devices",
    "clusters",
    "increased",
    "durability",
    "storage",
    "capacity",
    "sounds",
    "like",
    "um",
    "transferring",
    "data",
    "using",
    "uh",
    "locally",
    "uh",
    "um",
    "like",
    "basically",
    "buying",
    "renting",
    "temporary",
    "computers",
    "kind",
    "interesting",
    "never",
    "saw",
    "option",
    "going",
    "choose",
    "import",
    "ads3",
    "going",
    "read",
    "stuff",
    "expectation",
    "going",
    "even",
    "able",
    "submit",
    "job",
    "probably",
    "want",
    "going",
    "cost",
    "money",
    "want",
    "show",
    "process",
    "see",
    "snow",
    "job",
    "assistance",
    "new",
    "snow",
    "family",
    "run",
    "pilot",
    "one",
    "two",
    "devices",
    "batch",
    "file",
    "smaller",
    "1",
    "megabyte",
    "benchmark",
    "optimize",
    "deploy",
    "st",
    "uh",
    "staging",
    "workstations",
    "discover",
    "remediate",
    "environment",
    "al",
    "uh",
    "issues",
    "early",
    "files",
    "folders",
    "name",
    "must",
    "conform",
    "amazon",
    "s3",
    "prepare",
    "ami",
    "pilot",
    "completed",
    "confirm",
    "number",
    "snow",
    "family",
    "devices",
    "copy",
    "devices",
    "simultaneously",
    "follow",
    "best",
    "practices",
    "use",
    "following",
    "resources",
    "manage",
    "snow",
    "devices",
    "itab",
    "us",
    "openhub",
    "edge",
    "client",
    "cli",
    "openhub",
    "graphical",
    "user",
    "interface",
    "use",
    "manage",
    "snow",
    "devices",
    "kind",
    "cool",
    "cli",
    "imagine",
    "something",
    "useful",
    "use",
    "close",
    "things",
    "going",
    "say",
    "acknowledge",
    "know",
    "really",
    "okay",
    "going",
    "enter",
    "address",
    "say",
    "andrew",
    "brown",
    "going",
    "going",
    "enter",
    "real",
    "whatever",
    "would",
    "toronto",
    "exam",
    "pro",
    "um",
    "canada",
    "oh",
    "see",
    "thing",
    "ship",
    "us",
    "far",
    "get",
    "okay",
    "um",
    "thing",
    "like",
    "really",
    "want",
    "know",
    "ad",
    "us",
    "inside",
    "got",
    "us",
    "let",
    "pretend",
    "address",
    "states",
    "famous",
    "address",
    "address",
    "white",
    "house",
    "okay",
    "going",
    "copy",
    "going",
    "submit",
    "real",
    "want",
    "see",
    "farther",
    "line",
    "okay",
    "uh",
    "nw",
    "state",
    "washington",
    "right",
    "part",
    "nw",
    "northwest",
    "thing",
    "canada",
    "could",
    "tell",
    "um",
    "go",
    "washington",
    "second",
    "address",
    "line",
    "look",
    "like",
    "um",
    "zip",
    "code",
    "believe",
    "zip",
    "code",
    "need",
    "phone",
    "number",
    "looks",
    "like",
    "416",
    "uh",
    "111",
    "11111",
    "okay",
    "okay",
    "one",
    "day",
    "two",
    "day",
    "shipping",
    "one",
    "right",
    "choose",
    "type",
    "device",
    "snow",
    "cone",
    "snow",
    "cone",
    "ssd",
    "snow",
    "cone",
    "optimized",
    "surprised",
    "never",
    "took",
    "screenshot",
    "earlier",
    "um",
    "compute",
    "optimized",
    "things",
    "like",
    "choose",
    "one",
    "want",
    "looks",
    "like",
    "going",
    "see",
    "different",
    "options",
    "go",
    "snow",
    "cone",
    "snow",
    "cone",
    "snow",
    "cones",
    "ship",
    "power",
    "supply",
    "ethernet",
    "cable",
    "snow",
    "cone",
    "devices",
    "powered",
    "45",
    "wat",
    "cb",
    "c",
    "uh",
    "usbc",
    "power",
    "supply",
    "provide",
    "power",
    "supply",
    "cable",
    "ship",
    "power",
    "supply",
    "cable",
    "fine",
    "uh",
    "snow",
    "con",
    "wireless",
    "snow",
    "con",
    "connect",
    "wireless",
    "connection",
    "connect",
    "buckets",
    "want",
    "bucket",
    "created",
    "earlier",
    "computing",
    "use",
    "comp",
    "using",
    "ec2",
    "instances",
    "use",
    "device",
    "mobile",
    "data",
    "center",
    "loading",
    "ec2",
    "ami",
    "ami",
    "might",
    "want",
    "use",
    "uh",
    "ad",
    "iot",
    "green",
    "validated",
    "ami",
    "interested",
    "remote",
    "device",
    "management",
    "use",
    "ops",
    "hub",
    "etc",
    "monitor",
    "reboot",
    "device",
    "fine",
    "need",
    "choose",
    "security",
    "key",
    "know",
    "set",
    "service",
    "r",
    "see",
    "happens",
    "uh",
    "let",
    "update",
    "fine",
    "guess",
    "hit",
    "create",
    "job",
    "really",
    "want",
    "order",
    "one",
    "um",
    "going",
    "hit",
    "button",
    "also",
    "going",
    "go",
    "white",
    "house",
    "going",
    "like",
    "andrew",
    "brown",
    "something",
    "feel",
    "like",
    "today",
    "least",
    "gives",
    "idea",
    "process",
    "imagine",
    "uh",
    "go",
    "way",
    "going",
    "pretty",
    "similar",
    "know",
    "like",
    "stuff",
    "think",
    "uh",
    "saved",
    "address",
    "real",
    "address",
    "options",
    "little",
    "bit",
    "uh",
    "limited",
    "like",
    "nfs",
    "bas",
    "s3",
    "base",
    "slightly",
    "different",
    "basically",
    "process",
    "curious",
    "take",
    "look",
    "last",
    "one",
    "since",
    "three",
    "options",
    "curious",
    "okay",
    "sim",
    "similar",
    "thing",
    "okay",
    "yeah",
    "pretty",
    "much",
    "want",
    "know",
    "um",
    "snow",
    "family",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "database",
    "database",
    "data",
    "store",
    "stores",
    "structured",
    "data",
    "emphasize",
    "bit",
    "database",
    "stores",
    "complex",
    "data",
    "stores",
    "requires",
    "using",
    "formal",
    "design",
    "modeling",
    "techniques",
    "databases",
    "generally",
    "categorized",
    "either",
    "relational",
    "structured",
    "data",
    "strongly",
    "represents",
    "tabular",
    "data",
    "talking",
    "tables",
    "rows",
    "columns",
    "concept",
    "row",
    "oriented",
    "colum",
    "oriented",
    "non",
    "relational",
    "databases",
    "may",
    "may",
    "distinctly",
    "resemble",
    "tabular",
    "data",
    "uh",
    "simple",
    "example",
    "idea",
    "might",
    "use",
    "kind",
    "language",
    "like",
    "sql",
    "put",
    "database",
    "get",
    "back",
    "tables",
    "relational",
    "databases",
    "let",
    "talk",
    "functionality",
    "databases",
    "uh",
    "using",
    "special",
    "specialized",
    "language",
    "uh",
    "query",
    "retrieve",
    "data",
    "case",
    "sql",
    "specialized",
    "modeling",
    "strategies",
    "optimize",
    "retrieval",
    "different",
    "use",
    "cases",
    "uh",
    "control",
    "transformation",
    "data",
    "useful",
    "data",
    "structures",
    "reports",
    "normally",
    "database",
    "infers",
    "uh",
    "someone",
    "usually",
    "using",
    "relational",
    "row",
    "oriented",
    "data",
    "dat",
    "store",
    "um",
    "know",
    "understand",
    "people",
    "say",
    "database",
    "usually",
    "talking",
    "like",
    "postgress",
    "mysql",
    "relational",
    "row",
    "store",
    "usually",
    "default",
    "uh",
    "obviously",
    "lot",
    "broader",
    "terms",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "data",
    "warehouse",
    "relational",
    "data",
    "store",
    "designed",
    "analytical",
    "workloads",
    "generally",
    "column",
    "oriented",
    "data",
    "store",
    "okay",
    "companies",
    "terab",
    "millions",
    "rows",
    "data",
    "need",
    "fast",
    "way",
    "able",
    "produce",
    "analytics",
    "reports",
    "data",
    "warehouses",
    "generally",
    "perform",
    "aggregation",
    "aggregation",
    "idea",
    "grouping",
    "data",
    "together",
    "find",
    "total",
    "average",
    "uh",
    "data",
    "warehouses",
    "optimized",
    "around",
    "columns",
    "since",
    "need",
    "quickly",
    "aggregate",
    "column",
    "data",
    "kind",
    "diagram",
    "um",
    "data",
    "warehouse",
    "idea",
    "could",
    "ingesting",
    "data",
    "uh",
    "regular",
    "database",
    "getting",
    "pen",
    "tool",
    "could",
    "regular",
    "database",
    "coming",
    "different",
    "data",
    "source",
    "compatible",
    "terms",
    "schema",
    "use",
    "like",
    "etl",
    "el",
    "etl",
    "get",
    "data",
    "uh",
    "data",
    "warehouse",
    "data",
    "warehouses",
    "generally",
    "designed",
    "uh",
    "hot",
    "hot",
    "means",
    "return",
    "queries",
    "fast",
    "even",
    "though",
    "vast",
    "amounts",
    "data",
    "data",
    "warehouses",
    "infrequently",
    "accessed",
    "meaning",
    "intended",
    "reporting",
    "maybe",
    "twice",
    "day",
    "uh",
    "week",
    "generate",
    "business",
    "uh",
    "user",
    "reports",
    "course",
    "going",
    "vary",
    "based",
    "b",
    "um",
    "service",
    "offering",
    "data",
    "warehouse",
    "data",
    "warehouse",
    "needs",
    "consume",
    "data",
    "relational",
    "database",
    "regular",
    "basis",
    "consume",
    "places",
    "transform",
    "get",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "key",
    "value",
    "store",
    "key",
    "value",
    "store",
    "database",
    "type",
    "database",
    "nosql",
    "uses",
    "simple",
    "key",
    "value",
    "method",
    "store",
    "data",
    "key",
    "value",
    "stores",
    "dumb",
    "fast",
    "uh",
    "generally",
    "lack",
    "features",
    "like",
    "relationships",
    "indexes",
    "aggregation",
    "course",
    "going",
    "providers",
    "managed",
    "solutions",
    "might",
    "uh",
    "poly",
    "fill",
    "uh",
    "issues",
    "want",
    "show",
    "underlying",
    "way",
    "key",
    "value",
    "stores",
    "work",
    "kind",
    "kind",
    "distinguish",
    "document",
    "stores",
    "key",
    "value",
    "stores",
    "literally",
    "unique",
    "key",
    "alongside",
    "value",
    "reason",
    "representing",
    "zeros",
    "ones",
    "want",
    "understand",
    "basically",
    "kind",
    "key",
    "value",
    "uh",
    "store",
    "interprets",
    "going",
    "determine",
    "look",
    "document",
    "database",
    "key",
    "value",
    "store",
    "uh",
    "uh",
    "interprets",
    "value",
    "documents",
    "right",
    "key",
    "value",
    "stores",
    "commonly",
    "store",
    "um",
    "uh",
    "multiple",
    "uh",
    "like",
    "associate",
    "array",
    "pretty",
    "common",
    "even",
    "dynamo",
    "db",
    "look",
    "key",
    "value",
    "store",
    "looks",
    "like",
    "uh",
    "table",
    "actually",
    "table",
    "schema",
    "list",
    "underneath",
    "really",
    "um",
    "know",
    "associative",
    "array",
    "uh",
    "columns",
    "sorry",
    "rows",
    "uh",
    "different",
    "amounts",
    "columns",
    "okay",
    "due",
    "design",
    "able",
    "scale",
    "well",
    "beyond",
    "relational",
    "database",
    "kind",
    "work",
    "like",
    "relational",
    "database",
    "without",
    "bells",
    "whistles",
    "hopefully",
    "know",
    "makes",
    "sense",
    "okay",
    "music",
    "right",
    "let",
    "take",
    "look",
    "document",
    "stores",
    "document",
    "store",
    "nosql",
    "database",
    "stores",
    "documents",
    "primary",
    "data",
    "structure",
    "document",
    "could",
    "xml",
    "uh",
    "type",
    "uh",
    "structure",
    "also",
    "could",
    "something",
    "like",
    "json",
    "json",
    "like",
    "document",
    "stores",
    "subclasses",
    "key",
    "value",
    "stores",
    "uh",
    "components",
    "document",
    "store",
    "uh",
    "comparable",
    "relational",
    "databases",
    "kind",
    "example",
    "relational",
    "database",
    "called",
    "tables",
    "collections",
    "called",
    "rows",
    "called",
    "documents",
    "columns",
    "fields",
    "may",
    "indexes",
    "joins",
    "might",
    "called",
    "embedding",
    "linking",
    "translate",
    "knowledge",
    "uh",
    "know",
    "um",
    "kind",
    "feature",
    "set",
    "relational",
    "database",
    "better",
    "scalability",
    "honestly",
    "document",
    "stores",
    "key",
    "value",
    "stores",
    "additional",
    "features",
    "built",
    "top",
    "music",
    "okay",
    "hey",
    "andre",
    "brown",
    "exam",
    "pro",
    "going",
    "take",
    "look",
    "nosql",
    "database",
    "services",
    "available",
    "aws",
    "dynamo",
    "db",
    "serverless",
    "nosql",
    "key",
    "value",
    "document",
    "database",
    "designed",
    "scale",
    "billions",
    "records",
    "guaranteed",
    "consistent",
    "data",
    "returned",
    "least",
    "second",
    "worry",
    "managing",
    "shards",
    "dynamo",
    "db",
    "ad",
    "flagship",
    "database",
    "service",
    "meaning",
    "whenever",
    "think",
    "database",
    "service",
    "scales",
    "cost",
    "effective",
    "fast",
    "think",
    "dynamo",
    "db",
    "2019",
    "amazon",
    "online",
    "shopping",
    "retail",
    "shut",
    "last",
    "oracle",
    "database",
    "completed",
    "migration",
    "dynamo",
    "db",
    "oracle",
    "databases",
    "75",
    "pedabytes",
    "data",
    "dynamo",
    "db",
    "reduce",
    "cost",
    "60",
    "reduced",
    "latency",
    "40",
    "kind",
    "like",
    "testimonial",
    "relational",
    "escal",
    "database",
    "want",
    "massively",
    "scalable",
    "database",
    "want",
    "dynamo",
    "db4",
    "really",
    "want",
    "put",
    "remember",
    "going",
    "always",
    "able",
    "pass",
    "uh",
    "get",
    "questions",
    "right",
    "exam",
    "okay",
    "document",
    "db",
    "nol",
    "document",
    "database",
    "mongod",
    "db",
    "compatible",
    "uh",
    "mongodb",
    "popular",
    "sc",
    "among",
    "developers",
    "open",
    "source",
    "licensing",
    "issues",
    "around",
    "using",
    "open",
    "source",
    "mongodb",
    "ad",
    "us",
    "got",
    "around",
    "building",
    "mongodb",
    "database",
    "basically",
    "want",
    "mongod",
    "db",
    "like",
    "database",
    "going",
    "using",
    "document",
    "db",
    "amazon",
    "key",
    "spaces",
    "fully",
    "managed",
    "apoe",
    "cassandra",
    "database",
    "cassandra",
    "open",
    "source",
    "nosql",
    "key",
    "value",
    "database",
    "similar",
    "dynamo",
    "db",
    "column",
    "store",
    "database",
    "additional",
    "functionality",
    "want",
    "use",
    "apache",
    "cassandra",
    "using",
    "amazon",
    "key",
    "music",
    "spaces",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "relational",
    "database",
    "services",
    "starting",
    "relational",
    "database",
    "service",
    "rds",
    "relational",
    "database",
    "service",
    "supports",
    "multiple",
    "sql",
    "engines",
    "relational",
    "synomous",
    "sql",
    "online",
    "transactional",
    "processing",
    "oltp",
    "relational",
    "databases",
    "commonly",
    "used",
    "type",
    "database",
    "among",
    "tech",
    "companies",
    "startups",
    "easy",
    "use",
    "use",
    "love",
    "um",
    "rds",
    "supports",
    "following",
    "sql",
    "engines",
    "first",
    "mysql",
    "popular",
    "open",
    "source",
    "sql",
    "database",
    "uh",
    "purchased",
    "owned",
    "oracle",
    "uh",
    "interesting",
    "story",
    "oracle",
    "purchased",
    "supposed",
    "mario",
    "db",
    "sorry",
    "myell",
    "sold",
    "oracle",
    "sun",
    "systems",
    "within",
    "year",
    "um",
    "uh",
    "oracle",
    "purchased",
    "original",
    "creators",
    "never",
    "wanted",
    "go",
    "oracle",
    "um",
    "uh",
    "way",
    "licensing",
    "things",
    "like",
    "um",
    "original",
    "creators",
    "came",
    "back",
    "decided",
    "fork",
    "myql",
    "maintain",
    "mario",
    "db",
    "uh",
    "know",
    "oracle",
    "never",
    "kind",
    "pushed",
    "away",
    "popular",
    "um",
    "database",
    "everyone",
    "go",
    "p",
    "solution",
    "postest",
    "psql",
    "commonly",
    "known",
    "popular",
    "open",
    "source",
    "sql",
    "database",
    "among",
    "developers",
    "one",
    "like",
    "use",
    "many",
    "rich",
    "features",
    "sql",
    "uh",
    "come",
    "added",
    "complexity",
    "oracle",
    "sql",
    "proprietary",
    "database",
    "well",
    "used",
    "enterprise",
    "companies",
    "buy",
    "license",
    "use",
    "microsoft",
    "sql",
    "microsoft",
    "proprietary",
    "sql",
    "database",
    "one",
    "buy",
    "license",
    "use",
    "uh",
    "aurora",
    "fully",
    "managed",
    "database",
    "uh",
    "lot",
    "uh",
    "going",
    "aurora",
    "talk",
    "almost",
    "acts",
    "separate",
    "service",
    "powered",
    "rds",
    "aora",
    "fully",
    "managed",
    "database",
    "either",
    "myell",
    "five",
    "times",
    "faster",
    "postest",
    "sql",
    "three",
    "times",
    "faster",
    "database",
    "want",
    "highly",
    "available",
    "durable",
    "scalable",
    "secure",
    "relational",
    "database",
    "post",
    "mqu",
    "want",
    "use",
    "aurora",
    "uh",
    "aurora",
    "serverless",
    "ser",
    "demand",
    "version",
    "aurora",
    "want",
    "benefits",
    "aurora",
    "trade",
    "uh",
    "cold",
    "starts",
    "lots",
    "traffic",
    "demand",
    "uh",
    "way",
    "use",
    "aurora",
    "serverless",
    "way",
    "rds",
    "vmware",
    "allows",
    "deploy",
    "rds",
    "supported",
    "engines",
    "premise",
    "data",
    "centers",
    "uh",
    "data",
    "center",
    "must",
    "using",
    "vmware",
    "server",
    "virtualization",
    "want",
    "databases",
    "managed",
    "rds",
    "database",
    "center",
    "uh",
    "yeah",
    "realize",
    "small",
    "spelling",
    "mistake",
    "say",
    "yeah",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "database",
    "services",
    "abos",
    "loose",
    "ones",
    "let",
    "talk",
    "redshift",
    "petabyte",
    "size",
    "data",
    "warehouse",
    "data",
    "warehouses",
    "uh",
    "online",
    "analytical",
    "processing",
    "oap",
    "data",
    "warehouses",
    "expensive",
    "keeping",
    "data",
    "hot",
    "meaning",
    "run",
    "complex",
    "query",
    "large",
    "amount",
    "data",
    "get",
    "data",
    "back",
    "fast",
    "need",
    "quickly",
    "generate",
    "analytics",
    "reports",
    "large",
    "amount",
    "data",
    "going",
    "using",
    "red",
    "shift",
    "elastic",
    "cache",
    "managed",
    "database",
    "inmemory",
    "caching",
    "open",
    "source",
    "databases",
    "reddis",
    "memcache",
    "need",
    "improve",
    "performance",
    "application",
    "adding",
    "caching",
    "layer",
    "front",
    "web",
    "servers",
    "database",
    "going",
    "using",
    "elastic",
    "cache",
    "neptune",
    "managed",
    "graph",
    "database",
    "data",
    "represented",
    "interconnected",
    "nodes",
    "believe",
    "uses",
    "gremlin",
    "way",
    "interface",
    "surprise",
    "looks",
    "like",
    "class",
    "providers",
    "using",
    "need",
    "understand",
    "connections",
    "data",
    "mapping",
    "fraud",
    "rings",
    "social",
    "media",
    "relationships",
    "uh",
    "relational",
    "database",
    "heavy",
    "information",
    "going",
    "want",
    "use",
    "neptune",
    "amazon",
    "time",
    "streams",
    "fully",
    "managed",
    "time",
    "series",
    "database",
    "think",
    "devices",
    "send",
    "lots",
    "data",
    "iot",
    "devices",
    "need",
    "measure",
    "things",
    "change",
    "time",
    "amazon",
    "quantum",
    "ledger",
    "database",
    "fully",
    "managed",
    "uh",
    "ledger",
    "database",
    "provides",
    "transparent",
    "immutable",
    "cryptographically",
    "variable",
    "transaction",
    "logs",
    "need",
    "record",
    "history",
    "financial",
    "activities",
    "trusted",
    "last",
    "one",
    "database",
    "migration",
    "service",
    "dms",
    "database",
    "per",
    "se",
    "migration",
    "service",
    "migrate",
    "premise",
    "database",
    "adabs",
    "two",
    "databases",
    "different",
    "adus",
    "accounts",
    "using",
    "different",
    "sql",
    "engines",
    "sql",
    "nosql",
    "database",
    "pretty",
    "sure",
    "cover",
    "bit",
    "uh",
    "greater",
    "detail",
    "course",
    "music",
    "okay",
    "right",
    "let",
    "go",
    "take",
    "look",
    "dynamo",
    "db",
    "uh",
    "ad",
    "nosql",
    "database",
    "go",
    "dynamo",
    "db",
    "create",
    "new",
    "table",
    "say",
    "dynamo",
    "db",
    "table",
    "always",
    "choose",
    "partition",
    "key",
    "necessarily",
    "sort",
    "key",
    "could",
    "something",
    "like",
    "um",
    "like",
    "want",
    "really",
    "unique",
    "could",
    "like",
    "email",
    "one",
    "could",
    "created",
    "right",
    "string",
    "binary",
    "notice",
    "types",
    "simple",
    "settings",
    "default",
    "settings",
    "customized",
    "settings",
    "default",
    "use",
    "provision",
    "capacity",
    "mode",
    "rewrite",
    "five",
    "rules",
    "etc",
    "custom",
    "secondary",
    "indexes",
    "use",
    "kms",
    "going",
    "expand",
    "see",
    "looking",
    "two",
    "options",
    "demand",
    "uh",
    "simplify",
    "billing",
    "paying",
    "actual",
    "reads",
    "rights",
    "use",
    "provisioned",
    "get",
    "guarantee",
    "performance",
    "want",
    "able",
    "know",
    "whatever",
    "thousand",
    "know",
    "goes",
    "like",
    "thousand",
    "read",
    "writes",
    "per",
    "second",
    "paying",
    "okay",
    "paying",
    "guarantee",
    "um",
    "capacity",
    "okay",
    "going",
    "create",
    "secondary",
    "indexes",
    "like",
    "another",
    "way",
    "uh",
    "look",
    "data",
    "notice",
    "cost",
    "uh",
    "encryption",
    "rest",
    "owned",
    "amazon",
    "dynamo",
    "db",
    "pretty",
    "much",
    "like",
    "adab",
    "us",
    "s3",
    "ssse",
    "s3",
    "could",
    "use",
    "uh",
    "cm",
    "actually",
    "guess",
    "probably",
    "kms",
    "would",
    "imagine",
    "go",
    "ahead",
    "create",
    "table",
    "let",
    "going",
    "create",
    "table",
    "usually",
    "really",
    "really",
    "fast",
    "go",
    "insert",
    "data",
    "starting",
    "go",
    "tables",
    "recently",
    "changed",
    "ui",
    "look",
    "bit",
    "confused",
    "u",
    "view",
    "items",
    "okay",
    "create",
    "item",
    "add",
    "something",
    "say",
    "andrew",
    "exampro",
    "doco",
    "2021",
    "uh",
    "well",
    "future",
    "let",
    "say",
    "20",
    "25",
    "505",
    "want",
    "think",
    "hard",
    "add",
    "additional",
    "information",
    "say",
    "like",
    "uh",
    "today",
    "true",
    "could",
    "say",
    "um",
    "make",
    "like",
    "list",
    "uh",
    "know",
    "food",
    "could",
    "go",
    "add",
    "string",
    "working",
    "oh",
    "go",
    "could",
    "say",
    "like",
    "um",
    "banana",
    "could",
    "say",
    "pizza",
    "right",
    "go",
    "ahead",
    "create",
    "item",
    "item",
    "database",
    "uh",
    "scan",
    "return",
    "items",
    "query",
    "actually",
    "uh",
    "limitations",
    "choosing",
    "party",
    "q",
    "editor",
    "use",
    "sql",
    "select",
    "um",
    "used",
    "party",
    "q",
    "um",
    "aws",
    "party",
    "q",
    "dynamo",
    "db",
    "examples",
    "hoping",
    "find",
    "like",
    "example",
    "language",
    "getting",
    "started",
    "need",
    "need",
    "explanation",
    "show",
    "example",
    "query",
    "get",
    "okay",
    "examples",
    "right",
    "maybe",
    "give",
    "go",
    "um",
    "table",
    "dynamo",
    "db",
    "table",
    "want",
    "email",
    "back",
    "need",
    "wear",
    "run",
    "see",
    "works",
    "go",
    "sure",
    "could",
    "select",
    "additional",
    "data",
    "know",
    "things",
    "like",
    "uh",
    "food",
    "okay",
    "really",
    "nice",
    "um",
    "addition",
    "dynb",
    "stream",
    "things",
    "dynamo",
    "db",
    "stream",
    "go",
    "lot",
    "fun",
    "things",
    "sorts",
    "things",
    "dynamo",
    "db",
    "um",
    "pretty",
    "much",
    "done",
    "going",
    "go",
    "ahead",
    "delete",
    "table",
    "notice",
    "also",
    "created",
    "cloudwatch",
    "alarms",
    "want",
    "delete",
    "well",
    "create",
    "backup",
    "care",
    "go",
    "ahead",
    "delete",
    "dynamo",
    "music",
    "db",
    "okay",
    "want",
    "show",
    "uh",
    "rds",
    "relational",
    "database",
    "service",
    "go",
    "top",
    "type",
    "rds",
    "make",
    "way",
    "rds",
    "great",
    "allows",
    "us",
    "launch",
    "relational",
    "databases",
    "um",
    "sometimes",
    "ui",
    "slow",
    "sure",
    "taking",
    "long",
    "load",
    "today",
    "every",
    "day",
    "bit",
    "different",
    "going",
    "go",
    "ahead",
    "create",
    "new",
    "database",
    "uh",
    "going",
    "notice",
    "going",
    "option",
    "creating",
    "standard",
    "easy",
    "stick",
    "standard",
    "like",
    "easy",
    "hides",
    "lot",
    "stuff",
    "us",
    "even",
    "like",
    "says",
    "two",
    "cents",
    "per",
    "hour",
    "giving",
    "us",
    "full",
    "cost",
    "really",
    "trust",
    "go",
    "chose",
    "dev",
    "test",
    "look",
    "like",
    "100",
    "showing",
    "cost",
    "preview",
    "right",
    "maybe",
    "choose",
    "database",
    "type",
    "sorry",
    "wanted",
    "choose",
    "postgress",
    "let",
    "look",
    "engine",
    "types",
    "amazon",
    "aurora",
    "mysql",
    "postgress",
    "mysql",
    "marb",
    "postgress",
    "oracle",
    "microsoftsql",
    "notice",
    "microsoft",
    "sql",
    "comes",
    "license",
    "anything",
    "might",
    "change",
    "based",
    "addition",
    "uh",
    "nope",
    "comes",
    "license",
    "great",
    "want",
    "bring",
    "license",
    "need",
    "dedicated",
    "host",
    "right",
    "running",
    "uh",
    "microsoft",
    "sql",
    "oracle",
    "uh",
    "bring",
    "license",
    "going",
    "based",
    "um",
    "importing",
    "abus",
    "license",
    "manager",
    "go",
    "postest",
    "like",
    "use",
    "uh",
    "going",
    "set",
    "dev",
    "test",
    "try",
    "get",
    "cheapest",
    "cost",
    "scroll",
    "look",
    "118",
    "get",
    "cheaper",
    "get",
    "super",
    "cheap",
    "password",
    "going",
    "testing",
    "1",
    "2",
    "3",
    "capital",
    "explanation",
    "mark",
    "end",
    "okay",
    "bunch",
    "requirements",
    "wants",
    "want",
    "t2",
    "micro",
    "going",
    "scroll",
    "going",
    "standard",
    "oh",
    "look",
    "classes",
    "want",
    "class",
    "want",
    "burstable",
    "class",
    "cheap",
    "ones",
    "go",
    "still",
    "t2",
    "micro",
    "t3",
    "see",
    "t2",
    "imagine",
    "t3",
    "micro",
    "must",
    "new",
    "itus",
    "free",
    "tier",
    "go",
    "free",
    "tier",
    "right",
    "go",
    "databases",
    "um",
    "rds",
    "t2",
    "micro",
    "750",
    "hours",
    "ca",
    "select",
    "going",
    "assume",
    "t3",
    "micro",
    "must",
    "new",
    "tier",
    "right",
    "unless",
    "saying",
    "include",
    "previous",
    "generations",
    "maybe",
    "see",
    "okay",
    "see",
    "really",
    "like",
    "changed",
    "okay",
    "oldest",
    "choose",
    "t3",
    "micro",
    "fine",
    "know",
    "t2",
    "free",
    "tier",
    "uh",
    "fine",
    "want",
    "auto",
    "scaling",
    "turned",
    "example",
    "want",
    "create",
    "standby",
    "going",
    "really",
    "jump",
    "cost",
    "need",
    "public",
    "access",
    "create",
    "vpc",
    "fine",
    "password",
    "authentication",
    "fine",
    "go",
    "know",
    "keep",
    "expanded",
    "always",
    "come",
    "name",
    "database",
    "database",
    "choose",
    "postest",
    "version",
    "going",
    "turn",
    "backups",
    "uh",
    "going",
    "take",
    "forever",
    "launch",
    "thing",
    "encryption",
    "turned",
    "turn",
    "generally",
    "recom",
    "commended",
    "performance",
    "insights",
    "turned",
    "going",
    "turn",
    "retention",
    "oh",
    "leave",
    "7",
    "days",
    "cuz",
    "ca",
    "turn",
    "need",
    "enhanced",
    "monitoring",
    "going",
    "turn",
    "uh",
    "fine",
    "going",
    "enable",
    "delete",
    "protection",
    "good",
    "go",
    "ahead",
    "create",
    "database",
    "wait",
    "database",
    "created",
    "thing",
    "like",
    "solutions",
    "architect",
    "developer",
    "social",
    "stuff",
    "actually",
    "show",
    "connect",
    "database",
    "um",
    "hard",
    "like",
    "connect",
    "uh",
    "grab",
    "database",
    "information",
    "going",
    "endpoint",
    "port",
    "stuff",
    "like",
    "use",
    "something",
    "like",
    "table",
    "plus",
    "something",
    "connect",
    "database",
    "scope",
    "certified",
    "cloud",
    "partitioner",
    "going",
    "motions",
    "show",
    "create",
    "rds",
    "database",
    "easily",
    "connect",
    "actually",
    "utilize",
    "okay",
    "would",
    "spin",
    "would",
    "server",
    "go",
    "ahead",
    "delete",
    "server",
    "say",
    "delete",
    "okay",
    "really",
    "special",
    "type",
    "um",
    "database",
    "like",
    "aurora",
    "like",
    "console",
    "page",
    "part",
    "rds",
    "want",
    "spend",
    "aurora",
    "choose",
    "compatibility",
    "want",
    "choose",
    "provisioned",
    "serverless",
    "um",
    "serverless",
    "supposed",
    "really",
    "good",
    "um",
    "scaling",
    "zero",
    "cost",
    "something",
    "fill",
    "initial",
    "cost",
    "lot",
    "expensive",
    "ca",
    "choose",
    "t2",
    "micro",
    "um",
    "unless",
    "lets",
    "provision",
    "uh",
    "oh",
    "t2",
    "t3",
    "medium",
    "smallest",
    "go",
    "okay",
    "reach",
    "point",
    "using",
    "mediumsized",
    "database",
    "might",
    "consider",
    "moving",
    "aurora",
    "going",
    "highly",
    "scalable",
    "etc",
    "like",
    "um",
    "consider",
    "also",
    "something",
    "called",
    "babble",
    "fish",
    "um",
    "us",
    "announced",
    "last",
    "year",
    "shot",
    "um",
    "shooting",
    "idea",
    "make",
    "compatible",
    "myql",
    "sql",
    "server",
    "migrate",
    "aurora",
    "post",
    "sql",
    "kind",
    "interesting",
    "um",
    "database",
    "destroying",
    "think",
    "going",
    "go",
    "back",
    "rds",
    "taking",
    "long",
    "time",
    "load",
    "today",
    "uh",
    "think",
    "already",
    "deleted",
    "maybe",
    "go",
    "databases",
    "deleting",
    "confident",
    "going",
    "delete",
    "music",
    "go",
    "right",
    "let",
    "take",
    "look",
    "red",
    "shift",
    "red",
    "shift",
    "data",
    "warehouse",
    "generally",
    "really",
    "expensive",
    "something",
    "going",
    "want",
    "launch",
    "uh",
    "dayto",
    "day",
    "let",
    "see",
    "far",
    "get",
    "um",
    "running",
    "go",
    "ahead",
    "create",
    "cluster",
    "watch",
    "create",
    "uh",
    "create",
    "one",
    "uh",
    "free",
    "trial",
    "configure",
    "learning",
    "sounds",
    "good",
    "uh",
    "free",
    "limited",
    "time",
    "organization",
    "never",
    "created",
    "cluster",
    "rarely",
    "ever",
    "create",
    "trial",
    "ends",
    "delete",
    "cluster",
    "avoid",
    "charges",
    "demand",
    "okay",
    "sounds",
    "fair",
    "um",
    "going",
    "two",
    "vpcu",
    "going",
    "launch",
    "dc2",
    "large",
    "look",
    "pricing",
    "show",
    "prices",
    "please",
    "please",
    "please",
    "um",
    "think",
    "loading",
    "right",
    "okay",
    "know",
    "much",
    "know",
    "cheap",
    "sample",
    "data",
    "loaded",
    "red",
    "shift",
    "cluster",
    "sounds",
    "good",
    "ticket",
    "sample",
    "data",
    "okay",
    "ticket",
    "sample",
    "data",
    "red",
    "shift",
    "imagine",
    "probably",
    "like",
    "tutorial",
    "right",
    "want",
    "know",
    "need",
    "query",
    "right",
    "even",
    "query",
    "via",
    "interface",
    "admin",
    "user",
    "adus",
    "user",
    "um",
    "password",
    "going",
    "capital",
    "testing",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "exclamation",
    "hit",
    "create",
    "cluster",
    "oh",
    "cool",
    "create",
    "data",
    "right",
    "sure",
    "whether",
    "would",
    "able",
    "query",
    "line",
    "use",
    "java",
    "j",
    "jdbc",
    "odbc",
    "driver",
    "download",
    "jar",
    "fun",
    "sounds",
    "course",
    "looks",
    "like",
    "query",
    "data",
    "data",
    "loaded",
    "looks",
    "really",
    "good",
    "guess",
    "pull",
    "data",
    "um",
    "marketplace",
    "looks",
    "pretty",
    "nice",
    "guess",
    "could",
    "probably",
    "integrate",
    "things",
    "like",
    "quick",
    "site",
    "probably",
    "want",
    "adjust",
    "data",
    "usually",
    "spend",
    "lot",
    "time",
    "red",
    "shift",
    "um",
    "looks",
    "like",
    "lot",
    "easier",
    "use",
    "impressed",
    "know",
    "long",
    "takes",
    "uh",
    "launch",
    "red",
    "shift",
    "cluster",
    "mean",
    "160",
    "gb",
    "uh",
    "storage",
    "uh",
    "even",
    "smallest",
    "pretty",
    "large",
    "going",
    "stop",
    "video",
    "back",
    "done",
    "okay",
    "okay",
    "short",
    "little",
    "wait",
    "um",
    "lot",
    "faster",
    "expecting",
    "uh",
    "available",
    "looks",
    "like",
    "says",
    "query",
    "sample",
    "data",
    "use",
    "red",
    "shift",
    "version",
    "two",
    "going",
    "click",
    "sure",
    "tons",
    "buttons",
    "get",
    "great",
    "populated",
    "query",
    "um",
    "looks",
    "really",
    "nice",
    "really",
    "nice",
    "ui",
    "wonder",
    "like",
    "existing",
    "queries",
    "okay",
    "going",
    "going",
    "go",
    "ahead",
    "pull",
    "query",
    "see",
    "get",
    "work",
    "never",
    "found",
    "prices",
    "though",
    "okay",
    "hit",
    "run",
    "like",
    "like",
    "limit",
    "100",
    "go",
    "ahead",
    "hit",
    "run",
    "see",
    "data",
    "get",
    "relation",
    "sales",
    "exist",
    "okay",
    "going",
    "um",
    "go",
    "examples",
    "red",
    "shift",
    "documentation",
    "uses",
    "uh",
    "sample",
    "database",
    "called",
    "ticket",
    "sample",
    "small",
    "database",
    "consists",
    "seven",
    "tables",
    "load",
    "ticket",
    "data",
    "set",
    "following",
    "okay",
    "load",
    "sample",
    "data",
    "amazon",
    "3",
    "okay",
    "would",
    "thought",
    "already",
    "data",
    "could",
    "swore",
    "would",
    "dev",
    "public",
    "tables",
    "zero",
    "tables",
    "okay",
    "think",
    "data",
    "going",
    "load",
    "really",
    "thought",
    "would",
    "added",
    "us",
    "uh",
    "let",
    "go",
    "ahead",
    "create",
    "tables",
    "see",
    "easy",
    "think",
    "run",
    "create",
    "table",
    "cool",
    "okay",
    "got",
    "run",
    "run",
    "time",
    "think",
    "seven",
    "date",
    "already",
    "exists",
    "okay",
    "fine",
    "event",
    "already",
    "exists",
    "saying",
    "tables",
    "exist",
    "maybe",
    "patient",
    "okay",
    "um",
    "interesting",
    "right",
    "maybe",
    "go",
    "back",
    "uh",
    "run",
    "query",
    "maybe",
    "wait",
    "little",
    "data",
    "load",
    "run",
    "okay",
    "know",
    "think",
    "us",
    "like",
    "create",
    "us",
    "would",
    "go",
    "steps",
    "fine",
    "learning",
    "little",
    "bit",
    "um",
    "uh",
    "red",
    "shift",
    "um",
    "uh",
    "looks",
    "like",
    "wait",
    "looks",
    "like",
    "would",
    "run",
    "download",
    "use",
    "copy",
    "command",
    "bring",
    "um",
    "looks",
    "like",
    "via",
    "uh",
    "interface",
    "done",
    "queries",
    "kind",
    "cool",
    "um",
    "imagine",
    "probably",
    "could",
    "like",
    "save",
    "export",
    "chart",
    "happens",
    "okay",
    "chart",
    "kind",
    "fun",
    "export",
    "oh",
    "save",
    "thought",
    "maybe",
    "could",
    "export",
    "quick",
    "site",
    "suppose",
    "rebuild",
    "quick",
    "site",
    "yeah",
    "guess",
    "right",
    "pretty",
    "darn",
    "simple",
    "going",
    "make",
    "way",
    "back",
    "red",
    "shift",
    "done",
    "example",
    "go",
    "clusters",
    "going",
    "go",
    "ahead",
    "delete",
    "cluster",
    "delete",
    "create",
    "file",
    "snap",
    "shot",
    "nope",
    "delete",
    "delete",
    "cluster",
    "go",
    "pretty",
    "sure",
    "succeed",
    "problem",
    "done",
    "red",
    "shift",
    "red",
    "shift",
    "super",
    "expensive",
    "make",
    "sure",
    "thing",
    "deletes",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "cloud",
    "native",
    "networking",
    "services",
    "um",
    "architectural",
    "diagram",
    "created",
    "lot",
    "networking",
    "components",
    "uh",
    "people",
    "create",
    "networking",
    "diagrams",
    "aws",
    "always",
    "include",
    "things",
    "even",
    "though",
    "little",
    "bit",
    "verbo",
    "see",
    "okay",
    "first",
    "thing",
    "vpc",
    "virtual",
    "private",
    "cloud",
    "logically",
    "isolated",
    "section",
    "aabus",
    "cloud",
    "launch",
    "adus",
    "resources",
    "uh",
    "resources",
    "going",
    "reside",
    "services",
    "uh",
    "require",
    "select",
    "vpc",
    "uh",
    "managed",
    "aws",
    "would",
    "surprised",
    "hood",
    "vpc",
    "okay",
    "want",
    "uh",
    "internet",
    "reach",
    "services",
    "going",
    "need",
    "internet",
    "gateway",
    "um",
    "need",
    "figure",
    "way",
    "route",
    "things",
    "uh",
    "various",
    "subnets",
    "route",
    "tables",
    "uh",
    "come",
    "need",
    "def",
    "define",
    "region",
    "going",
    "geographical",
    "location",
    "network",
    "availability",
    "zones",
    "basically",
    "data",
    "centers",
    "resources",
    "going",
    "reside",
    "subnets",
    "logical",
    "partition",
    "ip",
    "network",
    "multiple",
    "smaller",
    "network",
    "segments",
    "um",
    "pretty",
    "much",
    "map",
    "uh",
    "availability",
    "zones",
    "making",
    "one",
    "per",
    "knackles",
    "act",
    "firewall",
    "subnet",
    "level",
    "security",
    "groups",
    "act",
    "firewall",
    "instance",
    "level",
    "hopefully",
    "gives",
    "good",
    "overview",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "enterprise",
    "hybrid",
    "networking",
    "premise",
    "uh",
    "environment",
    "private",
    "cloud",
    "ads",
    "account",
    "public",
    "cloud",
    "couple",
    "services",
    "bridge",
    "together",
    "first",
    "ads",
    "virtual",
    "private",
    "network",
    "vpn",
    "secure",
    "connection",
    "premise",
    "remote",
    "offices",
    "mobile",
    "employees",
    "direct",
    "connect",
    "dedicated",
    "gigabit",
    "connection",
    "premise",
    "data",
    "center",
    "adabs",
    "fast",
    "connection",
    "lot",
    "times",
    "direct",
    "say",
    "private",
    "connection",
    "necessarily",
    "mean",
    "secure",
    "encrypting",
    "uh",
    "data",
    "transit",
    "commonly",
    "services",
    "used",
    "together",
    "singular",
    "okay",
    "um",
    "uh",
    "private",
    "links",
    "already",
    "uh",
    "using",
    "ads",
    "want",
    "keep",
    "within",
    "ads",
    "never",
    "going",
    "internet",
    "okay",
    "generally",
    "called",
    "vpc",
    "interface",
    "endpoints",
    "marketing",
    "pages",
    "call",
    "private",
    "links",
    "bit",
    "confusing",
    "know",
    "keeps",
    "traffic",
    "within",
    "aabus",
    "network",
    "transverse",
    "internet",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "vpcs",
    "subnets",
    "vpc",
    "logically",
    "isolated",
    "section",
    "adus",
    "network",
    "launch",
    "adus",
    "resources",
    "choose",
    "range",
    "ips",
    "using",
    "cider",
    "range",
    "cider",
    "range",
    "ip",
    "address",
    "followed",
    "uh",
    "uh",
    "net",
    "mask",
    "sub",
    "submask",
    "going",
    "determine",
    "many",
    "ip",
    "addresses",
    "um",
    "bunch",
    "math",
    "behind",
    "going",
    "get",
    "um",
    "anyway",
    "architectural",
    "diagram",
    "showing",
    "vpc",
    "couple",
    "subnets",
    "subnets",
    "logical",
    "partition",
    "ip",
    "network",
    "multiple",
    "uh",
    "smaller",
    "network",
    "segments",
    "essentially",
    "breaking",
    "ip",
    "ranges",
    "vpcs",
    "smaller",
    "networks",
    "thinking",
    "cutting",
    "pie",
    "okay",
    "subnets",
    "need",
    "smaller",
    "cider",
    "range",
    "uh",
    "uh",
    "vpcs",
    "represent",
    "portion",
    "uh",
    "424",
    "actually",
    "smaller",
    "interesting",
    "higher",
    "gets",
    "smaller",
    "gets",
    "would",
    "allocate",
    "256",
    "ip",
    "addresses",
    "well",
    "smaller",
    "16",
    "okay",
    "concept",
    "public",
    "subnet",
    "one",
    "reach",
    "internet",
    "private",
    "subnet",
    "one",
    "reach",
    "internet",
    "um",
    "uh",
    "strictly",
    "enforced",
    "aws",
    "idea",
    "subnet",
    "say",
    "default",
    "assign",
    "publicly",
    "assignable",
    "ip",
    "addresses",
    "totally",
    "possible",
    "launch",
    "ec2",
    "instance",
    "priv",
    "private",
    "subnet",
    "turn",
    "um",
    "uh",
    "ip",
    "address",
    "got",
    "things",
    "ensure",
    "stay",
    "private",
    "public",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "comparing",
    "security",
    "groups",
    "versus",
    "knackles",
    "nice",
    "architectural",
    "diagram",
    "knackles",
    "security",
    "groups",
    "kind",
    "talk",
    "two",
    "knackles",
    "stand",
    "network",
    "access",
    "control",
    "list",
    "act",
    "virtual",
    "firewall",
    "subnet",
    "level",
    "create",
    "allow",
    "uh",
    "deny",
    "rules",
    "really",
    "useful",
    "want",
    "block",
    "specific",
    "ip",
    "address",
    "known",
    "abuse",
    "going",
    "kind",
    "um",
    "compare",
    "security",
    "groups",
    "going",
    "important",
    "difference",
    "okay",
    "secur",
    "security",
    "groups",
    "act",
    "firewall",
    "instance",
    "level",
    "implicitly",
    "deny",
    "traffic",
    "create",
    "allow",
    "rules",
    "allow",
    "e2",
    "instance",
    "access",
    "port",
    "uh",
    "port",
    "22",
    "ssh",
    "block",
    "single",
    "ip",
    "address",
    "reason",
    "say",
    "order",
    "block",
    "single",
    "ip",
    "address",
    "security",
    "group",
    "would",
    "literally",
    "block",
    "literally",
    "allow",
    "everything",
    "ip",
    "address",
    "feasible",
    "okay",
    "remember",
    "one",
    "particular",
    "example",
    "always",
    "able",
    "remember",
    "difference",
    "two",
    "one",
    "thing",
    "um",
    "adab",
    "us",
    "likes",
    "ask",
    "ones",
    "stateless",
    "ones",
    "stateful",
    "uh",
    "cloud",
    "partitioner",
    "level",
    "going",
    "asking",
    "music",
    "okay",
    "right",
    "right",
    "let",
    "learn",
    "bit",
    "u",
    "networking",
    "aws",
    "want",
    "go",
    "top",
    "type",
    "vpc",
    "stands",
    "virtual",
    "private",
    "cloud",
    "set",
    "vpc",
    "important",
    "remember",
    "little",
    "bit",
    "details",
    "get",
    "remember",
    "major",
    "components",
    "create",
    "new",
    "vpc",
    "going",
    "call",
    "vpc",
    "uh",
    "tutorial",
    "going",
    "say",
    "sl16",
    "reason",
    "wondering",
    "go",
    "xyx",
    "z",
    "um",
    "tells",
    "size",
    "go",
    "put",
    "16",
    "see",
    "lot",
    "room",
    "24",
    "takes",
    "smaller",
    "see",
    "basically",
    "size",
    "right",
    "empty",
    "blocks",
    "going",
    "lot",
    "room",
    "10",
    "006",
    "need",
    "ipv6",
    "going",
    "go",
    "ahead",
    "create",
    "go",
    "ahead",
    "create",
    "subnet",
    "need",
    "going",
    "choose",
    "vpc",
    "go",
    "say",
    "subnet",
    "tutorial",
    "choose",
    "first",
    "z",
    "leave",
    "blank",
    "choose",
    "random",
    "need",
    "choose",
    "block",
    "smaller",
    "current",
    "one",
    "16",
    "would",
    "definitely",
    "um",
    "uh",
    "well",
    "16",
    "size",
    "match",
    "size",
    "424",
    "would",
    "absolutely",
    "smaller",
    "okay",
    "go",
    "ahead",
    "create",
    "subnet",
    "set",
    "um",
    "let",
    "see",
    "route",
    "tables",
    "hooked",
    "route",
    "table",
    "says",
    "links",
    "says",
    "local",
    "going",
    "anywhere",
    "need",
    "attach",
    "u",
    "internet",
    "gateway",
    "allows",
    "us",
    "reach",
    "internet",
    "go",
    "create",
    "new",
    "internet",
    "gateway",
    "say",
    "myig",
    "gw",
    "go",
    "ahead",
    "create",
    "associate",
    "vpc",
    "created",
    "okay",
    "internet",
    "gateway",
    "attached",
    "want",
    "subnet",
    "make",
    "way",
    "internet",
    "go",
    "route",
    "table",
    "edit",
    "uh",
    "route",
    "table",
    "association",
    "like",
    "keeps",
    "showing",
    "know",
    "um",
    "would",
    "change",
    "particular",
    "association",
    "want",
    "add",
    "route",
    "table",
    "thought",
    "clicked",
    "would",
    "allow",
    "add",
    "apparently",
    "got",
    "go",
    "route",
    "tables",
    "looking",
    "one",
    "see",
    "could",
    "even",
    "name",
    "wanted",
    "like",
    "rote",
    "table",
    "noti",
    "apply",
    "uh",
    "uh",
    "u",
    "names",
    "actually",
    "applying",
    "tag",
    "see",
    "always",
    "go",
    "routes",
    "want",
    "edit",
    "routes",
    "want",
    "add",
    "route",
    "want",
    "go",
    "00",
    "going",
    "choose",
    "internet",
    "gateway",
    "okay",
    "going",
    "say",
    "save",
    "changes",
    "going",
    "allow",
    "us",
    "reach",
    "internet",
    "um",
    "want",
    "go",
    "back",
    "subnet",
    "curious",
    "never",
    "used",
    "um",
    "looks",
    "like",
    "choose",
    "options",
    "concerned",
    "assume",
    "like",
    "used",
    "debugging",
    "azure",
    "kind",
    "services",
    "long",
    "time",
    "starting",
    "add",
    "easily",
    "debug",
    "network",
    "nice",
    "subnet",
    "subnet",
    "uh",
    "reach",
    "internet",
    "um",
    "uh",
    "internet",
    "gateway",
    "hooked",
    "via",
    "route",
    "table",
    "one",
    "thing",
    "matters",
    "assign",
    "public",
    "ip",
    "address",
    "um",
    "something",
    "might",
    "want",
    "look",
    "default",
    "subnet",
    "totally",
    "fine",
    "says",
    "auto",
    "assign",
    "might",
    "something",
    "might",
    "want",
    "change",
    "go",
    "edit",
    "r",
    "table",
    "association",
    "changed",
    "used",
    "part",
    "uh",
    "setup",
    "instructions",
    "us",
    "checkbox",
    "moved",
    "modify",
    "auto",
    "assign",
    "say",
    "enable",
    "means",
    "always",
    "going",
    "give",
    "public",
    "ip",
    "address",
    "launch",
    "going",
    "double",
    "check",
    "elastic",
    "ips",
    "release",
    "okay",
    "double",
    "checking",
    "set",
    "able",
    "launch",
    "um",
    "ec2",
    "within",
    "new",
    "vpc",
    "go",
    "ec2",
    "okay",
    "going",
    "launch",
    "new",
    "instance",
    "say",
    "amazon",
    "elix",
    "2",
    "going",
    "choose",
    "tier",
    "able",
    "select",
    "subnet",
    "okay",
    "go",
    "ahead",
    "launch",
    "care",
    "use",
    "key",
    "whatsoever",
    "going",
    "go",
    "ahead",
    "launch",
    "okay",
    "go",
    "back",
    "go",
    "launching",
    "created",
    "vpc",
    "launched",
    "uh",
    "problem",
    "whatsoever",
    "hopefully",
    "pretty",
    "darn",
    "clear",
    "um",
    "yeah",
    "uh",
    "going",
    "going",
    "let",
    "launch",
    "want",
    "show",
    "security",
    "groups",
    "within",
    "aws",
    "set",
    "security",
    "groups",
    "knackles",
    "going",
    "allow",
    "deny",
    "access",
    "based",
    "stuff",
    "launch",
    "eccu",
    "instance",
    "default",
    "security",
    "group",
    "assigned",
    "could",
    "created",
    "new",
    "one",
    "might",
    "want",
    "create",
    "new",
    "security",
    "group",
    "okay",
    "end",
    "lot",
    "really",
    "fast",
    "like",
    "bunch",
    "ca",
    "even",
    "tell",
    "like",
    "bunch",
    "load",
    "balancers",
    "things",
    "like",
    "might",
    "go",
    "ahead",
    "delete",
    "bunch",
    "tell",
    "going",
    "um",
    "delete",
    "security",
    "groups",
    "sometimes",
    "wo",
    "let",
    "delete",
    "associated",
    "something",
    "like",
    "network",
    "interface",
    "something",
    "right",
    "um",
    "need",
    "find",
    "one",
    "using",
    "right",
    "one",
    "using",
    "launch",
    "wizard",
    "4",
    "go",
    "know",
    "rename",
    "created",
    "think",
    "kind",
    "frustrating",
    "want",
    "rename",
    "like",
    "want",
    "name",
    "interesting",
    "go",
    "edit",
    "routes",
    "uh",
    "rules",
    "sorry",
    "inbound",
    "rules",
    "outbound",
    "rules",
    "open",
    "port",
    "22",
    "allows",
    "us",
    "ssh",
    "could",
    "drop",
    "choose",
    "different",
    "things",
    "want",
    "people",
    "access",
    "website",
    "go",
    "port",
    "80",
    "say",
    "anywhere",
    "ipv",
    "46",
    "anyone",
    "access",
    "um",
    "might",
    "want",
    "something",
    "like",
    "give",
    "access",
    "postgress",
    "runs",
    "port",
    "5432",
    "things",
    "like",
    "um",
    "could",
    "something",
    "else",
    "like",
    "maybe",
    "need",
    "connect",
    "red",
    "shift",
    "port",
    "go",
    "ahead",
    "save",
    "rules",
    "going",
    "say",
    "uh",
    "anywhere",
    "say",
    "ip",
    "maybe",
    "allowed",
    "connect",
    "right",
    "added",
    "inbound",
    "rules",
    "really",
    "ever",
    "touch",
    "outbound",
    "rules",
    "set",
    "traffic",
    "stuff",
    "leaving",
    "uh",
    "one",
    "interesting",
    "thing",
    "note",
    "uh",
    "security",
    "groups",
    "deny",
    "option",
    "right",
    "let",
    "say",
    "wanted",
    "particular",
    "ip",
    "address",
    "wanted",
    "um",
    "let",
    "say",
    "ip",
    "ip",
    "address",
    "ip",
    "address",
    "let",
    "say",
    "wanted",
    "block",
    "right",
    "go",
    "say",
    "okay",
    "want",
    "block",
    "tcp",
    "want",
    "block",
    "number",
    "right",
    "ca",
    "say",
    "allow",
    "number",
    "order",
    "would",
    "enter",
    "everything",
    "number",
    "enter",
    "ranges",
    "like",
    "forward",
    "slashes",
    "stuff",
    "like",
    "imagine",
    "really",
    "hard",
    "start",
    "go",
    "like",
    "start",
    "go",
    "every",
    "single",
    "ip",
    "address",
    "world",
    "get",
    "almost",
    "impossible",
    "key",
    "thing",
    "want",
    "remember",
    "security",
    "groups",
    "um",
    "security",
    "groups",
    "also",
    "knackles",
    "knackles",
    "um",
    "associated",
    "subnets",
    "probably",
    "show",
    "vpc",
    "rarely",
    "touch",
    "knackles",
    "rarely",
    "ever",
    "um",
    "mean",
    "great",
    "tools",
    "know",
    "ever",
    "need",
    "knackles",
    "associated",
    "subnets",
    "go",
    "try",
    "see",
    "subnet",
    "tutorial",
    "created",
    "subnet",
    "got",
    "knle",
    "free",
    "set",
    "inbound",
    "outbound",
    "rules",
    "could",
    "say",
    "okay",
    "want",
    "add",
    "new",
    "rule",
    "want",
    "want",
    "make",
    "rule",
    "number",
    "150",
    "always",
    "hundreds",
    "okay",
    "power",
    "tens",
    "move",
    "around",
    "easily",
    "say",
    "traffic",
    "comes",
    "ip",
    "address",
    "going",
    "put",
    "forward",
    "sl",
    "z",
    "means",
    "single",
    "ip",
    "address",
    "say",
    "deny",
    "right",
    "uh",
    "address",
    "ca",
    "access",
    "ec2",
    "instance",
    "okay",
    "try",
    "go",
    "nothing",
    "running",
    "server",
    "try",
    "use",
    "would",
    "able",
    "applies",
    "anything",
    "subnet",
    "particular",
    "instance",
    "anything",
    "subnet",
    "hopefully",
    "pretty",
    "clear",
    "um",
    "pretty",
    "much",
    "really",
    "need",
    "know",
    "mean",
    "lots",
    "stuff",
    "like",
    "network",
    "firewalls",
    "things",
    "gets",
    "pretty",
    "complicated",
    "um",
    "well",
    "beyond",
    "need",
    "learn",
    "uh",
    "tear",
    "ec2",
    "instance",
    "okay",
    "terminate",
    "instance",
    "destroyed",
    "get",
    "rid",
    "security",
    "group",
    "bunch",
    "stuff",
    "always",
    "bunch",
    "darn",
    "things",
    "say",
    "delete",
    "one",
    "security",
    "group",
    "associated",
    "go",
    "one",
    "using",
    "want",
    "get",
    "rid",
    "ones",
    "okay",
    "go",
    "could",
    "like",
    "inbound",
    "rules",
    "see",
    "one",
    "reference",
    "another",
    "security",
    "group",
    "within",
    "security",
    "group",
    "going",
    "go",
    "save",
    "say",
    "ip",
    "whoops",
    "set",
    "n",
    "uh",
    "nfs",
    "might",
    "set",
    "access",
    "point",
    "delete",
    "delet",
    "would",
    "probably",
    "easier",
    "okay",
    "one",
    "kind",
    "pain",
    "looking",
    "rules",
    "might",
    "referencing",
    "security",
    "groups",
    "get",
    "rid",
    "okay",
    "let",
    "try",
    "go",
    "ahead",
    "delete",
    "leaving",
    "um",
    "leaving",
    "uh",
    "defaults",
    "alone",
    "come",
    "vpcs",
    "want",
    "get",
    "rid",
    "wo",
    "let",
    "delete",
    "one",
    "going",
    "go",
    "edit",
    "rule",
    "delete",
    "save",
    "might",
    "kind",
    "clean",
    "might",
    "know",
    "um",
    "outbound",
    "inbound",
    "let",
    "try",
    "delete",
    "open",
    "one",
    "must",
    "one",
    "referencing",
    "one",
    "going",
    "delete",
    "rule",
    "something",
    "kind",
    "frustrating",
    "aws",
    "sometimes",
    "hard",
    "get",
    "rid",
    "resources",
    "click",
    "stuff",
    "always",
    "clean",
    "might",
    "like",
    "lingering",
    "resources",
    "going",
    "cost",
    "us",
    "anything",
    "fact",
    "um",
    "makes",
    "things",
    "harder",
    "see",
    "know",
    "last",
    "one",
    "really",
    "want",
    "go",
    "away",
    "trying",
    "delete",
    "rules",
    "get",
    "rid",
    "delete",
    "one",
    "one",
    "group",
    "associated",
    "show",
    "talking",
    "okay",
    "um",
    "okay",
    "referencing",
    "think",
    "one",
    "old",
    "one",
    "know",
    "go",
    "go",
    "delete",
    "cleaning",
    "go",
    "inst",
    "instance",
    "make",
    "sure",
    "terminated",
    "good",
    "instance",
    "terminated",
    "destroy",
    "vpc",
    "uh",
    "prior",
    "vpc",
    "could",
    "destroyed",
    "unless",
    "detach",
    "internet",
    "gateway",
    "wonder",
    "going",
    "still",
    "complain",
    "say",
    "yes",
    "actually",
    "looks",
    "like",
    "includes",
    "cleanup",
    "type",
    "delete",
    "go",
    "good",
    "cleaned",
    "music",
    "hey",
    "angre",
    "brown",
    "exam",
    "pro",
    "video",
    "want",
    "show",
    "cloudfront",
    "let",
    "make",
    "way",
    "cloudfront",
    "cloudfront",
    "content",
    "delivery",
    "network",
    "used",
    "cash",
    "data",
    "place",
    "see",
    "older",
    "ones",
    "splash",
    "screen",
    "look",
    "left",
    "hand",
    "side",
    "might",
    "hamburger",
    "menu",
    "open",
    "click",
    "distributions",
    "going",
    "create",
    "new",
    "distribution",
    "want",
    "create",
    "one",
    "cuz",
    "take",
    "forever",
    "create",
    "um",
    "kind",
    "watch",
    "along",
    "even",
    "feel",
    "like",
    "going",
    "hit",
    "um",
    "create",
    "distribution",
    "button",
    "hate",
    "waiting",
    "long",
    "idea",
    "choose",
    "origin",
    "origin",
    "could",
    "something",
    "like",
    "s3",
    "bucket",
    "load",
    "bouncer",
    "media",
    "store",
    "um",
    "content",
    "distribution",
    "network",
    "going",
    "source",
    "content",
    "right",
    "say",
    "bucket",
    "um",
    "probably",
    "default",
    "root",
    "path",
    "idea",
    "going",
    "able",
    "pull",
    "content",
    "cach",
    "everywhere",
    "say",
    "okay",
    "set",
    "type",
    "protocol",
    "redirect",
    "set",
    "uh",
    "caching",
    "rules",
    "like",
    "often",
    "want",
    "uh",
    "cash",
    "like",
    "cash",
    "lot",
    "cash",
    "lot",
    "great",
    "thing",
    "like",
    "edge",
    "um",
    "lambda",
    "edge",
    "functions",
    "uh",
    "read",
    "modify",
    "request",
    "response",
    "cdn",
    "powerful",
    "going",
    "going",
    "go",
    "look",
    "already",
    "cuz",
    "said",
    "said",
    "take",
    "forever",
    "spin",
    "going",
    "see",
    "much",
    "spun",
    "um",
    "looks",
    "like",
    "origin",
    "says",
    "pointed",
    "create",
    "multiple",
    "origins",
    "group",
    "uh",
    "modify",
    "behavior",
    "basically",
    "looking",
    "see",
    "behavior",
    "nothing",
    "super",
    "exciting",
    "set",
    "error",
    "pages",
    "restrict",
    "based",
    "geographical",
    "location",
    "whatever",
    "reason",
    "allowed",
    "serve",
    "content",
    "uk",
    "could",
    "say",
    "exclude",
    "geographical",
    "region",
    "right",
    "allow",
    "list",
    "block",
    "list",
    "saying",
    "like",
    "okay",
    "ca",
    "uk",
    "like",
    "let",
    "say",
    "want",
    "um",
    "say",
    "england",
    "want",
    "um",
    "uh",
    "gdpr",
    "whatever",
    "reason",
    "could",
    "block",
    "know",
    "hard",
    "time",
    "britain",
    "england",
    "england",
    "right",
    "united",
    "kingdom",
    "go",
    "say",
    "okay",
    "forget",
    "united",
    "kingdom",
    "gdp",
    "uh",
    "invalidations",
    "idea",
    "know",
    "cash",
    "things",
    "get",
    "stale",
    "persist",
    "type",
    "say",
    "want",
    "get",
    "rid",
    "create",
    "validation",
    "go",
    "delete",
    "cache",
    "next",
    "time",
    "someone",
    "requests",
    "get",
    "fresh",
    "content",
    "usually",
    "take",
    "long",
    "pretty",
    "much",
    "cloudfront",
    "nutshell",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "ec2",
    "also",
    "known",
    "elastic",
    "cloud",
    "highly",
    "uh",
    "configurable",
    "virtual",
    "server",
    "also",
    "known",
    "virtual",
    "machine",
    "going",
    "generally",
    "refer",
    "uh",
    "ec2",
    "resizable",
    "compute",
    "capacity",
    "takes",
    "minutes",
    "launch",
    "new",
    "instances",
    "anything",
    "everything",
    "adus",
    "uses",
    "ec2",
    "instances",
    "underneath",
    "generally",
    "call",
    "backbone",
    "adus",
    "services",
    "uh",
    "going",
    "choose",
    "options",
    "first",
    "thing",
    "need",
    "choose",
    "os",
    "via",
    "amazon",
    "machine",
    "image",
    "get",
    "red",
    "hat",
    "ubuntu",
    "windows",
    "amazon",
    "linux",
    "seuss",
    "might",
    "also",
    "come",
    "libraries",
    "things",
    "like",
    "going",
    "choose",
    "instance",
    "type",
    "going",
    "determine",
    "things",
    "like",
    "vcpus",
    "memory",
    "see",
    "many",
    "like",
    "monthly",
    "cost",
    "name",
    "instance",
    "type",
    "add",
    "storage",
    "commonly",
    "attaching",
    "elastic",
    "block",
    "storage",
    "elastic",
    "files",
    "system",
    "service",
    "uh",
    "know",
    "choose",
    "ebs",
    "uh",
    "going",
    "determine",
    "type",
    "whether",
    "solid",
    "state",
    "drive",
    "hard",
    "disk",
    "drive",
    "magnetic",
    "tape",
    "even",
    "attaching",
    "multiple",
    "volumes",
    "single",
    "one",
    "last",
    "thing",
    "configuring",
    "instance",
    "configuring",
    "security",
    "groups",
    "key",
    "pairs",
    "user",
    "data",
    "im",
    "roles",
    "placement",
    "groups",
    "sorts",
    "things",
    "experience",
    "show",
    "launch",
    "easy",
    "instance",
    "make",
    "lot",
    "sense",
    "make",
    "sense",
    "right",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "ec2",
    "instance",
    "families",
    "instance",
    "families",
    "well",
    "instance",
    "families",
    "different",
    "combinations",
    "cpu",
    "memory",
    "storage",
    "networking",
    "capacity",
    "instance",
    "families",
    "allow",
    "choose",
    "appropriate",
    "combination",
    "capacity",
    "meet",
    "application",
    "unique",
    "requirements",
    "different",
    "instance",
    "families",
    "different",
    "varying",
    "hardware",
    "used",
    "give",
    "unique",
    "properties",
    "talk",
    "thing",
    "uh",
    "capacity",
    "reservation",
    "adus",
    "actually",
    "run",
    "particular",
    "type",
    "instance",
    "family",
    "enough",
    "hardware",
    "data",
    "center",
    "reserve",
    "let",
    "go",
    "different",
    "types",
    "instance",
    "families",
    "first",
    "general",
    "purpose",
    "names",
    "different",
    "families",
    "uh",
    "popular",
    "ones",
    "t2",
    "um",
    "t2",
    "one",
    "really",
    "interesting",
    "mac",
    "actually",
    "allows",
    "run",
    "um",
    "mac",
    "server",
    "great",
    "balance",
    "compute",
    "memory",
    "network",
    "resources",
    "going",
    "using",
    "time",
    "use",
    "cases",
    "would",
    "web",
    "servers",
    "code",
    "repositories",
    "things",
    "like",
    "compute",
    "optimize",
    "um",
    "start",
    "c",
    "surprise",
    "ideal",
    "compute",
    "bound",
    "applications",
    "benefit",
    "high",
    "performance",
    "processor",
    "edge",
    "cases",
    "scientific",
    "modeling",
    "dedicated",
    "gaming",
    "servers",
    "ad",
    "server",
    "engines",
    "things",
    "like",
    "memory",
    "optimized",
    "um",
    "variety",
    "fast",
    "performance",
    "workloads",
    "process",
    "large",
    "data",
    "sets",
    "memory",
    "um",
    "great",
    "caches",
    "databases",
    "big",
    "data",
    "analytics",
    "accelerated",
    "optimize",
    "p2",
    "p3",
    "p4",
    "things",
    "like",
    "hardware",
    "accelerators",
    "great",
    "machine",
    "learning",
    "computational",
    "finance",
    "seismic",
    "analysis",
    "speech",
    "recognition",
    "um",
    "uh",
    "ml",
    "aws",
    "start",
    "coming",
    "across",
    "types",
    "ads",
    "technically",
    "separate",
    "page",
    "sagemaker",
    "ml",
    "machines",
    "pulling",
    "instance",
    "families",
    "okay",
    "storage",
    "optimize",
    "i3",
    "i3en",
    "things",
    "like",
    "highly",
    "high",
    "sequential",
    "read",
    "write",
    "access",
    "large",
    "data",
    "sets",
    "local",
    "storage",
    "use",
    "cases",
    "would",
    "nosql",
    "memory",
    "transactional",
    "databases",
    "data",
    "warehousing",
    "certified",
    "cloud",
    "practitioner",
    "need",
    "generally",
    "know",
    "five",
    "categories",
    "names",
    "instance",
    "families",
    "um",
    "associates",
    "definitely",
    "want",
    "know",
    "things",
    "bit",
    "detail",
    "want",
    "say",
    "commonly",
    "instance",
    "families",
    "called",
    "instance",
    "types",
    "instance",
    "type",
    "combination",
    "size",
    "family",
    "even",
    "aws",
    "documentation",
    "make",
    "family",
    "distinction",
    "clear",
    "know",
    "know",
    "azure",
    "make",
    "clear",
    "gcp",
    "bring",
    "language",
    "kind",
    "normalize",
    "okay",
    "music",
    "let",
    "take",
    "look",
    "ec2",
    "instance",
    "types",
    "instance",
    "type",
    "particular",
    "instance",
    "size",
    "instance",
    "family",
    "common",
    "pattern",
    "instance",
    "sizes",
    "see",
    "things",
    "like",
    "nano",
    "micro",
    "small",
    "uh",
    "medium",
    "large",
    "x",
    "large",
    "2x",
    "large",
    "4x",
    "large",
    "8x",
    "large",
    "know",
    "generally",
    "power",
    "twos",
    "sometimes",
    "like",
    "12",
    "14",
    "16",
    "even",
    "uh",
    "go",
    "launch",
    "ec2",
    "instance",
    "going",
    "choose",
    "instance",
    "type",
    "see",
    "know",
    "t2",
    "micro",
    "um",
    "small",
    "medium",
    "large",
    "x",
    "large",
    "okay",
    "exceptions",
    "pattern",
    "sizes",
    "know",
    "one",
    "particular",
    "one",
    "called",
    "uh",
    "metal",
    "going",
    "indicate",
    "bare",
    "metal",
    "machine",
    "sometimes",
    "get",
    "oddball",
    "ones",
    "like",
    "9x",
    "large",
    "know",
    "rule",
    "power",
    "two",
    "even",
    "numbers",
    "always",
    "case",
    "uh",
    "generally",
    "pretty",
    "even",
    "know",
    "start",
    "okay",
    "uh",
    "talking",
    "instant",
    "sizes",
    "e2",
    "instant",
    "sizes",
    "generally",
    "double",
    "price",
    "attribute",
    "uh",
    "bringing",
    "numbers",
    "little",
    "bit",
    "closer",
    "starting",
    "small",
    "going",
    "notice",
    "one",
    "two",
    "maybe",
    "double",
    "four",
    "see",
    "12",
    "24",
    "uh",
    "almost",
    "doubles",
    "almost",
    "doubles",
    "want",
    "show",
    "price",
    "generally",
    "almost",
    "double",
    "16",
    "33",
    "67",
    "135",
    "lot",
    "times",
    "like",
    "always",
    "option",
    "say",
    "okay",
    "want",
    "go",
    "next",
    "instance",
    "size",
    "uh",
    "additional",
    "instance",
    "size",
    "sometimes",
    "better",
    "approach",
    "get",
    "additional",
    "instance",
    "distribute",
    "across",
    "another",
    "uh",
    "also",
    "meet",
    "additional",
    "capacity",
    "music",
    "go",
    "talked",
    "dedicated",
    "instances",
    "hosts",
    "little",
    "bit",
    "let",
    "make",
    "distinction",
    "clear",
    "dedicated",
    "hosts",
    "single",
    "tenant",
    "easy",
    "instances",
    "designed",
    "let",
    "bring",
    "license",
    "bol",
    "based",
    "machine",
    "characteristics",
    "compare",
    "dedicated",
    "instance",
    "dedicated",
    "host",
    "across",
    "isolation",
    "billing",
    "uh",
    "physical",
    "characteristics",
    "visibility",
    "affinity",
    "host",
    "instance",
    "targeted",
    "instance",
    "placement",
    "automatic",
    "instance",
    "placement",
    "add",
    "capacity",
    "using",
    "allocation",
    "request",
    "isolation",
    "dedicated",
    "instance",
    "going",
    "get",
    "instance",
    "isolation",
    "customer",
    "physical",
    "machine",
    "virtualization",
    "guarantee",
    "um",
    "dedicated",
    "host",
    "physical",
    "server",
    "isolation",
    "get",
    "whole",
    "server",
    "billing",
    "uh",
    "dedicated",
    "instance",
    "per",
    "instance",
    "billing",
    "going",
    "additional",
    "fee",
    "2",
    "per",
    "region",
    "dedicated",
    "host",
    "per",
    "host",
    "building",
    "lot",
    "expensive",
    "get",
    "whole",
    "machine",
    "uh",
    "visibility",
    "physical",
    "characteristics",
    "going",
    "get",
    "information",
    "dedicated",
    "instance",
    "dedicated",
    "host",
    "sockets",
    "core",
    "host",
    "host",
    "id",
    "really",
    "important",
    "bring",
    "license",
    "saying",
    "license",
    "x",
    "amount",
    "cores",
    "x",
    "amount",
    "sockets",
    "affinity",
    "affinity",
    "dedicated",
    "instance",
    "dedicated",
    "hosts",
    "consistency",
    "deploys",
    "instance",
    "physical",
    "server",
    "uh",
    "control",
    "target",
    "instance",
    "placement",
    "dedicated",
    "instance",
    "control",
    "dedicated",
    "host",
    "auto",
    "automatic",
    "instance",
    "placements",
    "add",
    "capacity",
    "using",
    "allocation",
    "requests",
    "dedic",
    "instance",
    "yes",
    "dedicated",
    "host",
    "want",
    "come",
    "back",
    "main",
    "point",
    "highlighted",
    "dedicated",
    "host",
    "visibility",
    "sockets",
    "core",
    "host",
    "id",
    "really",
    "really",
    "important",
    "bringing",
    "licensed",
    "byol",
    "um",
    "know",
    "microsoft",
    "sql",
    "servers",
    "specify",
    "manacor",
    "things",
    "like",
    "music",
    "okay",
    "talking",
    "uh",
    "tendency",
    "want",
    "make",
    "clear",
    "uh",
    "difference",
    "different",
    "levels",
    "tendency",
    "aws",
    "three",
    "okay",
    "got",
    "dedicated",
    "host",
    "server",
    "lives",
    "control",
    "physical",
    "attribute",
    "basically",
    "whole",
    "server",
    "okay",
    "uh",
    "dedicated",
    "instances",
    "server",
    "uh",
    "physical",
    "machine",
    "customers",
    "actual",
    "slot",
    "dedicated",
    "instance",
    "always",
    "uh",
    "uh",
    "default",
    "instance",
    "live",
    "somewhere",
    "server",
    "uh",
    "reboot",
    "going",
    "somewhere",
    "else",
    "guarantee",
    "going",
    "place",
    "every",
    "single",
    "time",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "follow",
    "along",
    "going",
    "looking",
    "ec2",
    "also",
    "um",
    "services",
    "adjacent",
    "like",
    "autoscaling",
    "groups",
    "load",
    "balancers",
    "elastic",
    "ips",
    "things",
    "like",
    "fully",
    "understand",
    "ec2",
    "um",
    "know",
    "tons",
    "exam",
    "able",
    "go",
    "motions",
    "cement",
    "knowledge",
    "um",
    "deeper",
    "concepts",
    "like",
    "working",
    "key",
    "pairs",
    "things",
    "like",
    "let",
    "make",
    "way",
    "ec2",
    "console",
    "learn",
    "learn",
    "um",
    "generally",
    "go",
    "ec2",
    "console",
    "bring",
    "dashboard",
    "whatever",
    "reason",
    "bring",
    "idea",
    "left",
    "hand",
    "side",
    "make",
    "way",
    "instances",
    "okay",
    "launch",
    "first",
    "instance",
    "go",
    "launch",
    "instance",
    "first",
    "thing",
    "going",
    "presented",
    "choose",
    "ami",
    "amazon",
    "machine",
    "image",
    "template",
    "contains",
    "software",
    "configuration",
    "operating",
    "system",
    "applications",
    "binaries",
    "would",
    "installed",
    "os",
    "default",
    "right",
    "variety",
    "choose",
    "quick",
    "starts",
    "generally",
    "ones",
    "going",
    "see",
    "first",
    "ones",
    "ad",
    "support",
    "uh",
    "um",
    "amis",
    "operating",
    "systems",
    "ads",
    "support",
    "contact",
    "ones",
    "outside",
    "uh",
    "still",
    "help",
    "might",
    "knowledge",
    "understand",
    "pick",
    "core",
    "ones",
    "going",
    "good",
    "shape",
    "uh",
    "popular",
    "amazon",
    "linux",
    "2",
    "part",
    "free",
    "tier",
    "minimal",
    "well",
    "hardened",
    "aws",
    "good",
    "choice",
    "see",
    "install",
    "bunch",
    "things",
    "like",
    "want",
    "launch",
    "mac",
    "os",
    "server",
    "absolutely",
    "red",
    "hat",
    "uh",
    "suzie",
    "ubuntu",
    "windows",
    "server",
    "name",
    "um",
    "wanted",
    "something",
    "farther",
    "go",
    "market",
    "marketplace",
    "uh",
    "subscribe",
    "one",
    "managed",
    "company",
    "basically",
    "everything",
    "exists",
    "sun",
    "could",
    "get",
    "community",
    "ami",
    "ones",
    "contributed",
    "community",
    "free",
    "going",
    "go",
    "back",
    "quick",
    "start",
    "want",
    "notice",
    "ami",
    "id",
    "uniquely",
    "identify",
    "using",
    "change",
    "region",
    "even",
    "amazon",
    "l",
    "2",
    "instance",
    "thing",
    "change",
    "understand",
    "regional",
    "based",
    "comes",
    "variant",
    "arm",
    "variant",
    "going",
    "using",
    "x86",
    "notice",
    "change",
    "right",
    "hand",
    "side",
    "going",
    "stick",
    "x86",
    "going",
    "go",
    "ahead",
    "hit",
    "next",
    "going",
    "choose",
    "instance",
    "type",
    "going",
    "decide",
    "um",
    "uh",
    "greatly",
    "much",
    "going",
    "spending",
    "larger",
    "going",
    "spend",
    "see",
    "t2",
    "micro",
    "want",
    "know",
    "pricing",
    "go",
    "ec2",
    "pricing",
    "aws",
    "get",
    "ec2",
    "pricing",
    "want",
    "go",
    "demand",
    "load",
    "kind",
    "go",
    "find",
    "price",
    "show",
    "us",
    "show",
    "us",
    "list",
    "ah",
    "okay",
    "say",
    "t2",
    "micro",
    "see",
    "demand",
    "seems",
    "really",
    "cheap",
    "got",
    "math",
    "time",
    "many",
    "hours",
    "month",
    "launch",
    "t2",
    "micro",
    "let",
    "say",
    "free",
    "tier",
    "first",
    "made",
    "account",
    "going",
    "7",
    "750",
    "hours",
    "free",
    "free",
    "tier",
    "would",
    "cost",
    "8",
    "46",
    "usd",
    "okay",
    "aware",
    "ever",
    "need",
    "figure",
    "something",
    "go",
    "copy",
    "math",
    "730",
    "pretty",
    "easy",
    "t2",
    "micro",
    "t2",
    "family",
    "going",
    "one",
    "v",
    "vcpu",
    "notice",
    "v",
    "virtual",
    "could",
    "single",
    "cpu",
    "underlying",
    "hardware",
    "going",
    "access",
    "one",
    "virtual",
    "cpu",
    "1",
    "gb",
    "memory",
    "low",
    "moderate",
    "network",
    "performance",
    "factor",
    "change",
    "need",
    "like",
    "uh",
    "uh",
    "gigabit",
    "stuff",
    "like",
    "really",
    "fast",
    "connections",
    "prem",
    "hybrid",
    "connections",
    "specialized",
    "servers",
    "fine",
    "tt",
    "micro",
    "great",
    "uh",
    "want",
    "also",
    "search",
    "uh",
    "way",
    "see",
    "instance",
    "families",
    "things",
    "like",
    "filter",
    "current",
    "generations",
    "generations",
    "fine",
    "okay",
    "going",
    "go",
    "configure",
    "instance",
    "type",
    "say",
    "let",
    "launch",
    "multiple",
    "instances",
    "let",
    "turn",
    "spot",
    "save",
    "money",
    "try",
    "bid",
    "particular",
    "price",
    "change",
    "vpc",
    "going",
    "default",
    "default",
    "vpc",
    "um",
    "subnets",
    "going",
    "pick",
    "one",
    "random",
    "fine",
    "um",
    "whether",
    "autoassign",
    "public",
    "ip",
    "address",
    "ip",
    "address",
    "reach",
    "internet",
    "generally",
    "want",
    "enabled",
    "dependent",
    "subnet",
    "whether",
    "default",
    "enabled",
    "matter",
    "ec2",
    "instance",
    "private",
    "public",
    "subnet",
    "always",
    "override",
    "give",
    "public",
    "ip",
    "address",
    "placement",
    "groups",
    "allows",
    "place",
    "servers",
    "together",
    "closely",
    "something",
    "certified",
    "cloud",
    "partitioner",
    "capacity",
    "reservations",
    "worried",
    "us",
    "running",
    "reserve",
    "capacity",
    "kind",
    "interesting",
    "domain",
    "join",
    "directory",
    "something",
    "done",
    "much",
    "imagine",
    "something",
    "um",
    "direct",
    "active",
    "directory",
    "something",
    "like",
    "join",
    "information",
    "need",
    "uh",
    "uh",
    "im",
    "roll",
    "absolutely",
    "need",
    "im",
    "roll",
    "want",
    "create",
    "new",
    "rooll",
    "going",
    "close",
    "tabs",
    "go",
    "wait",
    "moment",
    "create",
    "new",
    "roll",
    "want",
    "ec2",
    "say",
    "ec2",
    "creating",
    "rule",
    "hit",
    "next",
    "um",
    "know",
    "policy",
    "going",
    "go",
    "ahead",
    "um",
    "well",
    "need",
    "make",
    "new",
    "policy",
    "want",
    "ssm",
    "reason",
    "want",
    "ssm",
    "um",
    "uh",
    "use",
    "sessions",
    "manager",
    "log",
    "use",
    "key",
    "pairs",
    "use",
    "key",
    "pairs",
    "want",
    "use",
    "could",
    "used",
    "old",
    "rle",
    "tell",
    "hey",
    "go",
    "use",
    "new",
    "one",
    "want",
    "make",
    "sure",
    "know",
    "one",
    "checkbox",
    "hit",
    "next",
    "add",
    "tags",
    "right",
    "uh",
    "well",
    "actually",
    "need",
    "add",
    "tags",
    "fine",
    "sit",
    "next",
    "say",
    "u",
    "ssm",
    "ec2",
    "roll",
    "okay",
    "create",
    "roll",
    "created",
    "roll",
    "go",
    "back",
    "first",
    "tab",
    "give",
    "refresh",
    "drop",
    "show",
    "go",
    "little",
    "bit",
    "could",
    "turn",
    "extra",
    "monitoring",
    "monitoring",
    "built",
    "wanted",
    "uh",
    "monitor",
    "lower",
    "uh",
    "like",
    "frequently",
    "could",
    "well",
    "want",
    "share",
    "tendency",
    "right",
    "change",
    "dedicated",
    "instance",
    "dedicated",
    "host",
    "obviously",
    "cost",
    "going",
    "stick",
    "shared",
    "elastic",
    "inference",
    "um",
    "uh",
    "attaching",
    "fractional",
    "gpu",
    "great",
    "ml",
    "something",
    "want",
    "credit",
    "specification",
    "remember",
    "seeing",
    "selecting",
    "unlimited",
    "credit",
    "specification",
    "allows",
    "burst",
    "beyond",
    "baseline",
    "bursting",
    "attach",
    "uh",
    "efs",
    "uh",
    "need",
    "file",
    "system",
    "want",
    "mount",
    "attach",
    "um",
    "enclave",
    "option",
    "nitro",
    "enclave",
    "enables",
    "create",
    "isolated",
    "compute",
    "environments",
    "protect",
    "uh",
    "securely",
    "process",
    "highly",
    "sensitive",
    "data",
    "might",
    "something",
    "might",
    "want",
    "checkbox",
    "um",
    "based",
    "use",
    "case",
    "ability",
    "enter",
    "user",
    "data",
    "something",
    "want",
    "want",
    "install",
    "aachi",
    "something",
    "work",
    "going",
    "make",
    "shebang",
    "pound",
    "exclamation",
    "mark",
    "know",
    "really",
    "small",
    "try",
    "bump",
    "font",
    "see",
    "going",
    "forward",
    "sl",
    "bin",
    "sl",
    "bash",
    "next",
    "line",
    "going",
    "yum",
    "install",
    "hyphen",
    "httpd",
    "um",
    "going",
    "install",
    "apachi",
    "called",
    "apache",
    "know",
    "call",
    "http",
    "apachi",
    "name",
    "say",
    "system",
    "ctl",
    "start",
    "httpd",
    "system",
    "ctl",
    "enable",
    "htpd",
    "saying",
    "start",
    "apachi",
    "make",
    "sure",
    "stays",
    "running",
    "restart",
    "machine",
    "simple",
    "go",
    "storage",
    "say",
    "add",
    "storage",
    "8",
    "gigabytes",
    "default",
    "could",
    "uh",
    "uh",
    "turn",
    "30",
    "like",
    "go",
    "way",
    "30",
    "like",
    "um",
    "might",
    "want",
    "going",
    "leave",
    "8",
    "could",
    "change",
    "volume",
    "type",
    "fine",
    "gp2",
    "cost",
    "effective",
    "want",
    "turn",
    "encryption",
    "always",
    "turn",
    "encryption",
    "reason",
    "turn",
    "like",
    "going",
    "cost",
    "going",
    "cost",
    "choice",
    "want",
    "add",
    "tag",
    "yes",
    "going",
    "add",
    "name",
    "going",
    "say",
    "ec2",
    "instance",
    "okay",
    "going",
    "give",
    "us",
    "name",
    "something",
    "would",
    "really",
    "like",
    "security",
    "group",
    "going",
    "create",
    "new",
    "security",
    "group",
    "called",
    "um",
    "um",
    "ec2",
    "sg",
    "say",
    "ec2",
    "sg",
    "something",
    "rename",
    "security",
    "group",
    "made",
    "make",
    "sure",
    "make",
    "spelling",
    "mistake",
    "want",
    "uh",
    "accessing",
    "httt",
    "htt",
    "going",
    "launch",
    "website",
    "order",
    "need",
    "make",
    "sure",
    "http",
    "type",
    "port",
    "ad",
    "open",
    "want",
    "anywhere",
    "say",
    "anywhere",
    "forze",
    "0",
    "ipv4",
    "ipv6",
    "okay",
    "say",
    "internet",
    "ssh",
    "right",
    "um",
    "would",
    "probably",
    "suggest",
    "say",
    "ip",
    "since",
    "might",
    "using",
    "cloud",
    "shell",
    "going",
    "leave",
    "anywhere",
    "issues",
    "connecting",
    "review",
    "launch",
    "review",
    "going",
    "going",
    "say",
    "hey",
    "open",
    "port",
    "okay",
    "want",
    "internet",
    "see",
    "website",
    "cuz",
    "whole",
    "point",
    "go",
    "ahead",
    "launch",
    "going",
    "ask",
    "key",
    "pair",
    "go",
    "say",
    "proceed",
    "without",
    "key",
    "pair",
    "going",
    "going",
    "create",
    "new",
    "key",
    "pair",
    "want",
    "show",
    "work",
    "sure",
    "already",
    "done",
    "course",
    "going",
    "name",
    "ec2",
    "instance",
    "going",
    "go",
    "download",
    "key",
    "pair",
    "going",
    "download",
    "pm",
    "file",
    "go",
    "ahead",
    "launch",
    "instance",
    "launching",
    "going",
    "close",
    "going",
    "click",
    "view",
    "instances",
    "instance",
    "put",
    "tag",
    "could",
    "name",
    "going",
    "wait",
    "start",
    "going",
    "going",
    "make",
    "new",
    "tab",
    "right",
    "clicking",
    "logo",
    "click",
    "anywhere",
    "pretty",
    "much",
    "uh",
    "click",
    "cloud",
    "shell",
    "going",
    "want",
    "take",
    "pen",
    "going",
    "move",
    "desktop",
    "make",
    "easier",
    "upload",
    "screen",
    "okay",
    "uh",
    "environment",
    "running",
    "going",
    "go",
    "ahead",
    "upload",
    "okay",
    "give",
    "moment",
    "also",
    "waiting",
    "server",
    "spin",
    "notice",
    "public",
    "ip",
    "address",
    "says",
    "running",
    "want",
    "copy",
    "looking",
    "two",
    "checks",
    "pass",
    "server",
    "could",
    "available",
    "generally",
    "want",
    "wait",
    "two",
    "system",
    "checks",
    "one",
    "says",
    "hey",
    "hardware",
    "fine",
    "network",
    "fine",
    "things",
    "like",
    "okay",
    "take",
    "ip",
    "address",
    "paste",
    "web",
    "page",
    "working",
    "uh",
    "problem",
    "great",
    "go",
    "cloud",
    "shell",
    "still",
    "starting",
    "uh",
    "fastest",
    "um",
    "know",
    "get",
    "going",
    "second",
    "soon",
    "decides",
    "load",
    "go",
    "loaded",
    "type",
    "clear",
    "clear",
    "screen",
    "want",
    "upload",
    "pen",
    "file",
    "going",
    "go",
    "upload",
    "file",
    "going",
    "go",
    "ahead",
    "select",
    "going",
    "go",
    "desktop",
    "whoops",
    "desktop",
    "going",
    "choose",
    "ec2",
    "instance",
    "pen",
    "right",
    "hit",
    "upload",
    "going",
    "upload",
    "pem",
    "file",
    "uploaded",
    "going",
    "ls",
    "okay",
    "uh",
    "previous",
    "tutorial",
    "going",
    "go",
    "ahead",
    "delete",
    "one",
    "say",
    "remove",
    "efs",
    "example",
    "pem",
    "yes",
    "okay",
    "type",
    "clear",
    "type",
    "chamod",
    "um",
    "believe",
    "400",
    "call",
    "ec2",
    "instance",
    "pen",
    "hit",
    "tab",
    "autocomplete",
    "nice",
    "lsen",
    "la",
    "take",
    "look",
    "file",
    "see",
    "look",
    "like",
    "one",
    "r",
    "idea",
    "locking",
    "writable",
    "executable",
    "readable",
    "want",
    "ssh",
    "want",
    "ssh",
    "hit",
    "connect",
    "button",
    "four",
    "options",
    "give",
    "many",
    "options",
    "going",
    "fifth",
    "one",
    "sure",
    "soon",
    "right",
    "talking",
    "ssh",
    "ssh",
    "um",
    "chamod",
    "file",
    "need",
    "use",
    "dns",
    "connect",
    "full",
    "line",
    "click",
    "copy",
    "paste",
    "everything",
    "noce",
    "ec2",
    "user",
    "followed",
    "could",
    "put",
    "ip",
    "address",
    "instead",
    "preferred",
    "could",
    "go",
    "take",
    "ip",
    "address",
    "think",
    "shorter",
    "nicer",
    "um",
    "know",
    "click",
    "one",
    "button",
    "works",
    "fine",
    "always",
    "accept",
    "uh",
    "fingerprint",
    "inside",
    "instance",
    "type",
    "see",
    "user",
    "ec2",
    "user",
    "user",
    "ads",
    "creates",
    "amazon",
    "linux",
    "instances",
    "um",
    "going",
    "vary",
    "per",
    "um",
    "ami",
    "amis",
    "ec2",
    "user",
    "might",
    "something",
    "else",
    "generally",
    "ones",
    "aus",
    "uses",
    "supported",
    "ones",
    "um",
    "ls",
    "server",
    "right",
    "tell",
    "says",
    "right",
    "pwd",
    "kind",
    "kind",
    "look",
    "around",
    "think",
    "going",
    "var",
    "ww",
    "ht",
    "httpd",
    "apachi",
    "always",
    "uh",
    "puts",
    "files",
    "go",
    "whoops",
    "looking",
    "um",
    "index",
    "file",
    "thought",
    "index",
    "file",
    "cdar",
    "ww",
    "h",
    "html",
    "well",
    "heck",
    "going",
    "touch",
    "file",
    "see",
    "overrides",
    "oh",
    "care",
    "type",
    "pseudo",
    "try",
    "restart",
    "system",
    "ctl",
    "um",
    "similar",
    "command",
    "like",
    "uh",
    "service",
    "always",
    "forget",
    "order",
    "think",
    "checking",
    "um",
    "probably",
    "uh",
    "restart",
    "httpd",
    "failed",
    "restart",
    "policy",
    "provided",
    "name",
    "service",
    "um",
    "service",
    "uh",
    "maybe",
    "pseudo",
    "go",
    "go",
    "back",
    "going",
    "see",
    "changed",
    "take",
    "whatever",
    "index",
    "html",
    "file",
    "file",
    "going",
    "uh",
    "show",
    "edit",
    "file",
    "going",
    "type",
    "vi",
    "index",
    "html",
    "um",
    "going",
    "hit",
    "insert",
    "mode",
    "oh",
    "says",
    "readon",
    "q",
    "uh",
    "colon",
    "q",
    "quit",
    "oops",
    "uh",
    "clear",
    "ls",
    "need",
    "pseudo",
    "vi",
    "index",
    "html",
    "vim",
    "every",
    "single",
    "key",
    "hotkey",
    "okay",
    "um",
    "teaching",
    "vim",
    "going",
    "teach",
    "basics",
    "idea",
    "notice",
    "cursor",
    "blinking",
    "hit",
    "enters",
    "insert",
    "mode",
    "type",
    "normally",
    "say",
    "hello",
    "uh",
    "hello",
    "cloud",
    "okay",
    "going",
    "hit",
    "escape",
    "go",
    "back",
    "um",
    "navigation",
    "mode",
    "whatever",
    "want",
    "call",
    "going",
    "hit",
    "colon",
    "brings",
    "command",
    "going",
    "type",
    "uh",
    "write",
    "quit",
    "okay",
    "hit",
    "enter",
    "type",
    "clear",
    "whoops",
    "clear",
    "hit",
    "till",
    "get",
    "command",
    "pseudo",
    "system",
    "ctl",
    "restart",
    "hbd",
    "hit",
    "hit",
    "enter",
    "okay",
    "restart",
    "pretty",
    "fast",
    "says",
    "hello",
    "cloud",
    "probably",
    "even",
    "restart",
    "anyway",
    "instance",
    "uh",
    "see",
    "updating",
    "want",
    "sanity",
    "check",
    "make",
    "sure",
    "restart",
    "instance",
    "going",
    "able",
    "um",
    "aachi",
    "running",
    "something",
    "always",
    "app",
    "anything",
    "install",
    "restart",
    "server",
    "make",
    "sure",
    "everything",
    "works",
    "going",
    "uh",
    "hit",
    "hit",
    "exit",
    "go",
    "back",
    "top",
    "level",
    "cloudshell",
    "type",
    "clear",
    "going",
    "go",
    "back",
    "ec2",
    "instance",
    "going",
    "click",
    "around",
    "find",
    "want",
    "reboot",
    "okay",
    "reboot",
    "machine",
    "ip",
    "address",
    "going",
    "stay",
    "okay",
    "reboot",
    "ip",
    "address",
    "going",
    "stay",
    "reboot",
    "going",
    "happen",
    "really",
    "fast",
    "want",
    "observe",
    "reboot",
    "could",
    "go",
    "um",
    "right",
    "hand",
    "side",
    "go",
    "system",
    "log",
    "would",
    "show",
    "us",
    "rebooted",
    "think",
    "yeah",
    "cloud",
    "think",
    "rebooted",
    "sure",
    "um",
    "anyway",
    "rebooted",
    "go",
    "ahead",
    "connect",
    "make",
    "sure",
    "everything",
    "fine",
    "let",
    "go",
    "hit",
    "enter",
    "let",
    "see",
    "web",
    "page",
    "notice",
    "hanging",
    "right",
    "probably",
    "still",
    "restarting",
    "even",
    "though",
    "look",
    "like",
    "something",
    "understand",
    "cloud",
    "think",
    "confidence",
    "happening",
    "also",
    "double",
    "check",
    "uh",
    "something",
    "kind",
    "frustrating",
    "globally",
    "available",
    "services",
    "uh",
    "uh",
    "massively",
    "scalable",
    "one",
    "always",
    "uh",
    "responsive",
    "uh",
    "uis",
    "ads",
    "one",
    "responsive",
    "uis",
    "major",
    "providers",
    "even",
    "still",
    "like",
    "sometimes",
    "second",
    "guess",
    "page",
    "uh",
    "right",
    "working",
    "fine",
    "took",
    "time",
    "reboot",
    "um",
    "want",
    "connect",
    "different",
    "way",
    "going",
    "go",
    "going",
    "hit",
    "um",
    "going",
    "checkbox",
    "going",
    "hit",
    "connect",
    "instead",
    "using",
    "ssh",
    "client",
    "going",
    "go",
    "sessions",
    "manager",
    "hit",
    "connect",
    "preferred",
    "way",
    "connecting",
    "ssh",
    "key",
    "lot",
    "secure",
    "someone",
    "key",
    "know",
    "hand",
    "someone",
    "could",
    "hand",
    "somebody",
    "else",
    "big",
    "problem",
    "hands",
    "looks",
    "similar",
    "type",
    "actually",
    "logs",
    "ssm",
    "user",
    "kind",
    "annoying",
    "type",
    "p",
    "sudo",
    "su",
    "hyphen",
    "going",
    "say",
    "user",
    "want",
    "ec2",
    "user",
    "type",
    "correct",
    "user",
    "ca",
    "anything",
    "ssm",
    "hyphen",
    "user",
    "ssm",
    "user",
    "got",
    "switch",
    "bump",
    "make",
    "bit",
    "larger",
    "obviously",
    "nice",
    "working",
    "even",
    "terminal",
    "lot",
    "secure",
    "tracked",
    "things",
    "really",
    "using",
    "okay",
    "um",
    "really",
    "like",
    "bump",
    "html",
    "going",
    "go",
    "back",
    "zero",
    "probably",
    "like",
    "way",
    "configure",
    "anyway",
    "uh",
    "let",
    "go",
    "take",
    "look",
    "file",
    "going",
    "type",
    "vi",
    "going",
    "var",
    "www",
    "html",
    "index",
    "html",
    "going",
    "put",
    "pseudo",
    "front",
    "remember",
    "hit",
    "go",
    "insert",
    "mode",
    "uh",
    "going",
    "take",
    "capitalize",
    "hello",
    "cloud",
    "give",
    "exclamation",
    "mark",
    "colon",
    "wq",
    "quit",
    "right",
    "quick",
    "going",
    "go",
    "back",
    "refresh",
    "okay",
    "restart",
    "server",
    "nice",
    "right",
    "um",
    "pretty",
    "clear",
    "hit",
    "terminate",
    "think",
    "need",
    "cloud",
    "shell",
    "anything",
    "going",
    "close",
    "pretty",
    "much",
    "comes",
    "working",
    "ec2",
    "instance",
    "next",
    "thing",
    "want",
    "show",
    "elastic",
    "ip",
    "music",
    "okay",
    "okay",
    "want",
    "show",
    "elastic",
    "ip",
    "uh",
    "commonly",
    "abbreviated",
    "eip",
    "um",
    "static",
    "ip",
    "ip",
    "change",
    "ec2",
    "instance",
    "notice",
    "54",
    "163",
    "4104",
    "would",
    "happen",
    "stop",
    "instance",
    "reboot",
    "stop",
    "whatever",
    "reason",
    "um",
    "whatever",
    "reason",
    "stop",
    "instance",
    "restart",
    "okay",
    "uh",
    "wait",
    "stop",
    "ip",
    "address",
    "going",
    "change",
    "okay",
    "54",
    "1634",
    "104",
    "hopefully",
    "observe",
    "going",
    "write",
    "forget",
    "prove",
    "change",
    "still",
    "stopping",
    "stopping",
    "going",
    "go",
    "ahead",
    "get",
    "elastic",
    "ip",
    "prove",
    "go",
    "going",
    "go",
    "want",
    "reserve",
    "allocate",
    "elastic",
    "ip",
    "address",
    "going",
    "say",
    "us",
    "east",
    "one",
    "going",
    "say",
    "amazon",
    "pool",
    "ipv4",
    "addresses",
    "adabs",
    "bunch",
    "ip",
    "addresses",
    "holding",
    "allocate",
    "one",
    "allocated",
    "ip",
    "address",
    "coming",
    "back",
    "okay",
    "stopped",
    "notice",
    "public",
    "ip",
    "address",
    "going",
    "start",
    "okay",
    "checkbox",
    "wait",
    "little",
    "see",
    "ip",
    "address",
    "going",
    "going",
    "tell",
    "going",
    "something",
    "else",
    "go",
    "back",
    "54",
    "2352",
    "1110",
    "original",
    "one",
    "54",
    "1634",
    "104",
    "reason",
    "important",
    "address",
    "uh",
    "load",
    "balancer",
    "well",
    "load",
    "balcer",
    "domain",
    "pointing",
    "uh",
    "server",
    "reboot",
    "dang",
    "dangling",
    "um",
    "path",
    "route",
    "revue",
    "3",
    "going",
    "pointing",
    "nothing",
    "adus",
    "things",
    "mitigate",
    "like",
    "aliases",
    "things",
    "like",
    "um",
    "general",
    "know",
    "cases",
    "static",
    "ip",
    "address",
    "allocated",
    "one",
    "want",
    "assign",
    "going",
    "associate",
    "elastic",
    "ip",
    "address",
    "going",
    "drop",
    "choose",
    "cc2",
    "instance",
    "um",
    "suppose",
    "private",
    "ip",
    "well",
    "going",
    "go",
    "ahead",
    "hit",
    "allocate",
    "associate",
    "associated",
    "34",
    "199",
    "121",
    "116",
    "go",
    "going",
    "take",
    "look",
    "ip",
    "address",
    "pull",
    "okay",
    "yeah",
    "thetic",
    "music",
    "ip",
    "okay",
    "um",
    "lastic",
    "ip",
    "ec2",
    "instance",
    "running",
    "let",
    "say",
    "um",
    "know",
    "lose",
    "server",
    "terminate",
    "would",
    "lose",
    "configuration",
    "wanted",
    "bake",
    "ami",
    "save",
    "later",
    "go",
    "create",
    "image",
    "go",
    "top",
    "go",
    "images",
    "templates",
    "create",
    "image",
    "create",
    "template",
    "lot",
    "better",
    "time",
    "going",
    "go",
    "ahead",
    "create",
    "image",
    "create",
    "image",
    "basically",
    "creating",
    "ami",
    "going",
    "say",
    "uh",
    "ec2",
    "going",
    "go",
    "0",
    "0",
    "0",
    "kind",
    "like",
    "number",
    "common",
    "numbering",
    "three",
    "zeros",
    "inc",
    "one",
    "say",
    "apachi",
    "server",
    "going",
    "save",
    "settings",
    "like",
    "fact",
    "volume",
    "could",
    "uh",
    "save",
    "tags",
    "might",
    "go",
    "ahead",
    "add",
    "tag",
    "say",
    "name",
    "say",
    "ec2",
    "server",
    "remembers",
    "okay",
    "go",
    "ahead",
    "create",
    "image",
    "take",
    "little",
    "bit",
    "time",
    "go",
    "uh",
    "images",
    "going",
    "spinning",
    "uh",
    "wait",
    "done",
    "okay",
    "right",
    "waiting",
    "little",
    "ami",
    "ready",
    "waiting",
    "go",
    "available",
    "see",
    "make",
    "sure",
    "hit",
    "refresh",
    "um",
    "sometimes",
    "ads",
    "spin",
    "forever",
    "um",
    "something",
    "know",
    "hopefully",
    "makes",
    "sense",
    "go",
    "make",
    "way",
    "back",
    "instances",
    "launch",
    "one",
    "way",
    "well",
    "actually",
    "um",
    "ami",
    "page",
    "going",
    "terminate",
    "instance",
    "done",
    "okay",
    "hit",
    "terminate",
    "totally",
    "fine",
    "message",
    "elastic",
    "ips",
    "releasing",
    "elastic",
    "ip",
    "still",
    "release",
    "going",
    "go",
    "ahead",
    "disassociate",
    "elastic",
    "ip",
    "okay",
    "also",
    "going",
    "release",
    "ip",
    "address",
    "going",
    "ip",
    "address",
    "sticking",
    "around",
    "using",
    "going",
    "charge",
    "us",
    "dollar",
    "month",
    "month",
    "aware",
    "kind",
    "like",
    "hidden",
    "cost",
    "going",
    "go",
    "ami",
    "going",
    "select",
    "going",
    "go",
    "actions",
    "going",
    "go",
    "ahead",
    "launch",
    "going",
    "make",
    "us",
    "fill",
    "stuff",
    "made",
    "launch",
    "template",
    "uh",
    "would",
    "fill",
    "stuff",
    "part",
    "trying",
    "show",
    "ami",
    "stuff",
    "um",
    "instead",
    "filling",
    "going",
    "go",
    "create",
    "launch",
    "template",
    "kind",
    "show",
    "would",
    "much",
    "easier",
    "way",
    "work",
    "go",
    "e2",
    "instance",
    "es",
    "left",
    "hand",
    "side",
    "looking",
    "launch",
    "template",
    "launch",
    "launch",
    "configurations",
    "old",
    "thing",
    "um",
    "launch",
    "templates",
    "go",
    "create",
    "launch",
    "template",
    "say",
    "apachi",
    "server",
    "need",
    "choose",
    "ami",
    "going",
    "go",
    "need",
    "type",
    "call",
    "ec2",
    "really",
    "like",
    "uh",
    "search",
    "slow",
    "frustrating",
    "find",
    "whoops",
    "like",
    "lot",
    "times",
    "loading",
    "end",
    "clicking",
    "wrong",
    "thing",
    "okay",
    "like",
    "okay",
    "type",
    "give",
    "second",
    "wait",
    "keep",
    "loading",
    "loaded",
    "hit",
    "enter",
    "instance",
    "selected",
    "uh",
    "include",
    "launch",
    "template",
    "could",
    "explicit",
    "would",
    "say",
    "want",
    "22",
    "t2",
    "micro",
    "could",
    "exclude",
    "wanted",
    "could",
    "specify",
    "key",
    "pair",
    "um",
    "really",
    "want",
    "use",
    "key",
    "pairs",
    "say",
    "ec2",
    "instance",
    "networking",
    "specify",
    "uh",
    "security",
    "group",
    "created",
    "created",
    "one",
    "called",
    "ec2",
    "sg",
    "um",
    "storage",
    "fine",
    "going",
    "encrypted",
    "network",
    "interface",
    "fine",
    "advanced",
    "details",
    "want",
    "set",
    "im",
    "instance",
    "profile",
    "really",
    "important",
    "want",
    "figure",
    "roll",
    "every",
    "single",
    "time",
    "put",
    "everything",
    "could",
    "put",
    "user",
    "data",
    "already",
    "baked",
    "ami",
    "worry",
    "anything",
    "going",
    "go",
    "ahead",
    "create",
    "launch",
    "template",
    "going",
    "view",
    "launch",
    "template",
    "use",
    "launch",
    "instance",
    "okay",
    "going",
    "look",
    "similar",
    "dc2",
    "except",
    "vertical",
    "going",
    "one",
    "instance",
    "going",
    "use",
    "ami",
    "instance",
    "type",
    "see",
    "override",
    "nice",
    "going",
    "check",
    "advanced",
    "details",
    "make",
    "sure",
    "profile",
    "set",
    "go",
    "ahead",
    "launch",
    "template",
    "go",
    "ahead",
    "click",
    "instance",
    "value",
    "aware",
    "click",
    "links",
    "like",
    "end",
    "search",
    "always",
    "checkbox",
    "see",
    "waiting",
    "instance",
    "show",
    "thing",
    "noticed",
    "set",
    "darn",
    "tags",
    "wanted",
    "name",
    "think",
    "said",
    "ami",
    "carry",
    "launch",
    "template",
    "go",
    "back",
    "launch",
    "template",
    "update",
    "probably",
    "go",
    "launch",
    "template",
    "um",
    "probably",
    "modify",
    "create",
    "new",
    "version",
    "add",
    "tags",
    "say",
    "name",
    "uh",
    "uh",
    "apachi",
    "server",
    "realize",
    "changing",
    "allow",
    "us",
    "version",
    "two",
    "create",
    "anyway",
    "next",
    "time",
    "launch",
    "okay",
    "instance",
    "running",
    "going",
    "go",
    "grab",
    "ip",
    "address",
    "server",
    "may",
    "may",
    "ready",
    "take",
    "look",
    "spinning",
    "spinning",
    "either",
    "server",
    "ready",
    "um",
    "ports",
    "open",
    "getting",
    "ready",
    "work",
    "working",
    "launch",
    "template",
    "know",
    "worry",
    "losing",
    "stuff",
    "need",
    "make",
    "new",
    "versions",
    "b",
    "new",
    "amis",
    "increment",
    "uh",
    "inc",
    "attach",
    "new",
    "versions",
    "launch",
    "template",
    "music",
    "okay",
    "right",
    "want",
    "show",
    "follow",
    "along",
    "set",
    "autoscaling",
    "group",
    "ec2",
    "instance",
    "idea",
    "behind",
    "um",
    "able",
    "always",
    "ensure",
    "single",
    "server",
    "running",
    "uh",
    "increase",
    "capacity",
    "demand",
    "requires",
    "order",
    "create",
    "autoscaling",
    "group",
    "go",
    "way",
    "um",
    "know",
    "really",
    "like",
    "autos",
    "scaling",
    "group",
    "form",
    "okay",
    "work",
    "way",
    "first",
    "thing",
    "create",
    "name",
    "autoc",
    "scan",
    "group",
    "say",
    "asg",
    "select",
    "launch",
    "template",
    "great",
    "already",
    "one",
    "select",
    "version",
    "going",
    "select",
    "version",
    "two",
    "applies",
    "tag",
    "name",
    "go",
    "next",
    "um",
    "going",
    "need",
    "select",
    "vpc",
    "need",
    "subnets",
    "going",
    "choose",
    "three",
    "high",
    "availability",
    "running",
    "least",
    "three",
    "different",
    "availability",
    "zones",
    "three",
    "different",
    "subnets",
    "instance",
    "type",
    "requirements",
    "uh",
    "t2",
    "micro",
    "launch",
    "template",
    "looks",
    "good",
    "go",
    "ahead",
    "hit",
    "next",
    "choose",
    "load",
    "balancer",
    "want",
    "load",
    "balancer",
    "separate",
    "wo",
    "yet",
    "often",
    "going",
    "group",
    "going",
    "usually",
    "load",
    "balancer",
    "talk",
    "get",
    "point",
    "go",
    "bottom",
    "hit",
    "next",
    "important",
    "many",
    "want",
    "always",
    "running",
    "always",
    "want",
    "one",
    "maybe",
    "maximum",
    "capacity",
    "two",
    "want",
    "desired",
    "c",
    "capacity",
    "around",
    "particular",
    "number",
    "three",
    "said",
    "desired",
    "two",
    "um",
    "things",
    "could",
    "try",
    "work",
    "always",
    "make",
    "sure",
    "two",
    "want",
    "one",
    "example",
    "set",
    "scaling",
    "policy",
    "target",
    "tracking",
    "scaling",
    "policy",
    "could",
    "based",
    "bunch",
    "different",
    "things",
    "cp",
    "utilization",
    "went",
    "50",
    "would",
    "launch",
    "another",
    "server",
    "might",
    "something",
    "might",
    "want",
    "set",
    "going",
    "uh",
    "try",
    "trigger",
    "scaling",
    "policy",
    "might",
    "well",
    "apply",
    "hard",
    "also",
    "scaling",
    "uh",
    "scale",
    "protection",
    "policy",
    "want",
    "make",
    "sure",
    "um",
    "uh",
    "reduce",
    "amount",
    "servers",
    "something",
    "could",
    "add",
    "notification",
    "say",
    "hey",
    "scaling",
    "policy",
    "happening",
    "fine",
    "worry",
    "um",
    "tags",
    "add",
    "tags",
    "help",
    "search",
    "filter",
    "etc",
    "um",
    "going",
    "put",
    "tag",
    "going",
    "say",
    "name",
    "wondering",
    "going",
    "attach",
    "ec2",
    "autos",
    "scaling",
    "group",
    "optionally",
    "choose",
    "add",
    "tags",
    "instances",
    "specifying",
    "tags",
    "launch",
    "templates",
    "already",
    "need",
    "put",
    "tag",
    "review",
    "um",
    "auto",
    "scaling",
    "group",
    "go",
    "ahead",
    "create",
    "auto",
    "scaling",
    "group",
    "okay",
    "auto",
    "scaling",
    "group",
    "expects",
    "single",
    "instance",
    "going",
    "going",
    "start",
    "launching",
    "instance",
    "going",
    "get",
    "rid",
    "old",
    "server",
    "need",
    "anymore",
    "old",
    "one",
    "okay",
    "already",
    "see",
    "okay",
    "load",
    "balancer",
    "launching",
    "new",
    "one",
    "remember",
    "updated",
    "version",
    "two",
    "name",
    "know",
    "go",
    "back",
    "autoscaling",
    "group",
    "okay",
    "saying",
    "instance",
    "status",
    "yet",
    "ways",
    "uh",
    "status",
    "checks",
    "determine",
    "whether",
    "server",
    "working",
    "um",
    "server",
    "unhealthy",
    "would",
    "would",
    "actually",
    "kill",
    "start",
    "new",
    "one",
    "right",
    "go",
    "right",
    "ec2",
    "health",
    "check",
    "ec2",
    "health",
    "check",
    "means",
    "server",
    "working",
    "right",
    "um",
    "running",
    "necessarily",
    "mean",
    "like",
    "hey",
    "load",
    "web",
    "app",
    "um",
    "know",
    "simple",
    "give",
    "moment",
    "start",
    "make",
    "sure",
    "working",
    "okay",
    "think",
    "ready",
    "take",
    "public",
    "ip",
    "address",
    "paste",
    "okay",
    "tell",
    "increase",
    "capacity",
    "three",
    "would",
    "would",
    "launch",
    "three",
    "probably",
    "launch",
    "evenly",
    "evenly",
    "launch",
    "uh",
    "availability",
    "zones",
    "something",
    "highly",
    "available",
    "okay",
    "pretty",
    "much",
    "move",
    "autos",
    "scaling",
    "music",
    "groups",
    "right",
    "uh",
    "ec2",
    "instance",
    "managed",
    "autos",
    "scaling",
    "group",
    "great",
    "thing",
    "terminate",
    "instance",
    "auto",
    "scaling",
    "group",
    "launch",
    "another",
    "uh",
    "instance",
    "meet",
    "particular",
    "capacity",
    "um",
    "thing",
    "though",
    "multiple",
    "e2",
    "instances",
    "running",
    "like",
    "three",
    "um",
    "would",
    "distribute",
    "traffic",
    "mall",
    "right",
    "know",
    "ip",
    "address",
    "coming",
    "internet",
    "uh",
    "let",
    "say",
    "want",
    "evenly",
    "distribute",
    "load",
    "bouncer",
    "comes",
    "play",
    "even",
    "single",
    "server",
    "always",
    "load",
    "bouncer",
    "makes",
    "lot",
    "easier",
    "scale",
    "need",
    "acts",
    "intermediate",
    "layer",
    "attach",
    "web",
    "application",
    "firewall",
    "attach",
    "ssl",
    "certificate",
    "free",
    "lot",
    "reasons",
    "load",
    "balancer",
    "go",
    "left",
    "hand",
    "side",
    "going",
    "make",
    "way",
    "load",
    "bouncers",
    "going",
    "create",
    "new",
    "load",
    "boun",
    "bcer",
    "going",
    "hit",
    "create",
    "load",
    "balcer",
    "going",
    "see",
    "lot",
    "options",
    "application",
    "load",
    "balcer",
    "network",
    "load",
    "balcer",
    "gateway",
    "load",
    "balcer",
    "classic",
    "load",
    "bouncer",
    "uh",
    "running",
    "application",
    "going",
    "create",
    "application",
    "load",
    "balcer",
    "going",
    "say",
    "alb",
    "um",
    "application",
    "load",
    "balancer",
    "going",
    "internet",
    "facing",
    "going",
    "ipv4",
    "um",
    "going",
    "let",
    "launch",
    "default",
    "um",
    "subnet",
    "going",
    "choose",
    "uh",
    "uh",
    "azs",
    "right",
    "get",
    "subnets",
    "autosan",
    "group",
    "really",
    "important",
    "okay",
    "um",
    "know",
    "need",
    "security",
    "group",
    "feel",
    "like",
    "selecting",
    "one",
    "work",
    "problem",
    "want",
    "make",
    "sure",
    "listen",
    "port",
    "80",
    "going",
    "forward",
    "um",
    "target",
    "group",
    "looks",
    "like",
    "might",
    "target",
    "group",
    "reduce",
    "confusion",
    "wo",
    "problem",
    "going",
    "double",
    "check",
    "true",
    "target",
    "group",
    "yes",
    "came",
    "sure",
    "might",
    "created",
    "um",
    "elastic",
    "beanock",
    "deleted",
    "okay",
    "go",
    "back",
    "less",
    "confusion",
    "selecting",
    "target",
    "group",
    "going",
    "create",
    "new",
    "target",
    "group",
    "go",
    "choose",
    "whether",
    "instance",
    "ip",
    "lambda",
    "application",
    "load",
    "balancer",
    "could",
    "point",
    "specifically",
    "ip",
    "address",
    "static",
    "ip",
    "address",
    "would",
    "make",
    "sense",
    "uh",
    "apparently",
    "port",
    "uh",
    "point",
    "directly",
    "instances",
    "remember",
    "seeing",
    "option",
    "guess",
    "makes",
    "sense",
    "yeah",
    "sorry",
    "makes",
    "sense",
    "would",
    "go",
    "uh",
    "vpcs",
    "okay",
    "sorry",
    "uh",
    "asgs",
    "autos",
    "scaling",
    "groups",
    "pointing",
    "auto",
    "scaling",
    "groups",
    "pointing",
    "instances",
    "confusing",
    "going",
    "say",
    "um",
    "target",
    "group",
    "port",
    "80",
    "um",
    "protocol",
    "http1",
    "fine",
    "want",
    "um",
    "vpc",
    "fine",
    "well",
    "health",
    "check",
    "slash",
    "means",
    "going",
    "hit",
    "index",
    "html",
    "page",
    "gets",
    "back",
    "um",
    "something",
    "healthy",
    "something",
    "healthy",
    "going",
    "um",
    "uh",
    "port",
    "80",
    "going",
    "considered",
    "good",
    "say",
    "threshold",
    "check",
    "going",
    "reduce",
    "crazy",
    "say",
    "three",
    "uh",
    "two",
    "10",
    "okay",
    "expects",
    "back",
    "200",
    "think",
    "get",
    "back",
    "go",
    "ahead",
    "hit",
    "next",
    "target",
    "group",
    "register",
    "instances",
    "saying",
    "hey",
    "detected",
    "fits",
    "requirements",
    "uh",
    "e2",
    "instance",
    "target",
    "group",
    "okay",
    "go",
    "back",
    "drop",
    "choose",
    "whoops",
    "hit",
    "refresh",
    "button",
    "choose",
    "target",
    "group",
    "seeing",
    "going",
    "go",
    "back",
    "oh",
    "create",
    "okay",
    "go",
    "back",
    "hit",
    "refresh",
    "yeah",
    "looks",
    "good",
    "go",
    "ahead",
    "hit",
    "create",
    "load",
    "balcer",
    "view",
    "load",
    "balcers",
    "create",
    "really",
    "fast",
    "scroll",
    "access",
    "server",
    "dns",
    "name",
    "okay",
    "copy",
    "paste",
    "work",
    "yet",
    "working",
    "say",
    "look",
    "instances",
    "another",
    "way",
    "directly",
    "associate",
    "autos",
    "scaling",
    "group",
    "load",
    "balancer",
    "go",
    "hit",
    "uh",
    "edit",
    "way",
    "aha",
    "load",
    "bouncer",
    "want",
    "associate",
    "way",
    "want",
    "say",
    "target",
    "group",
    "also",
    "might",
    "well",
    "set",
    "elb",
    "going",
    "use",
    "elb",
    "tech",
    "makes",
    "autoscaling",
    "group",
    "wants",
    "uh",
    "restart",
    "server",
    "going",
    "use",
    "elb",
    "check",
    "lot",
    "sophisticated",
    "go",
    "hit",
    "update",
    "okay",
    "go",
    "back",
    "load",
    "balancer",
    "going",
    "close",
    "tabs",
    "less",
    "confusing",
    "uh",
    "load",
    "balcer",
    "think",
    "able",
    "see",
    "whether",
    "seeing",
    "let",
    "go",
    "listeners",
    "monitoring",
    "integrated",
    "services",
    "going",
    "target",
    "group",
    "okay",
    "mean",
    "already",
    "maybe",
    "finished",
    "check",
    "health",
    "status",
    "check",
    "oh",
    "healthy",
    "okay",
    "healthy",
    "target",
    "group",
    "load",
    "bouncer",
    "point",
    "technically",
    "work",
    "going",
    "go",
    "ahead",
    "uh",
    "copy",
    "dns",
    "make",
    "new",
    "tab",
    "paste",
    "okay",
    "going",
    "access",
    "um",
    "instances",
    "within",
    "autoc",
    "groups",
    "going",
    "always",
    "go",
    "dns",
    "row",
    "53",
    "uh",
    "domain",
    "like",
    "domain",
    "managed",
    "aws",
    "point",
    "load",
    "balancer",
    "hook",
    "pretty",
    "much",
    "yeah",
    "music",
    "go",
    "right",
    "go",
    "learned",
    "everything",
    "wanted",
    "know",
    "ec2",
    "last",
    "thing",
    "tear",
    "everything",
    "load",
    "balancer",
    "autoc",
    "scanner",
    "group",
    "um",
    "two",
    "things",
    "pull",
    "first",
    "thing",
    "would",
    "take",
    "autoscaling",
    "group",
    "delete",
    "autoscaling",
    "group",
    "going",
    "delete",
    "ec2",
    "instances",
    "way",
    "tried",
    "delete",
    "ec2",
    "would",
    "keep",
    "spinning",
    "delete",
    "first",
    "deleting",
    "able",
    "delete",
    "load",
    "balancer",
    "going",
    "try",
    "anyway",
    "see",
    "delete",
    "time",
    "go",
    "going",
    "go",
    "ahead",
    "delete",
    "uh",
    "load",
    "balancer",
    "actually",
    "work",
    "problem",
    "going",
    "make",
    "sure",
    "elastic",
    "ips",
    "going",
    "also",
    "make",
    "sure",
    "key",
    "pairs",
    "keep",
    "key",
    "pairs",
    "around",
    "like",
    "want",
    "kind",
    "clean",
    "okay",
    "okay",
    "instance",
    "terminating",
    "got",
    "go",
    "back",
    "autos",
    "scan",
    "group",
    "click",
    "check",
    "um",
    "activity",
    "saying",
    "successful",
    "waiting",
    "elb",
    "connection",
    "draining",
    "kind",
    "annoying",
    "deleted",
    "elb",
    "nothing",
    "drain",
    "um",
    "draining",
    "make",
    "sure",
    "uh",
    "know",
    "interruptions",
    "terminating",
    "services",
    "trying",
    "smart",
    "want",
    "see",
    "saying",
    "terminating",
    "think",
    "done",
    "okay",
    "wait",
    "little",
    "okay",
    "see",
    "back",
    "moment",
    "okay",
    "right",
    "waiting",
    "long",
    "time",
    "destroy",
    "go",
    "uh",
    "load",
    "balancer",
    "going",
    "see",
    "exist",
    "connection",
    "draining",
    "thing",
    "kind",
    "annoying",
    "probably",
    "deleted",
    "load",
    "balancer",
    "first",
    "um",
    "uh",
    "autos",
    "sc",
    "group",
    "second",
    "probably",
    "connection",
    "draining",
    "turned",
    "big",
    "deal",
    "waited",
    "eventually",
    "delete",
    "pretty",
    "pretty",
    "much",
    "done",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "ec2",
    "pricing",
    "models",
    "five",
    "different",
    "ways",
    "pay",
    "ec2",
    "remember",
    "ec2",
    "virtual",
    "machines",
    "demand",
    "spot",
    "uh",
    "reserved",
    "dedicated",
    "adus",
    "savings",
    "plans",
    "look",
    "summary",
    "dive",
    "deep",
    "onto",
    "different",
    "pricing",
    "models",
    "demand",
    "paying",
    "low",
    "cost",
    "also",
    "lot",
    "flexibility",
    "plan",
    "uh",
    "paying",
    "per",
    "hour",
    "pay",
    "go",
    "model",
    "uh",
    "could",
    "paying",
    "second",
    "talk",
    "uh",
    "caveats",
    "get",
    "demand",
    "section",
    "suitable",
    "workloads",
    "going",
    "spiky",
    "unpredictable",
    "workloads",
    "uh",
    "interrupted",
    "great",
    "applications",
    "ond",
    "demand",
    "uh",
    "pricing",
    "model",
    "great",
    "need",
    "least",
    "amount",
    "commitment",
    "spot",
    "pricing",
    "see",
    "save",
    "90",
    "greatest",
    "savings",
    "models",
    "uh",
    "idea",
    "requesting",
    "spare",
    "computing",
    "capacity",
    "adus",
    "using",
    "going",
    "get",
    "savings",
    "flexible",
    "start",
    "end",
    "times",
    "uh",
    "workloads",
    "able",
    "handle",
    "interruptions",
    "servers",
    "stopped",
    "time",
    "giving",
    "priority",
    "customers",
    "uh",
    "great",
    "background",
    "jobs",
    "common",
    "like",
    "scientific",
    "computing",
    "uh",
    "jobs",
    "started",
    "stopped",
    "given",
    "time",
    "greatest",
    "amount",
    "savings",
    "reserve",
    "reserved",
    "instances",
    "allows",
    "save",
    "75",
    "great",
    "steady",
    "state",
    "pred",
    "ible",
    "usage",
    "committing",
    "uh",
    "aws",
    "uh",
    "ec2",
    "usage",
    "period",
    "1",
    "3e",
    "terms",
    "resell",
    "uh",
    "unused",
    "reserved",
    "instances",
    "totally",
    "stuck",
    "buy",
    "great",
    "best",
    "savings",
    "dedicated",
    "dedicated",
    "servers",
    "technically",
    "pricing",
    "model",
    "fact",
    "utilized",
    "pricing",
    "models",
    "um",
    "idea",
    "used",
    "demand",
    "reserved",
    "even",
    "spot",
    "great",
    "need",
    "uh",
    "guarantee",
    "isolate",
    "hardware",
    "enterprise",
    "requirements",
    "going",
    "expensive",
    "uh",
    "yeah",
    "go",
    "dive",
    "deep",
    "music",
    "okay",
    "demand",
    "pricing",
    "model",
    "pay",
    "go",
    "model",
    "consume",
    "compute",
    "pay",
    "later",
    "launch",
    "ec2",
    "instance",
    "default",
    "using",
    "demand",
    "pricing",
    "demand",
    "upfront",
    "payment",
    "long",
    "commitment",
    "charged",
    "second",
    "minimum",
    "60",
    "seconds",
    "technically",
    "minute",
    "hour",
    "let",
    "talk",
    "difference",
    "uh",
    "per",
    "second",
    "billing",
    "per",
    "hour",
    "billing",
    "per",
    "second",
    "linux",
    "windows",
    "windows",
    "sql",
    "enterprise",
    "windows",
    "sql",
    "standard",
    "windows",
    "sql",
    "web",
    "instances",
    "separate",
    "hourly",
    "charge",
    "everything",
    "else",
    "going",
    "um",
    "per",
    "hour",
    "know",
    "launching",
    "ec2",
    "instance",
    "ca",
    "ca",
    "even",
    "tell",
    "something",
    "per",
    "second",
    "per",
    "hour",
    "know",
    "separate",
    "hourly",
    "charge",
    "generally",
    "know",
    "launching",
    "things",
    "going",
    "probably",
    "perc",
    "billing",
    "look",
    "hourly",
    "uh",
    "pricing",
    "always",
    "shown",
    "hourly",
    "rate",
    "even",
    "using",
    "uh",
    "per",
    "second",
    "billing",
    "uh",
    "look",
    "pricing",
    "always",
    "going",
    "show",
    "like",
    "bill",
    "see",
    "second",
    "okay",
    "first",
    "60",
    "seconds",
    "uh",
    "demand",
    "great",
    "workloads",
    "shortterm",
    "spiky",
    "unpredictable",
    "uh",
    "new",
    "app",
    "development",
    "want",
    "experiment",
    "ready",
    "uh",
    "start",
    "saving",
    "know",
    "exactly",
    "workload",
    "going",
    "span",
    "year",
    "three",
    "going",
    "get",
    "reserved",
    "instances",
    "cover",
    "music",
    "next",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "reserved",
    "instances",
    "also",
    "known",
    "ri",
    "um",
    "bit",
    "complex",
    "topic",
    "uh",
    "know",
    "get",
    "going",
    "serve",
    "well",
    "uh",
    "multiple",
    "ad",
    "certifications",
    "let",
    "give",
    "bit",
    "attention",
    "ri",
    "designed",
    "applications",
    "steady",
    "state",
    "predictable",
    "usage",
    "required",
    "reserve",
    "capacity",
    "idea",
    "saying",
    "ads",
    "going",
    "make",
    "guaranteed",
    "commitment",
    "uh",
    "saying",
    "going",
    "use",
    "going",
    "get",
    "savings",
    "adus",
    "knows",
    "going",
    "spending",
    "money",
    "okay",
    "idea",
    "reduced",
    "pricing",
    "based",
    "kind",
    "formula",
    "term",
    "class",
    "offering",
    "ra",
    "attributes",
    "payment",
    "options",
    "technically",
    "ra",
    "tributes",
    "exactly",
    "factor",
    "fact",
    "ra",
    "tribute",
    "could",
    "like",
    "instance",
    "type",
    "size",
    "uh",
    "going",
    "put",
    "formula",
    "important",
    "component",
    "let",
    "take",
    "look",
    "uh",
    "components",
    "formula",
    "understand",
    "going",
    "save",
    "first",
    "term",
    "term",
    "uh",
    "idea",
    "longer",
    "term",
    "greater",
    "savings",
    "committing",
    "contract",
    "aws",
    "um",
    "one",
    "thing",
    "need",
    "know",
    "renew",
    "end",
    "year",
    "idea",
    "purchase",
    "expire",
    "instances",
    "going",
    "flip",
    "back",
    "demand",
    "interruptions",
    "service",
    "class",
    "offerings",
    "idea",
    "less",
    "flexible",
    "offering",
    "greater",
    "savings",
    "first",
    "standard",
    "75",
    "reduction",
    "price",
    "compared",
    "demand",
    "idea",
    "modify",
    "ra",
    "attributes",
    "talk",
    "get",
    "um",
    "ra",
    "tribute",
    "section",
    "convertible",
    "save",
    "54",
    "reduced",
    "pricing",
    "compared",
    "demand",
    "exchange",
    "ris",
    "based",
    "r",
    "attributes",
    "value",
    "greater",
    "equal",
    "value",
    "used",
    "third",
    "class",
    "called",
    "schedule",
    "longer",
    "exists",
    "come",
    "across",
    "know",
    "ads",
    "planning",
    "offering",
    "uh",
    "whatever",
    "reason",
    "sure",
    "uh",
    "payment",
    "options",
    "greater",
    "upfront",
    "greater",
    "savings",
    "upfront",
    "full",
    "payment",
    "made",
    "start",
    "term",
    "partial",
    "upfront",
    "portion",
    "cost",
    "must",
    "paid",
    "upfront",
    "remaining",
    "hours",
    "terms",
    "built",
    "discounted",
    "rate",
    "upfront",
    "build",
    "discounted",
    "hourly",
    "rate",
    "every",
    "hour",
    "within",
    "term",
    "regardless",
    "whether",
    "reserv",
    "used",
    "really",
    "great",
    "last",
    "option",
    "basically",
    "saying",
    "aws",
    "saying",
    "like",
    "going",
    "pay",
    "bill",
    "usual",
    "going",
    "tell",
    "going",
    "going",
    "save",
    "money",
    "know",
    "uh",
    "going",
    "using",
    "t2",
    "medium",
    "next",
    "year",
    "uh",
    "going",
    "save",
    "money",
    "okay",
    "okay",
    "ris",
    "shared",
    "multiple",
    "accounts",
    "within",
    "organization",
    "unused",
    "ris",
    "sold",
    "reserved",
    "instance",
    "marketplace",
    "talk",
    "limitations",
    "around",
    "get",
    "bit",
    "deeper",
    "kind",
    "show",
    "would",
    "look",
    "like",
    "inabus",
    "console",
    "updated",
    "love",
    "new",
    "uh",
    "ui",
    "idea",
    "going",
    "filter",
    "based",
    "requirements",
    "going",
    "show",
    "ris",
    "available",
    "choose",
    "desired",
    "quantity",
    "see",
    "pricing",
    "stuff",
    "going",
    "add",
    "cart",
    "going",
    "check",
    "going",
    "purchase",
    "okay",
    "music",
    "another",
    "factor",
    "formula",
    "ri",
    "attributes",
    "sometimes",
    "documentation",
    "calls",
    "r",
    "attributes",
    "sometimes",
    "call",
    "instance",
    "attributes",
    "limited",
    "based",
    "class",
    "offering",
    "uh",
    "uh",
    "affect",
    "final",
    "price",
    "ra",
    "instance",
    "four",
    "ra",
    "attributes",
    "first",
    "instance",
    "type",
    "could",
    "like",
    "m4",
    "large",
    "composed",
    "instance",
    "family",
    "m4",
    "instance",
    "size",
    "large",
    "okay",
    "region",
    "reserved",
    "instance",
    "purchased",
    "tency",
    "whether",
    "instance",
    "runs",
    "shared",
    "default",
    "uh",
    "would",
    "single",
    "tenant",
    "would",
    "dedicated",
    "hardware",
    "platform",
    "whether",
    "using",
    "windows",
    "linux",
    "even",
    "using",
    "demand",
    "course",
    "would",
    "affect",
    "pricing",
    "limitations",
    "around",
    "get",
    "dive",
    "bit",
    "deeper",
    "ri",
    "music",
    "okay",
    "right",
    "let",
    "compare",
    "regional",
    "zonal",
    "ri",
    "purchase",
    "ri",
    "determine",
    "scope",
    "uh",
    "okay",
    "going",
    "affect",
    "price",
    "going",
    "affect",
    "flexibility",
    "instance",
    "uh",
    "something",
    "decide",
    "going",
    "talk",
    "regional",
    "ri",
    "purchase",
    "regional",
    "zonal",
    "ri",
    "purchase",
    "availability",
    "zone",
    "purchase",
    "regional",
    "ri",
    "reserve",
    "capacity",
    "meaning",
    "guarantee",
    "servers",
    "available",
    "ad",
    "us",
    "runs",
    "servers",
    "uh",
    "going",
    "zonal",
    "uh",
    "reserving",
    "capacity",
    "guarantee",
    "need",
    "um",
    "terms",
    "uh",
    "az",
    "flexibility",
    "uh",
    "use",
    "regional",
    "ri",
    "within",
    "region",
    "zonal",
    "ri",
    "use",
    "particular",
    "region",
    "talking",
    "instance",
    "flexibility",
    "um",
    "apply",
    "discount",
    "uh",
    "instance",
    "family",
    "regardless",
    "size",
    "uh",
    "looking",
    "az",
    "instance",
    "flexibility",
    "okay",
    "going",
    "use",
    "exactly",
    "defined",
    "cue",
    "purchases",
    "regional",
    "r",
    "cue",
    "purchases",
    "zonal",
    "ri",
    "music",
    "go",
    "let",
    "talk",
    "ra",
    "limits",
    "limit",
    "number",
    "reserved",
    "instances",
    "purchase",
    "per",
    "month",
    "uh",
    "idea",
    "purchase",
    "20",
    "regional",
    "reserved",
    "instances",
    "per",
    "region",
    "20",
    "zonal",
    "reserved",
    "instances",
    "per",
    "region",
    "three",
    "uh",
    "60",
    "um",
    "zonal",
    "reserved",
    "instances",
    "region",
    "okay",
    "limitations",
    "regional",
    "limits",
    "exceed",
    "running",
    "demand",
    "instance",
    "limit",
    "purchasing",
    "regional",
    "reserved",
    "instances",
    "default",
    "demand",
    "limit",
    "20",
    "purchasing",
    "ri",
    "ensure",
    "demand",
    "limit",
    "equal",
    "greater",
    "ri",
    "intend",
    "purchase",
    "might",
    "even",
    "want",
    "open",
    "service",
    "uh",
    "limit",
    "increase",
    "make",
    "sure",
    "hit",
    "wall",
    "zonal",
    "limits",
    "exceed",
    "running",
    "demand",
    "uh",
    "instance",
    "limit",
    "purchasing",
    "zonal",
    "reserved",
    "instances",
    "already",
    "uh",
    "20",
    "ond",
    "demand",
    "instances",
    "purchase",
    "20",
    "zal",
    "reserved",
    "instances",
    "launch",
    "20",
    "ond",
    "demand",
    "instances",
    "match",
    "specification",
    "zonal",
    "reserved",
    "instances",
    "music",
    "go",
    "let",
    "talk",
    "capacity",
    "reservation",
    "ec2",
    "instances",
    "backed",
    "different",
    "kinds",
    "hardware",
    "finite",
    "amount",
    "servers",
    "available",
    "within",
    "availability",
    "zone",
    "per",
    "instance",
    "type",
    "family",
    "remember",
    "availability",
    "zone",
    "data",
    "center",
    "collection",
    "data",
    "centers",
    "many",
    "servers",
    "run",
    "demand",
    "great",
    "spin",
    "anything",
    "happening",
    "go",
    "launch",
    "specific",
    "ec2",
    "instant",
    "type",
    "ab",
    "like",
    "sorry",
    "right",
    "solution",
    "capacity",
    "reservation",
    "service",
    "ec2",
    "allows",
    "request",
    "uh",
    "reserve",
    "ecc",
    "instance",
    "type",
    "specific",
    "region",
    "would",
    "see",
    "select",
    "instance",
    "type",
    "platform",
    "tendency",
    "quantity",
    "might",
    "manually",
    "specify",
    "time",
    "might",
    "say",
    "okay",
    "ca",
    "get",
    "exactly",
    "want",
    "give",
    "something",
    "generally",
    "around",
    "uh",
    "kind",
    "stuff",
    "type",
    "want",
    "reserve",
    "capacity",
    "charged",
    "selected",
    "instance",
    "type",
    "demand",
    "rate",
    "whether",
    "instance",
    "running",
    "also",
    "use",
    "regional",
    "reserve",
    "instances",
    "capacity",
    "reservations",
    "benefit",
    "billing",
    "discounts",
    "go",
    "music",
    "key",
    "differences",
    "standard",
    "convertible",
    "ri",
    "let",
    "take",
    "look",
    "first",
    "standard",
    "ri",
    "modify",
    "tributes",
    "change",
    "within",
    "region",
    "change",
    "scope",
    "uh",
    "zonal",
    "r",
    "original",
    "ri",
    "vice",
    "versa",
    "change",
    "instance",
    "size",
    "uh",
    "long",
    "linux",
    "default",
    "tendency",
    "change",
    "network",
    "ec2",
    "classic",
    "vpc",
    "vice",
    "versa",
    "looking",
    "convertible",
    "modify",
    "ra",
    "tributes",
    "perform",
    "exchange",
    "okay",
    "standard",
    "ris",
    "exchanges",
    "convertible",
    "ri",
    "uh",
    "exchange",
    "term",
    "another",
    "convertible",
    "ri",
    "new",
    "r",
    "attributes",
    "includes",
    "instance",
    "family",
    "instant",
    "type",
    "platform",
    "scope",
    "tency",
    "um",
    "terms",
    "marketplace",
    "uh",
    "bought",
    "standard",
    "ri",
    "uh",
    "marketplace",
    "sell",
    "ri",
    "uh",
    "need",
    "anymore",
    "uh",
    "convertible",
    "r",
    "sold",
    "bought",
    "marketplace",
    "dealing",
    "ads",
    "directly",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "reserved",
    "instance",
    "marketplace",
    "mentioned",
    "prior",
    "let",
    "give",
    "little",
    "attention",
    "allows",
    "sell",
    "unused",
    "standard",
    "ri",
    "recoup",
    "spend",
    "r",
    "right",
    "intend",
    "use",
    "reserved",
    "instances",
    "sold",
    "active",
    "least",
    "30",
    "days",
    "databus",
    "received",
    "upfront",
    "payment",
    "must",
    "us",
    "bank",
    "account",
    "sell",
    "ri",
    "ri",
    "marketplace",
    "must",
    "least",
    "one",
    "month",
    "remaining",
    "term",
    "ri",
    "listing",
    "retain",
    "pricing",
    "capacity",
    "benefit",
    "reservation",
    "sold",
    "transaction",
    "complete",
    "company",
    "name",
    "address",
    "upon",
    "request",
    "shared",
    "buyer",
    "tax",
    "purposes",
    "seller",
    "set",
    "upfront",
    "price",
    "ri",
    "usage",
    "price",
    "configurations",
    "instance",
    "type",
    "availability",
    "zone",
    "platform",
    "remain",
    "ri",
    "initially",
    "purchased",
    "term",
    "length",
    "rounded",
    "nearest",
    "month",
    "example",
    "reservation",
    "9",
    "months",
    "15",
    "days",
    "remaining",
    "appear",
    "9",
    "months",
    "r",
    "market",
    "sell",
    "usd",
    "reserved",
    "instances",
    "per",
    "year",
    "need",
    "sell",
    "ri",
    "reserved",
    "instances",
    "gov",
    "cloud",
    "uh",
    "region",
    "sold",
    "ri",
    "marketplace",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "examp",
    "pro",
    "taking",
    "look",
    "spot",
    "instances",
    "adus",
    "unused",
    "compute",
    "capacity",
    "want",
    "maximize",
    "utility",
    "idle",
    "servers",
    "right",
    "idea",
    "like",
    "hotel",
    "offers",
    "booking",
    "discounts",
    "fill",
    "vacant",
    "suites",
    "planes",
    "offer",
    "discounts",
    "fill",
    "vacant",
    "seats",
    "right",
    "spot",
    "instances",
    "provide",
    "discount",
    "90",
    "compared",
    "demand",
    "pricing",
    "spot",
    "instances",
    "terminated",
    "computing",
    "capacity",
    "needed",
    "demand",
    "customers",
    "hear",
    "rarely",
    "rarely",
    "spot",
    "instances",
    "ever",
    "get",
    "terminated",
    "um",
    "designed",
    "applications",
    "flexible",
    "start",
    "end",
    "times",
    "applications",
    "feasible",
    "low",
    "compute",
    "cost",
    "see",
    "options",
    "like",
    "load",
    "balancing",
    "workloads",
    "flexible",
    "workloads",
    "big",
    "data",
    "workloads",
    "things",
    "like",
    "um",
    "another",
    "service",
    "called",
    "aus",
    "batch",
    "batch",
    "processing",
    "common",
    "use",
    "um",
    "spot",
    "know",
    "find",
    "spot",
    "interface",
    "complicated",
    "batch",
    "processing",
    "want",
    "use",
    "service",
    "instead",
    "um",
    "termination",
    "conditions",
    "instances",
    "terminated",
    "adabs",
    "time",
    "instance",
    "terminated",
    "ads",
    "get",
    "charged",
    "partial",
    "hour",
    "usage",
    "terminate",
    "instance",
    "still",
    "charged",
    "hour",
    "uh",
    "ran",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "dedicated",
    "instances",
    "dedicate",
    "instances",
    "designed",
    "help",
    "meet",
    "regulatory",
    "requirements",
    "inabus",
    "also",
    "concept",
    "called",
    "dedicated",
    "hosts",
    "strict",
    "server",
    "bound",
    "licensing",
    "wo",
    "support",
    "tendency",
    "cloud",
    "deployments",
    "definitely",
    "distinguish",
    "course",
    "slide",
    "particular",
    "um",
    "understand",
    "uh",
    "dedicated",
    "instances",
    "hosts",
    "need",
    "understand",
    "difference",
    "tendency",
    "single",
    "tendency",
    "tendency",
    "think",
    "like",
    "everyone",
    "living",
    "apartment",
    "single",
    "tendency",
    "think",
    "everyone",
    "house",
    "idea",
    "server",
    "going",
    "get",
    "uh",
    "cursor",
    "pen",
    "say",
    "server",
    "multiple",
    "customers",
    "running",
    "workloads",
    "hardware",
    "idea",
    "separated",
    "via",
    "virtual",
    "isolation",
    "using",
    "server",
    "software",
    "might",
    "separating",
    "okay",
    "idea",
    "single",
    "tency",
    "single",
    "customer",
    "dedicated",
    "hardware",
    "physical",
    "location",
    "separates",
    "customers",
    "um",
    "idea",
    "dedicated",
    "offered",
    "via",
    "demand",
    "reserved",
    "spot",
    "talking",
    "dedicated",
    "pricing",
    "model",
    "know",
    "know",
    "even",
    "though",
    "lot",
    "expensive",
    "demand",
    "uh",
    "still",
    "save",
    "using",
    "reserved",
    "also",
    "spot",
    "surprised",
    "um",
    "want",
    "choose",
    "dedicated",
    "going",
    "launch",
    "ec2",
    "drop",
    "shared",
    "default",
    "dedicated",
    "dedicated",
    "instance",
    "dedicated",
    "host",
    "talk",
    "dedicated",
    "host",
    "uh",
    "later",
    "need",
    "um",
    "reason",
    "um",
    "know",
    "enterprises",
    "large",
    "organizations",
    "may",
    "want",
    "use",
    "dedicated",
    "instances",
    "sec",
    "uh",
    "security",
    "concern",
    "obligation",
    "uh",
    "sharing",
    "hardware",
    "adus",
    "customers",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "aba",
    "savings",
    "plans",
    "similar",
    "reserved",
    "instances",
    "simplifies",
    "purchasing",
    "process",
    "going",
    "look",
    "lot",
    "like",
    "ri",
    "start",
    "tell",
    "bit",
    "different",
    "okay",
    "three",
    "types",
    "saving",
    "plans",
    "compute",
    "savings",
    "plan",
    "ec2",
    "instance",
    "saving",
    "plan",
    "plans",
    "sagemaker",
    "saving",
    "plans",
    "uh",
    "go",
    "ahead",
    "choose",
    "choose",
    "two",
    "different",
    "terms",
    "one",
    "year",
    "threee",
    "would",
    "simple",
    "choose",
    "following",
    "payment",
    "options",
    "upfront",
    "partial",
    "payment",
    "upfront",
    "going",
    "choose",
    "hour",
    "commitment",
    "think",
    "standard",
    "versus",
    "convertible",
    "uh",
    "uh",
    "regional",
    "versus",
    "zonal",
    "ri",
    "attributes",
    "lot",
    "simpler",
    "uh",
    "let",
    "talk",
    "three",
    "different",
    "saving",
    "plans",
    "types",
    "bit",
    "detail",
    "compute",
    "compute",
    "savings",
    "plans",
    "provides",
    "flexibility",
    "helps",
    "reduce",
    "cost",
    "66",
    "plans",
    "automatically",
    "apply",
    "ec2",
    "instances",
    "usage",
    "ads",
    "fargate",
    "8s",
    "lambda",
    "service",
    "usage",
    "regardless",
    "instance",
    "family",
    "size",
    "az",
    "region",
    "os",
    "tency",
    "ec2",
    "instances",
    "provides",
    "lowest",
    "prices",
    "offering",
    "saving",
    "72",
    "exchange",
    "commitment",
    "usage",
    "instance",
    "uh",
    "individual",
    "instance",
    "families",
    "region",
    "automatically",
    "reduce",
    "uh",
    "cost",
    "selected",
    "instance",
    "family",
    "region",
    "regardless",
    "size",
    "os",
    "tendency",
    "gives",
    "flexibility",
    "change",
    "usage",
    "instances",
    "within",
    "family",
    "region",
    "last",
    "sagemaker",
    "helps",
    "reduce",
    "sage",
    "maker",
    "cost",
    "64",
    "automatically",
    "apply",
    "sage",
    "maker",
    "usage",
    "regardless",
    "instance",
    "family",
    "size",
    "component",
    "adus",
    "region",
    "know",
    "sagemaker",
    "adab",
    "us",
    "ml",
    "service",
    "uses",
    "ec2",
    "instances",
    "specifically",
    "ml",
    "ec2",
    "instances",
    "everything",
    "basically",
    "using",
    "ec2",
    "um",
    "music",
    "go",
    "right",
    "let",
    "take",
    "look",
    "zero",
    "trust",
    "model",
    "zer",
    "trust",
    "model",
    "security",
    "uh",
    "model",
    "operates",
    "principle",
    "trust",
    "one",
    "verify",
    "everything",
    "mean",
    "malicious",
    "actors",
    "able",
    "bypass",
    "conventional",
    "access",
    "controls",
    "demonstrates",
    "traditional",
    "security",
    "measures",
    "longer",
    "sufficient",
    "zero",
    "trust",
    "model",
    "comes",
    "play",
    "zero",
    "trust",
    "model",
    "identity",
    "becomes",
    "primary",
    "security",
    "perimeter",
    "uh",
    "might",
    "asking",
    "mean",
    "primary",
    "security",
    "perimeter",
    "primary",
    "new",
    "security",
    "perimeter",
    "defines",
    "first",
    "line",
    "defense",
    "security",
    "controls",
    "protect",
    "company",
    "cloud",
    "resources",
    "assets",
    "um",
    "still",
    "make",
    "sense",
    "cover",
    "part",
    "defense",
    "depth",
    "see",
    "layers",
    "defense",
    "data",
    "way",
    "physical",
    "kind",
    "see",
    "know",
    "talking",
    "model",
    "old",
    "way",
    "used",
    "things",
    "network",
    "centric",
    "traditional",
    "focused",
    "firewalls",
    "vpn",
    "since",
    "employees",
    "workstations",
    "outside",
    "office",
    "specific",
    "remote",
    "office",
    "treat",
    "network",
    "uh",
    "network",
    "kind",
    "like",
    "boundary",
    "office",
    "nothing",
    "worry",
    "think",
    "like",
    "anymore",
    "everything",
    "identity",
    "centric",
    "bring",
    "device",
    "remote",
    "workstations",
    "becoming",
    "common",
    "uh",
    "ca",
    "always",
    "trust",
    "employee",
    "secure",
    "location",
    "uh",
    "identity",
    "based",
    "security",
    "controls",
    "like",
    "mfa",
    "providing",
    "provisional",
    "access",
    "based",
    "level",
    "risk",
    "user",
    "wants",
    "access",
    "identity",
    "centric",
    "replace",
    "uh",
    "augments",
    "network",
    "centric",
    "security",
    "additional",
    "layer",
    "consideration",
    "uh",
    "security",
    "thinking",
    "aus",
    "cloud",
    "workloads",
    "music",
    "okay",
    "right",
    "loosely",
    "defined",
    "zero",
    "trust",
    "model",
    "let",
    "talk",
    "would",
    "zero",
    "trust",
    "aws",
    "zero",
    "trust",
    "lot",
    "identity",
    "security",
    "controls",
    "let",
    "talk",
    "disposal",
    "aws",
    "aws",
    "identity",
    "access",
    "management",
    "im",
    "create",
    "users",
    "groups",
    "policies",
    "policy",
    "set",
    "permissions",
    "allow",
    "say",
    "okay",
    "user",
    "allowed",
    "use",
    "uh",
    "services",
    "particular",
    "actions",
    "uh",
    "concept",
    "permission",
    "boundaries",
    "saying",
    "okay",
    "um",
    "permissions",
    "user",
    "currently",
    "boundaries",
    "want",
    "never",
    "access",
    "um",
    "uh",
    "ml",
    "services",
    "someone",
    "uh",
    "apply",
    "uh",
    "uh",
    "permissions",
    "always",
    "within",
    "boundaries",
    "service",
    "control",
    "policies",
    "policies",
    "policy",
    "want",
    "anyone",
    "run",
    "anything",
    "canada",
    "region",
    "apply",
    "policy",
    "organizational",
    "level",
    "enforced",
    "within",
    "policy",
    "concept",
    "conditions",
    "kind",
    "like",
    "uh",
    "little",
    "knobs",
    "uh",
    "tweak",
    "say",
    "uh",
    "control",
    "based",
    "bunch",
    "different",
    "factors",
    "source",
    "ip",
    "restrict",
    "ip",
    "address",
    "coming",
    "requested",
    "region",
    "restrict",
    "based",
    "region",
    "mentioned",
    "example",
    "uh",
    "multiactor",
    "presence",
    "restrict",
    "mfa",
    "turned",
    "uh",
    "current",
    "time",
    "restrict",
    "access",
    "based",
    "time",
    "day",
    "maybe",
    "know",
    "employees",
    "never",
    "really",
    "using",
    "things",
    "night",
    "could",
    "indicator",
    "someone",
    "something",
    "malicious",
    "know",
    "give",
    "access",
    "certain",
    "time",
    "day",
    "going",
    "figure",
    "know",
    "based",
    "type",
    "controls",
    "security",
    "controls",
    "uh",
    "adus",
    "resources",
    "kind",
    "enforce",
    "zero",
    "trust",
    "model",
    "adus",
    "adus",
    "ready",
    "use",
    "identity",
    "controls",
    "intelligent",
    "adus",
    "considered",
    "zero",
    "trust",
    "offering",
    "customers",
    "thirdparty",
    "services",
    "need",
    "used",
    "saying",
    "technically",
    "know",
    "checkbox",
    "thing",
    "saying",
    "okay",
    "kind",
    "zero",
    "trust",
    "aws",
    "lot",
    "manual",
    "work",
    "know",
    "say",
    "okay",
    "um",
    "want",
    "anyone",
    "using",
    "nighttime",
    "really",
    "detect",
    "know",
    "saying",
    "going",
    "say",
    "oh",
    "think",
    "time",
    "suspicious",
    "malicious",
    "restrict",
    "access",
    "core",
    "services",
    "anything",
    "outside",
    "services",
    "ca",
    "used",
    "ca",
    "exactly",
    "without",
    "lot",
    "u",
    "work",
    "talking",
    "collection",
    "aable",
    "services",
    "set",
    "intelligence",
    "intelligent",
    "detection",
    "way",
    "identity",
    "concerns",
    "requires",
    "expert",
    "knowledge",
    "way",
    "might",
    "aws",
    "everything",
    "api",
    "calls",
    "go",
    "ad",
    "cloud",
    "trail",
    "could",
    "feed",
    "amazon",
    "guard",
    "duty",
    "guard",
    "duty",
    "intrusion",
    "uh",
    "uh",
    "intrusion",
    "detection",
    "protection",
    "system",
    "could",
    "detect",
    "suspicious",
    "malicious",
    "activity",
    "cloud",
    "trail",
    "logs",
    "could",
    "follow",
    "remediation",
    "could",
    "pass",
    "amazon",
    "detective",
    "could",
    "analyze",
    "investigate",
    "quickly",
    "identify",
    "security",
    "issues",
    "uh",
    "could",
    "ingest",
    "guard",
    "duty",
    "telling",
    "stuff",
    "easy",
    "um",
    "consumer",
    "course",
    "zero",
    "trust",
    "model",
    "going",
    "take",
    "lot",
    "work",
    "limitations",
    "talk",
    "next",
    "music",
    "let",
    "see",
    "would",
    "zero",
    "trust",
    "os",
    "third",
    "pary",
    "os",
    "technically",
    "implement",
    "zero",
    "trust",
    "model",
    "allow",
    "intelligent",
    "identity",
    "security",
    "controls",
    "know",
    "lot",
    "work",
    "uh",
    "let",
    "kind",
    "compare",
    "kind",
    "third",
    "party",
    "would",
    "get",
    "controls",
    "would",
    "necessarily",
    "get",
    "aws",
    "example",
    "aure",
    "active",
    "directory",
    "real",
    "time",
    "calculated",
    "risk",
    "detection",
    "based",
    "data",
    "points",
    "aws",
    "based",
    "device",
    "application",
    "time",
    "day",
    "location",
    "whether",
    "mfa",
    "turned",
    "accessed",
    "security",
    "controls",
    "verification",
    "logic",
    "restriction",
    "much",
    "robust",
    "know",
    "one",
    "particular",
    "example",
    "like",
    "device",
    "application",
    "something",
    "ads",
    "factors",
    "uh",
    "existing",
    "controls",
    "least",
    "way",
    "consumer",
    "friendly",
    "know",
    "ca",
    "say",
    "onus",
    "okay",
    "think",
    "type",
    "threat",
    "allow",
    "access",
    "things",
    "think",
    "risky",
    "area",
    "risky",
    "uh",
    "location",
    "give",
    "access",
    "know",
    "things",
    "sensitive",
    "data",
    "ca",
    "exactly",
    "itus",
    "easily",
    "third",
    "party",
    "solutions",
    "going",
    "come",
    "play",
    "azure",
    "active",
    "directory",
    "google",
    "beyond",
    "corp",
    "jump",
    "cloud",
    "intelligent",
    "security",
    "controls",
    "realtime",
    "detection",
    "um",
    "way",
    "would",
    "use",
    "would",
    "primary",
    "directories",
    "uh",
    "google",
    "beond",
    "corp",
    "zero",
    "trust",
    "framework",
    "guess",
    "use",
    "uh",
    "google",
    "uh",
    "cloud",
    "directory",
    "idea",
    "anyway",
    "use",
    "single",
    "sign",
    "connect",
    "directories",
    "adus",
    "account",
    "access",
    "access",
    "uh",
    "itus",
    "resources",
    "get",
    "robust",
    "functionality",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "ident",
    "need",
    "know",
    "bunch",
    "concepts",
    "talk",
    "identity",
    "aws",
    "let",
    "jump",
    "first",
    "directory",
    "service",
    "directory",
    "service",
    "well",
    "service",
    "maps",
    "names",
    "network",
    "resources",
    "network",
    "addresses",
    "directory",
    "service",
    "shared",
    "uh",
    "infrastructure",
    "information",
    "infrastructure",
    "locating",
    "managing",
    "administrating",
    "organizing",
    "resources",
    "volumes",
    "folders",
    "files",
    "printers",
    "users",
    "groups",
    "devices",
    "telephone",
    "numbers",
    "objects",
    "directory",
    "service",
    "critical",
    "component",
    "network",
    "operating",
    "system",
    "directory",
    "server",
    "name",
    "server",
    "server",
    "provides",
    "directory",
    "service",
    "resource",
    "network",
    "considered",
    "object",
    "directory",
    "server",
    "information",
    "particular",
    "resource",
    "stored",
    "collection",
    "attributes",
    "associated",
    "resource",
    "object",
    "uh",
    "directory",
    "services",
    "would",
    "domain",
    "name",
    "service",
    "um",
    "directory",
    "service",
    "internet",
    "microsoft",
    "active",
    "directory",
    "uh",
    "cloud",
    "hosted",
    "one",
    "called",
    "azure",
    "active",
    "directory",
    "aachi",
    "directory",
    "service",
    "oracle",
    "inter",
    "internet",
    "directory",
    "id",
    "uh",
    "open",
    "ldap",
    "uh",
    "cloud",
    "identity",
    "jump",
    "cloud",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "active",
    "directory",
    "might",
    "say",
    "well",
    "adab",
    "best",
    "looking",
    "well",
    "matter",
    "cloud",
    "service",
    "provider",
    "using",
    "know",
    "active",
    "directory",
    "uh",
    "especially",
    "comes",
    "identity",
    "use",
    "aws",
    "um",
    "let",
    "talk",
    "microsoft",
    "introduced",
    "active",
    "directory",
    "domain",
    "services",
    "windows",
    "2000",
    "give",
    "organizations",
    "ability",
    "manage",
    "multiple",
    "premise",
    "infrastructure",
    "components",
    "systems",
    "using",
    "single",
    "identity",
    "per",
    "user",
    "since",
    "uh",
    "involved",
    "uh",
    "evolved",
    "obviously",
    "uh",
    "running",
    "beyond",
    "windows",
    "2000",
    "today",
    "uh",
    "even",
    "managed",
    "one",
    "called",
    "azure",
    "ad",
    "microsoft",
    "azure",
    "kind",
    "give",
    "architectural",
    "diagram",
    "idea",
    "would",
    "domain",
    "servers",
    "uh",
    "might",
    "child",
    "domains",
    "idea",
    "running",
    "multiple",
    "machines",
    "redundant",
    "ability",
    "log",
    "various",
    "places",
    "bunch",
    "domains",
    "called",
    "forest",
    "within",
    "domain",
    "actually",
    "organizational",
    "units",
    "within",
    "organizational",
    "units",
    "objects",
    "like",
    "users",
    "printers",
    "computers",
    "servers",
    "uh",
    "things",
    "like",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "xam",
    "pro",
    "talking",
    "identity",
    "providers",
    "ipds",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "talking",
    "identity",
    "providers",
    "also",
    "known",
    "idps",
    "identity",
    "provider",
    "system",
    "entity",
    "creates",
    "maintains",
    "manages",
    "identity",
    "information",
    "principles",
    "also",
    "provides",
    "authentication",
    "services",
    "applications",
    "federation",
    "distributor",
    "network",
    "trusted",
    "provider",
    "user",
    "identity",
    "lets",
    "use",
    "authent",
    "uh",
    "lets",
    "authenticate",
    "access",
    "service",
    "identity",
    "providers",
    "could",
    "like",
    "facebook",
    "amazon",
    "google",
    "twitter",
    "github",
    "linkedin",
    "uh",
    "federate",
    "identity",
    "method",
    "linking",
    "user",
    "identity",
    "across",
    "multiple",
    "separate",
    "identity",
    "management",
    "systems",
    "things",
    "uh",
    "use",
    "like",
    "open",
    "id",
    "open",
    "standard",
    "decentralized",
    "authentication",
    "protocol",
    "allows",
    "able",
    "log",
    "different",
    "social",
    "media",
    "platforms",
    "using",
    "google",
    "facebook",
    "account",
    "open",
    "ideas",
    "providing",
    "ooth",
    "industry",
    "standard",
    "protocol",
    "authorization",
    "oath",
    "share",
    "password",
    "data",
    "instead",
    "uses",
    "authorization",
    "tokens",
    "prove",
    "identity",
    "consumers",
    "service",
    "providers",
    "oath",
    "granting",
    "access",
    "functionality",
    "saml",
    "security",
    "assertion",
    "markup",
    "language",
    "open",
    "standard",
    "exchanging",
    "authentication",
    "authorization",
    "identity",
    "provider",
    "service",
    "provider",
    "important",
    "use",
    "samle",
    "use",
    "single",
    "sign",
    "via",
    "browser",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "concept",
    "single",
    "sign",
    "sso",
    "authentication",
    "scheme",
    "allows",
    "user",
    "log",
    "single",
    "id",
    "password",
    "different",
    "systems",
    "software",
    "sso",
    "allows",
    "departments",
    "administer",
    "single",
    "identity",
    "access",
    "many",
    "machines",
    "cloud",
    "services",
    "idea",
    "azure",
    "active",
    "directory",
    "example",
    "popular",
    "one",
    "use",
    "samle",
    "sso",
    "connect",
    "things",
    "bu",
    "google",
    "workspaces",
    "salesforce",
    "computer",
    "uh",
    "idea",
    "uh",
    "uh",
    "log",
    "um",
    "log",
    "multiple",
    "times",
    "log",
    "primary",
    "directory",
    "going",
    "presented",
    "login",
    "screen",
    "services",
    "might",
    "show",
    "intermediate",
    "screen",
    "idea",
    "entering",
    "credentials",
    "multiple",
    "times",
    "music",
    "seamless",
    "right",
    "let",
    "talk",
    "ldap",
    "lightweight",
    "directory",
    "access",
    "protocol",
    "open",
    "vendor",
    "neutral",
    "industry",
    "standard",
    "application",
    "protocol",
    "accessing",
    "maintaining",
    "distributed",
    "directory",
    "information",
    "services",
    "uh",
    "ip",
    "network",
    "common",
    "use",
    "ldap",
    "provide",
    "central",
    "place",
    "store",
    "usernames",
    "passwords",
    "ldap",
    "enables",
    "signon",
    "sign",
    "allows",
    "users",
    "uh",
    "use",
    "single",
    "id",
    "password",
    "enter",
    "every",
    "single",
    "time",
    "want",
    "log",
    "maybe",
    "premise",
    "active",
    "directory",
    "going",
    "store",
    "ldap",
    "directory",
    "idea",
    "um",
    "know",
    "services",
    "like",
    "google",
    "kubernetes",
    "um",
    "jenkings",
    "going",
    "uh",
    "deal",
    "ldap",
    "server",
    "would",
    "use",
    "ldap",
    "sso",
    "convenient",
    "seamless",
    "sso",
    "systems",
    "using",
    "ldap",
    "hood",
    "ldap",
    "designed",
    "neighly",
    "work",
    "web",
    "applications",
    "systems",
    "support",
    "integration",
    "ldap",
    "sso",
    "got",
    "take",
    "get",
    "music",
    "okay",
    "let",
    "let",
    "take",
    "look",
    "multifactor",
    "authentication",
    "also",
    "known",
    "mfa",
    "security",
    "control",
    "fill",
    "user",
    "name",
    "email",
    "password",
    "use",
    "second",
    "device",
    "phone",
    "confirm",
    "logging",
    "mfa",
    "protects",
    "people",
    "stolen",
    "password",
    "mfa",
    "option",
    "cloud",
    "providers",
    "even",
    "social",
    "media",
    "websites",
    "facebook",
    "idea",
    "uh",
    "username",
    "email",
    "password",
    "going",
    "try",
    "log",
    "first",
    "factor",
    "second",
    "factor",
    "multiactor",
    "going",
    "use",
    "secondary",
    "device",
    "maybe",
    "phone",
    "going",
    "enter",
    "different",
    "codes",
    "maybe",
    "passwordless",
    "press",
    "button",
    "confirm",
    "get",
    "access",
    "context",
    "aws",
    "strongly",
    "recommended",
    "turn",
    "mfa",
    "accounts",
    "especially",
    "adus",
    "root",
    "account",
    "uh",
    "see",
    "follow",
    "music",
    "alongs",
    "let",
    "take",
    "look",
    "security",
    "keys",
    "security",
    "key",
    "second",
    "device",
    "used",
    "second",
    "step",
    "authentication",
    "process",
    "gain",
    "access",
    "device",
    "workstation",
    "application",
    "security",
    "key",
    "resemble",
    "memory",
    "stick",
    "finger",
    "makes",
    "contact",
    "button",
    "exposed",
    "metal",
    "device",
    "generate",
    "autofill",
    "security",
    "token",
    "popular",
    "brand",
    "security",
    "keys",
    "ub",
    "key",
    "one",
    "use",
    "looks",
    "exactly",
    "like",
    "one",
    "right",
    "beside",
    "desk",
    "works",
    "box",
    "gmail",
    "facebook",
    "hundreds",
    "supports",
    "pho2",
    "web",
    "n",
    "uh",
    "u2f",
    "waterproof",
    "crust",
    "resistance",
    "uh",
    "vari",
    "like",
    "usba",
    "us",
    "nfc",
    "dual",
    "connectors",
    "single",
    "key",
    "variety",
    "things",
    "turn",
    "mfa",
    "ads",
    "account",
    "virtual",
    "mfa",
    "device",
    "using",
    "something",
    "like",
    "phone",
    "using",
    "software",
    "phone",
    "u2f",
    "security",
    "key",
    "talking",
    "right",
    "even",
    "kinds",
    "hardware",
    "mfa",
    "devices",
    "um",
    "really",
    "going",
    "talk",
    "um",
    "know",
    "security",
    "keys",
    "tie",
    "mfa",
    "lot",
    "better",
    "way",
    "using",
    "phone",
    "know",
    "desk",
    "press",
    "um",
    "know",
    "worry",
    "phone",
    "charged",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "itus",
    "identity",
    "access",
    "management",
    "also",
    "known",
    "im",
    "use",
    "service",
    "create",
    "manage",
    "adus",
    "users",
    "groups",
    "uh",
    "use",
    "permissions",
    "allow",
    "deny",
    "access",
    "adus",
    "resources",
    "quite",
    "components",
    "let",
    "get",
    "first",
    "policies",
    "json",
    "documents",
    "grant",
    "permissions",
    "specific",
    "users",
    "groups",
    "role",
    "access",
    "services",
    "policies",
    "attached",
    "im",
    "im",
    "identities",
    "permissions",
    "permission",
    "api",
    "action",
    "performed",
    "represented",
    "im",
    "policy",
    "document",
    "im",
    "identity",
    "im",
    "users",
    "end",
    "users",
    "log",
    "console",
    "interact",
    "ad",
    "resources",
    "programmatically",
    "via",
    "clicking",
    "ui",
    "interfaces",
    "im",
    "groups",
    "uh",
    "group",
    "users",
    "share",
    "permission",
    "levels",
    "maybe",
    "admins",
    "developers",
    "auditors",
    "im",
    "roles",
    "roles",
    "grant",
    "adus",
    "resources",
    "uh",
    "permissions",
    "specific",
    "adus",
    "api",
    "actions",
    "associate",
    "policies",
    "role",
    "assign",
    "adus",
    "resource",
    "understand",
    "roles",
    "attaching",
    "resources",
    "like",
    "ec2",
    "instance",
    "say",
    "access",
    "s3",
    "going",
    "attaching",
    "role",
    "policy",
    "directly",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "impulses",
    "little",
    "bit",
    "closer",
    "written",
    "json",
    "contain",
    "permissions",
    "determine",
    "api",
    "actions",
    "allowed",
    "denied",
    "um",
    "rarely",
    "write",
    "hand",
    "uh",
    "little",
    "wizard",
    "use",
    "write",
    "code",
    "want",
    "absolutely",
    "write",
    "hand",
    "know",
    "contents",
    "json",
    "files",
    "work",
    "first",
    "thing",
    "version",
    "um",
    "policy",
    "language",
    "version",
    "2012",
    "long",
    "time",
    "see",
    "changing",
    "anytime",
    "soon",
    "happen",
    "change",
    "structure",
    "json",
    "statements",
    "policy",
    "elements",
    "uh",
    "allowed",
    "multiples",
    "idea",
    "policies",
    "permissions",
    "say",
    "uh",
    "uh",
    "plan",
    "applying",
    "sid",
    "way",
    "labeling",
    "statements",
    "um",
    "useful",
    "like",
    "visualization",
    "ref",
    "referencing",
    "later",
    "lot",
    "times",
    "sid",
    "um",
    "effect",
    "either",
    "allow",
    "deny",
    "action",
    "saying",
    "give",
    "access",
    "s3",
    "actions",
    "another",
    "action",
    "saying",
    "give",
    "access",
    "going",
    "get",
    "pen",
    "tool",
    "create",
    "service",
    "link",
    "rle",
    "cross",
    "account",
    "rule",
    "principal",
    "account",
    "user",
    "role",
    "federated",
    "user",
    "would",
    "like",
    "allow",
    "access",
    "deny",
    "specifically",
    "saying",
    "uh",
    "im",
    "user",
    "named",
    "barkley",
    "um",
    "adus",
    "account",
    "uh",
    "resources",
    "resources",
    "action",
    "applies",
    "um",
    "one",
    "specifying",
    "specific",
    "adus",
    "bucket",
    "saying",
    "possible",
    "resources",
    "anus",
    "account",
    "condition",
    "sorts",
    "different",
    "kinds",
    "conditions",
    "string",
    "like",
    "one",
    "saying",
    "look",
    "service",
    "name",
    "starts",
    "access",
    "person",
    "even",
    "though",
    "says",
    "resources",
    "really",
    "going",
    "access",
    "rds",
    "okay",
    "music",
    "follow",
    "along",
    "going",
    "take",
    "closer",
    "look",
    "policies",
    "go",
    "top",
    "type",
    "make",
    "way",
    "uh",
    "way",
    "policies",
    "want",
    "create",
    "new",
    "policy",
    "access",
    "uh",
    "um",
    "limited",
    "resources",
    "um",
    "let",
    "say",
    "want",
    "create",
    "amazon",
    "ec2",
    "instance",
    "ec2",
    "instance",
    "access",
    "particular",
    "s3",
    "bucket",
    "want",
    "make",
    "way",
    "s3",
    "going",
    "create",
    "new",
    "bucket",
    "going",
    "go",
    "ahead",
    "create",
    "bucket",
    "going",
    "call",
    "um",
    "policy",
    "tutorial",
    "going",
    "put",
    "bunch",
    "numbers",
    "randomize",
    "use",
    "case",
    "bucket",
    "going",
    "go",
    "ahead",
    "create",
    "policy",
    "policy",
    "going",
    "choose",
    "service",
    "going",
    "say",
    "s3",
    "want",
    "able",
    "list",
    "actions",
    "going",
    "expand",
    "want",
    "everything",
    "going",
    "say",
    "list",
    "buckets",
    "okay",
    "uh",
    "expand",
    "want",
    "save",
    "particular",
    "bucket",
    "go",
    "back",
    "click",
    "bucket",
    "uh",
    "going",
    "go",
    "ahead",
    "set",
    "permissions",
    "finding",
    "arn",
    "going",
    "paste",
    "going",
    "paste",
    "rn",
    "sometimes",
    "bit",
    "tricky",
    "vanishes",
    "could",
    "set",
    "conditions",
    "wanted",
    "pretty",
    "simple",
    "rule",
    "right",
    "saying",
    "policy",
    "allows",
    "us",
    "list",
    "bucket",
    "okay",
    "go",
    "ahead",
    "hit",
    "next",
    "hit",
    "review",
    "say",
    "bucket",
    "policy",
    "create",
    "policy",
    "okay",
    "things",
    "think",
    "like",
    "policy",
    "going",
    "pull",
    "back",
    "want",
    "find",
    "uh",
    "used",
    "able",
    "filter",
    "based",
    "ones",
    "created",
    "um",
    "yeah",
    "like",
    "little",
    "icons",
    "ones",
    "created",
    "bucket",
    "policy",
    "feel",
    "like",
    "want",
    "update",
    "policy",
    "bit",
    "extra",
    "information",
    "going",
    "go",
    "edit",
    "policy",
    "know",
    "think",
    "fine",
    "want",
    "create",
    "ro",
    "going",
    "create",
    "new",
    "role",
    "going",
    "call",
    "um",
    "well",
    "need",
    "choose",
    "going",
    "ec2",
    "going",
    "go",
    "ahead",
    "hit",
    "next",
    "going",
    "choose",
    "policy",
    "bucket",
    "policy",
    "want",
    "add",
    "another",
    "one",
    "want",
    "able",
    "use",
    "sessions",
    "manager",
    "really",
    "want",
    "use",
    "ssh",
    "key",
    "check",
    "works",
    "um",
    "need",
    "use",
    "ssm",
    "going",
    "type",
    "ssm",
    "going",
    "make",
    "sure",
    "new",
    "one",
    "policy",
    "soon",
    "deprecated",
    "use",
    "amazon",
    "ssm",
    "manag",
    "instance",
    "always",
    "open",
    "read",
    "see",
    "one",
    "going",
    "allow",
    "us",
    "access",
    "uh",
    "simpson",
    "manager",
    "use",
    "um",
    "sessions",
    "manager",
    "okay",
    "going",
    "say",
    "ec2",
    "roll",
    "s3",
    "going",
    "go",
    "ahead",
    "create",
    "roll",
    "roll",
    "going",
    "go",
    "ec2",
    "going",
    "go",
    "ahead",
    "launch",
    "new",
    "instance",
    "going",
    "choose",
    "amazon",
    "l",
    "2",
    "going",
    "stick",
    "t2",
    "micro",
    "going",
    "go",
    "configuration",
    "everything",
    "fine",
    "um",
    "fine",
    "storage",
    "fine",
    "go",
    "security",
    "group",
    "want",
    "ports",
    "open",
    "going",
    "using",
    "ssh",
    "going",
    "launch",
    "instance",
    "even",
    "want",
    "key",
    "pair",
    "okay",
    "going",
    "go",
    "waiting",
    "instance",
    "launch",
    "going",
    "want",
    "go",
    "s3",
    "bucket",
    "want",
    "place",
    "something",
    "bucket",
    "files",
    "um",
    "going",
    "create",
    "new",
    "folder",
    "whoops",
    "uh",
    "going",
    "go",
    "back",
    "going",
    "create",
    "folder",
    "first",
    "create",
    "folder",
    "enterprise",
    "going",
    "click",
    "going",
    "upload",
    "images",
    "find",
    "images",
    "internet",
    "ones",
    "go",
    "ahead",
    "upload",
    "give",
    "moment",
    "okay",
    "access",
    "read",
    "files",
    "adjust",
    "policy",
    "go",
    "okay",
    "instance",
    "running",
    "um",
    "two",
    "status",
    "checks",
    "pass",
    "able",
    "uh",
    "connect",
    "click",
    "connect",
    "options",
    "like",
    "e2",
    "instance",
    "connect",
    "sessions",
    "manager",
    "ssh",
    "client",
    "want",
    "go",
    "sessions",
    "manager",
    "says",
    "able",
    "connect",
    "instance",
    "common",
    "reasons",
    "ssm",
    "agent",
    "installed",
    "absolutely",
    "installed",
    "required",
    "im",
    "profile",
    "oh",
    "right",
    "supposed",
    "attach",
    "forgot",
    "supposed",
    "attach",
    "ion",
    "profile",
    "right",
    "ion",
    "profile",
    "ro",
    "uh",
    "holds",
    "role",
    "uh",
    "going",
    "give",
    "permissions",
    "instance",
    "since",
    "add",
    "go",
    "retroactively",
    "added",
    "fact",
    "going",
    "modify",
    "im",
    "roll",
    "going",
    "choose",
    "ec2",
    "roll",
    "s3",
    "going",
    "save",
    "actually",
    "happens",
    "reboot",
    "machine",
    "ro",
    "attached",
    "like",
    "prior",
    "profile",
    "attached",
    "attaching",
    "first",
    "time",
    "never",
    "reboot",
    "machine",
    "case",
    "launch",
    "ec2",
    "instance",
    "always",
    "least",
    "ssm",
    "r",
    "attached",
    "managed",
    "one",
    "gets",
    "sessions",
    "manager",
    "ever",
    "reboot",
    "case",
    "update",
    "policy",
    "give",
    "moment",
    "says",
    "initializing",
    "going",
    "try",
    "connect",
    "okay",
    "still",
    "option",
    "um",
    "going",
    "go",
    "back",
    "instances",
    "going",
    "check",
    "see",
    "ro",
    "ro",
    "policy",
    "attached",
    "profile",
    "say",
    "looking",
    "click",
    "r",
    "see",
    "amazon",
    "ssm",
    "managed",
    "instance",
    "core",
    "set",
    "uh",
    "bucket",
    "policy",
    "everything",
    "able",
    "problem",
    "okay",
    "going",
    "try",
    "okay",
    "connect",
    "shows",
    "os",
    "finicky",
    "like",
    "confidence",
    "knowing",
    "correct",
    "okay",
    "go",
    "ahead",
    "hit",
    "connect",
    "use",
    "ssh",
    "keys",
    "anything",
    "lot",
    "secure",
    "way",
    "connect",
    "instances",
    "logs",
    "us",
    "going",
    "set",
    "us",
    "ssm",
    "user",
    "want",
    "um",
    "ec2",
    "user",
    "okay",
    "uh",
    "ads",
    "always",
    "makes",
    "uh",
    "like",
    "linux",
    "versions",
    "ec2",
    "user",
    "supposed",
    "use",
    "get",
    "type",
    "pseudo",
    "su",
    "hyphen",
    "ec2",
    "user",
    "okay",
    "type",
    "type",
    "type",
    "exit",
    "go",
    "back",
    "user",
    "type",
    "exit",
    "type",
    "person",
    "going",
    "go",
    "back",
    "hit",
    "go",
    "back",
    "type",
    "clear",
    "want",
    "see",
    "access",
    "s3",
    "s3",
    "ls",
    "want",
    "see",
    "list",
    "buckets",
    "says",
    "access",
    "denied",
    "mean",
    "kind",
    "makes",
    "sense",
    "list",
    "buckets",
    "saying",
    "bucket",
    "might",
    "make",
    "whole",
    "lot",
    "sense",
    "gna",
    "go",
    "back",
    "policy",
    "might",
    "written",
    "crummy",
    "policy",
    "say",
    "one",
    "open",
    "go",
    "click",
    "policy",
    "going",
    "edit",
    "policy",
    "going",
    "going",
    "change",
    "say",
    "resources",
    "review",
    "policy",
    "save",
    "changes",
    "see",
    "fast",
    "propagates",
    "okay",
    "pretty",
    "sure",
    "anything",
    "give",
    "full",
    "access",
    "s3",
    "going",
    "keep",
    "hitting",
    "going",
    "going",
    "take",
    "like",
    "three",
    "four",
    "minute",
    "break",
    "going",
    "get",
    "drink",
    "going",
    "go",
    "back",
    "see",
    "propagates",
    "pretty",
    "sure",
    "anything",
    "propagate",
    "think",
    "attached",
    "everything",
    "correctly",
    "okay",
    "okay",
    "much",
    "luck",
    "still",
    "issue",
    "happening",
    "going",
    "um",
    "going",
    "reboot",
    "maybe",
    "give",
    "good",
    "opportunity",
    "reboot",
    "think",
    "reboot",
    "every",
    "time",
    "changing",
    "um",
    "uh",
    "things",
    "give",
    "another",
    "go",
    "see",
    "fixes",
    "problem",
    "sessions",
    "manner",
    "going",
    "time",
    "totally",
    "fine",
    "going",
    "kill",
    "session",
    "um",
    "close",
    "much",
    "going",
    "go",
    "ahead",
    "go",
    "back",
    "connect",
    "waiting",
    "button",
    "appear",
    "rebooting",
    "want",
    "monitor",
    "stuff",
    "usually",
    "option",
    "monitor",
    "show",
    "us",
    "system",
    "logs",
    "like",
    "restarting",
    "machine",
    "sure",
    "expect",
    "see",
    "something",
    "click",
    "uh",
    "yeah",
    "easy",
    "get",
    "turned",
    "around",
    "connect",
    "type",
    "pseudo",
    "su",
    "hyphen",
    "ec2",
    "user",
    "ads",
    "s3",
    "ls",
    "still",
    "access",
    "deny",
    "list",
    "buckets",
    "case",
    "could",
    "um",
    "sometimes",
    "need",
    "permissions",
    "list",
    "policy",
    "like",
    "uh",
    "list",
    "buckets",
    "case",
    "going",
    "sanity",
    "check",
    "going",
    "say",
    "permissions",
    "okay",
    "way",
    "way",
    "set",
    "incorrectly",
    "um",
    "work",
    "type",
    "go",
    "okay",
    "something",
    "say",
    "list",
    "buckets",
    "know",
    "like",
    "means",
    "must",
    "right",
    "go",
    "right",
    "say",
    "whoops",
    "say",
    "uh",
    "list",
    "buckets",
    "say",
    "copy",
    "paste",
    "okay",
    "saying",
    "maybe",
    "need",
    "get",
    "object",
    "well",
    "know",
    "using",
    "us",
    "long",
    "time",
    "case",
    "could",
    "one",
    "thing",
    "know",
    "back",
    "mind",
    "could",
    "happening",
    "guess",
    "notice",
    "restart",
    "uh",
    "server",
    "boot",
    "server",
    "get",
    "work",
    "um",
    "uh",
    "anyway",
    "let",
    "go",
    "lock",
    "see",
    "kind",
    "make",
    "uh",
    "focused",
    "let",
    "say",
    "um",
    "resources",
    "going",
    "specify",
    "condition",
    "might",
    "want",
    "say",
    "particular",
    "buckets",
    "say",
    "specific",
    "checkbox",
    "everything",
    "storage",
    "accounts",
    "fine",
    "object",
    "objects",
    "could",
    "something",
    "say",
    "region",
    "access",
    "bucket",
    "bucket",
    "going",
    "say",
    "want",
    "allow",
    "access",
    "things",
    "particular",
    "bucket",
    "go",
    "arn",
    "um",
    "bucket",
    "name",
    "bucket",
    "name",
    "policy",
    "tutorial",
    "34141",
    "whatever",
    "right",
    "actually",
    "give",
    "wild",
    "card",
    "say",
    "enterprise",
    "learned",
    "course",
    "uh",
    "provide",
    "arms",
    "randomize",
    "things",
    "know",
    "spelled",
    "wrong",
    "really",
    "double",
    "check",
    "probably",
    "copy",
    "oops",
    "want",
    "type",
    "wrong",
    "okay",
    "means",
    "able",
    "get",
    "stuff",
    "going",
    "review",
    "policy",
    "let",
    "see",
    "takes",
    "save",
    "changes",
    "view",
    "json",
    "notice",
    "says",
    "anything",
    "right",
    "allow",
    "s3",
    "anything",
    "long",
    "within",
    "also",
    "broke",
    "sub1",
    "4",
    "okay",
    "um",
    "anyway",
    "want",
    "see",
    "happens",
    "upload",
    "something",
    "loose",
    "area",
    "say",
    "upload",
    "going",
    "say",
    "add",
    "file",
    "going",
    "grab",
    "data",
    "upload",
    "go",
    "back",
    "bucket",
    "file",
    "stuff",
    "go",
    "back",
    "ec2",
    "instance",
    "still",
    "connected",
    "uh",
    "okay",
    "great",
    "clear",
    "um",
    "going",
    "say",
    "ads",
    "s3",
    "ls",
    "see",
    "works",
    "still",
    "good",
    "want",
    "see",
    "copy",
    "file",
    "locally",
    "going",
    "abus",
    "s3",
    "copy",
    "think",
    "s3",
    "s3",
    "copy",
    "poc",
    "uh",
    "s3",
    "sl",
    "sl",
    "policy",
    "tutorial",
    "34",
    "141",
    "whoops",
    "34",
    "tutorial",
    "hyphen",
    "34141",
    "slash",
    "enterprise",
    "think",
    "jpg",
    "let",
    "go",
    "double",
    "check",
    "yeah",
    "okay",
    "want",
    "say",
    "data",
    "jpg",
    "downloaded",
    "right",
    "going",
    "remove",
    "one",
    "going",
    "going",
    "see",
    "policy",
    "working",
    "maybe",
    "permissions",
    "exactly",
    "think",
    "able",
    "download",
    "policies",
    "get",
    "kind",
    "tricky",
    "like",
    "one",
    "says",
    "allow",
    "actions",
    "say",
    "actions",
    "makes",
    "hard",
    "want",
    "get",
    "object",
    "another",
    "thing",
    "one",
    "work",
    "really",
    "well",
    "going",
    "write",
    "one",
    "hand",
    "scary",
    "write",
    "hand",
    "get",
    "used",
    "going",
    "say",
    "effect",
    "um",
    "disallow",
    "maybe",
    "deny",
    "deny",
    "action",
    "s3",
    "get",
    "object",
    "believe",
    "resource",
    "going",
    "specify",
    "exactly",
    "resource",
    "want",
    "allow",
    "going",
    "say",
    "ar",
    "aws",
    "three",
    "three",
    "colons",
    "policy",
    "tutorial",
    "34141",
    "uh",
    "say",
    "valid",
    "going",
    "complain",
    "say",
    "hey",
    "write",
    "right",
    "fine",
    "okay",
    "save",
    "changes",
    "deny",
    "access",
    "right",
    "hopefully",
    "got",
    "policy",
    "right",
    "okay",
    "one",
    "work",
    "fine",
    "one",
    "fine",
    "worked",
    "able",
    "deny",
    "see",
    "little",
    "bit",
    "art",
    "creating",
    "policies",
    "uh",
    "make",
    "becomes",
    "lot",
    "easier",
    "hopefully",
    "scary",
    "uh",
    "really",
    "uh",
    "want",
    "show",
    "today",
    "going",
    "clear",
    "bucket",
    "done",
    "bucket",
    "say",
    "delete",
    "whoops",
    "got",
    "empty",
    "first",
    "say",
    "permanently",
    "delete",
    "okay",
    "exit",
    "going",
    "go",
    "ahead",
    "delete",
    "bucket",
    "grab",
    "name",
    "uh",
    "go",
    "back",
    "think",
    "forgot",
    "delete",
    "bucket",
    "earlier",
    "going",
    "delete",
    "need",
    "bucket",
    "okay",
    "going",
    "go",
    "ahead",
    "delete",
    "ec2",
    "instance",
    "running",
    "want",
    "stop",
    "go",
    "ahead",
    "going",
    "terminate",
    "yes",
    "please",
    "go",
    "im",
    "cleanup",
    "custom",
    "roles",
    "creating",
    "um",
    "know",
    "prior",
    "things",
    "lot",
    "usually",
    "way",
    "uh",
    "redesigned",
    "okay",
    "redesign",
    "redesign",
    "ca",
    "like",
    "rolls",
    "ads",
    "makes",
    "think",
    "rolls",
    "made",
    "um",
    "want",
    "delete",
    "service",
    "rolls",
    "want",
    "get",
    "rid",
    "many",
    "know",
    "getting",
    "hand",
    "going",
    "see",
    "let",
    "delete",
    "let",
    "delete",
    "go",
    "clean",
    "bit",
    "still",
    "lot",
    "like",
    "service",
    "roles",
    "os",
    "creates",
    "really",
    "want",
    "delete",
    "um",
    "bunch",
    "like",
    "never",
    "going",
    "use",
    "might",
    "well",
    "detach",
    "delete",
    "detach",
    "really",
    "want",
    "keep",
    "like",
    "rolls",
    "never",
    "going",
    "use",
    "around",
    "things",
    "like",
    "like",
    "gauze",
    "going",
    "using",
    "delete",
    "bucket",
    "created",
    "anyway",
    "get",
    "idea",
    "uh",
    "yeah",
    "uh",
    "music",
    "okay",
    "principle",
    "least",
    "privilege",
    "pp",
    "computer",
    "computer",
    "security",
    "concept",
    "providing",
    "user",
    "role",
    "application",
    "least",
    "amount",
    "permissions",
    "perform",
    "operation",
    "action",
    "way",
    "look",
    "enough",
    "ais",
    "jaa",
    "permitting",
    "exact",
    "actions",
    "identity",
    "perform",
    "task",
    "time",
    "jit",
    "permitting",
    "smallest",
    "length",
    "duration",
    "identity",
    "use",
    "permission",
    "usually",
    "talking",
    "plp",
    "usually",
    "focus",
    "u",
    "days",
    "uh",
    "larger",
    "focus",
    "jit",
    "well",
    "j",
    "difference",
    "longlived",
    "um",
    "uh",
    "permissions",
    "access",
    "keys",
    "versus",
    "ones",
    "progressive",
    "thing",
    "pp",
    "adaptive",
    "policies",
    "attempt",
    "access",
    "resource",
    "generates",
    "risk",
    "score",
    "likely",
    "request",
    "compromized",
    "source",
    "risk",
    "score",
    "could",
    "based",
    "many",
    "factors",
    "device",
    "user",
    "location",
    "ip",
    "address",
    "service",
    "accessed",
    "use",
    "mfa",
    "use",
    "biometrics",
    "things",
    "like",
    "right",
    "time",
    "itus",
    "adaptive",
    "policies",
    "built",
    "roll",
    "um",
    "interesting",
    "cognito",
    "adaptive",
    "policies",
    "call",
    "like",
    "um",
    "adaptive",
    "authentication",
    "user",
    "pools",
    "identity",
    "pools",
    "user",
    "pools",
    "getting",
    "access",
    "app",
    "uh",
    "built",
    "ipd",
    "identity",
    "pools",
    "cognito",
    "getting",
    "access",
    "aabus",
    "resources",
    "uh",
    "know",
    "sure",
    "abos",
    "get",
    "eventually",
    "right",
    "rely",
    "third",
    "part",
    "party",
    "um",
    "identity",
    "solutions",
    "uh",
    "get",
    "adaptive",
    "policies",
    "talking",
    "enough",
    "access",
    "time",
    "time",
    "like",
    "think",
    "would",
    "ads",
    "add",
    "remove",
    "permissions",
    "manually",
    "well",
    "one",
    "thing",
    "could",
    "use",
    "something",
    "like",
    "console",
    "source",
    "netflix",
    "project",
    "serve",
    "im",
    "policies",
    "end",
    "user",
    "access",
    "ad",
    "resources",
    "enforcing",
    "jaa",
    "jit",
    "repo",
    "well",
    "um",
    "idea",
    "like",
    "sered",
    "wizard",
    "say",
    "want",
    "things",
    "machine",
    "decides",
    "okay",
    "need",
    "freezes",
    "asking",
    "people",
    "worrying",
    "length",
    "stuff",
    "like",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "idibus",
    "root",
    "user",
    "uh",
    "gets",
    "confusing",
    "account",
    "root",
    "user",
    "regular",
    "user",
    "let",
    "distinguish",
    "three",
    "things",
    "adus",
    "account",
    "account",
    "holds",
    "adus",
    "resources",
    "including",
    "different",
    "types",
    "user",
    "root",
    "user",
    "special",
    "account",
    "full",
    "access",
    "deleted",
    "user",
    "user",
    "common",
    "tasks",
    "assigned",
    "permissions",
    "understand",
    "sometimes",
    "people",
    "say",
    "account",
    "actually",
    "referring",
    "user",
    "sometimes",
    "saying",
    "account",
    "actually",
    "referring",
    "aes",
    "account",
    "holds",
    "users",
    "know",
    "confusing",
    "based",
    "people",
    "decide",
    "context",
    "speaking",
    "ads",
    "account",
    "user",
    "special",
    "user",
    "created",
    "time",
    "abs",
    "account",
    "creation",
    "uh",
    "lot",
    "conditions",
    "around",
    "user",
    "account",
    "uses",
    "email",
    "password",
    "log",
    "opposed",
    "regular",
    "user",
    "going",
    "provide",
    "account",
    "id",
    "alias",
    "username",
    "password",
    "root",
    "user",
    "account",
    "deleted",
    "root",
    "user",
    "account",
    "full",
    "permissions",
    "account",
    "permissions",
    "limited",
    "say",
    "limited",
    "saying",
    "take",
    "im",
    "policy",
    "explicitly",
    "deny",
    "user",
    "access",
    "resources",
    "something",
    "however",
    "case",
    "adab",
    "organizations",
    "service",
    "control",
    "policies",
    "service",
    "control",
    "policy",
    "applies",
    "bunch",
    "accounts",
    "one",
    "level",
    "way",
    "limiting",
    "root",
    "users",
    "generally",
    "ca",
    "limit",
    "within",
    "account",
    "uh",
    "one",
    "root",
    "user",
    "uh",
    "per",
    "ad",
    "us",
    "account",
    "root",
    "user",
    "instead",
    "spe",
    "specific",
    "specialized",
    "tasks",
    "infrequently",
    "rarely",
    "performed",
    "big",
    "list",
    "get",
    "moment",
    "root",
    "uh",
    "account",
    "uh",
    "used",
    "daily",
    "common",
    "tasks",
    "strong",
    "strongly",
    "recommended",
    "never",
    "use",
    "root",
    "users",
    "access",
    "keys",
    "generate",
    "use",
    "strongly",
    "recommended",
    "turn",
    "mfa",
    "root",
    "user",
    "ad",
    "us",
    "bug",
    "ends",
    "tell",
    "turn",
    "let",
    "talk",
    "uh",
    "tasks",
    "performing",
    "root",
    "user",
    "root",
    "user",
    "perform",
    "changing",
    "account",
    "settings",
    "includes",
    "account",
    "name",
    "email",
    "address",
    "root",
    "user",
    "password",
    "root",
    "user",
    "access",
    "keys",
    "account",
    "settings",
    "contact",
    "information",
    "payment",
    "currency",
    "preference",
    "regions",
    "require",
    "root",
    "user",
    "credentials",
    "everything",
    "um",
    "restore",
    "im",
    "user",
    "permissions",
    "im",
    "admin",
    "user",
    "admin",
    "access",
    "actually",
    "revokes",
    "permissions",
    "sign",
    "root",
    "user",
    "edit",
    "policies",
    "restore",
    "permissions",
    "um",
    "also",
    "activate",
    "im",
    "access",
    "billing",
    "cost",
    "management",
    "console",
    "view",
    "certain",
    "tax",
    "invoices",
    "close",
    "ads",
    "account",
    "change",
    "cancel",
    "adus",
    "support",
    "plan",
    "register",
    "seller",
    "reserved",
    "instance",
    "marketplace",
    "enable",
    "mfa",
    "delete",
    "s3",
    "buckets",
    "edit",
    "delete",
    "amazon",
    "s3",
    "bucket",
    "policy",
    "includes",
    "invalid",
    "vpc",
    "id",
    "vpc",
    "endpoint",
    "id",
    "sign",
    "govcloud",
    "something",
    "took",
    "documentation",
    "uh",
    "use",
    "adus",
    "uh",
    "account",
    "user",
    "create",
    "organization",
    "ca",
    "create",
    "user",
    "um",
    "know",
    "ones",
    "highlighted",
    "red",
    "likely",
    "show",
    "exam",
    "uh",
    "highlighted",
    "go",
    "music",
    "hey",
    "andre",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "adus",
    "single",
    "sign",
    "also",
    "known",
    "adus",
    "sso",
    "create",
    "connect",
    "workforce",
    "identities",
    "adabs",
    "manage",
    "access",
    "centrally",
    "across",
    "adus",
    "organization",
    "idea",
    "going",
    "choose",
    "identity",
    "source",
    "whether",
    "sso",
    "active",
    "directory",
    "samle",
    "idp",
    "going",
    "manage",
    "user",
    "permission",
    "centrally",
    "ads",
    "accounts",
    "applications",
    "samle",
    "application",
    "uses",
    "get",
    "single",
    "click",
    "access",
    "things",
    "know",
    "kind",
    "zoom",
    "graphic",
    "uh",
    "know",
    "premise",
    "active",
    "directory",
    "establishing",
    "ad",
    "trust",
    "connection",
    "able",
    "single",
    "sign",
    "going",
    "able",
    "apply",
    "permissions",
    "access",
    "resources",
    "within",
    "adus",
    "account",
    "via",
    "adus",
    "organizations",
    "organizational",
    "units",
    "resources",
    "also",
    "use",
    "ads",
    "sso",
    "access",
    "custom",
    "samle",
    "based",
    "application",
    "know",
    "built",
    "web",
    "app",
    "uh",
    "like",
    "exam",
    "pro",
    "platform",
    "wanted",
    "use",
    "sample",
    "based",
    "uh",
    "connections",
    "single",
    "sign",
    "could",
    "well",
    "connect",
    "sso",
    "access",
    "business",
    "cloud",
    "application",
    "office",
    "365",
    "dropbox",
    "slack",
    "things",
    "like",
    "music",
    "go",
    "let",
    "take",
    "look",
    "application",
    "integration",
    "process",
    "letting",
    "independent",
    "applications",
    "community",
    "comm",
    "unicate",
    "work",
    "commonly",
    "facilitated",
    "intermediate",
    "system",
    "cloud",
    "workloads",
    "uh",
    "strongly",
    "encourage",
    "systems",
    "services",
    "loosely",
    "coupled",
    "inabus",
    "many",
    "services",
    "specific",
    "purpose",
    "application",
    "integration",
    "based",
    "around",
    "common",
    "systems",
    "design",
    "patterns",
    "utilize",
    "application",
    "integration",
    "would",
    "things",
    "like",
    "queuing",
    "streaming",
    "pub",
    "sub",
    "api",
    "gateways",
    "state",
    "machines",
    "event",
    "buses",
    "sure",
    "could",
    "uh",
    "think",
    "common",
    "ones",
    "music",
    "okay",
    "understand",
    "queuing",
    "need",
    "know",
    "messaging",
    "system",
    "used",
    "provide",
    "asynchronous",
    "communication",
    "decouple",
    "processes",
    "via",
    "messages",
    "events",
    "sender",
    "receiver",
    "producer",
    "consumer",
    "queing",
    "system",
    "messaging",
    "system",
    "generally",
    "delete",
    "messages",
    "consumed",
    "simple",
    "communication",
    "real",
    "time",
    "pull",
    "data",
    "reactive",
    "uh",
    "good",
    "analogy",
    "would",
    "imagine",
    "people",
    "queuing",
    "line",
    "go",
    "something",
    "fre",
    "tos",
    "called",
    "simple",
    "queuing",
    "service",
    "sqs",
    "fully",
    "managed",
    "queuing",
    "service",
    "enables",
    "decouple",
    "scale",
    "microservices",
    "distributed",
    "systems",
    "serverless",
    "applications",
    "common",
    "use",
    "case",
    "web",
    "application",
    "would",
    "queue",
    "transactional",
    "emails",
    "uh",
    "sent",
    "like",
    "sign",
    "reset",
    "password",
    "reason",
    "queing",
    "decouple",
    "uh",
    "kind",
    "actions",
    "long",
    "running",
    "task",
    "um",
    "many",
    "could",
    "hang",
    "applications",
    "decoupling",
    "letting",
    "separate",
    "compute",
    "uh",
    "service",
    "take",
    "care",
    "um",
    "would",
    "something",
    "would",
    "useful",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "streaming",
    "different",
    "kind",
    "messaging",
    "system",
    "um",
    "idea",
    "multiple",
    "cons",
    "consumers",
    "react",
    "events",
    "streaming",
    "call",
    "messages",
    "events",
    "queing",
    "system",
    "call",
    "messages",
    "events",
    "live",
    "stream",
    "long",
    "periods",
    "time",
    "complex",
    "operations",
    "applied",
    "generally",
    "streaming",
    "used",
    "real",
    "time",
    "stuff",
    "whereas",
    "queuing",
    "necessarily",
    "real",
    "time",
    "ad",
    "solution",
    "amazon",
    "kinesis",
    "could",
    "also",
    "use",
    "kafka",
    "focus",
    "kinesis",
    "amazon",
    "kinesis",
    "adist",
    "fully",
    "managed",
    "solution",
    "collecting",
    "processing",
    "analyzing",
    "streaming",
    "data",
    "cloud",
    "idea",
    "producers",
    "producing",
    "events",
    "could",
    "ec2",
    "instances",
    "mobile",
    "devices",
    "could",
    "computer",
    "traditional",
    "server",
    "going",
    "go",
    "data",
    "stream",
    "bunch",
    "shards",
    "scale",
    "consumers",
    "side",
    "maybe",
    "red",
    "shift",
    "wants",
    "data",
    "dynamo",
    "db",
    "s3",
    "emr",
    "okay",
    "thing",
    "remember",
    "streaming",
    "real",
    "time",
    "data",
    "imagine",
    "real",
    "time",
    "lot",
    "work",
    "um",
    "queuing",
    "system",
    "going",
    "cost",
    "okay",
    "another",
    "type",
    "messaging",
    "system",
    "known",
    "pubsub",
    "stands",
    "publish",
    "subscribe",
    "pattern",
    "commonly",
    "implemented",
    "messaging",
    "systems",
    "pub",
    "sub",
    "system",
    "sender",
    "messages",
    "publishers",
    "send",
    "message",
    "directly",
    "receivers",
    "instead",
    "send",
    "messages",
    "event",
    "bus",
    "event",
    "bus",
    "categorizes",
    "messages",
    "groups",
    "receivers",
    "messages",
    "subscribers",
    "subscribe",
    "groups",
    "whenever",
    "new",
    "messages",
    "appear",
    "within",
    "subscriptions",
    "messages",
    "immediately",
    "delivered",
    "idea",
    "publishers",
    "event",
    "bus",
    "subscribers",
    "event",
    "buses",
    "appear",
    "actually",
    "appears",
    "streaming",
    "appears",
    "pub",
    "sub",
    "model",
    "appear",
    "variations",
    "going",
    "hear",
    "word",
    "event",
    "bus",
    "um",
    "idea",
    "publisher",
    "knowledge",
    "subscribers",
    "subscribers",
    "pull",
    "messages",
    "messages",
    "instead",
    "automatically",
    "immediately",
    "pushed",
    "subscribers",
    "messages",
    "events",
    "interchangeable",
    "terms",
    "pub",
    "sub",
    "right",
    "know",
    "idea",
    "publisher",
    "subscribers",
    "imagine",
    "getting",
    "like",
    "um",
    "magazine",
    "subscription",
    "right",
    "think",
    "kind",
    "think",
    "mechanisms",
    "going",
    "terms",
    "practicality",
    "common",
    "use",
    "chat",
    "system",
    "web",
    "hook",
    "system",
    "know",
    "hopefully",
    "gives",
    "idea",
    "terms",
    "aws",
    "solution",
    "using",
    "simple",
    "notification",
    "service",
    "sns",
    "highly",
    "available",
    "durable",
    "secure",
    "fully",
    "managed",
    "pub",
    "sub",
    "messaging",
    "service",
    "enables",
    "decouple",
    "micros",
    "services",
    "distributed",
    "systems",
    "serverless",
    "applications",
    "variety",
    "publishers",
    "like",
    "sdk",
    "cli",
    "cloudwatch",
    "services",
    "sns",
    "topic",
    "uh",
    "filter",
    "things",
    "fan",
    "subscribers",
    "lambda",
    "sqs",
    "emails",
    "hps",
    "looks",
    "similar",
    "streaming",
    "know",
    "um",
    "know",
    "lot",
    "communication",
    "going",
    "back",
    "publishers",
    "subscribers",
    "limited",
    "know",
    "things",
    "managed",
    "service",
    "right",
    "whereas",
    "uh",
    "kinesis",
    "lot",
    "music",
    "okay",
    "api",
    "gateway",
    "well",
    "program",
    "sits",
    "single",
    "entry",
    "point",
    "multiple",
    "backends",
    "api",
    "gateway",
    "allows",
    "throttling",
    "logging",
    "routing",
    "logic",
    "formatting",
    "requests",
    "response",
    "say",
    "request",
    "response",
    "talking",
    "https",
    "uh",
    "requests",
    "responses",
    "service",
    "ads",
    "called",
    "amazon",
    "api",
    "gateway",
    "api",
    "gateway",
    "type",
    "pattern",
    "cases",
    "ads",
    "named",
    "thing",
    "amazon",
    "api",
    "gateway",
    "solution",
    "creating",
    "secure",
    "apis",
    "cloud",
    "environment",
    "scale",
    "create",
    "apis",
    "act",
    "front",
    "door",
    "applications",
    "access",
    "data",
    "business",
    "logic",
    "functionality",
    "backend",
    "services",
    "idea",
    "data",
    "coming",
    "uh",
    "mobile",
    "apps",
    "web",
    "apps",
    "iot",
    "devices",
    "define",
    "api",
    "calls",
    "say",
    "want",
    "go",
    "maybe",
    "tasks",
    "going",
    "go",
    "lambdas",
    "um",
    "routes",
    "going",
    "go",
    "rds",
    "kinesis",
    "ec2",
    "uh",
    "web",
    "application",
    "really",
    "great",
    "um",
    "uh",
    "able",
    "define",
    "api",
    "routes",
    "change",
    "fly",
    "always",
    "route",
    "place",
    "music",
    "okay",
    "state",
    "machine",
    "abstract",
    "model",
    "decides",
    "one",
    "state",
    "moves",
    "another",
    "based",
    "series",
    "ofad",
    "conditions",
    "think",
    "state",
    "machine",
    "like",
    "flowchart",
    "aws",
    "solution",
    "adus",
    "step",
    "function",
    "coordinate",
    "multiple",
    "adus",
    "services",
    "serverless",
    "workflow",
    "graphical",
    "console",
    "visualize",
    "components",
    "application",
    "series",
    "steps",
    "automatically",
    "trigger",
    "track",
    "step",
    "retries",
    "errors",
    "application",
    "executes",
    "order",
    "expected",
    "every",
    "time",
    "logs",
    "state",
    "step",
    "things",
    "go",
    "wrong",
    "diagnose",
    "debug",
    "problems",
    "quickly",
    "example",
    "using",
    "bunch",
    "um",
    "uh",
    "steps",
    "together",
    "uh",
    "adus",
    "step",
    "functions",
    "service",
    "know",
    "generally",
    "applied",
    "servess",
    "workflows",
    "something",
    "useful",
    "application",
    "integration",
    "music",
    "okay",
    "event",
    "bus",
    "event",
    "bus",
    "receives",
    "events",
    "source",
    "routes",
    "events",
    "target",
    "based",
    "rules",
    "get",
    "pen",
    "tool",
    "event",
    "enters",
    "event",
    "bus",
    "rules",
    "tell",
    "go",
    "target",
    "simple",
    "seeing",
    "event",
    "buses",
    "things",
    "like",
    "uh",
    "streaming",
    "uh",
    "pub",
    "sub",
    "adus",
    "kind",
    "event",
    "bus",
    "offering",
    "uh",
    "kind",
    "uh",
    "high",
    "level",
    "called",
    "event",
    "bridge",
    "service",
    "event",
    "bus",
    "service",
    "used",
    "application",
    "integration",
    "streaming",
    "realtime",
    "data",
    "applications",
    "service",
    "formerly",
    "known",
    "event",
    "amazon",
    "cloudwatch",
    "events",
    "gave",
    "give",
    "renaming",
    "give",
    "better",
    "um",
    "opportunity",
    "users",
    "know",
    "use",
    "uh",
    "also",
    "extended",
    "capabilities",
    "thing",
    "lot",
    "ad",
    "services",
    "always",
    "admitting",
    "events",
    "already",
    "going",
    "bus",
    "utilize",
    "service",
    "um",
    "lot",
    "easier",
    "roll",
    "thing",
    "uh",
    "services",
    "amazon",
    "event",
    "bridge",
    "define",
    "event",
    "bus",
    "event",
    "bus",
    "holds",
    "event",
    "data",
    "defines",
    "rules",
    "event",
    "bus",
    "react",
    "events",
    "always",
    "get",
    "default",
    "event",
    "every",
    "single",
    "adus",
    "account",
    "create",
    "custom",
    "event",
    "buses",
    "scope",
    "multiple",
    "accounts",
    "adus",
    "accounts",
    "sas",
    "event",
    "bus",
    "scope",
    "thirdparty",
    "sas",
    "providers",
    "producers",
    "ad",
    "services",
    "emit",
    "events",
    "events",
    "data",
    "emitted",
    "services",
    "jent",
    "objects",
    "uh",
    "travel",
    "stream",
    "within",
    "event",
    "bus",
    "partnered",
    "sources",
    "apps",
    "emit",
    "events",
    "event",
    "buses",
    "rules",
    "determine",
    "events",
    "capture",
    "pass",
    "targets",
    "targets",
    "services",
    "consume",
    "events",
    "yeah",
    "great",
    "um",
    "uh",
    "uh",
    "stuff",
    "going",
    "know",
    "might",
    "case",
    "use",
    "event",
    "bridge",
    "save",
    "time",
    "uh",
    "lot",
    "time",
    "effort",
    "uh",
    "application",
    "integration",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "application",
    "integration",
    "services",
    "glance",
    "let",
    "get",
    "first",
    "simple",
    "notification",
    "service",
    "sns",
    "pub",
    "sub",
    "messaging",
    "system",
    "sends",
    "notific",
    "ation",
    "via",
    "various",
    "formats",
    "plain",
    "text",
    "email",
    "htps",
    "web",
    "hooks",
    "sms",
    "text",
    "messages",
    "sqs",
    "lambda",
    "pushes",
    "messages",
    "sent",
    "subscribers",
    "sqs",
    "queuing",
    "messaging",
    "system",
    "service",
    "sends",
    "events",
    "queue",
    "applications",
    "pull",
    "queue",
    "messages",
    "commonly",
    "used",
    "background",
    "jobs",
    "step",
    "functions",
    "state",
    "machine",
    "service",
    "coordinates",
    "multiple",
    "services",
    "servess",
    "workflow",
    "easily",
    "share",
    "data",
    "among",
    "lambdas",
    "group",
    "lambdas",
    "wait",
    "create",
    "logical",
    "steps",
    "also",
    "works",
    "fargate",
    "tasks",
    "rent",
    "bridge",
    "formerly",
    "known",
    "cloudwatch",
    "events",
    "service",
    "event",
    "bus",
    "makes",
    "easy",
    "connect",
    "applications",
    "together",
    "application",
    "thirdparty",
    "services",
    "adus",
    "services",
    "kinesis",
    "streaming",
    "data",
    "service",
    "creates",
    "producers",
    "send",
    "data",
    "stream",
    "multiple",
    "consumers",
    "consume",
    "data",
    "within",
    "stream",
    "used",
    "realtime",
    "analytics",
    "click",
    "streams",
    "ingesting",
    "data",
    "fleet",
    "iot",
    "devices",
    "amazon",
    "mq",
    "manage",
    "message",
    "broker",
    "service",
    "uses",
    "apachi",
    "active",
    "mq",
    "want",
    "use",
    "apachi",
    "active",
    "mq",
    "manage",
    "kofka",
    "service",
    "gets",
    "every",
    "time",
    "says",
    "msk",
    "proper",
    "initialization",
    "think",
    "mks",
    "fully",
    "managed",
    "apachi",
    "kafka",
    "service",
    "kofka",
    "open",
    "source",
    "platform",
    "building",
    "realtime",
    "streaming",
    "data",
    "pipelines",
    "applications",
    "similar",
    "kinesis",
    "robust",
    "popular",
    "way",
    "api",
    "gateway",
    "fully",
    "managed",
    "service",
    "developers",
    "create",
    "publish",
    "maintain",
    "monitor",
    "secure",
    "apis",
    "create",
    "api",
    "endpoints",
    "wrote",
    "ad",
    "services",
    "appsync",
    "fully",
    "managed",
    "graphql",
    "service",
    "graphql",
    "source",
    "agnostic",
    "query",
    "adapter",
    "allows",
    "query",
    "data",
    "many",
    "different",
    "data",
    "sources",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "comparing",
    "virtual",
    "machines",
    "containers",
    "know",
    "covered",
    "prior",
    "want",
    "one",
    "time",
    "make",
    "sure",
    "fundamentally",
    "understand",
    "difference",
    "jump",
    "containers",
    "idea",
    "request",
    "ec2",
    "instance",
    "host",
    "operating",
    "system",
    "really",
    "know",
    "much",
    "really",
    "need",
    "know",
    "uh",
    "idea",
    "hypervisor",
    "allows",
    "deploy",
    "virtual",
    "machines",
    "launch",
    "ec2",
    "instance",
    "actually",
    "launching",
    "vm",
    "top",
    "hypervisor",
    "server",
    "uh",
    "uh",
    "within",
    "adabs",
    "uh",
    "data",
    "centers",
    "servers",
    "going",
    "choose",
    "operating",
    "system",
    "like",
    "fun",
    "might",
    "come",
    "packages",
    "going",
    "install",
    "libraries",
    "packages",
    "binaries",
    "going",
    "decide",
    "kind",
    "workloads",
    "want",
    "run",
    "could",
    "jango",
    "uh",
    "mongodb",
    "database",
    "kind",
    "queuing",
    "system",
    "like",
    "rabbit",
    "mq",
    "difficulties",
    "virtual",
    "machines",
    "always",
    "going",
    "end",
    "unused",
    "space",
    "going",
    "want",
    "headroom",
    "uh",
    "make",
    "sure",
    "uh",
    "know",
    "know",
    "dango",
    "needs",
    "memory",
    "mongod",
    "db",
    "needs",
    "storage",
    "room",
    "grow",
    "idea",
    "always",
    "paying",
    "even",
    "utilizing",
    "know",
    "uh",
    "cost",
    "effective",
    "like",
    "looking",
    "um",
    "using",
    "containers",
    "um",
    "instead",
    "hypervisor",
    "container",
    "virtualization",
    "common",
    "one",
    "would",
    "called",
    "docker",
    "damon",
    "docker",
    "course",
    "launching",
    "containers",
    "maybe",
    "alpine",
    "web",
    "app",
    "install",
    "exactly",
    "libraries",
    "packages",
    "binaries",
    "need",
    "mongodb",
    "want",
    "different",
    "os",
    "different",
    "packages",
    "thing",
    "rabbid",
    "mq",
    "maybe",
    "want",
    "run",
    "freebsd",
    "idea",
    "uh",
    "know",
    "going",
    "waste",
    "kind",
    "changed",
    "sense",
    "containers",
    "flexible",
    "expand",
    "decrease",
    "based",
    "use",
    "case",
    "need",
    "uh",
    "know",
    "use",
    "particular",
    "services",
    "like",
    "fargate",
    "know",
    "paying",
    "like",
    "running",
    "containers",
    "necessarily",
    "uh",
    "provisioning",
    "okay",
    "vms",
    "make",
    "best",
    "use",
    "space",
    "apps",
    "isolated",
    "could",
    "cause",
    "config",
    "conflict",
    "security",
    "problems",
    "resource",
    "hogging",
    "containers",
    "allow",
    "run",
    "multiple",
    "apps",
    "virtually",
    "isolated",
    "launch",
    "new",
    "containers",
    "configure",
    "os",
    "uh",
    "dependencies",
    "per",
    "container",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "concept",
    "microservices",
    "understand",
    "microservices",
    "first",
    "need",
    "understand",
    "monoliths",
    "monolithic",
    "architecture",
    "idea",
    "one",
    "app",
    "responsible",
    "everything",
    "functionality",
    "tightly",
    "coupled",
    "going",
    "get",
    "pen",
    "tool",
    "highlight",
    "notice",
    "server",
    "everything",
    "running",
    "single",
    "server",
    "whether",
    "load",
    "balancing",
    "caching",
    "database",
    "um",
    "maybe",
    "marketing",
    "website",
    "javascript",
    "framework",
    "back",
    "end",
    "api",
    "uh",
    "uh",
    "om",
    "connected",
    "background",
    "tasks",
    "things",
    "like",
    "idea",
    "monolith",
    "um",
    "lot",
    "people",
    "used",
    "idea",
    "microservice",
    "architecture",
    "multiple",
    "apps",
    "responsible",
    "one",
    "uh",
    "one",
    "thing",
    "functionality",
    "isolate",
    "stateless",
    "uh",
    "leveraging",
    "um",
    "various",
    "cloud",
    "services",
    "bolting",
    "onto",
    "service",
    "um",
    "know",
    "technically",
    "using",
    "microservice",
    "architecture",
    "maybe",
    "web",
    "app",
    "hosted",
    "um",
    "containers",
    "apis",
    "orm",
    "reports",
    "maybe",
    "abstracted",
    "particular",
    "functions",
    "lambda",
    "functions",
    "um",
    "marketing",
    "website",
    "hosted",
    "s3",
    "frontend",
    "javascript",
    "hosted",
    "s3",
    "using",
    "elastic",
    "load",
    "balancer",
    "uh",
    "elastic",
    "cache",
    "rds",
    "sqs",
    "idea",
    "monoliths",
    "microservices",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "kubernetes",
    "container",
    "orchestration",
    "system",
    "automating",
    "deployment",
    "scaling",
    "management",
    "containers",
    "originally",
    "created",
    "google",
    "maintained",
    "cloud",
    "native",
    "computing",
    "foundation",
    "cncf",
    "kubernetes",
    "commonly",
    "called",
    "k8",
    "the8",
    "represents",
    "remaining",
    "letters",
    "kuti",
    "odd",
    "everyone",
    "calls",
    "kubernetes",
    "advantage",
    "kubernetes",
    "docker",
    "ability",
    "run",
    "containers",
    "distributed",
    "across",
    "multiple",
    "vms",
    "unique",
    "component",
    "kubernetes",
    "pods",
    "pod",
    "group",
    "one",
    "containers",
    "shared",
    "storage",
    "network",
    "resources",
    "shared",
    "settings",
    "kind",
    "example",
    "kubernetes",
    "master",
    "schedule",
    "controller",
    "etcd",
    "might",
    "using",
    "uses",
    "api",
    "server",
    "run",
    "nodes",
    "within",
    "nodes",
    "pods",
    "within",
    "pods",
    "containers",
    "kubernetes",
    "ideally",
    "microservice",
    "architectures",
    "company",
    "tens",
    "hundreds",
    "services",
    "need",
    "manage",
    "need",
    "really",
    "emphasize",
    "tens",
    "hundreds",
    "services",
    "right",
    "know",
    "crimin",
    "great",
    "understand",
    "really",
    "designed",
    "uh",
    "used",
    "massive",
    "amounts",
    "microservices",
    "need",
    "might",
    "want",
    "look",
    "something",
    "easier",
    "use",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "docker",
    "set",
    "platforms",
    "service",
    "products",
    "use",
    "os",
    "level",
    "virtualization",
    "deliver",
    "software",
    "packages",
    "called",
    "containers",
    "docker",
    "earliest",
    "popularized",
    "open",
    "source",
    "container",
    "platform",
    "meaning",
    "lots",
    "tutorials",
    "lot",
    "services",
    "uh",
    "integrate",
    "docker",
    "make",
    "really",
    "easy",
    "use",
    "people",
    "think",
    "containers",
    "generally",
    "think",
    "docker",
    "course",
    "lot",
    "options",
    "docker",
    "run",
    "containers",
    "people",
    "think",
    "said",
    "suite",
    "tools",
    "idea",
    "docker",
    "cli",
    "cli",
    "commands",
    "download",
    "upload",
    "build",
    "run",
    "debug",
    "containers",
    "docker",
    "file",
    "configuration",
    "file",
    "provision",
    "container",
    "docker",
    "compose",
    "uh",
    "tool",
    "configuration",
    "file",
    "working",
    "multiple",
    "containers",
    "docker",
    "swarm",
    "orchestration",
    "tool",
    "managing",
    "deployed",
    "multicontainer",
    "architectures",
    "docker",
    "hub",
    "public",
    "online",
    "repository",
    "containers",
    "published",
    "community",
    "download",
    "one",
    "really",
    "interesting",
    "thing",
    "uh",
    "came",
    "docker",
    "open",
    "container",
    "initiative",
    "oci",
    "open",
    "government",
    "structure",
    "creating",
    "open",
    "industry",
    "standards",
    "around",
    "container",
    "formats",
    "runtimes",
    "docker",
    "established",
    "oc",
    "oci",
    "maintained",
    "linux",
    "foundation",
    "idea",
    "write",
    "docker",
    "file",
    "things",
    "similarly",
    "use",
    "different",
    "types",
    "um",
    "technologies",
    "use",
    "containers",
    "long",
    "oci",
    "compatible",
    "use",
    "docker",
    "losing",
    "favor",
    "developers",
    "due",
    "handling",
    "introducing",
    "paid",
    "open",
    "source",
    "model",
    "alternatives",
    "like",
    "podman",
    "growing",
    "going",
    "talk",
    "podman",
    "next",
    "music",
    "okay",
    "let",
    "take",
    "quick",
    "look",
    "podman",
    "container",
    "engine",
    "oci",
    "compliant",
    "drop",
    "replacement",
    "docker",
    "want",
    "get",
    "exposure",
    "want",
    "know",
    "um",
    "uh",
    "use",
    "opposed",
    "using",
    "docker",
    "um",
    "differences",
    "advantages",
    "podman",
    "podman",
    "damon",
    "list",
    "docker",
    "uses",
    "container",
    "damon",
    "podman",
    "allows",
    "create",
    "pods",
    "like",
    "ku",
    "brunetes",
    "docker",
    "pods",
    "podman",
    "replaces",
    "one",
    "part",
    "docker",
    "podman",
    "used",
    "alongside",
    "builda",
    "uh",
    "scopio",
    "know",
    "docker",
    "kind",
    "tool",
    "uh",
    "everything",
    "done",
    "via",
    "single",
    "cli",
    "everything",
    "know",
    "wanted",
    "make",
    "module",
    "uh",
    "tools",
    "anytime",
    "say",
    "podman",
    "usually",
    "means",
    "talking",
    "podman",
    "builda",
    "scopio",
    "builda",
    "tool",
    "used",
    "build",
    "oci",
    "images",
    "scopio",
    "tool",
    "moving",
    "container",
    "images",
    "different",
    "types",
    "container",
    "storages",
    "p",
    "going",
    "show",
    "exam",
    "practically",
    "know",
    "um",
    "benefit",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "container",
    "services",
    "offered",
    "aws",
    "primary",
    "services",
    "actually",
    "run",
    "containers",
    "provisioning",
    "deployment",
    "know",
    "tooling",
    "around",
    "provisioning",
    "deployment",
    "supporting",
    "services",
    "first",
    "lock",
    "stick",
    "container",
    "service",
    "ecs",
    "um",
    "advantage",
    "service",
    "cold",
    "starts",
    "dc2",
    "means",
    "going",
    "always",
    "paying",
    "resource",
    "running",
    "right",
    "ads",
    "fargate",
    "robust",
    "uh",
    "using",
    "lambda",
    "scale",
    "zero",
    "cost",
    "um",
    "uh",
    "managed",
    "adus",
    "managed",
    "ec2",
    "however",
    "cold",
    "starts",
    "know",
    "need",
    "containers",
    "launching",
    "really",
    "fast",
    "might",
    "wanting",
    "use",
    "ecs",
    "elastic",
    "kubernetes",
    "service",
    "eks",
    "uh",
    "open",
    "source",
    "runs",
    "kubernetes",
    "um",
    "really",
    "useful",
    "want",
    "avoid",
    "vendor",
    "lockin",
    "um",
    "really",
    "problem",
    "uh",
    "want",
    "run",
    "kubernetes",
    "itus",
    "lambda",
    "think",
    "code",
    "uh",
    "designed",
    "short",
    "running",
    "tasks",
    "uh",
    "need",
    "something",
    "runs",
    "longer",
    "want",
    "use",
    "serverless",
    "use",
    "aess",
    "fargate",
    "serverless",
    "containers",
    "deploy",
    "custom",
    "containers",
    "prior",
    "us",
    "lambda",
    "um",
    "runtimes",
    "containers",
    "create",
    "kind",
    "container",
    "uh",
    "use",
    "uh",
    "lambda",
    "provisioning",
    "deployment",
    "use",
    "elastic",
    "bean",
    "sock",
    "um",
    "uh",
    "deploy",
    "elastic",
    "container",
    "service",
    "um",
    "useful",
    "app",
    "runner",
    "kind",
    "overlaps",
    "elastic",
    "beanock",
    "specializes",
    "specializes",
    "containers",
    "um",
    "believe",
    "actually",
    "know",
    "uses",
    "underneath",
    "managed",
    "service",
    "elastic",
    "beanock",
    "um",
    "open",
    "see",
    "running",
    "underneath",
    "app",
    "runner",
    "believe",
    "see",
    "running",
    "underneath",
    "taken",
    "care",
    "aws",
    "aws",
    "uh",
    "cli",
    "allows",
    "build",
    "release",
    "operate",
    "production",
    "ready",
    "containerized",
    "applications",
    "app",
    "runner",
    "ecs",
    "abus",
    "fargate",
    "supporting",
    "services",
    "elastic",
    "container",
    "reg",
    "indry",
    "reple",
    "containers",
    "necessarily",
    "docker",
    "containers",
    "containers",
    "general",
    "probably",
    "oci",
    "compliant",
    "containers",
    "analyze",
    "debug",
    "microservices",
    "know",
    "distributed",
    "tracing",
    "step",
    "functions",
    "stitch",
    "together",
    "lambas",
    "ecs",
    "tasks",
    "uh",
    "create",
    "um",
    "um",
    "state",
    "machine",
    "thing",
    "would",
    "know",
    "able",
    "launch",
    "ec2",
    "instance",
    "marketplace",
    "um",
    "uh",
    "container",
    "runtime",
    "installed",
    "like",
    "doer",
    "u",
    "feel",
    "relevant",
    "exam",
    "another",
    "option",
    "containers",
    "something",
    "people",
    "often",
    "music",
    "go",
    "hey",
    "angie",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "organizations",
    "accounts",
    "adus",
    "organizations",
    "allow",
    "creation",
    "new",
    "adus",
    "accounts",
    "allows",
    "centrally",
    "manage",
    "building",
    "control",
    "access",
    "compliance",
    "security",
    "share",
    "resources",
    "across",
    "adus",
    "accounts",
    "kind",
    "bit",
    "structure",
    "um",
    "architecture",
    "adus",
    "organizations",
    "kind",
    "walk",
    "components",
    "first",
    "thing",
    "root",
    "account",
    "user",
    "single",
    "signin",
    "identity",
    "complete",
    "access",
    "adus",
    "services",
    "resources",
    "account",
    "account",
    "root",
    "account",
    "user",
    "generally",
    "master",
    "root",
    "account",
    "even",
    "within",
    "root",
    "account",
    "user",
    "every",
    "additional",
    "account",
    "notice",
    "root",
    "account",
    "user",
    "concept",
    "organizational",
    "unit",
    "uh",
    "commonly",
    "abbreviated",
    "ou",
    "group",
    "adus",
    "accounts",
    "within",
    "organization",
    "contain",
    "organizational",
    "units",
    "creating",
    "hierarchy",
    "one",
    "called",
    "starfleet",
    "one",
    "called",
    "federation",
    "planets",
    "underneath",
    "multiple",
    "uh",
    "accounts",
    "accounts",
    "within",
    "organizational",
    "unit",
    "even",
    "though",
    "show",
    "create",
    "organizational",
    "unit",
    "within",
    "organizational",
    "unit",
    "service",
    "control",
    "policies",
    "scps",
    "give",
    "uh",
    "central",
    "control",
    "allowed",
    "permissions",
    "adus",
    "accounts",
    "organization",
    "helping",
    "ensure",
    "accounts",
    "stay",
    "within",
    "organization",
    "guidelines",
    "trying",
    "say",
    "um",
    "concept",
    "adus",
    "policies",
    "creating",
    "policy",
    "going",
    "uh",
    "organizational",
    "uniwide",
    "organizational",
    "wide",
    "select",
    "accounts",
    "way",
    "applying",
    "policies",
    "across",
    "multiple",
    "accounts",
    "ais",
    "organizations",
    "must",
    "turned",
    "turned",
    "turned",
    "generally",
    "recommended",
    "turn",
    "um",
    "basically",
    "going",
    "run",
    "kind",
    "serious",
    "workload",
    "going",
    "using",
    "adus",
    "organizations",
    "uh",
    "isolate",
    "adus",
    "accounts",
    "based",
    "workloads",
    "create",
    "many",
    "adus",
    "accounts",
    "like",
    "one",
    "account",
    "master",
    "root",
    "account",
    "um",
    "say",
    "root",
    "account",
    "new",
    "language",
    "documentation",
    "still",
    "calls",
    "master",
    "account",
    "understand",
    "root",
    "account",
    "confused",
    "root",
    "account",
    "user",
    "another",
    "clarification",
    "want",
    "make",
    "ad",
    "account",
    "user",
    "account",
    "another",
    "thing",
    "confusing",
    "sign",
    "aws",
    "get",
    "um",
    "adus",
    "account",
    "creates",
    "user",
    "account",
    "happens",
    "root",
    "user",
    "account",
    "hopefully",
    "music",
    "clear",
    "adus",
    "control",
    "tower",
    "helps",
    "enterprises",
    "quickly",
    "set",
    "secure",
    "ads",
    "multi",
    "account",
    "provides",
    "baseline",
    "environment",
    "get",
    "started",
    "architecture",
    "uh",
    "different",
    "ways",
    "first",
    "thing",
    "provides",
    "landing",
    "zone",
    "baseline",
    "environment",
    "following",
    "well",
    "architected",
    "best",
    "practices",
    "start",
    "launching",
    "production",
    "ready",
    "workloads",
    "imagine",
    "wanted",
    "go",
    "um",
    "know",
    "perfect",
    "environment",
    "know",
    "secure",
    "um",
    "correctly",
    "configured",
    "good",
    "logging",
    "place",
    "landing",
    "zone",
    "os",
    "landing",
    "zone",
    "control",
    "tower",
    "going",
    "sso",
    "enabled",
    "default",
    "easy",
    "move",
    "accounts",
    "centralized",
    "logging",
    "ad",
    "cloud",
    "trail",
    "know",
    "going",
    "tamper",
    "evident",
    "tamper",
    "proof",
    "away",
    "workloads",
    "ca",
    "affected",
    "cross",
    "account",
    "security",
    "auditing",
    "um",
    "yeah",
    "landing",
    "zones",
    "really",
    "great",
    "account",
    "factory",
    "used",
    "call",
    "um",
    "uh",
    "vending",
    "machine",
    "uh",
    "changed",
    "account",
    "factory",
    "idea",
    "automates",
    "provisioning",
    "new",
    "accounts",
    "organization",
    "standardizes",
    "provisioning",
    "new",
    "accounts",
    "account",
    "configuration",
    "configure",
    "account",
    "factory",
    "network",
    "configuration",
    "region",
    "selections",
    "uh",
    "enable",
    "sell",
    "service",
    "builders",
    "configure",
    "provision",
    "accounts",
    "using",
    "aa",
    "service",
    "catalog",
    "aa",
    "service",
    "catalog",
    "uh",
    "workloads",
    "uh",
    "via",
    "cloud",
    "information",
    "templates",
    "created",
    "say",
    "okay",
    "allowed",
    "launch",
    "server",
    "resources",
    "um",
    "third",
    "important",
    "thing",
    "control",
    "tower",
    "comes",
    "guard",
    "rails",
    "prepackaged",
    "governance",
    "rules",
    "security",
    "operations",
    "compliance",
    "customers",
    "select",
    "apply",
    "specific",
    "groups",
    "accounts",
    "adus",
    "control",
    "tower",
    "replacement",
    "retired",
    "adus",
    "landing",
    "zone",
    "remember",
    "adus",
    "landing",
    "zones",
    "never",
    "selfs",
    "serve",
    "easy",
    "thing",
    "sign",
    "required",
    "lot",
    "money",
    "uh",
    "stuff",
    "go",
    "really",
    "anymore",
    "control",
    "tower",
    "new",
    "offering",
    "um",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "config",
    "understand",
    "adus",
    "config",
    "need",
    "know",
    "compliance",
    "code",
    "understand",
    "compliance",
    "code",
    "need",
    "understand",
    "change",
    "management",
    "change",
    "management",
    "context",
    "cloud",
    "infrastructure",
    "formal",
    "process",
    "monitor",
    "changes",
    "enforce",
    "changes",
    "remediate",
    "changes",
    "compliances",
    "code",
    "also",
    "known",
    "cac",
    "utilize",
    "programming",
    "automate",
    "monitoring",
    "enforcing",
    "remediating",
    "changes",
    "stay",
    "compliant",
    "compliance",
    "program",
    "expected",
    "configuration",
    "adus",
    "config",
    "well",
    "compliances",
    "code",
    "framework",
    "allows",
    "us",
    "manage",
    "change",
    "accounts",
    "per",
    "region",
    "basis",
    "meaning",
    "turn",
    "every",
    "region",
    "need",
    "simple",
    "example",
    "let",
    "say",
    "create",
    "config",
    "rule",
    "ec2",
    "instance",
    "expect",
    "particular",
    "state",
    "case",
    "rds",
    "instance",
    "state",
    "like",
    "idea",
    "try",
    "remediate",
    "put",
    "state",
    "want",
    "config",
    "rules",
    "powered",
    "lambdas",
    "see",
    "based",
    "lambda",
    "icon",
    "use",
    "adis",
    "config",
    "well",
    "want",
    "resource",
    "stay",
    "configured",
    "specific",
    "way",
    "compliance",
    "want",
    "keep",
    "track",
    "configuration",
    "changes",
    "resources",
    "want",
    "list",
    "resources",
    "within",
    "region",
    "want",
    "use",
    "uh",
    "uh",
    "analyze",
    "potential",
    "security",
    "weaknesses",
    "need",
    "detailed",
    "historical",
    "information",
    "go",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "follow",
    "along",
    "going",
    "take",
    "look",
    "adus",
    "config",
    "adus",
    "config",
    "tool",
    "allows",
    "ensure",
    "services",
    "configured",
    "expected",
    "already",
    "activated",
    "north",
    "virginia",
    "region",
    "going",
    "go",
    "ohio",
    "uh",
    "per",
    "region",
    "activated",
    "go",
    "config",
    "set",
    "oneclick",
    "setup",
    "skip",
    "review",
    "step",
    "kind",
    "piggybacking",
    "configuration",
    "original",
    "one",
    "idea",
    "say",
    "uh",
    "record",
    "resources",
    "region",
    "things",
    "like",
    "create",
    "service",
    "roll",
    "link",
    "done",
    "look",
    "little",
    "bit",
    "different",
    "using",
    "existing",
    "one",
    "choose",
    "bucket",
    "create",
    "bucket",
    "uh",
    "super",
    "complicated",
    "get",
    "hit",
    "confirm",
    "basically",
    "going",
    "end",
    "inventory",
    "um",
    "lets",
    "see",
    "resources",
    "resources",
    "account",
    "particular",
    "region",
    "populate",
    "right",
    "away",
    "wait",
    "little",
    "bit",
    "time",
    "appear",
    "one",
    "really",
    "nice",
    "thing",
    "conformance",
    "packs",
    "really",
    "love",
    "things",
    "ad",
    "us",
    "first",
    "brought",
    "like",
    "couple",
    "tons",
    "tons",
    "tons",
    "conformance",
    "packs",
    "go",
    "deploy",
    "conformance",
    "pack",
    "open",
    "templates",
    "want",
    "show",
    "look",
    "many",
    "might",
    "recognize",
    "like",
    "nist",
    "uh",
    "cis",
    "things",
    "like",
    "well",
    "detected",
    "uh",
    "stuff",
    "um",
    "sure",
    "easy",
    "open",
    "open",
    "github",
    "cloud",
    "foration",
    "templates",
    "set",
    "configuration",
    "rules",
    "variety",
    "suggested",
    "rules",
    "uh",
    "like",
    "around",
    "im",
    "best",
    "practices",
    "things",
    "like",
    "load",
    "um",
    "idea",
    "going",
    "create",
    "rules",
    "go",
    "add",
    "rule",
    "bunch",
    "manage",
    "rules",
    "um",
    "look",
    "think",
    "might",
    "fun",
    "actually",
    "run",
    "um",
    "conformance",
    "pack",
    "show",
    "looks",
    "like",
    "add",
    "rule",
    "first",
    "let",
    "say",
    "wanted",
    "something",
    "s3",
    "um",
    "making",
    "sure",
    "blocking",
    "public",
    "access",
    "go",
    "next",
    "generally",
    "trigger",
    "type",
    "choose",
    "whether",
    "uh",
    "configured",
    "happens",
    "periodic",
    "disabled",
    "case",
    "scroll",
    "um",
    "added",
    "rule",
    "also",
    "manage",
    "remediation",
    "rule",
    "said",
    "hey",
    "thing",
    "want",
    "take",
    "particular",
    "action",
    "adus",
    "actions",
    "perform",
    "notify",
    "right",
    "people",
    "correct",
    "auto",
    "correct",
    "choose",
    "um",
    "rules",
    "also",
    "make",
    "custom",
    "one",
    "providing",
    "lambda",
    "functions",
    "providing",
    "lambda",
    "arn",
    "basically",
    "anything",
    "want",
    "whatever",
    "want",
    "put",
    "lambda",
    "make",
    "adist",
    "config",
    "check",
    "okay",
    "super",
    "complic",
    "um",
    "one",
    "going",
    "go",
    "ahead",
    "check",
    "go",
    "reevaluate",
    "might",
    "take",
    "time",
    "show",
    "either",
    "going",
    "say",
    "compliant",
    "okay",
    "compliant",
    "waiting",
    "happen",
    "let",
    "see",
    "hard",
    "deploy",
    "conformance",
    "pack",
    "feel",
    "like",
    "something",
    "really",
    "important",
    "oh",
    "drop",
    "choose",
    "great",
    "might",
    "want",
    "go",
    "oops",
    "identity",
    "access",
    "management",
    "hit",
    "next",
    "say",
    "uh",
    "um",
    "uh",
    "im",
    "best",
    "practices",
    "might",
    "want",
    "spend",
    "want",
    "say",
    "spend",
    "going",
    "happen",
    "instantly",
    "idea",
    "turn",
    "forget",
    "remove",
    "uh",
    "see",
    "kind",
    "charges",
    "time",
    "check",
    "based",
    "rules",
    "super",
    "expensive",
    "something",
    "consider",
    "um",
    "anyway",
    "looks",
    "like",
    "created",
    "conformance",
    "pack",
    "refresh",
    "looks",
    "like",
    "progress",
    "wonder",
    "going",
    "set",
    "cloud",
    "formation",
    "template",
    "kind",
    "curious",
    "make",
    "way",
    "cloud",
    "formation",
    "really",
    "nice",
    "done",
    "tear",
    "deleting",
    "stack",
    "going",
    "go",
    "back",
    "conformance",
    "pack",
    "let",
    "take",
    "look",
    "still",
    "says",
    "progress",
    "completed",
    "click",
    "see",
    "things",
    "says",
    "item",
    "groups",
    "user",
    "check",
    "informance",
    "pack",
    "um",
    "looks",
    "like",
    "bunch",
    "uh",
    "cool",
    "rules",
    "uh",
    "wait",
    "little",
    "come",
    "back",
    "see",
    "um",
    "updates",
    "see",
    "compliant",
    "uh",
    "basic",
    "account",
    "okay",
    "right",
    "waiting",
    "little",
    "looks",
    "like",
    "set",
    "gave",
    "hard",
    "refresh",
    "uh",
    "see",
    "saying",
    "root",
    "account",
    "um",
    "whoops",
    "give",
    "moment",
    "refresh",
    "uh",
    "root",
    "account",
    "mfa",
    "applied",
    "yes",
    "done",
    "password",
    "policy",
    "actually",
    "never",
    "password",
    "policy",
    "something",
    "forgot",
    "talking",
    "minimums",
    "maximums",
    "things",
    "okay",
    "conformance",
    "pack",
    "um",
    "go",
    "rules",
    "actually",
    "guess",
    "rules",
    "ca",
    "really",
    "tell",
    "difference",
    "conformance",
    "pack",
    "rules",
    "plane",
    "rules",
    "kind",
    "kind",
    "mixed",
    "together",
    "think",
    "yeah",
    "bit",
    "hard",
    "see",
    "going",
    "go",
    "performance",
    "pack",
    "click",
    "might",
    "show",
    "rules",
    "yeah",
    "go",
    "rules",
    "see",
    "little",
    "bit",
    "information",
    "use",
    "hardware",
    "mfa",
    "know",
    "talking",
    "using",
    "security",
    "key",
    "like",
    "showed",
    "earlier",
    "course",
    "things",
    "like",
    "um",
    "password",
    "policy",
    "things",
    "like",
    "know",
    "complicated",
    "um",
    "think",
    "done",
    "going",
    "going",
    "go",
    "cloud",
    "formation",
    "tear",
    "get",
    "idea",
    "well",
    "might",
    "want",
    "show",
    "uh",
    "drift",
    "used",
    "way",
    "go",
    "like",
    "keep",
    "changing",
    "things",
    "way",
    "see",
    "uh",
    "history",
    "time",
    "something",
    "used",
    "show",
    "trying",
    "like",
    "find",
    "put",
    "like",
    "somewhere",
    "else",
    "resources",
    "maybe",
    "ah",
    "resource",
    "timeline",
    "okay",
    "moved",
    "resource",
    "inventory",
    "take",
    "look",
    "something",
    "anything",
    "maybe",
    "resource",
    "timeline",
    "um",
    "might",
    "much",
    "idea",
    "show",
    "time",
    "things",
    "changed",
    "idea",
    "say",
    "config",
    "something",
    "compliant",
    "compliant",
    "something",
    "really",
    "important",
    "know",
    "okay",
    "simple",
    "example",
    "maybe",
    "best",
    "idea",
    "see",
    "compliant",
    "based",
    "uh",
    "changes",
    "stuff",
    "uh",
    "anyway",
    "looks",
    "good",
    "going",
    "make",
    "way",
    "cloud",
    "formation",
    "actually",
    "already",
    "already",
    "open",
    "going",
    "go",
    "ahead",
    "delete",
    "stack",
    "um",
    "um",
    "termination",
    "protection",
    "enabled",
    "must",
    "first",
    "disable",
    "edit",
    "disable",
    "whatever",
    "okay",
    "hit",
    "delete",
    "deleting",
    "going",
    "go",
    "look",
    "config",
    "original",
    "rule",
    "really",
    "worried",
    "think",
    "going",
    "really",
    "cost",
    "anything",
    "uh",
    "also",
    "kind",
    "clear",
    "house",
    "okay",
    "well",
    "go",
    "rules",
    "um",
    "one",
    "spun",
    "custom",
    "um",
    "think",
    "one",
    "grayed",
    "right",
    "go",
    "ahead",
    "delete",
    "rule",
    "type",
    "delete",
    "good",
    "go",
    "music",
    "right",
    "adabs",
    "quick",
    "starts",
    "templates",
    "adabs",
    "adus",
    "partners",
    "help",
    "deploy",
    "wide",
    "range",
    "stacks",
    "reduces",
    "hundreds",
    "manual",
    "uh",
    "procedures",
    "steps",
    "uh",
    "quick",
    "start",
    "composed",
    "three",
    "parts",
    "reference",
    "architecture",
    "deployment",
    "itus",
    "cloud",
    "formation",
    "templates",
    "automate",
    "configure",
    "deployment",
    "deployment",
    "guide",
    "explain",
    "architecture",
    "implementation",
    "detail",
    "example",
    "one",
    "might",
    "want",
    "launch",
    "like",
    "adus",
    "q",
    "bot",
    "get",
    "architectural",
    "diagram",
    "lot",
    "information",
    "go",
    "press",
    "button",
    "launch",
    "infrastructure",
    "quick",
    "start",
    "reference",
    "deployments",
    "enable",
    "spin",
    "fully",
    "functional",
    "architecture",
    "less",
    "hour",
    "lot",
    "see",
    "take",
    "look",
    "music",
    "right",
    "uh",
    "adus",
    "quick",
    "starts",
    "bunch",
    "cloudformation",
    "templates",
    "uh",
    "built",
    "adabs",
    "amazon",
    "adus",
    "partner",
    "networks",
    "apm",
    "partners",
    "uh",
    "variety",
    "different",
    "things",
    "going",
    "try",
    "find",
    "something",
    "like",
    "q",
    "bot",
    "q",
    "bot",
    "type",
    "bot",
    "know",
    "day",
    "showing",
    "totally",
    "fine",
    "um",
    "know",
    "want",
    "anything",
    "deploy",
    "kind",
    "show",
    "scroll",
    "uh",
    "graphic",
    "representing",
    "get",
    "deployed",
    "cloudfront",
    "s3",
    "dynamo",
    "db",
    "assistance",
    "manager",
    "lex",
    "paully",
    "kind",
    "fun",
    "stuff",
    "um",
    "information",
    "architected",
    "idea",
    "go",
    "ahead",
    "launch",
    "console",
    "view",
    "implementation",
    "guide",
    "let",
    "go",
    "take",
    "look",
    "um",
    "bunch",
    "stuff",
    "solutions",
    "things",
    "like",
    "conversational",
    "things",
    "like",
    "going",
    "go",
    "ahead",
    "see",
    "far",
    "get",
    "launching",
    "really",
    "matter",
    "launch",
    "fact",
    "um",
    "want",
    "show",
    "go",
    "designer",
    "always",
    "fun",
    "look",
    "kind",
    "visualize",
    "resources",
    "available",
    "thought",
    "would",
    "populate",
    "maybe",
    "wrong",
    "thing",
    "going",
    "go",
    "back",
    "click",
    "going",
    "click",
    "oops",
    "cancel",
    "let",
    "close",
    "leave",
    "yes",
    "launch",
    "oh",
    "viewing",
    "designer",
    "hit",
    "wrong",
    "button",
    "okay",
    "show",
    "us",
    "template",
    "might",
    "loading",
    "go",
    "going",
    "launch",
    "see",
    "lot",
    "going",
    "going",
    "shrink",
    "uh",
    "know",
    "make",
    "sense",
    "clearly",
    "lot",
    "happy",
    "wanted",
    "launch",
    "know",
    "keep",
    "backing",
    "going",
    "go",
    "back",
    "one",
    "time",
    "go",
    "go",
    "next",
    "would",
    "fill",
    "want",
    "name",
    "put",
    "language",
    "stuff",
    "set",
    "maybe",
    "want",
    "mail",
    "voice",
    "set",
    "ab",
    "stuff",
    "like",
    "simple",
    "really",
    "um",
    "every",
    "stack",
    "going",
    "different",
    "going",
    "different",
    "configurations",
    "ation",
    "options",
    "hopefully",
    "gives",
    "kind",
    "idea",
    "quick",
    "starts",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "concept",
    "tagging",
    "within",
    "aws",
    "tag",
    "key",
    "value",
    "pair",
    "assign",
    "anus",
    "resource",
    "creating",
    "resource",
    "going",
    "prompt",
    "say",
    "hey",
    "tags",
    "want",
    "add",
    "going",
    "give",
    "key",
    "going",
    "give",
    "value",
    "examples",
    "could",
    "something",
    "like",
    "based",
    "department",
    "status",
    "team",
    "environment",
    "uh",
    "project",
    "example",
    "location",
    "um",
    "tags",
    "allow",
    "organize",
    "resources",
    "following",
    "way",
    "resource",
    "management",
    "specific",
    "workloads",
    "say",
    "know",
    "developer",
    "environments",
    "cost",
    "management",
    "optimization",
    "cost",
    "tracking",
    "budgets",
    "alerts",
    "operations",
    "management",
    "business",
    "commitments",
    "sla",
    "operations",
    "mission",
    "critical",
    "services",
    "security",
    "classification",
    "data",
    "security",
    "impact",
    "governance",
    "regulatory",
    "compliance",
    "automation",
    "workload",
    "automation",
    "important",
    "understand",
    "tagging",
    "used",
    "junction",
    "um",
    "im",
    "policy",
    "restrict",
    "access",
    "things",
    "like",
    "based",
    "tags",
    "music",
    "okay",
    "right",
    "want",
    "show",
    "one",
    "interesting",
    "thing",
    "tags",
    "um",
    "fact",
    "used",
    "name",
    "services",
    "go",
    "ec2",
    "launch",
    "instance",
    "uh",
    "way",
    "set",
    "name",
    "giving",
    "tag",
    "called",
    "name",
    "want",
    "prove",
    "prove",
    "like",
    "one",
    "little",
    "exceptions",
    "choose",
    "instance",
    "go",
    "configure",
    "storage",
    "add",
    "tag",
    "say",
    "name",
    "um",
    "server",
    "name",
    "okay",
    "go",
    "ahead",
    "review",
    "launch",
    "going",
    "launch",
    "need",
    "key",
    "pair",
    "say",
    "proceed",
    "without",
    "key",
    "pair",
    "acknowledge",
    "okay",
    "go",
    "view",
    "instances",
    "see",
    "name",
    "um",
    "like",
    "one",
    "exceptions",
    "things",
    "tags",
    "things",
    "tags",
    "idea",
    "like",
    "basic",
    "one",
    "everybody",
    "know",
    "shown",
    "tags",
    "music",
    "go",
    "looked",
    "tags",
    "let",
    "see",
    "resource",
    "groups",
    "collection",
    "resources",
    "share",
    "one",
    "tags",
    "another",
    "way",
    "look",
    "way",
    "take",
    "multiple",
    "tags",
    "organize",
    "uh",
    "resource",
    "groups",
    "helps",
    "organize",
    "consolidate",
    "information",
    "based",
    "project",
    "resources",
    "use",
    "resource",
    "groups",
    "display",
    "details",
    "group",
    "resources",
    "based",
    "metrics",
    "alarms",
    "configuration",
    "settings",
    "time",
    "modify",
    "settings",
    "resource",
    "groups",
    "change",
    "resources",
    "appear",
    "resource",
    "groups",
    "appear",
    "global",
    "console",
    "header",
    "uh",
    "systems",
    "manager",
    "technically",
    "part",
    "simple",
    "system",
    "assists",
    "manager",
    "system",
    "manager",
    "interface",
    "also",
    "part",
    "global",
    "interface",
    "sometimes",
    "bit",
    "confusing",
    "uh",
    "find",
    "music",
    "okay",
    "right",
    "want",
    "explore",
    "resource",
    "groups",
    "also",
    "um",
    "tagging",
    "want",
    "type",
    "resource",
    "groups",
    "top",
    "used",
    "accessible",
    "sure",
    "put",
    "used",
    "accessible",
    "top",
    "might",
    "moved",
    "systems",
    "manager",
    "going",
    "go",
    "ssa",
    "sure",
    "ca",
    "seem",
    "find",
    "today",
    "left",
    "hand",
    "side",
    "going",
    "look",
    "resource",
    "groups",
    "right",
    "want",
    "take",
    "look",
    "resource",
    "groups",
    "really",
    "surprised",
    "used",
    "somewhere",
    "global",
    "think",
    "might",
    "changed",
    "um",
    "also",
    "frustrating",
    "go",
    "systems",
    "manager",
    "well",
    "left",
    "hand",
    "side",
    "looking",
    "resource",
    "groups",
    "showing",
    "know",
    "best",
    "keep",
    "moving",
    "things",
    "around",
    "update",
    "things",
    "quickly",
    "courses",
    "type",
    "resource",
    "groups",
    "tag",
    "editor",
    "actually",
    "um",
    "guess",
    "standalone",
    "service",
    "keep",
    "changing",
    "things",
    "know",
    "uh",
    "idea",
    "want",
    "create",
    "resource",
    "group",
    "create",
    "unlimited",
    "single",
    "region",
    "groups",
    "ab",
    "account",
    "use",
    "group",
    "view",
    "related",
    "insights",
    "things",
    "like",
    "going",
    "go",
    "ahead",
    "create",
    "resource",
    "group",
    "see",
    "tag",
    "based",
    "cloud",
    "formation",
    "based",
    "tags",
    "really",
    "anything",
    "tags",
    "going",
    "make",
    "way",
    "s3",
    "going",
    "create",
    "resources",
    "couple",
    "resources",
    "tags",
    "filtration",
    "go",
    "ahead",
    "create",
    "bucket",
    "going",
    "say",
    "bucket",
    "uh",
    "like",
    "whoops",
    "going",
    "go",
    "tags",
    "going",
    "say",
    "project",
    "going",
    "say",
    "um",
    "rg",
    "resource",
    "group",
    "okay",
    "go",
    "back",
    "going",
    "say",
    "say",
    "exactly",
    "type",
    "want",
    "going",
    "support",
    "resource",
    "types",
    "going",
    "say",
    "project",
    "rg",
    "see",
    "aut",
    "completes",
    "go",
    "say",
    "rg",
    "test",
    "rg",
    "create",
    "resource",
    "group",
    "see",
    "one",
    "place",
    "uh",
    "resource",
    "groups",
    "probably",
    "useful",
    "using",
    "um",
    "policies",
    "say",
    "say",
    "like",
    "resource",
    "group",
    "im",
    "policies",
    "probably",
    "used",
    "okay",
    "use",
    "managed",
    "access",
    "resour",
    "groups",
    "understand",
    "features",
    "things",
    "like",
    "administrators",
    "use",
    "json",
    "policies",
    "specify",
    "access",
    "policy",
    "action",
    "resource",
    "group",
    "used",
    "following",
    "prefix",
    "resource",
    "groups",
    "thought",
    "process",
    "want",
    "say",
    "okay",
    "access",
    "resource",
    "specify",
    "resource",
    "group",
    "include",
    "resources",
    "within",
    "might",
    "um",
    "better",
    "way",
    "apply",
    "permissions",
    "per",
    "project",
    "basis",
    "um",
    "could",
    "save",
    "lot",
    "time",
    "writing",
    "im",
    "policies",
    "basically",
    "really",
    "also",
    "kind",
    "get",
    "overview",
    "u",
    "resources",
    "kind",
    "useful",
    "well",
    "tag",
    "editor",
    "ca",
    "remember",
    "use",
    "set",
    "tag",
    "policies",
    "um",
    "tag",
    "policies",
    "help",
    "standardize",
    "tags",
    "resource",
    "groups",
    "accounts",
    "use",
    "uh",
    "define",
    "tech",
    "policies",
    "abus",
    "org",
    "attach",
    "entire",
    "organization",
    "um",
    "account",
    "going",
    "show",
    "important",
    "um",
    "understand",
    "resource",
    "groups",
    "created",
    "used",
    "within",
    "policies",
    "order",
    "um",
    "uh",
    "grant",
    "deny",
    "access",
    "stuff",
    "go",
    "ahead",
    "delete",
    "resource",
    "group",
    "really",
    "stop",
    "moving",
    "move",
    "one",
    "time",
    "never",
    "going",
    "talk",
    "resource",
    "groups",
    "music",
    "okay",
    "hey",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "business",
    "centric",
    "services",
    "might",
    "say",
    "well",
    "exam",
    "guide",
    "explicitly",
    "says",
    "covered",
    "thing",
    "taking",
    "exam",
    "uh",
    "choices",
    "might",
    "services",
    "distractors",
    "know",
    "going",
    "help",
    "make",
    "sure",
    "um",
    "uh",
    "guess",
    "correctly",
    "thing",
    "services",
    "useful",
    "know",
    "another",
    "reason",
    "talking",
    "first",
    "one",
    "amazon",
    "connction",
    "virtual",
    "call",
    "center",
    "create",
    "workflows",
    "route",
    "callers",
    "record",
    "phone",
    "calls",
    "manage",
    "que",
    "callers",
    "based",
    "proven",
    "system",
    "used",
    "amazon",
    "customer",
    "service",
    "teams",
    "workspaces",
    "virtual",
    "remote",
    "desktop",
    "service",
    "secure",
    "manage",
    "service",
    "provision",
    "either",
    "windows",
    "linux",
    "desktops",
    "minutes",
    "quickly",
    "scales",
    "thousands",
    "desktops",
    "work",
    "docs",
    "shared",
    "collaboration",
    "service",
    "essentialized",
    "storage",
    "share",
    "content",
    "files",
    "similar",
    "microsoft",
    "sharepoint",
    "think",
    "shared",
    "folder",
    "company",
    "ownership",
    "chime",
    "video",
    "conference",
    "service",
    "similar",
    "zoom",
    "skype",
    "screen",
    "share",
    "multiple",
    "people",
    "call",
    "secure",
    "default",
    "show",
    "calendar",
    "upcoming",
    "calls",
    "workmail",
    "manag",
    "business",
    "uh",
    "email",
    "contacts",
    "calendar",
    "service",
    "support",
    "existing",
    "desktop",
    "mobile",
    "email",
    "client",
    "applications",
    "handle",
    "things",
    "like",
    "imap",
    "similar",
    "gmail",
    "exchange",
    "pinpoint",
    "marketing",
    "campaign",
    "management",
    "service",
    "pinpoint",
    "sending",
    "targeted",
    "emails",
    "via",
    "sms",
    "push",
    "notifications",
    "voice",
    "messages",
    "perform",
    "um",
    "b",
    "testing",
    "create",
    "journey",
    "complex",
    "email",
    "response",
    "workflows",
    "sces",
    "transactional",
    "email",
    "service",
    "integrate",
    "sces",
    "application",
    "send",
    "emails",
    "create",
    "common",
    "templates",
    "track",
    "open",
    "rates",
    "keep",
    "track",
    "reputation",
    "quick",
    "site",
    "business",
    "intelligence",
    "uh",
    "service",
    "connect",
    "multiple",
    "data",
    "sources",
    "quickly",
    "visualize",
    "data",
    "form",
    "graphs",
    "little",
    "knowledge",
    "definitely",
    "want",
    "remember",
    "quick",
    "site",
    "scs",
    "pinpoint",
    "point",
    "uh",
    "cuz",
    "definitely",
    "show",
    "exam",
    "rest",
    "probably",
    "could",
    "show",
    "distractors",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "provisioning",
    "services",
    "let",
    "first",
    "define",
    "provisioning",
    "provisioning",
    "allocation",
    "creation",
    "resources",
    "services",
    "customer",
    "provisioning",
    "services",
    "responsible",
    "setting",
    "managing",
    "adaus",
    "services",
    "lot",
    "services",
    "provisioning",
    "using",
    "cloud",
    "formation",
    "underneath",
    "mention",
    "let",
    "get",
    "first",
    "elastic",
    "beanock",
    "platform",
    "service",
    "easily",
    "deploy",
    "web",
    "apps",
    "eie",
    "provision",
    "various",
    "services",
    "like",
    "ec2",
    "s3",
    "sns",
    "cloudwatch",
    "ec2",
    "auto",
    "scaling",
    "groups",
    "load",
    "balancers",
    "uh",
    "think",
    "heroku",
    "equivalent",
    "aws",
    "opsworks",
    "configuration",
    "management",
    "service",
    "also",
    "provides",
    "managed",
    "instances",
    "open",
    "source",
    "configuration",
    "managed",
    "software",
    "chef",
    "p",
    "puppet",
    "say",
    "want",
    "load",
    "balcer",
    "want",
    "servers",
    "provision",
    "uh",
    "indirectly",
    "cloud",
    "information",
    "infrastructure",
    "modeling",
    "provisioning",
    "service",
    "automates",
    "provisioning",
    "ad",
    "services",
    "writing",
    "cloud",
    "information",
    "templates",
    "either",
    "json",
    "yaml",
    "known",
    "iac",
    "infrastructures",
    "code",
    "quick",
    "starts",
    "packages",
    "uh",
    "launched",
    "configure",
    "aus",
    "compute",
    "network",
    "storage",
    "services",
    "required",
    "deploy",
    "workload",
    "ons",
    "cover",
    "course",
    "quick",
    "starts",
    "basically",
    "cloud",
    "information",
    "templates",
    "authored",
    "community",
    "um",
    "buy",
    "um",
    "amazon",
    "partner",
    "network",
    "okay",
    "abis",
    "marketplace",
    "digital",
    "catalog",
    "thousands",
    "software",
    "listings",
    "independent",
    "software",
    "vendors",
    "use",
    "toine",
    "tes",
    "deploy",
    "software",
    "idea",
    "um",
    "know",
    "go",
    "provision",
    "whatever",
    "kind",
    "resource",
    "want",
    "abus",
    "amplify",
    "mobile",
    "web",
    "app",
    "framework",
    "provision",
    "multiple",
    "aus",
    "services",
    "backend",
    "specifically",
    "serverless",
    "services",
    "know",
    "write",
    "um",
    "know",
    "like",
    "dynamo",
    "db",
    "um",
    "things",
    "like",
    "uh",
    "whatever",
    "graphql",
    "service",
    "called",
    "api",
    "gateway",
    "things",
    "like",
    "uh",
    "ads",
    "app",
    "runner",
    "fully",
    "managed",
    "service",
    "makes",
    "easy",
    "developers",
    "quickly",
    "deploy",
    "containerized",
    "web",
    "apps",
    "apis",
    "scale",
    "prior",
    "information",
    "experience",
    "required",
    "basically",
    "platform",
    "service",
    "containers",
    "ais",
    "command",
    "line",
    "interface",
    "enables",
    "customers",
    "quickly",
    "launch",
    "manage",
    "containerized",
    "applications",
    "bus",
    "basically",
    "cli",
    "tool",
    "sets",
    "bunch",
    "scripts",
    "set",
    "pipelines",
    "makes",
    "things",
    "super",
    "easy",
    "adis",
    "code",
    "start",
    "provides",
    "unified",
    "user",
    "interface",
    "enabling",
    "manage",
    "software",
    "development",
    "activities",
    "one",
    "place",
    "usually",
    "launch",
    "common",
    "types",
    "stacks",
    "like",
    "lamp",
    "cdk",
    "infrastructure",
    "code",
    "tool",
    "allows",
    "use",
    "favorite",
    "programming",
    "language",
    "generates",
    "cloud",
    "information",
    "templates",
    "means",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "elastic",
    "bean",
    "stock",
    "let",
    "define",
    "passes",
    "platform",
    "service",
    "allows",
    "customers",
    "develop",
    "run",
    "manage",
    "applications",
    "without",
    "uh",
    "complexity",
    "building",
    "maintaining",
    "infrastructure",
    "typically",
    "associated",
    "developing",
    "launching",
    "app",
    "elastic",
    "beanock",
    "pass",
    "deploying",
    "web",
    "apps",
    "little",
    "know",
    "uh",
    "knowledge",
    "underlying",
    "infrastructure",
    "focus",
    "writing",
    "application",
    "code",
    "instead",
    "setting",
    "automated",
    "deployment",
    "pipeline",
    "devops",
    "tasks",
    "idea",
    "choose",
    "platform",
    "upload",
    "code",
    "runs",
    "little",
    "uh",
    "knowledge",
    "infrastructure",
    "adab",
    "us",
    "say",
    "generally",
    "recommended",
    "production",
    "apps",
    "understand",
    "saying",
    "enterprises",
    "large",
    "companies",
    "small",
    "medium",
    "company",
    "run",
    "elastic",
    "beanock",
    "quite",
    "long",
    "time",
    "work",
    "great",
    "elastic",
    "beanock",
    "powered",
    "cloud",
    "formation",
    "templates",
    "sets",
    "elastic",
    "load",
    "balancer",
    "asgs",
    "rds",
    "ec2",
    "instances",
    "preconfigured",
    "particular",
    "platforms",
    "uh",
    "monitoring",
    "integration",
    "cloudwatch",
    "sns",
    "uh",
    "deployment",
    "strategies",
    "like",
    "place",
    "blue",
    "green",
    "green",
    "uh",
    "deployment",
    "security",
    "built",
    "could",
    "rotate",
    "passwords",
    "databases",
    "could",
    "run",
    "dockerized",
    "environments",
    "talk",
    "platforms",
    "see",
    "docker",
    "multicontainer",
    "docker",
    "uh",
    "java",
    "nodejs",
    "ruby",
    "php",
    "python",
    "tomcat",
    "go",
    "bunch",
    "stuff",
    "kind",
    "give",
    "architectural",
    "diagram",
    "show",
    "launch",
    "multiple",
    "things",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "fall",
    "along",
    "going",
    "learn",
    "elastic",
    "beanock",
    "maybe",
    "everything",
    "going",
    "definitely",
    "know",
    "least",
    "um",
    "use",
    "service",
    "elastic",
    "beanock",
    "platform",
    "service",
    "allows",
    "uh",
    "deploy",
    "web",
    "applications",
    "easily",
    "made",
    "way",
    "elastic",
    "beanock",
    "environment",
    "app",
    "set",
    "application",
    "two",
    "tiers",
    "web",
    "server",
    "environment",
    "worker",
    "environment",
    "worker",
    "environment",
    "great",
    "long",
    "running",
    "workloads",
    "performing",
    "uh",
    "background",
    "jobs",
    "things",
    "like",
    "web",
    "server",
    "web",
    "server",
    "generally",
    "recommended",
    "um",
    "anyway",
    "create",
    "new",
    "application",
    "let",
    "say",
    "app",
    "uh",
    "tags",
    "name",
    "based",
    "environment",
    "need",
    "choose",
    "environment",
    "name",
    "say",
    "environment",
    "put",
    "bunch",
    "numbers",
    "hit",
    "check",
    "availability",
    "scroll",
    "two",
    "options",
    "manage",
    "platform",
    "custom",
    "platform",
    "sure",
    "custom",
    "blanked",
    "would",
    "allow",
    "um",
    "would",
    "allow",
    "think",
    "use",
    "containers",
    "big",
    "fan",
    "ruby",
    "going",
    "drop",
    "ruby",
    "bunch",
    "different",
    "versions",
    "pretty",
    "pretty",
    "new",
    "pretty",
    "good",
    "platform",
    "version",
    "fine",
    "great",
    "thing",
    "comes",
    "sample",
    "application",
    "could",
    "hit",
    "create",
    "environment",
    "missing",
    "lot",
    "hit",
    "configure",
    "options",
    "know",
    "put",
    "good",
    "ui",
    "um",
    "click",
    "actually",
    "get",
    "see",
    "everything",
    "possible",
    "presets",
    "single",
    "instance",
    "literally",
    "running",
    "single",
    "e2",
    "instance",
    "cost",
    "effective",
    "spot",
    "uh",
    "spot",
    "pricing",
    "save",
    "money",
    "um",
    "high",
    "availability",
    "know",
    "want",
    "set",
    "load",
    "balcer",
    "auto",
    "scaling",
    "group",
    "scale",
    "well",
    "custom",
    "configuration",
    "scroll",
    "enable",
    "amazon",
    "rotate",
    "logs",
    "log",
    "streaming",
    "um",
    "lot",
    "stuff",
    "basically",
    "like",
    "sets",
    "pretty",
    "much",
    "configure",
    "want",
    "well",
    "load",
    "balcer",
    "set",
    "go",
    "go",
    "high",
    "availability",
    "able",
    "change",
    "load",
    "balancer",
    "options",
    "different",
    "ways",
    "deploying",
    "go",
    "change",
    "rolling",
    "immutable",
    "traffic",
    "splitting",
    "depends",
    "use",
    "case",
    "um",
    "set",
    "key",
    "pair",
    "able",
    "log",
    "machine",
    "whole",
    "variety",
    "things",
    "connect",
    "database",
    "well",
    "create",
    "database",
    "alongside",
    "actually",
    "rotate",
    "key",
    "worry",
    "really",
    "nice",
    "going",
    "go",
    "top",
    "choose",
    "single",
    "instance",
    "want",
    "cost",
    "effective",
    "going",
    "go",
    "ahead",
    "hit",
    "create",
    "environment",
    "going",
    "wait",
    "start",
    "see",
    "back",
    "done",
    "okay",
    "okay",
    "uh",
    "quite",
    "says",
    "minutes",
    "give",
    "hard",
    "refresh",
    "feeling",
    "already",
    "done",
    "done",
    "yeah",
    "already",
    "done",
    "says",
    "september",
    "2020",
    "elastic",
    "talku",
    "etc",
    "default",
    "default",
    "care",
    "um",
    "anyway",
    "application",
    "guess",
    "pending",
    "state",
    "um",
    "sure",
    "let",
    "go",
    "take",
    "look",
    "causes",
    "instance",
    "sent",
    "data",
    "since",
    "launch",
    "uh",
    "none",
    "instances",
    "sending",
    "data",
    "kind",
    "interesting",
    "um",
    "problems",
    "know",
    "mean",
    "going",
    "reboot",
    "miss",
    "machine",
    "see",
    "fixes",
    "issue",
    "usually",
    "difficult",
    "cuz",
    "sample",
    "application",
    "um",
    "fix",
    "know",
    "mean",
    "sure",
    "um",
    "let",
    "machine",
    "reboot",
    "see",
    "makes",
    "difference",
    "okay",
    "right",
    "rebooting",
    "machine",
    "looks",
    "like",
    "server",
    "healthy",
    "bad",
    "right",
    "run",
    "issues",
    "something",
    "uh",
    "let",
    "go",
    "see",
    "actually",
    "working",
    "top",
    "link",
    "right",
    "click",
    "says",
    "congratulations",
    "first",
    "8us",
    "elastic",
    "uh",
    "beanock",
    "ruby",
    "application",
    "running",
    "good",
    "shape",
    "um",
    "lot",
    "stuff",
    "going",
    "elastic",
    "beanock",
    "uh",
    "go",
    "back",
    "configuration",
    "change",
    "options",
    "lot",
    "stuff",
    "see",
    "uh",
    "get",
    "logging",
    "uh",
    "click",
    "request",
    "log",
    "click",
    "say",
    "last",
    "100",
    "lines",
    "able",
    "get",
    "uh",
    "logging",
    "data",
    "download",
    "wish",
    "kind",
    "line",
    "kind",
    "see",
    "going",
    "std",
    "access",
    "logs",
    "error",
    "logs",
    "puma",
    "logs",
    "elastic",
    "beam",
    "stock",
    "engine",
    "could",
    "use",
    "debug",
    "common",
    "take",
    "uh",
    "support",
    "issues",
    "uh",
    "health",
    "monitors",
    "health",
    "instances",
    "great",
    "uh",
    "monitoring",
    "uh",
    "data",
    "gives",
    "uh",
    "like",
    "built",
    "dashboard",
    "kind",
    "nice",
    "set",
    "alarms",
    "uh",
    "defined",
    "alarms",
    "add",
    "via",
    "monitoring",
    "dashboard",
    "guess",
    "somehow",
    "add",
    "um",
    "think",
    "ever",
    "added",
    "alarms",
    "um",
    "classic",
    "bean",
    "nice",
    "know",
    "set",
    "schedules",
    "managed",
    "events",
    "event",
    "data",
    "kind",
    "telling",
    "kind",
    "like",
    "logs",
    "tells",
    "things",
    "changed",
    "stuff",
    "like",
    "looking",
    "see",
    "download",
    "existing",
    "application",
    "version",
    "uploaded",
    "oh",
    "source",
    "okay",
    "think",
    "probably",
    "one",
    "running",
    "easy",
    "find",
    "probably",
    "would",
    "modify",
    "oh",
    "yeah",
    "go",
    "download",
    "zip",
    "wonder",
    "even",
    "worth",
    "um",
    "playing",
    "let",
    "going",
    "see",
    "go",
    "cloud9",
    "give",
    "go",
    "quickly",
    "go",
    "launch",
    "cloud9",
    "environment",
    "maybe",
    "tweak",
    "upload",
    "revised",
    "version",
    "say",
    "create",
    "new",
    "say",
    "eb",
    "um",
    "uh",
    "environment",
    "elastic",
    "beanock",
    "set",
    "defaults",
    "fine",
    "within",
    "free",
    "tier",
    "create",
    "environment",
    "going",
    "take",
    "uh",
    "ruby",
    "zip",
    "file",
    "move",
    "desktop",
    "loading",
    "give",
    "moment",
    "going",
    "go",
    "back",
    "curious",
    "ious",
    "let",
    "download",
    "directly",
    "thing",
    "know",
    "download",
    "application",
    "elastic",
    "beanock",
    "usually",
    "configuration",
    "file",
    "know",
    "would",
    "given",
    "us",
    "would",
    "really",
    "great",
    "wait",
    "uh",
    "launch",
    "well",
    "guess",
    "save",
    "configurations",
    "roll",
    "back",
    "well",
    "um",
    "wait",
    "moment",
    "going",
    "might",
    "peek",
    "inside",
    "file",
    "see",
    "zip",
    "contains",
    "going",
    "go",
    "desktop",
    "open",
    "zip",
    "looks",
    "pretty",
    "simple",
    "even",
    "look",
    "like",
    "rails",
    "app",
    "looks",
    "like",
    "maybe",
    "sinatra",
    "app",
    "thought",
    "would",
    "would",
    "deployed",
    "ruby",
    "rails",
    "application",
    "maybe",
    "keep",
    "really",
    "simple",
    "um",
    "see",
    "usually",
    "like",
    "yamell",
    "files",
    "use",
    "configuration",
    "see",
    "might",
    "default",
    "settings",
    "work",
    "fine",
    "uh",
    "king",
    "fig",
    "ru",
    "stuff",
    "like",
    "cloud9",
    "upload",
    "see",
    "okay",
    "go",
    "uh",
    "cloud9",
    "ready",
    "go",
    "right",
    "click",
    "whoops",
    "right",
    "click",
    "able",
    "upload",
    "file",
    "go",
    "top",
    "upload",
    "uploaded",
    "things",
    "absolutely",
    "know",
    "got",
    "find",
    "upload",
    "upload",
    "files",
    "cloud9",
    "oh",
    "boy",
    "helpful",
    "helpful",
    "let",
    "click",
    "around",
    "little",
    "bit",
    "mean",
    "worst",
    "case",
    "always",
    "bring",
    "via",
    "curl",
    "oh",
    "upload",
    "local",
    "files",
    "um",
    "patient",
    "okay",
    "drag",
    "upload",
    "yep",
    "right",
    "okay",
    "great",
    "need",
    "unzip",
    "drag",
    "ls",
    "say",
    "unzip",
    "rubyzip",
    "unzipped",
    "contents",
    "think",
    "readme",
    "part",
    "cloud9",
    "going",
    "go",
    "ahead",
    "delete",
    "going",
    "hurt",
    "anything",
    "delete",
    "original",
    "original",
    "zip",
    "um",
    "let",
    "see",
    "make",
    "change",
    "going",
    "open",
    "see",
    "yeah",
    "running",
    "sinatra",
    "pretty",
    "clear",
    "proc",
    "file",
    "say",
    "runs",
    "worker",
    "sample",
    "tells",
    "requests",
    "go",
    "need",
    "know",
    "kind",
    "clicking",
    "know",
    "ruby",
    "well",
    "cron",
    "yamel",
    "file",
    "could",
    "something",
    "gets",
    "loaded",
    "think",
    "basically",
    "sinatra",
    "app",
    "probably",
    "works",
    "bat",
    "want",
    "make",
    "change",
    "probably",
    "make",
    "change",
    "go",
    "second",
    "8s",
    "elastic",
    "beanock",
    "application",
    "next",
    "thing",
    "need",
    "actually",
    "zip",
    "contents",
    "know",
    "would",
    "let",
    "us",
    "zip",
    "look",
    "like",
    "zip",
    "contents",
    "directory",
    "linux",
    "goes",
    "show",
    "google",
    "everything",
    "easiest",
    "way",
    "zip",
    "full",
    "folder",
    "um",
    "zip",
    "everything",
    "current",
    "directory",
    "linux",
    "okay",
    "easy",
    "go",
    "back",
    "type",
    "zip",
    "wants",
    "hyphen",
    "r",
    "recursive",
    "makes",
    "sense",
    "name",
    "zip",
    "um",
    "uh",
    "ruby",
    "period",
    "zip",
    "warning",
    "found",
    "zip",
    "oh",
    "uh",
    "yum",
    "install",
    "zip",
    "maybe",
    "install",
    "uh",
    "zip",
    "maybe",
    "installed",
    "pseudo",
    "yum",
    "install",
    "zip",
    "since",
    "amazon",
    "2",
    "uses",
    "yum",
    "package",
    "already",
    "installed",
    "going",
    "type",
    "zip",
    "zip",
    "great",
    "oops",
    "need",
    "install",
    "twice",
    "zip",
    "warning",
    "ruby",
    "zip",
    "found",
    "empty",
    "okay",
    "install",
    "zip",
    "use",
    "zip",
    "pyph",
    "r",
    "use",
    "flag",
    "best",
    "compensate",
    "working",
    "going",
    "go",
    "directory",
    "saying",
    "found",
    "empty",
    "music",
    "maybe",
    "need",
    "use",
    "okay",
    "think",
    "problem",
    "using",
    "wrong",
    "flag",
    "put",
    "f",
    "instead",
    "r",
    "know",
    "probably",
    "done",
    "okay",
    "copied",
    "contents",
    "file",
    "going",
    "go",
    "ahead",
    "whoops",
    "make",
    "sure",
    "selected",
    "download",
    "file",
    "downloaded",
    "file",
    "going",
    "open",
    "contents",
    "make",
    "sure",
    "expect",
    "going",
    "open",
    "whoops",
    "get",
    "looks",
    "like",
    "everything",
    "want",
    "going",
    "go",
    "back",
    "going",
    "make",
    "sure",
    "ruby",
    "2",
    "desktop",
    "going",
    "see",
    "upload",
    "another",
    "version",
    "upload",
    "deploy",
    "choose",
    "file",
    "going",
    "go",
    "way",
    "desktop",
    "going",
    "choose",
    "ruby",
    "2",
    "um",
    "like",
    "ruby",
    "2",
    "version",
    "name",
    "say",
    "two",
    "deploy",
    "see",
    "works",
    "okay",
    "like",
    "uh",
    "elastic",
    "beanock",
    "configuration",
    "files",
    "like",
    "yaml",
    "files",
    "sit",
    "root",
    "directory",
    "generally",
    "used",
    "seeing",
    "know",
    "imagine",
    "eight",
    "us",
    "probably",
    "engineered",
    "examples",
    "uses",
    "default",
    "settings",
    "uh",
    "deployed",
    "see",
    "back",
    "moment",
    "okay",
    "short",
    "little",
    "wait",
    "looks",
    "like",
    "deployed",
    "going",
    "close",
    "tabs",
    "open",
    "see",
    "worked",
    "says",
    "second",
    "ad",
    "elastic",
    "stck",
    "ruby",
    "application",
    "uh",
    "successful",
    "uh",
    "deploying",
    "really",
    "great",
    "close",
    "tab",
    "uh",
    "since",
    "cloud",
    "environment",
    "shut",
    "know",
    "benefit",
    "think",
    "shut",
    "right",
    "go",
    "ahead",
    "delete",
    "going",
    "go",
    "back",
    "elastic",
    "beanock",
    "want",
    "destroy",
    "see",
    "terminate",
    "application",
    "enter",
    "name",
    "think",
    "probably",
    "enter",
    "think",
    "oh",
    "problem",
    "occurred",
    "rate",
    "exceeded",
    "aws",
    "big",
    "deal",
    "would",
    "go",
    "check",
    "maybe",
    "delete",
    "application",
    "first",
    "okay",
    "one",
    "possibly",
    "deleting",
    "let",
    "go",
    "anything",
    "changing",
    "ca",
    "even",
    "tell",
    "go",
    "ahead",
    "oh",
    "ca",
    "take",
    "one",
    "delete",
    "application",
    "takes",
    "couple",
    "times",
    "big",
    "deal",
    "aws",
    "4",
    "yes",
    "lot",
    "moving",
    "parts",
    "looks",
    "like",
    "terminating",
    "instance",
    "wait",
    "complete",
    "uh",
    "done",
    "might",
    "tear",
    "environment",
    "see",
    "back",
    "finished",
    "tearing",
    "okay",
    "right",
    "short",
    "little",
    "wait",
    "think",
    "destroyed",
    "double",
    "check",
    "going",
    "applications",
    "going",
    "environments",
    "yeah",
    "gone",
    "probably",
    "initially",
    "deleted",
    "environment",
    "took",
    "application",
    "probably",
    "delete",
    "app",
    "separately",
    "um",
    "uh",
    "yeah",
    "go",
    "make",
    "sure",
    "cloud9",
    "environment",
    "gone",
    "okay",
    "probably",
    "like",
    "lingering",
    "s3",
    "buckets",
    "want",
    "get",
    "rid",
    "going",
    "hurt",
    "anything",
    "around",
    "uh",
    "tend",
    "stack",
    "kind",
    "annoying",
    "like",
    "empty",
    "whoops",
    "oh",
    "permanently",
    "delete",
    "copy",
    "text",
    "go",
    "back",
    "go",
    "take",
    "bucket",
    "delete",
    "oh",
    "get",
    "kind",
    "annoying",
    "uh",
    "elastic",
    "beanock",
    "lights",
    "put",
    "permission",
    "policy",
    "go",
    "bucket",
    "policy",
    "delete",
    "prevents",
    "deleted",
    "go",
    "back",
    "delete",
    "okay",
    "yeah",
    "go",
    "music",
    "let",
    "take",
    "look",
    "serverless",
    "services",
    "aws",
    "including",
    "looking",
    "purely",
    "serverless",
    "services",
    "uh",
    "try",
    "include",
    "serverless",
    "services",
    "would",
    "long",
    "list",
    "uh",
    "let",
    "take",
    "look",
    "um",
    "let",
    "redefine",
    "serverless",
    "underlying",
    "servers",
    "infrastructure",
    "operating",
    "system",
    "taken",
    "care",
    "csp",
    "serverless",
    "generally",
    "default",
    "highly",
    "available",
    "scalable",
    "cost",
    "effective",
    "pay",
    "use",
    "first",
    "one",
    "dynamo",
    "db",
    "serverless",
    "nosql",
    "key",
    "value",
    "document",
    "database",
    "designed",
    "scale",
    "billions",
    "records",
    "guaranteed",
    "consistent",
    "data",
    "return",
    "least",
    "second",
    "worry",
    "managing",
    "chars",
    "simple",
    "storage",
    "service",
    "s3",
    "serverless",
    "object",
    "storage",
    "service",
    "upload",
    "large",
    "unlimited",
    "amounts",
    "files",
    "pay",
    "store",
    "worry",
    "underlying",
    "file",
    "system",
    "upgrading",
    "dis",
    "size",
    "e",
    "cs",
    "fargate",
    "seress",
    "orchestration",
    "container",
    "service",
    "ecs",
    "except",
    "pay",
    "demand",
    "per",
    "running",
    "container",
    "ecs",
    "keep",
    "ec2",
    "server",
    "running",
    "even",
    "containers",
    "running",
    "adus",
    "manages",
    "underlying",
    "server",
    "scale",
    "upgrade",
    "ec2",
    "server",
    "adus",
    "lambda",
    "serverless",
    "function",
    "service",
    "run",
    "code",
    "without",
    "provisioning",
    "managing",
    "servers",
    "upload",
    "small",
    "piece",
    "code",
    "choose",
    "uh",
    "much",
    "memory",
    "want",
    "long",
    "want",
    "function",
    "allowed",
    "run",
    "timing",
    "charge",
    "based",
    "runtime",
    "service",
    "function",
    "rounded",
    "nearest",
    "100",
    "milliseconds",
    "step",
    "functions",
    "state",
    "machine",
    "service",
    "coordinates",
    "multiple",
    "services",
    "serverless",
    "workflows",
    "easily",
    "shared",
    "data",
    "among",
    "lambdas",
    "group",
    "lambdas",
    "wait",
    "create",
    "logical",
    "steps",
    "also",
    "work",
    "fargate",
    "tasks",
    "aurora",
    "servus",
    "serous",
    "demand",
    "version",
    "aurora",
    "want",
    "benefits",
    "aurora",
    "uh",
    "trade",
    "trade",
    "cold",
    "starts",
    "lots",
    "traffic",
    "demand",
    "things",
    "ser",
    "services",
    "could",
    "put",
    "well",
    "like",
    "api",
    "gateway",
    "appsync",
    "amplify",
    "um",
    "like",
    "first",
    "two",
    "application",
    "integrations",
    "could",
    "say",
    "sqs",
    "sns",
    "serous",
    "services",
    "know",
    "day",
    "listed",
    "music",
    "right",
    "right",
    "let",
    "take",
    "look",
    "serverless",
    "look",
    "server",
    "perspective",
    "earlier",
    "course",
    "let",
    "try",
    "abstractly",
    "define",
    "talk",
    "architecture",
    "serverless",
    "architecture",
    "generally",
    "describes",
    "fully",
    "managed",
    "cloud",
    "services",
    "classification",
    "cloud",
    "service",
    "serverless",
    "boolean",
    "answer",
    "yes",
    "answer",
    "scale",
    "cloud",
    "service",
    "degree",
    "serverless",
    "point",
    "definition",
    "might",
    "accepted",
    "um",
    "everybody",
    "calist",
    "one",
    "uh",
    "terms",
    "um",
    "bunch",
    "different",
    "cloud",
    "service",
    "providers",
    "define",
    "differently",
    "thought",
    "leaders",
    "particular",
    "concept",
    "know",
    "best",
    "try",
    "make",
    "practical",
    "seress",
    "service",
    "could",
    "following",
    "characteristics",
    "could",
    "highly",
    "elastic",
    "scalable",
    "highly",
    "available",
    "highly",
    "durable",
    "secure",
    "default",
    "abstracts",
    "away",
    "underlying",
    "infrastructure",
    "build",
    "based",
    "execution",
    "business",
    "tasks",
    "lot",
    "times",
    "cost",
    "uh",
    "always",
    "represented",
    "something",
    "like",
    "paying",
    "x",
    "compute",
    "could",
    "abstracted",
    "kind",
    "um",
    "credit",
    "uh",
    "necessarily",
    "maap",
    "something",
    "physical",
    "serverless",
    "scale",
    "zero",
    "meaning",
    "use",
    "serverless",
    "resources",
    "cost",
    "nothing",
    "uh",
    "two",
    "last",
    "topics",
    "basically",
    "pull",
    "pay",
    "value",
    "pay",
    "idol",
    "servers",
    "paying",
    "value",
    "uh",
    "service",
    "provides",
    "uh",
    "friend",
    "daniel",
    "runs",
    "servus",
    "toronto",
    "group",
    "likes",
    "describe",
    "servus",
    "similar",
    "like",
    "energy",
    "efficient",
    "rating",
    "analogy",
    "servus",
    "could",
    "similar",
    "energy",
    "rating",
    "labels",
    "allows",
    "consumers",
    "compare",
    "energy",
    "efficiency",
    "product",
    "services",
    "servoless",
    "others",
    "know",
    "people",
    "might",
    "agree",
    "definitive",
    "yes",
    "answer",
    "think",
    "best",
    "way",
    "look",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "windows",
    "ads",
    "ads",
    "multiple",
    "cloud",
    "services",
    "tools",
    "make",
    "easy",
    "run",
    "window",
    "workloads",
    "ads",
    "let",
    "get",
    "first",
    "windows",
    "servers",
    "ec2",
    "select",
    "number",
    "windows",
    "server",
    "versions",
    "including",
    "latest",
    "version",
    "uh",
    "like",
    "windows",
    "server",
    "2019",
    "uh",
    "uh",
    "databases",
    "sql",
    "server",
    "rds",
    "select",
    "number",
    "sql",
    "database",
    "versions",
    "adabs",
    "directory",
    "service",
    "lets",
    "run",
    "microsoft",
    "active",
    "directory",
    "ad",
    "managed",
    "service",
    "ads",
    "license",
    "manager",
    "makes",
    "easier",
    "manage",
    "software",
    "licenses",
    "software",
    "vendors",
    "microsoft",
    "amazon",
    "fsx",
    "windows",
    "file",
    "server",
    "fully",
    "managed",
    "scalable",
    "storage",
    "built",
    "windows",
    "ads",
    "sdk",
    "allows",
    "write",
    "code",
    "favorite",
    "language",
    "interact",
    "adus",
    "api",
    "specifically",
    "support",
    "net",
    "language",
    "favorite",
    "windows",
    "developers",
    "amazon",
    "workspaces",
    "allows",
    "run",
    "virtual",
    "desktop",
    "launch",
    "windows",
    "10",
    "desktop",
    "provide",
    "secure",
    "durable",
    "workstations",
    "accessible",
    "wherever",
    "internet",
    "connection",
    "aos",
    "lambda",
    "supports",
    "poers",
    "shells",
    "programming",
    "language",
    "write",
    "serverless",
    "functions",
    "adus",
    "migration",
    "acceleration",
    "program",
    "map",
    "windows",
    "migration",
    "methodology",
    "moving",
    "large",
    "enterprises",
    "us",
    "amazon",
    "partners",
    "specialize",
    "providing",
    "professional",
    "services",
    "map",
    "everything",
    "windows",
    "aws",
    "like",
    "want",
    "move",
    "sql",
    "server",
    "rds",
    "postest",
    "believe",
    "like",
    "created",
    "adapter",
    "um",
    "yeah",
    "hopefully",
    "gives",
    "idea",
    "windows",
    "aws",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "want",
    "show",
    "launch",
    "windows",
    "uh",
    "server",
    "aws",
    "going",
    "go",
    "top",
    "going",
    "type",
    "ec2",
    "uh",
    "go",
    "ahead",
    "launch",
    "new",
    "ec2",
    "instance",
    "going",
    "um",
    "selection",
    "instances",
    "launch",
    "looking",
    "microsoft",
    "windows",
    "uh",
    "server",
    "interesting",
    "actually",
    "free",
    "tier",
    "uh",
    "eligible",
    "crazy",
    "go",
    "azure",
    "free",
    "tier",
    "windows",
    "server",
    "us",
    "pretty",
    "crazy",
    "um",
    "runs",
    "t2",
    "micro",
    "ca",
    "right",
    "way",
    "run",
    "t2",
    "micro",
    "seems",
    "like",
    "small",
    "let",
    "try",
    "okay",
    "believe",
    "use",
    "azure",
    "choose",
    "particular",
    "size",
    "instance",
    "default",
    "lot",
    "expensive",
    "free",
    "tier",
    "go",
    "free",
    "tiar",
    "really",
    "windows",
    "particular",
    "go",
    "looks",
    "good",
    "security",
    "groups",
    "opens",
    "rdp",
    "get",
    "machine",
    "gon",
    "go",
    "next",
    "launch",
    "machine",
    "says",
    "plan",
    "use",
    "ami",
    "benefits",
    "microsoft",
    "license",
    "mobility",
    "check",
    "form",
    "something",
    "worried",
    "today",
    "mean",
    "guess",
    "create",
    "key",
    "pair",
    "sure",
    "would",
    "use",
    "key",
    "pair",
    "um",
    "windows",
    "amis",
    "private",
    "key",
    "file",
    "required",
    "obtain",
    "password",
    "used",
    "log",
    "instance",
    "okay",
    "guess",
    "going",
    "need",
    "windows",
    "key",
    "great",
    "launch",
    "instance",
    "uh",
    "see",
    "back",
    "launches",
    "believe",
    "would",
    "launch",
    "fast",
    "know",
    "right",
    "short",
    "little",
    "wait",
    "server",
    "ready",
    "let",
    "see",
    "actually",
    "go",
    "ahead",
    "connect",
    "going",
    "hit",
    "connect",
    "go",
    "rdb",
    "client",
    "connect",
    "windows",
    "instance",
    "using",
    "remote",
    "desktop",
    "client",
    "choice",
    "downloading",
    "running",
    "rdp",
    "shortcut",
    "gon",
    "go",
    "ahead",
    "download",
    "gna",
    "um",
    "windows",
    "machine",
    "able",
    "rdb",
    "client",
    "installed",
    "think",
    "one",
    "mac",
    "get",
    "apple",
    "store",
    "um",
    "going",
    "double",
    "click",
    "file",
    "probably",
    "ca",
    "see",
    "going",
    "expand",
    "try",
    "oh",
    "computer",
    "silly",
    "anyway",
    "go",
    "moved",
    "going",
    "drag",
    "double",
    "click",
    "image",
    "see",
    "saying",
    "connect",
    "okay",
    "going",
    "ask",
    "password",
    "going",
    "hope",
    "click",
    "get",
    "password",
    "decrypt",
    "password",
    "need",
    "key",
    "pa",
    "instance",
    "upload",
    "know",
    "remember",
    "great",
    "security",
    "measure",
    "fine",
    "going",
    "drag",
    "key",
    "desktop",
    "see",
    "going",
    "well",
    "going",
    "go",
    "grab",
    "decrypt",
    "password",
    "um",
    "password",
    "oh",
    "right",
    "okay",
    "going",
    "grab",
    "password",
    "paste",
    "said",
    "okay",
    "say",
    "yes",
    "see",
    "connect",
    "instance",
    "running",
    "t2",
    "micro",
    "going",
    "lose",
    "cheap",
    "seem",
    "possible",
    "azure",
    "launch",
    "instance",
    "lot",
    "stuff",
    "uh",
    "seems",
    "uh",
    "crazy",
    "also",
    "interesting",
    "adabs",
    "uh",
    "windows",
    "like",
    "launches",
    "fast",
    "unbelievable",
    "fast",
    "servers",
    "spin",
    "unusual",
    "yeah",
    "um",
    "asking",
    "activate",
    "anything",
    "guess",
    "already",
    "windows",
    "license",
    "um",
    "sure",
    "kind",
    "like",
    "games",
    "installed",
    "like",
    "mind",
    "sweeper",
    "play",
    "sweeper",
    "data",
    "center",
    "server",
    "assuming",
    "um",
    "yeah",
    "windows",
    "server",
    "pretty",
    "impressive",
    "works",
    "sure",
    "going",
    "outbound",
    "connection",
    "um",
    "probably",
    "would",
    "configure",
    "say",
    "okay",
    "really",
    "think",
    "going",
    "go",
    "internet",
    "default",
    "yeah",
    "probably",
    "stuff",
    "know",
    "oh",
    "go",
    "yeah",
    "got",
    "internet",
    "totally",
    "possible",
    "uh",
    "yeah",
    "really",
    "wanted",
    "show",
    "going",
    "go",
    "back",
    "ec2",
    "going",
    "shut",
    "server",
    "expand",
    "go",
    "terminate",
    "instance",
    "good",
    "give",
    "refresh",
    "shutting",
    "music",
    "done",
    "hey",
    "andre",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "abus",
    "license",
    "manager",
    "let",
    "talk",
    "b",
    "l",
    "bring",
    "license",
    "mean",
    "process",
    "reusing",
    "existing",
    "software",
    "license",
    "run",
    "vendor",
    "software",
    "cloud",
    "vendor",
    "computing",
    "service",
    "bol",
    "allows",
    "companies",
    "save",
    "money",
    "since",
    "may",
    "purchased",
    "license",
    "bulk",
    "time",
    "provided",
    "greater",
    "discount",
    "purchased",
    "example",
    "could",
    "license",
    "mobility",
    "provided",
    "microsoft",
    "volume",
    "licensing",
    "customers",
    "eligible",
    "server",
    "applications",
    "covered",
    "microsoft",
    "software",
    "assurance",
    "program",
    "uh",
    "know",
    "trying",
    "guess",
    "maybe",
    "essay",
    "missed",
    "parentheses",
    "end",
    "big",
    "big",
    "deal",
    "um",
    "aus",
    "license",
    "manager",
    "service",
    "makes",
    "easier",
    "manage",
    "software",
    "licenses",
    "software",
    "vendors",
    "centrally",
    "across",
    "ads",
    "premise",
    "environments",
    "ads",
    "license",
    "manager",
    "software",
    "uh",
    "licensed",
    "based",
    "virtual",
    "cores",
    "uh",
    "physical",
    "cores",
    "sockets",
    "number",
    "machines",
    "includes",
    "variety",
    "software",
    "products",
    "microsoft",
    "ibm",
    "sap",
    "oracle",
    "vendors",
    "idea",
    "say",
    "license",
    "type",
    "bound",
    "amount",
    "vcpus",
    "aabus",
    "license",
    "manager",
    "works",
    "ec2",
    "dedicated",
    "instances",
    "dedicated",
    "hosts",
    "even",
    "spot",
    "instances",
    "rds",
    "oracle",
    "databases",
    "import",
    "license",
    "oracle",
    "server",
    "um",
    "understand",
    "um",
    "microsoft",
    "windows",
    "servers",
    "microsoft",
    "sql",
    "server",
    "license",
    "generally",
    "going",
    "need",
    "dedicated",
    "host",
    "insurance",
    "program",
    "uh",
    "really",
    "show",
    "exam",
    "even",
    "though",
    "ais",
    "license",
    "manager",
    "works",
    "dedicated",
    "instances",
    "spot",
    "instances",
    "try",
    "gravitate",
    "towards",
    "dedicated",
    "hosts",
    "server",
    "exam",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "logging",
    "services",
    "available",
    "aws",
    "first",
    "one",
    "cloud",
    "trail",
    "logs",
    "api",
    "calls",
    "whether",
    "sdk",
    "cli",
    "making",
    "call",
    "api",
    "going",
    "get",
    "tracked",
    "ad",
    "services",
    "really",
    "useful",
    "say",
    "blame",
    "person",
    "created",
    "bucket",
    "spent",
    "expensive",
    "ec2",
    "instance",
    "launched",
    "stagemaker",
    "notebook",
    "um",
    "idea",
    "detect",
    "developer",
    "misconfigurations",
    "detect",
    "malicious",
    "actors",
    "automate",
    "responses",
    "system",
    "cloudwatch",
    "collection",
    "multiple",
    "services",
    "commonly",
    "say",
    "like",
    "umbrella",
    "service",
    "many",
    "things",
    "underneath",
    "cloudwatch",
    "logs",
    "centralized",
    "place",
    "store",
    "cloud",
    "services",
    "log",
    "data",
    "application",
    "logs",
    "metrics",
    "represents",
    "time",
    "ordered",
    "set",
    "data",
    "points",
    "variable",
    "uh",
    "monitor",
    "uh",
    "event",
    "bridge",
    "previously",
    "known",
    "cloudwatch",
    "events",
    "triggers",
    "event",
    "based",
    "condition",
    "every",
    "hour",
    "take",
    "snapshot",
    "server",
    "alarms",
    "triggers",
    "notifications",
    "based",
    "metrics",
    "dashboards",
    "creates",
    "visualizations",
    "based",
    "metrics",
    "things",
    "cloudwatch",
    "core",
    "five",
    "ones",
    "always",
    "know",
    "um",
    "absolutely",
    "adus",
    "distributed",
    "tracing",
    "system",
    "use",
    "pinpoint",
    "issues",
    "within",
    "microservices",
    "see",
    "data",
    "moves",
    "one",
    "app",
    "another",
    "long",
    "took",
    "move",
    "failed",
    "uh",
    "move",
    "forward",
    "music",
    "okay",
    "let",
    "take",
    "closer",
    "look",
    "aba",
    "cloud",
    "trail",
    "important",
    "service",
    "service",
    "enables",
    "governance",
    "compliance",
    "operational",
    "auditing",
    "risk",
    "auditing",
    "account",
    "idea",
    "every",
    "time",
    "make",
    "api",
    "call",
    "going",
    "show",
    "kind",
    "structured",
    "data",
    "uh",
    "interact",
    "read",
    "ab",
    "cloud",
    "trail",
    "used",
    "monitor",
    "api",
    "calls",
    "actions",
    "made",
    "ads",
    "account",
    "easily",
    "identify",
    "users",
    "accounts",
    "made",
    "call",
    "aws",
    "might",
    "source",
    "ip",
    "address",
    "event",
    "time",
    "user",
    "agent",
    "uh",
    "region",
    "resource",
    "action",
    "going",
    "get",
    "pen",
    "tool",
    "moment",
    "notice",
    "event",
    "time",
    "happened",
    "source",
    "name",
    "region",
    "source",
    "ip",
    "address",
    "user",
    "agent",
    "uh",
    "leforge",
    "response",
    "element",
    "know",
    "clear",
    "going",
    "um",
    "know",
    "cloud",
    "trail",
    "already",
    "logging",
    "default",
    "collect",
    "logs",
    "uh",
    "last",
    "90",
    "days",
    "via",
    "event",
    "history",
    "need",
    "90",
    "days",
    "need",
    "create",
    "trail",
    "common",
    "go",
    "aws",
    "make",
    "one",
    "right",
    "away",
    "trails",
    "outputed",
    "s3",
    "like",
    "event",
    "history",
    "analyze",
    "trail",
    "use",
    "amazon",
    "athena",
    "sure",
    "ways",
    "analyze",
    "within",
    "aws",
    "event",
    "history",
    "looks",
    "like",
    "right",
    "bat",
    "already",
    "see",
    "information",
    "sure",
    "updated",
    "ui",
    "might",
    "uh",
    "even",
    "recording",
    "kind",
    "feel",
    "like",
    "go",
    "follow",
    "along",
    "um",
    "bet",
    "might",
    "updated",
    "idea",
    "know",
    "browse",
    "last",
    "90",
    "days",
    "anything",
    "outside",
    "going",
    "little",
    "bit",
    "work",
    "music",
    "okay",
    "going",
    "cover",
    "cloudwatch",
    "services",
    "many",
    "let",
    "look",
    "important",
    "ones",
    "one",
    "important",
    "ones",
    "cloudwatch",
    "alarms",
    "cloudwatch",
    "alarms",
    "monitors",
    "cloud",
    "watch",
    "metric",
    "based",
    "defined",
    "threshold",
    "uh",
    "see",
    "kind",
    "condition",
    "set",
    "network",
    "greater",
    "300",
    "one",
    "data",
    "points",
    "within",
    "five",
    "minutes",
    "going",
    "breach",
    "alarm",
    "uh",
    "goes",
    "outside",
    "defined",
    "threshold",
    "state",
    "going",
    "either",
    "something",
    "like",
    "okay",
    "metric",
    "expression",
    "within",
    "defined",
    "threshold",
    "nothing",
    "alarm",
    "metric",
    "expression",
    "outside",
    "defined",
    "threshold",
    "something",
    "insufficient",
    "data",
    "alarm",
    "started",
    "metric",
    "available",
    "none",
    "enough",
    "data",
    "available",
    "state",
    "changed",
    "define",
    "actions",
    "take",
    "could",
    "notification",
    "autoscaling",
    "group",
    "c2",
    "action",
    "um",
    "cloudwatch",
    "alarms",
    "really",
    "useful",
    "variety",
    "reasons",
    "one",
    "come",
    "across",
    "right",
    "away",
    "setting",
    "billing",
    "music",
    "alarm",
    "let",
    "take",
    "look",
    "autonomy",
    "alarm",
    "nice",
    "graphic",
    "kind",
    "explain",
    "first",
    "thing",
    "threshold",
    "condition",
    "uh",
    "set",
    "value",
    "say",
    "okay",
    "value",
    "th000",
    "100",
    "whatever",
    "want",
    "going",
    "particular",
    "metric",
    "actual",
    "data",
    "measuring",
    "maybe",
    "case",
    "measuring",
    "network",
    "volume",
    "incoming",
    "network",
    "traffic",
    "measured",
    "bytes",
    "using",
    "5",
    "minute",
    "monitoring",
    "divide",
    "300",
    "get",
    "bytes",
    "per",
    "second",
    "trying",
    "figure",
    "calculation",
    "data",
    "points",
    "represent",
    "metrics",
    "measurement",
    "given",
    "point",
    "period",
    "often",
    "checks",
    "evaluate",
    "alarm",
    "could",
    "say",
    "every",
    "five",
    "minutes",
    "uh",
    "evaluation",
    "period",
    "number",
    "previous",
    "periods",
    "data",
    "points",
    "alarm",
    "say",
    "one",
    "data",
    "point",
    "breach",
    "evaluation",
    "period",
    "going",
    "back",
    "four",
    "periods",
    "triggers",
    "alarm",
    "uh",
    "thing",
    "want",
    "know",
    "set",
    "value",
    "right",
    "based",
    "particular",
    "metric",
    "bit",
    "logic",
    "terms",
    "uh",
    "alarm",
    "simple",
    "breached",
    "period",
    "thing",
    "happening",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "cloudwatch",
    "log",
    "understand",
    "log",
    "streams",
    "log",
    "groups",
    "log",
    "stream",
    "stream",
    "represents",
    "sequence",
    "events",
    "application",
    "instance",
    "monitored",
    "imagine",
    "ec2",
    "instance",
    "running",
    "web",
    "application",
    "want",
    "logs",
    "streamed",
    "cloudwatch",
    "logs",
    "talking",
    "create",
    "log",
    "streams",
    "manually",
    "uh",
    "generally",
    "automatically",
    "done",
    "service",
    "using",
    "uh",
    "unless",
    "collecting",
    "application",
    "logs",
    "ec2",
    "instance",
    "described",
    "log",
    "group",
    "lambda",
    "function",
    "see",
    "log",
    "streams",
    "named",
    "running",
    "instance",
    "lambda",
    "fre",
    "uh",
    "frequency",
    "run",
    "new",
    "instances",
    "stream",
    "contains",
    "timestamps",
    "trying",
    "say",
    "variety",
    "different",
    "services",
    "lambda",
    "rds",
    "already",
    "send",
    "logs",
    "cloudwatch",
    "logs",
    "going",
    "vary",
    "okay",
    "log",
    "group",
    "application",
    "log",
    "running",
    "uc2",
    "see",
    "log",
    "streams",
    "named",
    "running",
    "instance",
    "id",
    "log",
    "group",
    "adis",
    "glue",
    "see",
    "log",
    "streams",
    "named",
    "glue",
    "jobs",
    "um",
    "know",
    "streams",
    "let",
    "talk",
    "actual",
    "data",
    "made",
    "log",
    "events",
    "represents",
    "single",
    "event",
    "log",
    "file",
    "log",
    "events",
    "seen",
    "within",
    "log",
    "stream",
    "example",
    "would",
    "open",
    "cloudwatch",
    "logs",
    "actually",
    "see",
    "reported",
    "back",
    "server",
    "filter",
    "events",
    "filter",
    "uh",
    "logs",
    "based",
    "simple",
    "pattern",
    "matching",
    "uh",
    "syntax",
    "typing",
    "saying",
    "give",
    "debug",
    "stuff",
    "know",
    "robust",
    "8",
    "us",
    "better",
    "way",
    "analyzing",
    "logs",
    "log",
    "insights",
    "look",
    "moment",
    "looking",
    "uh",
    "cloudwatch",
    "log",
    "events",
    "collected",
    "easier",
    "way",
    "analyze",
    "log",
    "insights",
    "interactively",
    "search",
    "analyze",
    "cloudwatch",
    "log",
    "data",
    "following",
    "advantages",
    "robust",
    "filtering",
    "using",
    "simple",
    "filter",
    "log",
    "stream",
    "less",
    "burdensome",
    "export",
    "logs",
    "s3",
    "analyze",
    "via",
    "athena",
    "cloudwatch",
    "log",
    "insight",
    "supports",
    "types",
    "logs",
    "cloudwatch",
    "log",
    "insights",
    "commonly",
    "used",
    "via",
    "console",
    "ad",
    "hoc",
    "queries",
    "log",
    "groups",
    "kind",
    "example",
    "someone",
    "writing",
    "query",
    "cloudwatch",
    "log",
    "insights",
    "uses",
    "query",
    "syntax",
    "single",
    "request",
    "query",
    "20",
    "logs",
    "query",
    "time",
    "50",
    "minutes",
    "completed",
    "queries",
    "results",
    "available",
    "seven",
    "days",
    "abis",
    "provide",
    "sample",
    "queries",
    "get",
    "started",
    "common",
    "tasks",
    "uh",
    "ease",
    "learning",
    "query",
    "syntax",
    "good",
    "example",
    "filtering",
    "vpc",
    "flow",
    "logs",
    "go",
    "click",
    "start",
    "getting",
    "data",
    "create",
    "save",
    "queries",
    "uh",
    "make",
    "future",
    "repetitive",
    "tasks",
    "easier",
    "certified",
    "cloud",
    "prer",
    "going",
    "ask",
    "details",
    "stuff",
    "conceptually",
    "want",
    "understand",
    "login",
    "sites",
    "use",
    "uh",
    "robustly",
    "filter",
    "logs",
    "based",
    "query",
    "syntax",
    "language",
    "get",
    "kind",
    "visual",
    "really",
    "really",
    "useful",
    "let",
    "take",
    "look",
    "cloudwatch",
    "metric",
    "represents",
    "time",
    "ordered",
    "set",
    "data",
    "points",
    "variable",
    "monitored",
    "time",
    "cloudwatch",
    "comes",
    "many",
    "predefined",
    "metrics",
    "generally",
    "names",
    "spaced",
    "services",
    "uh",
    "idea",
    "like",
    "look",
    "ec2",
    "particular",
    "metric",
    "cpu",
    "utilization",
    "discre",
    "ops",
    "dis",
    "write",
    "ops",
    "disre",
    "bytes",
    "dis",
    "write",
    "bytes",
    "network",
    "network",
    "network",
    "packet",
    "uh",
    "network",
    "packets",
    "idea",
    "like",
    "click",
    "ec2",
    "kind",
    "get",
    "data",
    "cloud",
    "metrics",
    "leveraged",
    "things",
    "like",
    "cloud",
    "watch",
    "events",
    "cloud",
    "watch",
    "alarms",
    "cloudwatch",
    "dashboards",
    "understand",
    "music",
    "okay",
    "right",
    "want",
    "follow",
    "along",
    "show",
    "bit",
    "cloud",
    "trail",
    "going",
    "go",
    "top",
    "type",
    "cloud",
    "trail",
    "great",
    "thing",
    "cloud",
    "trail",
    "already",
    "turned",
    "default",
    "already",
    "kind",
    "collecting",
    "information",
    "says",
    "use",
    "access",
    "analyzer",
    "cloud",
    "trail",
    "trails",
    "sounds",
    "pretty",
    "cool",
    "uh",
    "create",
    "trail",
    "right",
    "bat",
    "event",
    "history",
    "event",
    "history",
    "allows",
    "us",
    "see",
    "things",
    "happening",
    "within",
    "account",
    "last",
    "90",
    "days",
    "um",
    "thing",
    "want",
    "something",
    "beyond",
    "90",
    "days",
    "going",
    "create",
    "trail",
    "uh",
    "take",
    "look",
    "kind",
    "see",
    "uh",
    "lot",
    "things",
    "kind",
    "actions",
    "happening",
    "instance",
    "terminated",
    "go",
    "look",
    "kind",
    "see",
    "uh",
    "information",
    "see",
    "terminated",
    "done",
    "access",
    "key",
    "used",
    "event",
    "source",
    "request",
    "id",
    "um",
    "source",
    "ip",
    "whether",
    "readon",
    "event",
    "type",
    "called",
    "resource",
    "actual",
    "raw",
    "record",
    "generally",
    "would",
    "look",
    "look",
    "back",
    "day",
    "um",
    "idea",
    "user",
    "identity",
    "described",
    "event",
    "time",
    "source",
    "event",
    "name",
    "region",
    "source",
    "ip",
    "uh",
    "agent",
    "information",
    "okay",
    "great",
    "way",
    "kind",
    "find",
    "stuff",
    "go",
    "try",
    "debug",
    "things",
    "way",
    "go",
    "event",
    "name",
    "go",
    "kind",
    "get",
    "uh",
    "see",
    "bit",
    "stuff",
    "trying",
    "say",
    "like",
    "maybe",
    "create",
    "trying",
    "find",
    "something",
    "know",
    "like",
    "create",
    "access",
    "keys",
    "see",
    "access",
    "keys",
    "going",
    "created",
    "within",
    "uh",
    "sandbox",
    "account",
    "user",
    "things",
    "like",
    "great",
    "way",
    "kind",
    "find",
    "things",
    "generally",
    "going",
    "always",
    "want",
    "turn",
    "uh",
    "create",
    "trail",
    "go",
    "hit",
    "create",
    "trail",
    "say",
    "new",
    "trail",
    "um",
    "going",
    "need",
    "bucket",
    "probably",
    "want",
    "encryption",
    "turned",
    "sounds",
    "good",
    "absolutely",
    "want",
    "log",
    "file",
    "validation",
    "generally",
    "want",
    "store",
    "cloud",
    "tra",
    "logs",
    "within",
    "existing",
    "account",
    "want",
    "isolated",
    "hardened",
    "account",
    "uh",
    "infrequently",
    "accessed",
    "cloud",
    "security",
    "engineers",
    "um",
    "away",
    "want",
    "people",
    "tampering",
    "deleting",
    "changing",
    "stuff",
    "um",
    "take",
    "existing",
    "one",
    "want",
    "c",
    "customer",
    "manage",
    "one",
    "managed",
    "bys",
    "new",
    "custom",
    "um",
    "choose",
    "one",
    "know",
    "one",
    "hit",
    "next",
    "usually",
    "adus",
    "gives",
    "manage",
    "key",
    "kind",
    "surprised",
    "um",
    "also",
    "include",
    "additional",
    "data",
    "data",
    "events",
    "would",
    "collect",
    "information",
    "s3",
    "um",
    "thing",
    "might",
    "want",
    "track",
    "everything",
    "track",
    "everything",
    "get",
    "expensive",
    "quickly",
    "uh",
    "leave",
    "management",
    "events",
    "save",
    "money",
    "inside",
    "events",
    "uh",
    "new",
    "seen",
    "yet",
    "ident",
    "identify",
    "unusual",
    "activity",
    "errors",
    "users",
    "behavior",
    "sounds",
    "really",
    "good",
    "come",
    "also",
    "add",
    "additional",
    "charges",
    "going",
    "hit",
    "next",
    "anyway",
    "fun",
    "going",
    "create",
    "trail",
    "okay",
    "uh",
    "key",
    "policy",
    "grant",
    "sufficient",
    "access",
    "etc",
    "etc",
    "going",
    "go",
    "turn",
    "even",
    "though",
    "really",
    "turned",
    "want",
    "able",
    "show",
    "okay",
    "new",
    "trail",
    "trail",
    "dumped",
    "s3",
    "might",
    "able",
    "see",
    "anything",
    "yet",
    "going",
    "pop",
    "see",
    "right",
    "probably",
    "one",
    "account",
    "um",
    "important",
    "basically",
    "saw",
    "data",
    "would",
    "look",
    "like",
    "go",
    "digest",
    "remember",
    "digest",
    "nice",
    "data",
    "yet",
    "pop",
    "um",
    "sure",
    "going",
    "able",
    "anything",
    "insights",
    "least",
    "account",
    "insights",
    "events",
    "show",
    "unusual",
    "api",
    "activity",
    "things",
    "like",
    "kind",
    "cool",
    "know",
    "cloudwatch",
    "insights",
    "looks",
    "like",
    "uh",
    "inside",
    "events",
    "shown",
    "table",
    "90",
    "days",
    "okay",
    "curious",
    "see",
    "kind",
    "screenshot",
    "looks",
    "like",
    "whoops",
    "well",
    "least",
    "article",
    "guess",
    "could",
    "kind",
    "get",
    "like",
    "kind",
    "graphs",
    "something",
    "saying",
    "like",
    "hey",
    "looks",
    "unusual",
    "might",
    "select",
    "pretty",
    "clear",
    "terms",
    "looks",
    "like",
    "mean",
    "sounds",
    "like",
    "cool",
    "feature",
    "sure",
    "working",
    "uh",
    "security",
    "certification",
    "course",
    "definitely",
    "include",
    "pretty",
    "much",
    "um",
    "going",
    "go",
    "ahead",
    "delete",
    "um",
    "trail",
    "really",
    "need",
    "account",
    "uh",
    "generally",
    "always",
    "want",
    "go",
    "create",
    "trail",
    "um",
    "root",
    "account",
    "actually",
    "account",
    "part",
    "organization",
    "organization",
    "level",
    "create",
    "trail",
    "spans",
    "regions",
    "spans",
    "ad",
    "accounts",
    "organization",
    "okay",
    "uh",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "ml",
    "ai",
    "services",
    "aws",
    "let",
    "first",
    "define",
    "ai",
    "ml",
    "deep",
    "learning",
    "ai",
    "also",
    "known",
    "artificial",
    "intelligence",
    "machines",
    "perform",
    "jobs",
    "may",
    "make",
    "human",
    "behavior",
    "ml",
    "machine",
    "learning",
    "machines",
    "get",
    "better",
    "task",
    "without",
    "explicit",
    "programming",
    "deep",
    "learning",
    "dl",
    "machines",
    "artificial",
    "neural",
    "network",
    "inspired",
    "human",
    "brain",
    "solve",
    "complex",
    "problems",
    "lot",
    "times",
    "see",
    "kind",
    "onion",
    "showing",
    "um",
    "know",
    "ai",
    "uh",
    "using",
    "ml",
    "deep",
    "learning",
    "deep",
    "learning",
    "definitely",
    "using",
    "machine",
    "learning",
    "using",
    "neural",
    "networks",
    "aws",
    "flexship",
    "product",
    "amazon",
    "sagemaker",
    "fully",
    "managed",
    "service",
    "build",
    "train",
    "deploy",
    "machine",
    "learning",
    "models",
    "scale",
    "um",
    "bunch",
    "different",
    "kind",
    "open",
    "source",
    "frameworks",
    "use",
    "like",
    "apachi",
    "mxnet",
    "us",
    "open",
    "source",
    "deep",
    "learning",
    "framework",
    "one",
    "decided",
    "say",
    "hey",
    "going",
    "back",
    "one",
    "see",
    "lot",
    "example",
    "code",
    "one",
    "tensorflow",
    "use",
    "pie",
    "torch",
    "uh",
    "hugging",
    "face",
    "things",
    "well",
    "okay",
    "um",
    "lot",
    "services",
    "underneath",
    "might",
    "interest",
    "mention",
    "right",
    "away",
    "like",
    "amazon",
    "sagemaker",
    "ground",
    "truth",
    "data",
    "labeling",
    "service",
    "humans",
    "label",
    "data",
    "set",
    "used",
    "train",
    "machine",
    "learning",
    "models",
    "maybe",
    "something",
    "like",
    "amazon",
    "uh",
    "augmented",
    "ai",
    "human",
    "intervention",
    "review",
    "services",
    "sagemaker",
    "uses",
    "machine",
    "learning",
    "make",
    "prediction",
    "confident",
    "uh",
    "right",
    "answer",
    "cue",
    "predict",
    "human",
    "review",
    "labeling",
    "data",
    "um",
    "know",
    "using",
    "supervised",
    "um",
    "supervised",
    "learning",
    "lot",
    "services",
    "sagemaker",
    "ai",
    "services",
    "general",
    "look",
    "next",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "ml",
    "ai",
    "services",
    "lot",
    "aws",
    "first",
    "amazon",
    "code",
    "guru",
    "machine",
    "learning",
    "code",
    "analysis",
    "service",
    "code",
    "guru",
    "performs",
    "code",
    "reviews",
    "suggest",
    "improve",
    "code",
    "quality",
    "code",
    "show",
    "visual",
    "code",
    "profiles",
    "show",
    "internals",
    "code",
    "pinpoint",
    "performance",
    "next",
    "amazon",
    "lex",
    "conversation",
    "interface",
    "service",
    "lex",
    "build",
    "voice",
    "text",
    "chat",
    "bots",
    "amazon",
    "personalized",
    "recommendation",
    "service",
    "technology",
    "used",
    "make",
    "product",
    "recommendations",
    "customer",
    "shopping",
    "amazon",
    "platform",
    "amazon",
    "poly",
    "text",
    "speech",
    "service",
    "upload",
    "text",
    "audio",
    "file",
    "spoken",
    "synthe",
    "synthesized",
    "voice",
    "uh",
    "generated",
    "amazon",
    "recognition",
    "image",
    "video",
    "recognition",
    "service",
    "uh",
    "analyze",
    "image",
    "videos",
    "detect",
    "label",
    "objects",
    "peoples",
    "celebrities",
    "amazon",
    "transcribe",
    "speech",
    "text",
    "service",
    "upload",
    "audio",
    "converted",
    "text",
    "amazon",
    "text",
    "extract",
    "ocr",
    "tool",
    "extracts",
    "text",
    "scan",
    "documents",
    "uh",
    "paper",
    "forms",
    "want",
    "digitally",
    "extract",
    "data",
    "amazon",
    "translate",
    "neural",
    "machine",
    "learning",
    "translation",
    "service",
    "use",
    "deep",
    "learning",
    "mod",
    "models",
    "deliver",
    "accurate",
    "natural",
    "sounding",
    "translations",
    "amazon",
    "comprehend",
    "nlp",
    "natural",
    "language",
    "processing",
    "service",
    "find",
    "relationships",
    "text",
    "produce",
    "insights",
    "looks",
    "data",
    "customer",
    "email",
    "support",
    "tickets",
    "social",
    "media",
    "makes",
    "predictions",
    "amazon",
    "forecast",
    "time",
    "series",
    "forecasting",
    "service",
    "know",
    "uh",
    "mean",
    "technically",
    "guess",
    "bit",
    "database",
    "idea",
    "forecast",
    "business",
    "outcome",
    "product",
    "demand",
    "resource",
    "needs",
    "financial",
    "uh",
    "performance",
    "powered",
    "ml",
    "ai",
    "want",
    "call",
    "ads",
    "deep",
    "learning",
    "ami",
    "amazon",
    "ec2",
    "instances",
    "popular",
    "deep",
    "learning",
    "frameworks",
    "interfaces",
    "tensorflow",
    "pytorch",
    "apachi",
    "mxnet",
    "chainer",
    "gl",
    "uh",
    "gluon",
    "uh",
    "horovod",
    "kiras",
    "adus",
    "deep",
    "learning",
    "containers",
    "docker",
    "images",
    "instances",
    "popular",
    "deep",
    "learning",
    "frameworks",
    "interfaces",
    "tensorflow",
    "pytorch",
    "apachi",
    "mxnet",
    "uh",
    "adsd",
    "composer",
    "machine",
    "learning",
    "enabled",
    "musical",
    "keyboard",
    "uh",
    "know",
    "many",
    "people",
    "using",
    "sounds",
    "like",
    "fun",
    "deep",
    "lens",
    "video",
    "camera",
    "uses",
    "deep",
    "learning",
    "like",
    "learning",
    "tool",
    "see",
    "many",
    "people",
    "using",
    "adus",
    "deep",
    "racer",
    "toy",
    "race",
    "card",
    "powered",
    "machine",
    "learning",
    "perform",
    "autonomous",
    "driving",
    "another",
    "learning",
    "tool",
    "learning",
    "ml",
    "like",
    "reinvent",
    "like",
    "racing",
    "competitions",
    "amazon",
    "elastic",
    "interface",
    "allows",
    "attach",
    "lowcost",
    "gpu",
    "perform",
    "uh",
    "powered",
    "acceleration",
    "ec2",
    "instances",
    "red",
    "cost",
    "running",
    "deep",
    "learning",
    "interfaces",
    "75",
    "amazon",
    "fraud",
    "detector",
    "fully",
    "managed",
    "fraud",
    "detection",
    "uh",
    "service",
    "uh",
    "identifies",
    "potentially",
    "fraudulent",
    "uh",
    "online",
    "activities",
    "online",
    "payment",
    "fraud",
    "creation",
    "fake",
    "accounts",
    "amazon",
    "kendra",
    "enterprise",
    "machine",
    "learning",
    "uh",
    "search",
    "engine",
    "service",
    "uses",
    "natural",
    "language",
    "suggest",
    "answers",
    "questions",
    "instead",
    "simple",
    "keyword",
    "matching",
    "music",
    "go",
    "hey",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "going",
    "quick",
    "review",
    "big",
    "data",
    "analytic",
    "services",
    "aws",
    "let",
    "find",
    "big",
    "data",
    "term",
    "used",
    "describe",
    "massive",
    "volumes",
    "structured",
    "unstructured",
    "data",
    "large",
    "difficult",
    "move",
    "process",
    "using",
    "traditional",
    "database",
    "software",
    "techniques",
    "first",
    "amazon",
    "athena",
    "serverless",
    "interactive",
    "query",
    "service",
    "take",
    "bunch",
    "csv",
    "json",
    "files",
    "s3",
    "bucket",
    "load",
    "temporary",
    "sql",
    "table",
    "run",
    "sql",
    "queries",
    "want",
    "create",
    "csv",
    "json",
    "files",
    "ever",
    "heard",
    "um",
    "apachi",
    "presto",
    "basically",
    "okay",
    "amazon",
    "cloud",
    "search",
    "fully",
    "managed",
    "full",
    "teex",
    "search",
    "service",
    "want",
    "add",
    "search",
    "website",
    "amazon",
    "elastic",
    "search",
    "service",
    "um",
    "commonly",
    "abbreviated",
    "es",
    "manage",
    "elastic",
    "search",
    "cluster",
    "elastic",
    "search",
    "open",
    "source",
    "full",
    "tech",
    "search",
    "engine",
    "robust",
    "cloud",
    "search",
    "requires",
    "server",
    "operational",
    "maintenance",
    "amazon",
    "elastic",
    "map",
    "produce",
    "commonly",
    "known",
    "emr",
    "data",
    "processing",
    "analysis",
    "used",
    "creating",
    "reports",
    "like",
    "red",
    "shift",
    "suited",
    "need",
    "transform",
    "unstructured",
    "data",
    "structured",
    "data",
    "fly",
    "leverages",
    "um",
    "technology",
    "like",
    "spark",
    "um",
    "hive",
    "pig",
    "things",
    "like",
    "kines",
    "data",
    "stream",
    "streaming",
    "data",
    "service",
    "creates",
    "producers",
    "uh",
    "sends",
    "data",
    "stream",
    "multiple",
    "consumers",
    "consume",
    "data",
    "within",
    "stream",
    "use",
    "uh",
    "analytics",
    "click",
    "streams",
    "ingestion",
    "data",
    "fleet",
    "iot",
    "devices",
    "kinesis",
    "fire",
    "hose",
    "serverless",
    "simple",
    "version",
    "data",
    "stream",
    "pay",
    "demand",
    "based",
    "much",
    "data",
    "consumed",
    "stream",
    "worry",
    "underlying",
    "servers",
    "amazon",
    "kinesis",
    "data",
    "analytics",
    "allows",
    "run",
    "queries",
    "data",
    "flowing",
    "stream",
    "create",
    "reports",
    "analysis",
    "emerging",
    "data",
    "last",
    "kinesis",
    "side",
    "amazon",
    "kinesis",
    "video",
    "streams",
    "allows",
    "analyze",
    "apply",
    "processing",
    "streaming",
    "videos",
    "onto",
    "second",
    "page",
    "manage",
    "kofka",
    "service",
    "msk",
    "um",
    "might",
    "mks",
    "um",
    "looking",
    "aware",
    "might",
    "incorrect",
    "fully",
    "manage",
    "aachi",
    "kofka",
    "service",
    "kofka",
    "platform",
    "building",
    "streaming",
    "data",
    "pipelines",
    "applications",
    "similar",
    "kinesis",
    "robust",
    "functionality",
    "red",
    "shift",
    "um",
    "flagship",
    "uh",
    "big",
    "data",
    "tool",
    "petabyte",
    "size",
    "data",
    "warehouse",
    "data",
    "warehouses",
    "online",
    "uh",
    "online",
    "analytical",
    "processing",
    "olap",
    "data",
    "warehouses",
    "expensive",
    "keeping",
    "data",
    "hot",
    "meaning",
    "run",
    "complex",
    "query",
    "large",
    "amount",
    "data",
    "get",
    "data",
    "back",
    "fast",
    "great",
    "need",
    "quickly",
    "generate",
    "analytics",
    "reports",
    "large",
    "amount",
    "data",
    "amazon",
    "quick",
    "site",
    "business",
    "intelligence",
    "tool",
    "business",
    "intelligence",
    "dashboard",
    "bi",
    "short",
    "use",
    "create",
    "business",
    "dashboards",
    "power",
    "business",
    "decisions",
    "requires",
    "little",
    "know",
    "programming",
    "connect",
    "adjust",
    "many",
    "different",
    "types",
    "databases",
    "ever",
    "heard",
    "tableau",
    "powerbi",
    "adus",
    "equivalent",
    "adus",
    "data",
    "pipelines",
    "automates",
    "movement",
    "data",
    "reliably",
    "move",
    "data",
    "compute",
    "storage",
    "services",
    "abus",
    "glue",
    "etl",
    "service",
    "allows",
    "move",
    "data",
    "one",
    "location",
    "another",
    "need",
    "perform",
    "transformations",
    "final",
    "destination",
    "simar",
    "similar",
    "dms",
    "robust",
    "aus",
    "lake",
    "formation",
    "centralized",
    "curated",
    "secured",
    "repository",
    "stores",
    "data",
    "data",
    "lake",
    "storage",
    "repository",
    "holds",
    "vast",
    "amount",
    "raw",
    "data",
    "native",
    "format",
    "needed",
    "last",
    "adab",
    "state",
    "exchange",
    "catalog",
    "data",
    "sets",
    "download",
    "free",
    "uh",
    "subscribe",
    "purchase",
    "data",
    "sets",
    "might",
    "like",
    "foot",
    "traffic",
    "data",
    "imdb",
    "tv",
    "movie",
    "data",
    "historical",
    "weather",
    "data",
    "sometimes",
    "really",
    "great",
    "trying",
    "learn",
    "work",
    "tools",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "amazon",
    "quick",
    "site",
    "business",
    "intelligence",
    "dashboard",
    "bi",
    "dashboard",
    "allows",
    "ingest",
    "data",
    "various",
    "databus",
    "storage",
    "database",
    "services",
    "quickly",
    "visualize",
    "business",
    "data",
    "minimal",
    "programming",
    "data",
    "formula",
    "knowledge",
    "example",
    "quick",
    "site",
    "dashboard",
    "um",
    "way",
    "quick",
    "site",
    "able",
    "make",
    "dashboards",
    "super",
    "fast",
    "via",
    "spice",
    "super",
    "fast",
    "parallel",
    "memory",
    "calculation",
    "engine",
    "um",
    "thing",
    "use",
    "spice",
    "um",
    "generally",
    "good",
    "use",
    "uh",
    "caveats",
    "getting",
    "data",
    "quick",
    "site",
    "sometimes",
    "ca",
    "ingest",
    "data",
    "directly",
    "particular",
    "uh",
    "data",
    "store",
    "might",
    "dump",
    "s3",
    "first",
    "bad",
    "use",
    "adis",
    "glue",
    "transform",
    "data",
    "um",
    "additional",
    "features",
    "sometimes",
    "market",
    "services",
    "quick",
    "site",
    "ml",
    "insights",
    "detects",
    "anomalies",
    "perform",
    "accurate",
    "uh",
    "forecasting",
    "generate",
    "natural",
    "language",
    "narrative",
    "basically",
    "like",
    "know",
    "describe",
    "going",
    "read",
    "business",
    "report",
    "know",
    "amazon",
    "quick",
    "site",
    "q",
    "allows",
    "ask",
    "questions",
    "using",
    "natural",
    "language",
    "data",
    "receive",
    "answers",
    "seconds",
    "go",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "let",
    "go",
    "take",
    "look",
    "amazon",
    "quick",
    "sites",
    "quick",
    "site",
    "um",
    "business",
    "intelligence",
    "tool",
    "go",
    "uh",
    "sign",
    "kind",
    "part",
    "ads",
    "separate",
    "thing",
    "choose",
    "want",
    "enterprise",
    "standard",
    "um",
    "want",
    "pay",
    "much",
    "going",
    "go",
    "standard",
    "really",
    "sure",
    "difference",
    "really",
    "telling",
    "um",
    "standard",
    "enterprise",
    "going",
    "assume",
    "standard",
    "cost",
    "effective",
    "says",
    "user",
    "use",
    "federated",
    "identities",
    "fine",
    "use",
    "federate",
    "identities",
    "um",
    "stick",
    "top",
    "one",
    "seems",
    "fine",
    "need",
    "enter",
    "name",
    "say",
    "quick",
    "site",
    "account",
    "probably",
    "fill",
    "something",
    "let",
    "say",
    "andrew",
    "example",
    "co",
    "services",
    "going",
    "integrate",
    "athena",
    "s3",
    "rds",
    "things",
    "like",
    "guess",
    "could",
    "select",
    "buckets",
    "worried",
    "right",
    "provided",
    "account",
    "name",
    "available",
    "terrible",
    "ui",
    "aws",
    "going",
    "dump",
    "numbers",
    "going",
    "put",
    "email",
    "um",
    "probably",
    "want",
    "s3",
    "buckets",
    "going",
    "make",
    "new",
    "bucket",
    "think",
    "going",
    "gon",
    "na",
    "make",
    "bucket",
    "say",
    "uh",
    "quick",
    "site",
    "data",
    "okay",
    "going",
    "create",
    "bucket",
    "going",
    "go",
    "back",
    "hopefully",
    "shows",
    "uh",
    "back",
    "going",
    "give",
    "hard",
    "refresh",
    "hit",
    "quick",
    "sign",
    "quicksite",
    "choose",
    "standard",
    "say",
    "quick",
    "site",
    "account",
    "account",
    "bunch",
    "numbers",
    "andrew",
    "exam",
    "really",
    "care",
    "adjusting",
    "data",
    "everywhere",
    "else",
    "want",
    "s3",
    "data",
    "uh",
    "sure",
    "give",
    "right",
    "permissions",
    "even",
    "though",
    "plan",
    "anything",
    "athena",
    "today",
    "give",
    "moment",
    "load",
    "thinking",
    "thinking",
    "making",
    "like",
    "excel",
    "spreadsheet",
    "filling",
    "data",
    "oh",
    "says",
    "account",
    "set",
    "go",
    "quick",
    "site",
    "bet",
    "import",
    "like",
    "csv",
    "something",
    "um",
    "tableau",
    "powerbi",
    "kind",
    "person",
    "um",
    "uh",
    "know",
    "purpose",
    "cloud",
    "practitioner",
    "going",
    "show",
    "amazon",
    "quick",
    "set",
    "lets",
    "easily",
    "visualize",
    "data",
    "etc",
    "sounds",
    "great",
    "next",
    "next",
    "next",
    "know",
    "oh",
    "examp",
    "great",
    "even",
    "make",
    "spreadsheet",
    "okay",
    "click",
    "stuff",
    "looks",
    "like",
    "really",
    "improved",
    "since",
    "last",
    "time",
    "seen",
    "quite",
    "nice",
    "um",
    "could",
    "try",
    "make",
    "trying",
    "think",
    "yeah",
    "spice",
    "lot",
    "easier",
    "starting",
    "scratch",
    "going",
    "say",
    "close",
    "user",
    "analysis",
    "want",
    "data",
    "sets",
    "oh",
    "already",
    "data",
    "sets",
    "coming",
    "s3",
    "think",
    "old",
    "s3",
    "logo",
    "sure",
    "using",
    "one",
    "go",
    "create",
    "new",
    "data",
    "set",
    "oh",
    "upload",
    "directly",
    "even",
    "use",
    "s3",
    "great",
    "going",
    "values",
    "going",
    "say",
    "um",
    "uh",
    "type",
    "value",
    "say",
    "banana",
    "125",
    "123",
    "say",
    "apple",
    "11",
    "orange",
    "nobody",
    "likes",
    "oranges",
    "say",
    "sure",
    "like",
    "lots",
    "people",
    "like",
    "oranges",
    "oh",
    "got",
    "put",
    "pears",
    "actually",
    "really",
    "like",
    "pears",
    "people",
    "think",
    "like",
    "bananas",
    "true",
    "actually",
    "like",
    "pears",
    "like",
    "going",
    "go",
    "ahead",
    "save",
    "save",
    "going",
    "save",
    "desktop",
    "give",
    "moment",
    "soft",
    "screen",
    "save",
    "uh",
    "data",
    "set",
    "quick",
    "site",
    "csv",
    "even",
    "take",
    "xls",
    "save",
    "uh",
    "save",
    "xls",
    "okay",
    "going",
    "upload",
    "data",
    "set",
    "going",
    "scan",
    "file",
    "going",
    "see",
    "sheet",
    "even",
    "preview",
    "information",
    "going",
    "add",
    "data",
    "uh",
    "get",
    "added",
    "data",
    "data",
    "set",
    "well",
    "like",
    "says",
    "add",
    "data",
    "want",
    "add",
    "data",
    "set",
    "data",
    "set",
    "maybe",
    "save",
    "visualize",
    "autographing",
    "yet",
    "maybe",
    "drag",
    "working",
    "thinking",
    "okay",
    "100",
    "going",
    "drag",
    "onto",
    "says",
    "pear",
    "orange",
    "banana",
    "kind",
    "trying",
    "make",
    "sense",
    "taking",
    "count",
    "value",
    "maybe",
    "put",
    "value",
    "wow",
    "much",
    "easier",
    "used",
    "like",
    "year",
    "um",
    "going",
    "tell",
    "gotten",
    "lot",
    "easier",
    "use",
    "quite",
    "impressed",
    "yeah",
    "mean",
    "pretty",
    "much",
    "quick",
    "site",
    "want",
    "visualize",
    "things",
    "different",
    "types",
    "drag",
    "probably",
    "like",
    "click",
    "wheel",
    "change",
    "sure",
    "exactly",
    "uh",
    "dials",
    "knobs",
    "work",
    "mean",
    "another",
    "thing",
    "could",
    "drag",
    "like",
    "another",
    "object",
    "thing",
    "maybe",
    "want",
    "pie",
    "chart",
    "um",
    "add",
    "visual",
    "yeah",
    "nice",
    "powerbi",
    "like",
    "still",
    "great",
    "know",
    "type",
    "value",
    "got",
    "nice",
    "pie",
    "chart",
    "uh",
    "let",
    "try",
    "something",
    "weird",
    "let",
    "give",
    "one",
    "go",
    "color",
    "nice",
    "um",
    "probably",
    "kind",
    "way",
    "color",
    "focus",
    "banana",
    "know",
    "know",
    "point",
    "anyway",
    "quick",
    "site",
    "um",
    "really",
    "want",
    "pay",
    "going",
    "let",
    "go",
    "um",
    "deactivate",
    "trying",
    "remember",
    "chang",
    "interface",
    "change",
    "everything",
    "maybe",
    "go",
    "trial",
    "4",
    "days",
    "maybe",
    "quantity",
    "four",
    "29",
    "day",
    "trial",
    "want",
    "get",
    "trial",
    "want",
    "use",
    "anymore",
    "um",
    "delete",
    "ads",
    "quick",
    "site",
    "canceling",
    "subscription",
    "unsubscribe",
    "uh",
    "signed",
    "im",
    "account",
    "quicksite",
    "administrator",
    "root",
    "administrator",
    "sure",
    "uh",
    "deleted",
    "secondary",
    "name",
    "spaces",
    "find",
    "existing",
    "name",
    "space",
    "etc",
    "choose",
    "username",
    "application",
    "bars",
    "manage",
    "quick",
    "site",
    "account",
    "settings",
    "unsubscribe",
    "almost",
    "thought",
    "right",
    "place",
    "uh",
    "one",
    "manage",
    "quick",
    "site",
    "subscriptions",
    "edit",
    "unsubscribe",
    "option",
    "sure",
    "cancel",
    "unsubscribe",
    "button",
    "appear",
    "quick",
    "site",
    "could",
    "trial",
    "maybe",
    "end",
    "trial",
    "uh",
    "vanish",
    "making",
    "easy",
    "account",
    "settings",
    "ah",
    "delete",
    "account",
    "probably",
    "want",
    "permanently",
    "delete",
    "account",
    "yes",
    "mean",
    "get",
    "rid",
    "subcription",
    "gets",
    "rid",
    "everything",
    "go",
    "say",
    "confirm",
    "delete",
    "account",
    "unless",
    "using",
    "services",
    "blah",
    "blah",
    "blah",
    "blah",
    "blah",
    "um",
    "successful",
    "okay",
    "great",
    "go",
    "back",
    "ads",
    "confirm",
    "gone",
    "going",
    "go",
    "quicksite",
    "see",
    "trying",
    "ask",
    "sign",
    "gotten",
    "r",
    "account",
    "good",
    "shape",
    "uh",
    "yeah",
    "quick",
    "site",
    "right",
    "let",
    "take",
    "look",
    "machine",
    "learning",
    "ai",
    "services",
    "adab",
    "us",
    "wo",
    "stop",
    "making",
    "things",
    "um",
    "basically",
    "last",
    "time",
    "made",
    "uh",
    "videos",
    "generative",
    "stuff",
    "exist",
    "need",
    "cover",
    "first",
    "amazon",
    "bedrock",
    "uh",
    "uses",
    "large",
    "language",
    "models",
    "makes",
    "cloud",
    "service",
    "offering",
    "generate",
    "text",
    "images",
    "responses",
    "know",
    "chat",
    "gpt",
    "know",
    "bedrock",
    "amazon",
    "code",
    "whisperer",
    "ai",
    "code",
    "generator",
    "predict",
    "code",
    "meet",
    "use",
    "case",
    "uh",
    "heard",
    "ever",
    "heard",
    "github",
    "thing",
    "basically",
    "going",
    "write",
    "code",
    "along",
    "say",
    "amazon",
    "devops",
    "guru",
    "uses",
    "ml",
    "machine",
    "learning",
    "analyze",
    "operational",
    "data",
    "application",
    "metrics",
    "events",
    "detect",
    "operational",
    "abnormalities",
    "um",
    "imagine",
    "kind",
    "like",
    "junior",
    "devops",
    "person",
    "digging",
    "metrics",
    "figure",
    "something",
    "wrong",
    "amazon",
    "lookout",
    "actually",
    "three",
    "different",
    "um",
    "offerings",
    "amazon",
    "lookout",
    "equipment",
    "amazon",
    "uh",
    "lookout",
    "metrics",
    "amazon",
    "look",
    "vision",
    "seem",
    "something",
    "quality",
    "control",
    "performing",
    "automated",
    "inspection",
    "vision",
    "course",
    "would",
    "use",
    "vision",
    "detect",
    "anomalies",
    "uh",
    "one",
    "would",
    "equipment",
    "detect",
    "anything",
    "wrong",
    "operational",
    "equipment",
    "uh",
    "metrics",
    "would",
    "know",
    "metric",
    "data",
    "something",
    "probably",
    "um",
    "hard",
    "industries",
    "uh",
    "utilize",
    "amazon",
    "monotron",
    "uses",
    "machine",
    "learning",
    "models",
    "predict",
    "unplanned",
    "equipment",
    "downtime",
    "way",
    "uh",
    "iot",
    "sensors",
    "going",
    "capture",
    "vibrations",
    "sensor",
    "data",
    "hardware",
    "also",
    "adus",
    "neuron",
    "ad",
    "sdk",
    "used",
    "run",
    "deep",
    "learning",
    "workloads",
    "adus",
    "uh",
    "infer",
    "ca",
    "say",
    "word",
    "know",
    "basically",
    "um",
    "machine",
    "learning",
    "acceleration",
    "gpus",
    "attach",
    "ads",
    "train",
    "trainum",
    "yeah",
    "wish",
    "words",
    "hard",
    "actually",
    "um",
    "stuff",
    "aus",
    "machine",
    "learning",
    "include",
    "far",
    "definitely",
    "going",
    "show",
    "exam",
    "definitely",
    "never",
    "see",
    "better",
    "coverage",
    "really",
    "wanted",
    "show",
    "bedrock",
    "hod",
    "whisperer",
    "feel",
    "like",
    "two",
    "uh",
    "show",
    "future",
    "exams",
    "trying",
    "get",
    "front",
    "even",
    "exam",
    "uh",
    "time",
    "recording",
    "okay",
    "music",
    "ciao",
    "right",
    "probably",
    "already",
    "know",
    "generative",
    "ai",
    "case",
    "want",
    "quickly",
    "cover",
    "show",
    "tiny",
    "example",
    "uh",
    "generative",
    "ai",
    "also",
    "shorten",
    "gen",
    "ai",
    "though",
    "people",
    "say",
    "uh",
    "type",
    "artificial",
    "intelligence",
    "capable",
    "capable",
    "generating",
    "new",
    "content",
    "text",
    "images",
    "music",
    "forms",
    "media",
    "example",
    "would",
    "something",
    "like",
    "software",
    "like",
    "use",
    "called",
    "mid",
    "journey",
    "uh",
    "put",
    "prompt",
    "go",
    "ahead",
    "generate",
    "image",
    "um",
    "cloud",
    "service",
    "providers",
    "kind",
    "offering",
    "image",
    "text",
    "um",
    "yeah",
    "hopefully",
    "makes",
    "sense",
    "idea",
    "plug",
    "stuff",
    "get",
    "stuff",
    "music",
    "okay",
    "let",
    "us",
    "take",
    "look",
    "machine",
    "learning",
    "deep",
    "learning",
    "frameworks",
    "frameworks",
    "uh",
    "used",
    "sagemaker",
    "direct",
    "support",
    "want",
    "get",
    "uh",
    "exposure",
    "uh",
    "get",
    "context",
    "terms",
    "machine",
    "learning",
    "ai",
    "stuff",
    "becoming",
    "popular",
    "least",
    "heard",
    "things",
    "logos",
    "left",
    "hand",
    "side",
    "go",
    "first",
    "apachi",
    "mxnet",
    "machine",
    "learning",
    "framework",
    "adopted",
    "ads",
    "basically",
    "um",
    "every",
    "single",
    "cloud",
    "service",
    "provider",
    "backs",
    "kind",
    "source",
    "framework",
    "try",
    "make",
    "one",
    "suggest",
    "use",
    "practice",
    "uh",
    "ones",
    "good",
    "ones",
    "people",
    "want",
    "use",
    "apachi",
    "mxnet",
    "fun",
    "use",
    "whatsoever",
    "um",
    "see",
    "marketing",
    "pushed",
    "everywhere",
    "really",
    "people",
    "want",
    "use",
    "things",
    "like",
    "curus",
    "tensor",
    "flow",
    "anyway",
    "wanted",
    "point",
    "bias",
    "invested",
    "energy",
    "uh",
    "team",
    "machine",
    "learning",
    "frameworks",
    "got",
    "pytorch",
    "optimized",
    "tensor",
    "library",
    "uh",
    "deep",
    "learning",
    "using",
    "gpu",
    "cpu",
    "created",
    "facebook",
    "facebook",
    "necessarily",
    "um",
    "cloud",
    "service",
    "provider",
    "offering",
    "kind",
    "see",
    "good",
    "support",
    "pytorch",
    "major",
    "providers",
    "u",
    "next",
    "tensorflow",
    "made",
    "google",
    "interesting",
    "tensor",
    "flow",
    "google",
    "made",
    "uh",
    "um",
    "gpu",
    "tpu",
    "call",
    "tensor",
    "processing",
    "unit",
    "tensor",
    "unit",
    "thing",
    "tensorflow",
    "optimized",
    "hardware",
    "personally",
    "find",
    "tensorflow",
    "easy",
    "use",
    "say",
    "cires",
    "um",
    "ces",
    "highlevel",
    "machine",
    "learning",
    "framework",
    "built",
    "top",
    "tensorflow",
    "lower",
    "level",
    "ones",
    "really",
    "hard",
    "use",
    "basically",
    "pytorch",
    "came",
    "along",
    "much",
    "easier",
    "use",
    "everyone",
    "noticed",
    "easier",
    "py",
    "torch",
    "curus",
    "came",
    "competitive",
    "pytorch",
    "easier",
    "use",
    "poy",
    "spark",
    "unified",
    "analytics",
    "engine",
    "large",
    "scale",
    "data",
    "processing",
    "ml",
    "offerings",
    "within",
    "called",
    "spark",
    "ml",
    "um",
    "definitely",
    "things",
    "uh",
    "piece",
    "software",
    "called",
    "chainer",
    "um",
    "deep",
    "learning",
    "framework",
    "supports",
    "cuda",
    "hugging",
    "face",
    "exactly",
    "framework",
    "tool",
    "way",
    "accessing",
    "lot",
    "models",
    "online",
    "data",
    "sets",
    "quickly",
    "launching",
    "whatever",
    "reason",
    "uh",
    "adus",
    "uh",
    "strong",
    "synergies",
    "hugging",
    "face",
    "seen",
    "like",
    "developer",
    "advocates",
    "uh",
    "folks",
    "worked",
    "aos",
    "go",
    "hugging",
    "face",
    "seems",
    "strong",
    "uh",
    "relationships",
    "hugging",
    "face",
    "adabs",
    "whatever",
    "reason",
    "lot",
    "ml",
    "frameworks",
    "uh",
    "ml",
    "uh",
    "uh",
    "progressively",
    "um",
    "rapidly",
    "innovating",
    "see",
    "frameworks",
    "come",
    "go",
    "remember",
    "researched",
    "trying",
    "understand",
    "frameworks",
    "lot",
    "kept",
    "digging",
    "finding",
    "oh",
    "active",
    "anymore",
    "active",
    "anymore",
    "want",
    "point",
    "ones",
    "screen",
    "become",
    "active",
    "tomorrow",
    "would",
    "surprised",
    "uh",
    "part",
    "seem",
    "popular",
    "uh",
    "uh",
    "well",
    "supported",
    "uh",
    "yeah",
    "hopefully",
    "gives",
    "idea",
    "frameworks",
    "okay",
    "music",
    "ciao",
    "right",
    "let",
    "take",
    "look",
    "apachi",
    "mxnet",
    "little",
    "bit",
    "detail",
    "framework",
    "aabus",
    "wants",
    "use",
    "whether",
    "want",
    "use",
    "different",
    "story",
    "uh",
    "see",
    "marketing",
    "pages",
    "things",
    "like",
    "apachi",
    "mxnet",
    "deep",
    "learning",
    "machine",
    "learning",
    "framework",
    "supports",
    "many",
    "many",
    "different",
    "programming",
    "languages",
    "one",
    "advantage",
    "uh",
    "key",
    "features",
    "uh",
    "scalable",
    "flexible",
    "portable",
    "supports",
    "multiple",
    "programming",
    "language",
    "inabus",
    "made",
    "apachi",
    "mxet",
    "framework",
    "choice",
    "lots",
    "support",
    "within",
    "ad",
    "sagemaker",
    "ad",
    "ml",
    "containers",
    "noticed",
    "increasing",
    "support",
    "p",
    "torch",
    "maybe",
    "know",
    "trying",
    "meet",
    "customer",
    "anyway",
    "um",
    "lot",
    "stuff",
    "mxnet",
    "mxnet",
    "two",
    "highlevel",
    "interfaces",
    "uh",
    "one",
    "called",
    "glue",
    "module",
    "api",
    "uh",
    "depending",
    "one",
    "use",
    "one",
    "imperative",
    "programming",
    "one",
    "symbolic",
    "programming",
    "uh",
    "deeper",
    "concept",
    "machine",
    "learning",
    "going",
    "tell",
    "one",
    "really",
    "easy",
    "one",
    "really",
    "hard",
    "um",
    "uh",
    "let",
    "look",
    "simple",
    "example",
    "uh",
    "code",
    "using",
    "gluon",
    "api",
    "kind",
    "looks",
    "like",
    "see",
    "using",
    "python",
    "hopefully",
    "gives",
    "idea",
    "uh",
    "mxnet",
    "offering",
    "key",
    "thing",
    "offers",
    "lot",
    "different",
    "programming",
    "languages",
    "appear",
    "exam",
    "absolutely",
    "know",
    "absolutely",
    "um",
    "good",
    "context",
    "adus",
    "ml",
    "music",
    "go",
    "want",
    "talk",
    "little",
    "bit",
    "intel",
    "think",
    "important",
    "remember",
    "hardware",
    "running",
    "um",
    "cloud",
    "service",
    "providers",
    "really",
    "matter",
    "um",
    "couple",
    "terms",
    "might",
    "see",
    "using",
    "compute",
    "aware",
    "want",
    "make",
    "sure",
    "know",
    "let",
    "talk",
    "intel",
    "intel",
    "multinational",
    "corporation",
    "one",
    "world",
    "largest",
    "semiconductor",
    "chip",
    "manufacturers",
    "intel",
    "inventor",
    "x86",
    "instruction",
    "set",
    "basically",
    "uh",
    "released",
    "chip",
    "back",
    "1978",
    "one",
    "called",
    "intel",
    "8086",
    "chip",
    "idea",
    "um",
    "came",
    "instruction",
    "set",
    "um",
    "basically",
    "bunch",
    "words",
    "use",
    "um",
    "program",
    "chip",
    "lower",
    "level",
    "language",
    "um",
    "lower",
    "level",
    "language",
    "would",
    "assembly",
    "um",
    "makes",
    "sense",
    "idea",
    "um",
    "instruction",
    "set",
    "write",
    "assembly",
    "basically",
    "modern",
    "programs",
    "like",
    "use",
    "uh",
    "programming",
    "languages",
    "like",
    "uh",
    "c",
    "actually",
    "compile",
    "assembly",
    "um",
    "languages",
    "compile",
    "assembly",
    "chip",
    "understands",
    "assembly",
    "turned",
    "machine",
    "code",
    "like",
    "zeros",
    "ones",
    "reason",
    "mentioning",
    "go",
    "uh",
    "launch",
    "uh",
    "compute",
    "uh",
    "instance",
    "let",
    "say",
    "aws",
    "uh",
    "launching",
    "ec2",
    "instance",
    "choose",
    "uh",
    "whether",
    "x86",
    "different",
    "instruction",
    "set",
    "architecture",
    "one",
    "arm",
    "really",
    "really",
    "good",
    "depends",
    "whether",
    "uh",
    "uh",
    "stuff",
    "support",
    "part",
    "intel",
    "arm",
    "chips",
    "well",
    "um",
    "company",
    "produces",
    "arm",
    "chips",
    "per",
    "se",
    "architecture",
    "uh",
    "way",
    "works",
    "fewer",
    "instruction",
    "sets",
    "fewer",
    "uh",
    "rules",
    "write",
    "limited",
    "writing",
    "assembly",
    "end",
    "day",
    "matter",
    "programming",
    "language",
    "going",
    "compile",
    "worry",
    "fewer",
    "instructions",
    "fewer",
    "instructions",
    "generally",
    "results",
    "better",
    "uh",
    "power",
    "efficiency",
    "better",
    "performance",
    "better",
    "better",
    "cost",
    "customer",
    "try",
    "run",
    "arm",
    "part",
    "always",
    "great",
    "run",
    "arm",
    "uh",
    "really",
    "depends",
    "software",
    "going",
    "able",
    "run",
    "arm",
    "um",
    "stuff",
    "like",
    "wanted",
    "point",
    "two",
    "things",
    "uh",
    "least",
    "intel",
    "instruction",
    "sets",
    "music",
    "okay",
    "right",
    "want",
    "talk",
    "two",
    "things",
    "um",
    "intel",
    "ads",
    "first",
    "intel",
    "zeon",
    "scalable",
    "processor",
    "second",
    "intel",
    "gotti",
    "um",
    "us",
    "course",
    "work",
    "purchases",
    "um",
    "hardware",
    "um",
    "uh",
    "companies",
    "like",
    "use",
    "amd",
    "nvidia",
    "think",
    "worth",
    "mentioning",
    "intel",
    "little",
    "bit",
    "detail",
    "every",
    "time",
    "go",
    "reinvent",
    "intel",
    "big",
    "giant",
    "booth",
    "go",
    "scour",
    "ads",
    "website",
    "looks",
    "like",
    "ads",
    "works",
    "closely",
    "intel",
    "opposed",
    "uh",
    "providers",
    "say",
    "intel",
    "utilized",
    "gcp",
    "azure",
    "others",
    "uh",
    "noticed",
    "something",
    "going",
    "aws",
    "let",
    "first",
    "talk",
    "intel",
    "xon",
    "scalable",
    "processors",
    "high",
    "performance",
    "cpus",
    "designed",
    "enterprise",
    "server",
    "applications",
    "commonly",
    "used",
    "instances",
    "um",
    "scalable",
    "part",
    "makes",
    "good",
    "machine",
    "learning",
    "often",
    "going",
    "using",
    "intel",
    "zeon",
    "processors",
    "whether",
    "know",
    "ads",
    "intel",
    "intel",
    "uh",
    "habana",
    "gotti",
    "processor",
    "processor",
    "specialized",
    "ai",
    "training",
    "uh",
    "could",
    "say",
    "direct",
    "competitor",
    "nvidia",
    "similar",
    "competitor",
    "uh",
    "uh",
    "uh",
    "something",
    "similar",
    "um",
    "believe",
    "intel",
    "gotti",
    "sdk",
    "called",
    "synapse",
    "ai",
    "uh",
    "use",
    "interact",
    "launch",
    "sage",
    "maker",
    "use",
    "uh",
    "uh",
    "api",
    "sdk",
    "order",
    "best",
    "utilize",
    "uh",
    "hardware",
    "um",
    "pieces",
    "hardware",
    "offered",
    "uh",
    "ads",
    "think",
    "good",
    "know",
    "least",
    "name",
    "uh",
    "music",
    "okay",
    "hey",
    "angrew",
    "brown",
    "let",
    "talk",
    "gpus",
    "sure",
    "people",
    "know",
    "gpus",
    "going",
    "talk",
    "anyway",
    "want",
    "talk",
    "cudas",
    "gpu",
    "stands",
    "general",
    "processing",
    "unit",
    "processor",
    "specialized",
    "quickly",
    "render",
    "high",
    "resolution",
    "images",
    "videos",
    "concurrently",
    "youve",
    "ever",
    "played",
    "video",
    "games",
    "know",
    "need",
    "good",
    "gpu",
    "images",
    "however",
    "gpus",
    "perform",
    "parallel",
    "operations",
    "multiple",
    "sets",
    "data",
    "also",
    "used",
    "tasks",
    "makes",
    "really",
    "good",
    "machine",
    "learning",
    "scientific",
    "uh",
    "computation",
    "trying",
    "uh",
    "convince",
    "significant",
    "need",
    "better",
    "graphics",
    "card",
    "tell",
    "work",
    "need",
    "machine",
    "learning",
    "scientific",
    "comp",
    "computation",
    "fault",
    "also",
    "play",
    "video",
    "games",
    "like",
    "graphic",
    "right",
    "hand",
    "side",
    "think",
    "got",
    "nvidia",
    "kind",
    "trying",
    "demonstrate",
    "difference",
    "uh",
    "paralyzation",
    "gpu",
    "versus",
    "serial",
    "tasks",
    "cpu",
    "let",
    "go",
    "read",
    "little",
    "bit",
    "cpus",
    "average",
    "four",
    "16",
    "processor",
    "cores",
    "gpus",
    "thousands",
    "processor",
    "cores",
    "works",
    "idea",
    "know",
    "works",
    "uh",
    "48",
    "gpus",
    "provide",
    "many",
    "c",
    "lot",
    "gpus",
    "best",
    "suited",
    "repetitive",
    "highly",
    "parallel",
    "computing",
    "tasks",
    "rendering",
    "graphics",
    "cryptocurrency",
    "mining",
    "people",
    "even",
    "still",
    "deep",
    "learning",
    "machine",
    "learning",
    "know",
    "go",
    "music",
    "gpus",
    "right",
    "let",
    "take",
    "look",
    "cuda",
    "let",
    "talk",
    "nvidia",
    "nvidia",
    "company",
    "manufactures",
    "graphical",
    "processing",
    "units",
    "gaming",
    "professional",
    "markets",
    "ever",
    "played",
    "video",
    "games",
    "build",
    "rig",
    "um",
    "lot",
    "people",
    "like",
    "choose",
    "nvidia",
    "nvidia",
    "things",
    "video",
    "games",
    "due",
    "framework",
    "uh",
    "called",
    "cuda",
    "stands",
    "compute",
    "unified",
    "device",
    "architecture",
    "parallel",
    "computing",
    "platform",
    "api",
    "said",
    "framework",
    "guess",
    "api",
    "bu",
    "video",
    "allows",
    "developers",
    "use",
    "cuda",
    "enable",
    "gpus",
    "general",
    "purpose",
    "computing",
    "gpus",
    "says",
    "gp",
    "gpu",
    "saying",
    "general",
    "purpose",
    "gpus",
    "know",
    "mouthful",
    "um",
    "aws",
    "bunch",
    "instances",
    "um",
    "utilize",
    "uh",
    "nvidia",
    "gpu",
    "adus",
    "always",
    "changing",
    "instances",
    "could",
    "old",
    "see",
    "p3",
    "tesla",
    "tesla",
    "v100",
    "g3",
    "tesla",
    "m60",
    "g4",
    "t4",
    "uh",
    "p4",
    "tesla",
    "100",
    "probably",
    "probably",
    "old",
    "ones",
    "new",
    "instances",
    "newer",
    "nvidia",
    "cards",
    "point",
    "adus",
    "uh",
    "gpus",
    "utilize",
    "another",
    "thing",
    "want",
    "point",
    "cuda",
    "major",
    "deep",
    "learning",
    "frameworks",
    "integrated",
    "nvidia",
    "deep",
    "learning",
    "sdks",
    "big",
    "fight",
    "war",
    "um",
    "uh",
    "companies",
    "make",
    "uh",
    "gpus",
    "cps",
    "really",
    "want",
    "uh",
    "used",
    "machine",
    "learning",
    "definitely",
    "sure",
    "amd",
    "probably",
    "kind",
    "similar",
    "offering",
    "something",
    "uh",
    "definitely",
    "intel",
    "well",
    "um",
    "nvidia",
    "done",
    "good",
    "job",
    "uh",
    "making",
    "sure",
    "popular",
    "um",
    "nvidia",
    "deep",
    "learning",
    "sdk",
    "collection",
    "en",
    "uh",
    "nvidia",
    "libraries",
    "deep",
    "learning",
    "something",
    "sdk",
    "use",
    "cuda",
    "interact",
    "api",
    "uh",
    "one",
    "libraries",
    "called",
    "cuda",
    "deep",
    "neural",
    "network",
    "library",
    "something",
    "use",
    "uh",
    "tuned",
    "bunch",
    "stuff",
    "looks",
    "like",
    "getting",
    "little",
    "bit",
    "um",
    "uh",
    "technical",
    "slide",
    "machine",
    "learning",
    "uh",
    "inabus",
    "specialty",
    "whole",
    "lot",
    "change",
    "brought",
    "uh",
    "really",
    "need",
    "know",
    "last",
    "part",
    "understand",
    "cuda",
    "uh",
    "important",
    "uh",
    "working",
    "machine",
    "learning",
    "adus",
    "uh",
    "good",
    "offerings",
    "uh",
    "instances",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "ads",
    "well",
    "architectur",
    "framework",
    "white",
    "paper",
    "created",
    "ads",
    "help",
    "customers",
    "build",
    "using",
    "best",
    "practices",
    "defined",
    "aws",
    "find",
    "architecture",
    "forwell",
    "architected",
    "idea",
    "unique",
    "aws",
    "providers",
    "believe",
    "aws",
    "first",
    "one",
    "define",
    "really",
    "good",
    "uh",
    "good",
    "approach",
    "pretty",
    "much",
    "essential",
    "knowledge",
    "uh",
    "four",
    "certifications",
    "looking",
    "cloud",
    "practitioner",
    "soci",
    "architect",
    "associate",
    "professional",
    "um",
    "lot",
    "principles",
    "best",
    "practices",
    "adus",
    "uses",
    "architect",
    "infrastructure",
    "okay",
    "framework",
    "divided",
    "five",
    "sections",
    "called",
    "pillars",
    "address",
    "different",
    "aspects",
    "lenses",
    "applied",
    "cloud",
    "workload",
    "imagine",
    "cloud",
    "workload",
    "going",
    "want",
    "adopt",
    "architect",
    "framework",
    "things",
    "know",
    "people",
    "consider",
    "outside",
    "five",
    "pillars",
    "need",
    "know",
    "en",
    "definitions",
    "uh",
    "general",
    "design",
    "principles",
    "review",
    "process",
    "um",
    "five",
    "pillars",
    "operational",
    "excellence",
    "security",
    "reliability",
    "performance",
    "efficiency",
    "cost",
    "optimization",
    "major",
    "sections",
    "uh",
    "white",
    "paper",
    "outside",
    "main",
    "white",
    "paper",
    "white",
    "papers",
    "go",
    "even",
    "farther",
    "detail",
    "really",
    "want",
    "uh",
    "really",
    "focus",
    "security",
    "get",
    "lot",
    "information",
    "well",
    "okay",
    "music",
    "let",
    "take",
    "look",
    "general",
    "definitions",
    "well",
    "architecture",
    "framework",
    "starting",
    "pillars",
    "operational",
    "excellent",
    "pillar",
    "run",
    "monitor",
    "systems",
    "security",
    "pillar",
    "protect",
    "data",
    "systems",
    "mitigate",
    "risk",
    "reliability",
    "pillar",
    "mitigate",
    "recover",
    "uh",
    "disruptions",
    "performance",
    "efficiency",
    "pillar",
    "using",
    "computing",
    "resources",
    "efficiently",
    "effectively",
    "cost",
    "optimization",
    "pillar",
    "getting",
    "lowest",
    "price",
    "going",
    "find",
    "business",
    "value",
    "put",
    "aster",
    "uh",
    "know",
    "might",
    "obsess",
    "saying",
    "need",
    "meet",
    "requirements",
    "pillars",
    "case",
    "trade",
    "pillars",
    "based",
    "business",
    "context",
    "know",
    "take",
    "literally",
    "implement",
    "every",
    "single",
    "thing",
    "consider",
    "uh",
    "know",
    "might",
    "adapt",
    "based",
    "workloads",
    "general",
    "definitions",
    "come",
    "across",
    "components",
    "code",
    "configuration",
    "itless",
    "resources",
    "requirement",
    "workload",
    "set",
    "components",
    "work",
    "together",
    "deliver",
    "business",
    "value",
    "mileston",
    "key",
    "changes",
    "architecture",
    "product",
    "life",
    "cycle",
    "architecture",
    "components",
    "work",
    "together",
    "workload",
    "technology",
    "portfolio",
    "collection",
    "workloads",
    "required",
    "business",
    "operate",
    "music",
    "okay",
    "well",
    "architected",
    "framework",
    "designed",
    "around",
    "different",
    "kind",
    "team",
    "structure",
    "looking",
    "enterprises",
    "generally",
    "centralized",
    "team",
    "specific",
    "roles",
    "ads",
    "structures",
    "teams",
    "distributed",
    "flexible",
    "roles",
    "new",
    "kind",
    "methodology",
    "distributed",
    "teams",
    "uh",
    "major",
    "advantages",
    "come",
    "risks",
    "us",
    "baked",
    "uh",
    "practices",
    "uh",
    "things",
    "mitigate",
    "issues",
    "okay",
    "let",
    "compare",
    "premise",
    "enterprise",
    "uh",
    "itus",
    "proposing",
    "team",
    "structure",
    "premise",
    "see",
    "centralized",
    "team",
    "consisting",
    "technical",
    "architects",
    "solution",
    "ar",
    "architects",
    "data",
    "architects",
    "network",
    "architects",
    "security",
    "architects",
    "kind",
    "see",
    "specialized",
    "vertical",
    "usually",
    "managed",
    "either",
    "tf",
    "zack",
    "man",
    "framework",
    "ways",
    "structuring",
    "teams",
    "popular",
    "adus",
    "proposing",
    "distribute",
    "team",
    "uh",
    "way",
    "going",
    "make",
    "team",
    "work",
    "obviously",
    "thinking",
    "distribute",
    "team",
    "going",
    "lot",
    "agile",
    "make",
    "sure",
    "effectively",
    "work",
    "practices",
    "like",
    "team",
    "experts",
    "raise",
    "bar",
    "uh",
    "making",
    "sure",
    "know",
    "uh",
    "areas",
    "always",
    "say",
    "better",
    "uh",
    "mechanisms",
    "place",
    "automated",
    "checks",
    "standards",
    "great",
    "thing",
    "cloud",
    "automated",
    "say",
    "hey",
    "meet",
    "regulatory",
    "compliance",
    "concept",
    "amazon",
    "leadership",
    "principles",
    "cover",
    "next",
    "slide",
    "detail",
    "um",
    "know",
    "itab",
    "us",
    "obviously",
    "using",
    "uh",
    "frameworks",
    "one",
    "mechanism",
    "stay",
    "organ",
    "oriz",
    "date",
    "supported",
    "virtual",
    "community",
    "subject",
    "matter",
    "experts",
    "principal",
    "engineers",
    "engineer",
    "things",
    "like",
    "lunchtime",
    "talks",
    "recycle",
    "onboarding",
    "material",
    "framework",
    "music",
    "okay",
    "taking",
    "look",
    "amazon",
    "leadership",
    "principles",
    "set",
    "principles",
    "used",
    "company",
    "making",
    "problem",
    "solving",
    "simple",
    "brainstorming",
    "hiring",
    "right",
    "um",
    "ca",
    "say",
    "like",
    "definitely",
    "really",
    "stand",
    "great",
    "especially",
    "first",
    "one",
    "customer",
    "obsession",
    "instead",
    "worrying",
    "competitors",
    "think",
    "customer",
    "wants",
    "work",
    "way",
    "back",
    "uh",
    "know",
    "really",
    "focus",
    "customer",
    "needs",
    "ownership",
    "going",
    "go",
    "something",
    "uh",
    "know",
    "try",
    "mini",
    "boss",
    "uh",
    "take",
    "responsibility",
    "whatever",
    "building",
    "event",
    "simplify",
    "know",
    "always",
    "look",
    "simplest",
    "solution",
    "try",
    "engineer",
    "something",
    "super",
    "complicated",
    "necessary",
    "uh",
    "right",
    "lot",
    "know",
    "try",
    "right",
    "uh",
    "learn",
    "curious",
    "pretty",
    "hire",
    "develop",
    "best",
    "insist",
    "high",
    "standards",
    "adus",
    "always",
    "refers",
    "raising",
    "bar",
    "think",
    "big",
    "buys",
    "action",
    "frugality",
    "adus",
    "really",
    "frugal",
    "know",
    "like",
    "also",
    "customers",
    "want",
    "customers",
    "uh",
    "spend",
    "least",
    "amount",
    "money",
    "possible",
    "using",
    "infrastructure",
    "earn",
    "trust",
    "uh",
    "dive",
    "deep",
    "backbone",
    "disagree",
    "commit",
    "deliver",
    "results",
    "strive",
    "earth",
    "best",
    "employer",
    "success",
    "scale",
    "bring",
    "broad",
    "responsibility",
    "want",
    "read",
    "detail",
    "big",
    "block",
    "text",
    "uh",
    "go",
    "amazon",
    "jobs",
    "uhen",
    "principles",
    "read",
    "music",
    "okay",
    "right",
    "let",
    "talk",
    "general",
    "design",
    "principles",
    "uh",
    "considering",
    "designing",
    "infrastructure",
    "matter",
    "pillar",
    "looking",
    "adopt",
    "first",
    "stop",
    "guessing",
    "capacity",
    "need",
    "great",
    "thing",
    "cloud",
    "computing",
    "use",
    "little",
    "much",
    "based",
    "demand",
    "whereas",
    "premise",
    "would",
    "purchase",
    "machine",
    "make",
    "sure",
    "additional",
    "capacity",
    "could",
    "grow",
    "right",
    "uh",
    "cloud",
    "worry",
    "uh",
    "test",
    "systems",
    "production",
    "scale",
    "able",
    "clone",
    "production",
    "environment",
    "testing",
    "tear",
    "testing",
    "use",
    "save",
    "money",
    "lot",
    "people",
    "staging",
    "server",
    "run",
    "time",
    "great",
    "thing",
    "cloud",
    "know",
    "spin",
    "right",
    "away",
    "tear",
    "save",
    "money",
    "um",
    "automating",
    "make",
    "architectural",
    "experimentation",
    "easier",
    "talking",
    "using",
    "infrastructure",
    "code",
    "ad",
    "ofs",
    "would",
    "using",
    "cloud",
    "formation",
    "creating",
    "change",
    "sets",
    "kind",
    "um",
    "uh",
    "say",
    "exactly",
    "going",
    "change",
    "stack",
    "updates",
    "drift",
    "detection",
    "see",
    "stuff",
    "uh",
    "uh",
    "changed",
    "time",
    "developers",
    "manual",
    "configuration",
    "things",
    "like",
    "allow",
    "evolutionary",
    "architectures",
    "adapting",
    "cicd",
    "um",
    "nightly",
    "releases",
    "using",
    "serverless",
    "adopted",
    "lambdas",
    "deprecate",
    "time",
    "forcing",
    "use",
    "latest",
    "version",
    "uh",
    "evolutionary",
    "architectures",
    "drive",
    "architectures",
    "using",
    "data",
    "um",
    "using",
    "cloud",
    "lot",
    "tooling",
    "automatically",
    "start",
    "collecting",
    "data",
    "cloudwatch",
    "collecting",
    "things",
    "default",
    "cloud",
    "trail",
    "well",
    "know",
    "another",
    "thing",
    "improving",
    "things",
    "game",
    "days",
    "stimulating",
    "traffic",
    "production",
    "purposely",
    "killing",
    "ec2",
    "instances",
    "messing",
    "services",
    "see",
    "well",
    "recover",
    "music",
    "right",
    "jump",
    "pillars",
    "let",
    "go",
    "open",
    "take",
    "look",
    "structure",
    "expect",
    "see",
    "design",
    "principles",
    "definition",
    "best",
    "practices",
    "resources",
    "pillars",
    "follow",
    "let",
    "talk",
    "design",
    "principles",
    "list",
    "design",
    "principles",
    "needs",
    "considered",
    "implementation",
    "going",
    "focus",
    "lot",
    "energy",
    "definition",
    "overview",
    "best",
    "practice",
    "categories",
    "best",
    "practices",
    "detailed",
    "information",
    "practice",
    "uh",
    "various",
    "services",
    "resources",
    "additional",
    "documentation",
    "white",
    "papers",
    "uh",
    "videos",
    "implement",
    "pillar",
    "want",
    "tell",
    "certified",
    "cloud",
    "practitioner",
    "really",
    "going",
    "cover",
    "design",
    "principles",
    "solutions",
    "architect",
    "associate",
    "anything",
    "uh",
    "associate",
    "going",
    "actually",
    "dive",
    "deep",
    "implementation",
    "best",
    "practices",
    "lot",
    "stuff",
    "uh",
    "yeah",
    "music",
    "go",
    "let",
    "take",
    "look",
    "design",
    "principles",
    "operational",
    "excellence",
    "first",
    "perform",
    "operations",
    "code",
    "apply",
    "engineering",
    "discipline",
    "would",
    "application",
    "code",
    "infrastructure",
    "trating",
    "operations",
    "code",
    "limit",
    "human",
    "error",
    "enable",
    "consistent",
    "responses",
    "events",
    "generally",
    "talking",
    "infrast",
    "infrastructure",
    "code",
    "would",
    "probably",
    "like",
    "things",
    "like",
    "cloud",
    "formation",
    "things",
    "could",
    "like",
    "policy",
    "code",
    "bunch",
    "ones",
    "make",
    "frequent",
    "small",
    "reversible",
    "changes",
    "design",
    "workloads",
    "allow",
    "components",
    "updated",
    "regularly",
    "uh",
    "could",
    "talking",
    "rollbacks",
    "incremental",
    "changes",
    "blu",
    "green",
    "deployments",
    "cicd",
    "pipeline",
    "refine",
    "operations",
    "procedures",
    "frequently",
    "look",
    "continuous",
    "opportunities",
    "improve",
    "operations",
    "uh",
    "use",
    "game",
    "days",
    "simulate",
    "traffic",
    "event",
    "failure",
    "production",
    "workloads",
    "anticipate",
    "failure",
    "perform",
    "post",
    "modems",
    "system",
    "failures",
    "better",
    "improve",
    "write",
    "test",
    "code",
    "kill",
    "production",
    "servers",
    "um",
    "small",
    "spelling",
    "mistake",
    "r",
    "servers",
    "test",
    "recovery",
    "learn",
    "operational",
    "failure",
    "share",
    "lessons",
    "learned",
    "knowledge",
    "base",
    "operational",
    "events",
    "failures",
    "across",
    "entire",
    "organization",
    "know",
    "remember",
    "headings",
    "uh",
    "able",
    "categorize",
    "would",
    "operational",
    "excellence",
    "okay",
    "right",
    "music",
    "right",
    "let",
    "take",
    "look",
    "design",
    "principles",
    "security",
    "pillar",
    "first",
    "implement",
    "strong",
    "identity",
    "foundation",
    "implement",
    "principle",
    "lease",
    "privilege",
    "pp",
    "uh",
    "popular",
    "concept",
    "meaning",
    "giving",
    "people",
    "permissions",
    "need",
    "use",
    "centralized",
    "identity",
    "would",
    "using",
    "adus",
    "avoid",
    "long",
    "live",
    "credentials",
    "enable",
    "traceability",
    "monitor",
    "alerts",
    "audit",
    "actions",
    "changes",
    "environment",
    "real",
    "time",
    "integrate",
    "log",
    "metric",
    "collection",
    "automate",
    "investigations",
    "remediation",
    "apply",
    "security",
    "layers",
    "take",
    "defense",
    "depth",
    "approach",
    "multiple",
    "security",
    "controls",
    "everything",
    "edge",
    "networks",
    "vbcs",
    "load",
    "balancing",
    "instances",
    "os",
    "application",
    "code",
    "uh",
    "might",
    "slide",
    "course",
    "defense",
    "uh",
    "depth",
    "basically",
    "see",
    "like",
    "ring",
    "things",
    "kind",
    "see",
    "like",
    "layers",
    "go",
    "outward",
    "inward",
    "talking",
    "listing",
    "things",
    "automate",
    "security",
    "best",
    "practices",
    "uh",
    "protect",
    "prot",
    "data",
    "transit",
    "rest",
    "uh",
    "keep",
    "people",
    "away",
    "data",
    "reason",
    "descriptions",
    "pretty",
    "prepare",
    "security",
    "events",
    "incident",
    "management",
    "systems",
    "investigation",
    "policies",
    "processes",
    "tools",
    "detect",
    "investigate",
    "recovery",
    "incidences",
    "uh",
    "lot",
    "security",
    "tools",
    "funny",
    "uh",
    "initialisms",
    "put",
    "sure",
    "um",
    "yeah",
    "go",
    "music",
    "security",
    "right",
    "let",
    "take",
    "look",
    "design",
    "principles",
    "reliability",
    "first",
    "automatically",
    "recover",
    "failure",
    "monitor",
    "kpis",
    "trigger",
    "automations",
    "threshold",
    "breach",
    "test",
    "recovery",
    "procedures",
    "test",
    "workload",
    "fails",
    "validate",
    "recovery",
    "procedures",
    "use",
    "automation",
    "simulate",
    "different",
    "failures",
    "recreate",
    "scenarios",
    "led",
    "failures",
    "scale",
    "horizontally",
    "increase",
    "aggregate",
    "system",
    "availability",
    "replace",
    "one",
    "large",
    "resource",
    "multiple",
    "small",
    "resources",
    "reduce",
    "impact",
    "single",
    "failure",
    "overall",
    "workload",
    "distribute",
    "requests",
    "across",
    "multiple",
    "smaller",
    "resources",
    "ensure",
    "share",
    "common",
    "point",
    "failure",
    "talking",
    "uh",
    "high",
    "availability",
    "okay",
    "stop",
    "guessing",
    "capacity",
    "seen",
    "multiple",
    "times",
    "premise",
    "takes",
    "lot",
    "guess",
    "work",
    "determine",
    "elasticity",
    "workloads",
    "uh",
    "workload",
    "demands",
    "cloud",
    "need",
    "guess",
    "much",
    "need",
    "request",
    "right",
    "size",
    "resources",
    "demand",
    "going",
    "give",
    "better",
    "reliability",
    "okay",
    "manage",
    "change",
    "automation",
    "making",
    "changes",
    "via",
    "infrastructure",
    "code",
    "allow",
    "formal",
    "process",
    "track",
    "review",
    "infrastructure",
    "going",
    "see",
    "ic",
    "show",
    "lot",
    "framework",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "design",
    "principles",
    "performance",
    "efficiency",
    "first",
    "democratize",
    "advanced",
    "technology",
    "focus",
    "product",
    "development",
    "rather",
    "procurement",
    "provisioning",
    "management",
    "services",
    "prem",
    "order",
    "machines",
    "set",
    "take",
    "advantage",
    "advanced",
    "technology",
    "specialize",
    "optimize",
    "use",
    "case",
    "demand",
    "cloud",
    "services",
    "using",
    "prem",
    "uh",
    "know",
    "might",
    "option",
    "sage",
    "maker",
    "right",
    "going",
    "vm",
    "going",
    "work",
    "whereas",
    "ads",
    "specialized",
    "things",
    "move",
    "quickly",
    "uh",
    "go",
    "global",
    "minutes",
    "deploying",
    "workload",
    "multiple",
    "abus",
    "regions",
    "around",
    "world",
    "allows",
    "provide",
    "lower",
    "latency",
    "better",
    "experience",
    "customers",
    "minimal",
    "cost",
    "used",
    "serverless",
    "architecture",
    "serverless",
    "architecture",
    "removes",
    "need",
    "run",
    "maintain",
    "physical",
    "servers",
    "traditional",
    "computing",
    "activities",
    "removes",
    "operational",
    "burden",
    "managing",
    "physical",
    "servers",
    "lower",
    "transactional",
    "costs",
    "manag",
    "services",
    "operate",
    "cloud",
    "scale",
    "lot",
    "better",
    "um",
    "running",
    "efficiently",
    "uh",
    "experiment",
    "often",
    "virtual",
    "automatable",
    "uh",
    "resources",
    "quickly",
    "carry",
    "comparative",
    "testing",
    "using",
    "different",
    "types",
    "instances",
    "storage",
    "configurations",
    "make",
    "best",
    "choice",
    "call",
    "right",
    "sizing",
    "choosing",
    "right",
    "size",
    "consider",
    "mechanical",
    "sympathy",
    "understand",
    "cloud",
    "services",
    "consumed",
    "always",
    "use",
    "technology",
    "approach",
    "aligns",
    "best",
    "workload",
    "goals",
    "example",
    "consider",
    "data",
    "access",
    "patterns",
    "select",
    "database",
    "storage",
    "music",
    "approaches",
    "let",
    "take",
    "look",
    "design",
    "principles",
    "cost",
    "optimization",
    "first",
    "one",
    "implement",
    "cloud",
    "financial",
    "management",
    "dedicate",
    "time",
    "resources",
    "build",
    "capacity",
    "uh",
    "via",
    "cloud",
    "financial",
    "management",
    "cost",
    "optimization",
    "tooling",
    "soab",
    "us",
    "saying",
    "hey",
    "take",
    "advantage",
    "tooling",
    "makes",
    "easy",
    "know",
    "exactly",
    "spending",
    "adopt",
    "consumption",
    "model",
    "pay",
    "computing",
    "resources",
    "require",
    "uh",
    "increase",
    "decrease",
    "using",
    "uh",
    "depending",
    "business",
    "requirements",
    "talking",
    "demand",
    "pricing",
    "measure",
    "overall",
    "efficiency",
    "measure",
    "business",
    "output",
    "workload",
    "cost",
    "associ",
    "associated",
    "delivering",
    "use",
    "measure",
    "know",
    "gains",
    "make",
    "increasing",
    "output",
    "reducing",
    "costs",
    "stop",
    "spending",
    "money",
    "undifferentiated",
    "hard",
    "word",
    "say",
    "undifferentiated",
    "heavy",
    "lifting",
    "adus",
    "heavy",
    "lifting",
    "data",
    "center",
    "operations",
    "like",
    "racking",
    "stacking",
    "power",
    "servers",
    "also",
    "removes",
    "operational",
    "burden",
    "managing",
    "op",
    "operating",
    "systems",
    "applications",
    "managed",
    "services",
    "allows",
    "focus",
    "customers",
    "business",
    "projects",
    "rather",
    "infrastructure",
    "last",
    "one",
    "analyze",
    "attribute",
    "expenditure",
    "cloud",
    "makes",
    "easier",
    "uh",
    "accurately",
    "identify",
    "usage",
    "cost",
    "systems",
    "allow",
    "transparent",
    "uh",
    "attribution",
    "costs",
    "individualize",
    "workload",
    "owners",
    "helps",
    "measure",
    "return",
    "investment",
    "gives",
    "workload",
    "owners",
    "opportunity",
    "optimize",
    "resources",
    "reduce",
    "costs",
    "go",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "adus",
    "well",
    "architected",
    "tool",
    "auditing",
    "tool",
    "used",
    "assess",
    "cloud",
    "workloads",
    "alignment",
    "aws",
    "well",
    "architected",
    "framework",
    "essentially",
    "checklist",
    "uh",
    "also",
    "nearby",
    "references",
    "know",
    "reading",
    "show",
    "information",
    "uh",
    "resources",
    "help",
    "checklist",
    "idea",
    "done",
    "generate",
    "report",
    "provide",
    "report",
    "executives",
    "key",
    "stakeholders",
    "prove",
    "uh",
    "know",
    "well",
    "architected",
    "workload",
    "aws",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "video",
    "want",
    "show",
    "two",
    "things",
    "well",
    "architected",
    "framework",
    "well",
    "architected",
    "tool",
    "first",
    "let",
    "go",
    "look",
    "well",
    "architected",
    "framework",
    "going",
    "look",
    "white",
    "papers",
    "uh",
    "aws",
    "go",
    "white",
    "papers",
    "bunch",
    "pages",
    "going",
    "checkbox",
    "white",
    "papers",
    "kind",
    "reduce",
    "amount",
    "going",
    "checkbox",
    "well",
    "architector",
    "framework",
    "scroll",
    "way",
    "top",
    "one",
    "think",
    "right",
    "top",
    "one",
    "well",
    "architected",
    "framework",
    "open",
    "used",
    "directly",
    "open",
    "pdf",
    "sure",
    "still",
    "download",
    "generally",
    "going",
    "open",
    "html",
    "page",
    "basically",
    "read",
    "see",
    "stuff",
    "see",
    "multiple",
    "pillars",
    "click",
    "see",
    "design",
    "principles",
    "read",
    "definitions",
    "start",
    "reading",
    "uh",
    "best",
    "practices",
    "things",
    "bottom",
    "one",
    "uh",
    "boring",
    "boring",
    "um",
    "know",
    "get",
    "solutions",
    "architect",
    "things",
    "like",
    "going",
    "need",
    "know",
    "stuff",
    "inside",
    "going",
    "really",
    "help",
    "cloud",
    "practitioner",
    "need",
    "know",
    "surface",
    "level",
    "information",
    "um",
    "architect",
    "framework",
    "let",
    "take",
    "look",
    "well",
    "architected",
    "tool",
    "going",
    "type",
    "well",
    "get",
    "well",
    "architected",
    "tool",
    "go",
    "see",
    "created",
    "couple",
    "probably",
    "demos",
    "um",
    "videos",
    "going",
    "go",
    "define",
    "new",
    "workload",
    "going",
    "say",
    "workload",
    "uh",
    "workload",
    "whoops",
    "workload",
    "messing",
    "probably",
    "grammarly",
    "installed",
    "like",
    "grammarly",
    "going",
    "turn",
    "workload",
    "still",
    "typing",
    "correctly",
    "kill",
    "kill",
    "grammarly",
    "kind",
    "frustrating",
    "bug",
    "grammarly",
    "fault",
    "adab",
    "us",
    "fault",
    "playing",
    "well",
    "grammarly",
    "something",
    "definitely",
    "report",
    "annoying",
    "going",
    "go",
    "ahead",
    "refresh",
    "page",
    "workload",
    "workload",
    "um",
    "andrew",
    "brown",
    "production",
    "matter",
    "pick",
    "regions",
    "us",
    "east",
    "us",
    "east",
    "2",
    "sure",
    "selecting",
    "go",
    "uh",
    "optional",
    "optional",
    "optional",
    "optional",
    "go",
    "next",
    "choose",
    "lens",
    "servus",
    "lens",
    "ftr",
    "lens",
    "foundational",
    "technical",
    "review",
    "sas",
    "lens",
    "go",
    "architected",
    "framework",
    "start",
    "reviewing",
    "okay",
    "get",
    "big",
    "checklist",
    "go",
    "read",
    "one",
    "say",
    "ops",
    "one",
    "determine",
    "priorities",
    "things",
    "like",
    "ops",
    "stuff",
    "like",
    "summaries",
    "well",
    "architected",
    "framework",
    "sections",
    "pretty",
    "much",
    "need",
    "really",
    "read",
    "dock",
    "go",
    "everyone",
    "needs",
    "understand",
    "part",
    "enabling",
    "business",
    "success",
    "shared",
    "goals",
    "order",
    "set",
    "priorities",
    "resources",
    "maximize",
    "benefit",
    "efforts",
    "select",
    "following",
    "evaluate",
    "customer",
    "external",
    "needs",
    "external",
    "customer",
    "needs",
    "evaluate",
    "internal",
    "customer",
    "needs",
    "click",
    "info",
    "going",
    "highlight",
    "one",
    "evolve",
    "key",
    "stakeholders",
    "including",
    "business",
    "development",
    "operations",
    "teams",
    "ensure",
    "etc",
    "go",
    "uh",
    "know",
    "save",
    "exit",
    "okay",
    "uh",
    "uh",
    "questions",
    "answered",
    "say",
    "high",
    "risk",
    "things",
    "like",
    "simplistic",
    "really",
    "way",
    "making",
    "organized",
    "report",
    "checklist",
    "proving",
    "went",
    "uh",
    "executive",
    "level",
    "management",
    "level",
    "hopefully",
    "makes",
    "sense",
    "um",
    "complicated",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "adas",
    "architecture",
    "center",
    "architecture",
    "center",
    "web",
    "portal",
    "contains",
    "best",
    "practices",
    "reference",
    "architectures",
    "variety",
    "different",
    "workloads",
    "find",
    "adab",
    "architecture",
    "looking",
    "best",
    "practices",
    "inter",
    "terms",
    "security",
    "huge",
    "section",
    "pretty",
    "much",
    "every",
    "kind",
    "category",
    "aws",
    "looking",
    "practical",
    "examples",
    "view",
    "large",
    "library",
    "reference",
    "architectures",
    "one",
    "make",
    "ads",
    "q",
    "bot",
    "architectural",
    "diagram",
    "also",
    "uh",
    "deploy",
    "via",
    "cloud",
    "formation",
    "possibly",
    "cdk",
    "um",
    "way",
    "get",
    "working",
    "example",
    "tweak",
    "use",
    "case",
    "really",
    "great",
    "tool",
    "um",
    "done",
    "well",
    "architect",
    "framework",
    "saying",
    "okay",
    "apply",
    "get",
    "concrete",
    "examples",
    "would",
    "surprised",
    "lot",
    "resources",
    "within",
    "well",
    "architectured",
    "framework",
    "white",
    "paper",
    "pointing",
    "center",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "concept",
    "total",
    "cost",
    "ownership",
    "also",
    "known",
    "tco",
    "tco",
    "well",
    "financial",
    "estimate",
    "intended",
    "help",
    "buyers",
    "owners",
    "determine",
    "direct",
    "indirect",
    "cost",
    "product",
    "service",
    "example",
    "know",
    "tco",
    "maybe",
    "like",
    "data",
    "center",
    "hardware",
    "monitoring",
    "installation",
    "personnel",
    "training",
    "software",
    "uh",
    "security",
    "licensing",
    "taxes",
    "limit",
    "kind",
    "examples",
    "show",
    "uh",
    "idea",
    "creating",
    "tco",
    "useful",
    "company",
    "looking",
    "migrate",
    "prem",
    "cloud",
    "better",
    "uh",
    "kind",
    "visual",
    "kind",
    "understand",
    "would",
    "contrast",
    "premise",
    "cloud",
    "let",
    "talk",
    "actually",
    "works",
    "practicality",
    "think",
    "gets",
    "kind",
    "overlooked",
    "cloud",
    "service",
    "providers",
    "selling",
    "tco",
    "idea",
    "gardener",
    "um",
    "know",
    "uh",
    "wrote",
    "article",
    "based",
    "research",
    "organization",
    "moved",
    "uh",
    "virtual",
    "machines",
    "amazon",
    "dc2",
    "seeing",
    "additional",
    "cost",
    "considering",
    "migration",
    "cost",
    "see",
    "bar",
    "um",
    "idea",
    "company",
    "paying",
    "around",
    "started",
    "move",
    "see",
    "uh",
    "cost",
    "initially",
    "went",
    "short",
    "period",
    "time",
    "uh",
    "migration",
    "cost",
    "uh",
    "notice",
    "55",
    "reduction",
    "uh",
    "totally",
    "possible",
    "save",
    "money",
    "uh",
    "clearly",
    "great",
    "savings",
    "uh",
    "exactly",
    "aws",
    "promises",
    "probably",
    "could",
    "reason",
    "updated",
    "tco",
    "calculator",
    "let",
    "contrast",
    "two",
    "premise",
    "left",
    "ads",
    "right",
    "cloud",
    "service",
    "provider",
    "want",
    "help",
    "think",
    "costs",
    "people",
    "generally",
    "think",
    "like",
    "iceberg",
    "idea",
    "costs",
    "always",
    "think",
    "iceberg",
    "hidden",
    "costs",
    "consider",
    "factoring",
    "move",
    "idea",
    "tco",
    "consider",
    "cost",
    "superficial",
    "ones",
    "people",
    "say",
    "look",
    "like",
    "teeth",
    "add",
    "penguins",
    "whale",
    "um",
    "talking",
    "premise",
    "generally",
    "think",
    "software",
    "license",
    "fees",
    "subscription",
    "fees",
    "compare",
    "might",
    "look",
    "um",
    "ad",
    "us",
    "might",
    "look",
    "slightly",
    "cheaper",
    "even",
    "idea",
    "need",
    "factor",
    "everything",
    "premise",
    "implementation",
    "configuration",
    "training",
    "physical",
    "security",
    "hardware",
    "personnel",
    "maintenance",
    "adab",
    "side",
    "know",
    "much",
    "stuff",
    "implementation",
    "configuration",
    "training",
    "adab",
    "us",
    "tco",
    "calculator",
    "old",
    "one",
    "used",
    "make",
    "promise",
    "75",
    "savings",
    "um",
    "know",
    "going",
    "really",
    "vary",
    "based",
    "migration",
    "strategy",
    "looks",
    "like",
    "um",
    "know",
    "totally",
    "possible",
    "could",
    "save",
    "75",
    "could",
    "save",
    "50",
    "third",
    "year",
    "threeyear",
    "period",
    "initial",
    "spike",
    "something",
    "consider",
    "nice",
    "thing",
    "though",
    "moved",
    "stuff",
    "left",
    "hand",
    "side",
    "ad",
    "us",
    "responsibility",
    "music",
    "okay",
    "right",
    "let",
    "take",
    "look",
    "capital",
    "versus",
    "operational",
    "expenditure",
    "capex",
    "opex",
    "capex",
    "side",
    "idea",
    "spending",
    "money",
    "upfront",
    "physical",
    "infrastructure",
    "deducting",
    "expenses",
    "tax",
    "bill",
    "time",
    "uh",
    "lot",
    "companies",
    "running",
    "data",
    "centers",
    "uh",
    "lot",
    "premise",
    "stuff",
    "understand",
    "capex",
    "um",
    "something",
    "lot",
    "times",
    "get",
    "tax",
    "breakes",
    "see",
    "lot",
    "people",
    "hard",
    "time",
    "moving",
    "away",
    "cloud",
    "know",
    "keep",
    "thinking",
    "money",
    "save",
    "government",
    "capex",
    "costs",
    "would",
    "things",
    "like",
    "server",
    "costs",
    "storage",
    "network",
    "costs",
    "backups",
    "archives",
    "disaster",
    "recovery",
    "costs",
    "data",
    "center",
    "costs",
    "technical",
    "personnel",
    "idea",
    "capital",
    "exp",
    "expenses",
    "guess",
    "front",
    "plan",
    "spend",
    "okay",
    "operational",
    "expenditure",
    "idea",
    "cost",
    "associated",
    "premise",
    "data",
    "center",
    "shifted",
    "cost",
    "service",
    "provider",
    "customer",
    "concerned",
    "costs",
    "leasing",
    "software",
    "customizing",
    "features",
    "uh",
    "training",
    "employees",
    "cloud",
    "services",
    "paying",
    "cloud",
    "support",
    "uh",
    "billing",
    "based",
    "cloud",
    "metrics",
    "compute",
    "usage",
    "storage",
    "usage",
    "idea",
    "operational",
    "expenses",
    "try",
    "product",
    "service",
    "without",
    "investing",
    "equipment",
    "basically",
    "kex",
    "think",
    "think",
    "premise",
    "opex",
    "think",
    "um",
    "know",
    "thinking",
    "cloud",
    "aws",
    "music",
    "okay",
    "right",
    "let",
    "ask",
    "important",
    "question",
    "cloud",
    "migration",
    "cloud",
    "make",
    "personnel",
    "redundant",
    "company",
    "considering",
    "migrating",
    "workloads",
    "premise",
    "cloud",
    "take",
    "advantage",
    "savings",
    "concern",
    "among",
    "staff",
    "mass",
    "layoffs",
    "cloud",
    "make",
    "personnel",
    "redundant",
    "important",
    "question",
    "answer",
    "talks",
    "shifting",
    "team",
    "different",
    "responsibilities",
    "company",
    "needs",
    "personnel",
    "migration",
    "phase",
    "saw",
    "gardener",
    "research",
    "report",
    "period",
    "least",
    "like",
    "year",
    "needed",
    "know",
    "depending",
    "size",
    "company",
    "still",
    "going",
    "need",
    "people",
    "around",
    "company",
    "transition",
    "roles",
    "new",
    "cloud",
    "roles",
    "traditional",
    "example",
    "would",
    "traditional",
    "networking",
    "roles",
    "people",
    "like",
    "ccna",
    "moving",
    "cloud",
    "networking",
    "uh",
    "reduced",
    "workload",
    "things",
    "uh",
    "could",
    "cloud",
    "um",
    "company",
    "may",
    "decide",
    "take",
    "hybrid",
    "approach",
    "always",
    "need",
    "traditional",
    "team",
    "cloud",
    "uh",
    "team",
    "um",
    "last",
    "one",
    "would",
    "actually",
    "see",
    "exam",
    "company",
    "change",
    "employees",
    "ac",
    "ities",
    "managing",
    "infrastructure",
    "revenue",
    "generating",
    "activities",
    "okay",
    "idea",
    "know",
    "company",
    "would",
    "get",
    "rid",
    "staff",
    "put",
    "revenue",
    "generation",
    "suppose",
    "know",
    "could",
    "uh",
    "know",
    "uh",
    "lay",
    "companies",
    "might",
    "um",
    "know",
    "could",
    "retrain",
    "personnel",
    "team",
    "uh",
    "technical",
    "expertise",
    "sure",
    "translate",
    "music",
    "cloud",
    "let",
    "talk",
    "adus",
    "pricing",
    "calculator",
    "free",
    "cost",
    "estimate",
    "tool",
    "used",
    "within",
    "web",
    "browser",
    "without",
    "need",
    "adus",
    "account",
    "estimate",
    "cost",
    "various",
    "adus",
    "services",
    "um",
    "available",
    "calculator",
    "aws",
    "reason",
    "bringing",
    "used",
    "tco",
    "calculator",
    "calculator",
    "use",
    "adabs",
    "pricing",
    "calculator",
    "contains",
    "100",
    "plus",
    "services",
    "configure",
    "cost",
    "estimate",
    "click",
    "bunch",
    "knobs",
    "uh",
    "boxes",
    "uh",
    "know",
    "uh",
    "exactly",
    "figure",
    "accurate",
    "cost",
    "idea",
    "calculate",
    "tco",
    "organization",
    "needs",
    "compare",
    "existing",
    "costs",
    "adus",
    "costs",
    "adus",
    "pricing",
    "calculator",
    "used",
    "determine",
    "uh",
    "know",
    "adus",
    "costs",
    "obviously",
    "organization",
    "knows",
    "cost",
    "compare",
    "um",
    "way",
    "get",
    "data",
    "export",
    "final",
    "estimate",
    "csv",
    "music",
    "okay",
    "hey",
    "andre",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "aws",
    "pricing",
    "calculator",
    "get",
    "calculator",
    "aws",
    "going",
    "hit",
    "create",
    "estimate",
    "bunch",
    "services",
    "choose",
    "want",
    "type",
    "ec2",
    "going",
    "configure",
    "quick",
    "estimate",
    "advanced",
    "estimate",
    "choose",
    "option",
    "fast",
    "easy",
    "route",
    "ballpark",
    "estimate",
    "choose",
    "option",
    "detailed",
    "estimate",
    "accounts",
    "workloads",
    "stuff",
    "notice",
    "simplistic",
    "hit",
    "advanced",
    "get",
    "sort",
    "sorts",
    "stuff",
    "okay",
    "know",
    "really",
    "comfortable",
    "advanced",
    "options",
    "might",
    "running",
    "linux",
    "machine",
    "usage",
    "going",
    "uh",
    "daily",
    "spikes",
    "traffic",
    "use",
    "cases",
    "could",
    "say",
    "busy",
    "saturday",
    "sunday",
    "baseline",
    "one",
    "peak",
    "two",
    "eight",
    "things",
    "like",
    "choose",
    "using",
    "um",
    "t4",
    "g",
    "even",
    "know",
    "uh",
    "say",
    "like",
    "uh",
    "t2",
    "micro",
    "big",
    "23",
    "micro",
    "say",
    "demand",
    "cuz",
    "lot",
    "people",
    "would",
    "see",
    "like",
    "7",
    "month",
    "lot",
    "money",
    "looking",
    "storage",
    "data",
    "data",
    "okay",
    "add",
    "another",
    "thing",
    "might",
    "see",
    "something",
    "like",
    "rds",
    "go",
    "rds",
    "add",
    "post",
    "crest",
    "simple",
    "complex",
    "sometimes",
    "simple",
    "production",
    "database",
    "one",
    "going",
    "say",
    "dbt2",
    "micro",
    "t3",
    "micro",
    "go",
    "uh",
    "100",
    "fine",
    "going",
    "single",
    "demand",
    "show",
    "calculation",
    "13",
    "month",
    "add",
    "estimate",
    "kind",
    "getting",
    "idea",
    "right",
    "um",
    "know",
    "summary",
    "monthly",
    "391",
    "um",
    "oh",
    "sorry",
    "12",
    "months",
    "monthly",
    "cost",
    "32",
    "okay",
    "go",
    "back",
    "clone",
    "service",
    "edit",
    "stuff",
    "like",
    "export",
    "estimate",
    "think",
    "goes",
    "csv",
    "also",
    "hit",
    "share",
    "um",
    "hit",
    "agree",
    "public",
    "link",
    "link",
    "see",
    "happens",
    "paste",
    "okay",
    "brings",
    "estimate",
    "music",
    "go",
    "hey",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "migration",
    "evaluator",
    "formerly",
    "known",
    "tcl",
    "logic",
    "abos",
    "acquired",
    "company",
    "estimate",
    "tool",
    "used",
    "determine",
    "organization",
    "existing",
    "premise",
    "costs",
    "compare",
    "aabus",
    "cost",
    "planned",
    "cloud",
    "migration",
    "uh",
    "idea",
    "get",
    "uh",
    "detailed",
    "information",
    "way",
    "collects",
    "information",
    "via",
    "agentless",
    "collector",
    "collect",
    "data",
    "premise",
    "infrastructure",
    "extract",
    "premise",
    "costs",
    "know",
    "see",
    "see",
    "works",
    "lot",
    "different",
    "kinds",
    "premise",
    "technology",
    "like",
    "vmware",
    "microsoft",
    "uh",
    "tsql",
    "sorts",
    "things",
    "music",
    "okay",
    "one",
    "migration",
    "tool",
    "use",
    "aws",
    "vm",
    "import",
    "export",
    "allows",
    "us",
    "import",
    "virtual",
    "machines",
    "ec2",
    "inabus",
    "import",
    "instructions",
    "vmware",
    "citrix",
    "microsoft",
    "hyperv",
    "windows",
    "vhd",
    "azure",
    "also",
    "linux",
    "vhd",
    "azure",
    "way",
    "works",
    "prepare",
    "virtual",
    "image",
    "upload",
    "adus",
    "bunch",
    "instructions",
    "ready",
    "going",
    "upload",
    "s3",
    "bucket",
    "uploaded",
    "s3",
    "bucket",
    "use",
    "adab",
    "cli",
    "import",
    "image",
    "um",
    "cli",
    "command",
    "produced",
    "generate",
    "amazon",
    "machine",
    "image",
    "ami",
    "go",
    "ec2",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "database",
    "migration",
    "service",
    "allows",
    "quickly",
    "securely",
    "migrate",
    "one",
    "database",
    "another",
    "dms",
    "used",
    "migrate",
    "premise",
    "database",
    "ads",
    "talking",
    "uh",
    "general",
    "diagram",
    "source",
    "database",
    "connects",
    "source",
    "endpoint",
    "goes",
    "replication",
    "instance",
    "ec2",
    "instance",
    "going",
    "replicate",
    "data",
    "target",
    "endpoint",
    "onto",
    "target",
    "database",
    "uh",
    "bunch",
    "possible",
    "sources",
    "oracle",
    "database",
    "microsoft",
    "sql",
    "mysql",
    "mari",
    "db",
    "post",
    "sql",
    "mongodb",
    "sap",
    "asc",
    "imdb",
    "db2",
    "az",
    "sql",
    "database",
    "amazon",
    "rds",
    "amazon",
    "s3",
    "assuming",
    "database",
    "dumps",
    "amazon",
    "aurora",
    "amazon",
    "document",
    "db",
    "possible",
    "targets",
    "similar",
    "got",
    "oracle",
    "database",
    "microsoft",
    "sql",
    "mysql",
    "mario",
    "db",
    "post",
    "sql",
    "reddis",
    "saps",
    "se",
    "amazon",
    "red",
    "shift",
    "amazon",
    "rds",
    "amazon",
    "dynamo",
    "db",
    "amazon",
    "s3",
    "amazon",
    "aurora",
    "amazon",
    "open",
    "search",
    "service",
    "amazon",
    "elasticache",
    "reddis",
    "amazon",
    "document",
    "db",
    "amazon",
    "neptune",
    "apachi",
    "kafka",
    "showing",
    "list",
    "give",
    "idea",
    "flexible",
    "service",
    "uh",
    "tell",
    "different",
    "databases",
    "uh",
    "move",
    "right",
    "cases",
    "easily",
    "like",
    "easy",
    "go",
    "myql",
    "postest",
    "um",
    "know",
    "ones",
    "like",
    "relational",
    "uh",
    "nosql",
    "uh",
    "adaba",
    "schema",
    "conversion",
    "tool",
    "comes",
    "play",
    "used",
    "many",
    "cases",
    "automatically",
    "convert",
    "source",
    "database",
    "schema",
    "target",
    "database",
    "schema",
    "kind",
    "like",
    "uh",
    "know",
    "uh",
    "figure",
    "map",
    "new",
    "schema",
    "uh",
    "migration",
    "path",
    "requires",
    "bit",
    "research",
    "since",
    "combinations",
    "sources",
    "targets",
    "possible",
    "really",
    "comes",
    "even",
    "versions",
    "things",
    "want",
    "know",
    "option",
    "database",
    "migration",
    "service",
    "migrated",
    "large",
    "database",
    "super",
    "fast",
    "uh",
    "hard",
    "use",
    "something",
    "definitely",
    "want",
    "remember",
    "music",
    "migrating",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "cloud",
    "adoption",
    "framework",
    "white",
    "paper",
    "help",
    "plan",
    "migration",
    "premise",
    "aws",
    "highest",
    "level",
    "aws",
    "caf",
    "organizes",
    "guidance",
    "six",
    "focus",
    "areas",
    "got",
    "business",
    "people",
    "governance",
    "platform",
    "security",
    "operations",
    "white",
    "paper",
    "pretty",
    "high",
    "level",
    "uh",
    "know",
    "get",
    "uh",
    "granular",
    "details",
    "migration",
    "work",
    "uh",
    "gives",
    "kind",
    "holistic",
    "approach",
    "believe",
    "probably",
    "adus",
    "uh",
    "amazon",
    "partner",
    "network",
    "people",
    "specialize",
    "using",
    "particular",
    "framework",
    "help",
    "organizations",
    "move",
    "believe",
    "abus",
    "professional",
    "services",
    "apn",
    "let",
    "kind",
    "break",
    "six",
    "categories",
    "going",
    "go",
    "deep",
    "um",
    "let",
    "first",
    "business",
    "perspective",
    "business",
    "managers",
    "finance",
    "managers",
    "budget",
    "owners",
    "strategy",
    "stakeholders",
    "update",
    "staff",
    "skills",
    "organizational",
    "processes",
    "optimize",
    "business",
    "value",
    "move",
    "ops",
    "cloud",
    "people",
    "perspectives",
    "human",
    "resources",
    "staffing",
    "people",
    "managers",
    "update",
    "staff",
    "skills",
    "organizational",
    "processes",
    "optimize",
    "maintain",
    "workforce",
    "ensure",
    "competencies",
    "place",
    "appropriate",
    "time",
    "governance",
    "perspective",
    "cios",
    "program",
    "managers",
    "project",
    "managers",
    "enterprise",
    "architects",
    "business",
    "analysts",
    "update",
    "staff",
    "skills",
    "organizational",
    "processes",
    "necessary",
    "ensure",
    "business",
    "governance",
    "cloud",
    "manage",
    "uh",
    "measure",
    "cloud",
    "investments",
    "evaluate",
    "business",
    "outcomes",
    "platform",
    "perspectives",
    "cto",
    "managers",
    "solution",
    "architects",
    "update",
    "staff",
    "skills",
    "organizational",
    "processes",
    "necessary",
    "deliver",
    "optimize",
    "cloud",
    "solutions",
    "services",
    "security",
    "perspectives",
    "ciso",
    "security",
    "managers",
    "security",
    "analysts",
    "update",
    "staff",
    "skills",
    "organizational",
    "processes",
    "necessary",
    "ensure",
    "architecture",
    "deployed",
    "cloud",
    "aligns",
    "organization",
    "security",
    "control",
    "requirements",
    "resilience",
    "compliance",
    "requirements",
    "operational",
    "operations",
    "perspective",
    "operations",
    "managers",
    "support",
    "managers",
    "update",
    "staff",
    "skills",
    "organizational",
    "processes",
    "necessary",
    "ensure",
    "system",
    "health",
    "reliability",
    "move",
    "operations",
    "cloud",
    "operate",
    "operate",
    "using",
    "agile",
    "ongoing",
    "cloud",
    "computing",
    "best",
    "practices",
    "taps",
    "surface",
    "caf",
    "uh",
    "think",
    "actually",
    "detailed",
    "breakdown",
    "know",
    "business",
    "going",
    "break",
    "even",
    "uh",
    "uh",
    "finite",
    "things",
    "music",
    "okay",
    "itus",
    "free",
    "services",
    "free",
    "forever",
    "unlike",
    "free",
    "tier",
    "point",
    "usage",
    "time",
    "um",
    "lot",
    "even",
    "full",
    "list",
    "definitely",
    "amazon",
    "vpc",
    "auto",
    "scaling",
    "cloud",
    "formation",
    "elastic",
    "bean",
    "stock",
    "opsw",
    "works",
    "amplify",
    "apps",
    "sync",
    "code",
    "star",
    "organizations",
    "consolidated",
    "building",
    "cost",
    "explorer",
    "sage",
    "maker",
    "systems",
    "manager",
    "lot",
    "okay",
    "um",
    "thing",
    "uh",
    "services",
    "free",
    "um",
    "spin",
    "resources",
    "services",
    "free",
    "however",
    "ones",
    "provision",
    "services",
    "may",
    "cost",
    "money",
    "cloud",
    "formation",
    "infrastructure",
    "code",
    "tool",
    "could",
    "launch",
    "virtual",
    "machines",
    "virtual",
    "machines",
    "cost",
    "money",
    "right",
    "opsworks",
    "launch",
    "servers",
    "cost",
    "money",
    "amply",
    "launch",
    "um",
    "lambdas",
    "cost",
    "money",
    "something",
    "consider",
    "um",
    "uh",
    "yeah",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "adus",
    "support",
    "plans",
    "got",
    "basic",
    "developer",
    "business",
    "enterprise",
    "absolutely",
    "absolutely",
    "need",
    "know",
    "stuff",
    "inside",
    "exam",
    "ask",
    "questions",
    "okay",
    "basic",
    "email",
    "support",
    "uh",
    "billing",
    "account",
    "think",
    "got",
    "bu",
    "something",
    "uh",
    "uh",
    "misconfigured",
    "something",
    "end",
    "big",
    "bill",
    "go",
    "um",
    "open",
    "support",
    "uh",
    "ticket",
    "basic",
    "billing",
    "likely",
    "refund",
    "questions",
    "billing",
    "accounts",
    "going",
    "using",
    "everything",
    "else",
    "tech",
    "support",
    "um",
    "developer",
    "business",
    "enterprise",
    "going",
    "get",
    "email",
    "support",
    "uh",
    "roughly",
    "reply",
    "within",
    "24",
    "hours",
    "believe",
    "business",
    "hours",
    "message",
    "friday",
    "um",
    "sorry",
    "saturday",
    "might",
    "waiting",
    "till",
    "monday",
    "okay",
    "um",
    "terms",
    "thirdparty",
    "support",
    "uh",
    "one",
    "third",
    "party",
    "support",
    "developer",
    "using",
    "something",
    "like",
    "ruby",
    "rails",
    "azure",
    "something",
    "interruptibility",
    "aws",
    "something",
    "else",
    "business",
    "enterprise",
    "absolutely",
    "help",
    "enterprise",
    "developer",
    "one",
    "much",
    "uh",
    "like",
    "use",
    "phone",
    "like",
    "chat",
    "people",
    "um",
    "available",
    "business",
    "enterprise",
    "tier",
    "way",
    "end",
    "talking",
    "people",
    "um",
    "know",
    "like",
    "north",
    "america",
    "calling",
    "9",
    "to5",
    "monday",
    "friday",
    "likely",
    "get",
    "somebody",
    "within",
    "north",
    "america",
    "one",
    "uh",
    "one",
    "supports",
    "area",
    "aware",
    "also",
    "affect",
    "time",
    "pick",
    "uh",
    "sometimes",
    "5",
    "minutes",
    "times",
    "30",
    "minutes",
    "hour",
    "uh",
    "know",
    "depends",
    "service",
    "asking",
    "know",
    "time",
    "day",
    "okay",
    "um",
    "terms",
    "responsiveness",
    "uh",
    "general",
    "guidance",
    "everything",
    "24",
    "hours",
    "less",
    "developer",
    "business",
    "enterprise",
    "system",
    "impaired",
    "within",
    "12",
    "hours",
    "less",
    "production",
    "system",
    "impaired",
    "four",
    "hours",
    "less",
    "production",
    "system",
    "1",
    "hour",
    "less",
    "enterprise",
    "um",
    "going",
    "business",
    "critical",
    "system",
    "less",
    "50",
    "minutes",
    "notice",
    "things",
    "um",
    "definitely",
    "waited",
    "like",
    "3",
    "days",
    "general",
    "guidance",
    "take",
    "grain",
    "salt",
    "know",
    "really",
    "stick",
    "maybe",
    "paying",
    "enough",
    "care",
    "okay",
    "um",
    "terms",
    "uh",
    "getting",
    "actual",
    "people",
    "assigned",
    "happens",
    "enterprise",
    "level",
    "coner",
    "team",
    "uh",
    "help",
    "um",
    "organization",
    "uh",
    "learn",
    "use",
    "ad",
    "asking",
    "questions",
    "personally",
    "tam",
    "technical",
    "account",
    "manager",
    "somebody",
    "knows",
    "um",
    "side",
    "inside",
    "help",
    "architect",
    "things",
    "make",
    "correct",
    "choices",
    "check",
    "bill",
    "help",
    "try",
    "reduce",
    "bill",
    "things",
    "like",
    "okay",
    "terms",
    "trust",
    "advisory",
    "checks",
    "basic",
    "developer",
    "get",
    "seven",
    "advisor",
    "checks",
    "paying",
    "business",
    "get",
    "checks",
    "cost",
    "business",
    "zero",
    "um",
    "developer",
    "starting",
    "29",
    "month",
    "businesses",
    "starting",
    "100",
    "month",
    "enterprise",
    "uh",
    "month",
    "said",
    "starting",
    "dependent",
    "usage",
    "okay",
    "let",
    "look",
    "developer",
    "business",
    "enterprise",
    "cuz",
    "basic",
    "going",
    "applicable",
    "developers",
    "29",
    "usd",
    "month",
    "3",
    "monthly",
    "adist",
    "usage",
    "whichever",
    "greater",
    "exam",
    "going",
    "ask",
    "like",
    "like",
    "generally",
    "know",
    "tier",
    "expensiveness",
    "going",
    "ask",
    "percentage",
    "usage",
    "okay",
    "going",
    "formulas",
    "um",
    "get",
    "business",
    "little",
    "bit",
    "uh",
    "different",
    "different",
    "brackets",
    "going",
    "10",
    "first",
    "uh",
    "next",
    "going",
    "next",
    "stuff",
    "like",
    "similar",
    "enterprise",
    "well",
    "let",
    "math",
    "know",
    "understand",
    "works",
    "monthly",
    "spend",
    "500",
    "developer",
    "tier",
    "3",
    "500",
    "15",
    "go",
    "okay",
    "greater",
    "29",
    "15",
    "paying",
    "29",
    "spent",
    "comes",
    "30",
    "uh",
    "going",
    "end",
    "paying",
    "30",
    "greater",
    "29",
    "okay",
    "business",
    "uh",
    "monthly",
    "spend",
    "10",
    "100",
    "spend",
    "going",
    "paying",
    "500",
    "monthly",
    "spend",
    "first",
    "10",
    "th000",
    "next",
    "7",
    "total",
    "bill",
    "140",
    "usd",
    "going",
    "calculation",
    "enterprise",
    "business",
    "hopefully",
    "gives",
    "idea",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "technical",
    "account",
    "manager",
    "also",
    "known",
    "tam",
    "provide",
    "proactive",
    "guidance",
    "reactive",
    "support",
    "help",
    "succeed",
    "adus",
    "journey",
    "tam",
    "straight",
    "adus",
    "job",
    "posting",
    "would",
    "build",
    "solutions",
    "provide",
    "technical",
    "guidance",
    "advocate",
    "customer",
    "ensure",
    "adas",
    "environments",
    "remain",
    "operationally",
    "healthy",
    "reducing",
    "cost",
    "complexity",
    "develop",
    "trusting",
    "relationship",
    "customers",
    "understanding",
    "business",
    "needs",
    "technical",
    "challenges",
    "using",
    "technical",
    "uh",
    "acumin",
    "customer",
    "obsession",
    "drive",
    "technical",
    "discussions",
    "regarding",
    "incidents",
    "tradeoffs",
    "risk",
    "management",
    "consult",
    "range",
    "partners",
    "developers",
    "se",
    "suite",
    "executives",
    "collaborat",
    "solutions",
    "architect",
    "business",
    "developers",
    "professional",
    "service",
    "consultants",
    "sales",
    "account",
    "managers",
    "proactively",
    "find",
    "opportunities",
    "customers",
    "gain",
    "additional",
    "value",
    "ads",
    "provide",
    "detailed",
    "reviews",
    "service",
    "disruptions",
    "metrics",
    "detailed",
    "planning",
    "uh",
    "part",
    "wider",
    "enterprise",
    "support",
    "team",
    "providing",
    "post",
    "scale",
    "cons",
    "uh",
    "uh",
    "consultative",
    "expertise",
    "solve",
    "variety",
    "problems",
    "across",
    "different",
    "customers",
    "migrate",
    "workloads",
    "cloud",
    "uplift",
    "customer",
    "uh",
    "capabilities",
    "running",
    "workshops",
    "brown",
    "bag",
    "sessions",
    "brown",
    "bag",
    "sessions",
    "sessions",
    "occur",
    "lunchtime",
    "something",
    "learn",
    "30",
    "minutes",
    "hour",
    "one",
    "thing",
    "really",
    "important",
    "understand",
    "tams",
    "follow",
    "amazon",
    "leadership",
    "principles",
    "especially",
    "customer",
    "uh",
    "customer",
    "obsessed",
    "cover",
    "amazon",
    "leadership",
    "principle",
    "somewhere",
    "course",
    "tams",
    "available",
    "enterprise",
    "support",
    "tier",
    "hopefully",
    "gives",
    "idea",
    "tam",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "follow",
    "along",
    "going",
    "show",
    "um",
    "support",
    "order",
    "use",
    "ad",
    "support",
    "change",
    "level",
    "support",
    "going",
    "need",
    "logged",
    "rout",
    "account",
    "say",
    "use",
    "support",
    "im",
    "users",
    "want",
    "change",
    "support",
    "plan",
    "going",
    "root",
    "user",
    "top",
    "right",
    "corner",
    "going",
    "support",
    "notice",
    "left",
    "hand",
    "side",
    "right",
    "basic",
    "plan",
    "uh",
    "look",
    "changing",
    "plan",
    "going",
    "go",
    "create",
    "case",
    "going",
    "uh",
    "take",
    "look",
    "options",
    "open",
    "us",
    "account",
    "billing",
    "support",
    "service",
    "limit",
    "increase",
    "technical",
    "support",
    "notice",
    "grayed",
    "select",
    "anything",
    "go",
    "increase",
    "service",
    "limit",
    "something",
    "might",
    "uh",
    "pretty",
    "soon",
    "early",
    "account",
    "might",
    "say",
    "hey",
    "need",
    "something",
    "like",
    "ec2",
    "um",
    "common",
    "thing",
    "sc",
    "scs",
    "might",
    "say",
    "hey",
    "um",
    "need",
    "amount",
    "emails",
    "etc",
    "okay",
    "um",
    "go",
    "count",
    "billing",
    "support",
    "uh",
    "go",
    "ask",
    "anything",
    "want",
    "free",
    "tier",
    "could",
    "say",
    "ask",
    "general",
    "question",
    "getting",
    "started",
    "saying",
    "uh",
    "free",
    "aws",
    "um",
    "want",
    "know",
    "free",
    "aws",
    "attach",
    "uh",
    "three",
    "attachments",
    "choose",
    "via",
    "web",
    "phone",
    "really",
    "nice",
    "um",
    "today",
    "going",
    "web",
    "submit",
    "kind",
    "show",
    "example",
    "going",
    "open",
    "case",
    "see",
    "probably",
    "respond",
    "24",
    "hours",
    "48",
    "hours",
    "depends",
    "um",
    "whether",
    "weekend",
    "based",
    "business",
    "hours",
    "course",
    "understanding",
    "basic",
    "let",
    "go",
    "take",
    "look",
    "tiers",
    "look",
    "like",
    "basic",
    "developer",
    "business",
    "enterprise",
    "enterprise",
    "extremely",
    "expensive",
    "developer",
    "affordable",
    "business",
    "um",
    "know",
    "affordable",
    "businesses",
    "would",
    "say",
    "developer",
    "okay",
    "gives",
    "um",
    "uh",
    "gives",
    "uh",
    "better",
    "support",
    "via",
    "email",
    "know",
    "really",
    "want",
    "good",
    "support",
    "going",
    "going",
    "pay",
    "business",
    "one",
    "one",
    "use",
    "quite",
    "bit",
    "change",
    "plan",
    "going",
    "go",
    "business",
    "going",
    "cost",
    "93",
    "bucks",
    "show",
    "today",
    "going",
    "go",
    "ahead",
    "click",
    "processing",
    "going",
    "happen",
    "going",
    "wait",
    "basic",
    "switch",
    "business",
    "go",
    "case",
    "happened",
    "yet",
    "select",
    "going",
    "see",
    "back",
    "maybe",
    "like",
    "four",
    "five",
    "minutes",
    "however",
    "long",
    "takes",
    "take",
    "look",
    "okay",
    "okay",
    "great",
    "minutes",
    "says",
    "plan",
    "business",
    "go",
    "ahead",
    "create",
    "new",
    "case",
    "go",
    "technical",
    "support",
    "ask",
    "question",
    "issues",
    "anything",
    "matter",
    "could",
    "go",
    "ec2",
    "linux",
    "could",
    "choose",
    "category",
    "could",
    "say",
    "issue",
    "um",
    "systems",
    "manager",
    "lot",
    "times",
    "like",
    "provide",
    "instance",
    "id",
    "going",
    "change",
    "based",
    "service",
    "choose",
    "um",
    "get",
    "different",
    "information",
    "say",
    "need",
    "help",
    "um",
    "logging",
    "ec2",
    "instance",
    "managed",
    "ssm",
    "say",
    "created",
    "ec2",
    "instance",
    "attempting",
    "access",
    "uh",
    "instance",
    "via",
    "sessions",
    "manager",
    "working",
    "think",
    "ro",
    "issue",
    "going",
    "go",
    "say",
    "got",
    "real",
    "question",
    "filming",
    "demo",
    "video",
    "tutorial",
    "video",
    "use",
    "support",
    "okay",
    "option",
    "web",
    "chat",
    "phone",
    "use",
    "phone",
    "going",
    "enter",
    "phone",
    "number",
    "going",
    "call",
    "back",
    "uh",
    "usually",
    "hold",
    "anywhere",
    "5",
    "minutes",
    "hour",
    "depends",
    "usually",
    "within",
    "15",
    "minutes",
    "good",
    "course",
    "depends",
    "time",
    "day",
    "location",
    "things",
    "like",
    "service",
    "different",
    "support",
    "engineers",
    "different",
    "types",
    "services",
    "balance",
    "different",
    "generally",
    "chat",
    "pretty",
    "good",
    "go",
    "going",
    "hit",
    "submit",
    "going",
    "open",
    "chat",
    "box",
    "wait",
    "okay",
    "sometimes",
    "super",
    "fast",
    "sometimes",
    "takes",
    "uh",
    "minutes",
    "okay",
    "going",
    "sit",
    "bit",
    "um",
    "know",
    "pop",
    "back",
    "somebody",
    "talk",
    "okay",
    "okay",
    "waiting",
    "little",
    "looks",
    "like",
    "uh",
    "connected",
    "took",
    "bit",
    "time",
    "going",
    "say",
    "hello",
    "hi",
    "um",
    "uh",
    "andrew",
    "brown",
    "um",
    "recording",
    "video",
    "teach",
    "people",
    "use",
    "aws",
    "wanted",
    "show",
    "support",
    "works",
    "showing",
    "chat",
    "system",
    "works",
    "say",
    "hello",
    "hopefully",
    "appreciate",
    "wo",
    "really",
    "matter",
    "give",
    "moment",
    "go",
    "thanks",
    "help",
    "okay",
    "pretty",
    "much",
    "um",
    "know",
    "nothing",
    "really",
    "uh",
    "uh",
    "special",
    "idea",
    "typing",
    "appear",
    "ch",
    "respondence",
    "going",
    "end",
    "chat",
    "okay",
    "uh",
    "going",
    "mark",
    "case",
    "resolve",
    "sometimes",
    "ask",
    "resolve",
    "go",
    "cases",
    "probably",
    "previous",
    "ones",
    "um",
    "lot",
    "know",
    "show",
    "see",
    "one",
    "pending",
    "one",
    "resolved",
    "go",
    "back",
    "one",
    "kind",
    "see",
    "uh",
    "history",
    "conversation",
    "kept",
    "go",
    "back",
    "forth",
    "uh",
    "people",
    "um",
    "yeah",
    "pretty",
    "much",
    "uh",
    "also",
    "screen",
    "sharing",
    "might",
    "send",
    "request",
    "go",
    "zoom",
    "download",
    "piece",
    "software",
    "shares",
    "screen",
    "another",
    "option",
    "well",
    "get",
    "pretty",
    "handson",
    "help",
    "uh",
    "problems",
    "pretty",
    "much",
    "wanted",
    "show",
    "support",
    "going",
    "downgrade",
    "sure",
    "going",
    "give",
    "back",
    "money",
    "sometimes",
    "pr",
    "rate",
    "go",
    "go",
    "back",
    "basic",
    "um",
    "also",
    "refund",
    "credit",
    "card",
    "directly",
    "month",
    "remaining",
    "fees",
    "old",
    "plan",
    "previously",
    "paid",
    "obligated",
    "pay",
    "minimum",
    "30",
    "days",
    "support",
    "time",
    "register",
    "going",
    "get",
    "money",
    "back",
    "totally",
    "fine",
    "wanted",
    "show",
    "works",
    "business",
    "support",
    "definitely",
    "worth",
    "uh",
    "know",
    "music",
    "anabis",
    "marketpl",
    "curated",
    "digital",
    "catalog",
    "thousands",
    "software",
    "listings",
    "independent",
    "software",
    "vendors",
    "uh",
    "easily",
    "find",
    "buy",
    "test",
    "deploy",
    "software",
    "already",
    "runs",
    "8s",
    "product",
    "free",
    "use",
    "associated",
    "charge",
    "charge",
    "becomes",
    "part",
    "adus",
    "bill",
    "pay",
    "adus",
    "market",
    "pays",
    "provider",
    "sales",
    "channel",
    "isv",
    "consulting",
    "partners",
    "allow",
    "sell",
    "solutions",
    "adus",
    "customers",
    "products",
    "offered",
    "amis",
    "aus",
    "cl",
    "information",
    "templates",
    "software",
    "service",
    "offerings",
    "web",
    "acl",
    "waff",
    "rules",
    "sounds",
    "great",
    "um",
    "want",
    "sell",
    "think",
    "need",
    "like",
    "us",
    "bank",
    "account",
    "um",
    "know",
    "sometimes",
    "zus",
    "marketplace",
    "part",
    "aws",
    "like",
    "using",
    "ec2",
    "marketplace",
    "technically",
    "using",
    "itus",
    "marketplace",
    "um",
    "also",
    "like",
    "dedicated",
    "page",
    "integrated",
    "services",
    "also",
    "stand",
    "alone",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "follow",
    "along",
    "going",
    "take",
    "look",
    "adus",
    "marketplace",
    "want",
    "go",
    "top",
    "type",
    "marketplace",
    "bring",
    "us",
    "marketplace",
    "found",
    "variety",
    "different",
    "places",
    "platform",
    "see",
    "uh",
    "previously",
    "using",
    "something",
    "called",
    "guaca",
    "bastian",
    "host",
    "launch",
    "server",
    "um",
    "idea",
    "um",
    "discover",
    "products",
    "subscriptions",
    "might",
    "want",
    "utilize",
    "go",
    "variety",
    "different",
    "things",
    "could",
    "like",
    "want",
    "something",
    "like",
    "firewall",
    "might",
    "something",
    "might",
    "interested",
    "could",
    "search",
    "like",
    "bring",
    "license",
    "firewall",
    "maybe",
    "license",
    "want",
    "run",
    "ec2",
    "instance",
    "something",
    "like",
    "like",
    "super",
    "complicated",
    "going",
    "lot",
    "times",
    "know",
    "using",
    "services",
    "accessing",
    "marketplace",
    "anyway",
    "like",
    "launching",
    "ec2",
    "instance",
    "notice",
    "left",
    "hand",
    "side",
    "says",
    "abs",
    "marketplace",
    "go",
    "marketplace",
    "kind",
    "like",
    "check",
    "thing",
    "want",
    "um",
    "pretty",
    "much",
    "really",
    "okay",
    "know",
    "hopefully",
    "makes",
    "sense",
    "let",
    "take",
    "look",
    "consolidated",
    "billing",
    "feature",
    "abus",
    "organizations",
    "allows",
    "pay",
    "multiple",
    "accounts",
    "via",
    "one",
    "bill",
    "idea",
    "master",
    "account",
    "member",
    "accounts",
    "pretty",
    "sure",
    "probably",
    "call",
    "root",
    "account",
    "think",
    "uh",
    "master",
    "account",
    "might",
    "data",
    "term",
    "still",
    "showing",
    "documentation",
    "idea",
    "member",
    "accounts",
    "within",
    "organization",
    "going",
    "consolidated",
    "single",
    "account",
    "account",
    "outside",
    "organization",
    "um",
    "know",
    "going",
    "give",
    "uh",
    "going",
    "basically",
    "separate",
    "bill",
    "um",
    "like",
    "standalone",
    "organization",
    "okay",
    "uh",
    "billing",
    "adus",
    "treats",
    "accounts",
    "organization",
    "one",
    "account",
    "designate",
    "one",
    "uh",
    "uh",
    "master",
    "root",
    "account",
    "pays",
    "charges",
    "member",
    "accounts",
    "consolidate",
    "billing",
    "offered",
    "additional",
    "cost",
    "use",
    "uh",
    "cost",
    "explorer",
    "visualize",
    "usage",
    "consolidated",
    "billing",
    "see",
    "icon",
    "uh",
    "combine",
    "usage",
    "across",
    "accounts",
    "organization",
    "uh",
    "share",
    "volume",
    "pricing",
    "discount",
    "cover",
    "course",
    "separately",
    "want",
    "account",
    "able",
    "leave",
    "organization",
    "attach",
    "new",
    "payment",
    "method",
    "let",
    "say",
    "account",
    "want",
    "give",
    "friend",
    "whatever",
    "hook",
    "uh",
    "credit",
    "card",
    "totally",
    "uh",
    "account",
    "leave",
    "organization",
    "deal",
    "billing",
    "aspect",
    "music",
    "okay",
    "right",
    "really",
    "cool",
    "way",
    "save",
    "ads",
    "volume",
    "discounts",
    "available",
    "many",
    "services",
    "use",
    "save",
    "ide",
    "aide",
    "behind",
    "um",
    "consolidating",
    "building",
    "lets",
    "take",
    "advantage",
    "volume",
    "discounts",
    "particular",
    "feature",
    "ais",
    "organization",
    "turn",
    "going",
    "able",
    "take",
    "advantage",
    "okay",
    "one",
    "example",
    "would",
    "something",
    "like",
    "data",
    "transfer",
    "build",
    "uh",
    "first",
    "10",
    "terabytes",
    "17",
    "cents",
    "sorry",
    "17",
    "cents",
    "next",
    "40",
    "terabytes",
    "at3",
    "cents",
    "okay",
    "two",
    "accounts",
    "um",
    "odo",
    "dax",
    "within",
    "abl",
    "organization",
    "calculate",
    "see",
    "unconsolidated",
    "know",
    "1",
    "terab",
    "equals",
    "1024",
    "gigabytes",
    "going",
    "see",
    "calculations",
    "odo",
    "uh",
    "know",
    "four",
    "terabytes",
    "uh",
    "calculate",
    "gigabytes",
    "times",
    "uh",
    "um",
    "scent",
    "value",
    "going",
    "get",
    "696",
    "okay",
    "dax",
    "going",
    "end",
    "uh",
    "1392",
    "add",
    "bill",
    "would",
    "come",
    "okay",
    "idea",
    "organization",
    "like",
    "company",
    "created",
    "two",
    "accounts",
    "within",
    "organization",
    "organization",
    "going",
    "save",
    "um",
    "almost",
    "80",
    "um",
    "reason",
    "want",
    "use",
    "volume",
    "discounts",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exampro",
    "taking",
    "look",
    "iis",
    "trusted",
    "advisor",
    "trusted",
    "advisor",
    "recommendation",
    "tool",
    "automatically",
    "actively",
    "monitors",
    "adus",
    "accounts",
    "provide",
    "acual",
    "recommendations",
    "across",
    "series",
    "categories",
    "looks",
    "like",
    "personally",
    "prefer",
    "older",
    "dashboard",
    "see",
    "along",
    "side",
    "bunch",
    "categories",
    "checks",
    "saying",
    "uh",
    "know",
    "meeting",
    "go",
    "read",
    "one",
    "tell",
    "much",
    "information",
    "even",
    "show",
    "like",
    "things",
    "meeting",
    "requirements",
    "case",
    "easily",
    "remediate",
    "pressing",
    "button",
    "cases",
    "thing",
    "adus",
    "trust",
    "advisor",
    "think",
    "adus",
    "trust",
    "advisor",
    "like",
    "automated",
    "checklist",
    "best",
    "practices",
    "aws",
    "kind",
    "map",
    "pillars",
    "well",
    "architecture",
    "framework",
    "exactly",
    "pretty",
    "close",
    "five",
    "categories",
    "adus",
    "trusted",
    "advisor",
    "cost",
    "optimization",
    "much",
    "money",
    "save",
    "performance",
    "uh",
    "improve",
    "performance",
    "security",
    "improve",
    "security",
    "fall",
    "tolerance",
    "prevent",
    "disaster",
    "data",
    "loss",
    "service",
    "limit",
    "going",
    "hit",
    "maximum",
    "limit",
    "service",
    "uh",
    "next",
    "thing",
    "need",
    "discuss",
    "um",
    "variation",
    "amount",
    "checks",
    "available",
    "based",
    "support",
    "plan",
    "know",
    "using",
    "basic",
    "developer",
    "seven",
    "trusted",
    "advisor",
    "checks",
    "business",
    "enterprise",
    "trusted",
    "advisor",
    "checks",
    "uh",
    "talking",
    "ones",
    "available",
    "ones",
    "come",
    "free",
    "mfa",
    "root",
    "account",
    "security",
    "specified",
    "ports",
    "unrestricted",
    "amazon",
    "s3",
    "bucket",
    "permissions",
    "amazon",
    "ebs",
    "public",
    "snapshots",
    "amazon",
    "rds",
    "public",
    "snapshots",
    "imu",
    "alerting",
    "discouraging",
    "use",
    "root",
    "account",
    "service",
    "limits",
    "service",
    "limit",
    "checks",
    "free",
    "um",
    "weird",
    "call",
    "like",
    "seven",
    "security",
    "checks",
    "counted",
    "service",
    "limits",
    "obviously",
    "large",
    "number",
    "notice",
    "1",
    "six",
    "security",
    "checks",
    "getting",
    "anything",
    "tiers",
    "security",
    "tier",
    "want",
    "go",
    "bunch",
    "available",
    "checks",
    "probably",
    "full",
    "list",
    "could",
    "even",
    "bothered",
    "update",
    "added",
    "give",
    "general",
    "idea",
    "could",
    "expect",
    "category",
    "cost",
    "optimization",
    "um",
    "could",
    "things",
    "like",
    "looking",
    "idle",
    "load",
    "bouncers",
    "know",
    "load",
    "bouncers",
    "using",
    "paying",
    "get",
    "rid",
    "unassociate",
    "elastic",
    "ip",
    "addresses",
    "every",
    "ip",
    "associated",
    "paying",
    "well",
    "maybe",
    "performance",
    "um",
    "high",
    "utilization",
    "amazon",
    "ec2",
    "instances",
    "maybe",
    "save",
    "money",
    "switching",
    "smaller",
    "instances",
    "security",
    "saw",
    "mfa",
    "rout",
    "account",
    "popular",
    "one",
    "making",
    "sure",
    "turn",
    "key",
    "rotation",
    "could",
    "something",
    "well",
    "fault",
    "tolerance",
    "um",
    "could",
    "making",
    "sure",
    "using",
    "backups",
    "amazon",
    "rds",
    "database",
    "maybe",
    "turned",
    "uh",
    "service",
    "limits",
    "ton",
    "uh",
    "one",
    "know",
    "might",
    "pr",
    "use",
    "vpcs",
    "ec2",
    "limits",
    "go",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "going",
    "take",
    "look",
    "trusted",
    "advisor",
    "want",
    "go",
    "top",
    "type",
    "trusted",
    "advisor",
    "going",
    "notice",
    "left",
    "hand",
    "side",
    "cost",
    "optimization",
    "performance",
    "security",
    "fault",
    "tolerance",
    "service",
    "limits",
    "right",
    "recommended",
    "actions",
    "much",
    "going",
    "account",
    "uh",
    "uh",
    "free",
    "level",
    "support",
    "basic",
    "support",
    "going",
    "checks",
    "go",
    "still",
    "see",
    "kind",
    "um",
    "like",
    "performance",
    "security",
    "things",
    "like",
    "ones",
    "actually",
    "see",
    "generally",
    "work",
    "way",
    "expand",
    "going",
    "say",
    "amazon",
    "ebs",
    "public",
    "snapshot",
    "check",
    "permission",
    "settings",
    "ebs",
    "volume",
    "snapshots",
    "alert",
    "snapshots",
    "marked",
    "public",
    "scroll",
    "ones",
    "issue",
    "would",
    "tell",
    "right",
    "okay",
    "see",
    "like",
    "check",
    "buckets",
    "amazon",
    "s3",
    "open",
    "access",
    "permissions",
    "allow",
    "access",
    "authenticated",
    "aabus",
    "users",
    "yellow",
    "acl",
    "allows",
    "uh",
    "list",
    "access",
    "everyone",
    "uh",
    "bucket",
    "policy",
    "allows",
    "kind",
    "open",
    "access",
    "bucket",
    "policy",
    "statements",
    "public",
    "grant",
    "access",
    "maybe",
    "see",
    "get",
    "trigger",
    "going",
    "go",
    "s3",
    "going",
    "make",
    "b",
    "bucket",
    "full",
    "access",
    "okay",
    "going",
    "create",
    "new",
    "bucket",
    "say",
    "exposed",
    "bucket",
    "scroll",
    "checkbox",
    "create",
    "bucket",
    "say",
    "acknowledge",
    "totally",
    "fine",
    "okay",
    "bucket",
    "100",
    "exposed",
    "go",
    "back",
    "trusted",
    "advisor",
    "give",
    "refresh",
    "sure",
    "fast",
    "show",
    "expand",
    "says",
    "bucket",
    "acl",
    "allows",
    "upload",
    "delete",
    "everyone",
    "trusted",
    "advisor",
    "permissions",
    "check",
    "policy",
    "uh",
    "bucket",
    "policy",
    "statements",
    "grant",
    "public",
    "access",
    "could",
    "try",
    "make",
    "policy",
    "try",
    "grant",
    "access",
    "writing",
    "every",
    "single",
    "day",
    "sure",
    "could",
    "try",
    "figure",
    "um",
    "say",
    "s3",
    "bucket",
    "policy",
    "public",
    "access",
    "public",
    "read",
    "one",
    "might",
    "good",
    "example",
    "going",
    "go",
    "ahead",
    "copy",
    "one",
    "granting",
    "read",
    "permission",
    "anomymous",
    "users",
    "recommend",
    "show",
    "see",
    "get",
    "trusted",
    "advisor",
    "check",
    "want",
    "uh",
    "forget",
    "serious",
    "issue",
    "principal",
    "set",
    "anybody",
    "anyone",
    "read",
    "saying",
    "get",
    "object",
    "etc",
    "saying",
    "particular",
    "resource",
    "one",
    "going",
    "uh",
    "bucket",
    "question",
    "exposed",
    "bucket",
    "going",
    "scroll",
    "save",
    "changes",
    "okay",
    "bucket",
    "publicly",
    "accessible",
    "going",
    "go",
    "back",
    "refresh",
    "see",
    "see",
    "okay",
    "checks",
    "buckets",
    "s3",
    "etc",
    "appear",
    "could",
    "going",
    "take",
    "time",
    "going",
    "going",
    "hang",
    "tight",
    "little",
    "bit",
    "oh",
    "go",
    "okay",
    "showing",
    "guess",
    "took",
    "time",
    "populate",
    "see",
    "yellow",
    "symbol",
    "warning",
    "saying",
    "hey",
    "problem",
    "go",
    "back",
    "dashboard",
    "wonder",
    "shows",
    "one",
    "investigation",
    "recommendation",
    "know",
    "hopefully",
    "kind",
    "makes",
    "sense",
    "think",
    "cases",
    "remediation",
    "least",
    "go",
    "check",
    "box",
    "say",
    "okay",
    "um",
    "ignore",
    "could",
    "swore",
    "remediation",
    "case",
    "know",
    "generally",
    "trusted",
    "adviser",
    "um",
    "think",
    "probably",
    "gives",
    "alerts",
    "yeah",
    "could",
    "set",
    "recipients",
    "particular",
    "things",
    "like",
    "security",
    "issue",
    "could",
    "email",
    "particular",
    "person",
    "team",
    "could",
    "deal",
    "pretty",
    "much",
    "going",
    "go",
    "ahead",
    "delete",
    "bucket",
    "done",
    "go",
    "delete",
    "say",
    "delete",
    "uh",
    "exposed",
    "bucket",
    "delete",
    "music",
    "okay",
    "let",
    "cover",
    "concepts",
    "service",
    "level",
    "agreements",
    "also",
    "known",
    "sla",
    "sla",
    "formal",
    "commitment",
    "expected",
    "level",
    "service",
    "customer",
    "provider",
    "service",
    "level",
    "met",
    "customer",
    "meets",
    "obligation",
    "sla",
    "customer",
    "eligible",
    "receive",
    "compensation",
    "financial",
    "service",
    "credits",
    "talk",
    "slas",
    "talk",
    "sli",
    "sli",
    "service",
    "level",
    "indicator",
    "metric",
    "measurement",
    "indicates",
    "measure",
    "performance",
    "customer",
    "receiving",
    "given",
    "time",
    "sli",
    "metric",
    "could",
    "uptime",
    "performance",
    "availability",
    "throughput",
    "latency",
    "error",
    "rate",
    "durability",
    "correctness",
    "talking",
    "sis",
    "talking",
    "slos",
    "service",
    "level",
    "objectives",
    "objective",
    "provider",
    "agreed",
    "meet",
    "slos",
    "represented",
    "specific",
    "target",
    "percentage",
    "period",
    "time",
    "example",
    "target",
    "percentage",
    "would",
    "something",
    "says",
    "availability",
    "sla",
    "period",
    "3",
    "months",
    "right",
    "let",
    "talk",
    "target",
    "percentages",
    "way",
    "represented",
    "common",
    "ones",
    "see",
    "uh",
    "99",
    "followed",
    "99",
    "commonly",
    "say",
    "call",
    "99",
    "okay",
    "one",
    "911s",
    "somebody",
    "says",
    "sla",
    "guarantee",
    "911s",
    "going",
    "99",
    "followed",
    "911s",
    "music",
    "right",
    "let",
    "take",
    "look",
    "abus",
    "service",
    "level",
    "agreements",
    "lot",
    "wanted",
    "show",
    "services",
    "give",
    "idea",
    "work",
    "uh",
    "exam",
    "going",
    "ask",
    "like",
    "oh",
    "dynamo",
    "db",
    "sla",
    "global",
    "tables",
    "um",
    "generally",
    "go",
    "good",
    "practice",
    "let",
    "take",
    "look",
    "dynamodb",
    "sla",
    "adus",
    "use",
    "commercially",
    "reasonable",
    "efforts",
    "make",
    "dynb",
    "available",
    "monthly",
    "uptime",
    "percentage",
    "adus",
    "region",
    "monthly",
    "billing",
    "cycle",
    "uh",
    "least",
    "global",
    "tables",
    "slas",
    "applies",
    "standard",
    "sla",
    "applies",
    "event",
    "dynamo",
    "db",
    "meet",
    "service",
    "commitment",
    "eligible",
    "receive",
    "service",
    "credits",
    "described",
    "monthly",
    "uptime",
    "percentage",
    "service",
    "credit",
    "percentage",
    "get",
    "global",
    "tables",
    "standard",
    "tables",
    "let",
    "take",
    "look",
    "less",
    "equal",
    "greater",
    "met",
    "service",
    "ends",
    "get",
    "10",
    "back",
    "spent",
    "service",
    "credits",
    "drops",
    "u",
    "get",
    "25",
    "back",
    "less",
    "95",
    "uh",
    "um",
    "100",
    "back",
    "okay",
    "get",
    "general",
    "idea",
    "sla",
    "going",
    "slightly",
    "different",
    "drops",
    "let",
    "take",
    "look",
    "um",
    "compute",
    "compute",
    "going",
    "apply",
    "across",
    "bunch",
    "compute",
    "services",
    "probably",
    "using",
    "ec2",
    "underneath",
    "probably",
    "reason",
    "ec2",
    "ebs",
    "ecs",
    "eks",
    "ab",
    "uh",
    "makes",
    "two",
    "sla",
    "commitments",
    "uh",
    "included",
    "services",
    "region",
    "level",
    "sla",
    "uh",
    "governs",
    "included",
    "services",
    "deployed",
    "across",
    "multiple",
    "regions",
    "instance",
    "level",
    "sla",
    "governs",
    "amazon",
    "ec2",
    "instances",
    "individually",
    "monthly",
    "time",
    "percentage",
    "service",
    "ced",
    "percentage",
    "region",
    "instance",
    "level",
    "see",
    "thing",
    "like",
    "going",
    "change",
    "based",
    "uh",
    "meet",
    "take",
    "look",
    "one",
    "like",
    "rds",
    "relational",
    "database",
    "service",
    "use",
    "commercially",
    "reasonable",
    "efforts",
    "make",
    "instances",
    "available",
    "monthly",
    "uptime",
    "percentage",
    "monthly",
    "billing",
    "cycle",
    "know",
    "meet",
    "requirements",
    "going",
    "get",
    "service",
    "credits",
    "back",
    "basically",
    "equal",
    "usd",
    "dollars",
    "platform",
    "looks",
    "like",
    "notice",
    "know",
    "like",
    "compute",
    "bunch",
    "services",
    "dynamo",
    "db",
    "based",
    "uh",
    "particular",
    "features",
    "like",
    "global",
    "standard",
    "tables",
    "sla",
    "straightforward",
    "uh",
    "s3",
    "want",
    "show",
    "one",
    "complicated",
    "point",
    "going",
    "vary",
    "look",
    "per",
    "service",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "amazon",
    "service",
    "level",
    "agreements",
    "way",
    "find",
    "slas",
    "pretty",
    "much",
    "type",
    "sla",
    "whatever",
    "looking",
    "compute",
    "type",
    "sla",
    "look",
    "particular",
    "service",
    "maybe",
    "say",
    "sage",
    "maker",
    "sla",
    "aws",
    "think",
    "like",
    "generic",
    "sla",
    "page",
    "least",
    "know",
    "always",
    "type",
    "sla",
    "find",
    "kind",
    "read",
    "try",
    "find",
    "uh",
    "things",
    "matter",
    "business",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "service",
    "health",
    "dashboard",
    "service",
    "health",
    "dashboard",
    "shows",
    "general",
    "status",
    "agus",
    "services",
    "really",
    "simple",
    "idea",
    "uh",
    "check",
    "based",
    "geographic",
    "area",
    "say",
    "north",
    "america",
    "europe",
    "etc",
    "see",
    "icon",
    "says",
    "whether",
    "service",
    "good",
    "standing",
    "details",
    "service",
    "operating",
    "normally",
    "etc",
    "notice",
    "also",
    "rss",
    "feed",
    "reason",
    "talking",
    "service",
    "health",
    "dashboards",
    "want",
    "talk",
    "personal",
    "health",
    "dashboards",
    "called",
    "health",
    "dashboards",
    "confusing",
    "wanted",
    "tell",
    "one",
    "first",
    "jump",
    "adabs",
    "personal",
    "health",
    "dashboard",
    "saw",
    "service",
    "health",
    "dashboard",
    "let",
    "take",
    "look",
    "adus",
    "personal",
    "health",
    "dashboard",
    "looks",
    "like",
    "provides",
    "alerts",
    "guidance",
    "adus",
    "events",
    "might",
    "affect",
    "environment",
    "abus",
    "customers",
    "access",
    "personal",
    "health",
    "dashboard",
    "personal",
    "health",
    "dashboard",
    "shows",
    "recent",
    "events",
    "help",
    "manage",
    "active",
    "events",
    "show",
    "proactive",
    "notifications",
    "plan",
    "scheduled",
    "activities",
    "uh",
    "use",
    "alerts",
    "get",
    "notified",
    "changes",
    "affect",
    "aess",
    "resources",
    "follow",
    "guidance",
    "diagnose",
    "resolve",
    "issue",
    "similar",
    "service",
    "health",
    "dashboard",
    "personalized",
    "um",
    "uh",
    "know",
    "see",
    "crop",
    "often",
    "create",
    "alerts",
    "reactive",
    "uh",
    "things",
    "happening",
    "within",
    "us",
    "music",
    "okay",
    "team",
    "called",
    "adus",
    "trust",
    "safety",
    "specifically",
    "deals",
    "abuses",
    "occurring",
    "adus",
    "platform",
    "going",
    "list",
    "cases",
    "want",
    "contacting",
    "opposed",
    "support",
    "first",
    "spam",
    "receiving",
    "unwanted",
    "emails",
    "adus",
    "owned",
    "ip",
    "address",
    "adus",
    "resources",
    "used",
    "spam",
    "websites",
    "forms",
    "port",
    "scanning",
    "log",
    "show",
    "one",
    "adus",
    "owned",
    "ip",
    "addresses",
    "sending",
    "packets",
    "multiple",
    "ports",
    "server",
    "uh",
    "also",
    "believe",
    "uh",
    "attempt",
    "discover",
    "unsecured",
    "ports",
    "uh",
    "dos",
    "attack",
    "logs",
    "show",
    "one",
    "itus",
    "owned",
    "ip",
    "addresses",
    "used",
    "flood",
    "ports",
    "resources",
    "packets",
    "also",
    "believe",
    "attempt",
    "overwhelm",
    "crash",
    "server",
    "software",
    "running",
    "server",
    "intrusion",
    "attempts",
    "logs",
    "show",
    "one",
    "ad",
    "owned",
    "ip",
    "addresses",
    "used",
    "attempt",
    "log",
    "resources",
    "hosting",
    "prohibited",
    "content",
    "evidence",
    "abus",
    "resources",
    "used",
    "host",
    "distribute",
    "prohibited",
    "content",
    "illegal",
    "content",
    "copyrighted",
    "content",
    "without",
    "consent",
    "copyright",
    "holder",
    "distributing",
    "malware",
    "evidence",
    "abis",
    "resources",
    "used",
    "distribute",
    "software",
    "knowingly",
    "created",
    "compromise",
    "cause",
    "harm",
    "computers",
    "machines",
    "installed",
    "cases",
    "going",
    "ed",
    "support",
    "going",
    "open",
    "abuse",
    "ticket",
    "got",
    "contact",
    "abuse",
    "fill",
    "uh",
    "amazon",
    "abuse",
    "uh",
    "form",
    "whether",
    "coming",
    "uh",
    "outside",
    "aos",
    "account",
    "even",
    "internally",
    "think",
    "someone",
    "compromised",
    "account",
    "used",
    "ways",
    "uh",
    "going",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "aws",
    "uh",
    "saying",
    "adus",
    "adus",
    "trust",
    "safety",
    "team",
    "want",
    "uh",
    "find",
    "issue",
    "going",
    "report",
    "email",
    "abuse",
    "going",
    "use",
    "form",
    "report",
    "amazon",
    "abuse",
    "go",
    "sign",
    "put",
    "email",
    "first",
    "name",
    "last",
    "name",
    "phone",
    "number",
    "um",
    "source",
    "ip",
    "details",
    "uh",
    "uh",
    "uh",
    "even",
    "select",
    "type",
    "abuse",
    "say",
    "kind",
    "kind",
    "things",
    "like",
    "straightforward",
    "um",
    "pretty",
    "much",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "adus",
    "free",
    "tier",
    "allows",
    "use",
    "adus",
    "cost",
    "um",
    "say",
    "free",
    "tier",
    "idea",
    "first",
    "12",
    "months",
    "sign",
    "going",
    "special",
    "offerings",
    "free",
    "usage",
    "certain",
    "monthly",
    "limit",
    "forever",
    "um",
    "services",
    "inherently",
    "free",
    "total",
    "separate",
    "slide",
    "let",
    "talk",
    "free",
    "tier",
    "stuff",
    "absolutely",
    "full",
    "list",
    "um",
    "uh",
    "good",
    "idea",
    "like",
    "gives",
    "good",
    "um",
    "overview",
    "stuff",
    "free",
    "ec2",
    "use",
    "web",
    "server",
    "get",
    "t2",
    "micro",
    "750",
    "hours",
    "per",
    "month",
    "one",
    "year",
    "730",
    "hours",
    "um",
    "month",
    "means",
    "could",
    "server",
    "running",
    "uh",
    "entire",
    "month",
    "free",
    "uh",
    "additional",
    "server",
    "bit",
    "well",
    "rds",
    "relational",
    "database",
    "service",
    "either",
    "schol",
    "postgress",
    "t2",
    "db",
    "micro",
    "750",
    "hours",
    "free",
    "get",
    "free",
    "database",
    "would",
    "surprised",
    "far",
    "get",
    "uh",
    "t2",
    "db",
    "micro",
    "um",
    "know",
    "even",
    "mediumsized",
    "startup",
    "run",
    "uh",
    "t2",
    "db",
    "micro",
    "problems",
    "lassic",
    "load",
    "balancer",
    "get",
    "750",
    "hours",
    "per",
    "month",
    "one",
    "year",
    "um",
    "really",
    "good",
    "thing",
    "uh",
    "load",
    "balancers",
    "usually",
    "cost",
    "150",
    "month",
    "great",
    "actually",
    "pretty",
    "much",
    "cost",
    "15",
    "month",
    "um",
    "1530",
    "45",
    "month",
    "month",
    "year",
    "uh",
    "free",
    "amazon",
    "cloudfront",
    "homepage",
    "caching",
    "videos",
    "things",
    "like",
    "get",
    "50",
    "gigabyt",
    "data",
    "transfer",
    "total",
    "year",
    "amazon",
    "connect",
    "get",
    "total",
    "free",
    "number",
    "90",
    "minutes",
    "call",
    "time",
    "per",
    "month",
    "one",
    "month",
    "one",
    "year",
    "sorry",
    "amazon",
    "elasticache",
    "could",
    "launch",
    "redis",
    "elasticache",
    "server",
    "get",
    "70",
    "hours",
    "cash3",
    "micro",
    "year",
    "um",
    "elastic",
    "search",
    "service",
    "full",
    "tech",
    "search",
    "7",
    "50",
    "hours",
    "per",
    "month",
    "one",
    "year",
    "pinpoint",
    "campaign",
    "marketing",
    "email",
    "send",
    "targeted",
    "users",
    "per",
    "month",
    "one",
    "year",
    "sces",
    "um",
    "simple",
    "email",
    "uh",
    "service",
    "um",
    "transactional",
    "emails",
    "um",
    "send",
    "web",
    "app",
    "emails",
    "per",
    "month",
    "forever",
    "code",
    "pipeline",
    "one",
    "pipeline",
    "free",
    "code",
    "build",
    "uh",
    "building",
    "uh",
    "projects",
    "things",
    "like",
    "100",
    "build",
    "minutes",
    "per",
    "month",
    "forever",
    "lambda",
    "service",
    "compute",
    "1",
    "mill",
    "ion",
    "free",
    "requests",
    "per",
    "month",
    "million",
    "uh",
    "million",
    "seconds",
    "compute",
    "time",
    "per",
    "month",
    "free",
    "uh",
    "know",
    "like",
    "highlight",
    "ones",
    "traditional",
    "architecture",
    "always",
    "going",
    "web",
    "server",
    "database",
    "load",
    "balancer",
    "um",
    "might",
    "even",
    "cloudfront",
    "well",
    "uh",
    "yeah",
    "huge",
    "list",
    "even",
    "tap",
    "surface",
    "free",
    "music",
    "aws",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "promotional",
    "credits",
    "equivalent",
    "usd",
    "dollars",
    "adus",
    "platform",
    "ad",
    "credits",
    "earned",
    "several",
    "ways",
    "could",
    "joining",
    "adus",
    "activate",
    "startup",
    "program",
    "winning",
    "hackathon",
    "participating",
    "surveys",
    "reason",
    "adis",
    "wants",
    "give",
    "credits",
    "uh",
    "uh",
    "um",
    "promotional",
    "code",
    "click",
    "redeem",
    "credit",
    "button",
    "billing",
    "console",
    "enter",
    "credits",
    "shown",
    "monitor",
    "via",
    "adus",
    "budgets",
    "uh",
    "via",
    "cost",
    "explorer",
    "probably",
    "even",
    "building",
    "alarms",
    "credits",
    "generally",
    "expired",
    "dat",
    "tax",
    "maum",
    "could",
    "months",
    "year",
    "itus",
    "credits",
    "used",
    "services",
    "exceptions",
    "itus",
    "credits",
    "used",
    "like",
    "purchasing",
    "domain",
    "via",
    "row",
    "53",
    "uh",
    "domain",
    "costs",
    "money",
    "outside",
    "ad",
    "cost",
    "like",
    "infrastructure",
    "virtual",
    "stuff",
    "things",
    "like",
    "uh",
    "know",
    "going",
    "going",
    "able",
    "use",
    "credits",
    "music",
    "okay",
    "adabs",
    "partner",
    "network",
    "also",
    "know",
    "apn",
    "global",
    "partner",
    "program",
    "ads",
    "joining",
    "apn",
    "open",
    "organization",
    "business",
    "opportunities",
    "allow",
    "exclusive",
    "training",
    "marketing",
    "events",
    "joining",
    "apn",
    "either",
    "consulting",
    "partner",
    "help",
    "companies",
    "utilize",
    "adabs",
    "technology",
    "partner",
    "build",
    "technology",
    "top",
    "adabs",
    "service",
    "offering",
    "partner",
    "belongs",
    "specific",
    "tier",
    "either",
    "going",
    "select",
    "advance",
    "premiere",
    "sign",
    "free",
    "sign",
    "going",
    "able",
    "much",
    "start",
    "uh",
    "committing",
    "annual",
    "fee",
    "like",
    "certain",
    "amount",
    "money",
    "uh",
    "able",
    "part",
    "tier",
    "starts",
    "thousands",
    "okay",
    "think",
    "first",
    "tier",
    "like",
    "something",
    "like",
    "gets",
    "uh",
    "expensive",
    "go",
    "tier",
    "also",
    "particular",
    "knowledge",
    "requirements",
    "could",
    "holding",
    "uh",
    "particular",
    "ad",
    "certifications",
    "foundational",
    "level",
    "associate",
    "level",
    "things",
    "like",
    "um",
    "could",
    "adus",
    "apn",
    "exclusive",
    "certifications",
    "training",
    "um",
    "certifications",
    "certifications",
    "available",
    "partners",
    "saying",
    "like",
    "could",
    "like",
    "something",
    "like",
    "uh",
    "talk",
    "customers",
    "communication",
    "things",
    "like",
    "get",
    "back",
    "promotional",
    "abus",
    "credits",
    "know",
    "say",
    "oh",
    "man",
    "spent",
    "uh",
    "able",
    "uh",
    "get",
    "apn",
    "least",
    "idea",
    "generally",
    "get",
    "back",
    "uh",
    "spend",
    "aws",
    "like",
    "committing",
    "give",
    "like",
    "like",
    "going",
    "commit",
    "keep",
    "using",
    "ads",
    "showing",
    "annual",
    "fee",
    "commitment",
    "promotional",
    "credits",
    "get",
    "back",
    "changed",
    "couple",
    "times",
    "want",
    "slide",
    "go",
    "stale",
    "case",
    "happen",
    "change",
    "look",
    "find",
    "actually",
    "right",
    "uh",
    "unique",
    "speaking",
    "opportunities",
    "official",
    "adus",
    "marketing",
    "channels",
    "like",
    "blogs",
    "webinars",
    "part",
    "apn",
    "requirement",
    "sponsor",
    "vendor",
    "booth",
    "adus",
    "events",
    "go",
    "reinvent",
    "ads",
    "um",
    "event",
    "vendors",
    "part",
    "apn",
    "right",
    "paid",
    "fee",
    "paid",
    "additional",
    "fee",
    "get",
    "booth",
    "um",
    "yeah",
    "ab",
    "partner",
    "network",
    "uh",
    "good",
    "uh",
    "uh",
    "helping",
    "find",
    "new",
    "business",
    "connecting",
    "people",
    "building",
    "workloads",
    "onws",
    "hopefully",
    "gives",
    "idea",
    "works",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "adus",
    "budgets",
    "adus",
    "budgets",
    "gives",
    "ability",
    "set",
    "alerts",
    "exceed",
    "approaching",
    "defined",
    "budget",
    "create",
    "cost",
    "usage",
    "reservation",
    "budgets",
    "tracked",
    "monthly",
    "quarterly",
    "yearly",
    "levels",
    "customizable",
    "start",
    "end",
    "dates",
    "alert",
    "support",
    "ec2",
    "rds",
    "red",
    "shift",
    "elastic",
    "cast",
    "reservations",
    "uh",
    "idea",
    "choose",
    "budget",
    "amount",
    "could",
    "like",
    "100",
    "even",
    "show",
    "last",
    "amount",
    "uh",
    "resetting",
    "budget",
    "something",
    "new",
    "choose",
    "based",
    "different",
    "kind",
    "unit",
    "wanted",
    "based",
    "running",
    "hours",
    "ec2",
    "could",
    "totally",
    "budgets",
    "used",
    "forecast",
    "costs",
    "limited",
    "compared",
    "cost",
    "explorer",
    "analysis",
    "related",
    "cost",
    "usage",
    "reports",
    "along",
    "business",
    "intelligence",
    "tools",
    "budgets",
    "uh",
    "based",
    "fixed",
    "cost",
    "plan",
    "cost",
    "uh",
    "upfront",
    "based",
    "chosen",
    "level",
    "easily",
    "managed",
    "adus",
    "budgets",
    "dashboard",
    "via",
    "ad",
    "budgets",
    "api",
    "get",
    "notified",
    "providing",
    "email",
    "chatbot",
    "threshold",
    "uh",
    "close",
    "current",
    "forecasted",
    "budget",
    "um",
    "see",
    "list",
    "budgets",
    "uh",
    "current",
    "versus",
    "forecasted",
    "amount",
    "used",
    "things",
    "like",
    "see",
    "budget",
    "history",
    "download",
    "csv",
    "uh",
    "show",
    "cost",
    "history",
    "right",
    "line",
    "ca",
    "show",
    "hard",
    "see",
    "get",
    "first",
    "two",
    "budgets",
    "free",
    "reason",
    "set",
    "budget",
    "first",
    "get",
    "aws",
    "budget",
    "costs",
    "uh",
    "002",
    "cents",
    "day",
    "like",
    "60",
    "cents",
    "um",
    "uh",
    "usd",
    "per",
    "month",
    "budget",
    "cheap",
    "use",
    "got",
    "limit",
    "budgets",
    "going",
    "good",
    "shape",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "budget",
    "reports",
    "use",
    "alongside",
    "abos",
    "budgets",
    "create",
    "send",
    "daily",
    "weekly",
    "monthly",
    "reports",
    "monitor",
    "performance",
    "abos",
    "budgets",
    "email",
    "specific",
    "emails",
    "complicated",
    "say",
    "create",
    "report",
    "budget",
    "choose",
    "frequency",
    "uh",
    "emails",
    "want",
    "um",
    "ab",
    "budget",
    "report",
    "serves",
    "convenient",
    "way",
    "staying",
    "top",
    "reports",
    "since",
    "delivered",
    "email",
    "instead",
    "logging",
    "abis",
    "management",
    "console",
    "people",
    "ca",
    "bothered",
    "log",
    "okay",
    "let",
    "take",
    "look",
    "adus",
    "cost",
    "use",
    "report",
    "generate",
    "detailed",
    "spreadsheet",
    "enabling",
    "better",
    "analyze",
    "understand",
    "adus",
    "cost",
    "kind",
    "looks",
    "like",
    "turn",
    "feature",
    "place",
    "s3",
    "bucket",
    "could",
    "use",
    "something",
    "like",
    "athena",
    "turn",
    "report",
    "queriable",
    "database",
    "since",
    "easy",
    "consume",
    "s3",
    "csvs",
    "athena",
    "could",
    "use",
    "quick",
    "site",
    "visualize",
    "building",
    "data",
    "grass",
    "quick",
    "site",
    "business",
    "intelligence",
    "tool",
    "similar",
    "tableau",
    "powerbi",
    "also",
    "ingest",
    "red",
    "shift",
    "um",
    "idea",
    "turn",
    "choose",
    "granular",
    "want",
    "data",
    "hourly",
    "daily",
    "monthly",
    "turn",
    "daily",
    "able",
    "even",
    "say",
    "spikes",
    "uh",
    "costs",
    "uc2",
    "instances",
    "kind",
    "nice",
    "report",
    "contain",
    "cost",
    "allocation",
    "tags",
    "um",
    "think",
    "separate",
    "slide",
    "type",
    "tags",
    "data",
    "stored",
    "e",
    "either",
    "csv",
    "zipped",
    "parket",
    "format",
    "depends",
    "want",
    "um",
    "uh",
    "music",
    "okay",
    "let",
    "talk",
    "cost",
    "allocation",
    "tags",
    "optional",
    "metadata",
    "attached",
    "adus",
    "resources",
    "generate",
    "cost",
    "uses",
    "report",
    "use",
    "data",
    "better",
    "analyze",
    "data",
    "make",
    "way",
    "cost",
    "allocation",
    "tags",
    "need",
    "activate",
    "tags",
    "want",
    "show",
    "two",
    "types",
    "tags",
    "user",
    "defin",
    "whatever",
    "previously",
    "tagged",
    "show",
    "probably",
    "turn",
    "made",
    "one",
    "project",
    "turn",
    "project",
    "lot",
    "adis",
    "generated",
    "ones",
    "turn",
    "huge",
    "list",
    "uh",
    "yeah",
    "particular",
    "cost",
    "um",
    "usage",
    "reports",
    "says",
    "like",
    "cost",
    "allocation",
    "reports",
    "cost",
    "usage",
    "reports",
    "used",
    "called",
    "um",
    "documentation",
    "bit",
    "old",
    "yep",
    "music",
    "go",
    "create",
    "alarms",
    "cloudwatch",
    "alarms",
    "monitor",
    "spend",
    "commonly",
    "called",
    "building",
    "alarms",
    "uh",
    "regular",
    "alarm",
    "focused",
    "spend",
    "order",
    "turn",
    "building",
    "alerts",
    "first",
    "order",
    "uh",
    "able",
    "use",
    "uh",
    "go",
    "cloudwatch",
    "alarms",
    "choose",
    "billing",
    "metric",
    "set",
    "alarm",
    "however",
    "want",
    "bilding",
    "alarms",
    "much",
    "flexible",
    "abess",
    "budgets",
    "ideal",
    "complex",
    "use",
    "cases",
    "monitoring",
    "spend",
    "usage",
    "terms",
    "alerting",
    "decide",
    "want",
    "uh",
    "way",
    "way",
    "used",
    "still",
    "way",
    "today",
    "know",
    "options",
    "valid",
    "decide",
    "use",
    "case",
    "music",
    "okay",
    "let",
    "take",
    "look",
    "abos",
    "cost",
    "explorer",
    "lets",
    "visualize",
    "understand",
    "manage",
    "adus",
    "cost",
    "usage",
    "time",
    "uh",
    "big",
    "graphic",
    "adis",
    "cost",
    "explorer",
    "specify",
    "time",
    "range",
    "aggregation",
    "lot",
    "robust",
    "filtering",
    "um",
    "really",
    "nice",
    "bunch",
    "default",
    "reports",
    "going",
    "get",
    "pen",
    "tool",
    "show",
    "button",
    "uh",
    "uh",
    "see",
    "marker",
    "know",
    "look",
    "things",
    "like",
    "monthly",
    "cost",
    "service",
    "monthly",
    "cost",
    "linked",
    "account",
    "daily",
    "cost",
    "marketplace",
    "r",
    "utilization",
    "bunch",
    "also",
    "notice",
    "create",
    "report",
    "find",
    "something",
    "like",
    "save",
    "later",
    "um",
    "could",
    "access",
    "forecasting",
    "get",
    "idea",
    "future",
    "cost",
    "whether",
    "gone",
    "kind",
    "zoom",
    "filtration",
    "options",
    "choose",
    "um",
    "either",
    "monthly",
    "daily",
    "level",
    "want",
    "data",
    "grouped",
    "together",
    "lot",
    "filter",
    "control",
    "want",
    "ec2",
    "instances",
    "particular",
    "region",
    "get",
    "filtered",
    "information",
    "see",
    "breakdown",
    "different",
    "types",
    "detailed",
    "class",
    "explorer",
    "shows",
    "us",
    "east",
    "one",
    "pretty",
    "sure",
    "click",
    "class",
    "explorer",
    "switch",
    "region",
    "understand",
    "lives",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "video",
    "want",
    "show",
    "ad",
    "cost",
    "explorer",
    "go",
    "top",
    "actually",
    "right",
    "hand",
    "side",
    "going",
    "click",
    "right",
    "go",
    "billing",
    "dashboard",
    "left",
    "hand",
    "side",
    "going",
    "look",
    "cost",
    "explorer",
    "click",
    "launch",
    "cost",
    "explorer",
    "going",
    "get",
    "aist",
    "cost",
    "management",
    "dashboard",
    "find",
    "savings",
    "plans",
    "reservations",
    "things",
    "like",
    "left",
    "hand",
    "side",
    "click",
    "cost",
    "explorer",
    "get",
    "nice",
    "chart",
    "idea",
    "change",
    "monthly",
    "daily",
    "uh",
    "prefer",
    "okay",
    "change",
    "scope",
    "maybe",
    "need",
    "six",
    "months",
    "go",
    "back",
    "um",
    "three",
    "months",
    "less",
    "data",
    "bit",
    "delayed",
    "clicking",
    "also",
    "could",
    "daily",
    "instead",
    "monthly",
    "little",
    "bit",
    "patient",
    "uh",
    "using",
    "interface",
    "change",
    "stack",
    "line",
    "graph",
    "kind",
    "see",
    "details",
    "always",
    "clear",
    "like",
    "others",
    "things",
    "like",
    "uh",
    "drill",
    "like",
    "ways",
    "applying",
    "filters",
    "things",
    "like",
    "always",
    "forget",
    "uh",
    "bringing",
    "everything",
    "hit",
    "clear",
    "first",
    "think",
    "um",
    "oh",
    "click",
    "like",
    "wanted",
    "click",
    "pick",
    "particular",
    "service",
    "could",
    "go",
    "type",
    "ec2",
    "say",
    "ec2",
    "instances",
    "apply",
    "filter",
    "see",
    "exactly",
    "cost",
    "want",
    "choose",
    "like",
    "maybe",
    "rds",
    "okay",
    "know",
    "could",
    "useful",
    "see",
    "yeah",
    "sometimes",
    "always",
    "clear",
    "recommend",
    "go",
    "back",
    "billing",
    "dashboard",
    "go",
    "bills",
    "okay",
    "bills",
    "really",
    "really",
    "useful",
    "shows",
    "exactly",
    "every",
    "single",
    "little",
    "service",
    "built",
    "expand",
    "see",
    "exactly",
    "accounts",
    "go",
    "side",
    "well",
    "find",
    "spend",
    "way",
    "um",
    "cost",
    "explorer",
    "useful",
    "useful",
    "different",
    "way",
    "okay",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "adus",
    "pricing",
    "api",
    "adabs",
    "programmatically",
    "access",
    "pricing",
    "information",
    "get",
    "latest",
    "price",
    "pricing",
    "offerings",
    "services",
    "makes",
    "sense",
    "abos",
    "change",
    "time",
    "uh",
    "know",
    "might",
    "want",
    "know",
    "exactly",
    "current",
    "price",
    "uh",
    "two",
    "versions",
    "api",
    "career",
    "api",
    "known",
    "pricing",
    "service",
    "api",
    "access",
    "via",
    "json",
    "batch",
    "api",
    "also",
    "known",
    "price",
    "uh",
    "list",
    "api",
    "via",
    "html",
    "odd",
    "um",
    "batch",
    "api",
    "returns",
    "json",
    "accessing",
    "via",
    "html",
    "literally",
    "paste",
    "links",
    "browser",
    "api",
    "actually",
    "sending",
    "application",
    "json",
    "request",
    "use",
    "something",
    "like",
    "postman",
    "something",
    "uh",
    "also",
    "subscribe",
    "sns",
    "uh",
    "notifications",
    "get",
    "alerts",
    "pricing",
    "services",
    "change",
    "ads",
    "prices",
    "change",
    "periodically",
    "ads",
    "cuts",
    "prices",
    "new",
    "instance",
    "types",
    "launched",
    "new",
    "services",
    "introduced",
    "music",
    "go",
    "hey",
    "angie",
    "brown",
    "exam",
    "pro",
    "want",
    "show",
    "savings",
    "plans",
    "savings",
    "going",
    "found",
    "cost",
    "explorer",
    "type",
    "cost",
    "explorer",
    "top",
    "want",
    "type",
    "savings",
    "plan",
    "well",
    "left",
    "hand",
    "side",
    "going",
    "uh",
    "savings",
    "plans",
    "options",
    "going",
    "go",
    "overview",
    "describes",
    "um",
    "savings",
    "plans",
    "want",
    "read",
    "already",
    "spend",
    "happening",
    "going",
    "make",
    "suggestions",
    "particular",
    "account",
    "saying",
    "could",
    "save",
    "money",
    "compute",
    "take",
    "look",
    "going",
    "go",
    "form",
    "see",
    "see",
    "say",
    "uh",
    "commitment",
    "3",
    "years",
    "way",
    "compute",
    "savings",
    "applies",
    "ec2",
    "fargate",
    "lambda",
    "ec2",
    "specific",
    "one",
    "uh",
    "select",
    "particular",
    "type",
    "instance",
    "family",
    "sage",
    "maker",
    "savings",
    "plans",
    "um",
    "go",
    "enter",
    "like",
    "2",
    "front",
    "uh",
    "really",
    "understand",
    "make",
    "clear",
    "savings",
    "um",
    "uh",
    "make",
    "easy",
    "probably",
    "go",
    "click",
    "compute",
    "kind",
    "feel",
    "like",
    "would",
    "autofill",
    "filled",
    "uh",
    "sorry",
    "filled",
    "saying",
    "plan",
    "upfront",
    "uh",
    "based",
    "past",
    "30",
    "days",
    "going",
    "see",
    "going",
    "see",
    "monthly",
    "savings",
    "25",
    "36",
    "add",
    "cart",
    "way",
    "kind",
    "feel",
    "like",
    "easiest",
    "way",
    "um",
    "figure",
    "um",
    "going",
    "form",
    "configured",
    "savings",
    "uh",
    "utilization",
    "reports",
    "coverage",
    "reports",
    "honestly",
    "never",
    "really",
    "looked",
    "um",
    "uh",
    "curious",
    "like",
    "looking",
    "monthly",
    "daily",
    "last",
    "let",
    "go",
    "months",
    "running",
    "stuff",
    "account",
    "something",
    "apply",
    "nothing",
    "nothing",
    "interest",
    "um",
    "mean",
    "guess",
    "lot",
    "use",
    "coverage",
    "report",
    "utilization",
    "report",
    "could",
    "interesting",
    "imagine",
    "maybe",
    "using",
    "savings",
    "plan",
    "see",
    "probably",
    "reason",
    "um",
    "yeah",
    "hopefully",
    "gives",
    "clear",
    "idea",
    "know",
    "go",
    "recommendations",
    "see",
    "exactly",
    "save",
    "add",
    "cart",
    "want",
    "pay",
    "choose",
    "submit",
    "order",
    "good",
    "go",
    "right",
    "savings",
    "plans",
    "music",
    "let",
    "take",
    "look",
    "defense",
    "depth",
    "understand",
    "layers",
    "security",
    "ads",
    "consider",
    "uh",
    "data",
    "centers",
    "uh",
    "virtual",
    "workloads",
    "things",
    "also",
    "consider",
    "uh",
    "thinking",
    "security",
    "cloud",
    "resources",
    "interior",
    "data",
    "access",
    "business",
    "customer",
    "data",
    "encryption",
    "protect",
    "data",
    "applications",
    "applications",
    "secure",
    "free",
    "security",
    "vulnerabilities",
    "comput",
    "access",
    "virtual",
    "machines",
    "ports",
    "premise",
    "cloud",
    "network",
    "layer",
    "limits",
    "communication",
    "resources",
    "using",
    "segmentation",
    "access",
    "controls",
    "perimeter",
    "distributed",
    "denial",
    "service",
    "protection",
    "filter",
    "large",
    "scale",
    "attacks",
    "cause",
    "denial",
    "service",
    "users",
    "could",
    "say",
    "part",
    "network",
    "layer",
    "say",
    "variants",
    "separating",
    "uh",
    "explicitly",
    "identity",
    "access",
    "controlling",
    "access",
    "infrastructure",
    "change",
    "control",
    "physical",
    "physical",
    "layer",
    "limiting",
    "access",
    "data",
    "centers",
    "authorized",
    "personnel",
    "notice",
    "highlighted",
    "identity",
    "access",
    "yellow",
    "considered",
    "new",
    "primary",
    "um",
    "perimeter",
    "customer",
    "perspective",
    "course",
    "adab",
    "best",
    "concerned",
    "physical",
    "perimeter",
    "things",
    "like",
    "customer",
    "going",
    "thinking",
    "especially",
    "zero",
    "trust",
    "model",
    "see",
    "depths",
    "idea",
    "order",
    "get",
    "pass",
    "stuff",
    "um",
    "outward",
    "one",
    "protected",
    "pretty",
    "well",
    "generally",
    "worry",
    "interiors",
    "course",
    "um",
    "yeah",
    "music",
    "go",
    "let",
    "take",
    "look",
    "confidentiality",
    "integrity",
    "availability",
    "also",
    "known",
    "cia",
    "triad",
    "model",
    "describing",
    "foundation",
    "security",
    "principles",
    "tradeoff",
    "relationships",
    "triad",
    "confidentiality",
    "confidentiality",
    "component",
    "privacy",
    "implements",
    "protect",
    "data",
    "unauthorized",
    "viewers",
    "practice",
    "using",
    "cryptographic",
    "keys",
    "encrypt",
    "data",
    "using",
    "keys",
    "encrypt",
    "keys",
    "envelope",
    "encryption",
    "integrity",
    "maintaining",
    "ensuring",
    "accuracy",
    "completeness",
    "data",
    "entire",
    "life",
    "cycle",
    "practice",
    "utilizing",
    "asset",
    "compliant",
    "databases",
    "valid",
    "transactions",
    "utilizing",
    "tamper",
    "evident",
    "tamper",
    "proof",
    "hardware",
    "security",
    "modules",
    "hsms",
    "availability",
    "information",
    "needs",
    "available",
    "needed",
    "practice",
    "high",
    "availability",
    "mitigating",
    "dos",
    "uh",
    "decryption",
    "access",
    "cia",
    "triad",
    "first",
    "mentioned",
    "n",
    "publication",
    "1977",
    "efforts",
    "expand",
    "modernize",
    "suggest",
    "alternatives",
    "cia",
    "triab",
    "one",
    "1998",
    "six",
    "atomic",
    "elements",
    "information",
    "uh",
    "2004",
    "n",
    "engineering",
    "principles",
    "uh",
    "information",
    "technology",
    "security",
    "33",
    "security",
    "principles",
    "still",
    "popular",
    "um",
    "model",
    "security",
    "uh",
    "kind",
    "tell",
    "like",
    "know",
    "always",
    "get",
    "everything",
    "get",
    "three",
    "sometimes",
    "trade",
    "scenario",
    "um",
    "know",
    "hopefully",
    "terminology",
    "uh",
    "resonate",
    "go",
    "security",
    "music",
    "content",
    "want",
    "define",
    "term",
    "vulnerability",
    "vulnerability",
    "whole",
    "weakness",
    "application",
    "designed",
    "design",
    "flaw",
    "implementation",
    "bug",
    "allows",
    "attacker",
    "cause",
    "harm",
    "stakeholders",
    "applications",
    "uh",
    "lot",
    "great",
    "definitions",
    "vulnerabilities",
    "oas",
    "ton",
    "talked",
    "oas",
    "talk",
    "abus",
    "waf",
    "uh",
    "organization",
    "creates",
    "security",
    "projects",
    "help",
    "know",
    "protect",
    "uh",
    "gives",
    "working",
    "examples",
    "understand",
    "get",
    "better",
    "security",
    "lot",
    "ones",
    "maybe",
    "might",
    "notice",
    "like",
    "using",
    "broken",
    "risky",
    "cryptographic",
    "algorithm",
    "maybe",
    "memory",
    "leak",
    "least",
    "privilege",
    "violation",
    "um",
    "uh",
    "lease",
    "privilege",
    "something",
    "thing",
    "always",
    "worried",
    "insecurity",
    "improper",
    "data",
    "validation",
    "buffer",
    "overflows",
    "know",
    "kind",
    "set",
    "tone",
    "vulnerability",
    "things",
    "thinking",
    "music",
    "okay",
    "let",
    "understand",
    "encryption",
    "need",
    "understand",
    "cryptography",
    "practice",
    "study",
    "techniques",
    "secure",
    "communication",
    "presence",
    "third",
    "parties",
    "called",
    "adversaries",
    "encryption",
    "process",
    "encoding",
    "scrambling",
    "information",
    "using",
    "key",
    "cipher",
    "store",
    "sensitive",
    "data",
    "unintelligible",
    "format",
    "means",
    "protection",
    "encryption",
    "takes",
    "plain",
    "text",
    "produces",
    "produces",
    "cipher",
    "text",
    "example",
    "old",
    "um",
    "encryption",
    "machine",
    "enigma",
    "machine",
    "used",
    "world",
    "war",
    "ii",
    "different",
    "key",
    "day",
    "used",
    "set",
    "position",
    "rotors",
    "relied",
    "simple",
    "cipher",
    "substitution",
    "might",
    "asking",
    "cipher",
    "going",
    "look",
    "next",
    "music",
    "cipher",
    "algorithm",
    "performs",
    "encryption",
    "decryption",
    "cipher",
    "synomous",
    "code",
    "uh",
    "idea",
    "use",
    "code",
    "either",
    "unlock",
    "lock",
    "information",
    "cipher",
    "text",
    "cipher",
    "text",
    "result",
    "encryption",
    "performed",
    "plain",
    "text",
    "via",
    "algorithm",
    "lock",
    "scramble",
    "make",
    "sense",
    "need",
    "code",
    "unlock",
    "et",
    "get",
    "information",
    "good",
    "practical",
    "example",
    "back",
    "day",
    "code",
    "book",
    "type",
    "document",
    "used",
    "gathering",
    "storing",
    "cryptographic",
    "codes",
    "ciphers",
    "idea",
    "zoomed",
    "notice",
    "uh",
    "would",
    "be0",
    "0",
    "would",
    "give",
    "authority",
    "idea",
    "0",
    "0",
    "word",
    "would",
    "translate",
    "0",
    "use",
    "0",
    "match",
    "say",
    "mean",
    "kind",
    "practical",
    "example",
    "ciphers",
    "music",
    "action",
    "took",
    "look",
    "encryption",
    "cryptographic",
    "keys",
    "c",
    "cryptographic",
    "key",
    "easy",
    "way",
    "think",
    "variable",
    "used",
    "conjunction",
    "encryption",
    "algorithm",
    "order",
    "encrypt",
    "decrypt",
    "data",
    "different",
    "kinds",
    "um",
    "ones",
    "symmetric",
    "encryption",
    "key",
    "used",
    "encoding",
    "decoding",
    "uh",
    "popular",
    "one",
    "one",
    "see",
    "aws",
    "called",
    "advanced",
    "encryption",
    "standard",
    "aes",
    "take",
    "look",
    "graphic",
    "closely",
    "one",
    "key",
    "used",
    "encrypt",
    "produces",
    "cipher",
    "cipher",
    "text",
    "say",
    "uh",
    "decrypt",
    "get",
    "plain",
    "text",
    "one",
    "single",
    "key",
    "asymmetric",
    "encryption",
    "two",
    "keys",
    "used",
    "one",
    "encode",
    "one",
    "decode",
    "popular",
    "one",
    "rsa",
    "wondering",
    "uh",
    "words",
    "three",
    "people",
    "names",
    "put",
    "together",
    "helped",
    "uh",
    "invent",
    "type",
    "algorithm",
    "uh",
    "one",
    "key",
    "ecrypt",
    "one",
    "key",
    "decrypt",
    "two",
    "different",
    "keys",
    "music",
    "right",
    "right",
    "let",
    "look",
    "concept",
    "hashing",
    "salting",
    "hashing",
    "hashing",
    "function",
    "accepts",
    "arbitrary",
    "size",
    "values",
    "maps",
    "fixed",
    "size",
    "data",
    "structure",
    "hashing",
    "reduce",
    "size",
    "store",
    "value",
    "hashing",
    "process",
    "deterministic",
    "deterministic",
    "function",
    "always",
    "returns",
    "output",
    "output",
    "input",
    "something",
    "like",
    "john",
    "smith",
    "pass",
    "hash",
    "function",
    "going",
    "create",
    "something",
    "human",
    "readable",
    "say",
    "something",
    "like",
    "02",
    "fae",
    "x",
    "xy",
    "whatever",
    "um",
    "always",
    "produce",
    "thing",
    "key",
    "know",
    "value",
    "input",
    "reason",
    "use",
    "hashing",
    "functions",
    "hashing",
    "general",
    "hash",
    "passwords",
    "hash",
    "functions",
    "used",
    "store",
    "passwords",
    "database",
    "password",
    "reside",
    "plain",
    "text",
    "format",
    "heard",
    "data",
    "reaches",
    "stored",
    "password",
    "plain",
    "text",
    "thing",
    "helps",
    "us",
    "avoid",
    "issue",
    "um",
    "thing",
    "one",
    "way",
    "ca",
    "take",
    "hash",
    "unhash",
    "um",
    "well",
    "conditions",
    "authenticate",
    "user",
    "user",
    "inputs",
    "password",
    "hashed",
    "one",
    "inputed",
    "time",
    "know",
    "login",
    "hash",
    "compared",
    "stored",
    "hash",
    "database",
    "match",
    "user",
    "successfully",
    "logged",
    "case",
    "never",
    "ever",
    "know",
    "original",
    "password",
    "looked",
    "like",
    "uh",
    "popular",
    "hashing",
    "functions",
    "md5",
    "shaw",
    "256",
    "bcrypt",
    "uh",
    "attacker",
    "knows",
    "function",
    "using",
    "uh",
    "uh",
    "stole",
    "database",
    "could",
    "enumerate",
    "dictionary",
    "passwords",
    "determine",
    "password",
    "never",
    "see",
    "could",
    "keep",
    "going",
    "salt",
    "passwords",
    "salt",
    "random",
    "string",
    "known",
    "attacker",
    "hash",
    "function",
    "accepts",
    "mitigate",
    "deterministic",
    "nature",
    "hashing",
    "function",
    "music",
    "go",
    "let",
    "take",
    "look",
    "digital",
    "signatures",
    "signing",
    "digital",
    "signature",
    "mathematical",
    "scheme",
    "verifying",
    "authenticity",
    "digital",
    "messages",
    "documents",
    "digital",
    "signature",
    "gives",
    "us",
    "tamper",
    "evidence",
    "someone",
    "mess",
    "modify",
    "data",
    "data",
    "uh",
    "someone",
    "expect",
    "actual",
    "sender",
    "kind",
    "diagram",
    "person",
    "sends",
    "going",
    "send",
    "message",
    "sign",
    "uh",
    "bob",
    "verifies",
    "person",
    "three",
    "algorithms",
    "digital",
    "signature",
    "key",
    "generation",
    "generates",
    "public",
    "private",
    "key",
    "um",
    "signing",
    "process",
    "generating",
    "digital",
    "signature",
    "private",
    "key",
    "inputed",
    "value",
    "signing",
    "happening",
    "signing",
    "verification",
    "verifies",
    "authenticity",
    "message",
    "public",
    "key",
    "remember",
    "private",
    "key",
    "used",
    "signing",
    "public",
    "key",
    "used",
    "verifying",
    "ssh",
    "uses",
    "public",
    "private",
    "key",
    "authorize",
    "remote",
    "access",
    "remote",
    "machine",
    "virtual",
    "machine",
    "common",
    "use",
    "rsa",
    "saw",
    "rsa",
    "type",
    "algorithm",
    "earlier",
    "ssh",
    "hyen",
    "keyen",
    "command",
    "generate",
    "public",
    "private",
    "key",
    "linux",
    "know",
    "one",
    "top",
    "head",
    "always",
    "know",
    "um",
    "code",
    "signing",
    "use",
    "digital",
    "signature",
    "ensure",
    "computer",
    "code",
    "tampered",
    "like",
    "subset",
    "digital",
    "signatur",
    "use",
    "means",
    "get",
    "virtual",
    "machine",
    "use",
    "signing",
    "means",
    "make",
    "sure",
    "code",
    "committed",
    "repository",
    "expect",
    "music",
    "go",
    "let",
    "talk",
    "transit",
    "versus",
    "rest",
    "encryption",
    "encryption",
    "transit",
    "data",
    "secure",
    "moving",
    "locations",
    "algorithms",
    "tls",
    "ssl",
    "encryption",
    "rest",
    "data",
    "secure",
    "residing",
    "storage",
    "within",
    "database",
    "looking",
    "aes",
    "rsa",
    "covered",
    "previously",
    "uh",
    "algorithms",
    "ones",
    "cover",
    "tls",
    "ssl",
    "cover",
    "tls",
    "transport",
    "layer",
    "security",
    "encryption",
    "protocol",
    "data",
    "integrity",
    "two",
    "commun",
    "communicating",
    "computer",
    "application",
    "longer",
    "used",
    "tls",
    "current",
    "best",
    "practice",
    "ssl",
    "secure",
    "socket",
    "layers",
    "encrypted",
    "protocol",
    "data",
    "integrity",
    "two",
    "communicating",
    "uh",
    "computer",
    "application",
    "deprecated",
    "um",
    "honestly",
    "always",
    "get",
    "two",
    "mixed",
    "always",
    "fig",
    "fig",
    "uh",
    "uh",
    "get",
    "confused",
    "used",
    "um",
    "know",
    "always",
    "changing",
    "us",
    "understand",
    "generally",
    "concepts",
    "familiar",
    "terms",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "common",
    "compliance",
    "programs",
    "set",
    "internal",
    "policies",
    "procedures",
    "company",
    "comply",
    "laws",
    "rules",
    "regulations",
    "uphold",
    "business",
    "reputation",
    "bunch",
    "different",
    "compliance",
    "programs",
    "popular",
    "ones",
    "like",
    "hippa",
    "um",
    "pci",
    "css",
    "question",
    "know",
    "yes",
    "generally",
    "know",
    "popular",
    "ones",
    "going",
    "see",
    "throughout",
    "cloud",
    "career",
    "um",
    "getting",
    "familiar",
    "good",
    "time",
    "uh",
    "let",
    "jump",
    "okay",
    "first",
    "one",
    "want",
    "introduce",
    "iso",
    "bunch",
    "different",
    "ones",
    "iso",
    "international",
    "organization",
    "standardization",
    "one",
    "called",
    "iec",
    "international",
    "electr",
    "technical",
    "commission",
    "one",
    "deals",
    "uh",
    "know",
    "like",
    "uh",
    "virtual",
    "things",
    "one",
    "deals",
    "hardware",
    "things",
    "lot",
    "overlapping",
    "um",
    "compliance",
    "programs",
    "okay",
    "popular",
    "absolutely",
    "popular",
    "one",
    "know",
    "27100",
    "know",
    "lot",
    "organizations",
    "going",
    "271",
    "control",
    "implementation",
    "guidance",
    "2707",
    "enhanced",
    "focus",
    "cloud",
    "security",
    "27018",
    "protection",
    "personal",
    "data",
    "cloud",
    "2771",
    "privacy",
    "information",
    "management",
    "system",
    "framework",
    "outlines",
    "controls",
    "processes",
    "manage",
    "data",
    "privacy",
    "protect",
    "piis",
    "personally",
    "identifi",
    "information",
    "system",
    "organization",
    "control",
    "sock",
    "popular",
    "thing",
    "organizations",
    "go",
    "especially",
    "sock",
    "two",
    "sock",
    "one",
    "18",
    "standards",
    "report",
    "effectiveness",
    "internal",
    "controls",
    "service",
    "organization",
    "relevant",
    "client",
    "internal",
    "control",
    "financial",
    "reporting",
    "sock",
    "2",
    "evaluates",
    "internal",
    "controls",
    "policies",
    "procedures",
    "directly",
    "relate",
    "security",
    "system",
    "organization",
    "sock",
    "three",
    "report",
    "based",
    "trust",
    "uh",
    "service",
    "services",
    "criteria",
    "freely",
    "distributed",
    "pci",
    "dss",
    "set",
    "security",
    "standards",
    "designed",
    "ensure",
    "companies",
    "accept",
    "process",
    "store",
    "transmit",
    "credit",
    "card",
    "information",
    "maintains",
    "secure",
    "environment",
    "federal",
    "information",
    "procedure",
    "standards",
    "fips",
    "140",
    "hyphen",
    "2",
    "us",
    "canadian",
    "government",
    "standard",
    "specifies",
    "security",
    "requirements",
    "cryptographic",
    "modules",
    "protect",
    "sensitive",
    "information",
    "uh",
    "phipa",
    "relevant",
    "actually",
    "onario",
    "canada",
    "also",
    "uh",
    "wellknown",
    "um",
    "uh",
    "one",
    "outside",
    "hippa",
    "regulates",
    "patient",
    "protected",
    "health",
    "information",
    "actually",
    "hippa",
    "us",
    "federal",
    "law",
    "regulates",
    "patient",
    "procedure",
    "health",
    "information",
    "uh",
    "cloud",
    "security",
    "alliance",
    "csa",
    "star",
    "certification",
    "independent",
    "assessment",
    "cloud",
    "provider",
    "security",
    "posture",
    "never",
    "heard",
    "csa",
    "fundamental",
    "uh",
    "security",
    "certification",
    "called",
    "cssk",
    "ccsk",
    "always",
    "get",
    "mixed",
    "uh",
    "fed",
    "ramp",
    "covered",
    "earlier",
    "course",
    "future",
    "depending",
    "put",
    "um",
    "fed",
    "ramp",
    "stands",
    "federal",
    "risk",
    "authorization",
    "management",
    "program",
    "us",
    "government",
    "standardization",
    "approach",
    "security",
    "authorizations",
    "cloud",
    "service",
    "offerings",
    "want",
    "work",
    "us",
    "government",
    "places",
    "sell",
    "us",
    "government",
    "need",
    "fed",
    "ramp",
    "similar",
    "criminal",
    "justice",
    "information",
    "services",
    "us",
    "state",
    "local",
    "agency",
    "wants",
    "access",
    "fbi",
    "cgis",
    "database",
    "required",
    "adhere",
    "cgis",
    "security",
    "policy",
    "gdpr",
    "uh",
    "general",
    "data",
    "protection",
    "regulation",
    "everyone",
    "knows",
    "europe",
    "maybe",
    "much",
    "north",
    "america",
    "places",
    "european",
    "privacy",
    "law",
    "imposes",
    "new",
    "rules",
    "companies",
    "governments",
    "agencies",
    "nonprofits",
    "organizations",
    "offer",
    "goods",
    "services",
    "people",
    "people",
    "european",
    "union",
    "collect",
    "analyze",
    "data",
    "try",
    "tied",
    "eu",
    "residents",
    "lot",
    "compliance",
    "programs",
    "one",
    "also",
    "popular",
    "fips",
    "get",
    "talk",
    "kms",
    "um",
    "yeah",
    "uh",
    "music",
    "go",
    "wanted",
    "quickly",
    "show",
    "adis",
    "compliance",
    "programs",
    "page",
    "list",
    "types",
    "compliance",
    "programs",
    "ad",
    "us",
    "uh",
    "working",
    "different",
    "types",
    "certification",
    "attestment",
    "use",
    "itus",
    "artifact",
    "amazon",
    "artifact",
    "whichever",
    "prefix",
    "decide",
    "use",
    "name",
    "um",
    "uh",
    "ensure",
    "itus",
    "order",
    "meet",
    "regulatory",
    "compliance",
    "see",
    "want",
    "know",
    "little",
    "bit",
    "go",
    "ahead",
    "click",
    "read",
    "additional",
    "information",
    "better",
    "idea",
    "music",
    "okay",
    "let",
    "talk",
    "pen",
    "testing",
    "pen",
    "testing",
    "authorized",
    "simulated",
    "cyber",
    "attack",
    "computer",
    "system",
    "performed",
    "evaluate",
    "security",
    "system",
    "aws",
    "allowed",
    "perform",
    "uh",
    "pen",
    "testing",
    "um",
    "restrictions",
    "permitted",
    "services",
    "ec2",
    "instances",
    "knack",
    "gateways",
    "elbs",
    "rds",
    "um",
    "relational",
    "database",
    "service",
    "cloudfront",
    "aurora",
    "api",
    "gateways",
    "lambda",
    "lambda",
    "edge",
    "functions",
    "light",
    "cell",
    "resources",
    "elastic",
    "beanock",
    "environments",
    "things",
    "dns",
    "zone",
    "walking",
    "via",
    "row",
    "53",
    "hosted",
    "zones",
    "dos",
    "simulation",
    "testing",
    "doss",
    "doses",
    "simulated",
    "doss",
    "simulated",
    "dos",
    "okay",
    "mean",
    "ca",
    "necessarily",
    "uh",
    "lot",
    "exceptions",
    "pen",
    "testing",
    "whole",
    "page",
    "generally",
    "allowed",
    "dsing",
    "uh",
    "port",
    "flooding",
    "protocol",
    "flooding",
    "request",
    "flooding",
    "ca",
    "things",
    "simulated",
    "events",
    "need",
    "submit",
    "request",
    "ads",
    "reply",
    "could",
    "take",
    "7",
    "days",
    "uh",
    "know",
    "lot",
    "uh",
    "little",
    "intricacies",
    "really",
    "read",
    "interested",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "pen",
    "testing",
    "adus",
    "platform",
    "page",
    "tells",
    "allowed",
    "allowed",
    "um",
    "additional",
    "things",
    "read",
    "like",
    "stress",
    "test",
    "policy",
    "dos",
    "simulate",
    "simulation",
    "testing",
    "policy",
    "cover",
    "detail",
    "uh",
    "course",
    "content",
    "whatever",
    "reason",
    "interested",
    "want",
    "aware",
    "kind",
    "stuff",
    "want",
    "simulate",
    "events",
    "simulate",
    "event",
    "form",
    "fill",
    "open",
    "kind",
    "read",
    "gives",
    "us",
    "heads",
    "going",
    "stress",
    "test",
    "fishing",
    "malware",
    "analysis",
    "way",
    "going",
    "get",
    "trouble",
    "aware",
    "okay",
    "pretty",
    "much",
    "music",
    "hey",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "itus",
    "artifact",
    "selfs",
    "serve",
    "portal",
    "demand",
    "access",
    "ibus",
    "compliance",
    "reports",
    "example",
    "bunch",
    "different",
    "compliance",
    "reports",
    "adus",
    "could",
    "meeting",
    "idea",
    "go",
    "portal",
    "within",
    "adus",
    "management",
    "conso",
    "huge",
    "list",
    "reports",
    "go",
    "access",
    "searching",
    "canada",
    "get",
    "government",
    "canada",
    "partner",
    "package",
    "go",
    "ahead",
    "download",
    "report",
    "pdf",
    "within",
    "pdf",
    "click",
    "link",
    "get",
    "downloadable",
    "excel",
    "pretty",
    "much",
    "want",
    "see",
    "adus",
    "compliant",
    "different",
    "music",
    "programs",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "going",
    "take",
    "look",
    "adus",
    "artifact",
    "top",
    "going",
    "type",
    "artifact",
    "confused",
    "code",
    "artifact",
    "guess",
    "new",
    "service",
    "always",
    "releasing",
    "new",
    "services",
    "video",
    "things",
    "uh",
    "hard",
    "got",
    "go",
    "view",
    "reports",
    "types",
    "compliance",
    "programs",
    "regulatory",
    "compliance",
    "programs",
    "ad",
    "uh",
    "meeting",
    "search",
    "something",
    "type",
    "canada",
    "government",
    "canada",
    "partner",
    "package",
    "go",
    "ahead",
    "download",
    "report",
    "download",
    "really",
    "want",
    "open",
    "um",
    "going",
    "really",
    "want",
    "open",
    "um",
    "adobe",
    "acrobat",
    "open",
    "adobe",
    "acrobat",
    "going",
    "able",
    "access",
    "downloadblack",
    "reader",
    "open",
    "moving",
    "going",
    "see",
    "um",
    "going",
    "say",
    "like",
    "hey",
    "um",
    "oops",
    "want",
    "please",
    "scroll",
    "next",
    "page",
    "view",
    "artifact",
    "download",
    "think",
    "go",
    "know",
    "say",
    "scroll",
    "next",
    "page",
    "page",
    "pretty",
    "sure",
    "go",
    "left",
    "hand",
    "side",
    "looking",
    "excel",
    "spreadsheet",
    "going",
    "save",
    "attachment",
    "actually",
    "going",
    "open",
    "open",
    "file",
    "okay",
    "give",
    "moment",
    "excel",
    "installed",
    "go",
    "okay",
    "know",
    "little",
    "bit",
    "odd",
    "way",
    "get",
    "um",
    "uh",
    "certificates",
    "reports",
    "works",
    "um",
    "yeah",
    "mean",
    "idea",
    "like",
    "need",
    "prove",
    "ads",
    "meeting",
    "whatever",
    "standards",
    "type",
    "whatever",
    "like",
    "maybe",
    "like",
    "fed",
    "ramp",
    "right",
    "whatever",
    "download",
    "certificate",
    "attestment",
    "whatever",
    "um",
    "double",
    "check",
    "ads",
    "meeting",
    "standards",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "ais",
    "inspector",
    "answer",
    "let",
    "talk",
    "hardening",
    "hardening",
    "act",
    "eliminating",
    "many",
    "security",
    "risk",
    "risks",
    "possible",
    "hardening",
    "common",
    "virtual",
    "machines",
    "run",
    "collection",
    "c",
    "security",
    "checks",
    "known",
    "security",
    "benchmark",
    "adus",
    "inspector",
    "runs",
    "security",
    "benchmark",
    "specific",
    "ec2",
    "instances",
    "run",
    "variety",
    "security",
    "benchmarks",
    "perform",
    "network",
    "host",
    "assessments",
    "example",
    "two",
    "check",
    "boxes",
    "say",
    "assessments",
    "want",
    "idea",
    "install",
    "edus",
    "agent",
    "ec2",
    "instance",
    "run",
    "assessment",
    "assessment",
    "target",
    "review",
    "findings",
    "remediate",
    "secur",
    "issues",
    "one",
    "popular",
    "benchmark",
    "run",
    "cis",
    "699",
    "checks",
    "know",
    "cis",
    "stands",
    "center",
    "internet",
    "security",
    "uh",
    "organization",
    "bunch",
    "um",
    "uh",
    "security",
    "controls",
    "check",
    "marks",
    "uh",
    "published",
    "suggest",
    "check",
    "music",
    "machine",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "looking",
    "dos",
    "dods",
    "type",
    "ious",
    "attack",
    "disrupt",
    "normal",
    "traffic",
    "flooding",
    "website",
    "large",
    "amount",
    "fake",
    "traffic",
    "idea",
    "attacker",
    "victim",
    "victim",
    "us",
    "could",
    "virtual",
    "machines",
    "cloud",
    "services",
    "idea",
    "kind",
    "uh",
    "resource",
    "um",
    "take",
    "uh",
    "incoming",
    "requests",
    "internet",
    "idea",
    "attacker",
    "utilizing",
    "internet",
    "may",
    "control",
    "bunch",
    "uh",
    "virtual",
    "machines",
    "servers",
    "loaded",
    "malicious",
    "software",
    "idea",
    "attacker",
    "going",
    "tell",
    "send",
    "flood",
    "traffic",
    "internet",
    "uh",
    "uh",
    "computing",
    "resource",
    "uh",
    "website",
    "going",
    "either",
    "start",
    "stall",
    "going",
    "become",
    "unavailable",
    "users",
    "idea",
    "know",
    "want",
    "protect",
    "dos",
    "need",
    "kind",
    "dos",
    "protection",
    "traditionally",
    "used",
    "like",
    "third",
    "party",
    "services",
    "uh",
    "would",
    "pay",
    "would",
    "sit",
    "front",
    "uh",
    "load",
    "balcer",
    "uh",
    "n",
    "server",
    "great",
    "thing",
    "cloud",
    "service",
    "providers",
    "generally",
    "networks",
    "built",
    "dos",
    "protection",
    "idea",
    "compute",
    "resources",
    "aws",
    "going",
    "get",
    "uh",
    "protection",
    "free",
    "via",
    "aw",
    "shield",
    "talk",
    "music",
    "next",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "shield",
    "managed",
    "dos",
    "protection",
    "service",
    "safeguards",
    "applications",
    "running",
    "ad",
    "route",
    "traffic",
    "r3",
    "cloudfront",
    "using",
    "shield",
    "standard",
    "diagram",
    "kind",
    "show",
    "services",
    "common",
    "ones",
    "point",
    "entry",
    "aws",
    "could",
    "also",
    "including",
    "elastic",
    "ip",
    "aus",
    "global",
    "accelerator",
    "idea",
    "uh",
    "go",
    "services",
    "aus",
    "network",
    "shield",
    "built",
    "going",
    "get",
    "protection",
    "uh",
    "traffic",
    "reaches",
    "uh",
    "cloud",
    "service",
    "case",
    "showing",
    "ec2",
    "instances",
    "shield",
    "protects",
    "layers",
    "three",
    "four",
    "seven",
    "attacks",
    "uh",
    "layer",
    "3",
    "four",
    "7even",
    "based",
    "osi",
    "model",
    "um",
    "fundamental",
    "networking",
    "concept",
    "seven",
    "application",
    "layer",
    "four",
    "transport",
    "layer",
    "three",
    "network",
    "layer",
    "um",
    "two",
    "different",
    "types",
    "plans",
    "shield",
    "shield",
    "standard",
    "free",
    "shield",
    "advance",
    "starts",
    "usd",
    "per",
    "year",
    "plus",
    "additional",
    "uh",
    "costs",
    "based",
    "usage",
    "size",
    "tack",
    "services",
    "using",
    "much",
    "traffic",
    "moving",
    "protection",
    "common",
    "dos",
    "attacks",
    "shield",
    "standard",
    "uh",
    "access",
    "tools",
    "best",
    "practices",
    "build",
    "dos",
    "brazilian",
    "architecture",
    "automatically",
    "available",
    "aable",
    "services",
    "additional",
    "protection",
    "larger",
    "sophisticated",
    "attacks",
    "shield",
    "advance",
    "comes",
    "play",
    "available",
    "specific",
    "services",
    "r",
    "53",
    "cloudfront",
    "elb",
    "aus",
    "global",
    "accelerator",
    "elastic",
    "ip",
    "uh",
    "notable",
    "features",
    "visibility",
    "reporting",
    "layer",
    "3",
    "4",
    "7even",
    "going",
    "get",
    "seven",
    "using",
    "awaf",
    "uh",
    "access",
    "team",
    "support",
    "dos",
    "experts",
    "going",
    "get",
    "paying",
    "business",
    "enterprise",
    "support",
    "paying",
    "well",
    "uh",
    "also",
    "get",
    "dos",
    "cost",
    "protection",
    "ensure",
    "know",
    "bills",
    "go",
    "crazy",
    "uh",
    "comes",
    "sla",
    "guarantee",
    "going",
    "work",
    "plants",
    "integrate",
    "itless",
    "web",
    "application",
    "uh",
    "firewall",
    "waf",
    "give",
    "layer",
    "7even",
    "application",
    "protection",
    "understand",
    "using",
    "waf",
    "going",
    "layer",
    "7even",
    "production",
    "music",
    "okay",
    "hey",
    "andre",
    "brown",
    "exam",
    "pro",
    "looking",
    "amazon",
    "guard",
    "duty",
    "look",
    "need",
    "understand",
    "ids",
    "ips",
    "intrusion",
    "detection",
    "system",
    "intrusion",
    "protection",
    "system",
    "used",
    "device",
    "software",
    "application",
    "monitors",
    "network",
    "systems",
    "malicious",
    "activity",
    "policy",
    "violations",
    "guard",
    "duty",
    "threat",
    "detection",
    "service",
    "ids",
    "ips",
    "continuously",
    "monitors",
    "malicious",
    "suspicious",
    "activity",
    "unauthorized",
    "behavior",
    "uses",
    "machine",
    "learning",
    "analyze",
    "following",
    "itus",
    "logs",
    "cloud",
    "trail",
    "logs",
    "vpc",
    "flow",
    "logs",
    "dn",
    "logs",
    "report",
    "back",
    "say",
    "hey",
    "um",
    "issue",
    "actually",
    "one",
    "easy",
    "replicate",
    "saying",
    "somebody",
    "using",
    "root",
    "credentials",
    "suggesting",
    "right",
    "never",
    "supposed",
    "uh",
    "invoking",
    "api",
    "calls",
    "root",
    "credentials",
    "limiting",
    "might",
    "also",
    "notice",
    "want",
    "investigate",
    "kind",
    "follow",
    "uh",
    "amazon",
    "detective",
    "adus",
    "detective",
    "whichever",
    "uh",
    "prefix",
    "decided",
    "put",
    "service",
    "alert",
    "findings",
    "automate",
    "incident",
    "uh",
    "response",
    "via",
    "cloudwatch",
    "events",
    "uh",
    "renamed",
    "event",
    "bridge",
    "know",
    "third",
    "party",
    "services",
    "follow",
    "remediation",
    "action",
    "um",
    "graphic",
    "amazon",
    "guard",
    "duty",
    "bit",
    "closer",
    "see",
    "findings",
    "see",
    "lot",
    "detailed",
    "information",
    "music",
    "okay",
    "hey",
    "brown",
    "exam",
    "pro",
    "going",
    "take",
    "look",
    "guard",
    "duty",
    "guard",
    "duty",
    "um",
    "intrusion",
    "protection",
    "detection",
    "uh",
    "service",
    "done",
    "um",
    "done",
    "bad",
    "practices",
    "purposely",
    "show",
    "um",
    "information",
    "going",
    "go",
    "guard",
    "duty",
    "okay",
    "turn",
    "guard",
    "duty",
    "guard",
    "duty",
    "going",
    "start",
    "getting",
    "reports",
    "coming",
    "notice",
    "anomalous",
    "behavior",
    "8",
    "days",
    "ago",
    "uh",
    "b",
    "uh",
    "also",
    "named",
    "well",
    "kind",
    "see",
    "details",
    "accessing",
    "anything",
    "malicious",
    "idea",
    "even",
    "shows",
    "generally",
    "near",
    "thunder",
    "bay",
    "provider",
    "would",
    "tb",
    "um",
    "see",
    "making",
    "uh",
    "api",
    "calls",
    "describe",
    "account",
    "attributes",
    "things",
    "like",
    "issue",
    "root",
    "account",
    "mfa",
    "turned",
    "maybe",
    "usage",
    "actually",
    "turned",
    "suppose",
    "see",
    "root",
    "credential",
    "usage",
    "saying",
    "hey",
    "used",
    "77",
    "times",
    "sometimes",
    "go",
    "use",
    "uh",
    "roo",
    "account",
    "tutorials",
    "saying",
    "using",
    "way",
    "much",
    "got",
    "stop",
    "okay",
    "something",
    "uh",
    "pretty",
    "interesting",
    "guard",
    "duty",
    "um",
    "really",
    "cost",
    "effective",
    "easy",
    "turn",
    "turn",
    "looks",
    "like",
    "new",
    "thing",
    "s3",
    "um",
    "looked",
    "yet",
    "kind",
    "cool",
    "kind",
    "feels",
    "like",
    "would",
    "overlap",
    "uh",
    "amazon",
    "macy",
    "whatever",
    "get",
    "breakdown",
    "cost",
    "see",
    "cloud",
    "trail",
    "vpc",
    "fl",
    "logs",
    "ds",
    "logs",
    "would",
    "ingesting",
    "data",
    "want",
    "use",
    "s3",
    "protection",
    "probably",
    "turning",
    "creating",
    "custom",
    "cloud",
    "watch",
    "trail",
    "data",
    "events",
    "consume",
    "information",
    "um",
    "know",
    "know",
    "hopefully",
    "gives",
    "kind",
    "idea",
    "things",
    "also",
    "centralize",
    "guard",
    "duty",
    "uh",
    "one",
    "account",
    "one",
    "thing",
    "takes",
    "care",
    "everything",
    "move",
    "data",
    "across",
    "accounts",
    "single",
    "place",
    "kind",
    "interesting",
    "set",
    "follow",
    "followups",
    "um",
    "possible",
    "uh",
    "seeing",
    "generally",
    "would",
    "show",
    "uh",
    "would",
    "show",
    "way",
    "like",
    "triggering",
    "cloud",
    "watch",
    "probably",
    "could",
    "pragmatically",
    "something",
    "interesting",
    "like",
    "list",
    "management",
    "add",
    "trusted",
    "ips",
    "threat",
    "list",
    "people",
    "know",
    "fine",
    "whit",
    "list",
    "people",
    "know",
    "bad",
    "make",
    "sure",
    "never",
    "allowed",
    "get",
    "pretty",
    "much",
    "guard",
    "duty",
    "okay",
    "let",
    "take",
    "look",
    "amazon",
    "macy",
    "macy",
    "fully",
    "managed",
    "service",
    "continuously",
    "monitors",
    "s3",
    "data",
    "access",
    "activity",
    "anomalies",
    "generates",
    "detailed",
    "alerts",
    "detects",
    "risks",
    "unauthorized",
    "access",
    "inav",
    "virgent",
    "data",
    "leaks",
    "macy",
    "works",
    "using",
    "machine",
    "learning",
    "analyze",
    "cloud",
    "trail",
    "logs",
    "macy",
    "variety",
    "alerts",
    "anomaly",
    "access",
    "config",
    "compliance",
    "credential",
    "loss",
    "data",
    "compliance",
    "file",
    "hosting",
    "identity",
    "numeration",
    "information",
    "loss",
    "um",
    "location",
    "anomaly",
    "open",
    "permissions",
    "privilege",
    "escalation",
    "ransomware",
    "service",
    "disruption",
    "suspicious",
    "access",
    "mayy",
    "identify",
    "risk",
    "users",
    "could",
    "lead",
    "compromise",
    "one",
    "little",
    "kind",
    "uh",
    "tidbit",
    "um",
    "app",
    "total",
    "users",
    "categorize",
    "different",
    "uh",
    "risks",
    "ca",
    "remember",
    "flag",
    "means",
    "uh",
    "amazon",
    "macy",
    "okay",
    "service",
    "uh",
    "important",
    "storing",
    "things",
    "s3",
    "uh",
    "use",
    "often",
    "music",
    "honest",
    "hey",
    "andie",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "adus",
    "virtual",
    "private",
    "network",
    "also",
    "known",
    "vpn",
    "itus",
    "vpn",
    "lets",
    "establish",
    "secure",
    "private",
    "tunnel",
    "network",
    "device",
    "idus",
    "global",
    "network",
    "important",
    "emphasize",
    "word",
    "secure",
    "uh",
    "using",
    "direct",
    "connect",
    "establish",
    "private",
    "connection",
    "using",
    "kind",
    "protocol",
    "secure",
    "data",
    "transit",
    "whereas",
    "vpn",
    "using",
    "secure",
    "protocol",
    "two",
    "options",
    "adus",
    "site",
    "tosite",
    "vpn",
    "securely",
    "connect",
    "premise",
    "network",
    "branch",
    "office",
    "site",
    "vpc",
    "adabs",
    "client",
    "vpn",
    "securely",
    "connect",
    "users",
    "adabs",
    "premises",
    "networks",
    "one",
    "thing",
    "need",
    "understand",
    "alongside",
    "vpn",
    "ipc",
    "stands",
    "internet",
    "protocol",
    "security",
    "secure",
    "network",
    "protocol",
    "suite",
    "authenticates",
    "encrypts",
    "packets",
    "data",
    "provide",
    "secure",
    "encrypted",
    "communication",
    "two",
    "computers",
    "internet",
    "protocol",
    "network",
    "used",
    "vpns",
    "abus",
    "definitely",
    "uses",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "abus",
    "web",
    "application",
    "firewall",
    "also",
    "known",
    "wf",
    "protects",
    "uh",
    "protects",
    "web",
    "application",
    "common",
    "web",
    "exploits",
    "idea",
    "write",
    "rules",
    "allow",
    "deny",
    "traffic",
    "based",
    "contents",
    "htp",
    "requests",
    "use",
    "rule",
    "set",
    "trusted",
    "adus",
    "security",
    "partner",
    "adus",
    "waf",
    "rule",
    "marketplace",
    "waf",
    "attached",
    "either",
    "cloudfront",
    "application",
    "load",
    "balancer",
    "diagram",
    "idea",
    "see",
    "cloudfront",
    "waff",
    "alb",
    "w",
    "protect",
    "uh",
    "web",
    "applications",
    "attacks",
    "covered",
    "oas",
    "10",
    "uh",
    "top",
    "10",
    "dangerous",
    "attacks",
    "know",
    "oas",
    "open",
    "web",
    "application",
    "security",
    "project",
    "basically",
    "uh",
    "security",
    "projects",
    "things",
    "say",
    "hey",
    "things",
    "commonly",
    "protect",
    "might",
    "like",
    "example",
    "applications",
    "uh",
    "serve",
    "means",
    "learn",
    "security",
    "look",
    "top",
    "10",
    "injection",
    "broken",
    "authentication",
    "sensitive",
    "data",
    "exposure",
    "xml",
    "external",
    "entities",
    "xxe",
    "broken",
    "access",
    "control",
    "security",
    "misconfigurations",
    "scripting",
    "xss",
    "uh",
    "insecure",
    "deserialization",
    "using",
    "components",
    "known",
    "vulnerabilities",
    "insufficient",
    "logging",
    "monitoring",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "going",
    "take",
    "quick",
    "look",
    "adus",
    "web",
    "application",
    "firewall",
    "also",
    "known",
    "waf",
    "um",
    "account",
    "waf",
    "running",
    "uh",
    "create",
    "one",
    "uh",
    "already",
    "something",
    "take",
    "look",
    "going",
    "go",
    "waf",
    "shield",
    "left",
    "hand",
    "side",
    "noti",
    "global",
    "service",
    "leand",
    "side",
    "going",
    "looking",
    "web",
    "acl",
    "idea",
    "want",
    "w",
    "create",
    "web",
    "acl",
    "within",
    "within",
    "web",
    "acl",
    "uh",
    "overview",
    "kind",
    "show",
    "kind",
    "traffic",
    "going",
    "rules",
    "um",
    "lot",
    "different",
    "kind",
    "manage",
    "rule",
    "groups",
    "use",
    "ones",
    "provided",
    "aws",
    "lot",
    "paid",
    "free",
    "see",
    "free",
    "rule",
    "groups",
    "like",
    "hey",
    "want",
    "anomymous",
    "ips",
    "checkbox",
    "know",
    "want",
    "protect",
    "sql",
    "injection",
    "interesting",
    "thing",
    "abis",
    "capacity",
    "um",
    "ca",
    "add",
    "add",
    "certain",
    "amount",
    "capacity",
    "um",
    "um",
    "uh",
    "pay",
    "something",
    "like",
    "kind",
    "way",
    "um",
    "uh",
    "kind",
    "cap",
    "amount",
    "stuff",
    "put",
    "terms",
    "rules",
    "um",
    "lot",
    "um",
    "rule",
    "groups",
    "third",
    "party",
    "services",
    "like",
    "security",
    "companies",
    "know",
    "like",
    "fort",
    "net",
    "os",
    "top",
    "10",
    "uh",
    "subscribe",
    "marketplace",
    "able",
    "use",
    "uh",
    "yeah",
    "apply",
    "rules",
    "something",
    "called",
    "bot",
    "control",
    "never",
    "used",
    "get",
    "visibility",
    "bot",
    "ac",
    "resource",
    "controllers",
    "bots",
    "allow",
    "block",
    "resources",
    "sounds",
    "really",
    "cool",
    "stand",
    "bots",
    "might",
    "turn",
    "take",
    "look",
    "cost",
    "see",
    "find",
    "pretty",
    "much",
    "waf",
    "um",
    "one",
    "thing",
    "would",
    "say",
    "block",
    "specific",
    "ip",
    "addresses",
    "whitel",
    "list",
    "specific",
    "ip",
    "addresses",
    "might",
    "rules",
    "going",
    "see",
    "yeah",
    "like",
    "maybe",
    "bypass",
    "ip",
    "addresses",
    "um",
    "uh",
    "cloud",
    "support",
    "engineers",
    "using",
    "admid",
    "panel",
    "um",
    "uh",
    "wf",
    "aggressive",
    "terms",
    "protection",
    "sometimes",
    "uh",
    "say",
    "hey",
    "allow",
    "ip",
    "address",
    "let",
    "um",
    "know",
    "let",
    "cloud",
    "support",
    "engineer",
    "able",
    "use",
    "mid",
    "panel",
    "malicious",
    "okay",
    "one",
    "little",
    "exception",
    "pretty",
    "much",
    "okay",
    "music",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "hardware",
    "security",
    "modules",
    "also",
    "known",
    "hsm",
    "piece",
    "hardware",
    "designed",
    "store",
    "encryption",
    "keys",
    "holds",
    "keys",
    "memory",
    "never",
    "writes",
    "disk",
    "idea",
    "hsm",
    "shut",
    "uh",
    "key",
    "would",
    "gone",
    "would",
    "guarantee",
    "protection",
    "nobody",
    "could",
    "know",
    "take",
    "drive",
    "steal",
    "example",
    "hsm",
    "uh",
    "extremely",
    "expensive",
    "definitely",
    "want",
    "buy",
    "uh",
    "generally",
    "follow",
    "fips",
    "fips",
    "federal",
    "information",
    "processing",
    "standard",
    "us",
    "canadian",
    "government",
    "standard",
    "specifies",
    "security",
    "requirements",
    "cryptographic",
    "modules",
    "protect",
    "sensitive",
    "information",
    "fips",
    "something",
    "want",
    "definitely",
    "remember",
    "um",
    "two",
    "different",
    "um",
    "uh",
    "protocols",
    "actually",
    "bunch",
    "different",
    "uh",
    "fips",
    "versions",
    "fips",
    "142",
    "level",
    "two",
    "fips",
    "143",
    "level",
    "3",
    "let",
    "talk",
    "difference",
    "hsms",
    "going",
    "using",
    "fips",
    "142",
    "hyphen",
    "2",
    "level",
    "two",
    "compliant",
    "multiple",
    "customers",
    "virtually",
    "isolated",
    "hsm",
    "hsms",
    "single",
    "tenant",
    "going",
    "utilizing",
    "fips",
    "140",
    "hyphen",
    "2",
    "level",
    "three",
    "compliant",
    "single",
    "customer",
    "dedicated",
    "hsm",
    "reason",
    "two",
    "levels",
    "multiple",
    "tenants",
    "say",
    "oh",
    "right",
    "thing",
    "uh",
    "temper",
    "evidence",
    "see",
    "somebody",
    "trying",
    "break",
    "guarantee",
    "uh",
    "tamper",
    "proof",
    "level",
    "three",
    "tamper",
    "proof",
    "also",
    "uh",
    "fips",
    "140",
    "hyphen",
    "3",
    "new",
    "uh",
    "newer",
    "um",
    "standard",
    "uh",
    "cloud",
    "resources",
    "uh",
    "meet",
    "standard",
    "offer",
    "service",
    "uh",
    "fips",
    "142",
    "really",
    "good",
    "understand",
    "ones",
    "easy",
    "get",
    "fips",
    "1402",
    "level",
    "three",
    "mixed",
    "fips",
    "140",
    "hyphen",
    "3",
    "something",
    "always",
    "um",
    "hard",
    "time",
    "uh",
    "remembering",
    "distinguishing",
    "two",
    "using",
    "ads",
    "key",
    "management",
    "service",
    "single",
    "tenant",
    "using",
    "adus",
    "cloud",
    "hsm",
    "time",
    "really",
    "using",
    "cloud",
    "hsm",
    "large",
    "enterprise",
    "need",
    "regulatory",
    "compliance",
    "getting",
    "fips",
    "140",
    "hi",
    "2",
    "level",
    "three",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "key",
    "management",
    "service",
    "also",
    "known",
    "kms",
    "manage",
    "service",
    "makes",
    "easy",
    "create",
    "control",
    "encryption",
    "keys",
    "use",
    "encrypt",
    "data",
    "kms",
    "hsm",
    "hardware",
    "security",
    "module",
    "many",
    "adaa",
    "services",
    "integrated",
    "use",
    "kms",
    "toc",
    "data",
    "simple",
    "checkbox",
    "k",
    "kms",
    "uses",
    "envelope",
    "encryption",
    "example",
    "simple",
    "checkbox",
    "case",
    "rds",
    "choose",
    "master",
    "key",
    "lot",
    "times",
    "ads",
    "default",
    "uh",
    "key",
    "managed",
    "free",
    "use",
    "really",
    "great",
    "uh",
    "kms",
    "using",
    "envelope",
    "encryption",
    "encrypt",
    "data",
    "data",
    "protected",
    "protect",
    "encryption",
    "key",
    "encrypt",
    "data",
    "key",
    "master",
    "key",
    "additional",
    "layer",
    "security",
    "works",
    "make",
    "really",
    "clear",
    "data",
    "use",
    "key",
    "encrypt",
    "data",
    "need",
    "protect",
    "key",
    "use",
    "another",
    "key",
    "encrypt",
    "uh",
    "key",
    "forms",
    "envelope",
    "store",
    "uh",
    "master",
    "key",
    "kms",
    "one",
    "considered",
    "data",
    "key",
    "music",
    "right",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "going",
    "take",
    "look",
    "key",
    "management",
    "service",
    "also",
    "known",
    "kms",
    "type",
    "kms",
    "top",
    "pop",
    "kms",
    "way",
    "create",
    "keys",
    "use",
    "adus",
    "manage",
    "keys",
    "appear",
    "right",
    "away",
    "use",
    "services",
    "um",
    "adus",
    "generate",
    "manage",
    "keys",
    "free",
    "uh",
    "create",
    "keys",
    "um",
    "cost",
    "dollar",
    "go",
    "ahead",
    "create",
    "key",
    "choose",
    "whether",
    "symmetric",
    "asymmetric",
    "definitely",
    "learned",
    "course",
    "nice",
    "asymmetric",
    "make",
    "encrypt",
    "decrypt",
    "sign",
    "verify",
    "kind",
    "narrowing",
    "type",
    "key",
    "would",
    "use",
    "um",
    "know",
    "went",
    "symmetric",
    "go",
    "kind",
    "seeing",
    "enter",
    "uh",
    "actual",
    "material",
    "key",
    "um",
    "going",
    "keep",
    "clicking",
    "u",
    "custom",
    "key",
    "generally",
    "really",
    "need",
    "um",
    "know",
    "interesting",
    "set",
    "administrators",
    "say",
    "allowed",
    "administer",
    "key",
    "someone",
    "um",
    "allowed",
    "use",
    "key",
    "usually",
    "want",
    "keep",
    "two",
    "accounts",
    "separate",
    "want",
    "person",
    "administrating",
    "using",
    "key",
    "okay",
    "keep",
    "two",
    "separate",
    "would",
    "key",
    "policy",
    "change",
    "say",
    "rules",
    "allowed",
    "use",
    "um",
    "go",
    "hit",
    "finish",
    "custom",
    "key",
    "one",
    "thing",
    "possible",
    "rotate",
    "keys",
    "need",
    "um",
    "anyway",
    "want",
    "use",
    "canas",
    "built",
    "basically",
    "everything",
    "seen",
    "multiple",
    "times",
    "throughout",
    "course",
    "gone",
    "ec2",
    "go",
    "take",
    "peek",
    "different",
    "places",
    "gone",
    "go",
    "launch",
    "ec2",
    "instance",
    "go",
    "uh",
    "storage",
    "say",
    "select",
    "review",
    "next",
    "go",
    "storage",
    "notice",
    "using",
    "encryption",
    "right",
    "choose",
    "even",
    "custom",
    "key",
    "dynamo",
    "db",
    "anywhere",
    "else",
    "always",
    "something",
    "like",
    "checkbox",
    "choose",
    "key",
    "pretty",
    "much",
    "really",
    "kms",
    "easy",
    "use",
    "music",
    "go",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "going",
    "take",
    "look",
    "cloud",
    "hsm",
    "single",
    "tenant",
    "uh",
    "hsm",
    "service",
    "automates",
    "hardware",
    "provisioning",
    "software",
    "patching",
    "high",
    "availability",
    "backups",
    "idea",
    "adus",
    "cloud",
    "hsm",
    "developers",
    "interacting",
    "application",
    "interacting",
    "hsm",
    "client",
    "installed",
    "uh",
    "ec2",
    "instance",
    "access",
    "uh",
    "cloud",
    "hsm",
    "keys",
    "adus",
    "cloud",
    "hsm",
    "enables",
    "generate",
    "use",
    "encryption",
    "keys",
    "fips",
    "140",
    "hyphen",
    "2",
    "level",
    "3",
    "validated",
    "hardware",
    "built",
    "open",
    "hsm",
    "industry",
    "standards",
    "integrate",
    "things",
    "like",
    "pk",
    "uh",
    "cs1",
    "java",
    "cryptography",
    "uh",
    "extension",
    "jce",
    "microsoft",
    "crypto",
    "g",
    "libraries",
    "transfer",
    "keys",
    "commercial",
    "commercial",
    "hsm",
    "solutions",
    "make",
    "easy",
    "migrate",
    "keys",
    "ads",
    "configure",
    "ads",
    "kms",
    "use",
    "adus",
    "cloud",
    "hsm",
    "uh",
    "cluster",
    "custom",
    "uh",
    "key",
    "store",
    "rather",
    "default",
    "kms",
    "key",
    "store",
    "uh",
    "cloud",
    "hsm",
    "way",
    "expensive",
    "kms",
    "kms",
    "like",
    "free",
    "dollar",
    "per",
    "key",
    "cloud",
    "hsm",
    "fixed",
    "cost",
    "per",
    "month",
    "getting",
    "dedicated",
    "piece",
    "hardware",
    "um",
    "lot",
    "stuff",
    "around",
    "ad",
    "kms",
    "integration",
    "lot",
    "times",
    "really",
    "hard",
    "use",
    "well",
    "time",
    "really",
    "going",
    "using",
    "cloud",
    "hsm",
    "enterprise",
    "need",
    "meet",
    "fips",
    "140",
    "hyphen",
    "2",
    "level",
    "three",
    "compliancy",
    "music",
    "okay",
    "hey",
    "andrew",
    "brown",
    "exam",
    "pro",
    "taking",
    "look",
    "know",
    "initialism",
    "lot",
    "adus",
    "services",
    "concepts",
    "cloud",
    "technologies",
    "use",
    "initial",
    "isms",
    "kind",
    "shorten",
    "uh",
    "common",
    "things",
    "need",
    "use",
    "frequent",
    "basis",
    "going",
    "really",
    "help",
    "learn",
    "substitute",
    "uh",
    "seeing",
    "service",
    "name",
    "something",
    "particular",
    "going",
    "get",
    "content",
    "lot",
    "faster",
    "um",
    "wild",
    "going",
    "see",
    "place",
    "people",
    "going",
    "say",
    "full",
    "name",
    "going",
    "say",
    "initialism",
    "let",
    "go",
    "im",
    "identity",
    "access",
    "management",
    "s3",
    "simp",
    "le",
    "storage",
    "sws",
    "uh",
    "swf",
    "simple",
    "workflow",
    "service",
    "sns",
    "simple",
    "notification",
    "service",
    "sqs",
    "simple",
    "q",
    "service",
    "scs",
    "simple",
    "email",
    "service",
    "ssm",
    "simple",
    "systems",
    "manager",
    "uh",
    "know",
    "see",
    "name",
    "usually",
    "systems",
    "manager",
    "still",
    "use",
    "uh",
    "initialism",
    "ssm",
    "rds",
    "relational",
    "database",
    "service",
    "vpc",
    "virtual",
    "private",
    "cloud",
    "vpn",
    "virtual",
    "private",
    "network",
    "cfn",
    "cloud",
    "formation",
    "wf",
    "web",
    "application",
    "firewall",
    "common",
    "initialism",
    "adus",
    "outside",
    "well",
    "mq",
    "amazon",
    "active",
    "mq",
    "asg",
    "auto",
    "scaling",
    "groups",
    "tam",
    "technical",
    "account",
    "manager",
    "elb",
    "elastic",
    "load",
    "bouncer",
    "alb",
    "application",
    "load",
    "bouncer",
    "nlb",
    "network",
    "load",
    "bouncer",
    "g",
    "wlb",
    "gateway",
    "load",
    "balancer",
    "clb",
    "classic",
    "load",
    "balancer",
    "ec2",
    "elastic",
    "cloud",
    "cloud",
    "compute",
    "e",
    "cs",
    "elastic",
    "container",
    "service",
    "ecr",
    "elastic",
    "container",
    "repository",
    "ebs",
    "elastic",
    "block",
    "storage",
    "emr",
    "elastic",
    "map",
    "produce",
    "efs",
    "elastic",
    "fall",
    "store",
    "eb",
    "eb",
    "elastic",
    "beant",
    "stock",
    "es",
    "elastic",
    "search",
    "eeks",
    "elastic",
    "kuber",
    "netti",
    "service",
    "msk",
    "managed",
    "kofka",
    "service",
    "think",
    "got",
    "k",
    "backwards",
    "whatever",
    "reason",
    "msk",
    "uh",
    "uh",
    "ais",
    "resource",
    "manager",
    "known",
    "ram",
    "acm",
    "amazon",
    "certificate",
    "manager",
    "pol",
    "principal",
    "lease",
    "privilege",
    "concept",
    "service",
    "iot",
    "internet",
    "things",
    "service",
    "tech",
    "concept",
    "cloud",
    "concept",
    "ri",
    "reserved",
    "instances",
    "sure",
    "ones",
    "know",
    "top",
    "head",
    "uh",
    "uh",
    "usual",
    "use",
    "case",
    "uh",
    "day",
    "lot",
    "times",
    "probably",
    "end",
    "need",
    "remember",
    "asg",
    "elb",
    "um",
    "ec2",
    "s3",
    "things",
    "like",
    "music",
    "okay",
    "right",
    "let",
    "compare",
    "adus",
    "config",
    "app",
    "config",
    "config",
    "name",
    "two",
    "completely",
    "different",
    "services",
    "adus",
    "config",
    "app",
    "config",
    "adus",
    "config",
    "governance",
    "tool",
    "compliance",
    "code",
    "create",
    "rules",
    "check",
    "see",
    "resources",
    "configured",
    "way",
    "expect",
    "resource",
    "drifts",
    "expected",
    "configuration",
    "notified",
    "adus",
    "config",
    "auto",
    "remediate",
    "correct",
    "configuration",
    "back",
    "expected",
    "state",
    "app",
    "config",
    "used",
    "automate",
    "process",
    "deploying",
    "application",
    "configuration",
    "variable",
    "changes",
    "web",
    "application",
    "write",
    "validator",
    "ensure",
    "uh",
    "changed",
    "variable",
    "break",
    "web",
    "app",
    "uh",
    "monitor",
    "deployments",
    "automate",
    "integrations",
    "catch",
    "errors",
    "roll",
    "backs",
    "config",
    "compliance",
    "governance",
    "app",
    "config",
    "conf",
    "application",
    "configur",
    "configuration",
    "varibles",
    "music",
    "go",
    "well",
    "let",
    "us",
    "take",
    "look",
    "sns",
    "versus",
    "sqs",
    "uh",
    "things",
    "something",
    "common",
    "connect",
    "apps",
    "via",
    "messages",
    "uh",
    "application",
    "integration",
    "let",
    "take",
    "look",
    "sns",
    "simple",
    "notification",
    "service",
    "simple",
    "q",
    "service",
    "okay",
    "sns",
    "intended",
    "pass",
    "along",
    "messages",
    "via",
    "pub",
    "sub",
    "model",
    "whereas",
    "sqs",
    "cues",
    "messages",
    "guaranteed",
    "delivery",
    "idea",
    "sns",
    "send",
    "notifications",
    "subscribers",
    "topics",
    "via",
    "multiple",
    "protocols",
    "h",
    "http",
    "email",
    "sqs",
    "sms",
    "sns",
    "generally",
    "used",
    "sending",
    "plane",
    "text",
    "emails",
    "triggered",
    "via",
    "aab",
    "services",
    "best",
    "example",
    "billing",
    "alarms",
    "know",
    "mentioned",
    "like",
    "repeat",
    "absolutely",
    "know",
    "uh",
    "retry",
    "sending",
    "case",
    "failures",
    "https",
    "retry",
    "attempt",
    "mean",
    "guarantee",
    "delivery",
    "really",
    "good",
    "web",
    "hooks",
    "simple",
    "internal",
    "emails",
    "triggering",
    "lambda",
    "functions",
    "compare",
    "third",
    "party",
    "services",
    "similar",
    "pusher",
    "uh",
    "pubnub",
    "sqs",
    "uh",
    "idea",
    "messages",
    "placed",
    "queue",
    "applications",
    "pull",
    "queue",
    "using",
    "itus",
    "sdk",
    "uh",
    "uh",
    "retain",
    "message",
    "14",
    "days",
    "send",
    "sequential",
    "order",
    "sequential",
    "order",
    "parallel",
    "ensure",
    "one",
    "message",
    "sent",
    "ensure",
    "messages",
    "delivered",
    "least",
    "really",
    "good",
    "delayed",
    "tasks",
    "queuing",
    "emails",
    "um",
    "comparable",
    "uh",
    "stuff",
    "would",
    "something",
    "like",
    "rabbit",
    "mq",
    "uh",
    "ruby",
    "rails",
    "sidekick",
    "music",
    "okay",
    "hey",
    "andy",
    "brown",
    "exam",
    "pro",
    "variation",
    "study",
    "sns",
    "versus",
    "scs",
    "versus",
    "pinpoint",
    "versus",
    "workmail",
    "sns",
    "scs",
    "get",
    "confused",
    "uh",
    "quite",
    "often",
    "services",
    "uh",
    "something",
    "common",
    "send",
    "emails",
    "uh",
    "utility",
    "email",
    "completely",
    "different",
    "one",
    "first",
    "one",
    "simple",
    "notification",
    "service",
    "practical",
    "internal",
    "emails",
    "send",
    "notifications",
    "subscribers",
    "topics",
    "via",
    "multiple",
    "protocols",
    "email",
    "handle",
    "http",
    "send",
    "sqs",
    "send",
    "sns",
    "sms",
    "messages",
    "um",
    "messages",
    "phone",
    "um",
    "uh",
    "send",
    "emails",
    "sns",
    "generally",
    "used",
    "sending",
    "plain",
    "text",
    "emails",
    "triggered",
    "via",
    "services",
    "best",
    "example",
    "building",
    "alarm",
    "exam",
    "questions",
    "going",
    "talking",
    "sns",
    "lots",
    "services",
    "trigger",
    "um",
    "sns",
    "notifications",
    "idea",
    "like",
    "oh",
    "um",
    "know",
    "somebody",
    "spend",
    "server",
    "send",
    "email",
    "via",
    "sns",
    "uh",
    "spend",
    "much",
    "money",
    "know",
    "sorts",
    "things",
    "go",
    "sns",
    "send",
    "emails",
    "need",
    "know",
    "topics",
    "subscriptions",
    "regarding",
    "sns",
    "sces",
    "simple",
    "email",
    "service",
    "transactional",
    "emails",
    "say",
    "transaction",
    "emails",
    "talking",
    "emails",
    "triggered",
    "based",
    "inapp",
    "action",
    "sign",
    "reset",
    "password",
    "invoices",
    "um",
    "email",
    "service",
    "similar",
    "would",
    "like",
    "send",
    "grid",
    "scs",
    "sends",
    "html",
    "emails",
    "uh",
    "sns",
    "distinction",
    "scs",
    "html",
    "plain",
    "text",
    "sns",
    "plain",
    "text",
    "would",
    "use",
    "sns",
    "transactional",
    "emails",
    "scs",
    "receive",
    "inbound",
    "emails",
    "scs",
    "create",
    "email",
    "templates",
    "custom",
    "domain",
    "name",
    "emails",
    "use",
    "sns",
    "whatever",
    "amazon",
    "gives",
    "going",
    "weird",
    "address",
    "scs",
    "whatever",
    "custom",
    "domain",
    "want",
    "also",
    "monitor",
    "email",
    "reputation",
    "scs",
    "amazon",
    "pinpoint",
    "promotional",
    "emails",
    "say",
    "promotional",
    "talking",
    "emails",
    "marketing",
    "create",
    "email",
    "campaigns",
    "segment",
    "contacts",
    "create",
    "customer",
    "journeys",
    "via",
    "emails",
    "um",
    "email",
    "testing",
    "sces",
    "pinpoint",
    "get",
    "mixed",
    "lot",
    "people",
    "think",
    "well",
    "use",
    "transaction",
    "emails",
    "promotion",
    "emails",
    "absolutely",
    "recommended",
    "um",
    "know",
    "pinpoint",
    "lot",
    "functionality",
    "around",
    "promotional",
    "emails",
    "built",
    "differently",
    "uh",
    "know",
    "understand",
    "two",
    "overlapping",
    "responsibilities",
    "generally",
    "use",
    "amazon",
    "workmail",
    "email",
    "web",
    "client",
    "similar",
    "gmail",
    "outlook",
    "create",
    "company",
    "emails",
    "read",
    "write",
    "send",
    "emails",
    "web",
    "client",
    "within",
    "adus",
    "management",
    "console",
    "music",
    "go",
    "let",
    "us",
    "compare",
    "amazon",
    "inspector",
    "versus",
    "adus",
    "trusted",
    "advisor",
    "security",
    "tools",
    "perform",
    "audits",
    "slightly",
    "different",
    "amazon",
    "inspector",
    "audits",
    "single",
    "ec2",
    "instance",
    "selected",
    "suppose",
    "could",
    "select",
    "multiple",
    "e2s",
    "generates",
    "report",
    "long",
    "list",
    "security",
    "checks",
    "um",
    "trusted",
    "advisor",
    "checks",
    "uh",
    "key",
    "difference",
    "generate",
    "pdf",
    "report",
    "though",
    "sure",
    "could",
    "export",
    "csv",
    "data",
    "wanted",
    "turn",
    "report",
    "uh",
    "gives",
    "holistic",
    "view",
    "recommendations",
    "across",
    "multiple",
    "services",
    "best",
    "practices",
    "example",
    "open",
    "port",
    "security",
    "groups",
    "tell",
    "enable",
    "mfa",
    "root",
    "account",
    "using",
    "trusted",
    "advisor",
    "things",
    "like",
    "um",
    "one",
    "thing",
    "though",
    "trust",
    "advisor",
    "security",
    "checks",
    "across",
    "um",
    "uh",
    "five",
    "different",
    "things",
    "um",
    "security",
    "technically",
    "checks",
    "music",
    "okay",
    "services",
    "connected",
    "name",
    "think",
    "related",
    "way",
    "absolutely",
    "even",
    "similar",
    "functionality",
    "let",
    "take",
    "look",
    "know",
    "difference",
    "first",
    "direct",
    "connect",
    "dedicated",
    "fiber",
    "optics",
    "connection",
    "data",
    "center",
    "tows",
    "intended",
    "large",
    "enterprises",
    "data",
    "center",
    "need",
    "insanely",
    "fast",
    "private",
    "connection",
    "directly",
    "uh",
    "aws",
    "notice",
    "give",
    "private",
    "empasis",
    "need",
    "secure",
    "connection",
    "need",
    "apply",
    "uh",
    "adus",
    "virtual",
    "private",
    "network",
    "connection",
    "top",
    "direct",
    "connect",
    "amazon",
    "connect",
    "call",
    "center",
    "service",
    "get",
    "number",
    "accept",
    "inbound",
    "outbound",
    "calls",
    "set",
    "automated",
    "phone",
    "systems",
    "uh",
    "ever",
    "heard",
    "interactive",
    "voice",
    "system",
    "ivs",
    "basically",
    "amazon",
    "connect",
    "media",
    "connect",
    "new",
    "version",
    "elastic",
    "transcoder",
    "converts",
    "videos",
    "different",
    "video",
    "types",
    "let",
    "say",
    "th",
    "videos",
    "need",
    "transcode",
    "different",
    "video",
    "formats",
    "maybe",
    "need",
    "apply",
    "watermarks",
    "insert",
    "introduction",
    "videos",
    "front",
    "one",
    "uh",
    "use",
    "media",
    "connect",
    "music",
    "okay",
    "case",
    "see",
    "elastic",
    "transcoder",
    "option",
    "want",
    "know",
    "compared",
    "media",
    "connect",
    "services",
    "used",
    "transcoding",
    "technically",
    "elastic",
    "transcoder",
    "old",
    "way",
    "itab",
    "elemental",
    "media",
    "convert",
    "media",
    "convert",
    "new",
    "way",
    "elastic",
    "transcoder",
    "original",
    "transcoding",
    "service",
    "may",
    "still",
    "promatic",
    "apis",
    "workflows",
    "available",
    "media",
    "convert",
    "could",
    "reasons",
    "see",
    "legacy",
    "customers",
    "still",
    "using",
    "know",
    "much",
    "effort",
    "upgrade",
    "new",
    "one",
    "transcodes",
    "videos",
    "streaming",
    "formats",
    "uh",
    "media",
    "convert",
    "robust",
    "transcoding",
    "service",
    "perform",
    "various",
    "operations",
    "transcoding",
    "also",
    "transcodes",
    "videos",
    "streaming",
    "different",
    "streaming",
    "formats",
    "overlays",
    "images",
    "inserts",
    "uh",
    "video",
    "clips",
    "extracts",
    "captions",
    "data",
    "robust",
    "ui",
    "generally",
    "recommended",
    "use",
    "uh",
    "media",
    "convert",
    "terms",
    "costs",
    "basically",
    "reason",
    "use",
    "media",
    "convert",
    "music",
    "okay",
    "artifact",
    "versus",
    "amazon",
    "inspector",
    "get",
    "commonly",
    "mixed",
    "time",
    "artifact",
    "inspector",
    "compal",
    "pdf",
    "reports",
    "confusion",
    "comes",
    "let",
    "talk",
    "different",
    "reports",
    "abus",
    "artifact",
    "abus",
    "inspector",
    "artifact",
    "answering",
    "enterprise",
    "trust",
    "aws",
    "generates",
    "security",
    "report",
    "based",
    "global",
    "compliance",
    "framework",
    "sock",
    "pci",
    "variety",
    "others",
    "amazon",
    "inspector",
    "know",
    "ec2",
    "instance",
    "secure",
    "prove",
    "runs",
    "script",
    "analyzes",
    "ec2",
    "instance",
    "generates",
    "pdf",
    "report",
    "telling",
    "security",
    "checks",
    "passed",
    "um",
    "idea",
    "audit",
    "tool",
    "security",
    "p2",
    "instances",
    "music",
    "go",
    "let",
    "us",
    "compare",
    "elb",
    "versus",
    "alb",
    "versus",
    "nlb",
    "versus",
    "j",
    "wlb",
    "versus",
    "clb",
    "uh",
    "know",
    "first",
    "learning",
    "aws",
    "getting",
    "confused",
    "elastic",
    "load",
    "balancer",
    "ones",
    "gives",
    "right",
    "happening",
    "main",
    "service",
    "called",
    "elastic",
    "load",
    "balancer",
    "elb",
    "four",
    "different",
    "types",
    "possible",
    "load",
    "bal",
    "bouncers",
    "go",
    "types",
    "first",
    "application",
    "load",
    "bouncer",
    "commonly",
    "uh",
    "initialized",
    "alb",
    "operates",
    "layer",
    "7",
    "https",
    "makes",
    "sense",
    "application",
    "layer",
    "special",
    "powers",
    "terms",
    "routing",
    "rules",
    "idea",
    "create",
    "rules",
    "change",
    "routing",
    "based",
    "information",
    "found",
    "within",
    "htps",
    "request",
    "let",
    "say",
    "wanted",
    "uh",
    "routes",
    "go",
    "particular",
    "subdomain",
    "server",
    "different",
    "sub",
    "domain",
    "another",
    "one",
    "could",
    "application",
    "load",
    "balancer",
    "uh",
    "attach",
    "web",
    "application",
    "firewall",
    "protection",
    "ca",
    "attach",
    "nlb",
    "ones",
    "application",
    "based",
    "little",
    "caveat",
    "network",
    "load",
    "bouncer",
    "uh",
    "commonly",
    "abbreviated",
    "nlb",
    "operates",
    "layer",
    "three",
    "four",
    "talking",
    "tcp",
    "udp",
    "great",
    "extreme",
    "performance",
    "requires",
    "tcp",
    "tls",
    "traffic",
    "capable",
    "handling",
    "millions",
    "requests",
    "per",
    "seconds",
    "uh",
    "maintaining",
    "ultra",
    "low",
    "latency",
    "optimized",
    "sudden",
    "volatile",
    "traffic",
    "patterns",
    "using",
    "single",
    "static",
    "ip",
    "address",
    "per",
    "availability",
    "zone",
    "uh",
    "making",
    "video",
    "games",
    "like",
    "use",
    "network",
    "load",
    "balcer",
    "utilities",
    "outside",
    "gateway",
    "load",
    "bouncer",
    "g",
    "wlb",
    "need",
    "deploy",
    "fleet",
    "virtual",
    "appliances",
    "support",
    "uh",
    "know",
    "say",
    "abbreviation",
    "uh",
    "say",
    "g",
    "ne",
    "v",
    "um",
    "much",
    "need",
    "know",
    "outside",
    "okay",
    "classic",
    "load",
    "balancer",
    "uh",
    "commonly",
    "initializes",
    "clb",
    "operates",
    "layer",
    "3",
    "four",
    "7",
    "intended",
    "applications",
    "built",
    "within",
    "ec2",
    "classic",
    "network",
    "support",
    "target",
    "groups",
    "albs",
    "nlbs",
    "uh",
    "use",
    "target",
    "groups",
    "easier",
    "way",
    "grouping",
    "together",
    "um",
    "bunch",
    "uh",
    "target",
    "resources",
    "like",
    "compute",
    "uh",
    "going",
    "load",
    "balance",
    "classic",
    "load",
    "balance",
    "directly",
    "assign",
    "ec2",
    "instances",
    "uh",
    "going",
    "retired",
    "august",
    "15th",
    "2022",
    "yeah",
    "looks",
    "like",
    "lot",
    "stuff",
    "um",
    "also",
    "superpowers",
    "specialized",
    "ones",
    "uh",
    "reason",
    "keep",
    "around",
    "generally",
    "using",
    "um",
    "yeah"
  ],
  "keywords": [
    "hey",
    "andrew",
    "brown",
    "free",
    "another",
    "cloud",
    "certification",
    "study",
    "course",
    "time",
    "looking",
    "ads",
    "practitioner",
    "also",
    "known",
    "way",
    "going",
    "content",
    "always",
    "provide",
    "full",
    "practice",
    "exam",
    "best",
    "support",
    "uh",
    "like",
    "one",
    "purchase",
    "additional",
    "help",
    "allow",
    "great",
    "know",
    "really",
    "point",
    "bit",
    "everything",
    "looked",
    "azure",
    "name",
    "see",
    "class",
    "next",
    "video",
    "music",
    "start",
    "asking",
    "important",
    "question",
    "first",
    "adus",
    "well",
    "ad",
    "things",
    "talking",
    "deployment",
    "models",
    "close",
    "look",
    "core",
    "services",
    "would",
    "compute",
    "storage",
    "network",
    "databases",
    "quick",
    "amount",
    "functionality",
    "around",
    "identity",
    "security",
    "billing",
    "pricing",
    "lot",
    "stuff",
    "get",
    "even",
    "guide",
    "yeah",
    "um",
    "code",
    "old",
    "new",
    "may",
    "right",
    "often",
    "people",
    "want",
    "ways",
    "service",
    "provider",
    "world",
    "common",
    "starting",
    "utilize",
    "say",
    "good",
    "consider",
    "learning",
    "management",
    "level",
    "need",
    "information",
    "migration",
    "solutions",
    "architect",
    "needs",
    "refresh",
    "knowledge",
    "working",
    "multiple",
    "come",
    "back",
    "changed",
    "easy",
    "value",
    "provides",
    "view",
    "possible",
    "architecture",
    "describe",
    "idea",
    "big",
    "thinking",
    "itus",
    "changes",
    "understand",
    "process",
    "much",
    "recommend",
    "build",
    "workloads",
    "trying",
    "technical",
    "role",
    "developer",
    "roles",
    "could",
    "short",
    "list",
    "found",
    "certifications",
    "recommended",
    "go",
    "solution",
    "set",
    "make",
    "give",
    "terms",
    "notice",
    "data",
    "small",
    "came",
    "hard",
    "place",
    "diagram",
    "different",
    "work",
    "generally",
    "map",
    "particular",
    "getting",
    "pen",
    "similar",
    "scope",
    "whereas",
    "think",
    "three",
    "find",
    "makes",
    "sense",
    "leave",
    "ones",
    "let",
    "google",
    "associate",
    "call",
    "feel",
    "take",
    "decide",
    "works",
    "various",
    "clear",
    "programming",
    "necessarily",
    "many",
    "skills",
    "required",
    "purpose",
    "supposed",
    "specifically",
    "us",
    "sure",
    "somewhere",
    "else",
    "try",
    "something",
    "okay",
    "long",
    "pass",
    "depends",
    "probably",
    "30",
    "hours",
    "someone",
    "never",
    "used",
    "bus",
    "low",
    "already",
    "anything",
    "problem",
    "says",
    "experience",
    "coming",
    "kind",
    "adabs",
    "technology",
    "might",
    "offerings",
    "yes",
    "basically",
    "50",
    "forget",
    "part",
    "two",
    "day",
    "days",
    "still",
    "watch",
    "videos",
    "key",
    "based",
    "test",
    "follow",
    "within",
    "account",
    "difference",
    "real",
    "absolutely",
    "money",
    "least",
    "looks",
    "zero",
    "talk",
    "four",
    "domain",
    "waiting",
    "determine",
    "questions",
    "show",
    "15",
    "compliance",
    "quite",
    "high",
    "thing",
    "definitely",
    "12",
    "range",
    "center",
    "online",
    "centers",
    "less",
    "building",
    "via",
    "system",
    "install",
    "computer",
    "partner",
    "anymore",
    "added",
    "option",
    "project",
    "means",
    "taking",
    "check",
    "ask",
    "issue",
    "anyway",
    "points",
    "providers",
    "use",
    "mean",
    "exactly",
    "types",
    "sounds",
    "reason",
    "maybe",
    "testing",
    "top",
    "wrong",
    "submit",
    "guess",
    "choice",
    "users",
    "keep",
    "cool",
    "remember",
    "minutes",
    "per",
    "90",
    "saying",
    "takes",
    "showing",
    "prior",
    "months",
    "3",
    "every",
    "year",
    "inabus",
    "nice",
    "though",
    "allows",
    "cost",
    "pretty",
    "actual",
    "page",
    "website",
    "pull",
    "cover",
    "useful",
    "changing",
    "marketing",
    "100",
    "document",
    "job",
    "route",
    "drop",
    "scroll",
    "got",
    "click",
    "open",
    "ab",
    "making",
    "confirm",
    "ability",
    "following",
    "task",
    "identify",
    "whether",
    "fact",
    "ca",
    "able",
    "limits",
    "target",
    "order",
    "six",
    "design",
    "said",
    "put",
    "concept",
    "tasks",
    "load",
    "performance",
    "actually",
    "architectural",
    "ever",
    "case",
    "comes",
    "starts",
    "learn",
    "end",
    "example",
    "second",
    "single",
    "large",
    "benefits",
    "section",
    "scale",
    "global",
    "infrastructure",
    "advantages",
    "availability",
    "group",
    "little",
    "principles",
    "abus",
    "framework",
    "last",
    "add",
    "totally",
    "fine",
    "white",
    "thought",
    "term",
    "snowball",
    "savings",
    "moving",
    "premise",
    "bring",
    "basic",
    "slide",
    "scaling",
    "definition",
    "lets",
    "automate",
    "whole",
    "shared",
    "responsibility",
    "model",
    "customers",
    "workload",
    "resource",
    "adab",
    "customer",
    "share",
    "shift",
    "governance",
    "directly",
    "logs",
    "associated",
    "locations",
    "secure",
    "resources",
    "encryption",
    "options",
    "s3",
    "fips",
    "specific",
    "general",
    "requirements",
    "vary",
    "im",
    "root",
    "separate",
    "sign",
    "adis",
    "access",
    "keys",
    "password",
    "policies",
    "manager",
    "systems",
    "bunch",
    "components",
    "features",
    "groups",
    "gets",
    "went",
    "reduce",
    "whatever",
    "deleted",
    "made",
    "numbers",
    "update",
    "change",
    "using",
    "ai",
    "generate",
    "better",
    "stick",
    "hopefully",
    "gives",
    "pro",
    "credit",
    "card",
    "available",
    "couple",
    "plans",
    "seven",
    "trusted",
    "advisor",
    "checks",
    "tell",
    "wants",
    "os",
    "store",
    "must",
    "regulatory",
    "sorry",
    "select",
    "cases",
    "wanted",
    "everyone",
    "platform",
    "type",
    "appear",
    "called",
    "believe",
    "read",
    "company",
    "business",
    "include",
    "sets",
    "enter",
    "aware",
    "unique",
    "across",
    "tier",
    "sometimes",
    "along",
    "simple",
    "deployed",
    "bucket",
    "tool",
    "perform",
    "button",
    "run",
    "obviously",
    "id",
    "region",
    "deploying",
    "log",
    "moment",
    "fill",
    "accounts",
    "developers",
    "created",
    "ahead",
    "create",
    "shows",
    "east",
    "central",
    "canada",
    "deploy",
    "copy",
    "corner",
    "1",
    "fun",
    "hand",
    "side",
    "paste",
    "user",
    "formation",
    "template",
    "hit",
    "save",
    "wait",
    "either",
    "download",
    "cli",
    "command",
    "easier",
    "aws",
    "fast",
    "left",
    "shell",
    "ebs",
    "happens",
    "line",
    "review",
    "url",
    "credentials",
    "stack",
    "done",
    "creating",
    "correct",
    "today",
    "cuz",
    "delete",
    "roll",
    "oh",
    "north",
    "regions",
    "edit",
    "c",
    "permissions",
    "api",
    "buckets",
    "quickly",
    "underneath",
    "reference",
    "running",
    "json",
    "period",
    "super",
    "file",
    "files",
    "commands",
    "screen",
    "usually",
    "gone",
    "computing",
    "servers",
    "internet",
    "manage",
    "local",
    "server",
    "pay",
    "responsible",
    "care",
    "host",
    "web",
    "app",
    "dedicated",
    "physical",
    "machine",
    "site",
    "imagine",
    "expensive",
    "hardware",
    "connection",
    "guarantee",
    "away",
    "specialized",
    "virtual",
    "private",
    "virtualization",
    "apps",
    "folder",
    "limited",
    "meaning",
    "machines",
    "distributed",
    "scalable",
    "highly",
    "amazon",
    "started",
    "interesting",
    "table",
    "digital",
    "streaming",
    "market",
    "current",
    "focus",
    "space",
    "calls",
    "commonly",
    "collection",
    "together",
    "launched",
    "technically",
    "csp",
    "q",
    "sqs",
    "later",
    "elastic",
    "ec2",
    "offering",
    "program",
    "writing",
    "expand",
    "sdk",
    "console",
    "usage",
    "hour",
    "memory",
    "monitoring",
    "built",
    "action",
    "trail",
    "networking",
    "write",
    "application",
    "bouncer",
    "r",
    "ui",
    "meet",
    "2",
    "microsoft",
    "china",
    "considered",
    "popular",
    "companies",
    "ml",
    "enterprise",
    "managed",
    "existing",
    "oracle",
    "play",
    "organizations",
    "light",
    "turn",
    "saw",
    "serverless",
    "kubernetes",
    "cluster",
    "event",
    "expect",
    "smaller",
    "organization",
    "complex",
    "software",
    "apachi",
    "source",
    "reports",
    "seen",
    "move",
    "etc",
    "yet",
    "latest",
    "curious",
    "applications",
    "programs",
    "drive",
    "database",
    "rds",
    "sql",
    "vpc",
    "outside",
    "integration",
    "containers",
    "tools",
    "media",
    "transfer",
    "mobile",
    "price",
    "documentation",
    "deep",
    "utilizing",
    "choose",
    "times",
    "bare",
    "metal",
    "control",
    "hypervisor",
    "upfront",
    "capacity",
    "operating",
    "underlying",
    "layer",
    "paying",
    "uses",
    "export",
    "images",
    "instead",
    "docker",
    "container",
    "easily",
    "without",
    "functions",
    "step",
    "runtime",
    "ruby",
    "python",
    "upload",
    "nothing",
    "effective",
    "cold",
    "spin",
    "requests",
    "worry",
    "examples",
    "word",
    "designed",
    "provisioning",
    "launch",
    "public",
    "instance",
    "direct",
    "grab",
    "fully",
    "size",
    "government",
    "link",
    "email",
    "emails",
    "complicated",
    "traditional",
    "settings",
    "logging",
    "stands",
    "dashboard",
    "mfa",
    "remove",
    "enable",
    "custom",
    "almost",
    "checkbox",
    "filter",
    "apply",
    "power",
    "tags",
    "defined",
    "whoops",
    "default",
    "u",
    "original",
    "matter",
    "cloudfront",
    "jump",
    "happen",
    "month",
    "launching",
    "turned",
    "bill",
    "spend",
    "costs",
    "query",
    "alerts",
    "budget",
    "protect",
    "budgets",
    "10",
    "daily",
    "monitor",
    "actions",
    "since",
    "monthly",
    "configure",
    "sns",
    "alarm",
    "versus",
    "alarms",
    "advantage",
    "t2",
    "micro",
    "linux",
    "red",
    "details",
    "hyphen",
    "limit",
    "seeing",
    "cloudwatch",
    "metrics",
    "interface",
    "metric",
    "inside",
    "configuration",
    "state",
    "autoscaling",
    "special",
    "device",
    "double",
    "phone",
    "installed",
    "ready",
    "number",
    "demand",
    "stop",
    "define",
    "team",
    "sub",
    "faster",
    "rid",
    "edge",
    "variety",
    "processing",
    "detailed",
    "reach",
    "five",
    "fault",
    "disaster",
    "recovery",
    "destroy",
    "increase",
    "operations",
    "latency",
    "backup",
    "aus",
    "zones",
    "wavelength",
    "active",
    "zone",
    "ensure",
    "isolated",
    "location",
    "regional",
    "subnet",
    "subnets",
    "traffic",
    "instances",
    "failure",
    "rack",
    "compare",
    "language",
    "risk",
    "issues",
    "networks",
    "ip",
    "send",
    "connect",
    "balancer",
    "allowed",
    "controls",
    "config",
    "policy",
    "rules",
    "auto",
    "deny",
    "organizational",
    "version",
    "license",
    "firewall",
    "attributes",
    "credits",
    "managing",
    "ami",
    "image",
    "standard",
    "intel",
    "marketplace",
    "figure",
    "balcer",
    "automatically",
    "plan",
    "restore",
    "pilot",
    "detail",
    "structure",
    "third",
    "party",
    "dos",
    "environment",
    "templates",
    "versions",
    "family",
    "ssm",
    "beanock",
    "production",
    "request",
    "search",
    "health",
    "block",
    "events",
    "specify",
    "happening",
    "powershell",
    "windows",
    "text",
    "objects",
    "supports",
    "output",
    "function",
    "repository",
    "trust",
    "object",
    "ls",
    "address",
    "hello",
    "oops",
    "runs",
    "tables",
    "directory",
    "profile",
    "cloud9",
    "ssh",
    "client",
    "analyze",
    "pseudo",
    "sessions",
    "cdk",
    "sample",
    "explorer",
    "ecs",
    "tutorial",
    "html",
    "volume",
    "protection",
    "guard",
    "duty",
    "spot",
    "attach",
    "lambda",
    "fargate",
    "frameworks",
    "pair",
    "greater",
    "tag",
    "port",
    "pairs",
    "gateway",
    "dynamo",
    "db",
    "desktop",
    "efs",
    "devices",
    "reserved",
    "protocol",
    "mount",
    "snow",
    "stores",
    "kms",
    "rule",
    "practices",
    "zip",
    "reboot",
    "relational",
    "aurora",
    "stream",
    "addresses",
    "restart",
    "ri",
    "messages",
    "compliant",
    "architected",
    "sla",
    "operational",
    "report",
    "gpus",
    "nvidia",
    "estimate",
    "hsm"
  ]
}