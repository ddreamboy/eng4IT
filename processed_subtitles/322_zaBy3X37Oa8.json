{
  "text": "so you're in the gym lifting weights\nhidden pbs doing deadlifts and\noccasionally staring over that massive\ndude in the squat rack but there's\nsomething missing you guessed it\nmachine learning in this episode of code\nthat we are going to be building our\nvery own\ndeadlift machine learning application\nwith python in 15 minutes\nwhat's happening guys welcome to another\nepisode of code that as i mentioned in\nthis episode we are going to be building\nour very own python machine learning\napplication now whilst we're going to be\ndoing it for deadlifts you could extend\nthis out to a bunch of different types\nof exercises in fact we recently did a\nlive stream where i showed how to extend\nthis out to different types of exercises\nas well as form tracking but back to\ncode that in this episode we're going to\nbe building out this app and as per\nusual we need a couple of rules first\nand foremost i'm not going to be allowed\nto take a look at any existing code or\nany documentation if i do it's a one\nminute time penalty\nnow we need a couple of constraints\nnamely the time limit for this\nparticular task we are going to be\nsetting a time limit of 15 minutes there\nis a ton of code to come into this\nso 15 minutes is going to be fun now as\nper usual we need a couple of penalties\nso what happens if i don't hit that 15\nminute time limit well it is going to be\na 50 amazon gift card to you guys so\nwithout further ado ready to do it let's\nget to it alrighty guys let's get ready\nto do this 15 minutes on the clock\nlet's go\nokay so the first thing that we're going\nto need to do is import tkinter so\ntkinter is\na\npython library that allows you to build\ninterfaces and we're also going to\nimport custom ting tkinter as ck all\nright then we need to import some\ndependencies python so import pandas as\npd so that's going to help us work with\nour data frame so we're going to import\nnumpy and that's just going to help us\nwith some data transformation then we\nare going to import pickle\nso we're going to use pickle to load up\nthe machine learning model so it's\ncalled deadlift.pickle so we're going to\nbe able to load that up okay so we've\nimported those then we're going to need\nmedia pipe the media pipe is going to\nallow us to do our pose tracking we are\ngoing to import\ncv2 which is open cv and then we're\ngoing to import some stuff from peel so\nour pillow so from pillow import uh\nimage\nimage tk\ni did a bit of practice for this one\nguys and it was cutting it close all\nright so then that's that done then we\nneed to from landmarks import\nlandmark this is just a set of column\nnames so over here you can see i've got\nall of the different coordinate names\nthere's nothing special in there okay so\nthose are our base dependencies now\nimported now we need to create the\nwindow for uh\ntkinter so i'm going to set t window\nequals tk.t\nk\nand then we can go window.geometry\nreally need to um do some\ntyping practice a 480 by 700 that's\ngoing to be the size of the window and\nthen we can set the title\nby setting window.title and we're going\nto call it swoo boy\nand then we're going to use custom\ntkinta to set the appearance mode to\ndark i think this just makes it look a\nlittle bit better and then we can type\nin window.mainloop\nit should start mean loop oh\nuh all right and then we can kick this\noff so this should give us a little pop\nup and down the bottom i cannot import\nlandmark from landmarks\ncould be from landmark\noh\n[Music]\nno\ni don't have time for errors\nall right\nall right cool so that's our base app\nright so it's square magic right okay\nnow what we need to do is create a\ncouple of labels so we're going to have\na class label\ncounter label\nand a probability label\nso these are going to be the titles for\nour boxes and then class\nbox counter\nbox\nand then a prob\nbox\nokay all right\nand then we need to do a little vs code\nmagic multiple cursors boom boom boom\nboom equals ck dot ctk label\nand then we're going to assign window to\nthat and then height equals 120\nthis looks so cool i saw python engineer\ndo this recently a python engineer one\nof those guys doing the scanner things\noh wait with should be 120\nheight should be\n40. so this just defines how big each\none of these and then text and the score\nfont is going to be equal to\non\narial\nand then size 20 and then text\nunderscore color\ngoing to be equal to black\nthen we can close that and then we need\nto run\nuh\ndot\nconfigure\nactually dot place\nthis just dictates the position and\nwe're gonna set y equal to i don't know\nlike one to begin with\nand then we need to do that again and we\nneed to configure i know why are they\ntabbing in\ndot configure and we uh so configure is\nbasically going to dictate what we\nactually what shows up in those labels\nall right so we've got a couple of\nissues there\nlet me zoom out a little bit so you can\nsee that okay and then we're going to\nset pad x equal to 10\nfor these three down here\nand i'll show you what this looks like\nin a sec so this is going to be the\nlabel for class\nit's going to be the reps actually we'll\ncall this stage\nand this is going to be the label for\nprobability\nokay and then\nuh we need to spread them across so this\nshould be 160 i think\nvaguely spread out\nokay that looks good that looks good all\nright and then we need to set the\nforeground color fg color\nequal to blue\nbeautiful all right kill that's looking\ngood and then we need to spread these\nout as well so x\nso we'll put them in line with those\nlabels you'll see this in a sec 300 and\nthen we're going to tab bring these down\na little bit so the\nplace allows us to dictate the position\nso if it's height 40 so let's make it\n41.\num boom all right cool that's looking\ngood and then we can run this again\nright so you can see we've got three\nboxes there so stage reps prob and then\nwe've got three different boxes we're\ngoing to be able to update these\ndynamically when we actually build our\nmachine learning model all right cool\nnext thing we need to do is we need to\ncreate a button to reset our counter so\nfirst\nto create a function so def reset\ncounter\nand we're going to grab the global\nvariable counter\nand set it equal to zero\nand then we need to create a button so\nbutton equals ck dot\nctk button\nand then we can basically just copy\neverything from\nthis particular label\nand that's going to be our button two\nbutton we need to pass through specify\nwhat the button is going to be called so\nwe'll just call it reset\nso that will dictate the text and then\nwe need to pass through what command we\nwant to trigger when we go and hit that\nbutton so we can pass through command\nequals reset\nunderscore counter\nboom okay uh and then we need to place\nit so place is really important because\nthat dictates where it's going to be so\nx equals 10 y equals let's set that to\nlike 600 so save that\nrun that how we looking\ncool so we've got a button reset it's\nnot doing anything at the moment because\nwe're not updating anything\nand then what do we need to do so uh\nbutton and then we need to create a\nframe so this is going to be a\nplaceholder for our image when we\ncapture it from our webcam so\nframe\nequals tk.frame and then we're going to\nspecify the height equals\n480 the width equals 480\nand then frame dot place\nand then x is going to be equal to 10 y\nis going to be equal to like 90 i think\nl main is going to be the updating label\nso tk.label and then we're going to pass\nthrough the frame to that\nlmain.place\ngoing to be x\nequals 0.0 i'll be completely honest i\ndon't know what i managed to do to get\nthe the frame to work but getting opencv\nto work with this is a little bit\nfinicky but this seems to work\nall right let's run this\ncool so we've got a placeholder so\nyou're not going to see anything just as\nof yet but that's fine it is working\nokay then frame then we need to import\nmedia pipe so uh\nmp underscore drawing so these are going\nto be our drawing utils\nmp.solutions.drawing\nutils and then we need to import the\npose estimation model so mp.solutions\noppose and then oppose equals\noh my gosh\nmp.pose dot pose and then we specify min\ntracking confidence\nequal to 0.5 i really want to get to\nwriter type and actually do\nsome typing practice min detection\nconfidence equals 0.5\nokay that looks good okay and then we\nneed to import our deadlift models with\nopen\ndeadlift\ngot pickle so we're going to use pickle\nto open this and then read binary\nas f model\nequals\npickle dot load and then pass through f\nand then we need to\nget our video captures to cap\nequals cv2.video\ncapture uh my webcams on video capture\ndevice three we're going to set a\nvariable for current stage so this is\ngoing to be whether or not we're up or\ndown in our deadlift we're just going to\nset that to a blank string for now we\nset up a counter and that's going to\ntrack how many dead lifts we've done\nusing machine learning and then we need\num body lang\nprob body\nbody lang\nclass\nand this is going to be a blank string\nso the class is going to be up or down\nand then we'll pass that to current\nstage so we need two holders um this\nshould be a blank array so this is going\nto be the probability of each one of\nthese specific poses do you see me use\nthat a little bit in a sex or body lang\nclass okay that looks good and now we\ncan go and create a detect function so\ndef detect so this is actually going to\nbe running a loop so we're going to loop\nwithin a loop so\nwe need to make all those variables\nglobal so global equals\ncurrent stage\nglobal eco\ncounter\nglobal\nbloody lang\nsometimes i wonder if i'd be able to\nsmash these out so much faster if i\ncould just type accurately body lang\nprob\nwant to be like that dude from harvard\nthat types like 250 words a minute okay\ncool so we've got all of our different\nvariables instantiated how are we doing\nfor time\noh my god five minutes left there oh\nthere is no way\ncome on come on okay same thing all\nright so we need to go and capture our\nframe so red frame\nequals cap dot read\nuh then we need to convert it from bgr\nto rgb so image equals cv2 dot cvt\ncolor\npass through the frame\nand then cv2 dot\ncolor uh equals a bgr underscore bg r2\nrgb\nand then we are going to process it so\nuh results so we're going to pass it to\nthe pose estimation model because pose\ndot process\npass through that image\nand then we can go and draw the poses so\nthis one's a nightmare to type so mp\nunderscore drawing go draw underscore\nlandmarks\nand then we pass through the image\nuh results\ndot pose landmark\ni think pose landmarks yeah and then mp\nunderscore pose\nthe results up here and then mp.pose we\npass through the pose connections\nand then we need this thing called a\ndrawing spec so mp underscore drawing\ndot drawing\nspec you don't get typekins for um\nthe media pipe stuff which is a bit of a\npain all right so then we specify color\nequals and this is just an rgb key so\nzero zero two fifty five and then\nthickness\nthickness equals two and then circle\nradius\nso this specifies how big or small the\ncircles are going to be in our\nwhen we draw our pose estimation model\nso i'm actually going to be doing that\nall right and then we need to specify\nthe color it's too fused or just change\nit up\ncool so that's that done and then we can\ngo and so then we need to try\nus\nand then accept\nand then so that's going to be where we\ndo our detections then we want to make a\nupdate to our image so l main\nsorry image equals\nwhat is it what is so we're going to\nslice it so we're going to cut down our\nimage size it's going to be equal to\nimage and then we're going to grab 460\npixels\nor 60\nand then we're going to convert it to an\narray so we can type in image or create\na new variable imagery equals image\ndot from array so this is from pill or\npillow pass through that image and then\nwe're going to convert it into a way\nthat we can use it with tkinta so we can\ngo image tk\ndot photo\nimage\npass through our image array\nand then we need to pass through el\nmain.image\nbk i'm going to pause it if we manage to\nget this done image\nimage tk equals image\ntk and then lmain\ndot configure\nimage equals image\nimage tk\nand then l main dot after\nthe 10 and we're gonna loop through okay\nall right and then we can run detect\nhere\ni'm gonna pause it\noh my god we have a minute 40 left\nalright so this is running it so i'm\ngonna pause so this should be the first\nphase ideally we should get some pose\nestimation happening here\nall right cool so that's at least the\nfirst bit done right so i've captured my\nface you can see that we're actually\ndoing pose tracking we're looking kind\nof okay right but there's a minute 40 to\nget\nthe stage reps and probability counter\nworking so\nyou can see that we've got all these key\npoints right so we're going to be\npassing these key points\nto the deadlift model so we'll\neffectively flatten them into a big list\nand pass them to be able to track our\ndeadlift so if i actually bring the\ngreen screen down and start doing dead\nlifts now you'll actually see that this\nis actually doing hardcore pose\nestimation hold on let's take a look\nyou can see it's tracking me\nkind of okay right\nall right but we've got to finish this\nso now what we need to do is we actually\nneed to go and take all those landmarks\npass them through to our deadlift model\nand make detections as to whether or not\nwe're going up or down okay all right\nlet's close this\nall right minute four minute 40. come on\nwe can do it we can do it we can do it\nall right let's go\nall right so then we need to finish up\nin here so what we're going to do is\nwe're going to create a row\nand we are going to go\nfor res in results dot pose landmarks\nlandmarks dot landmark\nand then we are going to unpack this\ninto a subset of array so res.x res.y\nres dot z i always used to screw this up\nwhen i was doing practice visibility\ni spelled that wrong so many times and\nthen we're going to wrap this in a numpy\narray\nnumpy array\nand then we're going to flatten it and\nthen convert it to a list\nand then we're going to pass it through\nto a pandas data frame so x equals\npd.data frame\nwe're going to pass that row in\nand then this is where the columns come\ninto columns equals\nthen marks uh yeah it's lane marks it's\nfrom we imported it right back up there\nall right there we go so that should\ncreate our data frame and then we need\nto the body length prob\nequals model dot predict\nrobot so this is a scikit-learn model\nwe're going to pass through x\ngrab the first value the body lang class\nequals model\ndot predict\npass through x grab the first value oh\nno i don't want to run it yet no\nstop quit\nall right cool cool so those are our\nuh detections and then so that's\nthen what we need to do is implement\nsome logic so if body lang\nclass equals equals down\nthen we're going to set the current\nstage to down so then body lang prob\noh we're getting there\nall right\nso that's the 15 minutes up all right so\nwe clearly didn't make it but doesn't\nmatter let's wrap this up but i don't\nactually think we've got that much left\nwe've got maybe like i think 10-ish\nlines all right so body lang\nanyway all right well that's gonna be\nthe uh\nwe'll save it for the amazon gift card\nall right we'll do it in a sec so body\nlang prob and then body lang\nah man\nuh all right so then we're going to if\nwe detect the classes down we're gonna\nand the\nprobability is over 70 that we're going\nto set the current stage\nequal to down we're so close guys\nuh alif and then we're pretty much gonna\ncopy this line here oh let's write it so\nif current stage\nequals equals down\nand body length so if we're now\ndetecting that we're going up\n[Music]\nand the probability is over seventy\npercent or we'll set it like yeah we'll\nleave that seventy percent for now then\nwe're gonna set current stage\nequals to\nup and then we're going to increment the\ncount as a counter plus equals one all\nright cool so that's our detection logic\nthen we just need to go and make the\nupdates to our different labels and that\nwas pretty much it so counter box\nequal dot configure\ntext equals counter\nand then propbox\ndot configure\ntext\nequals\nbody lang prob\nuh we actually need all of this\nso that's going to give us the highest\nprobability value and then\nclass box\ndot configure\nequals text\nand then we are going to pass through\nthe current stage\ni think that was it\nsave let's run that\n[Music]\ncross fingers all right cool so we're\ngetting something there we're not\ngetting our probability pass through so\nthere's an issue there so it should have\ndetected the probability\nall right so we're clearly making\ndetections that looks like it's working\nfine so we've got an issue in here\nthe mps res.x res.y res dot z\nb i s i b i\nl i t y\n[Music]\nwhereas in results the pose underscore\nlandmarks dot landmark\ngot flattened to list\nthen passing the row we're then passing\nx\n[Music]\nlet's just print the error if we get an\nerror\nah we were so close guys\nsomething wrong with visibility\nv-i-s-r spelt it wrong hold on b-i-s-i\noh man i was saying i was getting that\nerror wrong\nokay i think i just had this spelt wrong\ndad viz\nvisibility instead of visibility\ncue the nervous music all right it's\ncool so you can see that we're getting\nthe probability there\nstage is not being set that's kind of\nweird\nhype uh i've spelt this wrong hold on\nget rid of that extra d there save that\nwe're not oh there we go all right cool\nso you can see it so we're now in the\nstage up\ndown doing wraps\nyou can see we're now estimating down\nthis is up\ndown\nup\ndown\nup\nhere's covering it a little bit let me\nmove this\nand then we can go and hit reset\nyou can see that's resetting the rep\ncounter there\nnot too bad\nso not quite 15 minutes so we clearly\ndidn't make the time limit but uh i\nthought we did okay anyway here's the\namazon gift card whoever gets it first\nhe manages to claim it claim it\ni'm getting tongue tied now from trying\nto power through this anyway hope you\nguys have enjoyed this one i'll share\nall the code as well as a bunch of the\nother modules inside of the github\nrepository in the description i'll catch\nyou in the next one peace thanks so much\nfor tuning in guys hopefully you enjoyed\nthis video if you did be sure to give it\na big thumbs up hit subscribe and tick\nthat bell and if you've got any\nadditional ideas for code that please do\nlet me know in the comments below\nhopefully you're enjoying this series i\nlove making them thanks again for tuning\nin guys i'll catch you in the next one\npeace\n",
  "words": [
    "gym",
    "lifting",
    "weights",
    "hidden",
    "pbs",
    "deadlifts",
    "occasionally",
    "staring",
    "massive",
    "dude",
    "squat",
    "rack",
    "something",
    "missing",
    "guessed",
    "machine",
    "learning",
    "episode",
    "code",
    "going",
    "building",
    "deadlift",
    "machine",
    "learning",
    "application",
    "python",
    "15",
    "minutes",
    "happening",
    "guys",
    "welcome",
    "another",
    "episode",
    "code",
    "mentioned",
    "episode",
    "going",
    "building",
    "python",
    "machine",
    "learning",
    "application",
    "whilst",
    "going",
    "deadlifts",
    "could",
    "extend",
    "bunch",
    "different",
    "types",
    "exercises",
    "fact",
    "recently",
    "live",
    "stream",
    "showed",
    "extend",
    "different",
    "types",
    "exercises",
    "well",
    "form",
    "tracking",
    "back",
    "code",
    "episode",
    "going",
    "building",
    "app",
    "per",
    "usual",
    "need",
    "couple",
    "rules",
    "first",
    "foremost",
    "going",
    "allowed",
    "take",
    "look",
    "existing",
    "code",
    "documentation",
    "one",
    "minute",
    "time",
    "penalty",
    "need",
    "couple",
    "constraints",
    "namely",
    "time",
    "limit",
    "particular",
    "task",
    "going",
    "setting",
    "time",
    "limit",
    "15",
    "minutes",
    "ton",
    "code",
    "come",
    "15",
    "minutes",
    "going",
    "fun",
    "per",
    "usual",
    "need",
    "couple",
    "penalties",
    "happens",
    "hit",
    "15",
    "minute",
    "time",
    "limit",
    "well",
    "going",
    "50",
    "amazon",
    "gift",
    "card",
    "guys",
    "without",
    "ado",
    "ready",
    "let",
    "get",
    "alrighty",
    "guys",
    "let",
    "get",
    "ready",
    "15",
    "minutes",
    "clock",
    "let",
    "go",
    "okay",
    "first",
    "thing",
    "going",
    "need",
    "import",
    "tkinter",
    "tkinter",
    "python",
    "library",
    "allows",
    "build",
    "interfaces",
    "also",
    "going",
    "import",
    "custom",
    "ting",
    "tkinter",
    "ck",
    "right",
    "need",
    "import",
    "dependencies",
    "python",
    "import",
    "pandas",
    "pd",
    "going",
    "help",
    "us",
    "work",
    "data",
    "frame",
    "going",
    "import",
    "numpy",
    "going",
    "help",
    "us",
    "data",
    "transformation",
    "going",
    "import",
    "pickle",
    "going",
    "use",
    "pickle",
    "load",
    "machine",
    "learning",
    "model",
    "called",
    "going",
    "able",
    "load",
    "okay",
    "imported",
    "going",
    "need",
    "media",
    "pipe",
    "media",
    "pipe",
    "going",
    "allow",
    "us",
    "pose",
    "tracking",
    "going",
    "import",
    "cv2",
    "open",
    "cv",
    "going",
    "import",
    "stuff",
    "peel",
    "pillow",
    "pillow",
    "import",
    "uh",
    "image",
    "image",
    "tk",
    "bit",
    "practice",
    "one",
    "guys",
    "cutting",
    "close",
    "right",
    "done",
    "need",
    "landmarks",
    "import",
    "landmark",
    "set",
    "column",
    "names",
    "see",
    "got",
    "different",
    "coordinate",
    "names",
    "nothing",
    "special",
    "okay",
    "base",
    "dependencies",
    "imported",
    "need",
    "create",
    "window",
    "uh",
    "tkinter",
    "going",
    "set",
    "window",
    "equals",
    "k",
    "go",
    "really",
    "need",
    "um",
    "typing",
    "practice",
    "480",
    "700",
    "going",
    "size",
    "window",
    "set",
    "title",
    "setting",
    "going",
    "call",
    "swoo",
    "boy",
    "going",
    "use",
    "custom",
    "tkinta",
    "set",
    "appearance",
    "mode",
    "dark",
    "think",
    "makes",
    "look",
    "little",
    "bit",
    "better",
    "type",
    "start",
    "mean",
    "loop",
    "oh",
    "uh",
    "right",
    "kick",
    "give",
    "us",
    "little",
    "pop",
    "bottom",
    "import",
    "landmark",
    "landmarks",
    "could",
    "landmark",
    "oh",
    "music",
    "time",
    "errors",
    "right",
    "right",
    "cool",
    "base",
    "app",
    "right",
    "square",
    "magic",
    "right",
    "okay",
    "need",
    "create",
    "couple",
    "labels",
    "going",
    "class",
    "label",
    "counter",
    "label",
    "probability",
    "label",
    "going",
    "titles",
    "boxes",
    "class",
    "box",
    "counter",
    "box",
    "prob",
    "box",
    "okay",
    "right",
    "need",
    "little",
    "vs",
    "code",
    "magic",
    "multiple",
    "cursors",
    "boom",
    "boom",
    "boom",
    "boom",
    "equals",
    "ck",
    "dot",
    "ctk",
    "label",
    "going",
    "assign",
    "window",
    "height",
    "equals",
    "120",
    "looks",
    "cool",
    "saw",
    "python",
    "engineer",
    "recently",
    "python",
    "engineer",
    "one",
    "guys",
    "scanner",
    "things",
    "oh",
    "wait",
    "120",
    "height",
    "defines",
    "big",
    "one",
    "text",
    "score",
    "font",
    "going",
    "equal",
    "arial",
    "size",
    "20",
    "text",
    "underscore",
    "color",
    "going",
    "equal",
    "black",
    "close",
    "need",
    "run",
    "uh",
    "dot",
    "configure",
    "actually",
    "dot",
    "place",
    "dictates",
    "position",
    "gon",
    "na",
    "set",
    "equal",
    "know",
    "like",
    "one",
    "begin",
    "need",
    "need",
    "configure",
    "know",
    "tabbing",
    "dot",
    "configure",
    "uh",
    "configure",
    "basically",
    "going",
    "dictate",
    "actually",
    "shows",
    "labels",
    "right",
    "got",
    "couple",
    "issues",
    "let",
    "zoom",
    "little",
    "bit",
    "see",
    "okay",
    "going",
    "set",
    "pad",
    "x",
    "equal",
    "10",
    "three",
    "show",
    "looks",
    "like",
    "sec",
    "going",
    "label",
    "class",
    "going",
    "reps",
    "actually",
    "call",
    "stage",
    "going",
    "label",
    "probability",
    "okay",
    "uh",
    "need",
    "spread",
    "across",
    "160",
    "think",
    "vaguely",
    "spread",
    "okay",
    "looks",
    "good",
    "looks",
    "good",
    "right",
    "need",
    "set",
    "foreground",
    "color",
    "fg",
    "color",
    "equal",
    "blue",
    "beautiful",
    "right",
    "kill",
    "looking",
    "good",
    "need",
    "spread",
    "well",
    "x",
    "put",
    "line",
    "labels",
    "see",
    "sec",
    "300",
    "going",
    "tab",
    "bring",
    "little",
    "bit",
    "place",
    "allows",
    "us",
    "dictate",
    "position",
    "height",
    "40",
    "let",
    "make",
    "um",
    "boom",
    "right",
    "cool",
    "looking",
    "good",
    "run",
    "right",
    "see",
    "got",
    "three",
    "boxes",
    "stage",
    "reps",
    "prob",
    "got",
    "three",
    "different",
    "boxes",
    "going",
    "able",
    "update",
    "dynamically",
    "actually",
    "build",
    "machine",
    "learning",
    "model",
    "right",
    "cool",
    "next",
    "thing",
    "need",
    "need",
    "create",
    "button",
    "reset",
    "counter",
    "first",
    "create",
    "function",
    "def",
    "reset",
    "counter",
    "going",
    "grab",
    "global",
    "variable",
    "counter",
    "set",
    "equal",
    "zero",
    "need",
    "create",
    "button",
    "button",
    "equals",
    "ck",
    "dot",
    "ctk",
    "button",
    "basically",
    "copy",
    "everything",
    "particular",
    "label",
    "going",
    "button",
    "two",
    "button",
    "need",
    "pass",
    "specify",
    "button",
    "going",
    "called",
    "call",
    "reset",
    "dictate",
    "text",
    "need",
    "pass",
    "command",
    "want",
    "trigger",
    "go",
    "hit",
    "button",
    "pass",
    "command",
    "equals",
    "reset",
    "underscore",
    "counter",
    "boom",
    "okay",
    "uh",
    "need",
    "place",
    "place",
    "really",
    "important",
    "dictates",
    "going",
    "x",
    "equals",
    "10",
    "equals",
    "let",
    "set",
    "like",
    "600",
    "save",
    "run",
    "looking",
    "cool",
    "got",
    "button",
    "reset",
    "anything",
    "moment",
    "updating",
    "anything",
    "need",
    "uh",
    "button",
    "need",
    "create",
    "frame",
    "going",
    "placeholder",
    "image",
    "capture",
    "webcam",
    "frame",
    "equals",
    "going",
    "specify",
    "height",
    "equals",
    "480",
    "width",
    "equals",
    "480",
    "frame",
    "dot",
    "place",
    "x",
    "going",
    "equal",
    "10",
    "going",
    "equal",
    "like",
    "90",
    "think",
    "l",
    "main",
    "going",
    "updating",
    "label",
    "going",
    "pass",
    "frame",
    "going",
    "x",
    "equals",
    "completely",
    "honest",
    "know",
    "managed",
    "get",
    "frame",
    "work",
    "getting",
    "opencv",
    "work",
    "little",
    "bit",
    "finicky",
    "seems",
    "work",
    "right",
    "let",
    "run",
    "cool",
    "got",
    "placeholder",
    "going",
    "see",
    "anything",
    "yet",
    "fine",
    "working",
    "okay",
    "frame",
    "need",
    "import",
    "media",
    "pipe",
    "uh",
    "mp",
    "underscore",
    "drawing",
    "going",
    "drawing",
    "utils",
    "utils",
    "need",
    "import",
    "pose",
    "estimation",
    "model",
    "oppose",
    "oppose",
    "equals",
    "oh",
    "gosh",
    "dot",
    "pose",
    "specify",
    "min",
    "tracking",
    "confidence",
    "equal",
    "really",
    "want",
    "get",
    "writer",
    "type",
    "actually",
    "typing",
    "practice",
    "min",
    "detection",
    "confidence",
    "equals",
    "okay",
    "looks",
    "good",
    "okay",
    "need",
    "import",
    "deadlift",
    "models",
    "open",
    "deadlift",
    "got",
    "pickle",
    "going",
    "use",
    "pickle",
    "open",
    "read",
    "binary",
    "f",
    "model",
    "equals",
    "pickle",
    "dot",
    "load",
    "pass",
    "f",
    "need",
    "get",
    "video",
    "captures",
    "cap",
    "equals",
    "capture",
    "uh",
    "webcams",
    "video",
    "capture",
    "device",
    "three",
    "going",
    "set",
    "variable",
    "current",
    "stage",
    "going",
    "whether",
    "deadlift",
    "going",
    "set",
    "blank",
    "string",
    "set",
    "counter",
    "going",
    "track",
    "many",
    "dead",
    "lifts",
    "done",
    "using",
    "machine",
    "learning",
    "need",
    "um",
    "body",
    "lang",
    "prob",
    "body",
    "body",
    "lang",
    "class",
    "going",
    "blank",
    "string",
    "class",
    "going",
    "pass",
    "current",
    "stage",
    "need",
    "two",
    "holders",
    "um",
    "blank",
    "array",
    "going",
    "probability",
    "one",
    "specific",
    "poses",
    "see",
    "use",
    "little",
    "bit",
    "sex",
    "body",
    "lang",
    "class",
    "okay",
    "looks",
    "good",
    "go",
    "create",
    "detect",
    "function",
    "def",
    "detect",
    "actually",
    "going",
    "running",
    "loop",
    "going",
    "loop",
    "within",
    "loop",
    "need",
    "make",
    "variables",
    "global",
    "global",
    "equals",
    "current",
    "stage",
    "global",
    "eco",
    "counter",
    "global",
    "bloody",
    "lang",
    "sometimes",
    "wonder",
    "able",
    "smash",
    "much",
    "faster",
    "could",
    "type",
    "accurately",
    "body",
    "lang",
    "prob",
    "want",
    "like",
    "dude",
    "harvard",
    "types",
    "like",
    "250",
    "words",
    "minute",
    "okay",
    "cool",
    "got",
    "different",
    "variables",
    "instantiated",
    "time",
    "oh",
    "god",
    "five",
    "minutes",
    "left",
    "oh",
    "way",
    "come",
    "come",
    "okay",
    "thing",
    "right",
    "need",
    "go",
    "capture",
    "frame",
    "red",
    "frame",
    "equals",
    "cap",
    "dot",
    "read",
    "uh",
    "need",
    "convert",
    "bgr",
    "rgb",
    "image",
    "equals",
    "cv2",
    "dot",
    "cvt",
    "color",
    "pass",
    "frame",
    "cv2",
    "dot",
    "color",
    "uh",
    "equals",
    "bgr",
    "underscore",
    "bg",
    "r2",
    "rgb",
    "going",
    "process",
    "uh",
    "results",
    "going",
    "pass",
    "pose",
    "estimation",
    "model",
    "pose",
    "dot",
    "process",
    "pass",
    "image",
    "go",
    "draw",
    "poses",
    "one",
    "nightmare",
    "type",
    "mp",
    "underscore",
    "drawing",
    "go",
    "draw",
    "underscore",
    "landmarks",
    "pass",
    "image",
    "uh",
    "results",
    "dot",
    "pose",
    "landmark",
    "think",
    "pose",
    "landmarks",
    "yeah",
    "mp",
    "underscore",
    "pose",
    "results",
    "pass",
    "pose",
    "connections",
    "need",
    "thing",
    "called",
    "drawing",
    "spec",
    "mp",
    "underscore",
    "drawing",
    "dot",
    "drawing",
    "spec",
    "get",
    "typekins",
    "um",
    "media",
    "pipe",
    "stuff",
    "bit",
    "pain",
    "right",
    "specify",
    "color",
    "equals",
    "rgb",
    "key",
    "zero",
    "zero",
    "two",
    "fifty",
    "five",
    "thickness",
    "thickness",
    "equals",
    "two",
    "circle",
    "radius",
    "specifies",
    "big",
    "small",
    "circles",
    "going",
    "draw",
    "pose",
    "estimation",
    "model",
    "actually",
    "going",
    "right",
    "need",
    "specify",
    "color",
    "fused",
    "change",
    "cool",
    "done",
    "go",
    "need",
    "try",
    "us",
    "accept",
    "going",
    "detections",
    "want",
    "make",
    "update",
    "image",
    "l",
    "main",
    "sorry",
    "image",
    "equals",
    "going",
    "slice",
    "going",
    "cut",
    "image",
    "size",
    "going",
    "equal",
    "image",
    "going",
    "grab",
    "460",
    "pixels",
    "60",
    "going",
    "convert",
    "array",
    "type",
    "image",
    "create",
    "new",
    "variable",
    "imagery",
    "equals",
    "image",
    "dot",
    "array",
    "pill",
    "pillow",
    "pass",
    "image",
    "going",
    "convert",
    "way",
    "use",
    "tkinta",
    "go",
    "image",
    "tk",
    "dot",
    "photo",
    "image",
    "pass",
    "image",
    "array",
    "need",
    "pass",
    "el",
    "bk",
    "going",
    "pause",
    "manage",
    "get",
    "done",
    "image",
    "image",
    "tk",
    "equals",
    "image",
    "tk",
    "lmain",
    "dot",
    "configure",
    "image",
    "equals",
    "image",
    "image",
    "tk",
    "l",
    "main",
    "dot",
    "10",
    "gon",
    "na",
    "loop",
    "okay",
    "right",
    "run",
    "detect",
    "gon",
    "na",
    "pause",
    "oh",
    "god",
    "minute",
    "40",
    "left",
    "alright",
    "running",
    "gon",
    "na",
    "pause",
    "first",
    "phase",
    "ideally",
    "get",
    "pose",
    "estimation",
    "happening",
    "right",
    "cool",
    "least",
    "first",
    "bit",
    "done",
    "right",
    "captured",
    "face",
    "see",
    "actually",
    "pose",
    "tracking",
    "looking",
    "kind",
    "okay",
    "right",
    "minute",
    "40",
    "get",
    "stage",
    "reps",
    "probability",
    "counter",
    "working",
    "see",
    "got",
    "key",
    "points",
    "right",
    "going",
    "passing",
    "key",
    "points",
    "deadlift",
    "model",
    "effectively",
    "flatten",
    "big",
    "list",
    "pass",
    "able",
    "track",
    "deadlift",
    "actually",
    "bring",
    "green",
    "screen",
    "start",
    "dead",
    "lifts",
    "actually",
    "see",
    "actually",
    "hardcore",
    "pose",
    "estimation",
    "hold",
    "let",
    "take",
    "look",
    "see",
    "tracking",
    "kind",
    "okay",
    "right",
    "right",
    "got",
    "finish",
    "need",
    "actually",
    "need",
    "go",
    "take",
    "landmarks",
    "pass",
    "deadlift",
    "model",
    "make",
    "detections",
    "whether",
    "going",
    "okay",
    "right",
    "let",
    "close",
    "right",
    "minute",
    "four",
    "minute",
    "come",
    "right",
    "let",
    "go",
    "right",
    "need",
    "finish",
    "going",
    "going",
    "create",
    "row",
    "going",
    "go",
    "res",
    "results",
    "dot",
    "pose",
    "landmarks",
    "landmarks",
    "dot",
    "landmark",
    "going",
    "unpack",
    "subset",
    "array",
    "res",
    "dot",
    "z",
    "always",
    "used",
    "screw",
    "practice",
    "visibility",
    "spelled",
    "wrong",
    "many",
    "times",
    "going",
    "wrap",
    "numpy",
    "array",
    "numpy",
    "array",
    "going",
    "flatten",
    "convert",
    "list",
    "going",
    "pass",
    "pandas",
    "data",
    "frame",
    "x",
    "equals",
    "frame",
    "going",
    "pass",
    "row",
    "columns",
    "come",
    "columns",
    "equals",
    "marks",
    "uh",
    "yeah",
    "lane",
    "marks",
    "imported",
    "right",
    "back",
    "right",
    "go",
    "create",
    "data",
    "frame",
    "need",
    "body",
    "length",
    "prob",
    "equals",
    "model",
    "dot",
    "predict",
    "robot",
    "model",
    "going",
    "pass",
    "x",
    "grab",
    "first",
    "value",
    "body",
    "lang",
    "class",
    "equals",
    "model",
    "dot",
    "predict",
    "pass",
    "x",
    "grab",
    "first",
    "value",
    "oh",
    "want",
    "run",
    "yet",
    "stop",
    "quit",
    "right",
    "cool",
    "cool",
    "uh",
    "detections",
    "need",
    "implement",
    "logic",
    "body",
    "lang",
    "class",
    "equals",
    "equals",
    "going",
    "set",
    "current",
    "stage",
    "body",
    "lang",
    "prob",
    "oh",
    "getting",
    "right",
    "15",
    "minutes",
    "right",
    "clearly",
    "make",
    "matter",
    "let",
    "wrap",
    "actually",
    "think",
    "got",
    "much",
    "left",
    "got",
    "maybe",
    "like",
    "think",
    "lines",
    "right",
    "body",
    "lang",
    "anyway",
    "right",
    "well",
    "gon",
    "na",
    "uh",
    "save",
    "amazon",
    "gift",
    "card",
    "right",
    "sec",
    "body",
    "lang",
    "prob",
    "body",
    "lang",
    "ah",
    "man",
    "uh",
    "right",
    "going",
    "detect",
    "classes",
    "gon",
    "na",
    "probability",
    "70",
    "going",
    "set",
    "current",
    "stage",
    "equal",
    "close",
    "guys",
    "uh",
    "alif",
    "pretty",
    "much",
    "gon",
    "na",
    "copy",
    "line",
    "oh",
    "let",
    "write",
    "current",
    "stage",
    "equals",
    "equals",
    "body",
    "length",
    "detecting",
    "going",
    "music",
    "probability",
    "seventy",
    "percent",
    "set",
    "like",
    "yeah",
    "leave",
    "seventy",
    "percent",
    "gon",
    "na",
    "set",
    "current",
    "stage",
    "equals",
    "going",
    "increment",
    "count",
    "counter",
    "plus",
    "equals",
    "one",
    "right",
    "cool",
    "detection",
    "logic",
    "need",
    "go",
    "make",
    "updates",
    "different",
    "labels",
    "pretty",
    "much",
    "counter",
    "box",
    "equal",
    "dot",
    "configure",
    "text",
    "equals",
    "counter",
    "propbox",
    "dot",
    "configure",
    "text",
    "equals",
    "body",
    "lang",
    "prob",
    "uh",
    "actually",
    "need",
    "going",
    "give",
    "us",
    "highest",
    "probability",
    "value",
    "class",
    "box",
    "dot",
    "configure",
    "equals",
    "text",
    "going",
    "pass",
    "current",
    "stage",
    "think",
    "save",
    "let",
    "run",
    "music",
    "cross",
    "fingers",
    "right",
    "cool",
    "getting",
    "something",
    "getting",
    "probability",
    "pass",
    "issue",
    "detected",
    "probability",
    "right",
    "clearly",
    "making",
    "detections",
    "looks",
    "like",
    "working",
    "fine",
    "got",
    "issue",
    "mps",
    "res",
    "dot",
    "z",
    "b",
    "b",
    "l",
    "music",
    "whereas",
    "results",
    "pose",
    "underscore",
    "landmarks",
    "dot",
    "landmark",
    "got",
    "flattened",
    "list",
    "passing",
    "row",
    "passing",
    "x",
    "music",
    "let",
    "print",
    "error",
    "get",
    "error",
    "ah",
    "close",
    "guys",
    "something",
    "wrong",
    "visibility",
    "spelt",
    "wrong",
    "hold",
    "oh",
    "man",
    "saying",
    "getting",
    "error",
    "wrong",
    "okay",
    "think",
    "spelt",
    "wrong",
    "dad",
    "viz",
    "visibility",
    "instead",
    "visibility",
    "cue",
    "nervous",
    "music",
    "right",
    "cool",
    "see",
    "getting",
    "probability",
    "stage",
    "set",
    "kind",
    "weird",
    "hype",
    "uh",
    "spelt",
    "wrong",
    "hold",
    "get",
    "rid",
    "extra",
    "save",
    "oh",
    "go",
    "right",
    "cool",
    "see",
    "stage",
    "wraps",
    "see",
    "estimating",
    "covering",
    "little",
    "bit",
    "let",
    "move",
    "go",
    "hit",
    "reset",
    "see",
    "resetting",
    "rep",
    "counter",
    "bad",
    "quite",
    "15",
    "minutes",
    "clearly",
    "make",
    "time",
    "limit",
    "uh",
    "thought",
    "okay",
    "anyway",
    "amazon",
    "gift",
    "card",
    "whoever",
    "gets",
    "first",
    "manages",
    "claim",
    "claim",
    "getting",
    "tongue",
    "tied",
    "trying",
    "power",
    "anyway",
    "hope",
    "guys",
    "enjoyed",
    "one",
    "share",
    "code",
    "well",
    "bunch",
    "modules",
    "inside",
    "github",
    "repository",
    "description",
    "catch",
    "next",
    "one",
    "peace",
    "thanks",
    "much",
    "tuning",
    "guys",
    "hopefully",
    "enjoyed",
    "video",
    "sure",
    "give",
    "big",
    "thumbs",
    "hit",
    "subscribe",
    "tick",
    "bell",
    "got",
    "additional",
    "ideas",
    "code",
    "please",
    "let",
    "know",
    "comments",
    "hopefully",
    "enjoying",
    "series",
    "love",
    "making",
    "thanks",
    "tuning",
    "guys",
    "catch",
    "next",
    "one",
    "peace"
  ],
  "keywords": [
    "machine",
    "learning",
    "episode",
    "code",
    "going",
    "deadlift",
    "python",
    "15",
    "minutes",
    "guys",
    "different",
    "well",
    "tracking",
    "need",
    "couple",
    "first",
    "one",
    "minute",
    "time",
    "limit",
    "come",
    "hit",
    "let",
    "get",
    "go",
    "okay",
    "thing",
    "import",
    "tkinter",
    "right",
    "us",
    "work",
    "data",
    "frame",
    "pickle",
    "use",
    "model",
    "able",
    "media",
    "pipe",
    "pose",
    "uh",
    "image",
    "tk",
    "bit",
    "practice",
    "close",
    "done",
    "landmarks",
    "landmark",
    "set",
    "see",
    "got",
    "create",
    "window",
    "equals",
    "um",
    "think",
    "little",
    "type",
    "loop",
    "oh",
    "music",
    "cool",
    "labels",
    "class",
    "label",
    "counter",
    "probability",
    "box",
    "prob",
    "boom",
    "dot",
    "height",
    "looks",
    "big",
    "text",
    "equal",
    "underscore",
    "color",
    "run",
    "configure",
    "actually",
    "place",
    "gon",
    "na",
    "know",
    "like",
    "x",
    "10",
    "three",
    "stage",
    "good",
    "looking",
    "make",
    "button",
    "reset",
    "grab",
    "global",
    "two",
    "pass",
    "specify",
    "want",
    "save",
    "capture",
    "l",
    "getting",
    "mp",
    "drawing",
    "estimation",
    "current",
    "body",
    "lang",
    "array",
    "detect",
    "much",
    "convert",
    "results",
    "detections",
    "visibility",
    "wrong"
  ]
}