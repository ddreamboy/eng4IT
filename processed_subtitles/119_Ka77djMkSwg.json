{
  "text": "Hey it's, Simon from supersimple.dev\nToday's video is about a really\nimportant topic if you want to get a job\nas a web developer.\nSo we're going to talk about what are\njavascript frameworks\nand which one should you learn. So pretty\nmuch every web developer\nuses a framework in addition to\njavascript to build web applications,\nand here's my detailed explanation of\nwhat a framework is.\nSo the first thing you need to know is\nthe basics of javascript.\nNow if you don't know javascript yet I\nhave an in-depth tutorial on javascript\nand the link to that is in the\ndescription.\nNow, I assume that you know javascript at\nthis point.\nSo a javascript framework helps you\nrender stuff.\nIt's a rendering system. Rendering means\ndisplaying something on a web page.\nIt's the most common thing you do in web\ndevelopment.\nSo for example, if I want to render a\nbutton on my web page,\nI can use this code and this is just\nhtml we don't even need javascript yet.\nNow let's say that I have a list and I\nwant to render this list\non my web page. Well we'll use javascript\nhere to\nloop through this list and for each item\nwe're going to create an html element,\nand then add that element to the page. So\nthat's rendering using javascript.\nSo a very common task in web development\nis: we're going to take some complex data\nand we're going to use javascript to\nrender that data on the web page.\nFor example let's say that we have a\nlist of comments on a youtube\nvideo and we want to render it to look\nlike this.\nIn the beginning there were no\nframeworks so developers just use\nplain javascript to render data so this\nis the code to render the comments using\nplain javascript, and this is the code\nusing a framework. So as you can see\nthis code is way easier to read and\nwrite. You can even see the structure of\nthe html\nthat you're rendering. So if you use a\njavascript,\nframework you can write your code like\nthis, and then the framework basically\nconverts it into this javascript\nfor you. And that javascript is going to\nrender it on the page.\nSo that's why web developers use\nframeworks, it makes our code\nso much more simple. Now let's go through\na demo of a real\nframework and this is how to use a\nframework. So first we have to go to the\nframeworks\nwebsite and every framework has their\nown website. So if you don't know what\nthat is\nwe're going to search it in google, so we\ncan search backbone.js.\nNow once we're on the website we're\ngoing to find a copy of the framework's\ncode,\nso a framework is just a bunch of\njavascript code\nthat someone else wrote, it's no\ndifferent than the code that you write\nyourself.\nSo we're going to copy all of this code,\nand run it in our web page.\nSo an easy way to do this is just to\ncopy this url\nand then in our web page we can add a\nscript tag\nand we're going to give the script tag\nan src attribute.\nSo this s r c attribute stands for the\nsource attribute.\nIt will grab a copy of the code found in\nthis url,\nwhich is all of the frameworks code, and\nit's going to run this code.\nSo we're going to run the frameworks\ncode at the top of our website\nand that's it. Now you can start writing\nyour web pages like this,\nand the framework will convert it into\njavascript and render things\nfor you. Of course you have to follow the\ninstructions for how to use the\nframework,\nso we would have to go back to the\nwebsite and\nread all the instructions for how to use\nit.\nAnd a warning if this is your first time\nlearning about frameworks, these\ninstructions can be very hard to\nunderstand.\nIf you have any questions you can email\nme supersimple.dev/feedback\nor leave a comment below. So now that we\nhave a general sense of what a framework\nlooks like we're going to break down the\nthree main parts of a framework.\nSo the first part is rendering, which we\njust talked about.\nWe write our code like this and this is\nalso known as templating,\nwe're writing an html template where the\nvalues are filled by our data,\nand then the framework takes it, converts\nit into javascript, which\nthen renders our web page. So the second\nfeature of a framework is data handling.\nSo all frameworks have a way for you to\nput your data in the framework.\nAnd then it will take the data, and\nrender it for you according to your web\npage.\nSo it will take the values in your data,\nand then fill your template with those\nvalues.\nAnd then when the data changes, for\nexample we add or remove a comment,\nthe framework will automatically\nre-render for you so that your web page\nis always\nup to date with your data. So the third\nfeature of a framework is called event\nhandling,\nwhich means it helps you add event\nhandlers to your page so instead of\nwriting button.onclick\nin javascript, the framework gives you an\neasy way to add event handlers to your\nhtml elements.\nThis is also known as the mvc\narchitecture, or model\nview controller, and this is what the\nmajority of javascript frameworks are\nbuilt on.\nAnd this is why if you have a good grasp\nof mvc, you shouldn't have much trouble\nlearning a framework and switching from\none framework\nto another. If you want to learn more\nabout mvc, we built an mvc-based app in\nmy javascript beginner\ntutorial, but I'll also make a specific video\nabout\nmvc in the future, so please subscribe\nfor that.\nNow while you're at it if you got value\nfrom this video please click that like\nbutton below so this video reaches more\npeople\nand helps people get tech careers. So\nthese are the three main features of a\nframework, some of them provide more\nfeatures than this,\nbut all frameworks have these three\nfeatures.\nSo the second part of this lesson is\nwhich framework should you learn if you\nwant to get a job as a web developer.\nSo in 2021, the front end frameworks you\nshould consider\nare react, vue, or angular and\navoid other front-end frameworks.\nFrameworks are created in generations\njust like an iphone you have the first\ngeneration, the second gen,\netc if you want to get a job you need to\nlearn the latest generation of\njavascript frameworks.\nBecause just like an iphone, everyone\nwants to use the latest generation,\nor they want to upgrade, so right now\nreact, vue, and angular are the latest\ngeneration of\nframeworks, and that's why you should\npick one of these to learn.\nSo the links to each of these frameworks\nare in the description, you can take a\nlook at them and see which one\ninterests you. So how long will it be\nbefore a new generation comes out\nand these frameworks become outdated?\nWell the truth is that no one knows for\nsure,\nbut I'll let you know as soon as it\nhappens so please be sure to subscribe.\nSo of these three frameworks which one\nshould you learn?\nSo the way this works is frameworks tend\nto be popular in certain regions.\nSo pick the framework that is the most\npopular in the region you want to work\nin.\nFor example in the bay area and toronto,\nwhere I've worked companies like to use\nreact, so I've been using react. And it\nmight be different for you.\nSo what I do to figure this out is I go\non linkedin or your country's job search\nwebsite,\nand then I search for web developer jobs\nin the location that I want to work.\nAnd then I make a list of which\nframeworks come up most often,\nand I learn that one. And if there's\ntwo that come up equally as often,\nthen you can try them out both and see\nwhich one you like\nbetter. So that's the end of this lesson.\nThanks so much for watching the video,\ntoday we learned what is a javascript\nframework and which one should you learn\nif you want to get a job as a web\ndeveloper.\nSo each framework has a step-by-step\nguide on how to set it up\nand you can take a look at them in the\ndescription.\nIf you have any trouble or if you have\nany questions please send me an email\nat supersimple.dev/feedback\nThanks again for watching, my name is\nSimon from supersimple.dev and I want to\nmake a tech career possible for\nanyone. Stay positive keep learning and\nI'll see you in the next one.\n",
  "words": [
    "hey",
    "simon",
    "today",
    "video",
    "really",
    "important",
    "topic",
    "want",
    "get",
    "job",
    "web",
    "developer",
    "going",
    "talk",
    "javascript",
    "frameworks",
    "one",
    "learn",
    "pretty",
    "much",
    "every",
    "web",
    "developer",
    "uses",
    "framework",
    "addition",
    "javascript",
    "build",
    "web",
    "applications",
    "detailed",
    "explanation",
    "framework",
    "first",
    "thing",
    "need",
    "know",
    "basics",
    "javascript",
    "know",
    "javascript",
    "yet",
    "tutorial",
    "javascript",
    "link",
    "description",
    "assume",
    "know",
    "javascript",
    "point",
    "javascript",
    "framework",
    "helps",
    "render",
    "stuff",
    "rendering",
    "system",
    "rendering",
    "means",
    "displaying",
    "something",
    "web",
    "page",
    "common",
    "thing",
    "web",
    "development",
    "example",
    "want",
    "render",
    "button",
    "web",
    "page",
    "use",
    "code",
    "html",
    "even",
    "need",
    "javascript",
    "yet",
    "let",
    "say",
    "list",
    "want",
    "render",
    "list",
    "web",
    "page",
    "well",
    "use",
    "javascript",
    "loop",
    "list",
    "item",
    "going",
    "create",
    "html",
    "element",
    "add",
    "element",
    "page",
    "rendering",
    "using",
    "javascript",
    "common",
    "task",
    "web",
    "development",
    "going",
    "take",
    "complex",
    "data",
    "going",
    "use",
    "javascript",
    "render",
    "data",
    "web",
    "page",
    "example",
    "let",
    "say",
    "list",
    "comments",
    "youtube",
    "video",
    "want",
    "render",
    "look",
    "like",
    "beginning",
    "frameworks",
    "developers",
    "use",
    "plain",
    "javascript",
    "render",
    "data",
    "code",
    "render",
    "comments",
    "using",
    "plain",
    "javascript",
    "code",
    "using",
    "framework",
    "see",
    "code",
    "way",
    "easier",
    "read",
    "write",
    "even",
    "see",
    "structure",
    "html",
    "rendering",
    "use",
    "javascript",
    "framework",
    "write",
    "code",
    "like",
    "framework",
    "basically",
    "converts",
    "javascript",
    "javascript",
    "going",
    "render",
    "page",
    "web",
    "developers",
    "use",
    "frameworks",
    "makes",
    "code",
    "much",
    "simple",
    "let",
    "go",
    "demo",
    "real",
    "framework",
    "use",
    "framework",
    "first",
    "go",
    "frameworks",
    "website",
    "every",
    "framework",
    "website",
    "know",
    "going",
    "search",
    "google",
    "search",
    "website",
    "going",
    "find",
    "copy",
    "framework",
    "code",
    "framework",
    "bunch",
    "javascript",
    "code",
    "someone",
    "else",
    "wrote",
    "different",
    "code",
    "write",
    "going",
    "copy",
    "code",
    "run",
    "web",
    "page",
    "easy",
    "way",
    "copy",
    "url",
    "web",
    "page",
    "add",
    "script",
    "tag",
    "going",
    "give",
    "script",
    "tag",
    "src",
    "attribute",
    "r",
    "c",
    "attribute",
    "stands",
    "source",
    "attribute",
    "grab",
    "copy",
    "code",
    "found",
    "url",
    "frameworks",
    "code",
    "going",
    "run",
    "code",
    "going",
    "run",
    "frameworks",
    "code",
    "top",
    "website",
    "start",
    "writing",
    "web",
    "pages",
    "like",
    "framework",
    "convert",
    "javascript",
    "render",
    "things",
    "course",
    "follow",
    "instructions",
    "use",
    "framework",
    "would",
    "go",
    "back",
    "website",
    "read",
    "instructions",
    "use",
    "warning",
    "first",
    "time",
    "learning",
    "frameworks",
    "instructions",
    "hard",
    "understand",
    "questions",
    "email",
    "leave",
    "comment",
    "general",
    "sense",
    "framework",
    "looks",
    "like",
    "going",
    "break",
    "three",
    "main",
    "parts",
    "framework",
    "first",
    "part",
    "rendering",
    "talked",
    "write",
    "code",
    "like",
    "also",
    "known",
    "templating",
    "writing",
    "html",
    "template",
    "values",
    "filled",
    "data",
    "framework",
    "takes",
    "converts",
    "javascript",
    "renders",
    "web",
    "page",
    "second",
    "feature",
    "framework",
    "data",
    "handling",
    "frameworks",
    "way",
    "put",
    "data",
    "framework",
    "take",
    "data",
    "render",
    "according",
    "web",
    "page",
    "take",
    "values",
    "data",
    "fill",
    "template",
    "values",
    "data",
    "changes",
    "example",
    "add",
    "remove",
    "comment",
    "framework",
    "automatically",
    "web",
    "page",
    "always",
    "date",
    "data",
    "third",
    "feature",
    "framework",
    "called",
    "event",
    "handling",
    "means",
    "helps",
    "add",
    "event",
    "handlers",
    "page",
    "instead",
    "writing",
    "javascript",
    "framework",
    "gives",
    "easy",
    "way",
    "add",
    "event",
    "handlers",
    "html",
    "elements",
    "also",
    "known",
    "mvc",
    "architecture",
    "model",
    "view",
    "controller",
    "majority",
    "javascript",
    "frameworks",
    "built",
    "good",
    "grasp",
    "mvc",
    "much",
    "trouble",
    "learning",
    "framework",
    "switching",
    "one",
    "framework",
    "another",
    "want",
    "learn",
    "mvc",
    "built",
    "app",
    "javascript",
    "beginner",
    "tutorial",
    "also",
    "make",
    "specific",
    "video",
    "mvc",
    "future",
    "please",
    "subscribe",
    "got",
    "value",
    "video",
    "please",
    "click",
    "like",
    "button",
    "video",
    "reaches",
    "people",
    "helps",
    "people",
    "get",
    "tech",
    "careers",
    "three",
    "main",
    "features",
    "framework",
    "provide",
    "features",
    "frameworks",
    "three",
    "features",
    "second",
    "part",
    "lesson",
    "framework",
    "learn",
    "want",
    "get",
    "job",
    "web",
    "developer",
    "2021",
    "front",
    "end",
    "frameworks",
    "consider",
    "react",
    "vue",
    "angular",
    "avoid",
    "frameworks",
    "frameworks",
    "created",
    "generations",
    "like",
    "iphone",
    "first",
    "generation",
    "second",
    "gen",
    "etc",
    "want",
    "get",
    "job",
    "need",
    "learn",
    "latest",
    "generation",
    "javascript",
    "frameworks",
    "like",
    "iphone",
    "everyone",
    "wants",
    "use",
    "latest",
    "generation",
    "want",
    "upgrade",
    "right",
    "react",
    "vue",
    "angular",
    "latest",
    "generation",
    "frameworks",
    "pick",
    "one",
    "learn",
    "links",
    "frameworks",
    "description",
    "take",
    "look",
    "see",
    "one",
    "interests",
    "long",
    "new",
    "generation",
    "comes",
    "frameworks",
    "become",
    "outdated",
    "well",
    "truth",
    "one",
    "knows",
    "sure",
    "let",
    "know",
    "soon",
    "happens",
    "please",
    "sure",
    "subscribe",
    "three",
    "frameworks",
    "one",
    "learn",
    "way",
    "works",
    "frameworks",
    "tend",
    "popular",
    "certain",
    "regions",
    "pick",
    "framework",
    "popular",
    "region",
    "want",
    "work",
    "example",
    "bay",
    "area",
    "toronto",
    "worked",
    "companies",
    "like",
    "use",
    "react",
    "using",
    "react",
    "might",
    "different",
    "figure",
    "go",
    "linkedin",
    "country",
    "job",
    "search",
    "website",
    "search",
    "web",
    "developer",
    "jobs",
    "location",
    "want",
    "work",
    "make",
    "list",
    "frameworks",
    "come",
    "often",
    "learn",
    "one",
    "two",
    "come",
    "equally",
    "often",
    "try",
    "see",
    "one",
    "like",
    "better",
    "end",
    "lesson",
    "thanks",
    "much",
    "watching",
    "video",
    "today",
    "learned",
    "javascript",
    "framework",
    "one",
    "learn",
    "want",
    "get",
    "job",
    "web",
    "developer",
    "framework",
    "guide",
    "set",
    "take",
    "look",
    "description",
    "trouble",
    "questions",
    "please",
    "send",
    "email",
    "thanks",
    "watching",
    "name",
    "simon",
    "want",
    "make",
    "tech",
    "career",
    "possible",
    "anyone",
    "stay",
    "positive",
    "keep",
    "learning",
    "see",
    "next",
    "one"
  ],
  "keywords": [
    "video",
    "want",
    "get",
    "job",
    "web",
    "developer",
    "going",
    "javascript",
    "frameworks",
    "one",
    "learn",
    "much",
    "framework",
    "first",
    "need",
    "know",
    "description",
    "helps",
    "render",
    "rendering",
    "page",
    "example",
    "use",
    "code",
    "html",
    "let",
    "list",
    "add",
    "using",
    "take",
    "data",
    "look",
    "like",
    "see",
    "way",
    "write",
    "go",
    "website",
    "search",
    "copy",
    "run",
    "attribute",
    "writing",
    "instructions",
    "learning",
    "three",
    "also",
    "values",
    "second",
    "event",
    "mvc",
    "make",
    "please",
    "features",
    "react",
    "generation",
    "latest"
  ]
}