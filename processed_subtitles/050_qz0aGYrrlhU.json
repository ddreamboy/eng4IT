{
  "text": "welcome to the first part of the\nultimate html and css series in this\nseries i'm going to take you on a\njourney and teach you all the skills you\nneed to build fast and beautiful\nwebsites that look great on all kinds of\ndevices i'm assuming you know nothing\nabout html or css i want to learn\neverything from scratch\nso in the first part of this series\nwe're going to talk about the\nfundamentals of web development with\nhtml and css in the second part we'll\nexplore the advanced concepts and in the\nthird part we'll put everything together\nand build a beautiful responsive and\nblazingly fast website for an imaginary\ncloud hosting company called mashify if\nyou want to play with this website just\nhead over to mashify.com and see it for\nyourself this is what you're going to\nbuild in this series i'm ash hamadani\nand i've taught millions of people how\nto code or how to become professional\nsoftware engineers through my coding\nschool and youtube channel if you're new\nhere be sure to subscribe as we upload\nnew videos all the time now let's jump\nin and get started\n[Music]\nall right let's talk about the tools you\nneed to take this course for the starter\nyou need a code editor there's so many\ncode editors out there like visual\nstudio code or vs code sublime text adam\nand so on in this course i'm going to\nuse vs code along with a few extensions\nfor starting a web server and formatting\nour code you're welcome to use your\nfavorite code editor if you know what\nyou're doing but otherwise head over to\ncode.visualstudio.com\nand download the latest version of vs\ncode\nnow here inside vs code we're going to\ninstall a couple of extensions\nso let's open the extensions panel\nand search for\npreview\nhere's the extension we're going to\ninstall prettier code formatter with\nthis extension we can format our code\nand make it pretty this is a very\npopular extension as you can see it's\nbeen downloaded more than 9 million\ntimes\nso over here you're going to have an\ninstall button just click it and you're\ndone\nnext we're going to install\nanother extension called live server\nwith this we can launch our website\ninside a development web server again\nthis is a very popular extension it's\nbeen downloaded almost 8 million times\nnow in addition to these we're going to\nuse a browser to view and test our web\npages again you can use your favorite\nbrowser but in this course i'm going to\nuse google chrome and i encourage you to\nuse the same browser so you can easily\nfollow the course\nwe're going to start our web development\njourney here in every section you will\nlearn something new about web\ndevelopment and by the end of this\ncourse you will put all of this together\nto build a beautiful web page\nin this section we're going to talk\nabout the fundamentals of web\ndevelopment you'll learn the languages\nand tools used in web development as\nwell as the key concepts and vocabulary\nsuch as url http gum and so on we're\nalso going to talk about how websites\nwork so you will understand what exactly\nhappens under the hood when you use your\nbrowser to visit a website you will also\nlearn how to inspect network traffic\nusing chrome dev tools which is a very\npowerful tool used by front-end\ndevelopers\nwe'll also talk about the basics of html\nand css and validating web pages which\nis something a lot of developers miss\nthis is going to be an awesome journey\nso let's jump in and get started\n[Music]\nthis course is your first step towards\nbecoming a web developer so let me give\nyou a simple roadmap to know where you\nare and where you should go next every\nwebsite has two parts a front end and a\nbackhand the front end is the part that\nyou see in your browser and interact\nwith all the visual aspects the back end\nis the part that powers the front end\nit's behind the scenes and is mainly\nabout storing data in databases and\nproviding it to the front end\nso web development jobs fall into three\nmain categories front-end development\nback-end development and full-stack\ndevelopment which involves both\nfront-end and back-end development\nfront-end developers use html css and\njavascript to build front-ends back-end\ndevelopers have different sets of tools\navailable to them which is outside the\nscope of this course so let's talk about\nhtml css and javascript\nhtml is short for hypertext markup\nlanguage i know it's a mouthful but\nbasically we use html to define the\nbuilding blocks of our web pages\ncss is short for cascading stylesheet\nand is used for styling web pages and\nmaking them beautiful javascript is used\nfor adding functionality to web pages\nlet me give you an analogy think of a\nbuilding a building in the real world is\nlike a web page on the internet it has a\nskeleton or structure\nit can have pretty walls windows and\ntiles and it can have certain\nfunctionality for example when we press\nthe elevator button it comes to pick us\nup\nhere's a real example let's say we want\nto build a website like twitter for each\ntweet we want to have a layout like this\nso first we use html to define all the\nbuilding blocks of this layout what are\nthese building blocks here\nan image some text indicating the user's\ntwitter handle another block of text\ncontaining the message and three icons\nfor commenting retweeting and liking the\ntweet\nwe use html to add these building blocks\nto our web page then we use css to give\nit visual effects for example with css\nwe can make the font bold we can make\nour image round we can add some padding\naround here\nwe can change the color of these icons\nand define their look when we hover over\nthem so css is all about aesthetics or\nvisual effects with css we can also\ncreate beautiful animations now most web\npages these days are interactive they\nrespond to our actions like clicks and\nscrolls this is where javascript comes\nin with javascript we can add\nfunctionality or behavior to our web\npages for example we can like your tweet\nso javascript is a programming language\nwhile html and css are not meaning we\ncannot use them to tell computers what\nto do we use them to define the building\nblocks of our web pages and style them\nevery webpage you have seen on our\ninternet is built with these three\nlanguages so the better you learn and\nunderstand these languages and their\nfeatures the better you will be at\nfront-end development\nso your front-end development journey\nstarts with html and css i would say if\nyou spend three to five hours every day\nstudying and coding you should be able\nto have a reasonable understanding of\nthese two languages in about a month or\na month and a half once you learn these\nlanguages then you need to learn\njavascript i have a separate series for\nlearning javascript so after finishing\nthis series you may want to enroll in\nthat series i would say learning\njavascript would probably take another\nsix weeks of your time of course you're\nnot going to be a javascript expert in\njust six weeks but you will have a\nreasonable understanding of it and you\nwill learn more as you work on different\nprojects\nso the first three months is all about\nthe fundamentals\nnow building websites often include a\nbunch of repetitive tasks this is where\nfront-end frameworks and libraries come\nin a framework or a library comes with a\nlot of code that we can reuse in our\nwebsites so they help us get the job\ndone faster that's why a lot of\ncompanies these days use one of these\npopular frameworks like react angular or\nvue\nnow technically react is not a framework\nit's a library but subtle distinction on\nsite all these tools serve the same\npurpose they help us build applications\nfaster\nnow you don't need to learn all of these\nto get started different companies use\ndifferent tools for different projects\nso as you move from one project to\nanother you may want to learn about the\nother tools if you're starting out just\nfocus on react because it's the most\npopular tool in this space\nonce you learn react you can always\nlearn the other tools if needed for\nreact you would probably need one to two\nmonths again i have a comprehensive\ncourse on react more than 40 000 people\nhave taken this course and loved it\nalright what's the next step version\ncontrol systems we use a version control\nsystem to keep track of our project\nhistory and work collaboratively with\nothers there are many version control\nsystems out there like git subversion\nmercurial and so on but git is the most\npopular tool in this space and is used\nin more than 70 of software companies\nthat's why you'll see it in almost every\njob description i would say you would\nprobably need two weeks for learning git\nand again i have a comprehensive course\nfor you so these are the essential\nskills that every front-end developer\nmust have you'll see these listed on\nalmost every job description now\ndifferent jobs require other skills but\nthese skills vary from one company to\nanother so you can learn these\nadditional things in the future or on\nthe job for now just focus on these four\nskills or four steps remember less is\nmore don't try to learn too many things\nquickly you won't learn anything you'll\njust waste your time\nalright that's your roadmap next we're\ngoing to talk about how the web works\n[Music]\nhave you ever wondered how the web works\nin this lesson i'm going to tell you\nexactly what happens the moment you type\nthe address of a website into your\nbrowser and hit enter\nas part of this we're going to talk\nabout a few important concepts and terms\nthat you need to know as a web developer\nso let's say we launch our browser and\nhead over to a website like\ncodewithmosh.com\nnow this address that we have in the\nbrowser address bar is called a url\nwhich is short for uniform resource\nlocator basically it's a way to locate a\nresource on the internet resources can\nbe web pages also called html documents\nthey can be images video files fonts and\nso on so we type the url of a website\nand hit enter what happens now well\nthere are two pieces involved here the\nbrowser also called the client and the\ncomputer or computers that host our\ntarget website we refer to these as web\nservers or servers for short this is\nwhat we call the client server model the\nclient requests a service the server\nprovides the service\nso our browser sends a message to the\nserver and says hey give me the home\npage of this website this is kind of\nsimilar to how you send your friend a\ntext message you can think of your phone\nas the client sending the message and\nyour friend's phone as the server\nreceiving the message now back to our\nexample this message is formatted based\non a protocol called http or hypertext\ntransfer protocol you've probably\nnoticed it before but never know what it\nis in simple terms http is a language\nthat clients and servers use to talk to\neach other it's not a programming\nlanguage it's just a plain textual\nlanguage for communicating over the\ninternet we also have https which is\nhttp with encryption so the messages\nexchange between the client and the\nserver are encrypted here is a\nsimplified example of an http message\nwith this message the browser tells the\nserver what it's looking for\nso on the first line it says that it\nwants to get a page or a file called\nindex.html using http version 1.1\nindex.html often represents the home\npage of websites on the second line we\ncan see the host that is\ncodewithmosh.com and on the third line\nwe can see the language that the client\ncan accept in this case english\nnow don't worry about memorizing any of\nthis all i want you to understand here\nis that this message is structured based\non the http protocol that clients and\nservers understand so the server\nreceives this message it figures out\nwhat the client is asking and then it\nwill send a message back to the client\nthe first message is called an http\nrequest and the second message is called\nan http response every data exchange\nusing the http protocol involves two\nmessages a request and a response\nnow what is in the response here's a\nsimplified example\non the first line we see the version of\nhttp protocol used followed by a number\nwhich is the status code\n200 means successful or okay\nright below that we can see the date and\ntime of the response\nnext we can see the type of content the\nserver is sending back to the client in\nthis case text\nhtml and after that we can see the html\ncode or the html document that\nrepresents the home page of\ncodewithmosh.com of course the actual\nhtml code is way longer now as the\nbrowser reads this html document it\nconstructs what we call a dom or a\ndocument object model don't let this\nfancy name scare you this is a model\nthat represents the object or elements\nin our html document what are these\nelements all the building blocks of our\npage like paragraphs of text images\nlinks and other stuff you will see this\nin action in the next lesson\nnow as the browser is reading this html\ndocument that is returned from the\nserver it discovers references to other\nresources in this document like images\nfonts and other stuff each of these\nresources has an address or a url so for\neach resource the browser sends a\nseparate http request to the server to\nfetch that resource many of these http\nrequests are set in parallel so we can\nsee the page as quickly as possible once\nthe browser has all the necessary\nresources it will render the html\ndocument rendering an html document\nmeans displaying it it's a fancy\ntechnical term we use often\nso in a nutshell our browser sends an\nhttp request to the server and receives\nan http response this http response\ncontains an html document the browser\nreads that html document to construct a\ndocument object model and render the\npage\nin the next lesson i'm going to show you\nall of these steps in action\n[Music]\nall right let's see http requests and\nresponses in action\nso open up chrome and head over to\ngoogle.com now we need to access chrome\ndev tools this is a very powerful tool\nused by frontend developers so on the\ntop we go to view\ndeveloper\ndeveloper tools now look at the shortcut\non mac it's alt or option command and i\non windows is obviously different but\nremember the shortcut because it's much\nfaster to access the devtools via the\nkeyboard\nso\nhere's the dev tools the first time you\nsee it it might appear a bit\nintimidating but trust me it's much\neasier than you think throughout the\ncourse you're going to learn more about\nthe dev tools so here we have a few\ndifferent tabs elements console sources\nnetwork and so on in this demo we're\ngoing to go to the network tab so we can\ninspect the network traffic to and from\ngoogle.com\nnow by default devtools is docked to the\nbottom of the screen we can dock it to\nthe left to the right or undock it as a\nseparate window so over here\nwe can dock it to the left side\na lot of frontend developers like this\nlayout so they put devtools on the left\nside and they have their website on the\nright side now in this demo i'm going to\nundock it as a separate window so we\nhave more space to work with\nso\nlet's undock it\ngood\nnow we need to refresh our website as\nyou can see over here on match we can\npress command on r on windows is\nprobably control and r\nalternatively we can go back to this\nwindow\nand press the refresh button now\nback to the dev tools look at all these\nitems over here these are the http\nrequests that are sent from our browser\nto google.com\nas you can see\nthere are totally\n45 requests and here's the amount of\ndata transferred over the network so in\nthis case just over 94 kilobytes now\nlook at the first item in this list this\nis the first http request that chrome\nsent to google.com\nas you can see\nwith this request the browser wanted to\nget a document\nand the status of this request is 200\nwhich means okay over here you can see\nthe amount of data transferred over the\nnetwork for this request and the time it\ntook to get the response now if we click\non this request\nwe can see more details about it so here\non the headers tab we can see all the\nheaders of our request and response\nso here are some general headers like\nrequest url request method which is get\nstatus code that is 200 we talked about\nit remote address this is the new make\nrepresentation of google.com\nnow down below we have response editors\nthere are so many headers here you don't\nhave to worry about them but as an\nexample look at content type we talked\nabout this in the previous lesson so the\ntype of this response is text\nhtml below that we have the date and\ntime of the response\nnow if we click on the preview tab\nwe can see a preview of the html\ndocument that is returned from the\nserver so this is the home page of\ngoogle\nnow in this html document we have\nreferences to other resources like\nimages fonts and so on so all these\nsubsequent requests are sent to download\nthose resources so right below the first\nrequest we have a request for\ndownloading a png or an image file\nhere's another request for getting\nanother image we have two requests for\ngetting two different fonts and so on\nnow we can easily filter this list so\nlet's click on the filter icon here\nby default we see all requests but we\ncan filter by request type for example\nwe can select doc to see requests for\ndownloading html documents or font\nto see the requests that were sent to\ndownload fonts and so on next i'm going\nto show you how to create your first\nhtml document\n[Music]\nalright first things first here on your\ndesktop or anywhere on your computer\nright click and create a new folder i'm\ngoing to call this html but we could\ncall it anything\nnow let's go back to vs code\nand open the explorer panel\nthen we go to open folder\nand open the folder that we just created\ngood now this folder is currently empty\nso let's add a new file here called\nindex.html\nas i told you before index.html often\nrepresents the home page of websites so\nlet's go with that\nnow we can close the explorer panel by\npressing command and b on mac or control\nand b on windows\ngood\nnow the first thing we need to do here\nis to tell the browser that this is an\nhtml5 document\nso we type a left angle bracket\nnow look at this suggestion list the\nfirst item here is doctype or document\ntype let's press enter or tab\nvs code generated this piece of code for\nus\nso with this line of code we can tell\nbrowsers that this is an html5 document\nthis line of code here is called doctype\ndeclaration in the previous versions of\nhtml our doctype declaration was so long\nit was so messy but html5 solved this\nproblem so all we have to type is\ndoctype html and by the way html is not\na case sensitive language which means\nit's not sensitive to uppercase and\nlowercase letters but conventionally\nspeaking we type everything in lowercase\nexcept doctype this is just a convention\nwe could type this in lowercase and\nthat's perfectly fine\nso let's revert it back\nnow right after this we need to use our\nhtml elements to define the structure of\nthis web page\nthe first element we're going to use is\nthe html element so we type html and\nthen press tab or enter\nonce again vscode generated this piece\nof code for us\nso what we have here on the left side is\ncalled the opening tag\nand\nwhat we have on the right side is the\nclosing tag so most html elements have\nan opening and a closing tag but there\nare exceptions as i'm going to show you\nlater in this video\nnow inside this element we're going to\nadd additional elements now because i\ndon't want to type everything in one\nline i'm going to press enter\nthat's better now here we're going to\nadd two elements head and body so once\nagain we type head press tab good\nand then body\nwe use the head element to give browser\ninformation about this page for example\nhere we can use the title element\nto specify the title of this page that\nappears in the browser over here so\nlet's type my first web page\nnow let's save the changes by pressing\ncommand and s on mac or ctrl and s on\nwindows\ngood now before going any further let's\nright click somewhere\nand go to open with live server so we're\ngoing to open this page using the\ndevelopment server that we just\ninstalled\nokay\nall right take a look so our page is\ncurrently empty because we haven't added\nany elements inside this page and over\nhere we can see the title that we just\ntyped my first web page\nnow look at the url or address of this\npage we have 127.0.0.1\nthis number or this ip address\nrepresents the local computer it's\nglobally known so everybody knows\n127.0.0.1\nreferences the current computer\nafter that we have a colon\nand then we have\nthe port number on which our web server\nis listening so our web server is\nwaiting for http requests on this port\nokay\nthen we have a forward slash followed by\nthe name of our file\nindex.html\nnow back to vs code\ninside the body element we're going to\nadd elements that would appear on our\npage\nso let's say we want to display a tweet\nwhat elements do we need here an image\nand some text elements so we type img\nshort for image and then press tab\nhere's our image element now this image\nelement is different from the other\nelements we have created so far can you\ntell the differences\nthere are two differences here the first\ndifference is that here we don't have a\nclosing tag we only have an opening tag\nbecause the image element cannot have\nany child elements that's the reason now\nin the previous versions of html we used\nto add a forward slash here and this\nrepresents a self-closing tag but we\ndon't have to do this in html5 so i'm\ngoing to keep the code simpler\nnow here we have\ntwo attributes source and alt with these\nattributes we can supply additional\ninformation about an element\nso we use the source element to specify\nthe path to our image\nso let's open up the explorer panel one\nmore time by pressing command and b on\nmac or control and b on windows\nhere i'm going to create a new folder\ncalled images\nnow for this demo i'm going to use my\nown image which you can also download\nright below this video but you can use\nany image that you want\nso here's my image i'm going to drop it\nonto the images folder\nit's right here okay\nnow let's close this window\ngood\nso where is this image\nrelative to our index.html file\nit's inside the images folder right\nso here in double quotes we type images\nslash\nmosh.jpg\nnow vs code is suggesting this name so\nwe can press tab to complete the code\nbeautiful\nnow alt is short for alternative text\nand we use this attribute to give the\nbrowser some text to display in case the\nimage cannot be displayed we'll talk\nabout this in more detail in the future\nso for now i'm going to delete this\nattribute\ngood\nnow after the image we're going to add a\ntext element so we type p that is short\nfor paragraph tab\nand here we can type my twitter handle\nso at marsh hammondi\nafter that we're going to add another\ntext element\nand here we can type the body of our\ntweet so\ni love to\nteach you html\nperfect\nsave the changes\nnow back in the browser\nour page refreshed automatically this is\none of the beauties of live server so we\ndon't have to manually refresh the page\nevery time we make changes\nnow look at what we have here so we have\nmy image and right below that we have\ntwo text elements take a look\nunfortunately they're not very visible\nobviously this doesn't look like a tweet\nbecause we haven't applied css yet as i\ntold you before we use html to define\nthe structure or the building block of\nour web pages in the next lesson i'm\ngoing to show you how to apply css so\nour page looks kind of like a real tweet\n[Music]\nall right now let's see how we can use\ncss to improve the look and feel of this\npage\nlook at our head element currently we\nhave a single element inside the head\nelement that is our title element right\nnow after the title we're going to add\nanother element called style\nthis is where we're going to write our\ncss code\nso in between style tags we're going to\nwrite a bunch of css rules first we're\ngoing to work\non this image our image is currently too\nbig so let's make it a bit smaller\nback to vs code\nover here\nwe're going to type img to reference our\nimage element then we type a pair of\ncurly braces\nand inside the braces we write one or\nmore css declarations\neach declaration contains a property and\na value so here we can set the width\nproperty to let's say 100 pixels\nso we type the property colon and then\nthe value and then we terminate this\nline using a semicolon so we can write\nmultiple css declarations\nnow let's save the changes\nback in the browser our image looks\nsmaller that's a lot better\nbut look at the edges the edges are so\nsharp i would like to make them a bit\nround so they appear softer now back to\nour rule\nhere we're going to set\nthe border dash radius property to let's\nsay 10 pixels\nnow don't worry about memorizing any of\nthese properties we're going to go over\nthem several times throughout the course\nin this lesson i just want you to get a\nsense of what it's like to use css okay\nso save the changes\nnow look the edges are round and look\nsofter now let me show you a trick\nif we set border radius to a value that\nis half of the width we'll get a round\nimage so\ni'm going to set this to 50 pixels\nand here's the result that's a lot\nbetter\nnow our elements are stacked vertically\ni want the image to be pushed to the\nleft side so\nlet's set the float property to left\nthis will push the image element to the\nleft side of our text element take a\nlook\nso\nthat's a lot better but our image is so\nclose to the text i want to add some\nspace after the image so\nhere we use another property called\nmargin dash right\nwe can set it to 10 pixels\nsave and\nthat's a lot better\nnow let's make the username bold so\nwe're going to repeat one more time this\ntime we're going to apply a rule\nto our paragraph element\nso here we're going to set the font dash\nweight property to\nbolt\ntake a look\nsee what happened both our text elements\nare bold but what if you want to apply\nthis style only to the username\nwell we have to separate these two\nparagraph elements so i'm going to give\nthe first paragraph element an attribute\ncalled class\nso class equals double quotes\nclass is short for classification and we\ncan use this attribute to put this\nelement inside a different class or a\ndifferent category just like the\nproducts in a supermarket in a\nsupermarket we have products in\ndifferent categories right\nso i'm going to put this paragraph\nelement inside a class or inside a\ncategory called username\nand then\ni'm going to change this rule\nso\nthis rule is currently applied to all\nparagraph elements but i want it to be\napplied only to paragraph elements with\nthe username class so right after p we\ntype dot username\nnow we can also remove p\nand this rule will apply to all elements\nthat have the username class whether\nthere are paragraph elements or other\ntypes of elements okay\nnow save the changes and take a look so\nthat's a lot better\nthis is css in action as you can see css\nhas a different syntax or a different\ngrammar than html throughout the rest of\nthe course you're going to learn both\nthese languages in detail next i'm going\nto show you how to format your code\nusing prettier\nhey guys mosh here i just wanted to let\nyou know that this video you've been\nwatching is the first hour of my\nultimate html and css series so after\nyou watch this video if you want to\nlearn more from me you can enroll in the\nfull course which is about 13 hours long\nand covers everything you need to know\nto build professional quality websites\nwith html and css it also includes\nsummary notes exercises a real project a\ncertificate of accomplish and you can\nadd your resume and a 30-day money-back\nguarantee to get a refund if you are not\nsatisfied so you have nothing to lose\nand a lot to learn so if you're\ninterested i put the link in the\ndescription box\n[Music]\none thing you need to know about\nbrowsers is that they ignore white\nspaces in html and css code for example\ni can put all these elements on a single\nline\nand everything still works let me show\nyou so save the changes back in the\nbrowser we have the same result as\nbefore because browsers don't care how\nwe format our code but formatting is\nvery important when it comes to reading\nand maintaining code we want our code to\nbe beautiful and perfectly formatted\njust like an article this is where we\nuse the prettier plugin with prettier we\ncan format our code in a consistent\nfashion this is super important when\nyou're part of a team because different\npeople have different ways of formatting\ntheir code but if everyone on the team\nuses the prettier plugin the code will\nbe consistently formatted so let me show\nyou how to use preview\non the top we go to the view menu\nlook at the shortcut for the command\npalette on mac it's shift command and p\non windows it's probably shift control\nmp\nso let's bring up the command panel and\nhere we search for\nformat document now we press enter\nwe get this message saying there are\nmultiple formatters for html files\nselect the default formatter to continue\nthe reason we're getting this message is\nthat vs code by default comes with a\nformatter for formatting html files but\nwe have installed prettier which is a\nseparate formatter\nso let's go to configure\nand tell vs go to use prettier to format\nhtml and css files\nokay\nnow prettier formatting my code so none\nof those elements are on the same line\nthis is a lot better but let me show you\na trick we don't want to format our code\nevery time we make a change\nso we can configure vs code to\nautomatically format the code the moment\nwe save the changes so on the top let's\ngo to the code menu then preferences and\nsettings\nlike here search for format and save\nhere's the setting let's enable this\nsetting\nnow\nevery time we save the changes vs code\nautomatically formats our code using\nprettier\n[Music]\nwe talked about the dom or document\nobject model i told you that when the\nbrowser reads the html document that is\nreturned from the server it constructs a\ndocument object model now let me show\nyou this document object model in action\nso once again we're going to use chrome\ndev tools the shortcut on mac is shift\ncommand and i on windows is probably\nshift control and i i'm not really sure\nso let's open up dev tools\nnow in this lesson we're going to look\nat the elements tab\nnow what we have here on the left side\nis our document object model so we see\nthe same elements that we created\nearlier in the course we have the html\nelement head body and so on but we have\nsome additional elements that are\ninjected by live server for example we\nhave the script element and two divs\ndon't worry about these these are purely\nused by live server so it automatically\nreloads our page now we can hover over\nany of these elements and you can see\nthat element highlighted on the screen\nnow we can click an element\nand on the right side we can see the\nstyles applied to this element so look\nat the styles we defined for the image\nelement\nwith border radius and so on we can\nenable or disable these styles so we can\ndisable the width property and now our\nimage is big\nwe can bring it back we can also change\nits value so we can set it to let's say\n50 pixels\nnow our image is smaller\nwe can use the up and down arrows\nto change this value this is pretty\nhandy so a lot of front-end developers\nuse devtools to play with these styles\nand get the look they want once they\nfigure out the exact styles and their\nvalues then they apply them in the code\nnow one more thing\nover here we can see where these styles\nhave been applied so\nin index.html on line six we can click\non this link and this takes us to the\nexact line of code where\nwe wrote that style now we are currently\non the sources tab so we can go back to\nelements and inspect other elements\nso this is the basics of inspecting\nelements using devtools we're going to\ntalk about this in more detail in the\nfuture\n[Music]\nthe last thing we're going to cover in\nthis section is validation\nso as we write code we may run into\nproblems if you have a typo in our code\nor don't use the right syntax or grammar\nour web pages may not look as expected\nin these situations we can use a\nvalidator to identify the potential\nerrors in our code now currently we\ndon't have any problems on this web page\nit looks perfectly fine to me but let's\nrun it by the standard html validator so\nwe go to validator.w3.org\nthis is a standard markup validation\nservice we have three methods for\nvalidating our html markup we can\nvalidate by an address if our website is\nlive on our internet but this doesn't\nwork for us because our website is\ncurrently hosted locally in our\ndevelopment server so this ip address\nthat we have over here\n127.0.0.1 this is a local ip address so\nno one else can access our website\nso here we have two other methods we can\nvalidate by file upload or by direct\ninput\nin this case i'm going to go with file\nupload\nso let's upload our\nindex.html file and check\nso look we have one warning and two\nerrors the warning is saying that we\nhaven't added the lang or language\nattribute to the html start tag this is\na common best practice because with this\nwe can tell search engines what is the\nlanguage of this webpage so they can do\na better job at displaying the results\nthis is very easy to fix so here's our\nhtml tag we're going to add the lang\nattribute and set it to en which is\nshort for english\nnow what is next\nwe have an error saying the character\nencoding was not declared don't worry\nabout this we'll talk about this in the\nnext section so let's look at the second\nerror\nit's saying that an image element must\nhave an alt attribute so earlier we had\nthis auth attribute i told you that we\nuse the alt attribute to provide a\ndescription for our image\nso if the image cannot be displayed the\nalternative text will be displayed again\nwe're going to talk about the alt\nattribute in more detail in the future\nso back to our code let's fix this error\nreal quick here's our image tag\nlet's add the auto attribute\nand for the description i'm going to say\nan image of mosh hammer daddy\nnow save the changes\nlet's re-upload the file and validate it\none more time\nokay this time we have only a single\nerror and that has to do with character\nencoding which we're going to talk about\nin the next section\nso this is all about html validation\nnow for css we have a different\nvalidator\nso we go to jigsaw.w3.org\ncss\nvalidator now you don't have to memorize\nthis address simply go to google and\nsearch for css validator\nhere's the first link\nso\nwe have the same interface we can\nvalidate our css code using an address\nor by file upload or direct input\nnow in this case we have embedded all of\nour css code inside our html markup but\nas our web pages get more complex we\nwant to separate our css code into\nseparate files so our code is better\norganized we'll talk about this in more\ndetail in the future so for now i'm\ngoing to copy\nall of our css code\nand then go to the third tab\npaste it over here\nand validate it\nso we don't have any errors everything\nis perfect\nso this is all about validation\nvalidation is very important if your web\npages aren't displayed as expected\nalways start with a quick validation\nbecause this can often point you in the\nright direction\nright that brings us to the end of this\nsection in the next section we're going\nto explore html in more detail\n[Music]\nwe're going to continue our web\ndevelopment journey and explore html in\nmore detail so in this section we're\ngoing to cover the essential html\nelements you need to know to build web\npages\nyou will learn all the elements used for\ndisplaying text links images lists\ntables as well as container and\nstructural or semantic elements even if\nyou know the basics of html i would\nstill encourage you to watch this\nsection thoroughly because a lot of\npeople don't use these elements the\nright way so let's jump in and get\nstarted\n[Music]\nearlier in the course i told you that we\nuse the head section to give browsers\nand search engines information about the\nweb page so let's explore it in a bit\nmore detail i'm going to start with a\nblank document now let me show you a\ncool trick\nif we type an exclamation mark and then\npress tab\nwe get a basic html boilerplate which\nmeans a basic html template\nso on the top we have our doctype\ndeclaration\nbelow that we have our html element with\nthe lang attribute which is a common\nbest practice\nnext we have our head section with a\nbunch of elements we're going to talk\nabout in a second\nfollowed by the body section so this is\na very basic html boiler plate\nnow what do we have in the head section\nwell\nwe have a couple of metal elements for\ngiving information about this web page\nthe first meta element is for defining\nthe character set what is a character\nset well\ncomputers don't understand characters\nlike abc and so on they only understand\nnumbers which are represented in the\nbinary format zeros and ones so using a\ncharacter set we can map a character to\na numeric value\nthe first character set that was\ndesigned was the ascii character set\nwhich is short for american standard\ncode for information interchange ascii\ncan only represent the characters in the\nenglish language so it's very limited\nso over here different character sets\nhave been created to represent more\ncharacters in international languages\nthe character said that we use most of\nthe time these days is utf-8 which can\nrepresent almost all characters in the\nworld\nso back to our code with this meta\nelement we're defining the character set\nused in this html document okay\nnow below that we have\na meta element for configuring the\nviewport\nthe viewport is the visible area of a\nweb page so it is this area over here\nobviously on a mobile device or on a\ntablet our viewport is smaller but here\non desktop we can change the size of the\nviewport by resizing the browser\nso now our viewport is smaller okay\nnow back to our code\nwith this element we're defining the\ninitial width and\nzoom factor\nfor the viewport we'll talk about this\nin more detail in the future for now all\ni want you to know is that we need this\nelement so our web pages look good on\nall devices mobiles tablets and desktop\ncomputers so as a best practice every\nweb page should have at least these two\nmeta elements but we have additional\nmeta elements let me show you so if you\ntype meta\nin this list you can see all possible\nmeta elements\nfor example we have this element for\ndefining keywords on a web page so let's\nselect this\nhere we can type multiple keywords like\nhtml comma css and so on\nin the past these keywords were heavily\nused for search engine optimization but\nthese days most search engines don't put\ntoo much weight on these keywords but we\ncan still use them to define the\nkeywords that represent this page\nwe have another meta element for\ndefining a description for this page so\nif you type meta colon desk and then\npress tab or enter\nhere we can type a description for this\npage\nwhat we type here will appear on google\nor other search engines when someone\nsearches for a website for example if we\nsearch for apple here's what we get now\nlook at this text\nwhat you see here\ncomes from this element over here so\nthis is the purpose of metal elements\nwith this metal element we can give\ninformation about the web page\nalright next we're going to talk about\nthe elements you need to know for\nworking with text\n[Music]\nall right now let's talk about the most\ncommon elements for working with text\nso you learn about the p or paragraph\nelement which we use for displaying some\ntext\nso here i'm going to say i love to teach\nyou html\nnow sometimes we want to emphasize a\npart of our text let's say the html word\nhere to do that we can wrap it inside an\nm or emphasis element so here i type m\npress tab here's the emphasis element\nlet's hover over it and see what the\ntooltip says\nit says the m element represents stress\nemphasis of its content so whenever we\nwant to emphasize some content we can\nwrap it inside the m element so in this\ncase i'm going to move html inside these\ntags\nnow let's save the changes\nhere's what we get so by default\nbrowsers display emphasized content in\nitalic but don't assume that whenever\nyou want to display italic content you\nshould use the m element because the\npurpose of the m element is to emphasize\ncontent in our html document and this\nhelps search engines extract important\ncontent in our documents anything to do\nwith styling should be done in css for\nexample here we can change the default\nstyle of emphasize element and remove\nthe italic let me show you so in the\nhead section\nwe add the style element\nand here we define a rule for emphasized\ncontent\nwe can set the color to red\nand font style\nto normal\nnow don't worry about memorizing any of\nthese css properties we're going to go\nover them multiple times throughout the\ncourse but let's see what happens now\nthat we apply these styles\nso our emphasized content is displayed\nin red and is no longer italic\nnow in the past we had an element called\ni\nwhich was short for italic\nif we use this element\nwe get the same result as before\nour content is displayed in italic\nbut this element is considered\ndeprecated because html is not meant for\nstyling it should only be used for\nstructuring content\nso don't use the i element to display\ncontent as italic okay\nnow we have a similar element in html\ncalled strong\nlet's hover over it and see\nwhat the tooltip says the strong element\nrepresents strong importance seriousness\nor urgency of its contents\nconceptually it's kind of similar to the\nemphasis element so where you should use\nit really depends on your context on\nyour content now let's save the changes\nand see what we get\nso by default strong elements are\ndisplayed as bold but once again we can\nalways change the styling now in the\npast we had another element called b\nwhich is short for bold so whenever we\nwanted to make something bold we use\nthis element but once again this element\nis considered deprecated because styling\nshould be done in css and not in html\nokay\nso don't use b or i elements\nnow i'm going to remove\nthis element and just add html let me\nshow you a cool trick\nlet's say we want to wrap this word with\nthe m element there is a shortcut for it\nso on the top we go to the view menu\nlook at the shortcut for the command\npalette on mac is shift command on p and\non windows is probably shift ctrl np\nso let's select html\nand then bring up the command palette\nwith this command palette we can execute\ncommands in vs code so here i'm going to\nsearch for a command called wrap with\nabbreviation that is the first command\nin the list\nnow we press enter and here we type the\nelement that we want to use to wrap our\nselected content in this case m\npress enter done\nso i didn't have to manually create an m\nelement and then move html inside it\nit's very handy\nso this is all about text now let's talk\nabout headings\nso in html we have six heading elements\nh1\nwe have h2\nh3\nh4\nh5\nand h6\nso let's see what we get\nso\nheading 1 represents the most important\nheading and heading 6 represents the\nleast important heading\nnow one common mistake that i see\namongst a lot of people is that they\nchoose these headings based on their\nsize so if they want to have a heading\nwith this size they would just use\nheading 4. that is not how you're\nsupposed to use headings because the\nsize can always be changed with css it's\na matter of styling we should use these\nheadings to create a hierarchy so every\nweb page should have one and only one h1\nelement this heading represents what\nthis page is all about now nothing\nhappens if you have multiple h1 elements\nfor example\ni can duplicate this line and say\nheading 1 plus\nnow look we have two h1 elements but\nthis is going to confuse search engines\nthey're not going to figure out what\nthis page is really all about\nso every page should have a single\nh1 element so\ni'm going to remove this line\nnow after we use h1 then we should use\nh2 we should not jump to h4\nso let's say on this page we're going to\nhave two sections one for html the other\nfor css so my next heading should be h2\nand here we can type html\nobviously below this heading we can have\nsome text\nso i'm going to say html tutorial\nour next heading should be h2 so\nthis is the css section\nand in this section we can have some\nadditional text let's say css tutorial\nnow i'm going to delete\nthese four headings\nso\nlet's take a look\nso we have a hierarchy on the top we\nhave an h1 element below that we have\ntwo h2 elements now let's say in this\nsection we're going to have two\nsubsections there we should use h3\nelements\nso\nhere's our html section\nin this section we're going to have two\nh3 elements let's say code\nand exercise\nnow take a look\nso we have a hierarchy this is how we\nshould use these heading elements the\nbetter we can represent the structure of\nour document using html the better\nsearch engines can read and understand\nour content\nso that's all about text next we're\ngoing to talk about displaying special\ncharacters in html\n[Music]\nsome characters are reserved in html and\nto display them we have to use a special\nnotation for example let's say we want\nto wrap the word html with angle\nbrackets see what's going to happen so i\ntype a left angle bracket and a right\nangle bracket see what happened\nvs code thought we're adding an html\nelement so it automatically generated\nthe closing tag we don't want this so\nlet's delete it\nnow back in the browser\nlook where is our html word it's not\nhere because the browser interpreted\nthis\nas an html tag this is not what we want\nwe want to display this exactly as this\nso to solve this problem we're going to\nuse html entities all these entities\nstart with an ampersand and end with a\nsemicolon in between these two\ncharacters we type a few characters that\ndetermine the type of the html entity so\nwe have an entity for displaying the\nless than sign\nthat is l t short for less than\nnow let's remove this\nsimilarly we have another html entity\nfor displaying the greater than sign so\nwe type an ampersand gt which is short\nfor greater than\nfollowed by a semicolon\nnow back to the browser that's exactly\nwhat we wanted perfect another common\nhtml entity is the copyright symbol\nso\nat the end i'm going to type an\nampersand\ncopy and a semicolon\nnow take a look\nhere's our copyright symbol beautiful\nnow we have so many editors in html and\nquite frankly you don't need to memorize\nany of them in fact you're not going to\nuse 99 of them but in case you're\ncurious let me show you the complete\nlist\nso on google search for html entities\nand on this second link dev.w3.org\nyou can see the complete list of news\nentities\nso as you can see there are so many\nentities and honestly i have never used\nany of them the only ones i have used\nare these three plus non-breaking space\nlet me show you what that is about so\ni'm going to do this line\nand generate some dummy text so we add a\nparagraph element now to generate some\ndummy text we type lorem\nfollowed by the number of words we want\nto generate let's say 50. tab\nlook this is some dummy text in latin\nnow let's preview it in the browser\nso here's what we get\nlet's imagine that the last part on the\nfirst line\nand the first word on the second line\nshould be stick together here we have a\nline break in between these two words\nyou want to prevent that so\ni'm going to copy this word now\nhere in vs code let's bring up the\nsearch panel by pressing command and f\non mac or ctrl and f on windows\nnow we paste this word\nokay here it is we want to make sure\nthat these two words are always together\nthere is no line breaking between them\nso i'm going to replace this regular\nspace with a non-breaking space which is\nan html entity so we type an ampersand\nnbsp which is short for non-breaking\nspace\nfollowed by a semicolon\nnow take a look\nso\nboth these words\nare on the second line\nso this is all about html entities next\nwe're going to talk about links\n[Music]\nalmost every webpage on the internet has\nlinks to other pages or websites to\ncreate these links we use the anchor\nelement so we type a that is short for\nanchor and then press tab\nnow every anchor element should have an\nhref attribute\nhref is short for hypertext reference i\nknow it's a mouthful it basically means\na url or a link so for this demo i'm\ngoing to create a second page called\nabout.html and then link to it over here\nso in the explorer panel\nlet's add a new page\ncalled about.html\nnow here we're going to create a basic\nhtml boilerplate remember how to do that\nwe type an exclamation mark and then\npress tab\nthat's it beautiful\nnow back to index.html\nhere we can use a relative or an\nabsolute url what do you mean by that\nwell a relative url starts from the\ncurrent page so currently we are on\nindex.html and we want to go to\nabout.html\nnow currently both these pages are in\nthe same folder\nso we can type a relative url to\nabout.html like this about html\nthat's a relative url now what if\nabout.html was in a different folder so\nlet's add a new folder to our project\ncalled company\nand then move about\nto this folder\nnow where is about.html relative to the\ncurrent page it's inside the company\nfolder right so here we type company\nslash about.html\nthis is a relative url\nnow let's give this link a text i'm\ngoing to say about me so we type our\ntext inside the anchor element okay\nsave the changes\nback to the browser here's our link\nclick\nand we're currently on the about page\nwhich is empty beautiful\nnow back to our homepage\ninstead of a text we can also use an\nimage so i'm going to delete about me\nand add an image element so img tab once\nagain here we can type a relative url to\nour target image so i'm going to go with\nimages\nmosh.jpg now save\ntake a look\nobviously this image is way too big we\ncan always use css to resize it but that\naside look at the mouse icon\nwhen we hover over this image it changed\nto a hand to indicate that this image is\nclickable okay\nnow back to our code to keep things\nsimple i'm going to get rid of this\nimage and\nget back\nto our text about me\nnow let's go to the about page and add a\nlink back to the home page so\nover here\nwe're going to add\nan anchor element\nwhat should we type for the href\nattribute well currently we are inside\nthe company folder we have to go one\nlevel up so we can access index.html\nright\nto do that we type double periods and a\nforward slash with this we can go one\nlevel up now at this level which is the\nroot of our website we have the company\nfolder the images folder and index.html\nso we can reference index.html\nand for the text we're going to say home\npage again this is another example of a\nrelative url because it starts from the\ncurrent page and goes somewhere else now\nif you're inside a deeply nested folder\nstructure we might have to go multiple\nlevels up so double period and a forward\nslash then we repeat and repeat with\nthis we can go three levels up\nnow as you can see urls like this kind\nof look messy they look hard to read in\nthose cases we can use an absolute url\nso we start with a forward slash and\nthis represents the root of our website\nat this level we have access to\nindex.html\nso this is an absolute url okay\nnow back to index.html\nhere we are linking to an html document\nbut we can also link to non-html\ndocuments like images pdfs powerpoints\nand so on so let's add a link to my\nimage so for the href i'm going to say\nimages slash mosh.jpg\nand for the text i'm going to say my\nphoto\nsave\ntake a look so here's our second link\nclick\nmy image is displayed in the browser\nbut what if i want to prompt the user to\ndownload it that's very easy\nwe're going to add the download\nattribute to our anchor element so we\ntype download press enter now this\nattribute doesn't have a value so we can\nremove the double quotes and the equal\nsign\nso we just add the attribute name now\nsave\nback to the browser\nwe go back\nhere we have to manually refresh the\npage because the live server only\nrefreshes the current page now\npreviously we were on my image so that\nwas the url that live server refreshed\nso here we refresh\nto get the latest changes now when i\nclick on this link instead of seeing my\nimage we're going to see my image\ngetting downloaded take a look click\nand here's my image beautiful\nnow we can also link to other parts of\nthis page so\nlet's create two sections with a lot of\ntext so i'm going to add an h2 element\nand of course i missed the h1 but let's\nnot worry about it for this h2 we're\ngoing to say html\nand below that we're going to add some\ndummy text with 200 words so paragraph\nlorem 200\ngood\nnow right after that we're going to add\nanother h2 for the css section\nwith some more text\nokay\nlet's save the changes\ntake a look\nas you can see the css section is below\ndefault so we have to scroll down to see\nwhat we can do here\nis on the top we can add a link to the\ncss section so when the user clicks on\nthat they will immediately jump to the\ncss section that is very easy\nso here's the css section first we have\nto give this element a unique identifier\njust like everyone in the real world can\nhave a unique identifier like a driver's\nlicense or a password every element on a\npage can also have a unique identifier\nso here i'm going to set the id\nattribute to\ncss\nor we can use a more descriptive name\nlike section\ndash css\nthe name doesn't really matter here what\nmatters is that we're defining what is\ncalled a fragment or a place on this\npage now we're going to add a link to\nthis fragment so on the top\nlet's add another anchor element\nnow for the href we're going to type\nthe pound sign followed by the name of\nour fragment which is section\ncss\nand for the text we're going to say css\nnow\nback to the browser take a look i'm\ngoing to click on this\nwe immediately jump to the css section\nbeautiful now a lot of websites like\nthis also have a link that helps you\njump to the top of the page let's see\nhow we can create that\nso after the css section\ni'm going to add\nanother anchor element\nnow for the href i'm going to use\nan empty fragment so we just type a\npound sign without an identifier\nand then we say jump to top\ntake a look so\nhere's our link click and now we're on\ntop of the page now let's see how we can\nlink to external websites\nso let's add another anchor element to\nlink to google\nnow what should we type here well\ngoogle.com is a different website so\nhere we cannot use a relative url we\nhave to use an absolute url but if you\nstart with a forward slash we're\nreferencing the root of our website but\nin this case we want to go to a\ndifferent website how can we do that\nwell we have to start with the protocol\nso https colon\nto forward slashes google.com\nnow let's type google\nand test our page\nclick\nwe're on google beautiful now sometimes\nwhen linking to external website we want\nthat link to open in a new browser\nwindow or a new tab let me show you how\nto do that\nso\nhere's our anchor\nwe set the target attribute to underline\nblank\nsave\nnow back to the homepage once again we\nhave to manually refresh to get the\nlatest changes\nokay\nnow when i click on google\nyou see a new tab beautiful and one last\nthing\nwe can also link to emails so i'm going\nto add an anchor\nand for href i'm going to say mailto\ncolon\nprogramming\nwith mosh gmail.com\nemail me\nsave the changes\nnow back to our page when i click on\nthis link my mail client will open and\nmy email address will be pre-populated\ntake a look so click\nand here's my mail client\nso this is all about links now one last\nthing before we finish this lesson what\nis the difference between a link and a\nhyperlink well a link is just an address\na url the location of the target page a\nhyperlink is the element that the user\ncan click on to navigate to that target\npage that is the difference between a\nlink and a hyperlink but quite often\nthese terms are used interchangeably\nalright we're done with this lesson next\nwe're going to talk about images\n[Music]\nall right now let's talk about embedding\nimages in a bit more detail for this\nlesson i'm going to grab an image from\nunsplash.com which is where we can find\na lot of beautiful and freely usable\nimages\nso let's search for coffee\nthere are tons of coffee pictures here\ni'm going to grab\nthis picture\nwe can download it for free\nnow look this image comes in different\nsizes small medium and large for now\nwe're going to grab this image in a\nsmall size but in the future we're going\nto talk about embedding images at\ndifferent sizes depending on the device\nso on mobile devices we want to serve a\nsmaller image and on desktop computers\nwe want to serve a larger image for now\nlet's not worry about these complexities\nwe'll have a conflict section on this\ntopic later on\nso let's download the small image\nnow it says say thank you to nathan\nthanks nathan this is a beautiful\npicture you have done a great job\nnow i'm going to drag and drop this\nimage onto the images folder\nand then rename it to coffee\nwe want to give it a descriptive name\nthis is a small search engine\noptimization tip when we provide\ndescriptive names for our images search\nengines can better understand and index\nour pages okay\nso here's our image now\nlet's add an image element\nwe set the source to images\ncoffee.jpg\nnow what about the alt attribute well i\nbriefly mentioned that we use this\nattribute to provide textual description\nof the image it's not compulsory but is\nhighly recommended for a number of\nreasons the first reason is to make our\npage accessible to visually impaired\npeople these people use a screen reader\nto read the web out to them so with this\nalternative text we can tell them what\nwe are showing on the page and that\nmeans we should write a good meaningful\ndescription here like a coffee mug\non a table\ndon't write something like image or\nimage one that is pointless now the\nsecond benefit of providing an\nalternative text is that we help search\nengines read this text and understand\nwhat we're providing here and there's\none more benefit\nif this image cannot be loaded for some\nreason the alternative text is shown let\nme show you what i mean so i'm going to\nadd a typo here\nnow\nback to the browser look\nthe image is not loaded but we see the\nalternative text this can also happen if\nthere is a network connectivity issue if\nthe user gets disconnected they can\nstill see the alternative text\nso let's remove the typo now let's talk\nabout sizing images as i told you before\nwe can use css to resize our images so\nhere in the head section\nlet's add\na style element\nand apply a rule to our image\nnow this rule is applied to all images\non the page this is probably not\nsomething we want to do in the real\nworld scenario in a real-world scenario\nwe want to apply a class to this element\nand then define rules for that class\nwe'll talk about this in more detail in\nthe future\nso for now let's give this image a width\nof 200 pixels and a height of 200 pixels\nnow\nthere's a tiny problem in our image can\nyou tell\nour image is kind of squashed here's the\nreason\nwe're dealing with a rectangular image\nlook this is a rectangular image but\nwe're converting it to a square image\nnow look at the shape of this coffee mug\nit's kind of round right like compared\nwith\nwhat we have over here our image is\nvertically squashed let me show you\nanother way to verify this\nwe can right click on the image\nand then go to inspect\nthis opens chrome devtools and selects\nour image in the dom\nnow on the right side we can see the\nstyles that we applied to this element\nnow i'm going to disable the height\nproperty\nand i want you to pay close attention to\nthe image and see how the shape changes\nso look\nnow the coffee mug is more round but if\ni applied the height property\nit becomes squashed so how can we solve\nthis problem well we have a new property\nin css called object fit\nso here we can set object fit to one of\nthese values most of the time we use\ncover so the image covers its containing\nbox what is this containing box well\nfirst let me set this to cover\nhere we have this image element right\nconceptually there is a box around every\nelement in an html document we don't see\nthis box but the browser uses that box\nto figure out how the page should be\ndisplayed so here we have a box with\nthis dimension 200x200 and in this box\nwe're trying to insert this image right\nnow when we set object fit to cover\nour image will get resized and\npotentially cropped so it covers the\nentire containing box let's verify this\nso save the changes and back in the\nbrowser look our coffee mug is round but\nif i disable the object fit property\nit gets squashed again\nso object fit is a very useful property\nnow we can always play with all possible\nvalues over here so i'm going to select\nthis deleted\nnow using the up and down arrows\nwe can go through this list and see the\nimpact of every value now i'm not going\nto go over all these values and explain\nwhat they mean this is pointless you can\nalways figure them out on your own just\nremember that most of the time\nwe use cover so the image covers the\nentire containing box\nalright this is all about the images for\nnow next we're going to talk about video\nand audio\nhey guys mosh here i just wanted to let\nyou know that this video you've been\nwatching is the first hour of my\nultimate html and css series so after\nyou watch this video if you want to\nlearn more from me you can enroll in the\nfull course which is about 13 hours long\nand covers everything you need to know\nto build professional quality websites\nwith html and css it also includes\nsummary notes exercises a real project a\ncertificate of accomplish and you can\nadd your resume and a 30 day money back\nguarantee to get a refund if you're not\nsatisfied so you have nothing to lose\nand a lot to learn so if you're\ninterested i put the link in the\ndescription box\n",
  "words": [
    "welcome",
    "first",
    "part",
    "ultimate",
    "html",
    "css",
    "series",
    "series",
    "going",
    "take",
    "journey",
    "teach",
    "skills",
    "need",
    "build",
    "fast",
    "beautiful",
    "websites",
    "look",
    "great",
    "kinds",
    "devices",
    "assuming",
    "know",
    "nothing",
    "html",
    "css",
    "want",
    "learn",
    "everything",
    "scratch",
    "first",
    "part",
    "series",
    "going",
    "talk",
    "fundamentals",
    "web",
    "development",
    "html",
    "css",
    "second",
    "part",
    "explore",
    "advanced",
    "concepts",
    "third",
    "part",
    "put",
    "everything",
    "together",
    "build",
    "beautiful",
    "responsive",
    "blazingly",
    "fast",
    "website",
    "imaginary",
    "cloud",
    "hosting",
    "company",
    "called",
    "mashify",
    "want",
    "play",
    "website",
    "head",
    "see",
    "going",
    "build",
    "series",
    "ash",
    "hamadani",
    "taught",
    "millions",
    "people",
    "code",
    "become",
    "professional",
    "software",
    "engineers",
    "coding",
    "school",
    "youtube",
    "channel",
    "new",
    "sure",
    "subscribe",
    "upload",
    "new",
    "videos",
    "time",
    "let",
    "jump",
    "get",
    "started",
    "music",
    "right",
    "let",
    "talk",
    "tools",
    "need",
    "take",
    "course",
    "starter",
    "need",
    "code",
    "editor",
    "many",
    "code",
    "editors",
    "like",
    "visual",
    "studio",
    "code",
    "vs",
    "code",
    "sublime",
    "text",
    "adam",
    "course",
    "going",
    "use",
    "vs",
    "code",
    "along",
    "extensions",
    "starting",
    "web",
    "server",
    "formatting",
    "code",
    "welcome",
    "use",
    "favorite",
    "code",
    "editor",
    "know",
    "otherwise",
    "head",
    "download",
    "latest",
    "version",
    "vs",
    "code",
    "inside",
    "vs",
    "code",
    "going",
    "install",
    "couple",
    "extensions",
    "let",
    "open",
    "extensions",
    "panel",
    "search",
    "preview",
    "extension",
    "going",
    "install",
    "prettier",
    "code",
    "formatter",
    "extension",
    "format",
    "code",
    "make",
    "pretty",
    "popular",
    "extension",
    "see",
    "downloaded",
    "9",
    "million",
    "times",
    "going",
    "install",
    "button",
    "click",
    "done",
    "next",
    "going",
    "install",
    "another",
    "extension",
    "called",
    "live",
    "server",
    "launch",
    "website",
    "inside",
    "development",
    "web",
    "server",
    "popular",
    "extension",
    "downloaded",
    "almost",
    "8",
    "million",
    "times",
    "addition",
    "going",
    "use",
    "browser",
    "view",
    "test",
    "web",
    "pages",
    "use",
    "favorite",
    "browser",
    "course",
    "going",
    "use",
    "google",
    "chrome",
    "encourage",
    "use",
    "browser",
    "easily",
    "follow",
    "course",
    "going",
    "start",
    "web",
    "development",
    "journey",
    "every",
    "section",
    "learn",
    "something",
    "new",
    "web",
    "development",
    "end",
    "course",
    "put",
    "together",
    "build",
    "beautiful",
    "web",
    "page",
    "section",
    "going",
    "talk",
    "fundamentals",
    "web",
    "development",
    "learn",
    "languages",
    "tools",
    "used",
    "web",
    "development",
    "well",
    "key",
    "concepts",
    "vocabulary",
    "url",
    "http",
    "gum",
    "also",
    "going",
    "talk",
    "websites",
    "work",
    "understand",
    "exactly",
    "happens",
    "hood",
    "use",
    "browser",
    "visit",
    "website",
    "also",
    "learn",
    "inspect",
    "network",
    "traffic",
    "using",
    "chrome",
    "dev",
    "tools",
    "powerful",
    "tool",
    "used",
    "developers",
    "also",
    "talk",
    "basics",
    "html",
    "css",
    "validating",
    "web",
    "pages",
    "something",
    "lot",
    "developers",
    "miss",
    "going",
    "awesome",
    "journey",
    "let",
    "jump",
    "get",
    "started",
    "music",
    "course",
    "first",
    "step",
    "towards",
    "becoming",
    "web",
    "developer",
    "let",
    "give",
    "simple",
    "roadmap",
    "know",
    "go",
    "next",
    "every",
    "website",
    "two",
    "parts",
    "front",
    "end",
    "backhand",
    "front",
    "end",
    "part",
    "see",
    "browser",
    "interact",
    "visual",
    "aspects",
    "back",
    "end",
    "part",
    "powers",
    "front",
    "end",
    "behind",
    "scenes",
    "mainly",
    "storing",
    "data",
    "databases",
    "providing",
    "front",
    "end",
    "web",
    "development",
    "jobs",
    "fall",
    "three",
    "main",
    "categories",
    "development",
    "development",
    "development",
    "involves",
    "development",
    "developers",
    "use",
    "html",
    "css",
    "javascript",
    "build",
    "developers",
    "different",
    "sets",
    "tools",
    "available",
    "outside",
    "scope",
    "course",
    "let",
    "talk",
    "html",
    "css",
    "javascript",
    "html",
    "short",
    "hypertext",
    "markup",
    "language",
    "know",
    "mouthful",
    "basically",
    "use",
    "html",
    "define",
    "building",
    "blocks",
    "web",
    "pages",
    "css",
    "short",
    "cascading",
    "stylesheet",
    "used",
    "styling",
    "web",
    "pages",
    "making",
    "beautiful",
    "javascript",
    "used",
    "adding",
    "functionality",
    "web",
    "pages",
    "let",
    "give",
    "analogy",
    "think",
    "building",
    "building",
    "real",
    "world",
    "like",
    "web",
    "page",
    "internet",
    "skeleton",
    "structure",
    "pretty",
    "walls",
    "windows",
    "tiles",
    "certain",
    "functionality",
    "example",
    "press",
    "elevator",
    "button",
    "comes",
    "pick",
    "us",
    "real",
    "example",
    "let",
    "say",
    "want",
    "build",
    "website",
    "like",
    "twitter",
    "tweet",
    "want",
    "layout",
    "like",
    "first",
    "use",
    "html",
    "define",
    "building",
    "blocks",
    "layout",
    "building",
    "blocks",
    "image",
    "text",
    "indicating",
    "user",
    "twitter",
    "handle",
    "another",
    "block",
    "text",
    "containing",
    "message",
    "three",
    "icons",
    "commenting",
    "retweeting",
    "liking",
    "tweet",
    "use",
    "html",
    "add",
    "building",
    "blocks",
    "web",
    "page",
    "use",
    "css",
    "give",
    "visual",
    "effects",
    "example",
    "css",
    "make",
    "font",
    "bold",
    "make",
    "image",
    "round",
    "add",
    "padding",
    "around",
    "change",
    "color",
    "icons",
    "define",
    "look",
    "hover",
    "css",
    "aesthetics",
    "visual",
    "effects",
    "css",
    "also",
    "create",
    "beautiful",
    "animations",
    "web",
    "pages",
    "days",
    "interactive",
    "respond",
    "actions",
    "like",
    "clicks",
    "scrolls",
    "javascript",
    "comes",
    "javascript",
    "add",
    "functionality",
    "behavior",
    "web",
    "pages",
    "example",
    "like",
    "tweet",
    "javascript",
    "programming",
    "language",
    "html",
    "css",
    "meaning",
    "use",
    "tell",
    "computers",
    "use",
    "define",
    "building",
    "blocks",
    "web",
    "pages",
    "style",
    "every",
    "webpage",
    "seen",
    "internet",
    "built",
    "three",
    "languages",
    "better",
    "learn",
    "understand",
    "languages",
    "features",
    "better",
    "development",
    "development",
    "journey",
    "starts",
    "html",
    "css",
    "would",
    "say",
    "spend",
    "three",
    "five",
    "hours",
    "every",
    "day",
    "studying",
    "coding",
    "able",
    "reasonable",
    "understanding",
    "two",
    "languages",
    "month",
    "month",
    "half",
    "learn",
    "languages",
    "need",
    "learn",
    "javascript",
    "separate",
    "series",
    "learning",
    "javascript",
    "finishing",
    "series",
    "may",
    "want",
    "enroll",
    "series",
    "would",
    "say",
    "learning",
    "javascript",
    "would",
    "probably",
    "take",
    "another",
    "six",
    "weeks",
    "time",
    "course",
    "going",
    "javascript",
    "expert",
    "six",
    "weeks",
    "reasonable",
    "understanding",
    "learn",
    "work",
    "different",
    "projects",
    "first",
    "three",
    "months",
    "fundamentals",
    "building",
    "websites",
    "often",
    "include",
    "bunch",
    "repetitive",
    "tasks",
    "frameworks",
    "libraries",
    "come",
    "framework",
    "library",
    "comes",
    "lot",
    "code",
    "reuse",
    "websites",
    "help",
    "us",
    "get",
    "job",
    "done",
    "faster",
    "lot",
    "companies",
    "days",
    "use",
    "one",
    "popular",
    "frameworks",
    "like",
    "react",
    "angular",
    "vue",
    "technically",
    "react",
    "framework",
    "library",
    "subtle",
    "distinction",
    "site",
    "tools",
    "serve",
    "purpose",
    "help",
    "us",
    "build",
    "applications",
    "faster",
    "need",
    "learn",
    "get",
    "started",
    "different",
    "companies",
    "use",
    "different",
    "tools",
    "different",
    "projects",
    "move",
    "one",
    "project",
    "another",
    "may",
    "want",
    "learn",
    "tools",
    "starting",
    "focus",
    "react",
    "popular",
    "tool",
    "space",
    "learn",
    "react",
    "always",
    "learn",
    "tools",
    "needed",
    "react",
    "would",
    "probably",
    "need",
    "one",
    "two",
    "months",
    "comprehensive",
    "course",
    "react",
    "40",
    "000",
    "people",
    "taken",
    "course",
    "loved",
    "alright",
    "next",
    "step",
    "version",
    "control",
    "systems",
    "use",
    "version",
    "control",
    "system",
    "keep",
    "track",
    "project",
    "history",
    "work",
    "collaboratively",
    "others",
    "many",
    "version",
    "control",
    "systems",
    "like",
    "git",
    "subversion",
    "mercurial",
    "git",
    "popular",
    "tool",
    "space",
    "used",
    "70",
    "software",
    "companies",
    "see",
    "almost",
    "every",
    "job",
    "description",
    "would",
    "say",
    "would",
    "probably",
    "need",
    "two",
    "weeks",
    "learning",
    "git",
    "comprehensive",
    "course",
    "essential",
    "skills",
    "every",
    "developer",
    "must",
    "see",
    "listed",
    "almost",
    "every",
    "job",
    "description",
    "different",
    "jobs",
    "require",
    "skills",
    "skills",
    "vary",
    "one",
    "company",
    "another",
    "learn",
    "additional",
    "things",
    "future",
    "job",
    "focus",
    "four",
    "skills",
    "four",
    "steps",
    "remember",
    "less",
    "try",
    "learn",
    "many",
    "things",
    "quickly",
    "wo",
    "learn",
    "anything",
    "waste",
    "time",
    "alright",
    "roadmap",
    "next",
    "going",
    "talk",
    "web",
    "works",
    "music",
    "ever",
    "wondered",
    "web",
    "works",
    "lesson",
    "going",
    "tell",
    "exactly",
    "happens",
    "moment",
    "type",
    "address",
    "website",
    "browser",
    "hit",
    "enter",
    "part",
    "going",
    "talk",
    "important",
    "concepts",
    "terms",
    "need",
    "know",
    "web",
    "developer",
    "let",
    "say",
    "launch",
    "browser",
    "head",
    "website",
    "like",
    "address",
    "browser",
    "address",
    "bar",
    "called",
    "url",
    "short",
    "uniform",
    "resource",
    "locator",
    "basically",
    "way",
    "locate",
    "resource",
    "internet",
    "resources",
    "web",
    "pages",
    "also",
    "called",
    "html",
    "documents",
    "images",
    "video",
    "files",
    "fonts",
    "type",
    "url",
    "website",
    "hit",
    "enter",
    "happens",
    "well",
    "two",
    "pieces",
    "involved",
    "browser",
    "also",
    "called",
    "client",
    "computer",
    "computers",
    "host",
    "target",
    "website",
    "refer",
    "web",
    "servers",
    "servers",
    "short",
    "call",
    "client",
    "server",
    "model",
    "client",
    "requests",
    "service",
    "server",
    "provides",
    "service",
    "browser",
    "sends",
    "message",
    "server",
    "says",
    "hey",
    "give",
    "home",
    "page",
    "website",
    "kind",
    "similar",
    "send",
    "friend",
    "text",
    "message",
    "think",
    "phone",
    "client",
    "sending",
    "message",
    "friend",
    "phone",
    "server",
    "receiving",
    "message",
    "back",
    "example",
    "message",
    "formatted",
    "based",
    "protocol",
    "called",
    "http",
    "hypertext",
    "transfer",
    "protocol",
    "probably",
    "noticed",
    "never",
    "know",
    "simple",
    "terms",
    "http",
    "language",
    "clients",
    "servers",
    "use",
    "talk",
    "programming",
    "language",
    "plain",
    "textual",
    "language",
    "communicating",
    "internet",
    "also",
    "https",
    "http",
    "encryption",
    "messages",
    "exchange",
    "client",
    "server",
    "encrypted",
    "simplified",
    "example",
    "http",
    "message",
    "message",
    "browser",
    "tells",
    "server",
    "looking",
    "first",
    "line",
    "says",
    "wants",
    "get",
    "page",
    "file",
    "called",
    "using",
    "http",
    "version",
    "often",
    "represents",
    "home",
    "page",
    "websites",
    "second",
    "line",
    "see",
    "host",
    "third",
    "line",
    "see",
    "language",
    "client",
    "accept",
    "case",
    "english",
    "worry",
    "memorizing",
    "want",
    "understand",
    "message",
    "structured",
    "based",
    "http",
    "protocol",
    "clients",
    "servers",
    "understand",
    "server",
    "receives",
    "message",
    "figures",
    "client",
    "asking",
    "send",
    "message",
    "back",
    "client",
    "first",
    "message",
    "called",
    "http",
    "request",
    "second",
    "message",
    "called",
    "http",
    "response",
    "every",
    "data",
    "exchange",
    "using",
    "http",
    "protocol",
    "involves",
    "two",
    "messages",
    "request",
    "response",
    "response",
    "simplified",
    "example",
    "first",
    "line",
    "see",
    "version",
    "http",
    "protocol",
    "used",
    "followed",
    "number",
    "status",
    "code",
    "200",
    "means",
    "successful",
    "okay",
    "right",
    "see",
    "date",
    "time",
    "response",
    "next",
    "see",
    "type",
    "content",
    "server",
    "sending",
    "back",
    "client",
    "case",
    "text",
    "html",
    "see",
    "html",
    "code",
    "html",
    "document",
    "represents",
    "home",
    "page",
    "course",
    "actual",
    "html",
    "code",
    "way",
    "longer",
    "browser",
    "reads",
    "html",
    "document",
    "constructs",
    "call",
    "dom",
    "document",
    "object",
    "model",
    "let",
    "fancy",
    "name",
    "scare",
    "model",
    "represents",
    "object",
    "elements",
    "html",
    "document",
    "elements",
    "building",
    "blocks",
    "page",
    "like",
    "paragraphs",
    "text",
    "images",
    "links",
    "stuff",
    "see",
    "action",
    "next",
    "lesson",
    "browser",
    "reading",
    "html",
    "document",
    "returned",
    "server",
    "discovers",
    "references",
    "resources",
    "document",
    "like",
    "images",
    "fonts",
    "stuff",
    "resources",
    "address",
    "url",
    "resource",
    "browser",
    "sends",
    "separate",
    "http",
    "request",
    "server",
    "fetch",
    "resource",
    "many",
    "http",
    "requests",
    "set",
    "parallel",
    "see",
    "page",
    "quickly",
    "possible",
    "browser",
    "necessary",
    "resources",
    "render",
    "html",
    "document",
    "rendering",
    "html",
    "document",
    "means",
    "displaying",
    "fancy",
    "technical",
    "term",
    "use",
    "often",
    "nutshell",
    "browser",
    "sends",
    "http",
    "request",
    "server",
    "receives",
    "http",
    "response",
    "http",
    "response",
    "contains",
    "html",
    "document",
    "browser",
    "reads",
    "html",
    "document",
    "construct",
    "document",
    "object",
    "model",
    "render",
    "page",
    "next",
    "lesson",
    "going",
    "show",
    "steps",
    "action",
    "music",
    "right",
    "let",
    "see",
    "http",
    "requests",
    "responses",
    "action",
    "open",
    "chrome",
    "head",
    "need",
    "access",
    "chrome",
    "dev",
    "tools",
    "powerful",
    "tool",
    "used",
    "frontend",
    "developers",
    "top",
    "go",
    "view",
    "developer",
    "developer",
    "tools",
    "look",
    "shortcut",
    "mac",
    "alt",
    "option",
    "command",
    "windows",
    "obviously",
    "different",
    "remember",
    "shortcut",
    "much",
    "faster",
    "access",
    "devtools",
    "via",
    "keyboard",
    "dev",
    "tools",
    "first",
    "time",
    "see",
    "might",
    "appear",
    "bit",
    "intimidating",
    "trust",
    "much",
    "easier",
    "think",
    "throughout",
    "course",
    "going",
    "learn",
    "dev",
    "tools",
    "different",
    "tabs",
    "elements",
    "console",
    "sources",
    "network",
    "demo",
    "going",
    "go",
    "network",
    "tab",
    "inspect",
    "network",
    "traffic",
    "default",
    "devtools",
    "docked",
    "bottom",
    "screen",
    "dock",
    "left",
    "right",
    "undock",
    "separate",
    "window",
    "dock",
    "left",
    "side",
    "lot",
    "frontend",
    "developers",
    "like",
    "layout",
    "put",
    "devtools",
    "left",
    "side",
    "website",
    "right",
    "side",
    "demo",
    "going",
    "undock",
    "separate",
    "window",
    "space",
    "work",
    "let",
    "undock",
    "good",
    "need",
    "refresh",
    "website",
    "see",
    "match",
    "press",
    "command",
    "r",
    "windows",
    "probably",
    "control",
    "r",
    "alternatively",
    "go",
    "back",
    "window",
    "press",
    "refresh",
    "button",
    "back",
    "dev",
    "tools",
    "look",
    "items",
    "http",
    "requests",
    "sent",
    "browser",
    "see",
    "totally",
    "45",
    "requests",
    "amount",
    "data",
    "transferred",
    "network",
    "case",
    "94",
    "kilobytes",
    "look",
    "first",
    "item",
    "list",
    "first",
    "http",
    "request",
    "chrome",
    "sent",
    "see",
    "request",
    "browser",
    "wanted",
    "get",
    "document",
    "status",
    "request",
    "200",
    "means",
    "okay",
    "see",
    "amount",
    "data",
    "transferred",
    "network",
    "request",
    "time",
    "took",
    "get",
    "response",
    "click",
    "request",
    "see",
    "details",
    "headers",
    "tab",
    "see",
    "headers",
    "request",
    "response",
    "general",
    "headers",
    "like",
    "request",
    "url",
    "request",
    "method",
    "get",
    "status",
    "code",
    "200",
    "talked",
    "remote",
    "address",
    "new",
    "make",
    "representation",
    "response",
    "editors",
    "many",
    "headers",
    "worry",
    "example",
    "look",
    "content",
    "type",
    "talked",
    "previous",
    "lesson",
    "type",
    "response",
    "text",
    "html",
    "date",
    "time",
    "response",
    "click",
    "preview",
    "tab",
    "see",
    "preview",
    "html",
    "document",
    "returned",
    "server",
    "home",
    "page",
    "google",
    "html",
    "document",
    "references",
    "resources",
    "like",
    "images",
    "fonts",
    "subsequent",
    "requests",
    "sent",
    "download",
    "resources",
    "right",
    "first",
    "request",
    "request",
    "downloading",
    "png",
    "image",
    "file",
    "another",
    "request",
    "getting",
    "another",
    "image",
    "two",
    "requests",
    "getting",
    "two",
    "different",
    "fonts",
    "easily",
    "filter",
    "list",
    "let",
    "click",
    "filter",
    "icon",
    "default",
    "see",
    "requests",
    "filter",
    "request",
    "type",
    "example",
    "select",
    "doc",
    "see",
    "requests",
    "downloading",
    "html",
    "documents",
    "font",
    "see",
    "requests",
    "sent",
    "download",
    "fonts",
    "next",
    "going",
    "show",
    "create",
    "first",
    "html",
    "document",
    "music",
    "alright",
    "first",
    "things",
    "first",
    "desktop",
    "anywhere",
    "computer",
    "right",
    "click",
    "create",
    "new",
    "folder",
    "going",
    "call",
    "html",
    "could",
    "call",
    "anything",
    "let",
    "go",
    "back",
    "vs",
    "code",
    "open",
    "explorer",
    "panel",
    "go",
    "open",
    "folder",
    "open",
    "folder",
    "created",
    "good",
    "folder",
    "currently",
    "empty",
    "let",
    "add",
    "new",
    "file",
    "called",
    "told",
    "often",
    "represents",
    "home",
    "page",
    "websites",
    "let",
    "go",
    "close",
    "explorer",
    "panel",
    "pressing",
    "command",
    "b",
    "mac",
    "control",
    "b",
    "windows",
    "good",
    "first",
    "thing",
    "need",
    "tell",
    "browser",
    "html5",
    "document",
    "type",
    "left",
    "angle",
    "bracket",
    "look",
    "suggestion",
    "list",
    "first",
    "item",
    "doctype",
    "document",
    "type",
    "let",
    "press",
    "enter",
    "tab",
    "vs",
    "code",
    "generated",
    "piece",
    "code",
    "us",
    "line",
    "code",
    "tell",
    "browsers",
    "html5",
    "document",
    "line",
    "code",
    "called",
    "doctype",
    "declaration",
    "previous",
    "versions",
    "html",
    "doctype",
    "declaration",
    "long",
    "messy",
    "html5",
    "solved",
    "problem",
    "type",
    "doctype",
    "html",
    "way",
    "html",
    "case",
    "sensitive",
    "language",
    "means",
    "sensitive",
    "uppercase",
    "lowercase",
    "letters",
    "conventionally",
    "speaking",
    "type",
    "everything",
    "lowercase",
    "except",
    "doctype",
    "convention",
    "could",
    "type",
    "lowercase",
    "perfectly",
    "fine",
    "let",
    "revert",
    "back",
    "right",
    "need",
    "use",
    "html",
    "elements",
    "define",
    "structure",
    "web",
    "page",
    "first",
    "element",
    "going",
    "use",
    "html",
    "element",
    "type",
    "html",
    "press",
    "tab",
    "enter",
    "vscode",
    "generated",
    "piece",
    "code",
    "us",
    "left",
    "side",
    "called",
    "opening",
    "tag",
    "right",
    "side",
    "closing",
    "tag",
    "html",
    "elements",
    "opening",
    "closing",
    "tag",
    "exceptions",
    "going",
    "show",
    "later",
    "video",
    "inside",
    "element",
    "going",
    "add",
    "additional",
    "elements",
    "want",
    "type",
    "everything",
    "one",
    "line",
    "going",
    "press",
    "enter",
    "better",
    "going",
    "add",
    "two",
    "elements",
    "head",
    "body",
    "type",
    "head",
    "press",
    "tab",
    "good",
    "body",
    "use",
    "head",
    "element",
    "give",
    "browser",
    "information",
    "page",
    "example",
    "use",
    "title",
    "element",
    "specify",
    "title",
    "page",
    "appears",
    "browser",
    "let",
    "type",
    "first",
    "web",
    "page",
    "let",
    "save",
    "changes",
    "pressing",
    "command",
    "mac",
    "ctrl",
    "windows",
    "good",
    "going",
    "let",
    "right",
    "click",
    "somewhere",
    "go",
    "open",
    "live",
    "server",
    "going",
    "open",
    "page",
    "using",
    "development",
    "server",
    "installed",
    "okay",
    "right",
    "take",
    "look",
    "page",
    "currently",
    "empty",
    "added",
    "elements",
    "inside",
    "page",
    "see",
    "title",
    "typed",
    "first",
    "web",
    "page",
    "look",
    "url",
    "address",
    "page",
    "number",
    "ip",
    "address",
    "represents",
    "local",
    "computer",
    "globally",
    "known",
    "everybody",
    "knows",
    "references",
    "current",
    "computer",
    "colon",
    "port",
    "number",
    "web",
    "server",
    "listening",
    "web",
    "server",
    "waiting",
    "http",
    "requests",
    "port",
    "okay",
    "forward",
    "slash",
    "followed",
    "name",
    "file",
    "back",
    "vs",
    "code",
    "inside",
    "body",
    "element",
    "going",
    "add",
    "elements",
    "would",
    "appear",
    "page",
    "let",
    "say",
    "want",
    "display",
    "tweet",
    "elements",
    "need",
    "image",
    "text",
    "elements",
    "type",
    "img",
    "short",
    "image",
    "press",
    "tab",
    "image",
    "element",
    "image",
    "element",
    "different",
    "elements",
    "created",
    "far",
    "tell",
    "differences",
    "two",
    "differences",
    "first",
    "difference",
    "closing",
    "tag",
    "opening",
    "tag",
    "image",
    "element",
    "child",
    "elements",
    "reason",
    "previous",
    "versions",
    "html",
    "used",
    "add",
    "forward",
    "slash",
    "represents",
    "tag",
    "html5",
    "going",
    "keep",
    "code",
    "simpler",
    "two",
    "attributes",
    "source",
    "alt",
    "attributes",
    "supply",
    "additional",
    "information",
    "element",
    "use",
    "source",
    "element",
    "specify",
    "path",
    "image",
    "let",
    "open",
    "explorer",
    "panel",
    "one",
    "time",
    "pressing",
    "command",
    "b",
    "mac",
    "control",
    "b",
    "windows",
    "going",
    "create",
    "new",
    "folder",
    "called",
    "images",
    "demo",
    "going",
    "use",
    "image",
    "also",
    "download",
    "right",
    "video",
    "use",
    "image",
    "want",
    "image",
    "going",
    "drop",
    "onto",
    "images",
    "folder",
    "right",
    "okay",
    "let",
    "close",
    "window",
    "good",
    "image",
    "relative",
    "file",
    "inside",
    "images",
    "folder",
    "right",
    "double",
    "quotes",
    "type",
    "images",
    "slash",
    "vs",
    "code",
    "suggesting",
    "name",
    "press",
    "tab",
    "complete",
    "code",
    "beautiful",
    "alt",
    "short",
    "alternative",
    "text",
    "use",
    "attribute",
    "give",
    "browser",
    "text",
    "display",
    "case",
    "image",
    "displayed",
    "talk",
    "detail",
    "future",
    "going",
    "delete",
    "attribute",
    "good",
    "image",
    "going",
    "add",
    "text",
    "element",
    "type",
    "p",
    "short",
    "paragraph",
    "tab",
    "type",
    "twitter",
    "handle",
    "marsh",
    "hammondi",
    "going",
    "add",
    "another",
    "text",
    "element",
    "type",
    "body",
    "tweet",
    "love",
    "teach",
    "html",
    "perfect",
    "save",
    "changes",
    "back",
    "browser",
    "page",
    "refreshed",
    "automatically",
    "one",
    "beauties",
    "live",
    "server",
    "manually",
    "refresh",
    "page",
    "every",
    "time",
    "make",
    "changes",
    "look",
    "image",
    "right",
    "two",
    "text",
    "elements",
    "take",
    "look",
    "unfortunately",
    "visible",
    "obviously",
    "look",
    "like",
    "tweet",
    "applied",
    "css",
    "yet",
    "told",
    "use",
    "html",
    "define",
    "structure",
    "building",
    "block",
    "web",
    "pages",
    "next",
    "lesson",
    "going",
    "show",
    "apply",
    "css",
    "page",
    "looks",
    "kind",
    "like",
    "real",
    "tweet",
    "music",
    "right",
    "let",
    "see",
    "use",
    "css",
    "improve",
    "look",
    "feel",
    "page",
    "look",
    "head",
    "element",
    "currently",
    "single",
    "element",
    "inside",
    "head",
    "element",
    "title",
    "element",
    "right",
    "title",
    "going",
    "add",
    "another",
    "element",
    "called",
    "style",
    "going",
    "write",
    "css",
    "code",
    "style",
    "tags",
    "going",
    "write",
    "bunch",
    "css",
    "rules",
    "first",
    "going",
    "work",
    "image",
    "image",
    "currently",
    "big",
    "let",
    "make",
    "bit",
    "smaller",
    "back",
    "vs",
    "code",
    "going",
    "type",
    "img",
    "reference",
    "image",
    "element",
    "type",
    "pair",
    "curly",
    "braces",
    "inside",
    "braces",
    "write",
    "one",
    "css",
    "declarations",
    "declaration",
    "contains",
    "property",
    "value",
    "set",
    "width",
    "property",
    "let",
    "say",
    "100",
    "pixels",
    "type",
    "property",
    "colon",
    "value",
    "terminate",
    "line",
    "using",
    "semicolon",
    "write",
    "multiple",
    "css",
    "declarations",
    "let",
    "save",
    "changes",
    "back",
    "browser",
    "image",
    "looks",
    "smaller",
    "lot",
    "better",
    "look",
    "edges",
    "edges",
    "sharp",
    "would",
    "like",
    "make",
    "bit",
    "round",
    "appear",
    "softer",
    "back",
    "rule",
    "going",
    "set",
    "border",
    "dash",
    "radius",
    "property",
    "let",
    "say",
    "10",
    "pixels",
    "worry",
    "memorizing",
    "properties",
    "going",
    "go",
    "several",
    "times",
    "throughout",
    "course",
    "lesson",
    "want",
    "get",
    "sense",
    "like",
    "use",
    "css",
    "okay",
    "save",
    "changes",
    "look",
    "edges",
    "round",
    "look",
    "softer",
    "let",
    "show",
    "trick",
    "set",
    "border",
    "radius",
    "value",
    "half",
    "width",
    "get",
    "round",
    "image",
    "going",
    "set",
    "50",
    "pixels",
    "result",
    "lot",
    "better",
    "elements",
    "stacked",
    "vertically",
    "want",
    "image",
    "pushed",
    "left",
    "side",
    "let",
    "set",
    "float",
    "property",
    "left",
    "push",
    "image",
    "element",
    "left",
    "side",
    "text",
    "element",
    "take",
    "look",
    "lot",
    "better",
    "image",
    "close",
    "text",
    "want",
    "add",
    "space",
    "image",
    "use",
    "another",
    "property",
    "called",
    "margin",
    "dash",
    "right",
    "set",
    "10",
    "pixels",
    "save",
    "lot",
    "better",
    "let",
    "make",
    "username",
    "bold",
    "going",
    "repeat",
    "one",
    "time",
    "time",
    "going",
    "apply",
    "rule",
    "paragraph",
    "element",
    "going",
    "set",
    "font",
    "dash",
    "weight",
    "property",
    "bolt",
    "take",
    "look",
    "see",
    "happened",
    "text",
    "elements",
    "bold",
    "want",
    "apply",
    "style",
    "username",
    "well",
    "separate",
    "two",
    "paragraph",
    "elements",
    "going",
    "give",
    "first",
    "paragraph",
    "element",
    "attribute",
    "called",
    "class",
    "class",
    "equals",
    "double",
    "quotes",
    "class",
    "short",
    "classification",
    "use",
    "attribute",
    "put",
    "element",
    "inside",
    "different",
    "class",
    "different",
    "category",
    "like",
    "products",
    "supermarket",
    "supermarket",
    "products",
    "different",
    "categories",
    "right",
    "going",
    "put",
    "paragraph",
    "element",
    "inside",
    "class",
    "inside",
    "category",
    "called",
    "username",
    "going",
    "change",
    "rule",
    "rule",
    "currently",
    "applied",
    "paragraph",
    "elements",
    "want",
    "applied",
    "paragraph",
    "elements",
    "username",
    "class",
    "right",
    "p",
    "type",
    "dot",
    "username",
    "also",
    "remove",
    "p",
    "rule",
    "apply",
    "elements",
    "username",
    "class",
    "whether",
    "paragraph",
    "elements",
    "types",
    "elements",
    "okay",
    "save",
    "changes",
    "take",
    "look",
    "lot",
    "better",
    "css",
    "action",
    "see",
    "css",
    "different",
    "syntax",
    "different",
    "grammar",
    "html",
    "throughout",
    "rest",
    "course",
    "going",
    "learn",
    "languages",
    "detail",
    "next",
    "going",
    "show",
    "format",
    "code",
    "using",
    "prettier",
    "hey",
    "guys",
    "mosh",
    "wanted",
    "let",
    "know",
    "video",
    "watching",
    "first",
    "hour",
    "ultimate",
    "html",
    "css",
    "series",
    "watch",
    "video",
    "want",
    "learn",
    "enroll",
    "full",
    "course",
    "13",
    "hours",
    "long",
    "covers",
    "everything",
    "need",
    "know",
    "build",
    "professional",
    "quality",
    "websites",
    "html",
    "css",
    "also",
    "includes",
    "summary",
    "notes",
    "exercises",
    "real",
    "project",
    "certificate",
    "accomplish",
    "add",
    "resume",
    "guarantee",
    "get",
    "refund",
    "satisfied",
    "nothing",
    "lose",
    "lot",
    "learn",
    "interested",
    "put",
    "link",
    "description",
    "box",
    "music",
    "one",
    "thing",
    "need",
    "know",
    "browsers",
    "ignore",
    "white",
    "spaces",
    "html",
    "css",
    "code",
    "example",
    "put",
    "elements",
    "single",
    "line",
    "everything",
    "still",
    "works",
    "let",
    "show",
    "save",
    "changes",
    "back",
    "browser",
    "result",
    "browsers",
    "care",
    "format",
    "code",
    "formatting",
    "important",
    "comes",
    "reading",
    "maintaining",
    "code",
    "want",
    "code",
    "beautiful",
    "perfectly",
    "formatted",
    "like",
    "article",
    "use",
    "prettier",
    "plugin",
    "prettier",
    "format",
    "code",
    "consistent",
    "fashion",
    "super",
    "important",
    "part",
    "team",
    "different",
    "people",
    "different",
    "ways",
    "formatting",
    "code",
    "everyone",
    "team",
    "uses",
    "prettier",
    "plugin",
    "code",
    "consistently",
    "formatted",
    "let",
    "show",
    "use",
    "preview",
    "top",
    "go",
    "view",
    "menu",
    "look",
    "shortcut",
    "command",
    "palette",
    "mac",
    "shift",
    "command",
    "p",
    "windows",
    "probably",
    "shift",
    "control",
    "mp",
    "let",
    "bring",
    "command",
    "panel",
    "search",
    "format",
    "document",
    "press",
    "enter",
    "get",
    "message",
    "saying",
    "multiple",
    "formatters",
    "html",
    "files",
    "select",
    "default",
    "formatter",
    "continue",
    "reason",
    "getting",
    "message",
    "vs",
    "code",
    "default",
    "comes",
    "formatter",
    "formatting",
    "html",
    "files",
    "installed",
    "prettier",
    "separate",
    "formatter",
    "let",
    "go",
    "configure",
    "tell",
    "vs",
    "go",
    "use",
    "prettier",
    "format",
    "html",
    "css",
    "files",
    "okay",
    "prettier",
    "formatting",
    "code",
    "none",
    "elements",
    "line",
    "lot",
    "better",
    "let",
    "show",
    "trick",
    "want",
    "format",
    "code",
    "every",
    "time",
    "make",
    "change",
    "configure",
    "vs",
    "code",
    "automatically",
    "format",
    "code",
    "moment",
    "save",
    "changes",
    "top",
    "let",
    "go",
    "code",
    "menu",
    "preferences",
    "settings",
    "like",
    "search",
    "format",
    "save",
    "setting",
    "let",
    "enable",
    "setting",
    "every",
    "time",
    "save",
    "changes",
    "vs",
    "code",
    "automatically",
    "formats",
    "code",
    "using",
    "prettier",
    "music",
    "talked",
    "dom",
    "document",
    "object",
    "model",
    "told",
    "browser",
    "reads",
    "html",
    "document",
    "returned",
    "server",
    "constructs",
    "document",
    "object",
    "model",
    "let",
    "show",
    "document",
    "object",
    "model",
    "action",
    "going",
    "use",
    "chrome",
    "dev",
    "tools",
    "shortcut",
    "mac",
    "shift",
    "command",
    "windows",
    "probably",
    "shift",
    "control",
    "really",
    "sure",
    "let",
    "open",
    "dev",
    "tools",
    "lesson",
    "going",
    "look",
    "elements",
    "tab",
    "left",
    "side",
    "document",
    "object",
    "model",
    "see",
    "elements",
    "created",
    "earlier",
    "course",
    "html",
    "element",
    "head",
    "body",
    "additional",
    "elements",
    "injected",
    "live",
    "server",
    "example",
    "script",
    "element",
    "two",
    "divs",
    "worry",
    "purely",
    "used",
    "live",
    "server",
    "automatically",
    "reloads",
    "page",
    "hover",
    "elements",
    "see",
    "element",
    "highlighted",
    "screen",
    "click",
    "element",
    "right",
    "side",
    "see",
    "styles",
    "applied",
    "element",
    "look",
    "styles",
    "defined",
    "image",
    "element",
    "border",
    "radius",
    "enable",
    "disable",
    "styles",
    "disable",
    "width",
    "property",
    "image",
    "big",
    "bring",
    "back",
    "also",
    "change",
    "value",
    "set",
    "let",
    "say",
    "50",
    "pixels",
    "image",
    "smaller",
    "use",
    "arrows",
    "change",
    "value",
    "pretty",
    "handy",
    "lot",
    "developers",
    "use",
    "devtools",
    "play",
    "styles",
    "get",
    "look",
    "want",
    "figure",
    "exact",
    "styles",
    "values",
    "apply",
    "code",
    "one",
    "thing",
    "see",
    "styles",
    "applied",
    "line",
    "six",
    "click",
    "link",
    "takes",
    "us",
    "exact",
    "line",
    "code",
    "wrote",
    "style",
    "currently",
    "sources",
    "tab",
    "go",
    "back",
    "elements",
    "inspect",
    "elements",
    "basics",
    "inspecting",
    "elements",
    "using",
    "devtools",
    "going",
    "talk",
    "detail",
    "future",
    "music",
    "last",
    "thing",
    "going",
    "cover",
    "section",
    "validation",
    "write",
    "code",
    "may",
    "run",
    "problems",
    "typo",
    "code",
    "use",
    "right",
    "syntax",
    "grammar",
    "web",
    "pages",
    "may",
    "look",
    "expected",
    "situations",
    "use",
    "validator",
    "identify",
    "potential",
    "errors",
    "code",
    "currently",
    "problems",
    "web",
    "page",
    "looks",
    "perfectly",
    "fine",
    "let",
    "run",
    "standard",
    "html",
    "validator",
    "go",
    "standard",
    "markup",
    "validation",
    "service",
    "three",
    "methods",
    "validating",
    "html",
    "markup",
    "validate",
    "address",
    "website",
    "live",
    "internet",
    "work",
    "us",
    "website",
    "currently",
    "hosted",
    "locally",
    "development",
    "server",
    "ip",
    "address",
    "local",
    "ip",
    "address",
    "one",
    "else",
    "access",
    "website",
    "two",
    "methods",
    "validate",
    "file",
    "upload",
    "direct",
    "input",
    "case",
    "going",
    "go",
    "file",
    "upload",
    "let",
    "upload",
    "file",
    "check",
    "look",
    "one",
    "warning",
    "two",
    "errors",
    "warning",
    "saying",
    "added",
    "lang",
    "language",
    "attribute",
    "html",
    "start",
    "tag",
    "common",
    "best",
    "practice",
    "tell",
    "search",
    "engines",
    "language",
    "webpage",
    "better",
    "job",
    "displaying",
    "results",
    "easy",
    "fix",
    "html",
    "tag",
    "going",
    "add",
    "lang",
    "attribute",
    "set",
    "en",
    "short",
    "english",
    "next",
    "error",
    "saying",
    "character",
    "encoding",
    "declared",
    "worry",
    "talk",
    "next",
    "section",
    "let",
    "look",
    "second",
    "error",
    "saying",
    "image",
    "element",
    "must",
    "alt",
    "attribute",
    "earlier",
    "auth",
    "attribute",
    "told",
    "use",
    "alt",
    "attribute",
    "provide",
    "description",
    "image",
    "image",
    "displayed",
    "alternative",
    "text",
    "displayed",
    "going",
    "talk",
    "alt",
    "attribute",
    "detail",
    "future",
    "back",
    "code",
    "let",
    "fix",
    "error",
    "real",
    "quick",
    "image",
    "tag",
    "let",
    "add",
    "auto",
    "attribute",
    "description",
    "going",
    "say",
    "image",
    "mosh",
    "hammer",
    "daddy",
    "save",
    "changes",
    "let",
    "file",
    "validate",
    "one",
    "time",
    "okay",
    "time",
    "single",
    "error",
    "character",
    "encoding",
    "going",
    "talk",
    "next",
    "section",
    "html",
    "validation",
    "css",
    "different",
    "validator",
    "go",
    "css",
    "validator",
    "memorize",
    "address",
    "simply",
    "go",
    "google",
    "search",
    "css",
    "validator",
    "first",
    "link",
    "interface",
    "validate",
    "css",
    "code",
    "using",
    "address",
    "file",
    "upload",
    "direct",
    "input",
    "case",
    "embedded",
    "css",
    "code",
    "inside",
    "html",
    "markup",
    "web",
    "pages",
    "get",
    "complex",
    "want",
    "separate",
    "css",
    "code",
    "separate",
    "files",
    "code",
    "better",
    "organized",
    "talk",
    "detail",
    "future",
    "going",
    "copy",
    "css",
    "code",
    "go",
    "third",
    "tab",
    "paste",
    "validate",
    "errors",
    "everything",
    "perfect",
    "validation",
    "validation",
    "important",
    "web",
    "pages",
    "displayed",
    "expected",
    "always",
    "start",
    "quick",
    "validation",
    "often",
    "point",
    "right",
    "direction",
    "right",
    "brings",
    "us",
    "end",
    "section",
    "next",
    "section",
    "going",
    "explore",
    "html",
    "detail",
    "music",
    "going",
    "continue",
    "web",
    "development",
    "journey",
    "explore",
    "html",
    "detail",
    "section",
    "going",
    "cover",
    "essential",
    "html",
    "elements",
    "need",
    "know",
    "build",
    "web",
    "pages",
    "learn",
    "elements",
    "used",
    "displaying",
    "text",
    "links",
    "images",
    "lists",
    "tables",
    "well",
    "container",
    "structural",
    "semantic",
    "elements",
    "even",
    "know",
    "basics",
    "html",
    "would",
    "still",
    "encourage",
    "watch",
    "section",
    "thoroughly",
    "lot",
    "people",
    "use",
    "elements",
    "right",
    "way",
    "let",
    "jump",
    "get",
    "started",
    "music",
    "earlier",
    "course",
    "told",
    "use",
    "head",
    "section",
    "give",
    "browsers",
    "search",
    "engines",
    "information",
    "web",
    "page",
    "let",
    "explore",
    "bit",
    "detail",
    "going",
    "start",
    "blank",
    "document",
    "let",
    "show",
    "cool",
    "trick",
    "type",
    "exclamation",
    "mark",
    "press",
    "tab",
    "get",
    "basic",
    "html",
    "boilerplate",
    "means",
    "basic",
    "html",
    "template",
    "top",
    "doctype",
    "declaration",
    "html",
    "element",
    "lang",
    "attribute",
    "common",
    "best",
    "practice",
    "next",
    "head",
    "section",
    "bunch",
    "elements",
    "going",
    "talk",
    "second",
    "followed",
    "body",
    "section",
    "basic",
    "html",
    "boiler",
    "plate",
    "head",
    "section",
    "well",
    "couple",
    "metal",
    "elements",
    "giving",
    "information",
    "web",
    "page",
    "first",
    "meta",
    "element",
    "defining",
    "character",
    "set",
    "character",
    "set",
    "well",
    "computers",
    "understand",
    "characters",
    "like",
    "abc",
    "understand",
    "numbers",
    "represented",
    "binary",
    "format",
    "zeros",
    "ones",
    "using",
    "character",
    "set",
    "map",
    "character",
    "numeric",
    "value",
    "first",
    "character",
    "set",
    "designed",
    "ascii",
    "character",
    "set",
    "short",
    "american",
    "standard",
    "code",
    "information",
    "interchange",
    "ascii",
    "represent",
    "characters",
    "english",
    "language",
    "limited",
    "different",
    "character",
    "sets",
    "created",
    "represent",
    "characters",
    "international",
    "languages",
    "character",
    "said",
    "use",
    "time",
    "days",
    "represent",
    "almost",
    "characters",
    "world",
    "back",
    "code",
    "meta",
    "element",
    "defining",
    "character",
    "set",
    "used",
    "html",
    "document",
    "okay",
    "meta",
    "element",
    "configuring",
    "viewport",
    "viewport",
    "visible",
    "area",
    "web",
    "page",
    "area",
    "obviously",
    "mobile",
    "device",
    "tablet",
    "viewport",
    "smaller",
    "desktop",
    "change",
    "size",
    "viewport",
    "resizing",
    "browser",
    "viewport",
    "smaller",
    "okay",
    "back",
    "code",
    "element",
    "defining",
    "initial",
    "width",
    "zoom",
    "factor",
    "viewport",
    "talk",
    "detail",
    "future",
    "want",
    "know",
    "need",
    "element",
    "web",
    "pages",
    "look",
    "good",
    "devices",
    "mobiles",
    "tablets",
    "desktop",
    "computers",
    "best",
    "practice",
    "every",
    "web",
    "page",
    "least",
    "two",
    "meta",
    "elements",
    "additional",
    "meta",
    "elements",
    "let",
    "show",
    "type",
    "meta",
    "list",
    "see",
    "possible",
    "meta",
    "elements",
    "example",
    "element",
    "defining",
    "keywords",
    "web",
    "page",
    "let",
    "select",
    "type",
    "multiple",
    "keywords",
    "like",
    "html",
    "comma",
    "css",
    "past",
    "keywords",
    "heavily",
    "used",
    "search",
    "engine",
    "optimization",
    "days",
    "search",
    "engines",
    "put",
    "much",
    "weight",
    "keywords",
    "still",
    "use",
    "define",
    "keywords",
    "represent",
    "page",
    "another",
    "meta",
    "element",
    "defining",
    "description",
    "page",
    "type",
    "meta",
    "colon",
    "desk",
    "press",
    "tab",
    "enter",
    "type",
    "description",
    "page",
    "type",
    "appear",
    "google",
    "search",
    "engines",
    "someone",
    "searches",
    "website",
    "example",
    "search",
    "apple",
    "get",
    "look",
    "text",
    "see",
    "comes",
    "element",
    "purpose",
    "metal",
    "elements",
    "metal",
    "element",
    "give",
    "information",
    "web",
    "page",
    "alright",
    "next",
    "going",
    "talk",
    "elements",
    "need",
    "know",
    "working",
    "text",
    "music",
    "right",
    "let",
    "talk",
    "common",
    "elements",
    "working",
    "text",
    "learn",
    "p",
    "paragraph",
    "element",
    "use",
    "displaying",
    "text",
    "going",
    "say",
    "love",
    "teach",
    "html",
    "sometimes",
    "want",
    "emphasize",
    "part",
    "text",
    "let",
    "say",
    "html",
    "word",
    "wrap",
    "inside",
    "emphasis",
    "element",
    "type",
    "press",
    "tab",
    "emphasis",
    "element",
    "let",
    "hover",
    "see",
    "tooltip",
    "says",
    "says",
    "element",
    "represents",
    "stress",
    "emphasis",
    "content",
    "whenever",
    "want",
    "emphasize",
    "content",
    "wrap",
    "inside",
    "element",
    "case",
    "going",
    "move",
    "html",
    "inside",
    "tags",
    "let",
    "save",
    "changes",
    "get",
    "default",
    "browsers",
    "display",
    "emphasized",
    "content",
    "italic",
    "assume",
    "whenever",
    "want",
    "display",
    "italic",
    "content",
    "use",
    "element",
    "purpose",
    "element",
    "emphasize",
    "content",
    "html",
    "document",
    "helps",
    "search",
    "engines",
    "extract",
    "important",
    "content",
    "documents",
    "anything",
    "styling",
    "done",
    "css",
    "example",
    "change",
    "default",
    "style",
    "emphasize",
    "element",
    "remove",
    "italic",
    "let",
    "show",
    "head",
    "section",
    "add",
    "style",
    "element",
    "define",
    "rule",
    "emphasized",
    "content",
    "set",
    "color",
    "red",
    "font",
    "style",
    "normal",
    "worry",
    "memorizing",
    "css",
    "properties",
    "going",
    "go",
    "multiple",
    "times",
    "throughout",
    "course",
    "let",
    "see",
    "happens",
    "apply",
    "styles",
    "emphasized",
    "content",
    "displayed",
    "red",
    "longer",
    "italic",
    "past",
    "element",
    "called",
    "short",
    "italic",
    "use",
    "element",
    "get",
    "result",
    "content",
    "displayed",
    "italic",
    "element",
    "considered",
    "deprecated",
    "html",
    "meant",
    "styling",
    "used",
    "structuring",
    "content",
    "use",
    "element",
    "display",
    "content",
    "italic",
    "okay",
    "similar",
    "element",
    "html",
    "called",
    "strong",
    "let",
    "hover",
    "see",
    "tooltip",
    "says",
    "strong",
    "element",
    "represents",
    "strong",
    "importance",
    "seriousness",
    "urgency",
    "contents",
    "conceptually",
    "kind",
    "similar",
    "emphasis",
    "element",
    "use",
    "really",
    "depends",
    "context",
    "content",
    "let",
    "save",
    "changes",
    "see",
    "get",
    "default",
    "strong",
    "elements",
    "displayed",
    "bold",
    "always",
    "change",
    "styling",
    "past",
    "another",
    "element",
    "called",
    "b",
    "short",
    "bold",
    "whenever",
    "wanted",
    "make",
    "something",
    "bold",
    "use",
    "element",
    "element",
    "considered",
    "deprecated",
    "styling",
    "done",
    "css",
    "html",
    "okay",
    "use",
    "b",
    "elements",
    "going",
    "remove",
    "element",
    "add",
    "html",
    "let",
    "show",
    "cool",
    "trick",
    "let",
    "say",
    "want",
    "wrap",
    "word",
    "element",
    "shortcut",
    "top",
    "go",
    "view",
    "menu",
    "look",
    "shortcut",
    "command",
    "palette",
    "mac",
    "shift",
    "command",
    "p",
    "windows",
    "probably",
    "shift",
    "ctrl",
    "np",
    "let",
    "select",
    "html",
    "bring",
    "command",
    "palette",
    "command",
    "palette",
    "execute",
    "commands",
    "vs",
    "code",
    "going",
    "search",
    "command",
    "called",
    "wrap",
    "abbreviation",
    "first",
    "command",
    "list",
    "press",
    "enter",
    "type",
    "element",
    "want",
    "use",
    "wrap",
    "selected",
    "content",
    "case",
    "press",
    "enter",
    "done",
    "manually",
    "create",
    "element",
    "move",
    "html",
    "inside",
    "handy",
    "text",
    "let",
    "talk",
    "headings",
    "html",
    "six",
    "heading",
    "elements",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "let",
    "see",
    "get",
    "heading",
    "1",
    "represents",
    "important",
    "heading",
    "heading",
    "6",
    "represents",
    "least",
    "important",
    "heading",
    "one",
    "common",
    "mistake",
    "see",
    "amongst",
    "lot",
    "people",
    "choose",
    "headings",
    "based",
    "size",
    "want",
    "heading",
    "size",
    "would",
    "use",
    "heading",
    "supposed",
    "use",
    "headings",
    "size",
    "always",
    "changed",
    "css",
    "matter",
    "styling",
    "use",
    "headings",
    "create",
    "hierarchy",
    "every",
    "web",
    "page",
    "one",
    "one",
    "h1",
    "element",
    "heading",
    "represents",
    "page",
    "nothing",
    "happens",
    "multiple",
    "h1",
    "elements",
    "example",
    "duplicate",
    "line",
    "say",
    "heading",
    "1",
    "plus",
    "look",
    "two",
    "h1",
    "elements",
    "going",
    "confuse",
    "search",
    "engines",
    "going",
    "figure",
    "page",
    "really",
    "every",
    "page",
    "single",
    "h1",
    "element",
    "going",
    "remove",
    "line",
    "use",
    "h1",
    "use",
    "h2",
    "jump",
    "h4",
    "let",
    "say",
    "page",
    "going",
    "two",
    "sections",
    "one",
    "html",
    "css",
    "next",
    "heading",
    "h2",
    "type",
    "html",
    "obviously",
    "heading",
    "text",
    "going",
    "say",
    "html",
    "tutorial",
    "next",
    "heading",
    "h2",
    "css",
    "section",
    "section",
    "additional",
    "text",
    "let",
    "say",
    "css",
    "tutorial",
    "going",
    "delete",
    "four",
    "headings",
    "let",
    "take",
    "look",
    "hierarchy",
    "top",
    "h1",
    "element",
    "two",
    "h2",
    "elements",
    "let",
    "say",
    "section",
    "going",
    "two",
    "subsections",
    "use",
    "h3",
    "elements",
    "html",
    "section",
    "section",
    "going",
    "two",
    "h3",
    "elements",
    "let",
    "say",
    "code",
    "exercise",
    "take",
    "look",
    "hierarchy",
    "use",
    "heading",
    "elements",
    "better",
    "represent",
    "structure",
    "document",
    "using",
    "html",
    "better",
    "search",
    "engines",
    "read",
    "understand",
    "content",
    "text",
    "next",
    "going",
    "talk",
    "displaying",
    "special",
    "characters",
    "html",
    "music",
    "characters",
    "reserved",
    "html",
    "display",
    "use",
    "special",
    "notation",
    "example",
    "let",
    "say",
    "want",
    "wrap",
    "word",
    "html",
    "angle",
    "brackets",
    "see",
    "going",
    "happen",
    "type",
    "left",
    "angle",
    "bracket",
    "right",
    "angle",
    "bracket",
    "see",
    "happened",
    "vs",
    "code",
    "thought",
    "adding",
    "html",
    "element",
    "automatically",
    "generated",
    "closing",
    "tag",
    "want",
    "let",
    "delete",
    "back",
    "browser",
    "look",
    "html",
    "word",
    "browser",
    "interpreted",
    "html",
    "tag",
    "want",
    "want",
    "display",
    "exactly",
    "solve",
    "problem",
    "going",
    "use",
    "html",
    "entities",
    "entities",
    "start",
    "ampersand",
    "end",
    "semicolon",
    "two",
    "characters",
    "type",
    "characters",
    "determine",
    "type",
    "html",
    "entity",
    "entity",
    "displaying",
    "less",
    "sign",
    "l",
    "short",
    "less",
    "let",
    "remove",
    "similarly",
    "another",
    "html",
    "entity",
    "displaying",
    "greater",
    "sign",
    "type",
    "ampersand",
    "gt",
    "short",
    "greater",
    "followed",
    "semicolon",
    "back",
    "browser",
    "exactly",
    "wanted",
    "perfect",
    "another",
    "common",
    "html",
    "entity",
    "copyright",
    "symbol",
    "end",
    "going",
    "type",
    "ampersand",
    "copy",
    "semicolon",
    "take",
    "look",
    "copyright",
    "symbol",
    "beautiful",
    "many",
    "editors",
    "html",
    "quite",
    "frankly",
    "need",
    "memorize",
    "fact",
    "going",
    "use",
    "99",
    "case",
    "curious",
    "let",
    "show",
    "complete",
    "list",
    "google",
    "search",
    "html",
    "entities",
    "second",
    "link",
    "see",
    "complete",
    "list",
    "news",
    "entities",
    "see",
    "many",
    "entities",
    "honestly",
    "never",
    "used",
    "ones",
    "used",
    "three",
    "plus",
    "space",
    "let",
    "show",
    "going",
    "line",
    "generate",
    "dummy",
    "text",
    "add",
    "paragraph",
    "element",
    "generate",
    "dummy",
    "text",
    "type",
    "lorem",
    "followed",
    "number",
    "words",
    "want",
    "generate",
    "let",
    "say",
    "tab",
    "look",
    "dummy",
    "text",
    "latin",
    "let",
    "preview",
    "browser",
    "get",
    "let",
    "imagine",
    "last",
    "part",
    "first",
    "line",
    "first",
    "word",
    "second",
    "line",
    "stick",
    "together",
    "line",
    "break",
    "two",
    "words",
    "want",
    "prevent",
    "going",
    "copy",
    "word",
    "vs",
    "code",
    "let",
    "bring",
    "search",
    "panel",
    "pressing",
    "command",
    "f",
    "mac",
    "ctrl",
    "f",
    "windows",
    "paste",
    "word",
    "okay",
    "want",
    "make",
    "sure",
    "two",
    "words",
    "always",
    "together",
    "line",
    "breaking",
    "going",
    "replace",
    "regular",
    "space",
    "space",
    "html",
    "entity",
    "type",
    "ampersand",
    "nbsp",
    "short",
    "space",
    "followed",
    "semicolon",
    "take",
    "look",
    "words",
    "second",
    "line",
    "html",
    "entities",
    "next",
    "going",
    "talk",
    "links",
    "music",
    "almost",
    "every",
    "webpage",
    "internet",
    "links",
    "pages",
    "websites",
    "create",
    "links",
    "use",
    "anchor",
    "element",
    "type",
    "short",
    "anchor",
    "press",
    "tab",
    "every",
    "anchor",
    "element",
    "href",
    "attribute",
    "href",
    "short",
    "hypertext",
    "reference",
    "know",
    "mouthful",
    "basically",
    "means",
    "url",
    "link",
    "demo",
    "going",
    "create",
    "second",
    "page",
    "called",
    "link",
    "explorer",
    "panel",
    "let",
    "add",
    "new",
    "page",
    "called",
    "going",
    "create",
    "basic",
    "html",
    "boilerplate",
    "remember",
    "type",
    "exclamation",
    "mark",
    "press",
    "tab",
    "beautiful",
    "back",
    "use",
    "relative",
    "absolute",
    "url",
    "mean",
    "well",
    "relative",
    "url",
    "starts",
    "current",
    "page",
    "currently",
    "want",
    "go",
    "currently",
    "pages",
    "folder",
    "type",
    "relative",
    "url",
    "like",
    "html",
    "relative",
    "url",
    "different",
    "folder",
    "let",
    "add",
    "new",
    "folder",
    "project",
    "called",
    "company",
    "move",
    "folder",
    "relative",
    "current",
    "page",
    "inside",
    "company",
    "folder",
    "right",
    "type",
    "company",
    "slash",
    "relative",
    "url",
    "let",
    "give",
    "link",
    "text",
    "going",
    "say",
    "type",
    "text",
    "inside",
    "anchor",
    "element",
    "okay",
    "save",
    "changes",
    "back",
    "browser",
    "link",
    "click",
    "currently",
    "page",
    "empty",
    "beautiful",
    "back",
    "homepage",
    "instead",
    "text",
    "also",
    "use",
    "image",
    "going",
    "delete",
    "add",
    "image",
    "element",
    "img",
    "tab",
    "type",
    "relative",
    "url",
    "target",
    "image",
    "going",
    "go",
    "images",
    "save",
    "take",
    "look",
    "obviously",
    "image",
    "way",
    "big",
    "always",
    "use",
    "css",
    "resize",
    "aside",
    "look",
    "mouse",
    "icon",
    "hover",
    "image",
    "changed",
    "hand",
    "indicate",
    "image",
    "clickable",
    "okay",
    "back",
    "code",
    "keep",
    "things",
    "simple",
    "going",
    "get",
    "rid",
    "image",
    "get",
    "back",
    "text",
    "let",
    "go",
    "page",
    "add",
    "link",
    "back",
    "home",
    "page",
    "going",
    "add",
    "anchor",
    "element",
    "type",
    "href",
    "attribute",
    "well",
    "currently",
    "inside",
    "company",
    "folder",
    "go",
    "one",
    "level",
    "access",
    "right",
    "type",
    "double",
    "periods",
    "forward",
    "slash",
    "go",
    "one",
    "level",
    "level",
    "root",
    "website",
    "company",
    "folder",
    "images",
    "folder",
    "reference",
    "text",
    "going",
    "say",
    "home",
    "page",
    "another",
    "example",
    "relative",
    "url",
    "starts",
    "current",
    "page",
    "goes",
    "somewhere",
    "else",
    "inside",
    "deeply",
    "nested",
    "folder",
    "structure",
    "might",
    "go",
    "multiple",
    "levels",
    "double",
    "period",
    "forward",
    "slash",
    "repeat",
    "repeat",
    "go",
    "three",
    "levels",
    "see",
    "urls",
    "like",
    "kind",
    "look",
    "messy",
    "look",
    "hard",
    "read",
    "cases",
    "use",
    "absolute",
    "url",
    "start",
    "forward",
    "slash",
    "represents",
    "root",
    "website",
    "level",
    "access",
    "absolute",
    "url",
    "okay",
    "back",
    "linking",
    "html",
    "document",
    "also",
    "link",
    "documents",
    "like",
    "images",
    "pdfs",
    "powerpoints",
    "let",
    "add",
    "link",
    "image",
    "href",
    "going",
    "say",
    "images",
    "slash",
    "text",
    "going",
    "say",
    "photo",
    "save",
    "take",
    "look",
    "second",
    "link",
    "click",
    "image",
    "displayed",
    "browser",
    "want",
    "prompt",
    "user",
    "download",
    "easy",
    "going",
    "add",
    "download",
    "attribute",
    "anchor",
    "element",
    "type",
    "download",
    "press",
    "enter",
    "attribute",
    "value",
    "remove",
    "double",
    "quotes",
    "equal",
    "sign",
    "add",
    "attribute",
    "name",
    "save",
    "back",
    "browser",
    "go",
    "back",
    "manually",
    "refresh",
    "page",
    "live",
    "server",
    "refreshes",
    "current",
    "page",
    "previously",
    "image",
    "url",
    "live",
    "server",
    "refreshed",
    "refresh",
    "get",
    "latest",
    "changes",
    "click",
    "link",
    "instead",
    "seeing",
    "image",
    "going",
    "see",
    "image",
    "getting",
    "downloaded",
    "take",
    "look",
    "click",
    "image",
    "beautiful",
    "also",
    "link",
    "parts",
    "page",
    "let",
    "create",
    "two",
    "sections",
    "lot",
    "text",
    "going",
    "add",
    "h2",
    "element",
    "course",
    "missed",
    "h1",
    "let",
    "worry",
    "h2",
    "going",
    "say",
    "html",
    "going",
    "add",
    "dummy",
    "text",
    "200",
    "words",
    "paragraph",
    "lorem",
    "200",
    "good",
    "right",
    "going",
    "add",
    "another",
    "h2",
    "css",
    "section",
    "text",
    "okay",
    "let",
    "save",
    "changes",
    "take",
    "look",
    "see",
    "css",
    "section",
    "default",
    "scroll",
    "see",
    "top",
    "add",
    "link",
    "css",
    "section",
    "user",
    "clicks",
    "immediately",
    "jump",
    "css",
    "section",
    "easy",
    "css",
    "section",
    "first",
    "give",
    "element",
    "unique",
    "identifier",
    "like",
    "everyone",
    "real",
    "world",
    "unique",
    "identifier",
    "like",
    "driver",
    "license",
    "password",
    "every",
    "element",
    "page",
    "also",
    "unique",
    "identifier",
    "going",
    "set",
    "id",
    "attribute",
    "css",
    "use",
    "descriptive",
    "name",
    "like",
    "section",
    "dash",
    "css",
    "name",
    "really",
    "matter",
    "matters",
    "defining",
    "called",
    "fragment",
    "place",
    "page",
    "going",
    "add",
    "link",
    "fragment",
    "top",
    "let",
    "add",
    "another",
    "anchor",
    "element",
    "href",
    "going",
    "type",
    "pound",
    "sign",
    "followed",
    "name",
    "fragment",
    "section",
    "css",
    "text",
    "going",
    "say",
    "css",
    "back",
    "browser",
    "take",
    "look",
    "going",
    "click",
    "immediately",
    "jump",
    "css",
    "section",
    "beautiful",
    "lot",
    "websites",
    "like",
    "also",
    "link",
    "helps",
    "jump",
    "top",
    "page",
    "let",
    "see",
    "create",
    "css",
    "section",
    "going",
    "add",
    "another",
    "anchor",
    "element",
    "href",
    "going",
    "use",
    "empty",
    "fragment",
    "type",
    "pound",
    "sign",
    "without",
    "identifier",
    "say",
    "jump",
    "top",
    "take",
    "look",
    "link",
    "click",
    "top",
    "page",
    "let",
    "see",
    "link",
    "external",
    "websites",
    "let",
    "add",
    "another",
    "anchor",
    "element",
    "link",
    "google",
    "type",
    "well",
    "different",
    "website",
    "use",
    "relative",
    "url",
    "use",
    "absolute",
    "url",
    "start",
    "forward",
    "slash",
    "referencing",
    "root",
    "website",
    "case",
    "want",
    "go",
    "different",
    "website",
    "well",
    "start",
    "protocol",
    "https",
    "colon",
    "forward",
    "slashes",
    "let",
    "type",
    "google",
    "test",
    "page",
    "click",
    "google",
    "beautiful",
    "sometimes",
    "linking",
    "external",
    "website",
    "want",
    "link",
    "open",
    "new",
    "browser",
    "window",
    "new",
    "tab",
    "let",
    "show",
    "anchor",
    "set",
    "target",
    "attribute",
    "underline",
    "blank",
    "save",
    "back",
    "homepage",
    "manually",
    "refresh",
    "get",
    "latest",
    "changes",
    "okay",
    "click",
    "google",
    "see",
    "new",
    "tab",
    "beautiful",
    "one",
    "last",
    "thing",
    "also",
    "link",
    "emails",
    "going",
    "add",
    "anchor",
    "href",
    "going",
    "say",
    "mailto",
    "colon",
    "programming",
    "mosh",
    "email",
    "save",
    "changes",
    "back",
    "page",
    "click",
    "link",
    "mail",
    "client",
    "open",
    "email",
    "address",
    "take",
    "look",
    "click",
    "mail",
    "client",
    "links",
    "one",
    "last",
    "thing",
    "finish",
    "lesson",
    "difference",
    "link",
    "hyperlink",
    "well",
    "link",
    "address",
    "url",
    "location",
    "target",
    "page",
    "hyperlink",
    "element",
    "user",
    "click",
    "navigate",
    "target",
    "page",
    "difference",
    "link",
    "hyperlink",
    "quite",
    "often",
    "terms",
    "used",
    "interchangeably",
    "alright",
    "done",
    "lesson",
    "next",
    "going",
    "talk",
    "images",
    "music",
    "right",
    "let",
    "talk",
    "embedding",
    "images",
    "bit",
    "detail",
    "lesson",
    "going",
    "grab",
    "image",
    "find",
    "lot",
    "beautiful",
    "freely",
    "usable",
    "images",
    "let",
    "search",
    "coffee",
    "tons",
    "coffee",
    "pictures",
    "going",
    "grab",
    "picture",
    "download",
    "free",
    "look",
    "image",
    "comes",
    "different",
    "sizes",
    "small",
    "medium",
    "large",
    "going",
    "grab",
    "image",
    "small",
    "size",
    "future",
    "going",
    "talk",
    "embedding",
    "images",
    "different",
    "sizes",
    "depending",
    "device",
    "mobile",
    "devices",
    "want",
    "serve",
    "smaller",
    "image",
    "desktop",
    "computers",
    "want",
    "serve",
    "larger",
    "image",
    "let",
    "worry",
    "complexities",
    "conflict",
    "section",
    "topic",
    "later",
    "let",
    "download",
    "small",
    "image",
    "says",
    "say",
    "thank",
    "nathan",
    "thanks",
    "nathan",
    "beautiful",
    "picture",
    "done",
    "great",
    "job",
    "going",
    "drag",
    "drop",
    "image",
    "onto",
    "images",
    "folder",
    "rename",
    "coffee",
    "want",
    "give",
    "descriptive",
    "name",
    "small",
    "search",
    "engine",
    "optimization",
    "tip",
    "provide",
    "descriptive",
    "names",
    "images",
    "search",
    "engines",
    "better",
    "understand",
    "index",
    "pages",
    "okay",
    "image",
    "let",
    "add",
    "image",
    "element",
    "set",
    "source",
    "images",
    "alt",
    "attribute",
    "well",
    "briefly",
    "mentioned",
    "use",
    "attribute",
    "provide",
    "textual",
    "description",
    "image",
    "compulsory",
    "highly",
    "recommended",
    "number",
    "reasons",
    "first",
    "reason",
    "make",
    "page",
    "accessible",
    "visually",
    "impaired",
    "people",
    "people",
    "use",
    "screen",
    "reader",
    "read",
    "web",
    "alternative",
    "text",
    "tell",
    "showing",
    "page",
    "means",
    "write",
    "good",
    "meaningful",
    "description",
    "like",
    "coffee",
    "mug",
    "table",
    "write",
    "something",
    "like",
    "image",
    "image",
    "one",
    "pointless",
    "second",
    "benefit",
    "providing",
    "alternative",
    "text",
    "help",
    "search",
    "engines",
    "read",
    "text",
    "understand",
    "providing",
    "one",
    "benefit",
    "image",
    "loaded",
    "reason",
    "alternative",
    "text",
    "shown",
    "let",
    "show",
    "mean",
    "going",
    "add",
    "typo",
    "back",
    "browser",
    "look",
    "image",
    "loaded",
    "see",
    "alternative",
    "text",
    "also",
    "happen",
    "network",
    "connectivity",
    "issue",
    "user",
    "gets",
    "disconnected",
    "still",
    "see",
    "alternative",
    "text",
    "let",
    "remove",
    "typo",
    "let",
    "talk",
    "sizing",
    "images",
    "told",
    "use",
    "css",
    "resize",
    "images",
    "head",
    "section",
    "let",
    "add",
    "style",
    "element",
    "apply",
    "rule",
    "image",
    "rule",
    "applied",
    "images",
    "page",
    "probably",
    "something",
    "want",
    "real",
    "world",
    "scenario",
    "scenario",
    "want",
    "apply",
    "class",
    "element",
    "define",
    "rules",
    "class",
    "talk",
    "detail",
    "future",
    "let",
    "give",
    "image",
    "width",
    "200",
    "pixels",
    "height",
    "200",
    "pixels",
    "tiny",
    "problem",
    "image",
    "tell",
    "image",
    "kind",
    "squashed",
    "reason",
    "dealing",
    "rectangular",
    "image",
    "look",
    "rectangular",
    "image",
    "converting",
    "square",
    "image",
    "look",
    "shape",
    "coffee",
    "mug",
    "kind",
    "round",
    "right",
    "like",
    "compared",
    "image",
    "vertically",
    "squashed",
    "let",
    "show",
    "another",
    "way",
    "verify",
    "right",
    "click",
    "image",
    "go",
    "inspect",
    "opens",
    "chrome",
    "devtools",
    "selects",
    "image",
    "dom",
    "right",
    "side",
    "see",
    "styles",
    "applied",
    "element",
    "going",
    "disable",
    "height",
    "property",
    "want",
    "pay",
    "close",
    "attention",
    "image",
    "see",
    "shape",
    "changes",
    "look",
    "coffee",
    "mug",
    "round",
    "applied",
    "height",
    "property",
    "becomes",
    "squashed",
    "solve",
    "problem",
    "well",
    "new",
    "property",
    "css",
    "called",
    "object",
    "fit",
    "set",
    "object",
    "fit",
    "one",
    "values",
    "time",
    "use",
    "cover",
    "image",
    "covers",
    "containing",
    "box",
    "containing",
    "box",
    "well",
    "first",
    "let",
    "set",
    "cover",
    "image",
    "element",
    "right",
    "conceptually",
    "box",
    "around",
    "every",
    "element",
    "html",
    "document",
    "see",
    "box",
    "browser",
    "uses",
    "box",
    "figure",
    "page",
    "displayed",
    "box",
    "dimension",
    "200x200",
    "box",
    "trying",
    "insert",
    "image",
    "right",
    "set",
    "object",
    "fit",
    "cover",
    "image",
    "get",
    "resized",
    "potentially",
    "cropped",
    "covers",
    "entire",
    "containing",
    "box",
    "let",
    "verify",
    "save",
    "changes",
    "back",
    "browser",
    "look",
    "coffee",
    "mug",
    "round",
    "disable",
    "object",
    "fit",
    "property",
    "gets",
    "squashed",
    "object",
    "fit",
    "useful",
    "property",
    "always",
    "play",
    "possible",
    "values",
    "going",
    "select",
    "deleted",
    "using",
    "arrows",
    "go",
    "list",
    "see",
    "impact",
    "every",
    "value",
    "going",
    "go",
    "values",
    "explain",
    "mean",
    "pointless",
    "always",
    "figure",
    "remember",
    "time",
    "use",
    "cover",
    "image",
    "covers",
    "entire",
    "containing",
    "box",
    "alright",
    "images",
    "next",
    "going",
    "talk",
    "video",
    "audio",
    "hey",
    "guys",
    "mosh",
    "wanted",
    "let",
    "know",
    "video",
    "watching",
    "first",
    "hour",
    "ultimate",
    "html",
    "css",
    "series",
    "watch",
    "video",
    "want",
    "learn",
    "enroll",
    "full",
    "course",
    "13",
    "hours",
    "long",
    "covers",
    "everything",
    "need",
    "know",
    "build",
    "professional",
    "quality",
    "websites",
    "html",
    "css",
    "also",
    "includes",
    "summary",
    "notes",
    "exercises",
    "real",
    "project",
    "certificate",
    "accomplish",
    "add",
    "resume",
    "30",
    "day",
    "money",
    "back",
    "guarantee",
    "get",
    "refund",
    "satisfied",
    "nothing",
    "lose",
    "lot",
    "learn",
    "interested",
    "put",
    "link",
    "description",
    "box"
  ],
  "keywords": [
    "first",
    "part",
    "html",
    "css",
    "series",
    "going",
    "take",
    "journey",
    "skills",
    "need",
    "build",
    "beautiful",
    "websites",
    "look",
    "know",
    "want",
    "learn",
    "everything",
    "talk",
    "web",
    "development",
    "second",
    "put",
    "website",
    "company",
    "called",
    "head",
    "see",
    "people",
    "code",
    "new",
    "upload",
    "time",
    "let",
    "jump",
    "get",
    "music",
    "right",
    "tools",
    "course",
    "many",
    "like",
    "vs",
    "text",
    "use",
    "server",
    "formatting",
    "download",
    "version",
    "inside",
    "open",
    "panel",
    "search",
    "preview",
    "extension",
    "prettier",
    "format",
    "make",
    "popular",
    "click",
    "done",
    "next",
    "another",
    "live",
    "almost",
    "browser",
    "pages",
    "google",
    "chrome",
    "start",
    "every",
    "section",
    "something",
    "end",
    "page",
    "languages",
    "used",
    "well",
    "url",
    "http",
    "also",
    "work",
    "understand",
    "happens",
    "network",
    "using",
    "dev",
    "developers",
    "lot",
    "developer",
    "give",
    "go",
    "two",
    "back",
    "three",
    "javascript",
    "different",
    "short",
    "language",
    "define",
    "building",
    "blocks",
    "styling",
    "real",
    "internet",
    "structure",
    "windows",
    "example",
    "press",
    "comes",
    "us",
    "say",
    "tweet",
    "image",
    "user",
    "containing",
    "message",
    "add",
    "bold",
    "round",
    "change",
    "hover",
    "create",
    "tell",
    "computers",
    "style",
    "better",
    "would",
    "separate",
    "probably",
    "often",
    "job",
    "one",
    "react",
    "project",
    "space",
    "always",
    "alright",
    "control",
    "description",
    "additional",
    "future",
    "lesson",
    "type",
    "address",
    "enter",
    "important",
    "way",
    "resources",
    "images",
    "video",
    "files",
    "fonts",
    "client",
    "target",
    "model",
    "requests",
    "says",
    "home",
    "kind",
    "protocol",
    "line",
    "file",
    "represents",
    "case",
    "worry",
    "request",
    "response",
    "followed",
    "number",
    "200",
    "means",
    "okay",
    "content",
    "document",
    "object",
    "name",
    "elements",
    "links",
    "action",
    "set",
    "displaying",
    "show",
    "access",
    "top",
    "shortcut",
    "mac",
    "alt",
    "command",
    "obviously",
    "devtools",
    "bit",
    "tab",
    "default",
    "left",
    "window",
    "side",
    "good",
    "refresh",
    "list",
    "wanted",
    "select",
    "folder",
    "currently",
    "told",
    "b",
    "thing",
    "doctype",
    "browsers",
    "element",
    "tag",
    "body",
    "information",
    "title",
    "save",
    "changes",
    "current",
    "colon",
    "forward",
    "slash",
    "display",
    "reason",
    "relative",
    "double",
    "alternative",
    "attribute",
    "displayed",
    "detail",
    "p",
    "paragraph",
    "automatically",
    "applied",
    "apply",
    "write",
    "smaller",
    "property",
    "value",
    "width",
    "pixels",
    "semicolon",
    "multiple",
    "rule",
    "username",
    "class",
    "remove",
    "covers",
    "link",
    "box",
    "shift",
    "styles",
    "cover",
    "validation",
    "validator",
    "validate",
    "common",
    "engines",
    "character",
    "meta",
    "defining",
    "characters",
    "represent",
    "viewport",
    "size",
    "keywords",
    "word",
    "wrap",
    "italic",
    "headings",
    "heading",
    "h1",
    "h2",
    "entities",
    "entity",
    "sign",
    "words",
    "anchor",
    "href",
    "coffee",
    "fit"
  ]
}