{
  "text": "custom events in javascript are amazing\nat implementing things like double\nclicking or swipe based gestures but\nthey can also be used to communicate\nbetween two different parts of your\napplication incredibly easily and best\nof all creating and using a custom event\nis about as easy as it gets in\njavascript i'm going to show you\nabsolutely everything you need to know\nabout them in this quick video\n[Music]\nwelcome back to web dev simplified my\nname is kyle and my job is to simplify\nthe web for you so you can start\nbuilding your dream project sooner and\ntoday we're going to be talking all\nabout custom elements and to get started\ni just have a simple script tag being\nlinked in this html and this html has\none button on the right you can see the\nbutton and the console for this page\nthen inside of our script.js we have\nnothing now in order to create and use\ncustom events it's as simple as calling\na new event and this is just a\nconstructor and inside of it you can\npass it a name and then some options\nfirst we're going to look at just\npassing it a name and then we're going\nto look at the options next so you can\ngive it any name you want we're just\ngoing to call this my custom event\nand we can set that to a variable such\nas my event just like that so now we\nhave created an event and if i save\nyou'll notice nothing happens because\nall we've done is created an event we\nhaven't actually triggered the event and\nwe aren't listening for this event at\nall so let's listen for this event on\nlet's say our document we'll say\ndocument.add event listener and we're\ngoing to add an event listener for my\ncustom event and whatever you call your\nevent is the same thing that you want to\nlisten to inside of your ad event\nlistener then we can take in that event\nobject and for now all i'm going to do\nis console log that event object out now\nif we save again you'll notice nothing\nhappens and that's because we've created\nan event we've created a way to listen\nfor that event but we haven't actually\ntriggered that event yet in order to\nactually trigger the event all we need\nto do is take any element we want for\nour case we're going to use document and\nyou're going to call a message called\ndispatch event you just pass it in the\nevent you want to dispatch what this is\ngoing to do is it's going to take our\ncustom event it's going to dispatch that\nand if we're listening to it which we\nare it is going to run that code now\nwhen i save you can see down here it\nprints out information about my event\nand you can see there's actually a lot\nof default information that you get\nprobably the most important information\nthat you're going to see inside of here\nis you're going to get a bunch of\ninformation for the options that we can\nset so bubbles cancelable composed those\nare options we can change within our\nevent you're also going to see here if\nthe default has been prevented have we\ntried to cancel the event and then most\nimportantly down here you're going to\nget the target that's the actual thing\nthat the event is being triggered on and\nthen finally we have is trusted at the\nvery top here if this is set to false it\nmeans it's created via this dispatch\nevent and if it's set to true then that\nmeans this event was triggered by a user\nclicking so like if you listen to a\nclick event which i can do here i can\nsay click and if i click up here and we\nlook inside of here you can see is\ntrusted is true because that's related\nto a ui event that the user actually\ntriggered let's just bring it back here\nto my custom event and we'll look down\nat the very bottom you'll also see\ntimestamp which is when the event\noccurred and the type which is just the\nname we specified for our event this is\nreally great if you just want to have\nlike really basic custom events where\nyou can send information and you can\nreceive it with this ad event listener\nwhat if you want to customize it a\nlittle bit we can come into here and we\ncan add some properties into this\ncustomization the first one is going to\nbe bubbles and this determines whether\nor not the event is going to bubble up\nby default it is set to false but we can\nchange it to true if we want if you're\nunfamiliar with bubbling and event\npropagation i have a full video covering\ni'll link in the cards and description\nfor you and also put at the end of this\nvideo because it's a really important\nfollow-up so next property that we want\nto talk about is cancelable so if this\nis set to true it means you can actually\ncancel the event so like a click event\nfor example you can cancel so that it no\nlonger triggers things like link tags\nmoving onwards so if you really want to\ncancel it you can but for the most part\nyou don't really have to worry too much\nabout this cancelable property because\nyou're not really doing a default thing\nwith your events but by default this is\nset to false so you can change it to\ntrue if you want now the final property\ni want to talk about is composed and\nthis one's a little bit tricky composed\nessentially means that this event is\nable to propagate up through your shadow\ndom so if you're using like custom\nelements and you have some shadow dom\nand you want to have an event trigger\ninside that shadow dom and then\npropagate up outside of the shadow dom\nyou would need to set compose to true by\ndefault it's set to false this is\nsomething you generally don't have to\nworry about unless you're working with\ncustom elements and the shadow jam and\nthen in that case most likely you want\nit to propagate up or in some cases you\nmaybe only want it to stay within that\ncustom element so you'd set this to\nfalse which is the default honestly it\ndoesn't matter either way but for the\nmost part you're not going to really\nmess too much with these properties you\nmay mess with the bubbles one but the\nother two you're not going to use that\noften let's take a look at what happens\nif you do have a cancelable event so\nwe're going to say cancelable true\ninside of here and then what i'm going\nto do is i'm going to add another event\nlistener on our button\noops button right here and all i want to\ndo is i want to say default\nprevented i just want to check to see\nwhat the value for this property is\nwe're going to do it inside of our\ndocument\nevent listener and we're going to do it\ninside of our button event listener and\nthis is a cancelable event so by default\nif we just save this real quick and i\nclick on our button and i need to make\nsure i get a reference to our button\nso we can just say document dot gray\nselector\nour button there we go so now if i just\nchange this to dispatch this on the\nactual button itself you should see that\nwe get it saying console log button and\nwe want to make this bubble so we're\ngoing to say\nbubbles\ntrue that way it bubbles up to our\ndocument as well so now you can see it's\ngoing inside of our button and it's\ngoing inside of our document it's\nrendering on both of these so we have\nour event listener going on both and on\nboth of them prevent defaulted or\ndefault prevented is set to false if we\ncome in here and we just say e dot\nprevent default\nlike you would do if you have like a\nlink or a form submitting and we do that\nin our button you're going to notice now\nthis is set to true if we do it after\nthat log you can see it's false when it\ngets into the button and then when it\ngoes to the document this is set to true\nbecause we prevented the default in our\nbutton well if we change cancelable to\nfalse now you can see no matter what we\ndo if we try to prevent the default\nit'll still say false because this is an\nevent that cannot be cancelled\nyou can use this to like really\nfine-tune your events to say hey you\nknow what if we click inside the button\nor if the button dispatches the event\nyou know we can cancel it in the button\nand then that way the document doesn't\nlisten to it so that's an important\nthing to consider but for the most part\nyou really don't have to worry about it\ntoo much\nnow this covers most of your use cases\nwhen it comes to events but what happens\nif you want to pass custom data along\nwith your event well to do that you need\nto change your constructor here you want\nto call new custom event instead a new\nevent and nothing else changes the name\nstays the same all the properties inside\nof here change the same we just add one\nadditional property which is called\ndetail and detail can be anything you\nwant generally it's going to be an\nobject with all the information you care\nabout so for example we can just say\nlike hello\nand we can pass in some text such as\nworld\njust like that so now if i save and we\ndispatch our event and i look at the e\ndot detail\nand get rid of all the rest of this code\nthat we don't need you can see that\ndetail is an object which has the key\nhello and the value world so this is\nreally great if you need to pass data\nfrom one place to another using an event\nyou're going to use a custom event\notherwise if you don't care about\npassing custom data you can just use a\nnormal event for the most part though\nyou're probably going to be using a\ncustom event now that covers like most\nof the use cases of events but how\nexactly would you go about implementing\nand using these custom events in a real\nworld example in our case i'm going to\nimplement double click so when we click\non our button twice within quick\nsuccession it's going to trigger a\ndouble click event so we're going to\nhave an event we're going to call it\ndouble-click and one important thing to\nconsider when you're naming your events\nis what happens if in the future the\nbrowser implements their own\ndouble-click event well we don't want to\nhave a clash with them so generally when\ni create custom events i have some kind\nof prefix that i put at the front so for\nexample i just put the text custom with\na colon or if you're in a project just\nput the name of your project right here\nfollowed by a colon and this will kind\nof help you know when you're reading\nyour code okay this is a custom event\nit's not an actual javascript event and\nif in the future javascript implements\ntheir own doubleclick event you don't\naccidentally clash with that and have\nissues due to that you just have this\ncustom event that's completely separate\nfrom anything that javascript implements\nso now we have this let's just print\ninside of here\ndouble click because any time we double\nclick on our button we want to run this\nfunction so how would we go about doing\nthat well we can add another event\nlistener to listen for clicks\nwe can just come in here and say click\nit's going to take in an event and what\ni want to do is i want to say hey you\nknow what if this max double click\ntime this is going to be the maximum\ntime between our clicks we're going to\nsay 500 milliseconds so if we click the\nbutton twice within 500 milliseconds\nthen it's going to be considered a\ndouble click and inside of here all i\nwant to do is i want to get the time\nbetween clicks so we can say const time\nbetween\nclicks and to get that we can take our\ntimestamp which is the current time of\nour event we could subtract the time\nsince our last click and we're going to\nsave that in a variable\nand by default we're going to set it to\n0.\nthen we can say hey if our time between\nclicks is greater than our max\ndoubleclick time well what we want to do\nis do nothing because this means it's\ntaken too long essentially the time\nbetween our clicks is longer than a\nnormal double click so what i want to do\nis i want to take my last click time i\nwant to set it to my time stamp and then\nreturn so this is just saying hey you\nknow what if it's been too long reset\nour last click time to the current click\nthat way the next time we click we can\ndo this check again otherwise if we have\nnot exceeded that time we've clicked\ntwice within 500 milliseconds then what\ni want to do is i want to create a new\nevent\nwe're going to call this a double click\nevent which is going to be a new custom\nevent\nand this new custom event we called\ndouble click\nwith that prefix of custom\nand inside of here i want this to work\njust like a normal click event so a\nnormal click event will double so we're\ngoing to say bubbles true it is\ncancelable so we're going to say cancel\ntrue\noops\ntrue just like that\nand also it is composed so we're going\nto set that to true and then finally\nwe're going to put some custom detail in\nhere we're going to get the time between\nclicks and we're going to pass that up\ninto this button here and then all we\nneed to do is we just need to dispatch\nthat event so we're going to say\ndouble click event then we're going to\nreset our last click time to zero and\none important thing to do is instead of\nusing button here we can just say\ne.target and that's just going to make\nsure it dispatches the event on whatever\nwe're currently clicking on so if we're\nclicking on the button it's going to\ndispatch the event to the button that's\na really neat trick right there so now\nlet's save and if i click this twice\nback to back you can see it prints out\ndouble click but if i click it once wait\na while and then click again you can see\nit doesn't print out anything new we can\nalso get the time between clicks by just\ngetting the detail object here and\ngetting the time between clicks so now\nwhen i click it twice you can see\nthere's 113 milliseconds between my\nclicks if i do it again there's 141\nmilliseconds if i take too long you can\nsee it no longer prints out\nnow one of the places these events shine\nthe most is with touch-based gestures so\nif you want to understand how to do\ntouch-based events in javascript i'm\ngonna have a video linked over here as\nwell as that video covering event\npropagation that's linked over here as\nwell with that said thank you very much\nfor watching and have a good day\n",
  "words": [
    "custom",
    "events",
    "javascript",
    "amazing",
    "implementing",
    "things",
    "like",
    "double",
    "clicking",
    "swipe",
    "based",
    "gestures",
    "also",
    "used",
    "communicate",
    "two",
    "different",
    "parts",
    "application",
    "incredibly",
    "easily",
    "best",
    "creating",
    "using",
    "custom",
    "event",
    "easy",
    "gets",
    "javascript",
    "going",
    "show",
    "absolutely",
    "everything",
    "need",
    "know",
    "quick",
    "video",
    "music",
    "welcome",
    "back",
    "web",
    "dev",
    "simplified",
    "name",
    "kyle",
    "job",
    "simplify",
    "web",
    "start",
    "building",
    "dream",
    "project",
    "sooner",
    "today",
    "going",
    "talking",
    "custom",
    "elements",
    "get",
    "started",
    "simple",
    "script",
    "tag",
    "linked",
    "html",
    "html",
    "one",
    "button",
    "right",
    "see",
    "button",
    "console",
    "page",
    "inside",
    "nothing",
    "order",
    "create",
    "use",
    "custom",
    "events",
    "simple",
    "calling",
    "new",
    "event",
    "constructor",
    "inside",
    "pass",
    "name",
    "options",
    "first",
    "going",
    "look",
    "passing",
    "name",
    "going",
    "look",
    "options",
    "next",
    "give",
    "name",
    "want",
    "going",
    "call",
    "custom",
    "event",
    "set",
    "variable",
    "event",
    "like",
    "created",
    "event",
    "save",
    "notice",
    "nothing",
    "happens",
    "done",
    "created",
    "event",
    "actually",
    "triggered",
    "event",
    "listening",
    "event",
    "let",
    "listen",
    "event",
    "let",
    "say",
    "document",
    "say",
    "event",
    "listener",
    "going",
    "add",
    "event",
    "listener",
    "custom",
    "event",
    "whatever",
    "call",
    "event",
    "thing",
    "want",
    "listen",
    "inside",
    "ad",
    "event",
    "listener",
    "take",
    "event",
    "object",
    "going",
    "console",
    "log",
    "event",
    "object",
    "save",
    "notice",
    "nothing",
    "happens",
    "created",
    "event",
    "created",
    "way",
    "listen",
    "event",
    "actually",
    "triggered",
    "event",
    "yet",
    "order",
    "actually",
    "trigger",
    "event",
    "need",
    "take",
    "element",
    "want",
    "case",
    "going",
    "use",
    "document",
    "going",
    "call",
    "message",
    "called",
    "dispatch",
    "event",
    "pass",
    "event",
    "want",
    "dispatch",
    "going",
    "going",
    "take",
    "custom",
    "event",
    "going",
    "dispatch",
    "listening",
    "going",
    "run",
    "code",
    "save",
    "see",
    "prints",
    "information",
    "event",
    "see",
    "actually",
    "lot",
    "default",
    "information",
    "get",
    "probably",
    "important",
    "information",
    "going",
    "see",
    "inside",
    "going",
    "get",
    "bunch",
    "information",
    "options",
    "set",
    "bubbles",
    "cancelable",
    "composed",
    "options",
    "change",
    "within",
    "event",
    "also",
    "going",
    "see",
    "default",
    "prevented",
    "tried",
    "cancel",
    "event",
    "importantly",
    "going",
    "get",
    "target",
    "actual",
    "thing",
    "event",
    "triggered",
    "finally",
    "trusted",
    "top",
    "set",
    "false",
    "means",
    "created",
    "via",
    "dispatch",
    "event",
    "set",
    "true",
    "means",
    "event",
    "triggered",
    "user",
    "clicking",
    "like",
    "listen",
    "click",
    "event",
    "say",
    "click",
    "click",
    "look",
    "inside",
    "see",
    "trusted",
    "true",
    "related",
    "ui",
    "event",
    "user",
    "actually",
    "triggered",
    "let",
    "bring",
    "back",
    "custom",
    "event",
    "look",
    "bottom",
    "also",
    "see",
    "timestamp",
    "event",
    "occurred",
    "type",
    "name",
    "specified",
    "event",
    "really",
    "great",
    "want",
    "like",
    "really",
    "basic",
    "custom",
    "events",
    "send",
    "information",
    "receive",
    "ad",
    "event",
    "listener",
    "want",
    "customize",
    "little",
    "bit",
    "come",
    "add",
    "properties",
    "customization",
    "first",
    "one",
    "going",
    "bubbles",
    "determines",
    "whether",
    "event",
    "going",
    "bubble",
    "default",
    "set",
    "false",
    "change",
    "true",
    "want",
    "unfamiliar",
    "bubbling",
    "event",
    "propagation",
    "full",
    "video",
    "covering",
    "link",
    "cards",
    "description",
    "also",
    "put",
    "end",
    "video",
    "really",
    "important",
    "next",
    "property",
    "want",
    "talk",
    "cancelable",
    "set",
    "true",
    "means",
    "actually",
    "cancel",
    "event",
    "like",
    "click",
    "event",
    "example",
    "cancel",
    "longer",
    "triggers",
    "things",
    "like",
    "link",
    "tags",
    "moving",
    "onwards",
    "really",
    "want",
    "cancel",
    "part",
    "really",
    "worry",
    "much",
    "cancelable",
    "property",
    "really",
    "default",
    "thing",
    "events",
    "default",
    "set",
    "false",
    "change",
    "true",
    "want",
    "final",
    "property",
    "want",
    "talk",
    "composed",
    "one",
    "little",
    "bit",
    "tricky",
    "composed",
    "essentially",
    "means",
    "event",
    "able",
    "propagate",
    "shadow",
    "dom",
    "using",
    "like",
    "custom",
    "elements",
    "shadow",
    "dom",
    "want",
    "event",
    "trigger",
    "inside",
    "shadow",
    "dom",
    "propagate",
    "outside",
    "shadow",
    "dom",
    "would",
    "need",
    "set",
    "compose",
    "true",
    "default",
    "set",
    "false",
    "something",
    "generally",
    "worry",
    "unless",
    "working",
    "custom",
    "elements",
    "shadow",
    "jam",
    "case",
    "likely",
    "want",
    "propagate",
    "cases",
    "maybe",
    "want",
    "stay",
    "within",
    "custom",
    "element",
    "set",
    "false",
    "default",
    "honestly",
    "matter",
    "either",
    "way",
    "part",
    "going",
    "really",
    "mess",
    "much",
    "properties",
    "may",
    "mess",
    "bubbles",
    "one",
    "two",
    "going",
    "use",
    "often",
    "let",
    "take",
    "look",
    "happens",
    "cancelable",
    "event",
    "going",
    "say",
    "cancelable",
    "true",
    "inside",
    "going",
    "going",
    "add",
    "another",
    "event",
    "listener",
    "button",
    "oops",
    "button",
    "right",
    "want",
    "want",
    "say",
    "default",
    "prevented",
    "want",
    "check",
    "see",
    "value",
    "property",
    "going",
    "inside",
    "document",
    "event",
    "listener",
    "going",
    "inside",
    "button",
    "event",
    "listener",
    "cancelable",
    "event",
    "default",
    "save",
    "real",
    "quick",
    "click",
    "button",
    "need",
    "make",
    "sure",
    "get",
    "reference",
    "button",
    "say",
    "document",
    "dot",
    "gray",
    "selector",
    "button",
    "go",
    "change",
    "dispatch",
    "actual",
    "button",
    "see",
    "get",
    "saying",
    "console",
    "log",
    "button",
    "want",
    "make",
    "bubble",
    "going",
    "say",
    "bubbles",
    "true",
    "way",
    "bubbles",
    "document",
    "well",
    "see",
    "going",
    "inside",
    "button",
    "going",
    "inside",
    "document",
    "rendering",
    "event",
    "listener",
    "going",
    "prevent",
    "defaulted",
    "default",
    "prevented",
    "set",
    "false",
    "come",
    "say",
    "e",
    "dot",
    "prevent",
    "default",
    "like",
    "would",
    "like",
    "link",
    "form",
    "submitting",
    "button",
    "going",
    "notice",
    "set",
    "true",
    "log",
    "see",
    "false",
    "gets",
    "button",
    "goes",
    "document",
    "set",
    "true",
    "prevented",
    "default",
    "button",
    "well",
    "change",
    "cancelable",
    "false",
    "see",
    "matter",
    "try",
    "prevent",
    "default",
    "still",
    "say",
    "false",
    "event",
    "cancelled",
    "use",
    "like",
    "really",
    "events",
    "say",
    "hey",
    "know",
    "click",
    "inside",
    "button",
    "button",
    "dispatches",
    "event",
    "know",
    "cancel",
    "button",
    "way",
    "document",
    "listen",
    "important",
    "thing",
    "consider",
    "part",
    "really",
    "worry",
    "much",
    "covers",
    "use",
    "cases",
    "comes",
    "events",
    "happens",
    "want",
    "pass",
    "custom",
    "data",
    "along",
    "event",
    "well",
    "need",
    "change",
    "constructor",
    "want",
    "call",
    "new",
    "custom",
    "event",
    "instead",
    "new",
    "event",
    "nothing",
    "else",
    "changes",
    "name",
    "stays",
    "properties",
    "inside",
    "change",
    "add",
    "one",
    "additional",
    "property",
    "called",
    "detail",
    "detail",
    "anything",
    "want",
    "generally",
    "going",
    "object",
    "information",
    "care",
    "example",
    "say",
    "like",
    "hello",
    "pass",
    "text",
    "world",
    "like",
    "save",
    "dispatch",
    "event",
    "look",
    "e",
    "dot",
    "detail",
    "get",
    "rid",
    "rest",
    "code",
    "need",
    "see",
    "detail",
    "object",
    "key",
    "hello",
    "value",
    "world",
    "really",
    "great",
    "need",
    "pass",
    "data",
    "one",
    "place",
    "another",
    "using",
    "event",
    "going",
    "use",
    "custom",
    "event",
    "otherwise",
    "care",
    "passing",
    "custom",
    "data",
    "use",
    "normal",
    "event",
    "part",
    "though",
    "probably",
    "going",
    "using",
    "custom",
    "event",
    "covers",
    "like",
    "use",
    "cases",
    "events",
    "exactly",
    "would",
    "go",
    "implementing",
    "using",
    "custom",
    "events",
    "real",
    "world",
    "example",
    "case",
    "going",
    "implement",
    "double",
    "click",
    "click",
    "button",
    "twice",
    "within",
    "quick",
    "succession",
    "going",
    "trigger",
    "double",
    "click",
    "event",
    "going",
    "event",
    "going",
    "call",
    "one",
    "important",
    "thing",
    "consider",
    "naming",
    "events",
    "happens",
    "future",
    "browser",
    "implements",
    "event",
    "well",
    "want",
    "clash",
    "generally",
    "create",
    "custom",
    "events",
    "kind",
    "prefix",
    "put",
    "front",
    "example",
    "put",
    "text",
    "custom",
    "colon",
    "project",
    "put",
    "name",
    "project",
    "right",
    "followed",
    "colon",
    "kind",
    "help",
    "know",
    "reading",
    "code",
    "okay",
    "custom",
    "event",
    "actual",
    "javascript",
    "event",
    "future",
    "javascript",
    "implements",
    "doubleclick",
    "event",
    "accidentally",
    "clash",
    "issues",
    "due",
    "custom",
    "event",
    "completely",
    "separate",
    "anything",
    "javascript",
    "implements",
    "let",
    "print",
    "inside",
    "double",
    "click",
    "time",
    "double",
    "click",
    "button",
    "want",
    "run",
    "function",
    "would",
    "go",
    "well",
    "add",
    "another",
    "event",
    "listener",
    "listen",
    "clicks",
    "come",
    "say",
    "click",
    "going",
    "take",
    "event",
    "want",
    "want",
    "say",
    "hey",
    "know",
    "max",
    "double",
    "click",
    "time",
    "going",
    "maximum",
    "time",
    "clicks",
    "going",
    "say",
    "500",
    "milliseconds",
    "click",
    "button",
    "twice",
    "within",
    "500",
    "milliseconds",
    "going",
    "considered",
    "double",
    "click",
    "inside",
    "want",
    "want",
    "get",
    "time",
    "clicks",
    "say",
    "const",
    "time",
    "clicks",
    "get",
    "take",
    "timestamp",
    "current",
    "time",
    "event",
    "could",
    "subtract",
    "time",
    "since",
    "last",
    "click",
    "going",
    "save",
    "variable",
    "default",
    "going",
    "set",
    "say",
    "hey",
    "time",
    "clicks",
    "greater",
    "max",
    "doubleclick",
    "time",
    "well",
    "want",
    "nothing",
    "means",
    "taken",
    "long",
    "essentially",
    "time",
    "clicks",
    "longer",
    "normal",
    "double",
    "click",
    "want",
    "want",
    "take",
    "last",
    "click",
    "time",
    "want",
    "set",
    "time",
    "stamp",
    "return",
    "saying",
    "hey",
    "know",
    "long",
    "reset",
    "last",
    "click",
    "time",
    "current",
    "click",
    "way",
    "next",
    "time",
    "click",
    "check",
    "otherwise",
    "exceeded",
    "time",
    "clicked",
    "twice",
    "within",
    "500",
    "milliseconds",
    "want",
    "want",
    "create",
    "new",
    "event",
    "going",
    "call",
    "double",
    "click",
    "event",
    "going",
    "new",
    "custom",
    "event",
    "new",
    "custom",
    "event",
    "called",
    "double",
    "click",
    "prefix",
    "custom",
    "inside",
    "want",
    "work",
    "like",
    "normal",
    "click",
    "event",
    "normal",
    "click",
    "event",
    "double",
    "going",
    "say",
    "bubbles",
    "true",
    "cancelable",
    "going",
    "say",
    "cancel",
    "true",
    "oops",
    "true",
    "like",
    "also",
    "composed",
    "going",
    "set",
    "true",
    "finally",
    "going",
    "put",
    "custom",
    "detail",
    "going",
    "get",
    "time",
    "clicks",
    "going",
    "pass",
    "button",
    "need",
    "need",
    "dispatch",
    "event",
    "going",
    "say",
    "double",
    "click",
    "event",
    "going",
    "reset",
    "last",
    "click",
    "time",
    "zero",
    "one",
    "important",
    "thing",
    "instead",
    "using",
    "button",
    "say",
    "going",
    "make",
    "sure",
    "dispatches",
    "event",
    "whatever",
    "currently",
    "clicking",
    "clicking",
    "button",
    "going",
    "dispatch",
    "event",
    "button",
    "really",
    "neat",
    "trick",
    "right",
    "let",
    "save",
    "click",
    "twice",
    "back",
    "back",
    "see",
    "prints",
    "double",
    "click",
    "click",
    "wait",
    "click",
    "see",
    "print",
    "anything",
    "new",
    "also",
    "get",
    "time",
    "clicks",
    "getting",
    "detail",
    "object",
    "getting",
    "time",
    "clicks",
    "click",
    "twice",
    "see",
    "113",
    "milliseconds",
    "clicks",
    "141",
    "milliseconds",
    "take",
    "long",
    "see",
    "longer",
    "prints",
    "one",
    "places",
    "events",
    "shine",
    "gestures",
    "want",
    "understand",
    "events",
    "javascript",
    "gon",
    "na",
    "video",
    "linked",
    "well",
    "video",
    "covering",
    "event",
    "propagation",
    "linked",
    "well",
    "said",
    "thank",
    "much",
    "watching",
    "good",
    "day"
  ],
  "keywords": [
    "custom",
    "events",
    "javascript",
    "like",
    "double",
    "clicking",
    "also",
    "using",
    "event",
    "going",
    "need",
    "know",
    "video",
    "back",
    "name",
    "get",
    "one",
    "button",
    "right",
    "see",
    "inside",
    "nothing",
    "use",
    "new",
    "pass",
    "options",
    "look",
    "want",
    "call",
    "set",
    "created",
    "save",
    "happens",
    "actually",
    "triggered",
    "let",
    "listen",
    "say",
    "document",
    "listener",
    "add",
    "thing",
    "take",
    "object",
    "way",
    "dispatch",
    "information",
    "default",
    "important",
    "bubbles",
    "cancelable",
    "composed",
    "change",
    "within",
    "prevented",
    "cancel",
    "false",
    "means",
    "true",
    "click",
    "really",
    "put",
    "property",
    "example",
    "part",
    "much",
    "shadow",
    "dom",
    "would",
    "well",
    "hey",
    "detail",
    "normal",
    "twice",
    "time",
    "clicks",
    "milliseconds",
    "last"
  ]
}