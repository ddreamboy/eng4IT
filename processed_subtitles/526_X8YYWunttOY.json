{
  "text": "PRIYANKA VERGADIA:\nWe've all experienced\nthe benefits of crowdsourcing.\nWhether it's\nrestaurant reviews that\nhelp us find a perfect place\nfor dinner or crowdfunding\nto bring our favorite\nTV show back to life,\nthese distributed\ncontributions combined\nto make some super useful tools.\nWhat if we use that\nsame concept to build\nbetter machine learning models?\nStay tuned to find out.\n[MUSIC PLAYING]\nWelcome to AI Adventures, where\nwe explore the art, science,\nand tools of machine learning.\nI'm Priyanka Vergadia,\nand on this episode,\nwe are going to examine a\ndifferent approach to machine\nlearning.\nStandard machine\nlearning approaches\nrequire centralizing\nthe training data\ninto a common store.\nSo let's say we want to train a\nkeyboard prediction model based\non user interactions.\nTraditionally, we\nimplemented intelligence\nby collecting all the data on\nthe server, create a model,\nand then serve it.\nClients all talk to the\nserver to make prediction.\nThe model and the data is\nall in one central location,\nmaking it extremely easy.\nBut the downside of\nthis centralized setup\nis that this back-and-forth\ncommunication\ncan hurt the user\nexperience due to network\nlatency, connectivity,\nbattery lives, and all sorts\nof unpredictable issues.\nOne way to solve this is to have\neach client independently train\nits own model using its own\ndata right on the device.\nNo communication necessary.\nGreat idea, right?\nWell, not quite because\neach individual device\ndoes not have enough data\nto render a good model.\nYou could pre-train the model on\nthe server and then deploy it.\nBut the problem with that is,\nin our smart keyboard example,\nlet's say if everyone started\nusing a new trendy word today,\nthen the model trained\non yesterday's data\nwon't be as useful.\nSo what should we do\nto utilize the goodness\nof decentralized data while\nmaintaining users' privacy?\nWell, that's where\nfederated learning comes in.\nThe core idea behind\nfederated learning\nis decentralized learning,\nwhere the user data is never\nsent to a central server.\nSo how does it work?\nWell, you start with\na model on the server,\ndistribute it to the clients.\nBut you can't just\ndeploy to every client\nbecause you don't want to\nbreak the user experience.\nYou will identify\nthese clients based\non which ones are available,\nplugged in, and not in use.\nThen, also find\nout which ones are\nsuitable because not all clients\nwill have the sufficient data.\nOnce you've identified\nsuitable devices,\nwe can then deploy\nthe model to them.\nNow, each client trains\nthe model locally using\nits own local data and\nproduces a new model,\nwhich is sent to the server.\nThe thing to know here\nis that the data used\nto train the model on\nthe individual device\nnever leaves the device.\nOnly the weights, biases,\nand other parameters\nlearned by the model\nleave the device.\nThe server then\ngets all the locally\ntrained models and\naverages them out,\neffectively creating\na new master model.\nBut how do we know\nthat this process\nis doing something meaningful\nand actually creating\na good model?\nDoing this once is not enough.\nWe have to do it over and over\nso the combined model becomes\nthe initial model\nfor the next round.\nAnd with every round,\nthe combined model\ngets a little bit better\nthanks on the data\nfrom all those clients.\nAnd many, many rounds\nlater, your smart keyboard\nbegins to show signs\nof intelligence.\nNow, we just saw that all\nthe training data remains\non your device and\nno individual updates\nare stored in the cloud.\nFor additional privacy\nin federated learning,\nwe can use the concept of\nsecure aggregation, where\nthe server pairs up devices\nwith others in a buddy system.\nFor example, here, each\ndevice has two buddies.\nData from each device can be\ncombined with the random values\nbefore being sent to the server.\nThe server obviously knows\nthe value sent to the buddies\nand cancels them out to\njust get the payload.\nThis trick obfuscates the data\nwhile in transit to the server.\nIf you've used Google\nKeyboard, the Gboard, then you\nhave already seen\nand experienced\na federated learning use case.\nThe Gboard shows\na suggested query,\nyour phone locally\nstores information\nabout the current\ncontext and whether you\nclicked the suggestion.\nFederated learning processes\nthat history on device\nto suggest improvements to\nthe next iteration of Gboard's\nquery suggestion model.\nIn this episode, we learned\nthat federated learning\nis a collaborative and\ndecentralized approach\nto machine learning that allows\nfor smarter models, lower\nlatency, and less\npower consumption,\nall while ensuring user privacy.\nFederated learning is still\na relatively new concept,\nand there's definitely\nmore to come in the future.\nI would love to know some of\nthe federated learning use cases\nthat you're thinking about.\nDrop them in the comments below.\nAnd I look forward to seeing\nyou on the next episode of AI\nAdventures.\nIn the meantime, if\nyou've enjoyed this video,\nclick that Like button and\nsubscribe to get all the latest\nepisodes right when they come.\n",
  "words": [
    "priyanka",
    "vergadia",
    "experienced",
    "benefits",
    "crowdsourcing",
    "whether",
    "restaurant",
    "reviews",
    "help",
    "us",
    "find",
    "perfect",
    "place",
    "dinner",
    "crowdfunding",
    "bring",
    "favorite",
    "tv",
    "show",
    "back",
    "life",
    "distributed",
    "contributions",
    "combined",
    "make",
    "super",
    "useful",
    "tools",
    "use",
    "concept",
    "build",
    "better",
    "machine",
    "learning",
    "models",
    "stay",
    "tuned",
    "find",
    "music",
    "playing",
    "welcome",
    "ai",
    "adventures",
    "explore",
    "art",
    "science",
    "tools",
    "machine",
    "learning",
    "priyanka",
    "vergadia",
    "episode",
    "going",
    "examine",
    "different",
    "approach",
    "machine",
    "learning",
    "standard",
    "machine",
    "learning",
    "approaches",
    "require",
    "centralizing",
    "training",
    "data",
    "common",
    "store",
    "let",
    "say",
    "want",
    "train",
    "keyboard",
    "prediction",
    "model",
    "based",
    "user",
    "interactions",
    "traditionally",
    "implemented",
    "intelligence",
    "collecting",
    "data",
    "server",
    "create",
    "model",
    "serve",
    "clients",
    "talk",
    "server",
    "make",
    "prediction",
    "model",
    "data",
    "one",
    "central",
    "location",
    "making",
    "extremely",
    "easy",
    "downside",
    "centralized",
    "setup",
    "communication",
    "hurt",
    "user",
    "experience",
    "due",
    "network",
    "latency",
    "connectivity",
    "battery",
    "lives",
    "sorts",
    "unpredictable",
    "issues",
    "one",
    "way",
    "solve",
    "client",
    "independently",
    "train",
    "model",
    "using",
    "data",
    "right",
    "device",
    "communication",
    "necessary",
    "great",
    "idea",
    "right",
    "well",
    "quite",
    "individual",
    "device",
    "enough",
    "data",
    "render",
    "good",
    "model",
    "could",
    "model",
    "server",
    "deploy",
    "problem",
    "smart",
    "keyboard",
    "example",
    "let",
    "say",
    "everyone",
    "started",
    "using",
    "new",
    "trendy",
    "word",
    "today",
    "model",
    "trained",
    "yesterday",
    "data",
    "wo",
    "useful",
    "utilize",
    "goodness",
    "decentralized",
    "data",
    "maintaining",
    "users",
    "privacy",
    "well",
    "federated",
    "learning",
    "comes",
    "core",
    "idea",
    "behind",
    "federated",
    "learning",
    "decentralized",
    "learning",
    "user",
    "data",
    "never",
    "sent",
    "central",
    "server",
    "work",
    "well",
    "start",
    "model",
    "server",
    "distribute",
    "clients",
    "ca",
    "deploy",
    "every",
    "client",
    "want",
    "break",
    "user",
    "experience",
    "identify",
    "clients",
    "based",
    "ones",
    "available",
    "plugged",
    "use",
    "also",
    "find",
    "ones",
    "suitable",
    "clients",
    "sufficient",
    "data",
    "identified",
    "suitable",
    "devices",
    "deploy",
    "model",
    "client",
    "trains",
    "model",
    "locally",
    "using",
    "local",
    "data",
    "produces",
    "new",
    "model",
    "sent",
    "server",
    "thing",
    "know",
    "data",
    "used",
    "train",
    "model",
    "individual",
    "device",
    "never",
    "leaves",
    "device",
    "weights",
    "biases",
    "parameters",
    "learned",
    "model",
    "leave",
    "device",
    "server",
    "gets",
    "locally",
    "trained",
    "models",
    "averages",
    "effectively",
    "creating",
    "new",
    "master",
    "model",
    "know",
    "process",
    "something",
    "meaningful",
    "actually",
    "creating",
    "good",
    "model",
    "enough",
    "combined",
    "model",
    "becomes",
    "initial",
    "model",
    "next",
    "round",
    "every",
    "round",
    "combined",
    "model",
    "gets",
    "little",
    "bit",
    "better",
    "thanks",
    "data",
    "clients",
    "many",
    "many",
    "rounds",
    "later",
    "smart",
    "keyboard",
    "begins",
    "show",
    "signs",
    "intelligence",
    "saw",
    "training",
    "data",
    "remains",
    "device",
    "individual",
    "updates",
    "stored",
    "cloud",
    "additional",
    "privacy",
    "federated",
    "learning",
    "use",
    "concept",
    "secure",
    "aggregation",
    "server",
    "pairs",
    "devices",
    "others",
    "buddy",
    "system",
    "example",
    "device",
    "two",
    "buddies",
    "data",
    "device",
    "combined",
    "random",
    "values",
    "sent",
    "server",
    "server",
    "obviously",
    "knows",
    "value",
    "sent",
    "buddies",
    "cancels",
    "get",
    "payload",
    "trick",
    "obfuscates",
    "data",
    "transit",
    "server",
    "used",
    "google",
    "keyboard",
    "gboard",
    "already",
    "seen",
    "experienced",
    "federated",
    "learning",
    "use",
    "case",
    "gboard",
    "shows",
    "suggested",
    "query",
    "phone",
    "locally",
    "stores",
    "information",
    "current",
    "context",
    "whether",
    "clicked",
    "suggestion",
    "federated",
    "learning",
    "processes",
    "history",
    "device",
    "suggest",
    "improvements",
    "next",
    "iteration",
    "gboard",
    "query",
    "suggestion",
    "model",
    "episode",
    "learned",
    "federated",
    "learning",
    "collaborative",
    "decentralized",
    "approach",
    "machine",
    "learning",
    "allows",
    "smarter",
    "models",
    "lower",
    "latency",
    "less",
    "power",
    "consumption",
    "ensuring",
    "user",
    "privacy",
    "federated",
    "learning",
    "still",
    "relatively",
    "new",
    "concept",
    "definitely",
    "come",
    "future",
    "would",
    "love",
    "know",
    "federated",
    "learning",
    "use",
    "cases",
    "thinking",
    "drop",
    "comments",
    "look",
    "forward",
    "seeing",
    "next",
    "episode",
    "ai",
    "adventures",
    "meantime",
    "enjoyed",
    "video",
    "click",
    "like",
    "button",
    "subscribe",
    "get",
    "latest",
    "episodes",
    "right",
    "come"
  ],
  "keywords": [
    "priyanka",
    "vergadia",
    "experienced",
    "whether",
    "find",
    "show",
    "combined",
    "make",
    "useful",
    "tools",
    "use",
    "concept",
    "better",
    "machine",
    "learning",
    "models",
    "ai",
    "adventures",
    "episode",
    "approach",
    "training",
    "data",
    "let",
    "say",
    "want",
    "train",
    "keyboard",
    "prediction",
    "model",
    "based",
    "user",
    "intelligence",
    "server",
    "clients",
    "one",
    "central",
    "communication",
    "experience",
    "latency",
    "client",
    "using",
    "right",
    "device",
    "idea",
    "well",
    "individual",
    "enough",
    "good",
    "deploy",
    "smart",
    "example",
    "new",
    "trained",
    "decentralized",
    "privacy",
    "federated",
    "never",
    "sent",
    "every",
    "ones",
    "suitable",
    "devices",
    "locally",
    "know",
    "used",
    "learned",
    "gets",
    "creating",
    "next",
    "round",
    "many",
    "buddies",
    "get",
    "gboard",
    "query",
    "suggestion",
    "come"
  ]
}