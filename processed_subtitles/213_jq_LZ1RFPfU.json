{
  "text": "With the rise of cyberattacks and data breaches,\nit's never been more important to make sure that your organization is protected against hackers.\nThis series is about cybersecurity architecture, and we're going to talk about two different areas.\nFundamentals, where we're going to go through and discover what some of the principles of cybersecurity are\nthat need to be applied to everything that you do.\nAnd then the second part is on various cybersecurity domains.\nHere we're going to explore how to identify vulnerabilities, implement best practices,\nand defend against a wide range of cyber threats through an all encompassing cybersecurity architecture.\nBy the way, I'm an adjunct professor at NC State University.\nAnd there I teach a 400 level course on enterprise security architecture.\nThis video series is based upon that course.\nThe bad news is you won't get college credit for watching these videos.\nThe good news is no homework and no exams.\nSo yay.\nAll right, let's get started with cybersecurity fundamentals.\nAll right, we want to start with five security principles that you absolutely should do and one that you never should do.\nSo stay tuned to the end to find out what that one is.\nThe first one we're going to talk about is this notion of \"defense in depth\".\nDefense in depth is trying to create an obstacle course, a difficulty for the bad guy.\nSo if we take a look at an old security model, the castle.\nWell, the castle was designed with thick, tall walls to keep the good guys on the inside, the bad guys on the outside.\nAnd it worked pretty well until you realized the good guys sometimes needed to come out.\nAnd therefore, we needed to put a door on this thing.\nWell, the door then became a vulnerability.\nAnd so we we would try to reinforce it.\nAnd then maybe put a moat around the whole thing, because that made it even harder.\nAnd then the door with a drawbridge.\nSo now we've got a moat, which is harder to cross.\nWe've got the thick, tall walls.\nAnd maybe we even had in an angry dog here on this side.\nSomething to give a system of security mechanisms,\nbecause defense in depth is all about not relying on any single security mechanism to keep the system safe.\nNow, let's move and transition into a modern security example.\nHere, we've got a user who is on a workstation who's going to go across a network to get to a web server,\nwhich is going to hit an app server, which is ultimately going to hit a database.\nNow, what would we do for defense in depth in this example?\nWell, one thing I might do here is I might add multifactor authentication (MFA).\nThat is a system where I make sure that this user is who they are because I'm asking them for something they have,\nsomething they are, something they know--some combination of those kinds of things.\nNow, how about over here?\nI might do if it's a mobile device or an endpoint of some sort--mobile device management (MDM), endpoint device management software\nthat makes sure that the security policy that we have set for the organization is in fact followed\non this device-- it's got the right patches, it's got a password that's of sufficient length and things like that.\nWe might also add something like an EDR, which is sort of a next generation antivirus.\nAn endpoint detection and response capability to make sure that this platform is secure.\nThen from a network standpoint, well, I'm going to add in firewalls to keep the web server secure from the outside\nand also allow only traffic that I choose to allow to get back to these more sensitive zones.\nAnd then for the app server and the web server, I might do some testing,\nsome vulnerability testing on those, so that I make sure that those systems are not vulnerable to attack.\nAnd then ultimately, I'm going to take the data back here and I'm going to encrypt it.\nLock it up, put access controls around it.\nSo you can see what I've done here, is there's no single security mechanism that is protecting this thing.\nIf any one of these fails, the rest of the system still works.\nAnd that's the idea that we're after here.\nSo if you think about it this way: we've got no single point of failure.\nWe're trying to avoid single points of failure.\nAnd we want a system that ultimately, if it fails, it fails safe.\nThat's what we're trying to get.\nAnd that's what the old model and the new model of security were designed to do.\nThe second principle we're going to review is the \"principle of least privilege\".\nPrinciple of least privilege basically says I'm only going to give access rights to people that need that--\nthat are authorized and needed in order to do their job and can justify it, and for only as long as they need that access right.\nFor instance, in this example, I've got three users.\nThis guy does not really have a business need, so we don't give it to him.\nThe other guys get the access right.\nThey can prove their need.\nAnd the other thing is, even for these guys, the clock is ticking.\nI'm not going to give them this access right in perpetuity, forever.\nWe're going to constantly be going back and making sure that they still need that capability.\nIf they don't, we're going to remove it from them as well.\nNow, another notion in the principle of least privilege is hardening a system.\nLet's say we've got a web server like this and the web server out of the box--\ndefault configuration--is that it runs a HTTP, of course, because we need that in order to do web traffic.\nBut let's say it also turns on an FTP service\nand SSH service so that I can log in remotely.\nWell, there's some things that I might look at and say, \"Okay, do I really need this FTP server?\"\nIf it turns out I'm not going to use it, I should remove that service entirely.\nIn the SSH, if I'm not planning to use it, remove it entirely.\nBecause every single one of these services is potentially expanding our attack surface and making us more vulnerable.\nAnother example of hardening is to remove all of the unnecessary IDs\nthat are on the system and change the names of the IDs that we do keep from their default.\nSo, for instance, if the administrator ID on this system--out of the box as it's configured--is admin, let's change that.\nLet's make it something more specific.\nAnd I'll name it after me, or give it some other name.\nChange all the default passwords.\nWe don't want this thing in just a vanilla configuration because the bad guys will know what that is and they'll know how to break in.\nNow another example is this idea of privilege creep.\nLet me illustrate that.\nLet's say there's two people that work for the company, and each one of these are access rights that they have.\nSo this guy is able to do these things.\nHe can do the same things because they perform essentially the same role.\nNow, this guy gets a promotion and a new job and new responsibilities.\nWell, he goes to the administrator and says, \"Okay, now I'm doing my new job.\nI need you to add to my capabilities.\nAnd these are the things I need.\" The administrator gives him those and then also says, \"You know what?\nJust in case, I think you're going to probably need this.\nLet me give you that as well.\nThat way you won't have to come back and ask again.\"\nOr, come back and bother me, is what he really means.\nThe problem with this is, just-in-case is just the opposite of principle of least privilege.\nIn fact, what we should be doing is running an annual recertification campaign.\nAt least annual.\nSome organizations do it more frequently than that.\nAnd in re-cert, I go back and look at all of my users and all of their access rights and make sure they still have a justified need.\nSo this person is still doing the same job, still needs all of that.\nGreat, they keep it.\nThis guy, though, no longer needs this capability because his new job doesn't require it.\nSo we're taking it away.\nAnd this thing that he got just in case, we're taking that away, too.\nSo what we're trying to do with the principle of least privilege is to give only the access rights you need for as long as you need them.\nHardened systems.\nWe're going to eliminate privilege creep, and we're going to eliminate the just-in-case principle.\nOur third principle to keep in mind with cybersecurity is this notion of separation of duties.\nThat is, we won't have any single point of control.\nIn fact, what we're trying to do is force collusion by two bad actors-- or more than two bad actors --in order to compromise the system.\nBut no single person can create the compromise.\nSo, an example, in the physical world, would be if I had two people here and I've got a door with two locks on it.\nAnd this guy has a key to this lock and this guy has a key to this lock.\nAnd what it is, is now, if he uses his key to open the door, he still can't open the door.\nHe can't open the door alone.\nBut the two of them together, cooperating, can in fact, open the door.\nSo there's no single point of control.\nTherefore, we have a separation of duties.\nNow, taking a look at another example here, let's say in an IT case, here's a requester.\nAnd this user wants access to this database.\nSo he's going to ask for that.\nHe's going to send in his request.\nBut then there's an approver who's going to have to take action on it and say yes or no based upon whether we think they should have it or not.\nThen if they get the approval, then they're given the action that they want.\nWhatever it is, the funds transfer, the access to the database, the package delivered, whatever it happens to be.\nBut notice the point here.\nThis person, the requester, is not the same as the approver.\nThey cannot be the same person.\nBecause if it was, if I could request and approve my own request, then there is no separation of duties.\nSo again, what we're trying to do with this is create a necessary case for collusion,\nwhich is hard to do because it's hard for lots of people to work together and keep a good secret.\nAnd what we're trying to avoid is this single point of control.\nThe fourth security principle that we're going to talk about is secure by design.\nIn other words, it shouldn't be an afterthought that we put security in.\nThink of it this way: If you were designing a building in an earthquake zone, you want to make this building able to stand the pressure.\nSo, you don't go build the building, and then after it's all done, go back and say, \"Now let's make it earthquake-proof\".\nNo, you want to do that from start-to-finish, all the way from design through completion.\nSo let's take a look at an IT example.\nSo when we have a project, we will tend to start off with requirements stage.\nWe'll go then into design, we will code the thing,\nthen we'll install whatever it is that we've written, then we'll test it out and then we'll promote it to production.\nAnd then, in theory, we should feed that loop back and continue the continuous development process that way.\nWell, what we don't want to do, is what too many people do in these cases,\nand they wait until really about this phase to do security--once it's already out there.\nSecurity can't just be a bolt-on that you do at the end.\nIn fact, it needs to be something that we're doing throughout, pervasively.\nWe look at the security aspects of the requirements.\nWe build security into the design.\nWe are thinking about secure coding principles all along the path.\nWhen we install, we do it on a secure system.\nWe're testing and and guarding that test data.\nAnd then in production, obviously, we keep testing.\nSo security is something we do throughout, but it doesn't begin here.\nIt begins in these phases.\nThat's what we're really looking for here.\nNow, if you think about another example, let's say: Whose job is security?\nWell, it's really everyone here.\nWe have a designer, an administrator and a user.\nSo really, all of them are responsible for security in one way or another.\nBut who does the job begin with?\nWell, it begins with this guy right here.\nWe need to make sure that he is designing security in.\nIn other words, what we're trying to do is make security start to finish.\nAnd we want \"secure by design\", means it's secure out of the box.\nThat's the way we'd like it to be.\nNow, sometimes we're going to have to do some configuration changes to make it more secure.\nBut this is the goal that we're trying to shoot for--secure by design, secure out of the box.\nOur fifth security principle is the \"K.I.S.S. principle\".\nIt stands for \"Keep It Simple, Stupid\".\nIn other words, we don't want to make it harder than necessary because that will make it easier for the bad guys and harder for the good guys.\nTo give you an example: we're trying to create some level of complexity so that it's not easy for the bad guy to get in.\nBut a lot of times the security department will create this complex maze of things that the good guys essentially have to go through.\nAnd what happens in that case is, I start in here, okay, I log in.\nNow, I have to traverse and eventually I'm like, \"Oh, I'm at a dead end\".\nOkay, maybe let's try this again.\nYou know what?\nIt's too much trouble to do what the security department has asked me to do.\nI'm just going to subvert this, and I'm going to end up doing it that way, which is, of course, not what we're after.\nSo the lesson here is, if we make it harder to do the right thing than it is to do the wrong thing, people are going to do the wrong thing.\nSo we need to be able to make the system secure, but also as simple as possible.\nSo keep it simple, stupid.\nHere's an example of how we do this in security departments, for real.\nWe'll come up with password rules.\nSo we'll say this is your password and it equals this.\nAnd it's this because we created a complex set of rules that say you have to start with an uppercase,\nthen you follow with a lowercase, then you need a special character, then you need to throw in some numbers,\nand then you have to have some mixture of upper and lower case and special characters and all this kind of stuff. And it has to be really long.\nAnd by the way, we need lots of these.\nYou're going to have a different one on every system, and I'm going to make you change it on a frequent basis.\nThat's this-- that's what the user sees --is a complex maze, and they're going to find a way to do this.\nAnd what they're going to do is find one password and write it down\nand set all their systems equal to the same thing, which is again, not what we were after.\nSo what we want to do is understand complexity is the enemy of security.\nSo we want to make the system just complex enough to keep the bad guys out,\nbut not so complex that it's hard for the good guys to do what they need to do.\nFor instance, you might have noticed, well, what about Defense in Depth, which I talked about up here?\nThere might be some conflict in that because there we're trying to set\na system of security mechanisms in place to put an obstacle course for the bad guy.\nWe want that obstacle course to be for the bad guy, not for the good guy.\nAll right, now we've gone over five security principles that you should always observe.\nAnd now the big reveal, the security principle you should never observe, and that is security by obscurity.\nThat is, relying on some sort of secret knowledge in order to make the system safe.\nIt turns out that secrecy and security are not the same thing.\nIn fact, what we want is a system that is open and observable.\nAnd this guy called Kerckhoff came up with what's now known as Kerckhoff's Principle, which basically describes that.\nHe was specifically talking about a crypto system.\nAnd he said basically, a crypto system should be secure if you know every single thing about it except for the key.\nIn other words, the key is the only secret in the whole system.\nNow, why would this be an issue?\nWell, it turns out a lot of people and you should whenever you hear this, you should run and not walk,\nbut run away when you hear somebody say, \"I've invented a crypto system that's proprietary and it will take your clear text,\nyou feed it into my algorithm along with a key, and then it will produce from clear text to ciphertext\".\nOkay, great.\nThe problem is this is a black box.\nI can't see how it's working.\nAnd if the individual says it's unbreakable, I've been hacking at it for weeks, months, years.\nAll that means is the inventor couldn't find a way to break it.\nBut that's not the same thing as the whole world, given access, would, in fact, break this.\nAnd, in fact, given time, they will.\nEven if it is a black box.\nHistory has shown that to be the case.\nSo what we want is not black box security, we want glass box security.\nSo in this case, what we have is the clear text, goes into a crypto algorithm, which we understand, it's been published.\nIn fact, if you look at the good crypto algorithms that we rely on today, it's things like, AES, the Advanced Encryption Standard and RSA.\nThese are algorithms that everyone that wants to know how they work can look it up and see.\nAnd the secrecy, therefore, the security doesn't come from some secret knowledge of how this thing works.\nIt's able to produce ciphertext from clear text without having to keep this part secret.\nThe only secret is the key.\nAnd that's what we want.\nWe do the same kind of things when we talk about secure operating systems or secure applications or things like that.\nAs long as the security is based on secrecy, it's not really something that we can rely on.\nThanks for watching!\nBefore you leave, don't forget to hit subscribe. That way you won't miss the next installment of the cybersecurity architecture series.\n",
  "words": [
    "rise",
    "cyberattacks",
    "data",
    "breaches",
    "never",
    "important",
    "make",
    "sure",
    "organization",
    "protected",
    "hackers",
    "series",
    "cybersecurity",
    "architecture",
    "going",
    "talk",
    "two",
    "different",
    "areas",
    "fundamentals",
    "going",
    "go",
    "discover",
    "principles",
    "cybersecurity",
    "need",
    "applied",
    "everything",
    "second",
    "part",
    "various",
    "cybersecurity",
    "domains",
    "going",
    "explore",
    "identify",
    "vulnerabilities",
    "implement",
    "best",
    "practices",
    "defend",
    "wide",
    "range",
    "cyber",
    "threats",
    "encompassing",
    "cybersecurity",
    "architecture",
    "way",
    "adjunct",
    "professor",
    "nc",
    "state",
    "university",
    "teach",
    "400",
    "level",
    "course",
    "enterprise",
    "security",
    "architecture",
    "video",
    "series",
    "based",
    "upon",
    "course",
    "bad",
    "news",
    "wo",
    "get",
    "college",
    "credit",
    "watching",
    "videos",
    "good",
    "news",
    "homework",
    "exams",
    "yay",
    "right",
    "let",
    "get",
    "started",
    "cybersecurity",
    "fundamentals",
    "right",
    "want",
    "start",
    "five",
    "security",
    "principles",
    "absolutely",
    "one",
    "never",
    "stay",
    "tuned",
    "end",
    "find",
    "one",
    "first",
    "one",
    "going",
    "talk",
    "notion",
    "defense",
    "depth",
    "defense",
    "depth",
    "trying",
    "create",
    "obstacle",
    "course",
    "difficulty",
    "bad",
    "guy",
    "take",
    "look",
    "old",
    "security",
    "model",
    "castle",
    "well",
    "castle",
    "designed",
    "thick",
    "tall",
    "walls",
    "keep",
    "good",
    "guys",
    "inside",
    "bad",
    "guys",
    "outside",
    "worked",
    "pretty",
    "well",
    "realized",
    "good",
    "guys",
    "sometimes",
    "needed",
    "come",
    "therefore",
    "needed",
    "put",
    "door",
    "thing",
    "well",
    "door",
    "became",
    "vulnerability",
    "would",
    "try",
    "reinforce",
    "maybe",
    "put",
    "moat",
    "around",
    "whole",
    "thing",
    "made",
    "even",
    "harder",
    "door",
    "drawbridge",
    "got",
    "moat",
    "harder",
    "cross",
    "got",
    "thick",
    "tall",
    "walls",
    "maybe",
    "even",
    "angry",
    "dog",
    "side",
    "something",
    "give",
    "system",
    "security",
    "mechanisms",
    "defense",
    "depth",
    "relying",
    "single",
    "security",
    "mechanism",
    "keep",
    "system",
    "safe",
    "let",
    "move",
    "transition",
    "modern",
    "security",
    "example",
    "got",
    "user",
    "workstation",
    "going",
    "go",
    "across",
    "network",
    "get",
    "web",
    "server",
    "going",
    "hit",
    "app",
    "server",
    "ultimately",
    "going",
    "hit",
    "database",
    "would",
    "defense",
    "depth",
    "example",
    "well",
    "one",
    "thing",
    "might",
    "might",
    "add",
    "multifactor",
    "authentication",
    "mfa",
    "system",
    "make",
    "sure",
    "user",
    "asking",
    "something",
    "something",
    "something",
    "know",
    "combination",
    "kinds",
    "things",
    "might",
    "mobile",
    "device",
    "endpoint",
    "sort",
    "mobile",
    "device",
    "management",
    "mdm",
    "endpoint",
    "device",
    "management",
    "software",
    "makes",
    "sure",
    "security",
    "policy",
    "set",
    "organization",
    "fact",
    "followed",
    "device",
    "got",
    "right",
    "patches",
    "got",
    "password",
    "sufficient",
    "length",
    "things",
    "like",
    "might",
    "also",
    "add",
    "something",
    "like",
    "edr",
    "sort",
    "next",
    "generation",
    "antivirus",
    "endpoint",
    "detection",
    "response",
    "capability",
    "make",
    "sure",
    "platform",
    "secure",
    "network",
    "standpoint",
    "well",
    "going",
    "add",
    "firewalls",
    "keep",
    "web",
    "server",
    "secure",
    "outside",
    "also",
    "allow",
    "traffic",
    "choose",
    "allow",
    "get",
    "back",
    "sensitive",
    "zones",
    "app",
    "server",
    "web",
    "server",
    "might",
    "testing",
    "vulnerability",
    "testing",
    "make",
    "sure",
    "systems",
    "vulnerable",
    "attack",
    "ultimately",
    "going",
    "take",
    "data",
    "back",
    "going",
    "encrypt",
    "lock",
    "put",
    "access",
    "controls",
    "around",
    "see",
    "done",
    "single",
    "security",
    "mechanism",
    "protecting",
    "thing",
    "one",
    "fails",
    "rest",
    "system",
    "still",
    "works",
    "idea",
    "think",
    "way",
    "got",
    "single",
    "point",
    "failure",
    "trying",
    "avoid",
    "single",
    "points",
    "failure",
    "want",
    "system",
    "ultimately",
    "fails",
    "fails",
    "safe",
    "trying",
    "get",
    "old",
    "model",
    "new",
    "model",
    "security",
    "designed",
    "second",
    "principle",
    "going",
    "review",
    "principle",
    "least",
    "privilege",
    "principle",
    "least",
    "privilege",
    "basically",
    "says",
    "going",
    "give",
    "access",
    "rights",
    "people",
    "need",
    "authorized",
    "needed",
    "order",
    "job",
    "justify",
    "long",
    "need",
    "access",
    "right",
    "instance",
    "example",
    "got",
    "three",
    "users",
    "guy",
    "really",
    "business",
    "need",
    "give",
    "guys",
    "get",
    "access",
    "right",
    "prove",
    "need",
    "thing",
    "even",
    "guys",
    "clock",
    "ticking",
    "going",
    "give",
    "access",
    "right",
    "perpetuity",
    "forever",
    "going",
    "constantly",
    "going",
    "back",
    "making",
    "sure",
    "still",
    "need",
    "capability",
    "going",
    "remove",
    "well",
    "another",
    "notion",
    "principle",
    "least",
    "privilege",
    "hardening",
    "system",
    "let",
    "say",
    "got",
    "web",
    "server",
    "like",
    "web",
    "server",
    "box",
    "default",
    "configuration",
    "runs",
    "http",
    "course",
    "need",
    "order",
    "web",
    "traffic",
    "let",
    "say",
    "also",
    "turns",
    "ftp",
    "service",
    "ssh",
    "service",
    "log",
    "remotely",
    "well",
    "things",
    "might",
    "look",
    "say",
    "okay",
    "really",
    "need",
    "ftp",
    "server",
    "turns",
    "going",
    "use",
    "remove",
    "service",
    "entirely",
    "ssh",
    "planning",
    "use",
    "remove",
    "entirely",
    "every",
    "single",
    "one",
    "services",
    "potentially",
    "expanding",
    "attack",
    "surface",
    "making",
    "us",
    "vulnerable",
    "another",
    "example",
    "hardening",
    "remove",
    "unnecessary",
    "ids",
    "system",
    "change",
    "names",
    "ids",
    "keep",
    "default",
    "instance",
    "administrator",
    "id",
    "system",
    "box",
    "configured",
    "admin",
    "let",
    "change",
    "let",
    "make",
    "something",
    "specific",
    "name",
    "give",
    "name",
    "change",
    "default",
    "passwords",
    "want",
    "thing",
    "vanilla",
    "configuration",
    "bad",
    "guys",
    "know",
    "know",
    "break",
    "another",
    "example",
    "idea",
    "privilege",
    "creep",
    "let",
    "illustrate",
    "let",
    "say",
    "two",
    "people",
    "work",
    "company",
    "one",
    "access",
    "rights",
    "guy",
    "able",
    "things",
    "things",
    "perform",
    "essentially",
    "role",
    "guy",
    "gets",
    "promotion",
    "new",
    "job",
    "new",
    "responsibilities",
    "well",
    "goes",
    "administrator",
    "says",
    "okay",
    "new",
    "job",
    "need",
    "add",
    "capabilities",
    "things",
    "need",
    "administrator",
    "gives",
    "also",
    "says",
    "know",
    "case",
    "think",
    "going",
    "probably",
    "need",
    "let",
    "give",
    "well",
    "way",
    "wo",
    "come",
    "back",
    "ask",
    "come",
    "back",
    "bother",
    "really",
    "means",
    "problem",
    "opposite",
    "principle",
    "least",
    "privilege",
    "fact",
    "running",
    "annual",
    "recertification",
    "campaign",
    "least",
    "annual",
    "organizations",
    "frequently",
    "go",
    "back",
    "look",
    "users",
    "access",
    "rights",
    "make",
    "sure",
    "still",
    "justified",
    "need",
    "person",
    "still",
    "job",
    "still",
    "needs",
    "great",
    "keep",
    "guy",
    "though",
    "longer",
    "needs",
    "capability",
    "new",
    "job",
    "require",
    "taking",
    "away",
    "thing",
    "got",
    "case",
    "taking",
    "away",
    "trying",
    "principle",
    "least",
    "privilege",
    "give",
    "access",
    "rights",
    "need",
    "long",
    "need",
    "hardened",
    "systems",
    "going",
    "eliminate",
    "privilege",
    "creep",
    "going",
    "eliminate",
    "principle",
    "third",
    "principle",
    "keep",
    "mind",
    "cybersecurity",
    "notion",
    "separation",
    "duties",
    "wo",
    "single",
    "point",
    "control",
    "fact",
    "trying",
    "force",
    "collusion",
    "two",
    "bad",
    "actors",
    "two",
    "bad",
    "actors",
    "order",
    "compromise",
    "system",
    "single",
    "person",
    "create",
    "compromise",
    "example",
    "physical",
    "world",
    "would",
    "two",
    "people",
    "got",
    "door",
    "two",
    "locks",
    "guy",
    "key",
    "lock",
    "guy",
    "key",
    "lock",
    "uses",
    "key",
    "open",
    "door",
    "still",
    "ca",
    "open",
    "door",
    "ca",
    "open",
    "door",
    "alone",
    "two",
    "together",
    "cooperating",
    "fact",
    "open",
    "door",
    "single",
    "point",
    "control",
    "therefore",
    "separation",
    "duties",
    "taking",
    "look",
    "another",
    "example",
    "let",
    "say",
    "case",
    "requester",
    "user",
    "wants",
    "access",
    "database",
    "going",
    "ask",
    "going",
    "send",
    "request",
    "approver",
    "going",
    "take",
    "action",
    "say",
    "yes",
    "based",
    "upon",
    "whether",
    "think",
    "get",
    "approval",
    "given",
    "action",
    "want",
    "whatever",
    "funds",
    "transfer",
    "access",
    "database",
    "package",
    "delivered",
    "whatever",
    "happens",
    "notice",
    "point",
    "person",
    "requester",
    "approver",
    "person",
    "could",
    "request",
    "approve",
    "request",
    "separation",
    "duties",
    "trying",
    "create",
    "necessary",
    "case",
    "collusion",
    "hard",
    "hard",
    "lots",
    "people",
    "work",
    "together",
    "keep",
    "good",
    "secret",
    "trying",
    "avoid",
    "single",
    "point",
    "control",
    "fourth",
    "security",
    "principle",
    "going",
    "talk",
    "secure",
    "design",
    "words",
    "afterthought",
    "put",
    "security",
    "think",
    "way",
    "designing",
    "building",
    "earthquake",
    "zone",
    "want",
    "make",
    "building",
    "able",
    "stand",
    "pressure",
    "go",
    "build",
    "building",
    "done",
    "go",
    "back",
    "say",
    "let",
    "make",
    "want",
    "way",
    "design",
    "completion",
    "let",
    "take",
    "look",
    "example",
    "project",
    "tend",
    "start",
    "requirements",
    "stage",
    "go",
    "design",
    "code",
    "thing",
    "install",
    "whatever",
    "written",
    "test",
    "promote",
    "production",
    "theory",
    "feed",
    "loop",
    "back",
    "continue",
    "continuous",
    "development",
    "process",
    "way",
    "well",
    "want",
    "many",
    "people",
    "cases",
    "wait",
    "really",
    "phase",
    "security",
    "already",
    "security",
    "ca",
    "end",
    "fact",
    "needs",
    "something",
    "throughout",
    "pervasively",
    "look",
    "security",
    "aspects",
    "requirements",
    "build",
    "security",
    "design",
    "thinking",
    "secure",
    "coding",
    "principles",
    "along",
    "path",
    "install",
    "secure",
    "system",
    "testing",
    "guarding",
    "test",
    "data",
    "production",
    "obviously",
    "keep",
    "testing",
    "security",
    "something",
    "throughout",
    "begin",
    "begins",
    "phases",
    "really",
    "looking",
    "think",
    "another",
    "example",
    "let",
    "say",
    "whose",
    "job",
    "security",
    "well",
    "really",
    "everyone",
    "designer",
    "administrator",
    "user",
    "really",
    "responsible",
    "security",
    "one",
    "way",
    "another",
    "job",
    "begin",
    "well",
    "begins",
    "guy",
    "right",
    "need",
    "make",
    "sure",
    "designing",
    "security",
    "words",
    "trying",
    "make",
    "security",
    "start",
    "finish",
    "want",
    "secure",
    "design",
    "means",
    "secure",
    "box",
    "way",
    "like",
    "sometimes",
    "going",
    "configuration",
    "changes",
    "make",
    "secure",
    "goal",
    "trying",
    "shoot",
    "secure",
    "design",
    "secure",
    "box",
    "fifth",
    "security",
    "principle",
    "principle",
    "stands",
    "keep",
    "simple",
    "stupid",
    "words",
    "want",
    "make",
    "harder",
    "necessary",
    "make",
    "easier",
    "bad",
    "guys",
    "harder",
    "good",
    "guys",
    "give",
    "example",
    "trying",
    "create",
    "level",
    "complexity",
    "easy",
    "bad",
    "guy",
    "get",
    "lot",
    "times",
    "security",
    "department",
    "create",
    "complex",
    "maze",
    "things",
    "good",
    "guys",
    "essentially",
    "go",
    "happens",
    "case",
    "start",
    "okay",
    "log",
    "traverse",
    "eventually",
    "like",
    "oh",
    "dead",
    "end",
    "okay",
    "maybe",
    "let",
    "try",
    "know",
    "much",
    "trouble",
    "security",
    "department",
    "asked",
    "going",
    "subvert",
    "going",
    "end",
    "way",
    "course",
    "lesson",
    "make",
    "harder",
    "right",
    "thing",
    "wrong",
    "thing",
    "people",
    "going",
    "wrong",
    "thing",
    "need",
    "able",
    "make",
    "system",
    "secure",
    "also",
    "simple",
    "possible",
    "keep",
    "simple",
    "stupid",
    "example",
    "security",
    "departments",
    "real",
    "come",
    "password",
    "rules",
    "say",
    "password",
    "equals",
    "created",
    "complex",
    "set",
    "rules",
    "say",
    "start",
    "uppercase",
    "follow",
    "lowercase",
    "need",
    "special",
    "character",
    "need",
    "throw",
    "numbers",
    "mixture",
    "upper",
    "lower",
    "case",
    "special",
    "characters",
    "kind",
    "stuff",
    "really",
    "long",
    "way",
    "need",
    "lots",
    "going",
    "different",
    "one",
    "every",
    "system",
    "going",
    "make",
    "change",
    "frequent",
    "basis",
    "user",
    "sees",
    "complex",
    "maze",
    "going",
    "find",
    "way",
    "going",
    "find",
    "one",
    "password",
    "write",
    "set",
    "systems",
    "equal",
    "thing",
    "want",
    "understand",
    "complexity",
    "enemy",
    "security",
    "want",
    "make",
    "system",
    "complex",
    "enough",
    "keep",
    "bad",
    "guys",
    "complex",
    "hard",
    "good",
    "guys",
    "need",
    "instance",
    "might",
    "noticed",
    "well",
    "defense",
    "depth",
    "talked",
    "might",
    "conflict",
    "trying",
    "set",
    "system",
    "security",
    "mechanisms",
    "place",
    "put",
    "obstacle",
    "course",
    "bad",
    "guy",
    "want",
    "obstacle",
    "course",
    "bad",
    "guy",
    "good",
    "guy",
    "right",
    "gone",
    "five",
    "security",
    "principles",
    "always",
    "observe",
    "big",
    "reveal",
    "security",
    "principle",
    "never",
    "observe",
    "security",
    "obscurity",
    "relying",
    "sort",
    "secret",
    "knowledge",
    "order",
    "make",
    "system",
    "safe",
    "turns",
    "secrecy",
    "security",
    "thing",
    "fact",
    "want",
    "system",
    "open",
    "observable",
    "guy",
    "called",
    "kerckhoff",
    "came",
    "known",
    "kerckhoff",
    "principle",
    "basically",
    "describes",
    "specifically",
    "talking",
    "crypto",
    "system",
    "said",
    "basically",
    "crypto",
    "system",
    "secure",
    "know",
    "every",
    "single",
    "thing",
    "except",
    "key",
    "words",
    "key",
    "secret",
    "whole",
    "system",
    "would",
    "issue",
    "well",
    "turns",
    "lot",
    "people",
    "whenever",
    "hear",
    "run",
    "walk",
    "run",
    "away",
    "hear",
    "somebody",
    "say",
    "invented",
    "crypto",
    "system",
    "proprietary",
    "take",
    "clear",
    "text",
    "feed",
    "algorithm",
    "along",
    "key",
    "produce",
    "clear",
    "text",
    "ciphertext",
    "okay",
    "great",
    "problem",
    "black",
    "box",
    "ca",
    "see",
    "working",
    "individual",
    "says",
    "unbreakable",
    "hacking",
    "weeks",
    "months",
    "years",
    "means",
    "inventor",
    "could",
    "find",
    "way",
    "break",
    "thing",
    "whole",
    "world",
    "given",
    "access",
    "would",
    "fact",
    "break",
    "fact",
    "given",
    "time",
    "even",
    "black",
    "box",
    "history",
    "shown",
    "case",
    "want",
    "black",
    "box",
    "security",
    "want",
    "glass",
    "box",
    "security",
    "case",
    "clear",
    "text",
    "goes",
    "crypto",
    "algorithm",
    "understand",
    "published",
    "fact",
    "look",
    "good",
    "crypto",
    "algorithms",
    "rely",
    "today",
    "things",
    "like",
    "aes",
    "advanced",
    "encryption",
    "standard",
    "rsa",
    "algorithms",
    "everyone",
    "wants",
    "know",
    "work",
    "look",
    "see",
    "secrecy",
    "therefore",
    "security",
    "come",
    "secret",
    "knowledge",
    "thing",
    "works",
    "able",
    "produce",
    "ciphertext",
    "clear",
    "text",
    "without",
    "keep",
    "part",
    "secret",
    "secret",
    "key",
    "want",
    "kind",
    "things",
    "talk",
    "secure",
    "operating",
    "systems",
    "secure",
    "applications",
    "things",
    "like",
    "long",
    "security",
    "based",
    "secrecy",
    "really",
    "something",
    "rely",
    "thanks",
    "watching",
    "leave",
    "forget",
    "hit",
    "subscribe",
    "way",
    "wo",
    "miss",
    "next",
    "installment",
    "cybersecurity",
    "architecture",
    "series"
  ],
  "keywords": [
    "data",
    "never",
    "make",
    "sure",
    "series",
    "cybersecurity",
    "architecture",
    "going",
    "talk",
    "two",
    "go",
    "principles",
    "need",
    "way",
    "course",
    "security",
    "based",
    "bad",
    "wo",
    "get",
    "good",
    "right",
    "let",
    "want",
    "start",
    "one",
    "end",
    "find",
    "notion",
    "defense",
    "depth",
    "trying",
    "create",
    "obstacle",
    "guy",
    "take",
    "look",
    "model",
    "well",
    "keep",
    "guys",
    "needed",
    "come",
    "therefore",
    "put",
    "door",
    "thing",
    "would",
    "maybe",
    "whole",
    "even",
    "harder",
    "got",
    "something",
    "give",
    "system",
    "single",
    "safe",
    "example",
    "user",
    "web",
    "server",
    "hit",
    "ultimately",
    "database",
    "might",
    "add",
    "know",
    "things",
    "device",
    "endpoint",
    "sort",
    "set",
    "fact",
    "password",
    "like",
    "also",
    "capability",
    "secure",
    "back",
    "testing",
    "systems",
    "lock",
    "access",
    "see",
    "fails",
    "still",
    "think",
    "point",
    "new",
    "principle",
    "least",
    "privilege",
    "basically",
    "says",
    "rights",
    "people",
    "order",
    "job",
    "long",
    "instance",
    "really",
    "remove",
    "another",
    "say",
    "box",
    "default",
    "configuration",
    "turns",
    "service",
    "okay",
    "every",
    "change",
    "administrator",
    "break",
    "work",
    "able",
    "case",
    "means",
    "person",
    "needs",
    "taking",
    "away",
    "separation",
    "duties",
    "control",
    "key",
    "open",
    "ca",
    "request",
    "given",
    "whatever",
    "hard",
    "secret",
    "design",
    "words",
    "building",
    "simple",
    "complex",
    "secrecy",
    "crypto",
    "clear",
    "text",
    "black"
  ]
}