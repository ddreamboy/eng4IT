{
  "text": "in the category of reference types you\nhave learned about objects and arrays\nnow let's take a look at functions\nfunctions are one of the fundamental\nbuilding blocks in JavaScript a function\nis basically a set of statements that\nperforms a task or calculates a value\nlet me show you a couple of examples so\nI'm going to declare a function using\nthe function keyword now we need to give\nit a name let's call that greet after\nthat we need to add parentheses that's\npart of the syntax for declaring\nfunctions and then curly braces now what\nwe have here inside the curly braces is\nwhat we refer to as the body of this\nfunction and this is where we add all\nthese statements to define some kind of\nlogic in our application for example the\nlogic for this function should be to\ndisplay a message on the console so here\nwe can add console the log hello world\nnow note that here we have a statement\nso we terminated with a semicolon but\nwhen we are declaring a function we\ndon't need to add semicolon at the end\nbecause we are not declaring it like a\nvariable like this okay this is a\nfunction declaration right so now we\nhave a function we can call this\nfunction like this so we add the name of\nthe function and parentheses again and\nthen semicolon to indicate that this is\na statement save the changes now we have\nhello world on the console but that's\npretty boring what would we do this let\nme show you how to make this more\ninteresting our functions can have\ninputs and these inputs can change how\nthe function behaves so let's say\ninstead of displaying hello world we\nwant to display the name of the person\nhere like hello John so we can add a\nvariable here in between parentheses we\nrefer to this variable as a parameter\nso this greet function has one parameter\ncalled name and essentially name is like\na variable that is only meaningful\ninside\ndysfunction so inside of this function\nwe can work with this name variable but\nit will not be accessible outside of\nthis function the name is an input to\nthis function so instead of displaying\nhello world we can display hello\nthen add a plus here to concatenate two\nstrings so we can add name after now\nwhen calling the great function we need\nto pass a value for the name variable or\nname parameter more accurately so we can\npass John here now we refer to this as\nan argument so John is an argument to\nthe greet function a name is a parameter\nof the greet function it's one of the\nthings that a lot of programmers don't\nknow they don't know the difference\nbetween a parameter and an argument so a\nparameter is what we have here at the\ntime of declaration but the argument is\nthe actual value with supply for that\nparameter okay\nnow let's save the changes so we have\nhello John now we can reuse this\nfunction but with a different input so\nwe can copy this line here and change on\nto Mary save the changes now we have two\ndifferent messages on the console now a\nfunction can have multiple parameters so\nhere we can separate parameters using a\ncomma so let's add another parameter\nlike last name now we can change our\nconsole not blog add a space here and\nthen display the last name now when\ncalling this greet function we should\npass another argument for the last name\nright but let's see what happens if we\ndon't do this so I'm gonna save the\nchanges see what we got\nhello John undefined because as I told\nyou before the default value of\nvariables in JavaScript is undefined so\nbecause we did not pass a value for the\nlast name by default it's undefined so\nI'm gonna pass another argument here we\nseparate them using a comma John Smith\nand we don't need the second call to the\ngreet function save the changes now we\nhave hello John Smith\nhi guys thank you for watching my\njavascript tutorial this tutorial is\npart of my JavaScript course where you\nlearn all the essential JavaScript\nfeatures that every web and mobile\napplication developer must know if\nyou're an absolute beginner or have some\nexperience in JavaScript and are looking\nfor a fun and in-depth course that\nteaches you the fundamentals of\nJavaScript this course is for you this\ncourse is also packed with tons of\nexercises that help you master what you\nlearned in the course in fact many of\nthese exercises are questions that come\nup in technical programming interviews\nso if you're pursuing a job as a\nfront-end or a back-end developer or if\nyou simply want to have a more in-depth\nunderstanding of JavaScript I highly\nencourage you to enroll in the course\nfor a limited time you can get this\ncourse with a discount using the link in\nthe video description click the link to\nfind out more about the course and\nenroll\n",
  "words": [
    "category",
    "reference",
    "types",
    "learned",
    "objects",
    "arrays",
    "let",
    "take",
    "look",
    "functions",
    "functions",
    "one",
    "fundamental",
    "building",
    "blocks",
    "javascript",
    "function",
    "basically",
    "set",
    "statements",
    "performs",
    "task",
    "calculates",
    "value",
    "let",
    "show",
    "couple",
    "examples",
    "going",
    "declare",
    "function",
    "using",
    "function",
    "keyword",
    "need",
    "give",
    "name",
    "let",
    "call",
    "greet",
    "need",
    "add",
    "parentheses",
    "part",
    "syntax",
    "declaring",
    "functions",
    "curly",
    "braces",
    "inside",
    "curly",
    "braces",
    "refer",
    "body",
    "function",
    "add",
    "statements",
    "define",
    "kind",
    "logic",
    "application",
    "example",
    "logic",
    "function",
    "display",
    "message",
    "console",
    "add",
    "console",
    "log",
    "hello",
    "world",
    "note",
    "statement",
    "terminated",
    "semicolon",
    "declaring",
    "function",
    "need",
    "add",
    "semicolon",
    "end",
    "declaring",
    "like",
    "variable",
    "like",
    "okay",
    "function",
    "declaration",
    "right",
    "function",
    "call",
    "function",
    "like",
    "add",
    "name",
    "function",
    "parentheses",
    "semicolon",
    "indicate",
    "statement",
    "save",
    "changes",
    "hello",
    "world",
    "console",
    "pretty",
    "boring",
    "would",
    "let",
    "show",
    "make",
    "interesting",
    "functions",
    "inputs",
    "inputs",
    "change",
    "function",
    "behaves",
    "let",
    "say",
    "instead",
    "displaying",
    "hello",
    "world",
    "want",
    "display",
    "name",
    "person",
    "like",
    "hello",
    "john",
    "add",
    "variable",
    "parentheses",
    "refer",
    "variable",
    "parameter",
    "greet",
    "function",
    "one",
    "parameter",
    "called",
    "name",
    "essentially",
    "name",
    "like",
    "variable",
    "meaningful",
    "inside",
    "dysfunction",
    "inside",
    "function",
    "work",
    "name",
    "variable",
    "accessible",
    "outside",
    "function",
    "name",
    "input",
    "function",
    "instead",
    "displaying",
    "hello",
    "world",
    "display",
    "hello",
    "add",
    "plus",
    "concatenate",
    "two",
    "strings",
    "add",
    "name",
    "calling",
    "great",
    "function",
    "need",
    "pass",
    "value",
    "name",
    "variable",
    "name",
    "parameter",
    "accurately",
    "pass",
    "john",
    "refer",
    "argument",
    "john",
    "argument",
    "greet",
    "function",
    "name",
    "parameter",
    "greet",
    "function",
    "one",
    "things",
    "lot",
    "programmers",
    "know",
    "know",
    "difference",
    "parameter",
    "argument",
    "parameter",
    "time",
    "declaration",
    "argument",
    "actual",
    "value",
    "supply",
    "parameter",
    "okay",
    "let",
    "save",
    "changes",
    "hello",
    "john",
    "reuse",
    "function",
    "different",
    "input",
    "copy",
    "line",
    "change",
    "mary",
    "save",
    "changes",
    "two",
    "different",
    "messages",
    "console",
    "function",
    "multiple",
    "parameters",
    "separate",
    "parameters",
    "using",
    "comma",
    "let",
    "add",
    "another",
    "parameter",
    "like",
    "last",
    "name",
    "change",
    "console",
    "blog",
    "add",
    "space",
    "display",
    "last",
    "name",
    "calling",
    "greet",
    "function",
    "pass",
    "another",
    "argument",
    "last",
    "name",
    "right",
    "let",
    "see",
    "happens",
    "gon",
    "na",
    "save",
    "changes",
    "see",
    "got",
    "hello",
    "john",
    "undefined",
    "told",
    "default",
    "value",
    "variables",
    "javascript",
    "undefined",
    "pass",
    "value",
    "last",
    "name",
    "default",
    "undefined",
    "gon",
    "na",
    "pass",
    "another",
    "argument",
    "separate",
    "using",
    "comma",
    "john",
    "smith",
    "need",
    "second",
    "call",
    "greet",
    "function",
    "save",
    "changes",
    "hello",
    "john",
    "smith",
    "hi",
    "guys",
    "thank",
    "watching",
    "javascript",
    "tutorial",
    "tutorial",
    "part",
    "javascript",
    "course",
    "learn",
    "essential",
    "javascript",
    "features",
    "every",
    "web",
    "mobile",
    "application",
    "developer",
    "must",
    "know",
    "absolute",
    "beginner",
    "experience",
    "javascript",
    "looking",
    "fun",
    "course",
    "teaches",
    "fundamentals",
    "javascript",
    "course",
    "course",
    "also",
    "packed",
    "tons",
    "exercises",
    "help",
    "master",
    "learned",
    "course",
    "fact",
    "many",
    "exercises",
    "questions",
    "come",
    "technical",
    "programming",
    "interviews",
    "pursuing",
    "job",
    "developer",
    "simply",
    "want",
    "understanding",
    "javascript",
    "highly",
    "encourage",
    "enroll",
    "course",
    "limited",
    "time",
    "get",
    "course",
    "discount",
    "using",
    "link",
    "video",
    "description",
    "click",
    "link",
    "find",
    "course",
    "enroll"
  ],
  "keywords": [
    "let",
    "functions",
    "one",
    "javascript",
    "function",
    "value",
    "using",
    "need",
    "name",
    "call",
    "greet",
    "add",
    "parentheses",
    "declaring",
    "inside",
    "refer",
    "display",
    "console",
    "hello",
    "world",
    "semicolon",
    "like",
    "variable",
    "save",
    "changes",
    "change",
    "john",
    "parameter",
    "pass",
    "argument",
    "know",
    "another",
    "last",
    "undefined",
    "course"
  ]
}