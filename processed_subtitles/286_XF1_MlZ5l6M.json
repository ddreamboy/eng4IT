{
  "text": "whether you're a complete beginner just\nlearning how to use event listeners\nor if you've built multiple projects on\nyour own using event listeners all the\ntime\ni can guarantee you there's something in\nthis video you don't already know\n[Music]\nwelcome back to web dev simplified my\nname is kyle and my job is to simplify\nthe web for you\nso you can start building your dream\nproject sooner so if that sounds\ninteresting\nmake sure you subscribe to the channel\nfor more videos just like this\nnow like i mentioned in the intro we're\ngoing to be covering a ton of\ninformation related to event listeners\nwe're going to start at the very basics\nof how you create an event listener and\nhow they actually work\nthen we're going to talk about capturing\nbubbling and delegation\nand how all of that works because it's\nincredibly important to understand\nand most people really don't understand\nit well enough and then finally we're\ngoing to talk about a few minor tidbits\nhere and there\nof bonuses that come with event\nlisteners so this video is going to be\njam packed full of information so make\nsure you stick around till the end to\nget all the information you need\nnow to get started i have a really\nsimple index.html file\nwhere we have a grandparent inside that\nwe have a parent and inside that we have\na child\nyou can see on this right hand side we\nhave this red grandparent blue\nparent and then green child and what\nwe're going to do is set up event\nlisteners for when we click\non these elements so the very first\nthing i want to do is set up a click\nevent listener on the grandparent\nin order to do that all we need to do is\ntake the grandparent element\nso just type in grandparent and we put a\nperiod and as you can see the very first\nthing on this list is called add event\nlistener so just type in add\nevent listener and this is going to take\ntwo to three parameters for now we're\njust going to start with the two\nparameter version because that's the\nmost common\nthe first parameter you put in here is\ngoing to be the type of event that you\nwant to listen for\nin our case we're listening for a click\nevent there are\ntons and tons of events you can listen\nfor and if you want to know what they're\ncalled just google\nyou know mouse down event or mouse over\nevent and it'll give you the exact name\nthat you're looking for if you don't\nalready know it\nthe next thing we need to pass here is a\ncallback and this callback is just a\nfunction that runs\nevery single time that we do whatever\nthe event is in our case click\nand this takes a single parameter which\nis the event object\ngenerally you'll see this called e we're\njust going to use an arrow function for\nour use case\nif you don't already know arrow\nfunctions make sure to check out my\nvideo linked in the cards and\ndescription\nit covers arrow functions in depth so\nnow let's just come in here and do a\nconsole log of\ne to see exactly what this e is so now\nif we just come over here\nclick on the grandparent you're going to\nnotice we get this massive event down\nhere with tons of information inside of\nit\na lot of this information deals with\nwhere your mouse is on the screen\nit deals with where you're holding down\nlike the control key for example there's\na bunch of information inside of here\nbut probably the most important\ninformation that you're going to care\nabout is this thing called target right\nhere\ntarget is essentially the thing that you\nclicked on in our case the grandparent\nso that is the target and target is just\nan element so it has all the normal\nelement related information\ninside of it but generally when you're\ndealing with click event listeners or\nany event listener target is usually the\nmost\nimportant thing that you want to mess\nwith inside of the event listener\nbecause it is the thing\nthat the event happened on so in our\ncase that would be this grandparent\nso if we just console.log e dot target\nand i click on this again you're gonna\nsee it prints out that grandparent\nelement\nnow one thing that's also interesting\nabout event listeners is we'll just\nchange this to print out\ngrandparent one what we can do is add\nmultiple event listeners so if i just\ncopy this\nasa down here and put grandparent two\ninside of it and i click save\nwhen we click on this you're going to\nnotice it's going to run both of the\nevent listeners in the order that we\ndefined them so grandparent one goes\nfirst because that's the first one we\ndefine\nand then grandparent two comes second\nbecause that's the second one that we\ndefine\nas the default behavior of event\nlisteners and this right here is what\nmost people understand when it comes to\nevent listeners they know how to put the\ntype in\nthey know how to create a callback\nfunction and they know that they run in\nthe order that you define them\nthat's about where most people's\nknowledge stops so in the rest of this\nvideo we're gonna go beyond\njust this basic information and talk\nabout everything else that there is to\nknow about event listeners\nlike for example you'll notice when i\nclick on this child it still prints out\nthe grandparent information\nwhy exactly is that well to figure out\nlet's first set up event listeners for\nour parent and our child\nso let's just come in here we're going\nto copy this grandparent one\npaste it down and in here we're just\ngoing to say\noops parent and this will just say\nparent and then we're going to do the\nexact same thing\nfor child so here we'll say child\nand child so now if we click grandparent\nit'll print grandparent\nwhen we click on the parent you're going\nto notice it prints out parent one\nand then grandparent one and now when we\nclick the child it's going to print\nchild one\nparent one and then grandparent one so\nif you're paying attention essentially\nwhat's happening\nis that it's we're clicking on this\nelement but behind this green child\nis also our blue parent and behind our\nblue parent is our red\nyou know grandparent here and even\nfurther behind that is our actual\ndocument itself\nwhich we could set up an event listener\nfor for example document\ndot add event listener click and we're\njust going to come in here\nand we're going to console.log\ndocument1 so now if we click the\ndocument it prints out document we click\nhere it prints out child\nparent grandparent and then document and\nthat's because it's working its way from\nthe closest element in our case this\nchild\nall the way to the furthest away element\nwhich is our document\nand it's running click event listeners\nfor all of them because we technically\nclicked on all of them since the child\nis inside the parent\nand the parent is inside of the\ngrandparent and the grandparent is\ninside of the whole document itself\nthis process of going from the closest\nelement to the furthest away element\nis something called bubbling you also\nmight hear it called event bubbling\nand this is one half of how events work\ninside of javascript\nthe other half of how they work is\ncalled capturing\nso if i just go to this elements tab\nhere i'm going to expand this up so we\ncan really see what we're working with\nget it as large as i can and open up the\ngrandparent parent and the child\nso you're going to see at our very first\nwhen we click on our page\nwe click inside the child right so our\nclick is going to start at the child\nhere it's going to go down to the parent\ngo down to the grandparent and then all\nthe way down to the document as its\nfinal step it's kind of working out of\nits hierarchy\nbecause we clicked on all of them well\nthat is like i said the bubbling phase\nthere's a second phase called the\ncapturing phase and this actually\nhappens first\nthe way the capture works is it works\nfor the thing furthest away and moves up\nso it'll start with the document then\nthe grandparent then the parent then the\nchild\nthen we swap over to the bubble phase\nwhere we go from child\nto parent to grandparent back to\ndocument the way to remember this that i\nlike to think about it\nis when you bubble generally bubbles\nmove upward because they're light\nso you bubble up the tree so you start\ndown here at the lowest\nmost minute element and you bubble\nupwards out of the tree that's how i\nlike to remember capturing versus\nbubbling\nlike i said capture starts on the\noutside moves in and then bubbling\nhappens second\nand goes from the inside out but right\nnow all of our events are bubble events\nbecause as you notice we print child\nthen parent then grandparent\nand document in that order because\nthey're all bubbling so how exactly\ndo we do a capture that is where this\nthird parameter\nto the add event listener comes into\nplay we can pass in here an option\nthese options is just an object where we\npass in different parameters to it so we\ncould\npass capture and set it to true by\ndefault this is set to false\nbut if we set it to true we're saying we\nwant this event to be a capture event\nso now if i save this and i click on the\nchild you're going to notice something\ninteresting it prints grandparent one\nthen child one then parent one then\ndocument one and that's because our\ngrandparent is in the capture phase\nso if we just go to our html here real\nquick what's happening is we start with\nthe capture which means we start at our\ndocument\nthen we move to our grandparent which we\nset up a capture event on so it prints\nout here\nthen we do the capture for our parent\nthere is no capture event so we skip it\ndo the capture for our child again there\nis no capture for our child so we skip\nit\nand then we do the bubble so we bubble\nour child where it prints out child one\ndo the bubble for our parent where it\nprints out parent one bubble for our\ngrandparent\nand since we swapped this to a capture\nevent there is no bubble phase so it\nskips it\nand then we do the bubble for our\ndocument which finally finishes this all\noff\nso this is how the capturing and\nbubbling system works and to really see\nin depth how it works\nwhat i want to do is just copy all of\nthese events so we can have grand\napparent\ncapture and then we're going to have\ngrandparent\nbubble which is just the default so i'm\ngoing to remove that\nand i'm just going to copy this down a\ncouple times so we have\nall of them so we got the parent this is\ngoing to be\nparent capture parent here\nparent bubble then we're going to have\nour child\nand our child capture\nthen we're going to do the bubble for\nour child right here so\nchild bubble and then we can even finish\nthis off by doing the document as well\nso we got document\nbubble and we each copy this\nyou can get the document capture as our\nfinal one\nthe document here document capture\nso now if i click on this child it's\ngoing to go document capture grandparent\ncapture parent capture child capture\nand then it goes back down the tree with\nthe bubbling so child bubble parent\nbubble grandparent bubble document\nbubble\nstarts on the outside captures inward\nthen goes from the inside and bubbles\noutward\nthat's how these events work now this is\nall great that we have the capture and\nbubble phase\nbut sometimes there are things that are\ngoing to happen that prevent the event\nfrom going through the entire capture\nand bubble phases\nand this is what happens when you stop\nthe propagation of an event\nso let's say that when we get to the\nparent capture\nwe want to stop all propagation we want\nto say you know what\nonce the parent gets the event we want\nto stop and have nothing else get it\nso if we find our parent capture here we\ncan take our event object which we\ncalled e\nand call the stop propagation method on\nit\nnow when we click on the child you're\ngoing to notice it goes document capture\ngrandparent capture and parent capture\nand then none of the other capture\nphases or bubble phases occur\nbecause what we did here is we stopped\nthe propagation of our event which means\nit just immediately stops it doesn't do\nany more capturing or\nany more bubbling which is why we only\nget these three being printed out\nif we move this now instead into let's\nsay our child bubble\nwe just paste it in here you're going to\nnotice it goes through the whole capture\nphase\nfor all of our elements and then as soon\nas the child bubble happens it stops\npropagation and none of the other\nbubbling for the parent\ngrandparent or document occur so we can\nuse e dot stop propagation\nto stop our event from propagating\nupwards or downwards through the capture\nor bubble phase\nnow i just want to clean this up a\nlittle bit we're going to get rid of our\ndocument events and we're going to get\nrid of all these capture events as well\nso we're just left with\nour original three events that we set up\nhere so we have grandparent\nparent and child and when we click if we\nget rid of this stop propagation\nyou can see we get child bubble parent\nbubble and grandparent bubble now\nanother thing i want to talk about is a\nreally common thing that you need to do\nwith events and that's when you want to\nrun an event once\nand never run it again you can use this\nthird options parameter here inside of\nyour ad event listener and you can pass\nit a property of once\nset that to true and this event will run\none time and then remove itself\nimmediately\nso if we click you can see we got child\nparent grandparent click again\nwe just get child and grandparent\nbecause parent was set up to run\nonly one time which is really useful if\nyou need an event just to happen one\ntime\nand we can click as many times as we\nwant the parent is never going to show\nup here\nwhat happens if you maybe want an event\nto run three times or four times or five\ntimes or you want to\nstop it on your own and not just after\none event well what you can do instead\nis use the dot remove event listener\nfunction this works just like the add\nevent listener you pass it the type and\nfunction\nand will remove that function from your\nevent listener\nso if we just come down here and create\na function called print\ni and we just say console.log\ni make it capitalize there we go and\nwhen we do the parent here\nwhat we want to do instead is print\ni then we can remove that event listener\nat a later point\nso let's just say set timeout\nand this is just going to run some code\nafter let's say\ntwo seconds so 2000 milliseconds we're\ngoing to do\ndot remove event listener on the click\nevent\nand we want to remove that print high\nfunction\nso now if i run this and i click you can\nsee it prints out high for our parent\nbut if we wait you know two seconds and\nthen click again you can see it has\nremoved that event listener for us\nby using the parent.remove event\nlistener and the reason i created a\nfunction separately for this\nis that if we wrote this code inline\nlike this console.log\ni and we just copy this over\nto here remove this function down here\nyou'll notice this doesn't actually work\nwe can click a bunch of times it prints\nout high\nand now if we wait two seconds it's been\nabout two seconds we click again\nit's still printing out high as you can\nsee here and the reason for that\nis that this function and this function\nover here while they look\nidentical are actually two different\nfunctions because you created two\nanonymous functions\nso they aren't the same which means\nremove event listener can't remove it\nbecause this event is technically a new\nevent and it's different from the\noriginal event we added it to\nthat's why if you want to use remove\nevent listener you need to create a\nvariable or function or something\nthat is the same for both of the add and\nremove event listener\nnow the very last thing that i want to\ntalk about is going to be how you\ndelegate\nevents because this is really important\nwhen it comes to dynamically adding\nelements to your page\nlet's just get rid of all that we're\njust going to select all of the divs on\nour page so document.queryselector\nall or our divs and each one of these\nelements is a div so it's just going to\nselect all of our elements\nand then we just want to loop through\nour divs so we'll say for each div\nall we want to do is add an event\nlistener\noops not console log div dot add event\nlistener\non click and we just want to print out\nfor example\nconsole.log i there we go\nnow when we click on a div it's going to\nprint out height if we click on one of\nthe middle divs it's going to print high\nfor each one of them\nthat works just fine but now let's say\nthat we want to create a new div so\nwe're going to say new\ndiv is equal to document.createelement\nof div and then we're just going to\nappend that to the end of our body so\nbody\ndot append new div let's make sure we\njust give this div some styles so we can\nsee it\nso new div dot style dot\nwidth equals 200 pixels\nnew div dot style dot height equals 200\npixels and we'll just say\nnew div dot background i'm sorry dot\nstyle\ndot background\ncolor we're just going to set this to\npurple\nso now you can see we have this new div\nover here and we click these divs they\nall print out high just like we expect\nwhen i click this div it doesn't print\nhigh the reason for that\nis that up here i selected all of the\ndivs on my page i added event listeners\nto them\nand then after i did that i added a new\ndiv\nand then i you know put it on the page\nbut this one wasn't selected up here\nbecause the selector was ran\nbefore i created this new div this is a\nproblem a lot of people that are new to\njavascript and event listeners run into\nis they think that the new div will have\nthe event listener but it actually\ndoesn't because it was added after the\nevent listeners were added\nwe could come in here and say new div\ndot\nadd event listener per click\nand you know we could come in and make\nsure that we console log high inside of\nhere\nand now it'll work because we added the\nevent listener after the fact\nthis is kind of clunky and it's really a\npain to do this\nso instead what i like to do is event\ndelegation\nsince you know that our events go\nthrough the bubble and capture phase\nwe know that all of our events\neventually end up on the document\nwe could say document.addeventlistener\nfor click\nand inside of here we can just\nconsole.log hi\nnow what this is going to do is just log\nhigh every time we click on our page\nwhether we click on one of our divs or\nif we click on our body or anywhere else\nso clearly it's not quite what we want\nbecause it works everywhere and we only\nwant it to work when we click on a div\nso what we can do is take that event\nproperty called e\nwe can get the target from it we can\ncall a function called matches\nthis just takes a css selector and if\nthe\ntarget matches it it returns true so we\ncould pass div as our selector here and\nthen if\nthis is true that means we've clicked on\na div so let's log out hi\nand now when i click instead of a div\nyou can see we get our high being logged\nout\nbut when i click over outside of a div\nyou notice no high is being printed\nbut our new div will print out hi just\nlike we wanted to\nso this is perfect and does exactly what\nwe want i use this kind of code\nall the time which is why generally i\nlike to turn this into a function\ni like to just call it add global event\nlistener\nwhich takes in a type a selector and\nthen a callback\nand inside of here i just like to add my\nevent listener\nwhoops add the event listener or the\ntype i like to\nthen have my callback here and inside of\nthis\nwhat i do is i just say if\ne.target.matches\noops matches selector\nthen i call the callback with the event\nthis right here\ndoes the exact same thing as what we\nhave up here so i could just say add\nglobal event listener for click\nand i want it to match a div\nthen i can just get rid of all this code\nand now if i run this\nwe get the exact same thing when we\nclick a div it prints out hi and\nanywhere else it doesn't\nand essentially all that i did is i just\nwrapped that code inside of a nice handy\nfunction which i can call anywhere which\ntakes a selector\ni'm sorry a type a selector and then a\ncallback for whenever we click on\nsomething that matches this selector\nsuper handy function i like to include\nit everywhere and that's all there is to\nevent listeners in javascript\nif you enjoyed this video make sure to\ncheck out my complete javascript\nsimplified course linked down below\nit covers literally everything you need\nto know about javascript\nand with that said thank you very much\nfor watching and have a good day\n",
  "words": [
    "whether",
    "complete",
    "beginner",
    "learning",
    "use",
    "event",
    "listeners",
    "built",
    "multiple",
    "projects",
    "using",
    "event",
    "listeners",
    "time",
    "guarantee",
    "something",
    "video",
    "already",
    "know",
    "music",
    "welcome",
    "back",
    "web",
    "dev",
    "simplified",
    "name",
    "kyle",
    "job",
    "simplify",
    "web",
    "start",
    "building",
    "dream",
    "project",
    "sooner",
    "sounds",
    "interesting",
    "make",
    "sure",
    "subscribe",
    "channel",
    "videos",
    "like",
    "like",
    "mentioned",
    "intro",
    "going",
    "covering",
    "ton",
    "information",
    "related",
    "event",
    "listeners",
    "going",
    "start",
    "basics",
    "create",
    "event",
    "listener",
    "actually",
    "work",
    "going",
    "talk",
    "capturing",
    "bubbling",
    "delegation",
    "works",
    "incredibly",
    "important",
    "understand",
    "people",
    "really",
    "understand",
    "well",
    "enough",
    "finally",
    "going",
    "talk",
    "minor",
    "tidbits",
    "bonuses",
    "come",
    "event",
    "listeners",
    "video",
    "going",
    "jam",
    "packed",
    "full",
    "information",
    "make",
    "sure",
    "stick",
    "around",
    "till",
    "end",
    "get",
    "information",
    "need",
    "get",
    "started",
    "really",
    "simple",
    "file",
    "grandparent",
    "inside",
    "parent",
    "inside",
    "child",
    "see",
    "right",
    "hand",
    "side",
    "red",
    "grandparent",
    "blue",
    "parent",
    "green",
    "child",
    "going",
    "set",
    "event",
    "listeners",
    "click",
    "elements",
    "first",
    "thing",
    "want",
    "set",
    "click",
    "event",
    "listener",
    "grandparent",
    "order",
    "need",
    "take",
    "grandparent",
    "element",
    "type",
    "grandparent",
    "put",
    "period",
    "see",
    "first",
    "thing",
    "list",
    "called",
    "add",
    "event",
    "listener",
    "type",
    "add",
    "event",
    "listener",
    "going",
    "take",
    "two",
    "three",
    "parameters",
    "going",
    "start",
    "two",
    "parameter",
    "version",
    "common",
    "first",
    "parameter",
    "put",
    "going",
    "type",
    "event",
    "want",
    "listen",
    "case",
    "listening",
    "click",
    "event",
    "tons",
    "tons",
    "events",
    "listen",
    "want",
    "know",
    "called",
    "google",
    "know",
    "mouse",
    "event",
    "mouse",
    "event",
    "give",
    "exact",
    "name",
    "looking",
    "already",
    "know",
    "next",
    "thing",
    "need",
    "pass",
    "callback",
    "callback",
    "function",
    "runs",
    "every",
    "single",
    "time",
    "whatever",
    "event",
    "case",
    "click",
    "takes",
    "single",
    "parameter",
    "event",
    "object",
    "generally",
    "see",
    "called",
    "e",
    "going",
    "use",
    "arrow",
    "function",
    "use",
    "case",
    "already",
    "know",
    "arrow",
    "functions",
    "make",
    "sure",
    "check",
    "video",
    "linked",
    "cards",
    "description",
    "covers",
    "arrow",
    "functions",
    "depth",
    "let",
    "come",
    "console",
    "log",
    "e",
    "see",
    "exactly",
    "e",
    "come",
    "click",
    "grandparent",
    "going",
    "notice",
    "get",
    "massive",
    "event",
    "tons",
    "information",
    "inside",
    "lot",
    "information",
    "deals",
    "mouse",
    "screen",
    "deals",
    "holding",
    "like",
    "control",
    "key",
    "example",
    "bunch",
    "information",
    "inside",
    "probably",
    "important",
    "information",
    "going",
    "care",
    "thing",
    "called",
    "target",
    "right",
    "target",
    "essentially",
    "thing",
    "clicked",
    "case",
    "grandparent",
    "target",
    "target",
    "element",
    "normal",
    "element",
    "related",
    "information",
    "inside",
    "generally",
    "dealing",
    "click",
    "event",
    "listeners",
    "event",
    "listener",
    "target",
    "usually",
    "important",
    "thing",
    "want",
    "mess",
    "inside",
    "event",
    "listener",
    "thing",
    "event",
    "happened",
    "case",
    "would",
    "grandparent",
    "e",
    "dot",
    "target",
    "click",
    "gon",
    "na",
    "see",
    "prints",
    "grandparent",
    "element",
    "one",
    "thing",
    "also",
    "interesting",
    "event",
    "listeners",
    "change",
    "print",
    "grandparent",
    "one",
    "add",
    "multiple",
    "event",
    "listeners",
    "copy",
    "asa",
    "put",
    "grandparent",
    "two",
    "inside",
    "click",
    "save",
    "click",
    "going",
    "notice",
    "going",
    "run",
    "event",
    "listeners",
    "order",
    "defined",
    "grandparent",
    "one",
    "goes",
    "first",
    "first",
    "one",
    "define",
    "grandparent",
    "two",
    "comes",
    "second",
    "second",
    "one",
    "define",
    "default",
    "behavior",
    "event",
    "listeners",
    "right",
    "people",
    "understand",
    "comes",
    "event",
    "listeners",
    "know",
    "put",
    "type",
    "know",
    "create",
    "callback",
    "function",
    "know",
    "run",
    "order",
    "define",
    "people",
    "knowledge",
    "stops",
    "rest",
    "video",
    "gon",
    "na",
    "go",
    "beyond",
    "basic",
    "information",
    "talk",
    "everything",
    "else",
    "know",
    "event",
    "listeners",
    "like",
    "example",
    "notice",
    "click",
    "child",
    "still",
    "prints",
    "grandparent",
    "information",
    "exactly",
    "well",
    "figure",
    "let",
    "first",
    "set",
    "event",
    "listeners",
    "parent",
    "child",
    "let",
    "come",
    "going",
    "copy",
    "grandparent",
    "one",
    "paste",
    "going",
    "say",
    "oops",
    "parent",
    "say",
    "parent",
    "going",
    "exact",
    "thing",
    "child",
    "say",
    "child",
    "child",
    "click",
    "grandparent",
    "print",
    "grandparent",
    "click",
    "parent",
    "going",
    "notice",
    "prints",
    "parent",
    "one",
    "grandparent",
    "one",
    "click",
    "child",
    "going",
    "print",
    "child",
    "one",
    "parent",
    "one",
    "grandparent",
    "one",
    "paying",
    "attention",
    "essentially",
    "happening",
    "clicking",
    "element",
    "behind",
    "green",
    "child",
    "also",
    "blue",
    "parent",
    "behind",
    "blue",
    "parent",
    "red",
    "know",
    "grandparent",
    "even",
    "behind",
    "actual",
    "document",
    "could",
    "set",
    "event",
    "listener",
    "example",
    "document",
    "dot",
    "add",
    "event",
    "listener",
    "click",
    "going",
    "come",
    "going",
    "document1",
    "click",
    "document",
    "prints",
    "document",
    "click",
    "prints",
    "child",
    "parent",
    "grandparent",
    "document",
    "working",
    "way",
    "closest",
    "element",
    "case",
    "child",
    "way",
    "furthest",
    "away",
    "element",
    "document",
    "running",
    "click",
    "event",
    "listeners",
    "technically",
    "clicked",
    "since",
    "child",
    "inside",
    "parent",
    "parent",
    "inside",
    "grandparent",
    "grandparent",
    "inside",
    "whole",
    "document",
    "process",
    "going",
    "closest",
    "element",
    "furthest",
    "away",
    "element",
    "something",
    "called",
    "bubbling",
    "also",
    "might",
    "hear",
    "called",
    "event",
    "bubbling",
    "one",
    "half",
    "events",
    "work",
    "inside",
    "javascript",
    "half",
    "work",
    "called",
    "capturing",
    "go",
    "elements",
    "tab",
    "going",
    "expand",
    "really",
    "see",
    "working",
    "get",
    "large",
    "open",
    "grandparent",
    "parent",
    "child",
    "going",
    "see",
    "first",
    "click",
    "page",
    "click",
    "inside",
    "child",
    "right",
    "click",
    "going",
    "start",
    "child",
    "going",
    "go",
    "parent",
    "go",
    "grandparent",
    "way",
    "document",
    "final",
    "step",
    "kind",
    "working",
    "hierarchy",
    "clicked",
    "well",
    "like",
    "said",
    "bubbling",
    "phase",
    "second",
    "phase",
    "called",
    "capturing",
    "phase",
    "actually",
    "happens",
    "first",
    "way",
    "capture",
    "works",
    "works",
    "thing",
    "furthest",
    "away",
    "moves",
    "start",
    "document",
    "grandparent",
    "parent",
    "child",
    "swap",
    "bubble",
    "phase",
    "go",
    "child",
    "parent",
    "grandparent",
    "back",
    "document",
    "way",
    "remember",
    "like",
    "think",
    "bubble",
    "generally",
    "bubbles",
    "move",
    "upward",
    "light",
    "bubble",
    "tree",
    "start",
    "lowest",
    "minute",
    "element",
    "bubble",
    "upwards",
    "tree",
    "like",
    "remember",
    "capturing",
    "versus",
    "bubbling",
    "like",
    "said",
    "capture",
    "starts",
    "outside",
    "moves",
    "bubbling",
    "happens",
    "second",
    "goes",
    "inside",
    "right",
    "events",
    "bubble",
    "events",
    "notice",
    "print",
    "child",
    "parent",
    "grandparent",
    "document",
    "order",
    "bubbling",
    "exactly",
    "capture",
    "third",
    "parameter",
    "add",
    "event",
    "listener",
    "comes",
    "play",
    "pass",
    "option",
    "options",
    "object",
    "pass",
    "different",
    "parameters",
    "could",
    "pass",
    "capture",
    "set",
    "true",
    "default",
    "set",
    "false",
    "set",
    "true",
    "saying",
    "want",
    "event",
    "capture",
    "event",
    "save",
    "click",
    "child",
    "going",
    "notice",
    "something",
    "interesting",
    "prints",
    "grandparent",
    "one",
    "child",
    "one",
    "parent",
    "one",
    "document",
    "one",
    "grandparent",
    "capture",
    "phase",
    "go",
    "html",
    "real",
    "quick",
    "happening",
    "start",
    "capture",
    "means",
    "start",
    "document",
    "move",
    "grandparent",
    "set",
    "capture",
    "event",
    "prints",
    "capture",
    "parent",
    "capture",
    "event",
    "skip",
    "capture",
    "child",
    "capture",
    "child",
    "skip",
    "bubble",
    "bubble",
    "child",
    "prints",
    "child",
    "one",
    "bubble",
    "parent",
    "prints",
    "parent",
    "one",
    "bubble",
    "grandparent",
    "since",
    "swapped",
    "capture",
    "event",
    "bubble",
    "phase",
    "skips",
    "bubble",
    "document",
    "finally",
    "finishes",
    "capturing",
    "bubbling",
    "system",
    "works",
    "really",
    "see",
    "depth",
    "works",
    "want",
    "copy",
    "events",
    "grand",
    "apparent",
    "capture",
    "going",
    "grandparent",
    "bubble",
    "default",
    "going",
    "remove",
    "going",
    "copy",
    "couple",
    "times",
    "got",
    "parent",
    "going",
    "parent",
    "capture",
    "parent",
    "parent",
    "bubble",
    "going",
    "child",
    "child",
    "capture",
    "going",
    "bubble",
    "child",
    "right",
    "child",
    "bubble",
    "even",
    "finish",
    "document",
    "well",
    "got",
    "document",
    "bubble",
    "copy",
    "get",
    "document",
    "capture",
    "final",
    "one",
    "document",
    "document",
    "capture",
    "click",
    "child",
    "going",
    "go",
    "document",
    "capture",
    "grandparent",
    "capture",
    "parent",
    "capture",
    "child",
    "capture",
    "goes",
    "back",
    "tree",
    "bubbling",
    "child",
    "bubble",
    "parent",
    "bubble",
    "grandparent",
    "bubble",
    "document",
    "bubble",
    "starts",
    "outside",
    "captures",
    "inward",
    "goes",
    "inside",
    "bubbles",
    "outward",
    "events",
    "work",
    "great",
    "capture",
    "bubble",
    "phase",
    "sometimes",
    "things",
    "going",
    "happen",
    "prevent",
    "event",
    "going",
    "entire",
    "capture",
    "bubble",
    "phases",
    "happens",
    "stop",
    "propagation",
    "event",
    "let",
    "say",
    "get",
    "parent",
    "capture",
    "want",
    "stop",
    "propagation",
    "want",
    "say",
    "know",
    "parent",
    "gets",
    "event",
    "want",
    "stop",
    "nothing",
    "else",
    "get",
    "find",
    "parent",
    "capture",
    "take",
    "event",
    "object",
    "called",
    "e",
    "call",
    "stop",
    "propagation",
    "method",
    "click",
    "child",
    "going",
    "notice",
    "goes",
    "document",
    "capture",
    "grandparent",
    "capture",
    "parent",
    "capture",
    "none",
    "capture",
    "phases",
    "bubble",
    "phases",
    "occur",
    "stopped",
    "propagation",
    "event",
    "means",
    "immediately",
    "stops",
    "capturing",
    "bubbling",
    "get",
    "three",
    "printed",
    "move",
    "instead",
    "let",
    "say",
    "child",
    "bubble",
    "paste",
    "going",
    "notice",
    "goes",
    "whole",
    "capture",
    "phase",
    "elements",
    "soon",
    "child",
    "bubble",
    "happens",
    "stops",
    "propagation",
    "none",
    "bubbling",
    "parent",
    "grandparent",
    "document",
    "occur",
    "use",
    "e",
    "dot",
    "stop",
    "propagation",
    "stop",
    "event",
    "propagating",
    "upwards",
    "downwards",
    "capture",
    "bubble",
    "phase",
    "want",
    "clean",
    "little",
    "bit",
    "going",
    "get",
    "rid",
    "document",
    "events",
    "going",
    "get",
    "rid",
    "capture",
    "events",
    "well",
    "left",
    "original",
    "three",
    "events",
    "set",
    "grandparent",
    "parent",
    "child",
    "click",
    "get",
    "rid",
    "stop",
    "propagation",
    "see",
    "get",
    "child",
    "bubble",
    "parent",
    "bubble",
    "grandparent",
    "bubble",
    "another",
    "thing",
    "want",
    "talk",
    "really",
    "common",
    "thing",
    "need",
    "events",
    "want",
    "run",
    "event",
    "never",
    "run",
    "use",
    "third",
    "options",
    "parameter",
    "inside",
    "ad",
    "event",
    "listener",
    "pass",
    "property",
    "set",
    "true",
    "event",
    "run",
    "one",
    "time",
    "remove",
    "immediately",
    "click",
    "see",
    "got",
    "child",
    "parent",
    "grandparent",
    "click",
    "get",
    "child",
    "grandparent",
    "parent",
    "set",
    "run",
    "one",
    "time",
    "really",
    "useful",
    "need",
    "event",
    "happen",
    "one",
    "time",
    "click",
    "many",
    "times",
    "want",
    "parent",
    "never",
    "going",
    "show",
    "happens",
    "maybe",
    "want",
    "event",
    "run",
    "three",
    "times",
    "four",
    "times",
    "five",
    "times",
    "want",
    "stop",
    "one",
    "event",
    "well",
    "instead",
    "use",
    "dot",
    "remove",
    "event",
    "listener",
    "function",
    "works",
    "like",
    "add",
    "event",
    "listener",
    "pass",
    "type",
    "function",
    "remove",
    "function",
    "event",
    "listener",
    "come",
    "create",
    "function",
    "called",
    "print",
    "say",
    "make",
    "capitalize",
    "go",
    "parent",
    "want",
    "instead",
    "print",
    "remove",
    "event",
    "listener",
    "later",
    "point",
    "let",
    "say",
    "set",
    "timeout",
    "going",
    "run",
    "code",
    "let",
    "say",
    "two",
    "seconds",
    "2000",
    "milliseconds",
    "going",
    "dot",
    "remove",
    "event",
    "listener",
    "click",
    "event",
    "want",
    "remove",
    "print",
    "high",
    "function",
    "run",
    "click",
    "see",
    "prints",
    "high",
    "parent",
    "wait",
    "know",
    "two",
    "seconds",
    "click",
    "see",
    "removed",
    "event",
    "listener",
    "us",
    "using",
    "event",
    "listener",
    "reason",
    "created",
    "function",
    "separately",
    "wrote",
    "code",
    "inline",
    "like",
    "copy",
    "remove",
    "function",
    "notice",
    "actually",
    "work",
    "click",
    "bunch",
    "times",
    "prints",
    "high",
    "wait",
    "two",
    "seconds",
    "two",
    "seconds",
    "click",
    "still",
    "printing",
    "high",
    "see",
    "reason",
    "function",
    "function",
    "look",
    "identical",
    "actually",
    "two",
    "different",
    "functions",
    "created",
    "two",
    "anonymous",
    "functions",
    "means",
    "remove",
    "event",
    "listener",
    "ca",
    "remove",
    "event",
    "technically",
    "new",
    "event",
    "different",
    "original",
    "event",
    "added",
    "want",
    "use",
    "remove",
    "event",
    "listener",
    "need",
    "create",
    "variable",
    "function",
    "something",
    "add",
    "remove",
    "event",
    "listener",
    "last",
    "thing",
    "want",
    "talk",
    "going",
    "delegate",
    "events",
    "really",
    "important",
    "comes",
    "dynamically",
    "adding",
    "elements",
    "page",
    "let",
    "get",
    "rid",
    "going",
    "select",
    "divs",
    "page",
    "divs",
    "one",
    "elements",
    "div",
    "going",
    "select",
    "elements",
    "want",
    "loop",
    "divs",
    "say",
    "div",
    "want",
    "add",
    "event",
    "listener",
    "oops",
    "console",
    "log",
    "div",
    "dot",
    "add",
    "event",
    "listener",
    "click",
    "want",
    "print",
    "example",
    "go",
    "click",
    "div",
    "going",
    "print",
    "height",
    "click",
    "one",
    "middle",
    "divs",
    "going",
    "print",
    "high",
    "one",
    "works",
    "fine",
    "let",
    "say",
    "want",
    "create",
    "new",
    "div",
    "going",
    "say",
    "new",
    "div",
    "equal",
    "div",
    "going",
    "append",
    "end",
    "body",
    "body",
    "dot",
    "append",
    "new",
    "div",
    "let",
    "make",
    "sure",
    "give",
    "div",
    "styles",
    "see",
    "new",
    "div",
    "dot",
    "style",
    "dot",
    "width",
    "equals",
    "200",
    "pixels",
    "new",
    "div",
    "dot",
    "style",
    "dot",
    "height",
    "equals",
    "200",
    "pixels",
    "say",
    "new",
    "div",
    "dot",
    "background",
    "sorry",
    "dot",
    "style",
    "dot",
    "background",
    "color",
    "going",
    "set",
    "purple",
    "see",
    "new",
    "div",
    "click",
    "divs",
    "print",
    "high",
    "like",
    "expect",
    "click",
    "div",
    "print",
    "high",
    "reason",
    "selected",
    "divs",
    "page",
    "added",
    "event",
    "listeners",
    "added",
    "new",
    "div",
    "know",
    "put",
    "page",
    "one",
    "selected",
    "selector",
    "ran",
    "created",
    "new",
    "div",
    "problem",
    "lot",
    "people",
    "new",
    "javascript",
    "event",
    "listeners",
    "run",
    "think",
    "new",
    "div",
    "event",
    "listener",
    "actually",
    "added",
    "event",
    "listeners",
    "added",
    "could",
    "come",
    "say",
    "new",
    "div",
    "dot",
    "add",
    "event",
    "listener",
    "per",
    "click",
    "know",
    "could",
    "come",
    "make",
    "sure",
    "console",
    "log",
    "high",
    "inside",
    "work",
    "added",
    "event",
    "listener",
    "fact",
    "kind",
    "clunky",
    "really",
    "pain",
    "instead",
    "like",
    "event",
    "delegation",
    "since",
    "know",
    "events",
    "go",
    "bubble",
    "capture",
    "phase",
    "know",
    "events",
    "eventually",
    "end",
    "document",
    "could",
    "say",
    "click",
    "inside",
    "hi",
    "going",
    "log",
    "high",
    "every",
    "time",
    "click",
    "page",
    "whether",
    "click",
    "one",
    "divs",
    "click",
    "body",
    "anywhere",
    "else",
    "clearly",
    "quite",
    "want",
    "works",
    "everywhere",
    "want",
    "work",
    "click",
    "div",
    "take",
    "event",
    "property",
    "called",
    "e",
    "get",
    "target",
    "call",
    "function",
    "called",
    "matches",
    "takes",
    "css",
    "selector",
    "target",
    "matches",
    "returns",
    "true",
    "could",
    "pass",
    "div",
    "selector",
    "true",
    "means",
    "clicked",
    "div",
    "let",
    "log",
    "hi",
    "click",
    "instead",
    "div",
    "see",
    "get",
    "high",
    "logged",
    "click",
    "outside",
    "div",
    "notice",
    "high",
    "printed",
    "new",
    "div",
    "print",
    "hi",
    "like",
    "wanted",
    "perfect",
    "exactly",
    "want",
    "use",
    "kind",
    "code",
    "time",
    "generally",
    "like",
    "turn",
    "function",
    "like",
    "call",
    "add",
    "global",
    "event",
    "listener",
    "takes",
    "type",
    "selector",
    "callback",
    "inside",
    "like",
    "add",
    "event",
    "listener",
    "whoops",
    "add",
    "event",
    "listener",
    "type",
    "like",
    "callback",
    "inside",
    "say",
    "oops",
    "matches",
    "selector",
    "call",
    "callback",
    "event",
    "right",
    "exact",
    "thing",
    "could",
    "say",
    "add",
    "global",
    "event",
    "listener",
    "click",
    "want",
    "match",
    "div",
    "get",
    "rid",
    "code",
    "run",
    "get",
    "exact",
    "thing",
    "click",
    "div",
    "prints",
    "hi",
    "anywhere",
    "else",
    "essentially",
    "wrapped",
    "code",
    "inside",
    "nice",
    "handy",
    "function",
    "call",
    "anywhere",
    "takes",
    "selector",
    "sorry",
    "type",
    "selector",
    "callback",
    "whenever",
    "click",
    "something",
    "matches",
    "selector",
    "super",
    "handy",
    "function",
    "like",
    "include",
    "everywhere",
    "event",
    "listeners",
    "javascript",
    "enjoyed",
    "video",
    "make",
    "sure",
    "check",
    "complete",
    "javascript",
    "simplified",
    "course",
    "linked",
    "covers",
    "literally",
    "everything",
    "need",
    "know",
    "javascript",
    "said",
    "thank",
    "much",
    "watching",
    "good",
    "day"
  ],
  "keywords": [
    "use",
    "event",
    "listeners",
    "time",
    "something",
    "video",
    "know",
    "start",
    "make",
    "sure",
    "like",
    "going",
    "information",
    "create",
    "listener",
    "actually",
    "work",
    "talk",
    "capturing",
    "bubbling",
    "works",
    "really",
    "well",
    "come",
    "get",
    "need",
    "grandparent",
    "inside",
    "parent",
    "child",
    "see",
    "right",
    "set",
    "click",
    "elements",
    "first",
    "thing",
    "want",
    "element",
    "type",
    "put",
    "called",
    "add",
    "two",
    "parameter",
    "case",
    "events",
    "pass",
    "callback",
    "function",
    "e",
    "let",
    "log",
    "notice",
    "target",
    "dot",
    "prints",
    "one",
    "print",
    "copy",
    "run",
    "goes",
    "go",
    "say",
    "document",
    "could",
    "way",
    "javascript",
    "page",
    "phase",
    "happens",
    "capture",
    "bubble",
    "true",
    "remove",
    "times",
    "stop",
    "propagation",
    "call",
    "instead",
    "rid",
    "code",
    "high",
    "new",
    "added",
    "divs",
    "div",
    "selector"
  ]
}