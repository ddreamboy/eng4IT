{
  "text": "Alex has just completed his graduation\nfrom Stanford University\none fine day he receives a mail from\nStar Trek Technologies for an interview\nfor the designation of a software\nengineer as referred by the University\nAlex was really happy and excited about\nthis and starts preparing for his\ninterview next week while he was\npreparing Alex came across the term\ndowntime\nAlex has no idea what is a downtime\nhe decided to seek help from his uncle\nJohn a software engineer\nJohn explained that downtime is a\nspecific time frame allocated to deploy\nor update changes for a software product\nin a real-time environment\nand this happens because most of the\nsoftwares we use today are developed\nusing the waterfall model\nfor example\nCisco one of the popular leaders in it\nand networking globally is using agile\nmethodology for their subscription\nbilling platform SBP as it was\noriginally developed using the waterfall\nmodel\nafter adopting the agile methodology\nCisco's product improved its overall\nefficiency where defects were reduced by\n40 percent compared to the previous\nreleases and effect removal efficiency\nincreased by 14 percent\nupon explaining what downtime is John\nfurther added that downtime is a small\npart of the waterfall model\nit is the traditional way of developing\nsoftwares using a software development\nlife cycle where the whole product is\ntreated as one single unit and the\ndevelopment of one phase starts only\nafter the completion of the previous\nphase adding new features or updating\nthe existing feature in a waterfall\nmodel based product needs a specific\ntime frame known as downtime to avoid\ndisturbance in the workflow of an\norganization where applying changes in a\nwaterfall-based product might produce\nirrelevant results or product failure\nthe waterfall model is the earliest or\nthe traditional model used for software\ndevelopment where the output of one\nphase acts as the input for the\npreceding phase consisting of a series\nof steps where each phase has specific\ndeliverables that act as the input for\nthe next phase as it avoids overlapping\na basis as these phases are dependent on\neach other\nthis method is simple and easy to\nunderstand where prerequisites are\npre-known documented earlier and\nTechnology remains static where there is\nno need for ambiguous requirements due\nto the delay in software delivery in\ncontrast the final version is available\nonly after completing the entire\nsoftware lifecycle process with any\ndeviations if available\nchanges in the waterfall model contain\nhigh risk as changes include a new\nrevised version of the entire software\nrunning the entire series of steps again\nand again\nfor example a tap and pay machine where\nthe machine first validates whether the\ncustomer's account is funded with\nsufficient funds or not and then\ninitiates the transaction for money\ntransfer unless the validation is\nprocessed the transaction cannot be\ninitiated\nAlex was curious and asked Uncle John is\nthere any way to overcome the drawbacks\nof the waterfall model\nJohn replies yes agile methodology was\nintroduced to overcome the problems\nfaced in the waterfall model where agile\nbased products are developed by breaking\nthe entire product process into\nmicroservices or phases which is faster\nto execute and deploy changes on the go\nthere is no need to worry about other or\nprevious tasks while working on one\nparticular phase avoiding product\nfailure\nagile based products don't require any\nparticular time frame downtime to deploy\nchanges unlike the waterfall model where\nthe whole product is treated as one\nsingle unit and each process is\ndependent on the preceding processes\nwhere deploying changes leads to\ndowntime how agile products are\ndeveloped agile based products are\ndeveloped using the agile life cycle at\nfirst the developed product is\nimplemented in an actual working\nenvironment for reviews from clients and\nstakeholders to check its deliverables\nand functionality\nafter client reviews the official\nproduct is launched in a real-time\nworking environment where agile\nmethodology focuses on satisfying the\nconsumer needs by efficiently utilizing\nthe resources and avoiding additional\nrisks or deviations in the product for\nexample providing a trial beta version\nof the software for the end user to\nexperience the software towards its\ndeliverables and results will be helpful\nin refining and reviewing the product\nlike Adobe Photoshop Adobe Illustrator\nEtc\nafter understanding all about agile\nmethodology\nAlex asks Uncle John for companies\nimplementing agile in their workspace\nnowadays\nJohn replies yes\ncompanies are moving towards agile\nmethodology due to its flexibility and\nadvantages over traditional systems by\nadopting agile for their Sony\ninteractive environment Sony noticed a\nmajor difference where there was a\nreduced planning Time by 28 with their\nframework and downtime was reduced to\nthe maximum which made the company save\n30 million dollars a year so here's a\nquestion for you what makes agile\ndifferent from waterfall Model A it is\ndependent on microservices B Agile\nconsumes more time\nC the process is broken down into\nseveral phases d none of the above\nplease give it a thought and post your\nanswers in the comments section below\nthree lucky winners will receive Amazon\ngift vouchers\nagile methodology aims to meet the\nconsumer's requirements to the maximum\nin deploying changes in a rapidly\ndeveloping environment where agile\nManifesto principles brings an\nInnovative set of rules and protocols to\nhelp developers overcome the challenges\nfaced in the traditional practices\nwaterfall model making agile flexible\nand efficient we hope you enjoyed this\nvideo if you did a thumbs up would be\nreally appreciated here's a reminder to\nsubscribe to our Channel and click on\nthe Bell icon for more on the latest\nTechnologies and Trends thank you for\nwatching and stay tuned for more from\nSimply learn\n[Music]\n",
  "words": [
    "alex",
    "completed",
    "graduation",
    "stanford",
    "university",
    "one",
    "fine",
    "day",
    "receives",
    "mail",
    "star",
    "trek",
    "technologies",
    "interview",
    "designation",
    "software",
    "engineer",
    "referred",
    "university",
    "alex",
    "really",
    "happy",
    "excited",
    "starts",
    "preparing",
    "interview",
    "next",
    "week",
    "preparing",
    "alex",
    "came",
    "across",
    "term",
    "downtime",
    "alex",
    "idea",
    "downtime",
    "decided",
    "seek",
    "help",
    "uncle",
    "john",
    "software",
    "engineer",
    "john",
    "explained",
    "downtime",
    "specific",
    "time",
    "frame",
    "allocated",
    "deploy",
    "update",
    "changes",
    "software",
    "product",
    "environment",
    "happens",
    "softwares",
    "use",
    "today",
    "developed",
    "using",
    "waterfall",
    "model",
    "example",
    "cisco",
    "one",
    "popular",
    "leaders",
    "networking",
    "globally",
    "using",
    "agile",
    "methodology",
    "subscription",
    "billing",
    "platform",
    "sbp",
    "originally",
    "developed",
    "using",
    "waterfall",
    "model",
    "adopting",
    "agile",
    "methodology",
    "cisco",
    "product",
    "improved",
    "overall",
    "efficiency",
    "defects",
    "reduced",
    "40",
    "percent",
    "compared",
    "previous",
    "releases",
    "effect",
    "removal",
    "efficiency",
    "increased",
    "14",
    "percent",
    "upon",
    "explaining",
    "downtime",
    "john",
    "added",
    "downtime",
    "small",
    "part",
    "waterfall",
    "model",
    "traditional",
    "way",
    "developing",
    "softwares",
    "using",
    "software",
    "development",
    "life",
    "cycle",
    "whole",
    "product",
    "treated",
    "one",
    "single",
    "unit",
    "development",
    "one",
    "phase",
    "starts",
    "completion",
    "previous",
    "phase",
    "adding",
    "new",
    "features",
    "updating",
    "existing",
    "feature",
    "waterfall",
    "model",
    "based",
    "product",
    "needs",
    "specific",
    "time",
    "frame",
    "known",
    "downtime",
    "avoid",
    "disturbance",
    "workflow",
    "organization",
    "applying",
    "changes",
    "product",
    "might",
    "produce",
    "irrelevant",
    "results",
    "product",
    "failure",
    "waterfall",
    "model",
    "earliest",
    "traditional",
    "model",
    "used",
    "software",
    "development",
    "output",
    "one",
    "phase",
    "acts",
    "input",
    "preceding",
    "phase",
    "consisting",
    "series",
    "steps",
    "phase",
    "specific",
    "deliverables",
    "act",
    "input",
    "next",
    "phase",
    "avoids",
    "overlapping",
    "basis",
    "phases",
    "dependent",
    "method",
    "simple",
    "easy",
    "understand",
    "prerequisites",
    "documented",
    "earlier",
    "technology",
    "remains",
    "static",
    "need",
    "ambiguous",
    "requirements",
    "due",
    "delay",
    "software",
    "delivery",
    "contrast",
    "final",
    "version",
    "available",
    "completing",
    "entire",
    "software",
    "lifecycle",
    "process",
    "deviations",
    "available",
    "changes",
    "waterfall",
    "model",
    "contain",
    "high",
    "risk",
    "changes",
    "include",
    "new",
    "revised",
    "version",
    "entire",
    "software",
    "running",
    "entire",
    "series",
    "steps",
    "example",
    "tap",
    "pay",
    "machine",
    "machine",
    "first",
    "validates",
    "whether",
    "customer",
    "account",
    "funded",
    "sufficient",
    "funds",
    "initiates",
    "transaction",
    "money",
    "transfer",
    "unless",
    "validation",
    "processed",
    "transaction",
    "initiated",
    "alex",
    "curious",
    "asked",
    "uncle",
    "john",
    "way",
    "overcome",
    "drawbacks",
    "waterfall",
    "model",
    "john",
    "replies",
    "yes",
    "agile",
    "methodology",
    "introduced",
    "overcome",
    "problems",
    "faced",
    "waterfall",
    "model",
    "agile",
    "based",
    "products",
    "developed",
    "breaking",
    "entire",
    "product",
    "process",
    "microservices",
    "phases",
    "faster",
    "execute",
    "deploy",
    "changes",
    "go",
    "need",
    "worry",
    "previous",
    "tasks",
    "working",
    "one",
    "particular",
    "phase",
    "avoiding",
    "product",
    "failure",
    "agile",
    "based",
    "products",
    "require",
    "particular",
    "time",
    "frame",
    "downtime",
    "deploy",
    "changes",
    "unlike",
    "waterfall",
    "model",
    "whole",
    "product",
    "treated",
    "one",
    "single",
    "unit",
    "process",
    "dependent",
    "preceding",
    "processes",
    "deploying",
    "changes",
    "leads",
    "downtime",
    "agile",
    "products",
    "developed",
    "agile",
    "based",
    "products",
    "developed",
    "using",
    "agile",
    "life",
    "cycle",
    "first",
    "developed",
    "product",
    "implemented",
    "actual",
    "working",
    "environment",
    "reviews",
    "clients",
    "stakeholders",
    "check",
    "deliverables",
    "functionality",
    "client",
    "reviews",
    "official",
    "product",
    "launched",
    "working",
    "environment",
    "agile",
    "methodology",
    "focuses",
    "satisfying",
    "consumer",
    "needs",
    "efficiently",
    "utilizing",
    "resources",
    "avoiding",
    "additional",
    "risks",
    "deviations",
    "product",
    "example",
    "providing",
    "trial",
    "beta",
    "version",
    "software",
    "end",
    "user",
    "experience",
    "software",
    "towards",
    "deliverables",
    "results",
    "helpful",
    "refining",
    "reviewing",
    "product",
    "like",
    "adobe",
    "photoshop",
    "adobe",
    "illustrator",
    "etc",
    "understanding",
    "agile",
    "methodology",
    "alex",
    "asks",
    "uncle",
    "john",
    "companies",
    "implementing",
    "agile",
    "workspace",
    "nowadays",
    "john",
    "replies",
    "yes",
    "companies",
    "moving",
    "towards",
    "agile",
    "methodology",
    "due",
    "flexibility",
    "advantages",
    "traditional",
    "systems",
    "adopting",
    "agile",
    "sony",
    "interactive",
    "environment",
    "sony",
    "noticed",
    "major",
    "difference",
    "reduced",
    "planning",
    "time",
    "28",
    "framework",
    "downtime",
    "reduced",
    "maximum",
    "made",
    "company",
    "save",
    "30",
    "million",
    "dollars",
    "year",
    "question",
    "makes",
    "agile",
    "different",
    "waterfall",
    "model",
    "dependent",
    "microservices",
    "b",
    "agile",
    "consumes",
    "time",
    "c",
    "process",
    "broken",
    "several",
    "phases",
    "none",
    "please",
    "give",
    "thought",
    "post",
    "answers",
    "comments",
    "section",
    "three",
    "lucky",
    "winners",
    "receive",
    "amazon",
    "gift",
    "vouchers",
    "agile",
    "methodology",
    "aims",
    "meet",
    "consumer",
    "requirements",
    "maximum",
    "deploying",
    "changes",
    "rapidly",
    "developing",
    "environment",
    "agile",
    "manifesto",
    "principles",
    "brings",
    "innovative",
    "set",
    "rules",
    "protocols",
    "help",
    "developers",
    "overcome",
    "challenges",
    "faced",
    "traditional",
    "practices",
    "waterfall",
    "model",
    "making",
    "agile",
    "flexible",
    "efficient",
    "hope",
    "enjoyed",
    "video",
    "thumbs",
    "would",
    "really",
    "appreciated",
    "reminder",
    "subscribe",
    "channel",
    "click",
    "bell",
    "icon",
    "latest",
    "technologies",
    "trends",
    "thank",
    "watching",
    "stay",
    "tuned",
    "simply",
    "learn",
    "music"
  ],
  "keywords": [
    "alex",
    "university",
    "one",
    "technologies",
    "interview",
    "software",
    "engineer",
    "really",
    "starts",
    "preparing",
    "next",
    "downtime",
    "help",
    "uncle",
    "john",
    "specific",
    "time",
    "frame",
    "deploy",
    "changes",
    "product",
    "environment",
    "softwares",
    "developed",
    "using",
    "waterfall",
    "model",
    "example",
    "cisco",
    "agile",
    "methodology",
    "adopting",
    "efficiency",
    "reduced",
    "percent",
    "previous",
    "traditional",
    "way",
    "developing",
    "development",
    "life",
    "cycle",
    "whole",
    "treated",
    "single",
    "unit",
    "phase",
    "new",
    "based",
    "needs",
    "results",
    "failure",
    "input",
    "preceding",
    "series",
    "steps",
    "deliverables",
    "phases",
    "dependent",
    "need",
    "requirements",
    "due",
    "version",
    "available",
    "entire",
    "process",
    "deviations",
    "machine",
    "first",
    "transaction",
    "overcome",
    "replies",
    "yes",
    "faced",
    "products",
    "microservices",
    "working",
    "particular",
    "avoiding",
    "deploying",
    "reviews",
    "consumer",
    "towards",
    "adobe",
    "companies",
    "sony",
    "maximum"
  ]
}