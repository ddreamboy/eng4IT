{
  "text": "hey how's it going guys my name is dom\nand today i'm going to be showing you\nhow easy it is to create your own\njavascript utility library using modules\nand the import export syntax all right\nso this right here is really easy and\nalmost anyone can do this and you can\neasily include this library on your\nexisting website or project to of course\nstore some logic in one place and then\nuse it multiple times throughout your\nentire project alright so you can do\nthings like store logic for dom\nmanipulation string manipulation you\nknow math whatever it might be you can\nput inside your utility library so i've\ngot this indexed html right here with\ncurrently nothing going on there's no\nincluded javascript alright so starting\nfrom scratch here we can create a new\nfolder called js so you can call this\nfolder lib if you want or library i'm\ngoing to call mine js and then make a\nnew file here called\nutil.js so this file right here of\ncourse is short for utility.js\nnow this is where you're going to want\nto store all of your\nfunctions all right so all of your help\nout functions okay as an example here\nwe're going to say export function add\nokay so this function here is going to\ntake in an array of numbers and then of\ncourse add them together before\nreturning the results okay\nso one important thing here is going to\nbe the export keyword so export means\nother javascript files can then take\nthis function and include it you know\nin their own file and basically use that\nfunction okay\nas an example here let's just say let\nsum equal to zero then say for every\nsingle number\nof the numbers array that's being passed\nin let's say sum plus equals n to add it\nto the list or add it to the total\nand then return the sum so that is our\nfunction complete you guys can make many\nof these functions all right it's up to\nyou and once you're happy with the mana\nfunctions you have\ngoing back inside the directory\nstructure here let's make a new file\ncalled main.js so this file right here\nis going to be where all of your website\nlogic is going to sit so you guys may\nalready have an existing main.js file or\na similar file and you can simply reuse\nthat one if you like but i want to make\na new one here the important thing to do\nis though is going back in the\nindex.html when you include your main.js\nfile make sure you have so i'm going to\ninclude this here\nmake sure you have the type of module so\nthis type of module here is going to\nensure that we can now use the import\nexport syntax to of course include the\nutil library inside main.js okay so i'll\nsave this right here\ngo back in main.js then we're going to\nsimply include those functions or\nwhatever we want to include now of\ncourse i need to remove the duplicate\nfunction so let's do that but going back\nin the main.js now let's import that add\nfunction so we can simply say import\nthen using curly braces here we can say\nadd\nfrom\ndot forward slash util dot js so now\nadd is going to be this function right\nhere okay\nwe can now say\nconsole.log\nat\npass in something like one two and three\nand of course now we should get six in\nthe console i'll go in the browser here\ndo a refresh and we get six right there\nso as we can see the function is being\nused okay\nthat's basically it so you can you know\nif you got multiple functions here you\ncould simply put a comma and you can\nimport some more functions whatever you\nmight have inside there you can do so\nusing commas to you know include\nmultiple\num and one thing to mention before i go\nis that\nit's probably better if you guys can\nyou know store this utility file\nsomewhere else so maybe if you've got a\nweb server you can store it on your\nwebsite in some sort of directory that\nway anytime you want to use your\nfunction or use your library you can\nsimply include it from that one place\nit's up to you guys but you know that\njust sort of prevents you from having to\nobviously copy this file\nyou know every time you make a new\nproject but that's how to create your\nown javascript utility library using\nmodules and the import export syntax\nhope you guys enjoyed this one if you\ndid drop a like and subscribe and i'll\nsee you in the next one\n",
  "words": [
    "hey",
    "going",
    "guys",
    "name",
    "dom",
    "today",
    "going",
    "showing",
    "easy",
    "create",
    "javascript",
    "utility",
    "library",
    "using",
    "modules",
    "import",
    "export",
    "syntax",
    "right",
    "right",
    "really",
    "easy",
    "almost",
    "anyone",
    "easily",
    "include",
    "library",
    "existing",
    "website",
    "project",
    "course",
    "store",
    "logic",
    "one",
    "place",
    "use",
    "multiple",
    "times",
    "throughout",
    "entire",
    "project",
    "alright",
    "things",
    "like",
    "store",
    "logic",
    "dom",
    "manipulation",
    "string",
    "manipulation",
    "know",
    "math",
    "whatever",
    "might",
    "put",
    "inside",
    "utility",
    "library",
    "got",
    "indexed",
    "html",
    "right",
    "currently",
    "nothing",
    "going",
    "included",
    "javascript",
    "alright",
    "starting",
    "scratch",
    "create",
    "new",
    "folder",
    "called",
    "js",
    "call",
    "folder",
    "lib",
    "want",
    "library",
    "going",
    "call",
    "mine",
    "js",
    "make",
    "new",
    "file",
    "called",
    "file",
    "right",
    "course",
    "short",
    "going",
    "want",
    "store",
    "functions",
    "right",
    "help",
    "functions",
    "okay",
    "example",
    "going",
    "say",
    "export",
    "function",
    "add",
    "okay",
    "function",
    "going",
    "take",
    "array",
    "numbers",
    "course",
    "add",
    "together",
    "returning",
    "results",
    "okay",
    "one",
    "important",
    "thing",
    "going",
    "export",
    "keyword",
    "export",
    "means",
    "javascript",
    "files",
    "take",
    "function",
    "include",
    "know",
    "file",
    "basically",
    "use",
    "function",
    "okay",
    "example",
    "let",
    "say",
    "let",
    "sum",
    "equal",
    "zero",
    "say",
    "every",
    "single",
    "number",
    "numbers",
    "array",
    "passed",
    "let",
    "say",
    "sum",
    "plus",
    "equals",
    "n",
    "add",
    "list",
    "add",
    "total",
    "return",
    "sum",
    "function",
    "complete",
    "guys",
    "make",
    "many",
    "functions",
    "right",
    "happy",
    "mana",
    "functions",
    "going",
    "back",
    "inside",
    "directory",
    "structure",
    "let",
    "make",
    "new",
    "file",
    "called",
    "file",
    "right",
    "going",
    "website",
    "logic",
    "going",
    "sit",
    "guys",
    "may",
    "already",
    "existing",
    "file",
    "similar",
    "file",
    "simply",
    "reuse",
    "one",
    "like",
    "want",
    "make",
    "new",
    "one",
    "important",
    "thing",
    "though",
    "going",
    "back",
    "include",
    "file",
    "make",
    "sure",
    "going",
    "include",
    "make",
    "sure",
    "type",
    "module",
    "type",
    "module",
    "going",
    "ensure",
    "use",
    "import",
    "export",
    "syntax",
    "course",
    "include",
    "util",
    "library",
    "inside",
    "okay",
    "save",
    "right",
    "go",
    "back",
    "going",
    "simply",
    "include",
    "functions",
    "whatever",
    "want",
    "include",
    "course",
    "need",
    "remove",
    "duplicate",
    "function",
    "let",
    "going",
    "back",
    "let",
    "import",
    "add",
    "function",
    "simply",
    "say",
    "import",
    "using",
    "curly",
    "braces",
    "say",
    "add",
    "dot",
    "forward",
    "slash",
    "util",
    "dot",
    "js",
    "add",
    "going",
    "function",
    "right",
    "okay",
    "say",
    "pass",
    "something",
    "like",
    "one",
    "two",
    "three",
    "course",
    "get",
    "six",
    "console",
    "go",
    "browser",
    "refresh",
    "get",
    "six",
    "right",
    "see",
    "function",
    "used",
    "okay",
    "basically",
    "know",
    "got",
    "multiple",
    "functions",
    "could",
    "simply",
    "put",
    "comma",
    "import",
    "functions",
    "whatever",
    "might",
    "inside",
    "using",
    "commas",
    "know",
    "include",
    "multiple",
    "um",
    "one",
    "thing",
    "mention",
    "go",
    "probably",
    "better",
    "guys",
    "know",
    "store",
    "utility",
    "file",
    "somewhere",
    "else",
    "maybe",
    "got",
    "web",
    "server",
    "store",
    "website",
    "sort",
    "directory",
    "way",
    "anytime",
    "want",
    "use",
    "function",
    "use",
    "library",
    "simply",
    "include",
    "one",
    "place",
    "guys",
    "know",
    "sort",
    "prevents",
    "obviously",
    "copy",
    "file",
    "know",
    "every",
    "time",
    "make",
    "new",
    "project",
    "create",
    "javascript",
    "utility",
    "library",
    "using",
    "modules",
    "import",
    "export",
    "syntax",
    "hope",
    "guys",
    "enjoyed",
    "one",
    "drop",
    "like",
    "subscribe",
    "see",
    "next",
    "one"
  ],
  "keywords": [
    "going",
    "guys",
    "create",
    "javascript",
    "utility",
    "library",
    "using",
    "import",
    "export",
    "syntax",
    "right",
    "include",
    "website",
    "project",
    "course",
    "store",
    "logic",
    "one",
    "use",
    "multiple",
    "like",
    "know",
    "whatever",
    "inside",
    "got",
    "new",
    "called",
    "js",
    "want",
    "make",
    "file",
    "functions",
    "okay",
    "say",
    "function",
    "add",
    "thing",
    "let",
    "sum",
    "back",
    "simply",
    "go"
  ]
}