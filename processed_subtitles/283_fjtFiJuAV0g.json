{
  "text": "so guys here you can see one more video\nhas been came and in today's video of\npython I'm telling you about in the\npython what are like in the video we\nlearn about the scope and in today's\nvideo we are learning about in the\npython what are modules if we don't know\nwhat our modules in Python so in today's\nvideo your whole concept will be clear\nabout it so see video start and please\nhit the like button share Friend And\nsubscribe to my channel do don't forget\nto all the notification B also so I miss\nour future latest videos so now I do\ntake a long time so let's move to\ncomputer screen and let's about in the\npython botom module so let's move to\ncomputer screen and let's do a coding\nwith Ling what is module consider a\nmodule to be the same as a code Library\na file containing a set of function you\nwant to include in your application this\nis called a module how to create a\nmodule to create a module just save the\ncode you want in a file with a with the\nfile extension.\npy in the example we save this code in\nthe file name by the name the file name\nis my module. py let me paste it erase\nit\nnow use a module now we can use the\nmodule we just created by using the\nimport statement in this example we\nimport the module is and the module name\nis my module and call the grating\nfunction C now note that when you're\nusing the function from a module use the\nsyntax module name. function name\nvariables in module the module can\ncontain functions as already described\nbut also variables of all types arrays\ndictionary subjects and\nEtc in this example we save this code in\nthe file by mod. py in the\nexample and if I write print person one\nsave it and then it should give me name\nJohn H 36 country Norway why because I\nwrite that like country Norway AG 36 and\nname John here you can see it example in\nthe example we import the mod name my\nmodule and access the person one uh\ndictionary and it is giving the error\nbecause\nokay and then it should give me okay my\nokay when I go on my command prom and I\nwrite like pip\ninstall my module I've in the previous\nvideo I have already told you about the\nPIP uh uh pip what is the PIP so I do\nnot told you another\ntime and now like that you can do it so\nnow let's come on here naming a module\nyou can name the module by whatever you\nlike but it must have the file\nextension. py renaming a module you can\ncreate an allias when you port a module\nby using the S keyword in this example\nwe create an allias for my module called\nMX in this\nexample it not give you any such type of\noutput give you the error obviously\nbecause I do not that such type of\nthings it give you the output buil-in\nmodules there are several buil-in\nmodules in Python which you cannot which\nuh you can import whatever you like in\nthe example we import and use the\nplatform module in the example we import\nand use the platform\nmodel like that Windows it give me the\nwindows here you can see it why because\nI like tell me the platform if you are\nusing the Mac it give you the mac and if\nyou are using a Linux give you L Linux\nI'm using the windows to give me Windows\nuse the dir function there is some\nbuilt-in function to list all function\nname of variables name in the in a\nmodule the DI function list in the\nexample we list the all definite names\nbelonging to the platform module in this\nexample when I save it in it should give\nme like that many thing have been G what\nwhat type of these things it give me the\nlist of all defined names belonging to\nthe platform module note that the Dr\nfunction can be used on all modules also\nthe one you once you create yourself\nimport from module you can choose to\nimport only part from a module by using\nthe from keyword in the example the\nmodule name my module has a one function\nand one dictionary paste it save it and\nit should give me nothing output because\nI do not that type of such thing it give\nyou the output\nImport in the example we import only the\none person person one dictionary from\nthe module in the\nexample so it give me error but because\nI do not write that type of thing it\ngive me the\noutput note that when you importing\nusing when you're importing and using\nthe from keybord do not use the module\nname when referring to the elements in\nthe module example like that like that\nhere you can see it like person one8 not\nmy module. person8 it g the error and\nhere you can see it so you can see in\ntoday's video of Pon I told you about\nthe Pyon module so I hope you can enjoy\nthis class if you enjoy so please hit a\nlike button share friend subscribe to my\nchannel don't forget to all the\nnotification Bell also so never miss our\nfuture latest videos so but for today go\nbye\n",
  "words": [
    "guys",
    "see",
    "one",
    "video",
    "came",
    "today",
    "video",
    "python",
    "telling",
    "python",
    "like",
    "video",
    "learn",
    "scope",
    "today",
    "video",
    "learning",
    "python",
    "modules",
    "know",
    "modules",
    "python",
    "today",
    "video",
    "whole",
    "concept",
    "clear",
    "see",
    "video",
    "start",
    "please",
    "hit",
    "like",
    "button",
    "share",
    "friend",
    "subscribe",
    "channel",
    "forget",
    "notification",
    "b",
    "also",
    "miss",
    "future",
    "latest",
    "videos",
    "take",
    "long",
    "time",
    "let",
    "move",
    "computer",
    "screen",
    "let",
    "python",
    "botom",
    "module",
    "let",
    "move",
    "computer",
    "screen",
    "let",
    "coding",
    "ling",
    "module",
    "consider",
    "module",
    "code",
    "library",
    "file",
    "containing",
    "set",
    "function",
    "want",
    "include",
    "application",
    "called",
    "module",
    "create",
    "module",
    "create",
    "module",
    "save",
    "code",
    "want",
    "file",
    "file",
    "extension",
    "py",
    "example",
    "save",
    "code",
    "file",
    "name",
    "name",
    "file",
    "name",
    "module",
    "py",
    "let",
    "paste",
    "erase",
    "use",
    "module",
    "use",
    "module",
    "created",
    "using",
    "import",
    "statement",
    "example",
    "import",
    "module",
    "module",
    "name",
    "module",
    "call",
    "grating",
    "function",
    "c",
    "note",
    "using",
    "function",
    "module",
    "use",
    "syntax",
    "module",
    "name",
    "function",
    "name",
    "variables",
    "module",
    "module",
    "contain",
    "functions",
    "already",
    "described",
    "also",
    "variables",
    "types",
    "arrays",
    "dictionary",
    "subjects",
    "etc",
    "example",
    "save",
    "code",
    "file",
    "mod",
    "py",
    "example",
    "write",
    "print",
    "person",
    "one",
    "save",
    "give",
    "name",
    "john",
    "h",
    "36",
    "country",
    "norway",
    "write",
    "like",
    "country",
    "norway",
    "ag",
    "36",
    "name",
    "john",
    "see",
    "example",
    "example",
    "import",
    "mod",
    "name",
    "module",
    "access",
    "person",
    "one",
    "uh",
    "dictionary",
    "giving",
    "error",
    "okay",
    "give",
    "okay",
    "okay",
    "go",
    "command",
    "prom",
    "write",
    "like",
    "pip",
    "install",
    "module",
    "previous",
    "video",
    "already",
    "told",
    "pip",
    "uh",
    "uh",
    "pip",
    "pip",
    "told",
    "another",
    "time",
    "like",
    "let",
    "come",
    "naming",
    "module",
    "name",
    "module",
    "whatever",
    "like",
    "must",
    "file",
    "extension",
    "py",
    "renaming",
    "module",
    "create",
    "allias",
    "port",
    "module",
    "using",
    "keyword",
    "example",
    "create",
    "allias",
    "module",
    "called",
    "mx",
    "example",
    "give",
    "type",
    "output",
    "give",
    "error",
    "obviously",
    "type",
    "things",
    "give",
    "output",
    "modules",
    "several",
    "modules",
    "python",
    "uh",
    "import",
    "whatever",
    "like",
    "example",
    "import",
    "use",
    "platform",
    "module",
    "example",
    "import",
    "use",
    "platform",
    "model",
    "like",
    "windows",
    "give",
    "windows",
    "see",
    "like",
    "tell",
    "platform",
    "using",
    "mac",
    "give",
    "mac",
    "using",
    "linux",
    "give",
    "l",
    "linux",
    "using",
    "windows",
    "give",
    "windows",
    "use",
    "dir",
    "function",
    "function",
    "list",
    "function",
    "name",
    "variables",
    "name",
    "module",
    "di",
    "function",
    "list",
    "example",
    "list",
    "definite",
    "names",
    "belonging",
    "platform",
    "module",
    "example",
    "save",
    "give",
    "like",
    "many",
    "thing",
    "g",
    "type",
    "things",
    "give",
    "list",
    "defined",
    "names",
    "belonging",
    "platform",
    "module",
    "note",
    "dr",
    "function",
    "used",
    "modules",
    "also",
    "one",
    "create",
    "import",
    "module",
    "choose",
    "import",
    "part",
    "module",
    "using",
    "keyword",
    "example",
    "module",
    "name",
    "module",
    "one",
    "function",
    "one",
    "dictionary",
    "paste",
    "save",
    "give",
    "nothing",
    "output",
    "type",
    "thing",
    "give",
    "output",
    "import",
    "example",
    "import",
    "one",
    "person",
    "person",
    "one",
    "dictionary",
    "module",
    "example",
    "give",
    "error",
    "write",
    "type",
    "thing",
    "give",
    "output",
    "note",
    "importing",
    "using",
    "importing",
    "using",
    "keybord",
    "use",
    "module",
    "name",
    "referring",
    "elements",
    "module",
    "example",
    "like",
    "like",
    "see",
    "like",
    "person",
    "one8",
    "module",
    "person8",
    "g",
    "error",
    "see",
    "see",
    "today",
    "video",
    "pon",
    "told",
    "pyon",
    "module",
    "hope",
    "enjoy",
    "class",
    "enjoy",
    "please",
    "hit",
    "like",
    "button",
    "share",
    "friend",
    "subscribe",
    "channel",
    "forget",
    "notification",
    "bell",
    "also",
    "never",
    "miss",
    "future",
    "latest",
    "videos",
    "today",
    "go",
    "bye"
  ],
  "keywords": [
    "see",
    "one",
    "video",
    "today",
    "python",
    "like",
    "modules",
    "also",
    "let",
    "module",
    "code",
    "file",
    "function",
    "create",
    "save",
    "py",
    "example",
    "name",
    "use",
    "using",
    "import",
    "note",
    "variables",
    "dictionary",
    "write",
    "person",
    "give",
    "uh",
    "error",
    "okay",
    "pip",
    "told",
    "type",
    "output",
    "platform",
    "windows",
    "list",
    "thing"
  ]
}