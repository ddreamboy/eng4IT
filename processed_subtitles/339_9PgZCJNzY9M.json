{
  "text": "what is up guys faris here yesterday in\nuh the live stream i was talking a\nlittle bit about how i\nkind of wanted to connect the dots for\nany newcomers and even for more advanced\npeople\nfor the later on steps when it comes to\nsoftware development basically take you\neverywhere from\ndownloading the ide which is basically\nlike two seconds of this video\nto creating a simple terminal\napplication within that ide\nwriting a few tests for that terminal\napplication because we're gonna be\npushing it up to github\ncreating our own github repository and\nwhatnot and then\ngoing ahead and using circle ci to\nintegrate some continuous integration\nand those tests are going to be run\nthrough circle ci before it pushes it\nover to our master branch\non our github repository that's why i\nsaved for beginners and\npeople who are a little bit further\nalong because if you have no experience\nwhen it comes to\nci cd workflows that's something that\nyou're going to run into\none way or another if you plan to become\na professional software developer so i\nthink that\nanybody of any skill level from beginner\nto i mean maybe you've been doing this\nfor a while we'll take something away\nfrom this video\nat least that is my hope and plans quick\ndisclaimer i'm not sure how good of a\nteacher i am sometimes i\ntend to just gloss over some important\nfacts because i may assume that you\nalready know it\nother times it may fall down a rabbit\nhole because i don't think you know\nanything about it so uh\nwe'll see how this goes all of this is\nbeing done on windows 10\nand i can make any argument in the world\nis why maybe you want to be using linux\nfor a software developer but\ni just want to break down the barrier to\nentry there are so many different\nquestions when it comes to linux and the\ndistros and things of that nature so\nwe're going to be running it on windows\n10 if you have mac os this should be the\nsame exact thing\nand i also want to mention before we get\nstarted is that circle ci is the sponsor\nof this video and while we are going to\nbe going over\na little bit of uh i say a little bit\nwe're going to be setting up\nyou know a ci a continuous integration\nworkflow for a very simple\nterminal application circle ci does a\nwhole lot more than that\ni just want to read a few notes that i\ntook down on my experience in circle ci\nthat\nfor some of you who are a little bit\nmore advanced and want to do a little\nbit more maybe hop into the continuous\ndeployment\nside of things as well as the continuous\nintegration like we'll be doing in this\nvideo\ncircle ci this my own notes professional\nservice something you'll see in top\ncompanies like facebook\nspotify kickstarter and gopro it allows\ndebugging in your\nci cd pipelines with ssh you can use\nworkflows to schedule jobs\nshare data among jobs where each\nworkflow has an associated workspace\nwhich can be used to transfer files to\ndownstream jobs as a workflow progresses\ncaching dependencies is another big one\nit makes jobs faster in circleci by\nreusing the data from expensive fetch\noperations from previous jobs and you\ncan use the circle\nci cli to split tests all of that that i\njust mentioned is available for free\non their performance plan however they\noffer even more like resource\nclasses scaling concurrency and docker\nlane caching\nif anything i mentioned or everything i\nmentioned went right over your head i'm\ngoing to be leaving links down\nto this the appropriate circle ci page\nfor\neverything i just listed so you can go\nahead and click down there and just\nhave fun falling down that rabbit hole\nbecause there's a whole lot to learn\nwhen it comes to cicd\nworkflows and things of that nature and\nlike i said professional software\ndevelopment environment\nyou're going to be using continuous\nintegration and\nor most likely and continuous deployment\nso it's\ndefinitely something worth learning if\nthat is your ultimate goal all right\nfirst things first eclipse.org\ndownloads you're going to download\neclipse for this particular project\nbecause we're going to be creating a\njava terminal application caesar's\ncipher i'll explain that in just a\nsecond but basically all you do is at\neclipse.org\ndownloads download whatever it suggests\nprobably your 64-bit if you're on\nwindows 10\nclick download and you're going to be\ndownloading this right down here it's\ngoing to be a\nexecutable file and just follow the\nprompt if\nsometimes there's different options like\noh do you want to do custom settings or\njust\nstop default settings if you don't know\nthat you want either one of those just\ndo default eclipse knows what you need\nbetter than you\nif you don't know that you need\nsomething specific\ni'm very i really love cryptography and\npuzzles and\njust things of that nature and the fact\nthat caesar cipher is\na very very simple cipher something that\ni think you'll be able to just catch on\nto and\nif you don't already know what it is and\nthe program itself is fairly simple\nand i already know what i have in mind\nwhen it comes to the tests\nthat's what we're going to be doing\ntoday if you don't know what caesar\ncipher is all in all caesar cipher is an\nencryption technique a very very simple\nencryption technique at that\nwhat you do is you take the alphabet you\nshift it down a certain amount of\nletters and that is how you write your\nmessage and what we'll be coding up is\nthe ability to take a message\nthrow it into our code and our code is\ngoing to spit out the encrypted message\nusing caesar cipher all right so you\nwant to be able to pull up eclipse i'm\ngoing to use this as the default and do\nnot ask again please this is\neclipse workspace this is where your\nyour project is going to be saved you're\ngoing to get this page when you first\nopen eclipse because they're going to\ntry to recommend you\nthey're going to try to steer you in the\nright direction and i do\nafter we go through this terminal\napplication through this video\nyou take a look at the overview or maybe\nsome tutorials or samples\nbecause the more you're exposed to what\nis going on within your ide\nthe better you'll be able to use it the\nmore useful it'll be for you\nknowing your ide is just as important as\nknowing your language is just as\nimportant as knowing\nhow to write tests and all of this plays\ninto the part of being a software\ndeveloper but we're going to close out\nof that and as you'll see it'll give you\na few options which you can do right\nhere\nor you can come on up to file you click\non new and it has this window right here\nnow\nnormally what you would do potentially\nis come up here and create a java\nproject but\nsince we're going to be creating a\ncontinuous integration workflow\nwhat we're going to need to do is come\ndown to other and we're going to be\ncreating\na gradle project so under here you'll\nsee gradle you'll see gradle project\ngoing to click on that click next\nwe're going to name this project\ncaesar's cipher\njust as such all right next i i think\neverything else is just\nfine now we're going to click finish\nit's going to do a lot of work over here\ndon't seem too intimidated by what we\ngot going on over here so we have source\nmain java\ndirectory we have our caesar cipher\npackage and we already have a\nlibrary.java file\ndon't worry about any of this we just\nneed to create it as a gradle project in\norder for it to work properly when we\nimplement the continuous integration\nwith circle ci\nso what you want to do is obviously\nyou'll see your source main java now you\ncan create it right in here or if you\nwant to\nkeep all this stuff closed you see you\nhave this source file right here\nand then we're going to come on here\nright click main we're going to hover\nover new we're going to go down to class\nthis is your java class\nwe're going to name this now naming\nconventions while they don't necessarily\nmatter too much when it comes to the\nproject itself when it comes to the java\nclasses\nmake sure you capitalize every single\nword\njust like that this is going to be\ncaesar cipher we don't need to make a\nmain right now we'll make that later and\nfinish now this is the part where most\npeople\ncan get to and think i don't know where\nto go from here because\nlike what do you start typing like what\ndo you start typing here well you got to\nthink about whatever project you're\nabout to build we're going to be\nbuilding caesar cipher and obviously we\nhave an understanding of\ncaesar cipher this is when this notebook\ncome in handy you could write down\nexactly what you need the objects in\nwhich you'll be using so\nlet's just talk about it here so we're\ngoing to need the alphabet\nbecause in order to implement caesar\ncipher we're going to have to shift it\ndown a certain amount\nof characters down the alphabet so we're\ngoing to need the alphabet\nwe'll start off there and then we're\nalso going to need to be able to\nimplement that shift or that offset\nand then we're also going to have a\nmessage in which we offset and that's\ngoing to turn\ninto the ciphered message so\nlet's just start there and and i'll talk\nabout it towards the\nend of me coding all of this up\nall right this is a good place to pause\nand that is because we have this\nred underline right here and i say pause\nby me explaining to you\nwhat exactly i just did within our\npublic string\ncipher so we have our input parameters\nof our cipher\nso this cipher when i say cipher this is\nthe message\nencrypted this is the encrypted message\nso what do we need within that we need\nthe original message and then we need\nthe offset\nso the offset in which you are applying\nto your message and here's the thing we\nwant to make sure that the offset\nbecause it's going to be a it's going to\nbe an integer it's going to be a number\nin which we offset by does not exceed\n26 because we can only offset it by up\nto 26 letters\nall set module equals alphabet size and\nthat'll allow it to avoid\noverflowing over 25\nso basically another way to write this\nemma\ni'll just write it like this offset\nequals offset\nmodule alphabet size and if you're\nwondering how i did that just there\nlet's take a step back where i typed in\nthe beginning of something i've already\ndeclared\nal alphabet size control or command\nspace alphabet size okay and so i don't\nhave to type it in every single time i\nwant to do that there's a lot of little\nshortcuts like that\nbut this right here is the same exact\nthing\nas this right here so in case you want\nto see it\nwhere it makes a little bit more sense\nin your head and more traditional manner\nof looking at things but we're going to\ntake that out\nand what we're what we have going over\nhere so we have our string we just\ndeclared\na character array we called it character\nand we have a string message and we're\ngoing to take the message\nthe string message and we're going to\nturn that into\ncharacters and store all of the\ncharacters\ninto our character array so if we have\n25\ncharacters within our string that is\nstored within message\nit could say how are you doing today\neach one of those characters\nh-o-w those will be stored as\ncharacters in our character array that\nwe called\ncharacter and what we have going over\nhere is shift this is our shifting this\nis the same as offset\nuh in all honesty i could name this\noffset by that's let's do that so we\nstay consistent so offset by\nthis is going to be our method all set\nby we're going to create a new method\nthere\nit's going to be calling in the\nparameters our character\nfrom our character array and the offset\nwhat this code is doing right now is\ncalling this method right here basically\nso whatever i call\nthis method offset by it offsets our\nmessage\nto how we want it and then return new if\nyou notice that this if i took out\nreturn new right here\nit's yelling at us up here and that's\nbecause we need a return statement with\nthis\nso return new string character what\nwe're doing is\nbasically when we go through our string\ncipher we go through this\nall these statements right here what we\nend up with is our character that we are\nconverting to a string\nstoring in a string now onto offset by\nwe just have to throw in the logic there\nso whenever we call this method right\nhere\nit actually does something\nall right and this is our logic right\nhere so let me explain this for a second\none\nthis is yelling at us for the same\nreason that the offset by was yelling at\nus because we need to create a method\nout of what we have going on right here\nand then we're going to add a little bit\nmore logic\nand and then we'll be we'll be done so\nthat is the offset char we'll get to\nthat in a second\nbut let me take you back to the fourth\nso this is just a regular for loop i'm\ngoing to take you through it anyway\nbut just know that hey it's regular for\nthem so we declared an integer i\nwe're going to be using this only in the\nfor loop and we equaled it to\nzero and then we have while i which\nright now equals zero is less than\ncharacter length we're going to be doing\nwhatever's in the for loop and every\ntime we do a rendition of what's in the\nfor loop\nwe're adding 1 to i so next time it\ncomes through it's going to\ni is going to equal 1 and then it's\ngoing to equal 2 and the thing is with\ncharacter\nlength character length that is the\nvalue of how many characters\nare within our character array that we\ndetermined up here\nwhich is obviously storing our message\nas\neach individual character in the array\nas we previously discussed\nand how many characters like i said if\nit says\nhow is your day today however many\ncharacters that is let's say it's 15\ncharacters\nthis right here basically just equals\n15. so\nwhile i is less than 15\nwe're going to be keep on doing a for\nloop and also within this for loop\nwhat we're doing here we have our\ncharacter i and with i\nwe are running through each and every\ncharacter that is within our message\nthat's all that i represents so zero\nwhile i equals zero\nup here as we go through the for loop i\nwill equal zero\nor i will equal one and then two and\nthen three and then four\nand that will represent the position in\nwhich the character is within our\ncharacter array\nyou you're with me in that and then\nwe're also running\nthis method that we just created and\nwe're about to throw logic into\nin a second which this is our message\ntraversal this is us\nimplementing caesar cipher into our\ncharacter and to our message and we're\njust storing it within this right so now\nwe need to do is our offset\ncharacter throw the logic into there\nso i mentioned our previous method where\nwe're going to have letter a and letter\nz and we're going to assume that every\ncharacter in our message\nis lowercased we're representing a\nlowercase a and a lowercase z we're not\nwe don't care about the uppercase\nbecause we have control over the message\nso that is what we have decided together\nwithin this within our offset char we\nare also\nonly allowing us to do a left rotation\nwe are going to be looking at the lower\nbounds with this if statement right here\nto to account for left rotation to\nperspective\nif you have the letter e if you want to\nshift it the whole entire alphabet\naround the\nletter e three the amount of three\nyou could do e f g h\nor you could do e d c\nb so that's three but that's either way\nwe're only allowing for a left rotation\nif we wanted to do a right rotation as\nwell well\nlet's just add that in there why not\nit's basically the same exact thing we\ngot going on here but\nwe want to shift around the less than to\na greater than\nand it's going to be greater than the\nlast character\nof the alphabet and that is the letter z\nthat we have determined up here\nand then we also want to do c minus\nalphabet size\nnot c plus alphabet size so we just\nchange up a few things\nand then we obviously change return zero\nto return\nc and this is\ncaesar cipher however since we're doing\neverything in eclipse the way that we\nwant to\nrun this in order to make it cleaner we\nwant to create a\nmain.java file and we're going to be\ncreating a main method within that\nmain.java file and that is basically\ngoing to be\nour operations that is what we're going\nto say hey\nrun this because whenever we click this\nrun button up here it's going to look\nfor our main method\nit's going to run our main method and\nthen we'll start basically doing all of\nthis code\nfrom our main method but we'll get into\nthat we come down under source\nmain right click new and we're going to\ncreate a new java class\nso under java class we're going to name\nthis main remember capital m and which\nmethod stubs would you like to create\nwe're actually going to create a\nmain method we're going to check that\nand click finish so this is what we're\ngoing to do within main\nwhile we are going to be calling our\ncipher here\nwe're also going to be determining hard\ncoding in\nfor the purpose of this so you can\nactually see how everything works we're\ngoing to be hard-coding in\nthe message we're going to be\nhard-coding in the offset\nwe could prompt the user actually\nif we wanted to to type in the message\nand then type in the offset\ni don't know we'll figure that out here\nin a second but what are we going to do\nwe're going to have\nwe're gonna have caesar's cipher so we\nneed caesar cipher here\nlet me let me take a second right here i\nknow i was previously going through the\nwhole entire code and then explaining at\nthe end but as i do it\ni think it would make a little bit more\nsense okay let me take it back a step\nso caesar cipher this right here is a\nwhole entire representation\nof this file right here this class\ni should say so this class caesar cipher\nwe created an instance of this class\nwithin our main with this line right\nhere\nso caesar cipher that is obviously\nreferring to this class\nwe just named it caesar cipher we could\nname this whatever we wanted to we could\nname this\nbob as long as we call it as bob it\ndoesn't matter but\nconventions you name it the same exact\nthing you just\nlower case it and then it gives you the\nability to call\nanything any object within that class\nand it has a list right there but if you\nhave a lot of objects within your class\nyou can just start typing and then it'll\nobviously filter out\nhit enter and now it's asking us okay we\nneed to fill in the message and fill in\nthe offset\nso what we can do here is we could\ncreate a variable\nthat is message let's just do that\nmessage and offset\neverything is separate when it comes to\nthis particular class and the other one\nso right up here let's just create\nmessage um what is message messages\nstring\nhow are you doing today remember we\ndidn't take into account any of\nany of this any any special symbols\nand uppercase so what i'm doing right\nnow i think i'll just ignore the special\nsymbols not 100 sure but what we're\ndoing right now how are you doing today\nand then we're going to throw that into\nsupersize\ncaesar's decipher we're going to have an\nant offset\nand we're going to put an offset of\n12. i'm gonna format this a little bit\nbetter i'm gonna keep that there i'm\ngonna keep that there\nand this is what we got going on so if\nwe come on\nup here we click run main java\nit does all the work but it doesn't tell\nus anything because we haven't\nprinted out any of the work so what do\nwe want to do here\nright so let's take a second right here\nbecause i made a mistake i made a\nmistake obviously i didn't test my code\nthoroughly\nbeforehand as you can see it ciphered\nour message and i'll explain a little\nbit as to why here in a second\nbut it suffered our message but it also\nshifted\nall of our spaces so you can see space\nspace space space so these are\nafter three characters after three\ncharacters after three characters so\nthree characters space f three\ncharacters\nf three characters f five characters\nfive characters f capital f so what we\ndid here is we forgot to\nbasically ignore the spaces not within\nour character array but within\nour cipher so what we're going to do\nhere within our character we're going to\ndo an if statement\nif\nall right so what we've done here i'm\ngoing to save that so if\ncharacter i does not equal space\nthen we're going to offset the character\nby\nwhat we're doing all within this method\nthat we call it up here\nnow it should work all right let's test\nthis out\ncool all right now that we have\neverything printing out exactly what we\nwant to we have our original message\nwe have our offset and we have our\nciphered message\nwe actually have a little bit of\nredundant code so since we're printing\nout\nour ciphered message and we're running\nthe code right here we don't need this\ncode right here so we could delete it\nwe also could run this code and assign\nit to\nwe could say string ciphered\nmessage\nand we can basically let let's do that\nso it just so that it's a little bit\nmore clean\na little bit a little bit cleaner all\nright and that should do the same exact\nthing\nthat should do the same exact thing here\nall right cool so\nnow that we have exactly what we want\nprinted out in our our code seems to be\nworking\nas as planned allow me to take you\nthrough basically the order of\noperations that happens\nthat eclipse does when it runs our code\nfrom the time we click this run button\nto the time it prints out what we got\ngoing on down in the console\nso whenever we start off we click this\nrun button it looks for our main method\nso our main method is right here in our\nmain class\nand it runs this code but not all of it\nat once it goes it goes line by line so\non line 7 we're declaring our message we\nwant our message to say how are you\ndoing today\nthis is the message that we want\nciphered and on line eight we are\ndetermining the offset\nof that of that message to be ciphered\nand that is the value of 12. pretty\nsimple stuff\non line 10 what we are doing is we are\ncreating an instance\nof the class caesar cipher and we are\ngiving it the name\ncaesar cipher so every time we call\ncaesar cipher which is right here\nwe are basically accessing putting our\nhand down into\nthe the class that is caesar cipher so\nnow we are able to\naccess all of the code within these\ncurly brackets right here\nwhich is all of the code so we can even\naccess letter a\nor letter z or alphabet size all of\nthese are objects\ncreating an instance of caesar cipher\nwe're able to\naccess those objects and that is exactly\nwhat we're doing on line 11. so on line\n11\nlet's look at the code that is being\nexecuted remember this code on the right\nside of the equal sign\nwhatever the result of this is going to\nbe stored\ninto ciphered message just like the\nvalue\nhow are you doing today is being stored\nin the string\nmessage or the value of 12 is being\nstored\nin offset every time you use offset that\nis just a representation of 12 because\nthat is the value in which it's storing\nevery time you use ciphered message from\nhere on out which is right down here\nyou are accessing the value in which is\nstored in there\nafter running this code but what this is\nwhere we basically run all of the code\nso caesar\ncipher that is obviously the instance of\ncaesar cipher class\nand what i say before we want to be\nspecific with what object we choose to\ndip our hand down into\nso we said hey we want to access the\nmethod cipher so we're going to be\naccessing the method cipher that is\nwithin the class\ncaesar cipher we're going to be passing\nin our own parameters\nof our string message which is how we're\ndoing today\nin our int offset which we have given at\nthe value of 12.\nall right now let's get into it within\nthe cipher what are we doing here\nso we have our offset now this is now\nequal to 12.\nand this message right here this is now\nequal to how are you doing today so now\nthat it's in our method\ncipher it's going to start running the\ncode so line 10 runs line 10\nit runs line 11 and remember line 11\nthat is turning our string\ncalled message which is how are you\ndoing today into a character array\ncalled\ncharacter and then on line 12 we are\ngoing to be calling offset by the method\noffset by right down here and passing in\nthe parameters\ncharacter and offset and then basically\nwhat in line 12 it is going to access\nall of this code it's going to run all\nthis code it's going to run the for loop\nas long as it allows it's going to\nhop into the if statement as long as the\ncharacter i does not equal\na space and it's going to run line 19.\nnow remember on line 19\nwe are running this code and we're\nactually going to be storing it\nwithin character i so this code right\nhere this is\nus uh calling the offset char method\ndown here\npassing in our parameters so every time\nwe come through a letter we run\nall of this code return the new letter\nto be stored within character i so\nbasically it comes down to the h\nthe h is offset by 12 and now that\nh equals a t we return t into our\ncharacter array\nand then we go on to o and o it's offset\nby 12\nthat is now an a we return a\nand now that is being stored in our\ncharacter array so on and so forth you\nget the idea until\nwe are at the end of our character array\nand then on line 13 what we're doing is\nwe're returning new\nstring character which now no longer\nequals a character array of our message\nhow are you doing today\nit now equals a character array of our\nciphered message which is time mid cu\nit's not supposed to mean anything\nthat's a whole point of ciphering a\nmessage but\nnow this right here is stored\nwithin this because this line 12\nran basically all of this code which ran\nall of this code i just love it and then\nwith so now that we are out of our\ncipher method and remember the last\nthing we did in our cipher method was\nreturn our character which is now this\nand we are going to be storing it\nbecause remember everything that we just\ntalked about\nis this right here and we're going to be\nstoring it our character will be\nreturned in our cipher method\ninto our string ciphered message you\nfollow me here\nand what we're doing down here is we're\nprinting out our original message which\nis how are you doing today\nwe're printing out our offset which is\n12. and we're printing out our ciphered\nmessage\nwhich that we ran all this code\nis time mid q i'm not going to say all\nthat again but\nthat's what it is and that is exactly\nhow this code works\nnow let's write some tests we already\nhave our seizure cipher.java we already\nhave our main.java\nand just as we created those down under\nsource main we're going to create the\ntest under source\ntest makes sense right we're going to\nright click go over new\nnot go over class we're actually going\nto come down here and we're going to\ncreate a junit test case\nsince we're writing these tests for\ncaesar cipher.java we're actually going\nto name this caesar\ncipher test the only change i'm going to\nmake here is\nselect new junit jupiter test instead of\njunit 4 test we're going to click finish\nwe're going to add the junit 5 library\nto the build path okay\nand now it's time for me to write some\ntests and hope that they work i'll get\nback to you\nall right so we have two tests here that\nshould work they're telling us that they\nshould work but\nlet me explain a little bit of what\nthese tests are actually doing first so\nfirst and foremost we have to create an\ninstance of caesar cipher within our\ntest just as we do with main\nbecause we need to access that and then\nour first test test ciphered message\nwith offset of 12. test names are\ntypically\nvery very specific to what they're\nactually doing so you avoid any type of\nconfusion because maybe you want to test\nseparate message with offset of 11. you\nwant to make sure that it's very\nspecific\nassert equals within our test this is\nbasically saying\nthat this on the left side of this comma\nright here\nis equal to this on the right side of\nthis comma here\nwe are asserting that these two values\nare equal so let's actually take the\nright side of it first\ncaesarcipher.cipher and we're passing in\nthe message\nhow are you doing today and we're\noffsetting it by 12.\nwell we we've already done this we know\nthat if we pass in the message how are\nyou doing today and off setting it by 12\njust as we see down here\nour ciphered message is time mid cue\nthis and as you can see this is the same\nexact as what we have right here\nso yes this value is the same as this\nvalue\nthis test should pass and then on our\nsecond test we are testing an empty\nstream we're\ndoing exactly that throwing in an empty\nstring within our cipher right here\nwe are saying offset this by 12 but\nsince there's no letters\nand it's an empty string we should get\nback the same exact thing which is an\nempty string so in theory this test\nshould pass as well as a matter of fact\nlet's go ahead and test this we can\nright click\ncome on down to run as we right now\nwe're going to run it as a junit test\nall right cool very nice we tested it\nall right test ciphered message with all\nset of 12\npassed test empty string passed now\nlet's let's do a let's do a failing test\nall right well this is our failing test\nvery quick all we're doing is testing\nciphered message with offset of 11\nwe change the offset it's the same exact\nthing as this we changed the offset\nfrom 12 to 11 but we kept this\nvalue the same meaning it should be\nwrong\nso we're going to come down here run as\nj unit test\nand boom it failed now there's two\nreasons a test will fail\none is that obviously the test is\nwritten incorrectly\nbut two and this is the main reason you\nwrite tests it shows broken code\nso if we know that this right right here\nthis 12 offset of 12 we\nknow that this value should be equal to\nthis value\nbut it's not that means our code is\nwrong somewhere\nthat means the offset is incorrect maybe\nthe way you put in the array\nmaybe you added one and now the offset\nis all weird because the array started\nzero\nit could be anything and that's when you\nhave to start digging into why is this\ntest failing\nbut for now i'm actually just going to\ncomment this out\nhighlight all of it control slash\ncomment it all out\nsave cool all right so cool we know our\ntests work i'm going to run it one more\ntime just to make sure junit tests okay\nthose work i'm actually going to come\nback on over to our main.java file\ncome over here and click run to make\nsure that works okay that works exactly\nhow it should work\ni just want to test that out because our\nnext step is creating a github repo\nand pushing all this code up to the\ngithub repo and you always want to make\nsure you test your code\ntest your test before you push it up to\nyour remote repository so you want to\ncome to your github account i'm\nobviously logged in as myself\ngithub.com in case any of y'all want to\nfollow me\nyou want to come on up here you can\nclick new right here but this one's all\nregardless of what screen you're on\nhit the down new repository we're\ncreating a new repository repository\nname\nwe're going to name this caesarscipher\nyoutube and now with you you could make\nthis public but since i'm creating a\nvideo and you all won't be seeing this i\ni will make this public eventually\nprobably whenever this video goes live\nbut for now i'm just going to make it\nprivate\ni'm not going to initialize readme if i\nwanted to do the creator read me i could\njust do that in eclipse\ni'm going to create the repository this\nis what an empty repository looks like\nbut for now we're going to hop on\nit back into eclipse and we want to hop\non over to our package explorer window\nright here this is obviously our cesar\nsaver project\nwe're going to right click on caesar\ncipher come down to\nteam and over on team you'll see shared\nproject click on that\nand right on here this is our configure\ngit repository basically what we're\ndoing right now is we're creating a\nlocal git repository\nthat way it'll be consistent with a\nremote git repository that we just\ncreated on github\nand for this particular instance we're\ngoing to user create repository in\nparent folder\nproject we're going to click on that\nwe're going to come down here we're\ngoing to check this\nwe're going to create a repository right\nhere and we're going to click\nfinish we should be good to go now what\nyou want to do there are different ways\nto do this there are different ways to\ndo all of\nwhat is mentioned in this video but in\norder to take full advantage of our\ntools we have within eclipse\nwe're going to come right over here to\nour upper right we're going to hover\nover\nopen perspective click on that and we're\ngoing to come on over here into git\nwe're going to click on it we're going\nto open now this\nis pre-installed on your eclipse but\njust in case it's not for whatever\nreason click on help\ncome down to eclipse marketplace type in\negit hit enter\nand install this right here if it says\ninstall then you have the option for\nthat perspective\nso this right here this is our get\nperspective and this is our project\nour get repository that we actually just\ncreated this is that's our project but\nwe want to come down here to get\nstaging see this is the middle tab get\nstaging you'll notice that all of these\nare unstaged meaning that these are\ninconsistent with our remote repository\nwe want to stage all of these we want to\ntype in this is our initial commit but\nbefore you commit i do want to point out\nsomething when you come down to author\nand committer you may notice that it is\nyour actual pc\nuser that is your author and your\ncommitter but you don't want it to be\nyour pc user\nyou want when you commit up to your\ngithub repository to show up as your\ngithub user otherwise it'll show as a\nnon-github user and it'll actually say\nwhatever your\npc name is you don't want that so in\norder to fix that what you do is you\ncome up to window\nyou come down to preferences you type in\ngit and it'll say team get configuration\nso you want to type on configuration\nright here and it'll open up with this\ntable\nif it doesn't open up with this table\nclick on user settings and actually your\ntable will be\nempty won't have anything i've already\nadded my user but what you want to do is\nyou want to add entry\nyou want to type in user dot name and\nyour value is going to be your github\nusername\nmine is obviously farsnite and you want\nto add and then you add entry again you\ndo user.email\nand your value is going to be your\ngithub email click add\nyou want to apply apply and close and\nthen now you can change your author and\ncommitter to what you just added so\nexit out of that start typing in your\ngithub username\nmine as far as knight so i can click\nright here and add it as far as night\nsame thing for committer same exact\nthing for committer and just make sure\nit is\nconsistent with whatever your github\nusername and user email is\nif it doesn't show up under that drop\ndown just type in your username do a\nless than sign type in your email\ngreater than sign\njust as you see formatted like this and\nwe're going to commit and push to our\nmaster branch\nnow now what you're doing is you're\ngoing to connect this local get\nrepository right here\nto your remote git repository right here\nand how to do that\nmake sure that https is selected come on\nover click\ncopy that's what that button does right\nthere go back on over to eclipse\nand under location uri you want to paste\nin what you just copied your user and\npassword will probably not autofill like\nmine did\nbut for user type in your github email\nand for password type in your github\npassword that is how your local\nrepository is going to be able to\ncommunicate with your remote repository\nwithin your github account okay\npreview everything looks good to go\npreview\nokay and push cool and close now what\nthat just did it pushed all of your code\nand all those files up into this\nrepository right here just\nclick f5 or refresh and now you can see\nall of your files\ncool now it is time to implement a\ncontinuous integration workflow using\ncircle ci\nnow the link to this is going to be in\nthe top of the description\nclick on that and it'll take you to this\npage right here obviously what you want\nto do is sign up with github\ni'm already signed up so i'm going to\nlog in with github wherever it ends up\ntaking you whether that be your project\ndashboard or your workflow pipelines\nwherever it may be\ncome on over to add projects and you'll\nnotice that\nall of your github projects are listed\nin here private and public obviously\nthis is our caesar cipher youtube\nproject you want to set up this project\nobviously our project is a gradle java\nproject that is why we created the\nproject as a greater project instead of\njust a java project\nin order for all of this to work and\nwe're going to start building\nbut we need to make a change first back\ngoing over into eclipse\nyou can change back into your java\nperspective right here up in your upper\nleft\nand we're going to come down to our\nbuild.gradle file and we're going to add\ntwo dependencies we're going to add a\nnew test implementation we're going to\nadd a new test\nruntime only now we're going to keep\nthis old test implementation as well the\nreason for this is because our junit\ntest that we wrote within\ncaesar cipher tests this is using as you\ncan see junit.jupiter.api\njunit 5. i mean you can see that junit\nfive is right here\nin our project we could have chosen\njunit four i want to use the latest and\ngreatest so j unit five\nand within our build.gradle file we just\nneed to ensure that test implementation\njunit.jupiter version 5\nis what we implement test runtime only\njunit jupiter\nversion 5 same exact thing i also want\nto note something that i previously\nforgot to add\ninto our build.gradle file and that is\nunderneath our dependencies\nwe're going to add a test so within our\ntest we're going to have to use\njunit platform otherwise when we when\ncircle ci\nit does its job and runs our tests it\nwon't be using the junit platform so it\nwon't recognize a\nfailing test versus a passing test so we\nneed to make sure that we have that into\nour build.gradle file\nand what we're going to do is we're\ngoing to stage our build.gradle change\nso hit the plus sign okay it's staged\nand we're just going to say\nupdated gradle file i'm going to commit\nambush\nyou'll notice back on over here that we\njust updated greater file just now\ncool everything is connected you can\njust go into your get perspective with\nany clips and you're good to go\nnow we're ready now we're going to come\nback on over to our circle ci setup\nand we're going to start building now\nwhat this is going to do\nadd this config to your repo is to\ncreate a new branch on the user's\nproject called circle ci\ndash project setup and that is to add a\ncircle ci config template based on your\nlanguage which is located in a newly\nmade\ndot circle ci directory called\nconfig.yaml now this is done in a\nseparate branch so you can test your\nconfiguration like you would\nany other code add config it'll take you\nover to our pipeline you'll see that it\nis running\nand we can only hope that it works and\nit did wow cool\nthat took 25 seconds we can drill on\ninto this click on success right here\nand you can see step by step\nexactly what the config.yaml file is\ndoing for so it starts off with spinning\nup the environment\nwhich is creating a docker container and\nrunning this image in here as you can\nsee\nthe image is cached as circle ci open\njdk 8 jdk\nyou can see where we told it to do that\nin our config.yml file build.container\nwith this image and then it starts\npreparing environment variables where\nusing build environment variables all of\nthese are environment variables\nwe specifically declared our working\ndirectory as this repo where as you can\nsee our repository url is cesar set for\nyoutube on our github\nrepo name is usually set for youtube so\non and so forth and we're taken from\nbranch circle ci project setup\nand then it checks out our code this\nstep right here we'll check out our\nproject source code into our working\ndirectory\nand then we're restoring cache whereas\nwe don't have anything\ncached just yet because this is our\nfirst build next up is gradle\ndependencies\nobviously if you recall we added in a\ngradle dependency if i can find it right\nhere to run our junit tests\nthose along with the boilerplate gradle\ndependency code\nare being run right through here and\nthen we are saving cache to be used in\nfuture builds\nwhen we are going to be restoring the\ncash so in build two\nrestoring cash will pull from our save\nto cash and then we are running our\ngradle tests our junit test\nand how it's able to do that is because\nwe added those gradle dependencies for\nour junit tests now we can come back\nover and see\na little bit more in depth of what it\ndid so notice right here it says one\nbranch because right now we have\na master branch we refresh this and\nyou'll see now that we have two branches\nwe can view our two branches we have our\nmaster branch but we also just created\nthat new circle ci dash project\nsetup branch via circle ci i'm actually\ngoing to drill on into this\nwe'll obviously see that our latest\ncommit checks out\ncode builds test pass cool and if we\nwanted to we can click on this compare\ncompare and pull requests and i am going\nto create this pull request\nmerge it on over all right all checks\nhave passed that means our circle ci\njobs have passed and\nthis branch has no conflict with the\nbase branch we can look at all checks\nand that is ci circle ci build your test\npass on circle ci that is our circle ci\njob telling us\nthat our tests that we wrote passed and\nthis is safe to merge into our master\nbranch now what i'd like to do is merge\nour pull request into our master branch\nand this has taken everything from our\ncircleci project setup\nthat is different from our master branch\nobviously that is our config.yml file\nand we're going to merge\nthat pull request in other words that\ncode over\ninto our master branch that looks good\nconfirm\nmerge now you can see that we have our\nconfig.yaml file merge on over to our\nmaster branch now\nsomething to note is that one of the\nmain reasons why you have multiple\nbranches well there's a few main reasons\none\nyou're implementing a new feature so you\nhave a ticket you're working on this\nfeature and before you push it into the\nmaster branch for\nall of production to see you push into\nyour feature branch for\ncircle ci to run all your tests do the\ncircle ci jobs and make sure that your\ncode is good\nbut also for code reviews to ensure that\nyou are writing the code in the best\npossible way\nand if not then your team can help you\nwrite a little bit better code\nanother reason is you can have multiple\ndifferent branches you can have for\ndevelopment\nand that is what your development team\nworks on before it goes up to a\nqa branch where you have people whether\nthat's end users or qa testers\ntesting it and then up into production\nbranch and of course that goes to a\nproduction server so with this\nwhat we just did is we just added our\nconfig file to our master branch\nwe can delete that branch that we just\nhad because\nonce you merge it over into master\nthere's no reason to keep it other than\nfor\nrecord sake and for this particular\ninstance we're just going to delete it\nso you can just click on branches right\nhere\ncome on down you'll see your branches\nactive branches circle ci projects set\nup\nand we can trash that all right refresh\nthis page and you'll see that it is no\nlonger there as you can see\nwhat we have left is our master branch\nnow what i want to do is show you what\nhappens when we\nthrow in a failing test remember the one\nthat we wrote earlier right here\ninto the mix to see exactly what circle\nci\nwill do now before we do actually before\nwe do anything what we're going to have\nto do is\ncome over here right click and pull\nwe're going to pull down\nthe merge that code that we merged from\nour circle ci branch over\ninto our master branch so we're going to\npull that down we're going to merge when\npulling okay\nand good to go all right and that just\npulled down that config.yml file from\nour remote repository up on github down\nto our local repository repository here\non our local machine as you can see what\nwe can do now is stage our change but\nwe're going to hold off on that we need\nto right click on our caesar cipher\ngit repository directory right here and\nwe're going to come down or right here\nto switch to\nnew branch because we don't this is\ntechnically a new feature writing a test\nwell\nbranch name could be feature test\none all right that worked for me we're\ngonna check out new branch and\nfinish all right cool so now we're going\nto be pushing up to a new branch we're\ngoing to stage\nthese changes add a new test commit and\npush we can ensure that our branches\nfeature test\n1 next all right looks like everything\nworked\nand finished you can see that our\nconfig.yml file that we had pulled down\nfrom our master branch and pushed up to\nour new feature test one branch is\nrunning\nand then right down here you can also\nsee that when we merged over our\nconfig.yml file into our master branch\nit also re-ran that did our circle ci\njobs\nand obviously it was successful because\nof the same exact code but obviously it\nfailed here because we introduced a\nfailing test so let's take a look into\nthat within our gradle test that is\nwhere we expected it to fail\nobviously when you are in the real world\nyou're not\nknowingly introducing a failing test so\nwhat you would want to do is come down\nover here to gradle test and take a look\nat what it's telling us so you can see\nright down here task\ntest failed and it'll let you know\nexactly what failed so within our caesar\ncipher test class\nwe have our test ciphered message with\noffset of 11\nmethod that failed and obviously if we\ncome back on over here we can see that\nour method within our caesar ciphertest\nclass\ntest ciphered message with offset of 11\nfailed but now we discussed earlier in\nthis video\nwhy this was a failing test because\nwe're asserting that this value is equal\nto this value\nwhen in fact it is not and it gave us a\ngood look at\nwhat it looks like when we introduce a\nfailing test\ninto our code and this is what it looks\nlike in our circle\nci workflow build now remember just a\nsecond ago where\nwe had a successful circle ci build and\nit told us that we were able to\nmerge our pull requests we can't do that\nnow because we have a\nfailing circle ci build therefore\nthey're not going to let you merge that\nover to our master branch which is\ni like that and that is how you go from\nhaving nothing but a windows 10 laptop\nto a\nworking running job application up on\nyour github repository\nwith a continuous integration workflow\nthanks to a circle ci\nhope you guys enjoyed this video it was\na lot of work so please if you did make\nit this far if you did like the video if\nyou found\nany useful information out of it\ngive it a big thumbs up share it with\nyour friends and don't forget to check\nout\ncircle ci all the links are down in the\ndescription\nbelow\n[Music]\nyou\n",
  "words": [
    "guys",
    "faris",
    "yesterday",
    "uh",
    "live",
    "stream",
    "talking",
    "little",
    "bit",
    "kind",
    "wanted",
    "connect",
    "dots",
    "newcomers",
    "even",
    "advanced",
    "people",
    "later",
    "steps",
    "comes",
    "software",
    "development",
    "basically",
    "take",
    "everywhere",
    "downloading",
    "ide",
    "basically",
    "like",
    "two",
    "seconds",
    "video",
    "creating",
    "simple",
    "terminal",
    "application",
    "within",
    "ide",
    "writing",
    "tests",
    "terminal",
    "application",
    "gon",
    "na",
    "pushing",
    "github",
    "creating",
    "github",
    "repository",
    "whatnot",
    "going",
    "ahead",
    "using",
    "circle",
    "ci",
    "integrate",
    "continuous",
    "integration",
    "tests",
    "going",
    "run",
    "circle",
    "ci",
    "pushes",
    "master",
    "branch",
    "github",
    "repository",
    "saved",
    "beginners",
    "people",
    "little",
    "bit",
    "along",
    "experience",
    "comes",
    "ci",
    "cd",
    "workflows",
    "something",
    "going",
    "run",
    "one",
    "way",
    "another",
    "plan",
    "become",
    "professional",
    "software",
    "developer",
    "think",
    "anybody",
    "skill",
    "level",
    "beginner",
    "mean",
    "maybe",
    "take",
    "something",
    "away",
    "video",
    "least",
    "hope",
    "plans",
    "quick",
    "disclaimer",
    "sure",
    "good",
    "teacher",
    "sometimes",
    "tend",
    "gloss",
    "important",
    "facts",
    "may",
    "assume",
    "already",
    "know",
    "times",
    "may",
    "fall",
    "rabbit",
    "hole",
    "think",
    "know",
    "anything",
    "uh",
    "see",
    "goes",
    "done",
    "windows",
    "10",
    "make",
    "argument",
    "world",
    "maybe",
    "want",
    "using",
    "linux",
    "software",
    "developer",
    "want",
    "break",
    "barrier",
    "entry",
    "many",
    "different",
    "questions",
    "comes",
    "linux",
    "distros",
    "things",
    "nature",
    "going",
    "running",
    "windows",
    "10",
    "mac",
    "os",
    "exact",
    "thing",
    "also",
    "want",
    "mention",
    "get",
    "started",
    "circle",
    "ci",
    "sponsor",
    "video",
    "going",
    "going",
    "little",
    "bit",
    "uh",
    "say",
    "little",
    "bit",
    "going",
    "setting",
    "know",
    "ci",
    "continuous",
    "integration",
    "workflow",
    "simple",
    "terminal",
    "application",
    "circle",
    "ci",
    "whole",
    "lot",
    "want",
    "read",
    "notes",
    "took",
    "experience",
    "circle",
    "ci",
    "little",
    "bit",
    "advanced",
    "want",
    "little",
    "bit",
    "maybe",
    "hop",
    "continuous",
    "deployment",
    "side",
    "things",
    "well",
    "continuous",
    "integration",
    "like",
    "video",
    "circle",
    "ci",
    "notes",
    "professional",
    "service",
    "something",
    "see",
    "top",
    "companies",
    "like",
    "facebook",
    "spotify",
    "kickstarter",
    "gopro",
    "allows",
    "debugging",
    "ci",
    "cd",
    "pipelines",
    "ssh",
    "use",
    "workflows",
    "schedule",
    "jobs",
    "share",
    "data",
    "among",
    "jobs",
    "workflow",
    "associated",
    "workspace",
    "used",
    "transfer",
    "files",
    "downstream",
    "jobs",
    "workflow",
    "progresses",
    "caching",
    "dependencies",
    "another",
    "big",
    "one",
    "makes",
    "jobs",
    "faster",
    "circleci",
    "reusing",
    "data",
    "expensive",
    "fetch",
    "operations",
    "previous",
    "jobs",
    "use",
    "circle",
    "ci",
    "cli",
    "split",
    "tests",
    "mentioned",
    "available",
    "free",
    "performance",
    "plan",
    "however",
    "offer",
    "even",
    "like",
    "resource",
    "classes",
    "scaling",
    "concurrency",
    "docker",
    "lane",
    "caching",
    "anything",
    "mentioned",
    "everything",
    "mentioned",
    "went",
    "right",
    "head",
    "going",
    "leaving",
    "links",
    "appropriate",
    "circle",
    "ci",
    "page",
    "everything",
    "listed",
    "go",
    "ahead",
    "click",
    "fun",
    "falling",
    "rabbit",
    "hole",
    "whole",
    "lot",
    "learn",
    "comes",
    "cicd",
    "workflows",
    "things",
    "nature",
    "like",
    "said",
    "professional",
    "software",
    "development",
    "environment",
    "going",
    "using",
    "continuous",
    "integration",
    "likely",
    "continuous",
    "deployment",
    "definitely",
    "something",
    "worth",
    "learning",
    "ultimate",
    "goal",
    "right",
    "first",
    "things",
    "first",
    "downloads",
    "going",
    "download",
    "eclipse",
    "particular",
    "project",
    "going",
    "creating",
    "java",
    "terminal",
    "application",
    "caesar",
    "cipher",
    "explain",
    "second",
    "basically",
    "downloads",
    "download",
    "whatever",
    "suggests",
    "probably",
    "windows",
    "10",
    "click",
    "download",
    "going",
    "downloading",
    "right",
    "going",
    "executable",
    "file",
    "follow",
    "prompt",
    "sometimes",
    "different",
    "options",
    "like",
    "oh",
    "want",
    "custom",
    "settings",
    "stop",
    "default",
    "settings",
    "know",
    "want",
    "either",
    "one",
    "default",
    "eclipse",
    "knows",
    "need",
    "better",
    "know",
    "need",
    "something",
    "specific",
    "really",
    "love",
    "cryptography",
    "puzzles",
    "things",
    "nature",
    "fact",
    "caesar",
    "cipher",
    "simple",
    "cipher",
    "something",
    "think",
    "able",
    "catch",
    "already",
    "know",
    "program",
    "fairly",
    "simple",
    "already",
    "know",
    "mind",
    "comes",
    "tests",
    "going",
    "today",
    "know",
    "caesar",
    "cipher",
    "caesar",
    "cipher",
    "encryption",
    "technique",
    "simple",
    "encryption",
    "technique",
    "take",
    "alphabet",
    "shift",
    "certain",
    "amount",
    "letters",
    "write",
    "message",
    "coding",
    "ability",
    "take",
    "message",
    "throw",
    "code",
    "code",
    "going",
    "spit",
    "encrypted",
    "message",
    "using",
    "caesar",
    "cipher",
    "right",
    "want",
    "able",
    "pull",
    "eclipse",
    "going",
    "use",
    "default",
    "ask",
    "please",
    "eclipse",
    "workspace",
    "project",
    "going",
    "saved",
    "going",
    "get",
    "page",
    "first",
    "open",
    "eclipse",
    "going",
    "try",
    "recommend",
    "going",
    "try",
    "steer",
    "right",
    "direction",
    "go",
    "terminal",
    "application",
    "video",
    "take",
    "look",
    "overview",
    "maybe",
    "tutorials",
    "samples",
    "exposed",
    "going",
    "within",
    "ide",
    "better",
    "able",
    "use",
    "useful",
    "knowing",
    "ide",
    "important",
    "knowing",
    "language",
    "important",
    "knowing",
    "write",
    "tests",
    "plays",
    "part",
    "software",
    "developer",
    "going",
    "close",
    "see",
    "give",
    "options",
    "right",
    "come",
    "file",
    "click",
    "new",
    "window",
    "right",
    "normally",
    "would",
    "potentially",
    "come",
    "create",
    "java",
    "project",
    "since",
    "going",
    "creating",
    "continuous",
    "integration",
    "workflow",
    "going",
    "need",
    "come",
    "going",
    "creating",
    "gradle",
    "project",
    "see",
    "gradle",
    "see",
    "gradle",
    "project",
    "going",
    "click",
    "click",
    "next",
    "going",
    "name",
    "project",
    "caesar",
    "cipher",
    "right",
    "next",
    "think",
    "everything",
    "else",
    "fine",
    "going",
    "click",
    "finish",
    "going",
    "lot",
    "work",
    "seem",
    "intimidated",
    "got",
    "going",
    "source",
    "main",
    "java",
    "directory",
    "caesar",
    "cipher",
    "package",
    "already",
    "file",
    "worry",
    "need",
    "create",
    "gradle",
    "project",
    "order",
    "work",
    "properly",
    "implement",
    "continuous",
    "integration",
    "circle",
    "ci",
    "want",
    "obviously",
    "see",
    "source",
    "main",
    "java",
    "create",
    "right",
    "want",
    "keep",
    "stuff",
    "closed",
    "see",
    "source",
    "file",
    "right",
    "going",
    "come",
    "right",
    "click",
    "main",
    "going",
    "hover",
    "new",
    "going",
    "go",
    "class",
    "java",
    "class",
    "going",
    "name",
    "naming",
    "conventions",
    "necessarily",
    "matter",
    "much",
    "comes",
    "project",
    "comes",
    "java",
    "classes",
    "make",
    "sure",
    "capitalize",
    "every",
    "single",
    "word",
    "like",
    "going",
    "caesar",
    "cipher",
    "need",
    "make",
    "main",
    "right",
    "make",
    "later",
    "finish",
    "part",
    "people",
    "get",
    "think",
    "know",
    "go",
    "like",
    "start",
    "typing",
    "like",
    "start",
    "typing",
    "well",
    "got",
    "think",
    "whatever",
    "project",
    "build",
    "going",
    "building",
    "caesar",
    "cipher",
    "obviously",
    "understanding",
    "caesar",
    "cipher",
    "notebook",
    "come",
    "handy",
    "could",
    "write",
    "exactly",
    "need",
    "objects",
    "using",
    "let",
    "talk",
    "going",
    "need",
    "alphabet",
    "order",
    "implement",
    "caesar",
    "cipher",
    "going",
    "shift",
    "certain",
    "amount",
    "characters",
    "alphabet",
    "going",
    "need",
    "alphabet",
    "start",
    "also",
    "going",
    "need",
    "able",
    "implement",
    "shift",
    "offset",
    "also",
    "going",
    "message",
    "offset",
    "going",
    "turn",
    "ciphered",
    "message",
    "let",
    "start",
    "talk",
    "towards",
    "end",
    "coding",
    "right",
    "good",
    "place",
    "pause",
    "red",
    "underline",
    "right",
    "say",
    "pause",
    "explaining",
    "exactly",
    "within",
    "public",
    "string",
    "cipher",
    "input",
    "parameters",
    "cipher",
    "cipher",
    "say",
    "cipher",
    "message",
    "encrypted",
    "encrypted",
    "message",
    "need",
    "within",
    "need",
    "original",
    "message",
    "need",
    "offset",
    "offset",
    "applying",
    "message",
    "thing",
    "want",
    "make",
    "sure",
    "offset",
    "going",
    "going",
    "integer",
    "going",
    "number",
    "offset",
    "exceed",
    "26",
    "offset",
    "26",
    "letters",
    "set",
    "module",
    "equals",
    "alphabet",
    "size",
    "allow",
    "avoid",
    "overflowing",
    "25",
    "basically",
    "another",
    "way",
    "write",
    "emma",
    "write",
    "like",
    "offset",
    "equals",
    "offset",
    "module",
    "alphabet",
    "size",
    "wondering",
    "let",
    "take",
    "step",
    "back",
    "typed",
    "beginning",
    "something",
    "already",
    "declared",
    "al",
    "alphabet",
    "size",
    "control",
    "command",
    "space",
    "alphabet",
    "size",
    "okay",
    "type",
    "every",
    "single",
    "time",
    "want",
    "lot",
    "little",
    "shortcuts",
    "like",
    "right",
    "exact",
    "thing",
    "right",
    "case",
    "want",
    "see",
    "makes",
    "little",
    "bit",
    "sense",
    "head",
    "traditional",
    "manner",
    "looking",
    "things",
    "going",
    "take",
    "going",
    "string",
    "declared",
    "character",
    "array",
    "called",
    "character",
    "string",
    "message",
    "going",
    "take",
    "message",
    "string",
    "message",
    "going",
    "turn",
    "characters",
    "store",
    "characters",
    "character",
    "array",
    "25",
    "characters",
    "within",
    "string",
    "stored",
    "within",
    "message",
    "could",
    "say",
    "today",
    "one",
    "characters",
    "stored",
    "characters",
    "character",
    "array",
    "called",
    "character",
    "going",
    "shift",
    "shifting",
    "offset",
    "uh",
    "honesty",
    "could",
    "name",
    "offset",
    "let",
    "stay",
    "consistent",
    "offset",
    "going",
    "method",
    "set",
    "going",
    "create",
    "new",
    "method",
    "going",
    "calling",
    "parameters",
    "character",
    "character",
    "array",
    "offset",
    "code",
    "right",
    "calling",
    "method",
    "right",
    "basically",
    "whatever",
    "call",
    "method",
    "offset",
    "offsets",
    "message",
    "want",
    "return",
    "new",
    "notice",
    "took",
    "return",
    "new",
    "right",
    "yelling",
    "us",
    "need",
    "return",
    "statement",
    "return",
    "new",
    "string",
    "character",
    "basically",
    "go",
    "string",
    "cipher",
    "go",
    "statements",
    "right",
    "end",
    "character",
    "converting",
    "string",
    "storing",
    "string",
    "onto",
    "offset",
    "throw",
    "logic",
    "whenever",
    "call",
    "method",
    "right",
    "actually",
    "something",
    "right",
    "logic",
    "right",
    "let",
    "explain",
    "second",
    "one",
    "yelling",
    "us",
    "reason",
    "offset",
    "yelling",
    "us",
    "need",
    "create",
    "method",
    "going",
    "right",
    "going",
    "add",
    "little",
    "bit",
    "logic",
    "done",
    "offset",
    "char",
    "get",
    "second",
    "let",
    "take",
    "back",
    "fourth",
    "regular",
    "loop",
    "going",
    "take",
    "anyway",
    "know",
    "hey",
    "regular",
    "declared",
    "integer",
    "going",
    "using",
    "loop",
    "equaled",
    "zero",
    "right",
    "equals",
    "zero",
    "less",
    "character",
    "length",
    "going",
    "whatever",
    "loop",
    "every",
    "time",
    "rendition",
    "loop",
    "adding",
    "1",
    "next",
    "time",
    "comes",
    "going",
    "going",
    "equal",
    "1",
    "going",
    "equal",
    "2",
    "thing",
    "character",
    "length",
    "character",
    "length",
    "value",
    "many",
    "characters",
    "within",
    "character",
    "array",
    "determined",
    "obviously",
    "storing",
    "message",
    "individual",
    "character",
    "array",
    "previously",
    "discussed",
    "many",
    "characters",
    "like",
    "said",
    "says",
    "day",
    "today",
    "however",
    "many",
    "characters",
    "let",
    "say",
    "15",
    "characters",
    "right",
    "basically",
    "equals",
    "less",
    "15",
    "going",
    "keep",
    "loop",
    "also",
    "within",
    "loop",
    "character",
    "running",
    "every",
    "character",
    "within",
    "message",
    "represents",
    "zero",
    "equals",
    "zero",
    "go",
    "loop",
    "equal",
    "zero",
    "equal",
    "one",
    "two",
    "three",
    "four",
    "represent",
    "position",
    "character",
    "within",
    "character",
    "array",
    "also",
    "running",
    "method",
    "created",
    "throw",
    "logic",
    "second",
    "message",
    "traversal",
    "us",
    "implementing",
    "caesar",
    "cipher",
    "character",
    "message",
    "storing",
    "within",
    "right",
    "need",
    "offset",
    "character",
    "throw",
    "logic",
    "mentioned",
    "previous",
    "method",
    "going",
    "letter",
    "letter",
    "z",
    "going",
    "assume",
    "every",
    "character",
    "message",
    "lowercased",
    "representing",
    "lowercase",
    "lowercase",
    "z",
    "care",
    "uppercase",
    "control",
    "message",
    "decided",
    "together",
    "within",
    "within",
    "offset",
    "char",
    "also",
    "allowing",
    "us",
    "left",
    "rotation",
    "going",
    "looking",
    "lower",
    "bounds",
    "statement",
    "right",
    "account",
    "left",
    "rotation",
    "perspective",
    "letter",
    "e",
    "want",
    "shift",
    "whole",
    "entire",
    "alphabet",
    "around",
    "letter",
    "e",
    "three",
    "amount",
    "three",
    "could",
    "e",
    "f",
    "g",
    "h",
    "could",
    "e",
    "c",
    "b",
    "three",
    "either",
    "way",
    "allowing",
    "left",
    "rotation",
    "wanted",
    "right",
    "rotation",
    "well",
    "well",
    "let",
    "add",
    "basically",
    "exact",
    "thing",
    "got",
    "going",
    "want",
    "shift",
    "around",
    "less",
    "greater",
    "going",
    "greater",
    "last",
    "character",
    "alphabet",
    "letter",
    "z",
    "determined",
    "also",
    "want",
    "c",
    "minus",
    "alphabet",
    "size",
    "c",
    "plus",
    "alphabet",
    "size",
    "change",
    "things",
    "obviously",
    "change",
    "return",
    "zero",
    "return",
    "c",
    "caesar",
    "cipher",
    "however",
    "since",
    "everything",
    "eclipse",
    "way",
    "want",
    "run",
    "order",
    "make",
    "cleaner",
    "want",
    "create",
    "file",
    "going",
    "creating",
    "main",
    "method",
    "within",
    "file",
    "basically",
    "going",
    "operations",
    "going",
    "say",
    "hey",
    "run",
    "whenever",
    "click",
    "run",
    "button",
    "going",
    "look",
    "main",
    "method",
    "going",
    "run",
    "main",
    "method",
    "start",
    "basically",
    "code",
    "main",
    "method",
    "get",
    "come",
    "source",
    "main",
    "right",
    "click",
    "new",
    "going",
    "create",
    "new",
    "java",
    "class",
    "java",
    "class",
    "going",
    "name",
    "main",
    "remember",
    "capital",
    "method",
    "stubs",
    "would",
    "like",
    "create",
    "actually",
    "going",
    "create",
    "main",
    "method",
    "going",
    "check",
    "click",
    "finish",
    "going",
    "within",
    "main",
    "going",
    "calling",
    "cipher",
    "also",
    "going",
    "determining",
    "hard",
    "coding",
    "purpose",
    "actually",
    "see",
    "everything",
    "works",
    "going",
    "message",
    "going",
    "offset",
    "could",
    "prompt",
    "user",
    "actually",
    "wanted",
    "type",
    "message",
    "type",
    "offset",
    "know",
    "figure",
    "second",
    "going",
    "going",
    "gon",
    "na",
    "caesar",
    "cipher",
    "need",
    "caesar",
    "cipher",
    "let",
    "let",
    "take",
    "second",
    "right",
    "know",
    "previously",
    "going",
    "whole",
    "entire",
    "code",
    "explaining",
    "end",
    "think",
    "would",
    "make",
    "little",
    "bit",
    "sense",
    "okay",
    "let",
    "take",
    "back",
    "step",
    "caesar",
    "cipher",
    "right",
    "whole",
    "entire",
    "representation",
    "file",
    "right",
    "class",
    "say",
    "class",
    "caesar",
    "cipher",
    "created",
    "instance",
    "class",
    "within",
    "main",
    "line",
    "right",
    "caesar",
    "cipher",
    "obviously",
    "referring",
    "class",
    "named",
    "caesar",
    "cipher",
    "could",
    "name",
    "whatever",
    "wanted",
    "could",
    "name",
    "bob",
    "long",
    "call",
    "bob",
    "matter",
    "conventions",
    "name",
    "exact",
    "thing",
    "lower",
    "case",
    "gives",
    "ability",
    "call",
    "anything",
    "object",
    "within",
    "class",
    "list",
    "right",
    "lot",
    "objects",
    "within",
    "class",
    "start",
    "typing",
    "obviously",
    "filter",
    "hit",
    "enter",
    "asking",
    "us",
    "okay",
    "need",
    "fill",
    "message",
    "fill",
    "offset",
    "could",
    "create",
    "variable",
    "message",
    "let",
    "message",
    "offset",
    "everything",
    "separate",
    "comes",
    "particular",
    "class",
    "one",
    "right",
    "let",
    "create",
    "message",
    "um",
    "message",
    "messages",
    "string",
    "today",
    "remember",
    "take",
    "account",
    "special",
    "symbols",
    "uppercase",
    "right",
    "think",
    "ignore",
    "special",
    "symbols",
    "100",
    "sure",
    "right",
    "today",
    "going",
    "throw",
    "supersize",
    "caesar",
    "decipher",
    "going",
    "ant",
    "offset",
    "going",
    "put",
    "offset",
    "gon",
    "na",
    "format",
    "little",
    "bit",
    "better",
    "gon",
    "na",
    "keep",
    "gon",
    "na",
    "keep",
    "got",
    "going",
    "come",
    "click",
    "run",
    "main",
    "java",
    "work",
    "tell",
    "us",
    "anything",
    "printed",
    "work",
    "want",
    "right",
    "let",
    "take",
    "second",
    "right",
    "made",
    "mistake",
    "made",
    "mistake",
    "obviously",
    "test",
    "code",
    "thoroughly",
    "beforehand",
    "see",
    "ciphered",
    "message",
    "explain",
    "little",
    "bit",
    "second",
    "suffered",
    "message",
    "also",
    "shifted",
    "spaces",
    "see",
    "space",
    "space",
    "space",
    "space",
    "three",
    "characters",
    "three",
    "characters",
    "three",
    "characters",
    "three",
    "characters",
    "space",
    "f",
    "three",
    "characters",
    "f",
    "three",
    "characters",
    "f",
    "five",
    "characters",
    "five",
    "characters",
    "f",
    "capital",
    "f",
    "forgot",
    "basically",
    "ignore",
    "spaces",
    "within",
    "character",
    "array",
    "within",
    "cipher",
    "going",
    "within",
    "character",
    "going",
    "statement",
    "right",
    "done",
    "going",
    "save",
    "character",
    "equal",
    "space",
    "going",
    "offset",
    "character",
    "within",
    "method",
    "call",
    "work",
    "right",
    "let",
    "test",
    "cool",
    "right",
    "everything",
    "printing",
    "exactly",
    "want",
    "original",
    "message",
    "offset",
    "ciphered",
    "message",
    "actually",
    "little",
    "bit",
    "redundant",
    "code",
    "since",
    "printing",
    "ciphered",
    "message",
    "running",
    "code",
    "right",
    "need",
    "code",
    "right",
    "could",
    "delete",
    "also",
    "could",
    "run",
    "code",
    "assign",
    "could",
    "say",
    "string",
    "ciphered",
    "message",
    "basically",
    "let",
    "let",
    "little",
    "bit",
    "clean",
    "little",
    "bit",
    "little",
    "bit",
    "cleaner",
    "right",
    "exact",
    "thing",
    "exact",
    "thing",
    "right",
    "cool",
    "exactly",
    "want",
    "printed",
    "code",
    "seems",
    "working",
    "planned",
    "allow",
    "take",
    "basically",
    "order",
    "operations",
    "happens",
    "eclipse",
    "runs",
    "code",
    "time",
    "click",
    "run",
    "button",
    "time",
    "prints",
    "got",
    "going",
    "console",
    "whenever",
    "start",
    "click",
    "run",
    "button",
    "looks",
    "main",
    "method",
    "main",
    "method",
    "right",
    "main",
    "class",
    "runs",
    "code",
    "goes",
    "goes",
    "line",
    "line",
    "line",
    "7",
    "declaring",
    "message",
    "want",
    "message",
    "say",
    "today",
    "message",
    "want",
    "ciphered",
    "line",
    "eight",
    "determining",
    "offset",
    "message",
    "ciphered",
    "value",
    "pretty",
    "simple",
    "stuff",
    "line",
    "10",
    "creating",
    "instance",
    "class",
    "caesar",
    "cipher",
    "giving",
    "name",
    "caesar",
    "cipher",
    "every",
    "time",
    "call",
    "caesar",
    "cipher",
    "right",
    "basically",
    "accessing",
    "putting",
    "hand",
    "class",
    "caesar",
    "cipher",
    "able",
    "access",
    "code",
    "within",
    "curly",
    "brackets",
    "right",
    "code",
    "even",
    "access",
    "letter",
    "letter",
    "z",
    "alphabet",
    "size",
    "objects",
    "creating",
    "instance",
    "caesar",
    "cipher",
    "able",
    "access",
    "objects",
    "exactly",
    "line",
    "line",
    "11",
    "let",
    "look",
    "code",
    "executed",
    "remember",
    "code",
    "right",
    "side",
    "equal",
    "sign",
    "whatever",
    "result",
    "going",
    "stored",
    "ciphered",
    "message",
    "like",
    "value",
    "today",
    "stored",
    "string",
    "message",
    "value",
    "12",
    "stored",
    "offset",
    "every",
    "time",
    "use",
    "offset",
    "representation",
    "12",
    "value",
    "storing",
    "every",
    "time",
    "use",
    "ciphered",
    "message",
    "right",
    "accessing",
    "value",
    "stored",
    "running",
    "code",
    "basically",
    "run",
    "code",
    "caesar",
    "cipher",
    "obviously",
    "instance",
    "caesar",
    "cipher",
    "class",
    "say",
    "want",
    "specific",
    "object",
    "choose",
    "dip",
    "hand",
    "said",
    "hey",
    "want",
    "access",
    "method",
    "cipher",
    "going",
    "accessing",
    "method",
    "cipher",
    "within",
    "class",
    "caesar",
    "cipher",
    "going",
    "passing",
    "parameters",
    "string",
    "message",
    "today",
    "int",
    "offset",
    "given",
    "value",
    "right",
    "let",
    "get",
    "within",
    "cipher",
    "offset",
    "equal",
    "message",
    "right",
    "equal",
    "today",
    "method",
    "cipher",
    "going",
    "start",
    "running",
    "code",
    "line",
    "10",
    "runs",
    "line",
    "10",
    "runs",
    "line",
    "11",
    "remember",
    "line",
    "11",
    "turning",
    "string",
    "called",
    "message",
    "today",
    "character",
    "array",
    "called",
    "character",
    "line",
    "12",
    "going",
    "calling",
    "offset",
    "method",
    "offset",
    "right",
    "passing",
    "parameters",
    "character",
    "offset",
    "basically",
    "line",
    "12",
    "going",
    "access",
    "code",
    "going",
    "run",
    "code",
    "going",
    "run",
    "loop",
    "long",
    "allows",
    "going",
    "hop",
    "statement",
    "long",
    "character",
    "equal",
    "space",
    "going",
    "run",
    "line",
    "remember",
    "line",
    "19",
    "running",
    "code",
    "actually",
    "going",
    "storing",
    "within",
    "character",
    "code",
    "right",
    "us",
    "uh",
    "calling",
    "offset",
    "char",
    "method",
    "passing",
    "parameters",
    "every",
    "time",
    "come",
    "letter",
    "run",
    "code",
    "return",
    "new",
    "letter",
    "stored",
    "within",
    "character",
    "basically",
    "comes",
    "h",
    "h",
    "offset",
    "12",
    "h",
    "equals",
    "return",
    "character",
    "array",
    "go",
    "offset",
    "12",
    "return",
    "stored",
    "character",
    "array",
    "forth",
    "get",
    "idea",
    "end",
    "character",
    "array",
    "line",
    "13",
    "returning",
    "new",
    "string",
    "character",
    "longer",
    "equals",
    "character",
    "array",
    "message",
    "today",
    "equals",
    "character",
    "array",
    "ciphered",
    "message",
    "time",
    "mid",
    "cu",
    "supposed",
    "mean",
    "anything",
    "whole",
    "point",
    "ciphering",
    "message",
    "right",
    "stored",
    "within",
    "line",
    "12",
    "ran",
    "basically",
    "code",
    "ran",
    "code",
    "love",
    "cipher",
    "method",
    "remember",
    "last",
    "thing",
    "cipher",
    "method",
    "return",
    "character",
    "going",
    "storing",
    "remember",
    "everything",
    "talked",
    "right",
    "going",
    "storing",
    "character",
    "returned",
    "cipher",
    "method",
    "string",
    "ciphered",
    "message",
    "follow",
    "printing",
    "original",
    "message",
    "today",
    "printing",
    "offset",
    "printing",
    "ciphered",
    "message",
    "ran",
    "code",
    "time",
    "mid",
    "q",
    "going",
    "say",
    "exactly",
    "code",
    "works",
    "let",
    "write",
    "tests",
    "already",
    "seizure",
    "already",
    "created",
    "source",
    "main",
    "going",
    "create",
    "test",
    "source",
    "test",
    "makes",
    "sense",
    "right",
    "going",
    "right",
    "click",
    "go",
    "new",
    "go",
    "class",
    "actually",
    "going",
    "come",
    "going",
    "create",
    "junit",
    "test",
    "case",
    "since",
    "writing",
    "tests",
    "caesar",
    "actually",
    "going",
    "name",
    "caesar",
    "cipher",
    "test",
    "change",
    "going",
    "make",
    "select",
    "new",
    "junit",
    "jupiter",
    "test",
    "instead",
    "junit",
    "4",
    "test",
    "going",
    "click",
    "finish",
    "going",
    "add",
    "junit",
    "5",
    "library",
    "build",
    "path",
    "okay",
    "time",
    "write",
    "tests",
    "hope",
    "work",
    "get",
    "back",
    "right",
    "two",
    "tests",
    "work",
    "telling",
    "us",
    "work",
    "let",
    "explain",
    "little",
    "bit",
    "tests",
    "actually",
    "first",
    "first",
    "foremost",
    "create",
    "instance",
    "caesar",
    "cipher",
    "within",
    "test",
    "main",
    "need",
    "access",
    "first",
    "test",
    "test",
    "ciphered",
    "message",
    "offset",
    "test",
    "names",
    "typically",
    "specific",
    "actually",
    "avoid",
    "type",
    "confusion",
    "maybe",
    "want",
    "test",
    "separate",
    "message",
    "offset",
    "want",
    "make",
    "sure",
    "specific",
    "assert",
    "equals",
    "within",
    "test",
    "basically",
    "saying",
    "left",
    "side",
    "comma",
    "right",
    "equal",
    "right",
    "side",
    "comma",
    "asserting",
    "two",
    "values",
    "equal",
    "let",
    "actually",
    "take",
    "right",
    "side",
    "first",
    "passing",
    "message",
    "today",
    "offsetting",
    "well",
    "already",
    "done",
    "know",
    "pass",
    "message",
    "today",
    "setting",
    "12",
    "see",
    "ciphered",
    "message",
    "time",
    "mid",
    "cue",
    "see",
    "exact",
    "right",
    "yes",
    "value",
    "value",
    "test",
    "pass",
    "second",
    "test",
    "testing",
    "empty",
    "stream",
    "exactly",
    "throwing",
    "empty",
    "string",
    "within",
    "cipher",
    "right",
    "saying",
    "offset",
    "12",
    "since",
    "letters",
    "empty",
    "string",
    "get",
    "back",
    "exact",
    "thing",
    "empty",
    "string",
    "theory",
    "test",
    "pass",
    "well",
    "matter",
    "fact",
    "let",
    "go",
    "ahead",
    "test",
    "right",
    "click",
    "come",
    "run",
    "right",
    "going",
    "run",
    "junit",
    "test",
    "right",
    "cool",
    "nice",
    "tested",
    "right",
    "test",
    "ciphered",
    "message",
    "set",
    "12",
    "passed",
    "test",
    "empty",
    "string",
    "passed",
    "let",
    "let",
    "let",
    "failing",
    "test",
    "right",
    "well",
    "failing",
    "test",
    "quick",
    "testing",
    "ciphered",
    "message",
    "offset",
    "11",
    "change",
    "offset",
    "exact",
    "thing",
    "changed",
    "offset",
    "12",
    "11",
    "kept",
    "value",
    "meaning",
    "wrong",
    "going",
    "come",
    "run",
    "j",
    "unit",
    "test",
    "boom",
    "failed",
    "two",
    "reasons",
    "test",
    "fail",
    "one",
    "obviously",
    "test",
    "written",
    "incorrectly",
    "two",
    "main",
    "reason",
    "write",
    "tests",
    "shows",
    "broken",
    "code",
    "know",
    "right",
    "right",
    "12",
    "offset",
    "12",
    "know",
    "value",
    "equal",
    "value",
    "means",
    "code",
    "wrong",
    "somewhere",
    "means",
    "offset",
    "incorrect",
    "maybe",
    "way",
    "put",
    "array",
    "maybe",
    "added",
    "one",
    "offset",
    "weird",
    "array",
    "started",
    "zero",
    "could",
    "anything",
    "start",
    "digging",
    "test",
    "failing",
    "actually",
    "going",
    "comment",
    "highlight",
    "control",
    "slash",
    "comment",
    "save",
    "cool",
    "right",
    "cool",
    "know",
    "tests",
    "work",
    "going",
    "run",
    "one",
    "time",
    "make",
    "sure",
    "junit",
    "tests",
    "okay",
    "work",
    "actually",
    "going",
    "come",
    "back",
    "file",
    "come",
    "click",
    "run",
    "make",
    "sure",
    "works",
    "okay",
    "works",
    "exactly",
    "work",
    "want",
    "test",
    "next",
    "step",
    "creating",
    "github",
    "repo",
    "pushing",
    "code",
    "github",
    "repo",
    "always",
    "want",
    "make",
    "sure",
    "test",
    "code",
    "test",
    "test",
    "push",
    "remote",
    "repository",
    "want",
    "come",
    "github",
    "account",
    "obviously",
    "logged",
    "case",
    "want",
    "follow",
    "want",
    "come",
    "click",
    "new",
    "right",
    "one",
    "regardless",
    "screen",
    "hit",
    "new",
    "repository",
    "creating",
    "new",
    "repository",
    "repository",
    "name",
    "going",
    "name",
    "caesarscipher",
    "youtube",
    "could",
    "make",
    "public",
    "since",
    "creating",
    "video",
    "wo",
    "seeing",
    "make",
    "public",
    "eventually",
    "probably",
    "whenever",
    "video",
    "goes",
    "live",
    "going",
    "make",
    "private",
    "going",
    "initialize",
    "readme",
    "wanted",
    "creator",
    "read",
    "could",
    "eclipse",
    "going",
    "create",
    "repository",
    "empty",
    "repository",
    "looks",
    "like",
    "going",
    "hop",
    "back",
    "eclipse",
    "want",
    "hop",
    "package",
    "explorer",
    "window",
    "right",
    "obviously",
    "cesar",
    "saver",
    "project",
    "going",
    "right",
    "click",
    "caesar",
    "cipher",
    "come",
    "team",
    "team",
    "see",
    "shared",
    "project",
    "click",
    "right",
    "configure",
    "git",
    "repository",
    "basically",
    "right",
    "creating",
    "local",
    "git",
    "repository",
    "way",
    "consistent",
    "remote",
    "git",
    "repository",
    "created",
    "github",
    "particular",
    "instance",
    "going",
    "user",
    "create",
    "repository",
    "parent",
    "folder",
    "project",
    "going",
    "click",
    "going",
    "come",
    "going",
    "check",
    "going",
    "create",
    "repository",
    "right",
    "going",
    "click",
    "finish",
    "good",
    "go",
    "want",
    "different",
    "ways",
    "different",
    "ways",
    "mentioned",
    "video",
    "order",
    "take",
    "full",
    "advantage",
    "tools",
    "within",
    "eclipse",
    "going",
    "come",
    "right",
    "upper",
    "right",
    "going",
    "hover",
    "open",
    "perspective",
    "click",
    "going",
    "come",
    "git",
    "going",
    "click",
    "going",
    "open",
    "eclipse",
    "case",
    "whatever",
    "reason",
    "click",
    "help",
    "come",
    "eclipse",
    "marketplace",
    "type",
    "egit",
    "hit",
    "enter",
    "install",
    "right",
    "says",
    "install",
    "option",
    "perspective",
    "right",
    "get",
    "perspective",
    "project",
    "get",
    "repository",
    "actually",
    "created",
    "project",
    "want",
    "come",
    "get",
    "staging",
    "see",
    "middle",
    "tab",
    "get",
    "staging",
    "notice",
    "unstaged",
    "meaning",
    "inconsistent",
    "remote",
    "repository",
    "want",
    "stage",
    "want",
    "type",
    "initial",
    "commit",
    "commit",
    "want",
    "point",
    "something",
    "come",
    "author",
    "committer",
    "may",
    "notice",
    "actual",
    "pc",
    "user",
    "author",
    "committer",
    "want",
    "pc",
    "user",
    "want",
    "commit",
    "github",
    "repository",
    "show",
    "github",
    "user",
    "otherwise",
    "show",
    "user",
    "actually",
    "say",
    "whatever",
    "pc",
    "name",
    "want",
    "order",
    "fix",
    "come",
    "window",
    "come",
    "preferences",
    "type",
    "git",
    "say",
    "team",
    "get",
    "configuration",
    "want",
    "type",
    "configuration",
    "right",
    "open",
    "table",
    "open",
    "table",
    "click",
    "user",
    "settings",
    "actually",
    "table",
    "empty",
    "wo",
    "anything",
    "already",
    "added",
    "user",
    "want",
    "want",
    "add",
    "entry",
    "want",
    "type",
    "user",
    "dot",
    "name",
    "value",
    "going",
    "github",
    "username",
    "mine",
    "obviously",
    "farsnite",
    "want",
    "add",
    "add",
    "entry",
    "value",
    "going",
    "github",
    "email",
    "click",
    "add",
    "want",
    "apply",
    "apply",
    "close",
    "change",
    "author",
    "committer",
    "added",
    "exit",
    "start",
    "typing",
    "github",
    "username",
    "mine",
    "far",
    "knight",
    "click",
    "right",
    "add",
    "far",
    "night",
    "thing",
    "committer",
    "exact",
    "thing",
    "committer",
    "make",
    "sure",
    "consistent",
    "whatever",
    "github",
    "username",
    "user",
    "email",
    "show",
    "drop",
    "type",
    "username",
    "less",
    "sign",
    "type",
    "email",
    "greater",
    "sign",
    "see",
    "formatted",
    "like",
    "going",
    "commit",
    "push",
    "master",
    "branch",
    "going",
    "connect",
    "local",
    "get",
    "repository",
    "right",
    "remote",
    "git",
    "repository",
    "right",
    "make",
    "sure",
    "https",
    "selected",
    "come",
    "click",
    "copy",
    "button",
    "right",
    "go",
    "back",
    "eclipse",
    "location",
    "uri",
    "want",
    "paste",
    "copied",
    "user",
    "password",
    "probably",
    "autofill",
    "like",
    "mine",
    "user",
    "type",
    "github",
    "email",
    "password",
    "type",
    "github",
    "password",
    "local",
    "repository",
    "going",
    "able",
    "communicate",
    "remote",
    "repository",
    "within",
    "github",
    "account",
    "okay",
    "preview",
    "everything",
    "looks",
    "good",
    "go",
    "preview",
    "okay",
    "push",
    "cool",
    "close",
    "pushed",
    "code",
    "files",
    "repository",
    "right",
    "click",
    "f5",
    "refresh",
    "see",
    "files",
    "cool",
    "time",
    "implement",
    "continuous",
    "integration",
    "workflow",
    "using",
    "circle",
    "ci",
    "link",
    "going",
    "top",
    "description",
    "click",
    "take",
    "page",
    "right",
    "obviously",
    "want",
    "sign",
    "github",
    "already",
    "signed",
    "going",
    "log",
    "github",
    "wherever",
    "ends",
    "taking",
    "whether",
    "project",
    "dashboard",
    "workflow",
    "pipelines",
    "wherever",
    "may",
    "come",
    "add",
    "projects",
    "notice",
    "github",
    "projects",
    "listed",
    "private",
    "public",
    "obviously",
    "caesar",
    "cipher",
    "youtube",
    "project",
    "want",
    "set",
    "project",
    "obviously",
    "project",
    "gradle",
    "java",
    "project",
    "created",
    "project",
    "greater",
    "project",
    "instead",
    "java",
    "project",
    "order",
    "work",
    "going",
    "start",
    "building",
    "need",
    "make",
    "change",
    "first",
    "back",
    "going",
    "eclipse",
    "change",
    "back",
    "java",
    "perspective",
    "right",
    "upper",
    "left",
    "going",
    "come",
    "file",
    "going",
    "add",
    "two",
    "dependencies",
    "going",
    "add",
    "new",
    "test",
    "implementation",
    "going",
    "add",
    "new",
    "test",
    "runtime",
    "going",
    "keep",
    "old",
    "test",
    "implementation",
    "well",
    "reason",
    "junit",
    "test",
    "wrote",
    "within",
    "caesar",
    "cipher",
    "tests",
    "using",
    "see",
    "junit",
    "mean",
    "see",
    "junit",
    "five",
    "right",
    "project",
    "could",
    "chosen",
    "junit",
    "four",
    "want",
    "use",
    "latest",
    "greatest",
    "j",
    "unit",
    "five",
    "within",
    "file",
    "need",
    "ensure",
    "test",
    "implementation",
    "version",
    "5",
    "implement",
    "test",
    "runtime",
    "junit",
    "jupiter",
    "version",
    "5",
    "exact",
    "thing",
    "also",
    "want",
    "note",
    "something",
    "previously",
    "forgot",
    "add",
    "file",
    "underneath",
    "dependencies",
    "going",
    "add",
    "test",
    "within",
    "test",
    "going",
    "use",
    "junit",
    "platform",
    "otherwise",
    "circle",
    "ci",
    "job",
    "runs",
    "tests",
    "wo",
    "using",
    "junit",
    "platform",
    "wo",
    "recognize",
    "failing",
    "test",
    "versus",
    "passing",
    "test",
    "need",
    "make",
    "sure",
    "file",
    "going",
    "going",
    "stage",
    "change",
    "hit",
    "plus",
    "sign",
    "okay",
    "staged",
    "going",
    "say",
    "updated",
    "gradle",
    "file",
    "going",
    "commit",
    "ambush",
    "notice",
    "back",
    "updated",
    "greater",
    "file",
    "cool",
    "everything",
    "connected",
    "go",
    "get",
    "perspective",
    "clips",
    "good",
    "go",
    "ready",
    "going",
    "come",
    "back",
    "circle",
    "ci",
    "setup",
    "going",
    "start",
    "building",
    "going",
    "add",
    "config",
    "repo",
    "create",
    "new",
    "branch",
    "user",
    "project",
    "called",
    "circle",
    "ci",
    "dash",
    "project",
    "setup",
    "add",
    "circle",
    "ci",
    "config",
    "template",
    "based",
    "language",
    "located",
    "newly",
    "made",
    "dot",
    "circle",
    "ci",
    "directory",
    "called",
    "done",
    "separate",
    "branch",
    "test",
    "configuration",
    "like",
    "would",
    "code",
    "add",
    "config",
    "take",
    "pipeline",
    "see",
    "running",
    "hope",
    "works",
    "wow",
    "cool",
    "took",
    "25",
    "seconds",
    "drill",
    "click",
    "success",
    "right",
    "see",
    "step",
    "step",
    "exactly",
    "file",
    "starts",
    "spinning",
    "environment",
    "creating",
    "docker",
    "container",
    "running",
    "image",
    "see",
    "image",
    "cached",
    "circle",
    "ci",
    "open",
    "jdk",
    "8",
    "jdk",
    "see",
    "told",
    "file",
    "image",
    "starts",
    "preparing",
    "environment",
    "variables",
    "using",
    "build",
    "environment",
    "variables",
    "environment",
    "variables",
    "specifically",
    "declared",
    "working",
    "directory",
    "repo",
    "see",
    "repository",
    "url",
    "cesar",
    "set",
    "youtube",
    "github",
    "repo",
    "name",
    "usually",
    "set",
    "youtube",
    "forth",
    "taken",
    "branch",
    "circle",
    "ci",
    "project",
    "setup",
    "checks",
    "code",
    "step",
    "right",
    "check",
    "project",
    "source",
    "code",
    "working",
    "directory",
    "restoring",
    "cache",
    "whereas",
    "anything",
    "cached",
    "yet",
    "first",
    "build",
    "next",
    "gradle",
    "dependencies",
    "obviously",
    "recall",
    "added",
    "gradle",
    "dependency",
    "find",
    "right",
    "run",
    "junit",
    "tests",
    "along",
    "boilerplate",
    "gradle",
    "dependency",
    "code",
    "run",
    "right",
    "saving",
    "cache",
    "used",
    "future",
    "builds",
    "going",
    "restoring",
    "cash",
    "build",
    "two",
    "restoring",
    "cash",
    "pull",
    "save",
    "cash",
    "running",
    "gradle",
    "tests",
    "junit",
    "test",
    "able",
    "added",
    "gradle",
    "dependencies",
    "junit",
    "tests",
    "come",
    "back",
    "see",
    "little",
    "bit",
    "depth",
    "notice",
    "right",
    "says",
    "one",
    "branch",
    "right",
    "master",
    "branch",
    "refresh",
    "see",
    "two",
    "branches",
    "view",
    "two",
    "branches",
    "master",
    "branch",
    "also",
    "created",
    "new",
    "circle",
    "ci",
    "dash",
    "project",
    "setup",
    "branch",
    "via",
    "circle",
    "ci",
    "actually",
    "going",
    "drill",
    "obviously",
    "see",
    "latest",
    "commit",
    "checks",
    "code",
    "builds",
    "test",
    "pass",
    "cool",
    "wanted",
    "click",
    "compare",
    "compare",
    "pull",
    "requests",
    "going",
    "create",
    "pull",
    "request",
    "merge",
    "right",
    "checks",
    "passed",
    "means",
    "circle",
    "ci",
    "jobs",
    "passed",
    "branch",
    "conflict",
    "base",
    "branch",
    "look",
    "checks",
    "ci",
    "circle",
    "ci",
    "build",
    "test",
    "pass",
    "circle",
    "ci",
    "circle",
    "ci",
    "job",
    "telling",
    "us",
    "tests",
    "wrote",
    "passed",
    "safe",
    "merge",
    "master",
    "branch",
    "like",
    "merge",
    "pull",
    "request",
    "master",
    "branch",
    "taken",
    "everything",
    "circleci",
    "project",
    "setup",
    "different",
    "master",
    "branch",
    "obviously",
    "file",
    "going",
    "merge",
    "pull",
    "request",
    "words",
    "code",
    "master",
    "branch",
    "looks",
    "good",
    "confirm",
    "merge",
    "see",
    "file",
    "merge",
    "master",
    "branch",
    "something",
    "note",
    "one",
    "main",
    "reasons",
    "multiple",
    "branches",
    "well",
    "main",
    "reasons",
    "one",
    "implementing",
    "new",
    "feature",
    "ticket",
    "working",
    "feature",
    "push",
    "master",
    "branch",
    "production",
    "see",
    "push",
    "feature",
    "branch",
    "circle",
    "ci",
    "run",
    "tests",
    "circle",
    "ci",
    "jobs",
    "make",
    "sure",
    "code",
    "good",
    "also",
    "code",
    "reviews",
    "ensure",
    "writing",
    "code",
    "best",
    "possible",
    "way",
    "team",
    "help",
    "write",
    "little",
    "bit",
    "better",
    "code",
    "another",
    "reason",
    "multiple",
    "different",
    "branches",
    "development",
    "development",
    "team",
    "works",
    "goes",
    "qa",
    "branch",
    "people",
    "whether",
    "end",
    "users",
    "qa",
    "testers",
    "testing",
    "production",
    "branch",
    "course",
    "goes",
    "production",
    "server",
    "added",
    "config",
    "file",
    "master",
    "branch",
    "delete",
    "branch",
    "merge",
    "master",
    "reason",
    "keep",
    "record",
    "sake",
    "particular",
    "instance",
    "going",
    "delete",
    "click",
    "branches",
    "right",
    "come",
    "see",
    "branches",
    "active",
    "branches",
    "circle",
    "ci",
    "projects",
    "set",
    "trash",
    "right",
    "refresh",
    "page",
    "see",
    "longer",
    "see",
    "left",
    "master",
    "branch",
    "want",
    "show",
    "happens",
    "throw",
    "failing",
    "test",
    "remember",
    "one",
    "wrote",
    "earlier",
    "right",
    "mix",
    "see",
    "exactly",
    "circle",
    "ci",
    "actually",
    "anything",
    "going",
    "come",
    "right",
    "click",
    "pull",
    "going",
    "pull",
    "merge",
    "code",
    "merged",
    "circle",
    "ci",
    "branch",
    "master",
    "branch",
    "going",
    "pull",
    "going",
    "merge",
    "pulling",
    "okay",
    "good",
    "go",
    "right",
    "pulled",
    "file",
    "remote",
    "repository",
    "github",
    "local",
    "repository",
    "repository",
    "local",
    "machine",
    "see",
    "stage",
    "change",
    "going",
    "hold",
    "need",
    "right",
    "click",
    "caesar",
    "cipher",
    "git",
    "repository",
    "directory",
    "right",
    "going",
    "come",
    "right",
    "switch",
    "new",
    "branch",
    "technically",
    "new",
    "feature",
    "writing",
    "test",
    "well",
    "branch",
    "name",
    "could",
    "feature",
    "test",
    "one",
    "right",
    "worked",
    "gon",
    "na",
    "check",
    "new",
    "branch",
    "finish",
    "right",
    "cool",
    "going",
    "pushing",
    "new",
    "branch",
    "going",
    "stage",
    "changes",
    "add",
    "new",
    "test",
    "commit",
    "push",
    "ensure",
    "branches",
    "feature",
    "test",
    "1",
    "next",
    "right",
    "looks",
    "like",
    "everything",
    "worked",
    "finished",
    "see",
    "file",
    "pulled",
    "master",
    "branch",
    "pushed",
    "new",
    "feature",
    "test",
    "one",
    "branch",
    "running",
    "right",
    "also",
    "see",
    "merged",
    "file",
    "master",
    "branch",
    "also",
    "circle",
    "ci",
    "jobs",
    "obviously",
    "successful",
    "exact",
    "code",
    "obviously",
    "failed",
    "introduced",
    "failing",
    "test",
    "let",
    "take",
    "look",
    "within",
    "gradle",
    "test",
    "expected",
    "fail",
    "obviously",
    "real",
    "world",
    "knowingly",
    "introducing",
    "failing",
    "test",
    "would",
    "want",
    "come",
    "gradle",
    "test",
    "take",
    "look",
    "telling",
    "us",
    "see",
    "right",
    "task",
    "test",
    "failed",
    "let",
    "know",
    "exactly",
    "failed",
    "within",
    "caesar",
    "cipher",
    "test",
    "class",
    "test",
    "ciphered",
    "message",
    "offset",
    "11",
    "method",
    "failed",
    "obviously",
    "come",
    "back",
    "see",
    "method",
    "within",
    "caesar",
    "ciphertest",
    "class",
    "test",
    "ciphered",
    "message",
    "offset",
    "11",
    "failed",
    "discussed",
    "earlier",
    "video",
    "failing",
    "test",
    "asserting",
    "value",
    "equal",
    "value",
    "fact",
    "gave",
    "us",
    "good",
    "look",
    "looks",
    "like",
    "introduce",
    "failing",
    "test",
    "code",
    "looks",
    "like",
    "circle",
    "ci",
    "workflow",
    "build",
    "remember",
    "second",
    "ago",
    "successful",
    "circle",
    "ci",
    "build",
    "told",
    "us",
    "able",
    "merge",
    "pull",
    "requests",
    "ca",
    "failing",
    "circle",
    "ci",
    "build",
    "therefore",
    "going",
    "let",
    "merge",
    "master",
    "branch",
    "like",
    "go",
    "nothing",
    "windows",
    "10",
    "laptop",
    "working",
    "running",
    "job",
    "application",
    "github",
    "repository",
    "continuous",
    "integration",
    "workflow",
    "thanks",
    "circle",
    "ci",
    "hope",
    "guys",
    "enjoyed",
    "video",
    "lot",
    "work",
    "please",
    "make",
    "far",
    "like",
    "video",
    "found",
    "useful",
    "information",
    "give",
    "big",
    "thumbs",
    "share",
    "friends",
    "forget",
    "check",
    "circle",
    "ci",
    "links",
    "description",
    "music"
  ],
  "keywords": [
    "uh",
    "little",
    "bit",
    "wanted",
    "comes",
    "software",
    "basically",
    "take",
    "like",
    "two",
    "video",
    "creating",
    "simple",
    "terminal",
    "application",
    "within",
    "tests",
    "gon",
    "na",
    "github",
    "repository",
    "going",
    "using",
    "circle",
    "ci",
    "continuous",
    "integration",
    "run",
    "master",
    "branch",
    "something",
    "one",
    "way",
    "think",
    "maybe",
    "sure",
    "good",
    "already",
    "know",
    "anything",
    "see",
    "goes",
    "done",
    "10",
    "make",
    "want",
    "different",
    "things",
    "running",
    "exact",
    "thing",
    "also",
    "get",
    "say",
    "workflow",
    "whole",
    "lot",
    "side",
    "well",
    "use",
    "jobs",
    "dependencies",
    "mentioned",
    "everything",
    "right",
    "go",
    "click",
    "environment",
    "first",
    "eclipse",
    "project",
    "java",
    "caesar",
    "cipher",
    "second",
    "whatever",
    "file",
    "need",
    "able",
    "today",
    "alphabet",
    "shift",
    "write",
    "message",
    "throw",
    "code",
    "pull",
    "open",
    "look",
    "come",
    "new",
    "would",
    "create",
    "since",
    "gradle",
    "next",
    "name",
    "finish",
    "work",
    "got",
    "source",
    "main",
    "directory",
    "order",
    "implement",
    "obviously",
    "keep",
    "class",
    "every",
    "start",
    "build",
    "could",
    "exactly",
    "let",
    "characters",
    "offset",
    "ciphered",
    "end",
    "string",
    "parameters",
    "set",
    "equals",
    "size",
    "step",
    "back",
    "space",
    "okay",
    "type",
    "time",
    "case",
    "character",
    "array",
    "called",
    "stored",
    "method",
    "calling",
    "call",
    "return",
    "notice",
    "us",
    "storing",
    "logic",
    "actually",
    "reason",
    "add",
    "loop",
    "zero",
    "equal",
    "value",
    "three",
    "created",
    "letter",
    "left",
    "perspective",
    "f",
    "greater",
    "change",
    "remember",
    "check",
    "works",
    "user",
    "instance",
    "line",
    "test",
    "cool",
    "printing",
    "working",
    "runs",
    "looks",
    "access",
    "11",
    "sign",
    "12",
    "passing",
    "junit",
    "pass",
    "empty",
    "passed",
    "failing",
    "failed",
    "added",
    "repo",
    "push",
    "remote",
    "team",
    "git",
    "local",
    "commit",
    "committer",
    "setup",
    "branches",
    "merge",
    "feature"
  ]
}