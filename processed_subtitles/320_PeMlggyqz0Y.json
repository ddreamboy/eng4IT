{
  "text": "machine learning teach a computer how to\nperform a task without explicitly\nprogramming it to perform said task\ninstead feed data into an algorithm to\ngradually improve outcomes with\nexperience similar to how organic life\nlearns the term was coined in 1959 by\nArthur Samuel at IBM who is developing\nartificial intelligence that could play\ncheckers half a century later and\npredictive models are embedded in many\nof the products we use every day which\nperform two fundamental jobs one is to\nclassify data like is there another car\non the road or does this patient have\ncancer the other is to make predictions\nabout future outcomes like will the\nstock go up or which YouTube video do\nyou want to watch next the first step in\nthe process is to acquire and clean up\ndata lots and lots of data the better\nthe data represents the problem the\nbetter the results garbage in garbage\nout the data needs to have some kind of\nsignal to be valuable to the algorithm\nfor making predictions and data\nscientists perform a job called feature\nengineering to transform raw data into\nfeatures that better represent the\nunderlying problem the next step is to\nseparate the data into a training set\nand testing set the training data is fed\ninto an algorithm to build a model then\nthe testing data is used to validate the\naccuracy or error of the model the next\nstep is to choose an algorithm which\nmight be a simple statistical model like\nlinear or logistic regression or a\ndecision tree that assigns different\nweights to features in the data or you\nmight get fancy with a convolutional\nneural network which is an algorithm\nthat also assigns weights to Features\nbut also takes the input data and\ncreates a additional features\nautomatically and that's extremely\nuseful for data sets that contain things\nlike images or natural language where\nmanual feature engineering is virtually\nimpossible every one of these algorithms\nlearns to get better by comparing its\npredictions to an error function if it's\na classification problem like is this\nanimal a cat or a dog the error function\nmight be accuracy if it's a regression\nproblem like how much will a loaf of\nbread cost next year then it might be\nmean absolute error python is the\nlanguage of choice among data scientists\nbut R and Julia are also popular options\nand there are many supporting Frameworks\nout there to make the process\napproachable the end result of the\nmachine learning process is a model\nwhich is just a file that takes some\ninput data in the same shape that it was\ntrained on then spits out a prediction\nthat tries to minimize the error that it\nwas optimized for it can then be\nembedded on an actual device or deployed\nto the cloud to build a real world\nproduct this has been machine learning\nin 100 seconds like And subscribe if you\nwant to see more short videos like this\nand leave a comment if you want to see\nmore machine learning content on this\nchannel thanks for watching and I will\nsee you in the next one\n",
  "words": [
    "machine",
    "learning",
    "teach",
    "computer",
    "perform",
    "task",
    "without",
    "explicitly",
    "programming",
    "perform",
    "said",
    "task",
    "instead",
    "feed",
    "data",
    "algorithm",
    "gradually",
    "improve",
    "outcomes",
    "experience",
    "similar",
    "organic",
    "life",
    "learns",
    "term",
    "coined",
    "1959",
    "arthur",
    "samuel",
    "ibm",
    "developing",
    "artificial",
    "intelligence",
    "could",
    "play",
    "checkers",
    "half",
    "century",
    "later",
    "predictive",
    "models",
    "embedded",
    "many",
    "products",
    "use",
    "every",
    "day",
    "perform",
    "two",
    "fundamental",
    "jobs",
    "one",
    "classify",
    "data",
    "like",
    "another",
    "car",
    "road",
    "patient",
    "cancer",
    "make",
    "predictions",
    "future",
    "outcomes",
    "like",
    "stock",
    "go",
    "youtube",
    "video",
    "want",
    "watch",
    "next",
    "first",
    "step",
    "process",
    "acquire",
    "clean",
    "data",
    "lots",
    "lots",
    "data",
    "better",
    "data",
    "represents",
    "problem",
    "better",
    "results",
    "garbage",
    "garbage",
    "data",
    "needs",
    "kind",
    "signal",
    "valuable",
    "algorithm",
    "making",
    "predictions",
    "data",
    "scientists",
    "perform",
    "job",
    "called",
    "feature",
    "engineering",
    "transform",
    "raw",
    "data",
    "features",
    "better",
    "represent",
    "underlying",
    "problem",
    "next",
    "step",
    "separate",
    "data",
    "training",
    "set",
    "testing",
    "set",
    "training",
    "data",
    "fed",
    "algorithm",
    "build",
    "model",
    "testing",
    "data",
    "used",
    "validate",
    "accuracy",
    "error",
    "model",
    "next",
    "step",
    "choose",
    "algorithm",
    "might",
    "simple",
    "statistical",
    "model",
    "like",
    "linear",
    "logistic",
    "regression",
    "decision",
    "tree",
    "assigns",
    "different",
    "weights",
    "features",
    "data",
    "might",
    "get",
    "fancy",
    "convolutional",
    "neural",
    "network",
    "algorithm",
    "also",
    "assigns",
    "weights",
    "features",
    "also",
    "takes",
    "input",
    "data",
    "creates",
    "additional",
    "features",
    "automatically",
    "extremely",
    "useful",
    "data",
    "sets",
    "contain",
    "things",
    "like",
    "images",
    "natural",
    "language",
    "manual",
    "feature",
    "engineering",
    "virtually",
    "impossible",
    "every",
    "one",
    "algorithms",
    "learns",
    "get",
    "better",
    "comparing",
    "predictions",
    "error",
    "function",
    "classification",
    "problem",
    "like",
    "animal",
    "cat",
    "dog",
    "error",
    "function",
    "might",
    "accuracy",
    "regression",
    "problem",
    "like",
    "much",
    "loaf",
    "bread",
    "cost",
    "next",
    "year",
    "might",
    "mean",
    "absolute",
    "error",
    "python",
    "language",
    "choice",
    "among",
    "data",
    "scientists",
    "r",
    "julia",
    "also",
    "popular",
    "options",
    "many",
    "supporting",
    "frameworks",
    "make",
    "process",
    "approachable",
    "end",
    "result",
    "machine",
    "learning",
    "process",
    "model",
    "file",
    "takes",
    "input",
    "data",
    "shape",
    "trained",
    "spits",
    "prediction",
    "tries",
    "minimize",
    "error",
    "optimized",
    "embedded",
    "actual",
    "device",
    "deployed",
    "cloud",
    "build",
    "real",
    "world",
    "product",
    "machine",
    "learning",
    "100",
    "seconds",
    "like",
    "subscribe",
    "want",
    "see",
    "short",
    "videos",
    "like",
    "leave",
    "comment",
    "want",
    "see",
    "machine",
    "learning",
    "content",
    "channel",
    "thanks",
    "watching",
    "see",
    "next",
    "one"
  ],
  "keywords": [
    "machine",
    "learning",
    "perform",
    "task",
    "data",
    "algorithm",
    "outcomes",
    "learns",
    "embedded",
    "many",
    "every",
    "one",
    "like",
    "make",
    "predictions",
    "want",
    "next",
    "step",
    "process",
    "lots",
    "better",
    "problem",
    "garbage",
    "scientists",
    "feature",
    "engineering",
    "features",
    "training",
    "set",
    "testing",
    "build",
    "model",
    "accuracy",
    "error",
    "might",
    "regression",
    "assigns",
    "weights",
    "get",
    "also",
    "takes",
    "input",
    "language",
    "function",
    "see"
  ]
}