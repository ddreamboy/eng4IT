{
  "text": "hey this is anthony tavelos your cloud\ninstructor at exam pro\nbringing you a complete study course for\nthe google cloud associate cloud\nengineer made available to you here on\nfree code camp and so this course is\ndesigned to help you pass and achieve\ngoogle issued certification the way\nwe're going to do that\nis to go through lots of lecture content\nfollow alongs and using my cheat sheets\non the day of the exam so you pass\nand you can take that certification and\nput it on your resume or linkedin\nso you can get that cloud job or\npromotion that you've been looking for\nand so a bit about me is that i have 18\nyears industry experience\nseven of it specializing in cloud and\nfour years of that as a cloud trainer i\npreviously been a cloud and devops\nengineer and i've also published\nmultiple cloud courses and i'm a huge\nfan of the cartoon looney tunes as well\nas a coffee connoisseur and so i wanted\nto take a moment to thank viewers like\nyou\nbecause you make these free courses\npossible and so if you're looking for\nmore ways of supporting more free\ncourses just like this one\nthe best way is to buy the extra study\nmaterial at\nco example.com in particular for this\ncertification you can find it at gcp\nhyphen ace there you can get study notes\nflash cards quizlets\ndownloadable lectures which are the\nslides to all the lecture videos\ndownloadable cheat sheets which by the\nway are free if you just go sign up\npractice exams\nand you can also ask questions and get\nlearning support and if you want to keep\nup to date with new courses i'm working\non\nthe best way is to follow me on twitter\nat antony's cloud\nand i'd love to hear from you if you\npassed your exam\nand also i'd love to hear on what you'd\nlike to see next\n[Music]\nwelcome back\nin this lesson i wanted to quickly go\nover how to access the course resources\nnow the resources in this course are\ndesigned to accompany the lessons and\nhelp you understand not just the theory\nbut to help with the demo lessons that\nreally drive home the component of\nhands-on learning\nthese will include study notes lesson\nfiles scripts as well as resources that\nare used in the demo lessons\nthese files can be found in a github\nrepository that i will be including\nbelow that are always kept up-to-date\nand it is through these files that you\nwill be able to follow along and\ncomplete the demos on your own to really\ncement the knowledge learned\nit's a fairly simple process but varies\nthrough the different operating systems\ni'll be going through this demo to show\nyou how to obtain access through the\nthree major operating systems being\nwindows mac os and ubuntu linux\nso i'm first going to begin with windows\nand the first step would be to open up\nthe web browser\nand browse to this url which i will\ninclude in the notes below\nand this is the course github repository\nwhich will house all the course files\nthat i have mentioned before\nkeeping the course up to date will mean\nthat files may need to be changed and so\nas i update them they will always be\nreflected\nand uploaded here in the repo\nso getting back to it there are two ways\nto access this repository so the easiest\nway to obtain a copy of these files will\nbe to click on the clone or download\nbutton and click on download zip\nonce the file has been downloaded you\ncan then open it up by clicking on it\nhere\nand here are the files here in downloads\nand this will give you a snapshot of all\nthe files and folders as you see them\nfrom this repository\nnow although this may seem like the\nsimple way to go this is not the\nrecommended method to download as if any\nfiles have changed you will not be up to\ndate with the latest files and will only\nbe current from the date at which you've\ndownloaded them now the way that is\nrecommended is using a source control\nsystem called git and so the easiest way\nto install it would be to go to this url\nhttps\ncolon forward slash forward slash\ngit dash scm.com\nand this will bring you to the git\nwebsite where you can download the\nnecessary software for windows or any\nother supported operating system\nand so i'm going to download it here\nand this should download the latest\nversion of git\nfor windows and it took a few seconds\nthere but it is done\nand no need to worry about whether or\nnot you've got the proper version\nusually when you click that download\nbutton it will download the latest\nversion for your operating system\nso i'm going to go over here and open\nthis up\nyou'll get a prompt where you would just\nsay yes\nand we're going to go ahead and accept\nall the defaults here this is where it's\ngoing to install it let's hit next\nthese are all the components that\nthey're going to be installed let's\nclick on next\nand again we're going to go through\neverything\nwith all the defaults\nand once we've reached\ninstalling all the defaults it's gonna\ntake a couple minutes to install\nand again it took a minute or so\nwe're going to just click on next\nand it's going to ask if you want to\nview the release notes and we don't\nreally need those so\nwe can click on ok\nand simply close that\nand we're just going to go over and see\nif git is installed\nwe're going to run the command prompt\nand i'm going to just zoom in here so we\ncan see a little better\nand there we go and we are just going to\ntype in git\nand as you can see it's been installed\nand so now that we've installed git we\nwant to be able to pull down all the\nfolders and the files within them from\nthe repository to our local system and\nso i'm just going to clear the screen\nhere\nand we're going to do a cd to make sure\nthat i'm in my home directory\nand then we're going to make a directory\ncalled repos\nand in order to do that we're going to\ndo mkdir\nspace\nrepos and then we're going to move into\nthat directory\nso cd\nspace repos and so again here we want to\nclone those files that are in the\nrepository to our local system\nso in order to do that we're going to\nuse the command git clone so get space\nclone\nand then we're going to need our\nlocation of the git repository so let's\ngo back to the browser\nand we're going to go over here to clone\nor download\nand here you will see clone with https\nso make sure that this says https and\nyou can simply click on this button\nwhich will copy this to the clipboard\nand then we'll move back to our command\nprompt\nand paste that in\nand once that's pasted just hit enter\nand it will clone your repository into\nthe repos directory and so just to\nverify that we've cloned all the\nnecessary files\nwe're going to cd into the master\ndirectory that we had just cloned\nand we're going to do a dir\nand there you have it all of the files\nare cloned exactly as it is here in the\nrepository\nnow just as a note in order to keep\nthese files up to date we need to run a\ndifferent command which would be a git\npull\nand this can be run at any time in order\nto pull down any files or folders that\nhave been updated since you did the\nfirst pull which in this case\nwould be cloning of the repository\nagain this will provide you with the\nlatest and most up-to-date files at any\ngiven moment in time and in this case\nsince nothing has changed i have been\nprompted with a message stating that i'm\nup to date if nothing is changed you\nwill always be prompted with this\nmessage\nif there was\nit will pull your changes down to your\nsynced local copy and the process for\nwindows is completed and is similar in\nmac os and i'll move over to my mac os\nvirtual machine and log in\nand once you've logged in just going to\ngo over here to the terminal and i'm\njust going to cd\nto make sure i'm in my home directory\nthen i'm going to do exactly what we did\nin windows so i'm going to run the\ncommand mk\ndir\nspace repos\nand create the repos directory and i'm\ngoing to move in to the repos directory\nand then i'm going to run git\nnow for those of you who do not have get\ninstalled you will be prompted with this\nmessage to install it and you can go\nahead and just install you'll be\nprompted with this license agreement you\ncan just hit agree\nand depending on your internet\nconnection this will take a few minutes\nto download and install so as this is\ngoing to take a few minutes i'm going to\npause the video here and come back when\nit's finished installing\nokay and the software was successfully\ninstalled\nso just to do a double check i'm going\nto run git\nand as you can see it's been installed\nso now that we have git installed we\nwant to clone all the directories and\nthe files from the github repository to\nour local repos folder so i'm going to\nopen up my browser and i'm going to\npaste my github repository url right\nhere\nand\nyou'll see the clone button over here so\nwe're going to click on this button\nand here we can download zip but like i\nsaid we're not going to be doing that\nwe're going to go over here\nand copy this url for the github\nrepository again make sure it says https\nand we're going to copy this to our\nclipboard\nand we're going to go back to our\nterminal\nand we are going to\nrun the command git space\nclone\nand we're going to paste in our url\nand as you can see here i've cloned the\nrepository and all the files and folders\nwithin it and so as is my best practice\ni always like to verify that the files\nhave been properly cloned and so i'm\ngoing to run the command ls\njust to make sure and go into the master\ndirectory\nand do a double check and as you can see\nthe clone was successful as all the\nfiles and folders are here and again to\ndownload any updates to any files or\ndirectories we can simply run the\ncommand git space poll and because we've\nalready cloned it it's already up to\ndate and so the process is going to be\nextremely similar on linux so i'm going\nto simply move over to my linux machine\nand log in\ni'm going to open up a terminal\nand i'm going to make my terminal a\nlittle bit bigger for better viewing and\nso like the other operating systems i\nwant to clone all the files and\ndirectories from the github repository\nto my machine and so i'm going to cd\nhere to make sure i'm in my home\ndirectory and like we did before we want\nto create a directory called repos so\ni'm going to run the command mkdir space\nrepos and we're going to\ncreate the repos directory we're now\ngoing to move into the repos directory\nand here we're going to run the git\ncommand\nand because git is not installed on my\nmachine i've been prompted with the\ncommand in order to install it so i'm\ngoing to run that now so the command is\nsudo\nspace\napt\nspace\ninstall\nspace\nget\nand i'm going to enter in my password\nand install it\nand just to verify i'm going to run the\ncommand git and i can see here it's been\ninstalled so now i'm going to go over\nhere to my browser and i'm going to\npaste in the url to my repository and\nover here we'll have the same clone\nbutton and when i click on it i can get\nthe url for the github repository in\norder to clone it again make sure before\nyou clone that this says https\nif it doesn't say https you'll have the\noption of clicking on a button that will\nallow you to do so once it says https\nthen you can simply copy this url to\nyour clipboard by clicking on the button\nand then move over back to the terminal\nand we are going to clone this\nrepository by typing in the get space\nclone command\nalong with the url of the repository\nand when we hit enter it'll clone it\nright down to our directory so i'm just\ngoing to move into the master directory\njust to verify that the files are there\nand again they're all here so again if\nyou're looking to update your repository\nwith any new updated changes you can\nsimply run\nthe get space pull command\nto update those files\nand so that's the linux setup so you\nhave a local copy of the lesson files\nnow there's just one more thing that i\nhighly recommend you do and to\ndemonstrate it i'm going to move back\nover to my windows virtual machine now\ni'm going to open up the web browser\nagain\nopen up a new tab\nand i'm going to browse to this url\nhttps colon forward slash forward slash\ncode.visualstudio.com\n[Music]\nand i'll make sure that the url is in\nthe text below there is a version of\nthis code editor available for windows\nmac os and linux you can simply click on\nthis drop down and you'll find the link\nto download it for your operating system\nbut in most cases it should\nautomatically show the correct version\nso just go ahead and click on download\nand it should start downloading\nautomatically and you should be able to\nrun it right away\nnow the reason behind me asking you to\ninstall this utility is for editing code\nof different sorts\nwhether you're adjusting yaml or python\ndocuments for deployment manager\nor even managing scripts\na code editor will give you the ease of\nuse when it comes to managing editing\nand even syntactical highlighting of\ncode as shown here below\nit will highlight the code to make it\neasier to understand now if you have\nyour own editor that you would prefer to\nuse go ahead and use that but for those\nthat don't my recommendation will be to\nuse visual studio code so to install\nvisual studio code we're just going to\naccept this license agreement\nand then we're going to click on next\nand we're just going to follow all the\ndefaults\nto install it\nit's going to take a minute or two\nand for those running windows you want\nto make sure that this box is checked\noff so that you can launch it right away\nlet's hit finish\nanother recommendation would be to go\nover here to the task bar so you can pin\nit in place so that it's easier to find\nand so now you have access to all the\nresources that's needed for this course\nbut with that that's everything that i\nwanted to cover for this lesson so you\ncan now mark this lesson as complete and\nlet's move on to the next one\n[Music]\nwelcome back and in this lesson i wanted\nto discuss the various certifications\navailable for google cloud as this\nnumber keeps on growing and i am looking\nto keep this lesson as up to date as\npossible so with that being said let's\ndive in\nnow google cloud has released a slew of\ncertifications in many different areas\nof expertise as well as different\nexperience levels\nnow there are two levels of difficulty\nwhen it comes to the google cloud\ncertifications starting off with the\nassociate level we see that there is\nonly the one certification which is the\ncloud engineer the associate level\ncertification is focused on the\nfundamental skills of deploying\nmonitoring and maintaining projects on\ngoogle cloud this is a great starting\npoint for those completely new to cloud\nand google recommends the associate\ncloud engineer as the starting point to\nundergoing your certification journey\nthis was google cloud's very first\ncertification and to me was the entry\npoint of wanting to learn more as an\nengineer in cloud in my personal opinion\nno matter your role this certification\nwill cover the general knowledge that is\nneeded to know about starting on google\ncloud and the services within it which\nis why i labeled it here as the\nfoundational level course i also\nconsider this the stepping stone\ninto any other professional level\ncertifications which also happens to be\na recommended path by google with a\ngreat course and some dedication i truly\nbelieve that anyone with even a basic\nskill level in it should be able to\nachieve this associate level\ncertification now it is recommended from\ngoogle themselves that prior to taking\nthis exam that you should have over six\nmonths experience building on google\ncloud for those of you with more of an\nadvanced background in google cloud or\neven other public clouds this\ncertification should be an easy pass as\nit covers the basics that you should be\nfamiliar with adding a google twist to\nit at the time of this lesson this exam\nis two hours long and the cost is 125 us\ndollars the exam is a total of 50\nquestions which consists of both\nmultiple choice and multiple answer\nquestions each of the questions contain\nthree to four line questions with single\nline answers that by the time you finish\nthis course you should have the\nconfidence to identify the incorrect\nanswers\nand be able to select the right answers\nwithout a hitch moving into the\nprofessional level certifications there\nare seven certifications that cover a\nvariety of areas of specialty depending\non your role you might want to take one\nor maybe several of these certifications\nto help you gain more knowledge in\ngoogle cloud or if you love educating\nyourself and you're really loving your\njourney in gcp you will probably want to\nconsider pursuing them all in my\npersonal opinion the best entry point\ninto the professional level would be the\ncloud architect it is a natural step up\nfrom the associate cloud engineer and it\nbuilds on top of what is learned through\nthat certification with a more detailed\nand more thorough understanding of cloud\narchitecture that is needed for any\nother certification there is some\noverlap from the cloud engineer which is\nwhy in my opinion doing this\ncertification right after makes sense it\nalso brings with it the ability to\ndesign develop and manage secure\nscalable and highly available dynamic\nsolutions it is a much harder exam and\ngoes into great depth on services\navailable the professional cloud\narchitect is a great primer for any\nother professional level certification\nand can be really helpful to solidify\nthe learning that is needed in any other\ntechnical role i find it the most common\npath that many take who look to learn\ngoogle cloud which is why i personally\nrecommend it to them and at the time of\nthis lesson it also holds the highest\nreturn on investment\ndue to the highest average wage over any\nother current cloud certification in the\nmarket google recommends over three\nyears of industry experience including\none year on google cloud before\nattempting these exams with regards to\nthe exams in the professional tier they\nare much harder than the associate level\nand at the time of this course is two\nhours long and the cost is 200 us\ndollars these exams are a total of 50\nquestions which consists of both\nmultiple choice and multiple answer\nquestions it's the same amount of\nquestions with the same amount of time\nbut it does feel much harder each of the\nquestions contain four to five line\nquestions with one to three line answers\nit's definitely not a walk in the park\nand will take some good concentration\nand detailed knowledge on google cloud\nto solidify a pass after completing the\ncloud architect certification depending\non your role my suggestion would be to\npursue the areas that interest you the\nmost to make your journey more enjoyable\nfor me at the time i took the security\nengineer out as i am a big fan of\nsecurity and i knew that i would really\nenjoy the learning and make it more fun\nfor me this is also a great\ncertification for those who are looking\nto excel their cloud security knowledge\non top of any other security\ncertifications such as the security plus\nor cissp\nnow others may be huge fans of\nnetworking or hold other networking\ncertifications such as the ccna and so\nobtaining the network engineer\ncertification might be more up your\nalley and give you a better\nunderstanding in cloud networking now if\nyou're in the data space you might want\nto move into the data engineer exam as\nwell as taking on the machine learning\nengineer exam to really get some deeper\nknowledge in the areas of big data\nmachine learning and artificial\nintelligence on google cloud now i know\nthat there are many that love devops me\nbeing one of them and really want to dig\ndeeper and understand sre and so they\nend up tackling the cloud developer and\ncloud devops engineer certifications so\nthe bottom line is whatever brings you\njoy in the area of your choosing start\nwith that and move on to do the rest all\nthe professional certifications are\nvaluable but do remember that they are\nhard and need preparation for study last\nbut not least is the collaboration\nengineer certification and this\ncertification focuses on google's core\ncloud-based collaboration tools that are\navailable in g suite or what is now\nknown as google workspaces such as gmail\ndrive hangouts docs and sheets now the\nprofessional level collaboration\nengineers certification dives into more\nadvanced areas of g suite such as mail\nrouting identity management and\nautomation of it all using tools\nscripting and apis\nthis certification is great for those\nlooking to build their skill set as an\nadministrator of these tools but gives\nvery little knowledge of google cloud\nitself so before i move on there is one\nmore certification that i wanted to\ncover that doesn't fall under the\nassociate or professional certification\nlevels and this is the google cloud\ncertified fellow program\nnow this is by far\none of the hardest certifications to\nobtain as there are very few certified\nfellows at the time of recording this\nlesson it is even harder than the\nprofessional level certifications and\nthis is due to the sheer level of\ncompetency with hybrid multi-cloud\narchitectures using google cloud anthos\ngoogle's recommended experience\nis over 10 years with a year of\ndesigning enterprise solutions with\nanthos then a four-step process begins\nfirst step is to receive a certified\nfellow invitation from google and once\nyou've received that invitation then you\nneed to submit an application with some\nwork samples that you've done\nshowing google your competency in hybrid\nmulti-cloud once that is done the third\nstep is a series of technical hands-on\nlabs that must be completed and is a\nqualifying assessment that must be\npassed in order to continue and after\nall that the last step is a panel\ninterview done with google experts in\norder to assess your competency of\ndesigning hybrid and multi-cloud\nsolutions with anthos so as you can see\nhere this is a very difficult and highly\ninvolved certification process\nto achieve the title of certified fellow\nthis is definitely not for the faint of\nheart but can distinguish yourself as a\ntechnical leader in anthos and a hybrid\nmulti-cloud expert in your industry now\ni get asked many times whether or not\ncertifications hold any value are they\neasy to get are they worth more than the\npaperwork that they're printed on and\ndoes it show that people really know how\nto use google cloud and my answer is\nalways yes as the certifications hold\nbenefits beyond just the certification\nitself and here's why targeting yourself\nfor a certification gives you a\nmilestone for learning something new\nwith this new milestone it allows you to\nput together a study plan in order to\nachieve the necessary knowledge needed\nto not only pass the exam but the skills\nneeded to progress in your everyday\ntechnical role this new knowledge helps\nkeep your skills up to date therefore\nmaking you current instead of becoming a\nrelic now having these up-to-date skills\nwill also help advance your career\nthroughout my career in cloud i have\nalways managed to get my foot in the\ndoor with various interviews due to my\ncertifications it gave me the\nopportunity to shine in front of the\ninterviewer while being able to\nconfidently display my skills in cloud\nit also allowed me to land the jobs that\ni sought after as well as carve out the\ncareer path that i truly wanted on top\nof landing the jobs that i wanted i was\nable to achieve a higher salary due to\nthe certifications i had i have doubled\nand tripled my salary since i first\nstarted in cloud all due to my\ncertifications and i've known others\nthat have obtained up to five times\ntheir salary because of their\ncertifications now this was not just\nfrom achieving the certification to put\non my resume and up on social media but\nfrom the knowledge gained through the\nprocess and of course i personally feel\nthat having your skills constantly up to\ndate\nadvancing your career and getting the\nsalary that you want keeps you motivated\nto not only get more certifications but\ncontinue the learning process i am and\nalways have been a huge proponent of\nlifelong learning and as i always say\nwhen you continue learning you continue\nto grow so in short google cloud\ncertifications are a great way to grow\nand so that about covers everything that\ni wanted to discuss in this lesson so\nyou can now mark this lesson as complete\nand i'll see you in the next one\n[Music]\nwelcome back\nand in this lesson i'm going to be\ntalking about the fictitious\norganization called bow tie inc that i\nwill be using throughout the course\nnow while going through the\narchitectures and demos in this course\ntogether i wanted to tie them to a real\nworld situation\nso that the theory and practical\nexamples are easy to understand\ntying it to a scenario is an easy way to\ndo this as well it makes things a lot\nmore fun\nso the scenario again\nthat i will be using is based on bow tie\nink\nso before we get started with the course\ni'd like to quickly run through the\nscenario\nand don't worry it's going to be very\nhigh level and i will keep it brief\nso bow tie ink is a bow tie\nmanufacturing company that designs and\nmanufactures bow ties within their own\nfactories\nthey also hold a few retail locations\nwhere they sell their bow ties as well\nas wholesale to other thai and men's\nfashion boutiques and department stores\nacross the globe\nbeing in the fashion business\nthey mainly deal with commerce security\nand big data sets\nbow tie inc is a global company and they\nare headquartered in montreal canada\nthey employ about 300 people globally\nwith a hundred of them being in sales\nalone to support both the brick and\nmortar stores and wholesale branches\nthere are many different departments to\nthe company that make it work such as\nin-store staff\ni.t\nmarketing for both in-store and online\nsales\nmanufacturing finance and more\nthe types of employees that work in bow\ntie inc vary greatly due to the various\ndepartments and consists of many people\nsuch as sales for both in-store and\nwholesale managers that run the stores\nand sewers that work in the\nmanufacturing plant\nand many more that work in these various\ndepartments\nthe business has both offices\nand brick and mortar stores\nin montreal\nlondon and los angeles\nnow due to the thrifty mindset of\nmanagement concentrating all their\nefforts on commerce and almost none in\ntechnical infrastructure has caused\nyears of technical debt\nand is now a complete disaster\nwithin the brick and mortar location\nthere contains two racks with a few\nservers and some networking equipment\nthe global inventory of bow ties are\nupdated upon sales in both stores\nand wholesale as well as new stock that\nhas been manufactured from the factory\nthere are point-of-sale systems in each\nstore or office location\nthese systems are all connected to each\nother over a vpn connection in order to\nkeep updates of the inventory fresh\nall office and store infrastructure are\nconnected to each other and the montreal\nheadquarters\nand the point of sale systems and kiosk\nsystems are backed up to tape in the\nmontreal headquarters as well and like i\nsaid before\nmanagement is extremely thrifty but they\nhave finally come to the realization\nthat they need to start spending money\non the technical infrastructure in order\nto scale so diving into a quick overview\nof exactly what the architecture looks\nlike the head office is located in\nmontreal canada\nit has its main database for the crm and\npoint-of-sale systems\nas well as holding the responsibility of\nhousing the equipment for the tape\nbackups the tapes are then taken off\nsite within montreal by a third-party\ncompany for storage\nthe company has two major offices one in\nlondon covering the eu\nand the other in the west coast us\nin los angeles these major offices\nare also retail locations that consume\ni.t services from the headquarters in\nmontreal again being in the fashion\nbusiness bowtie inc employs a large\namount of sales people and the managers\nthat support them\nthese employees operate the\npoint-of-sale systems so we're\nconstantly looking to have the website\nsales and the inventory updated at all\ntimes each salesperson has access to\nemail and files for updated forecasts on\nvarious new bowtie designs\nmost sales people communicate over a\nvoice over ip phone and chat programs\nthrough their mobile phone the managers\nalso manually look at inventory on\nwhat's been sold\nversus what's in stock\nto predict the sales for stores in\nupcoming weeks\nthis will give manufacturing a head\nstart to making more bow ties for future\nsales\nnow whatever implementations that we\ndiscuss throughout this course\nwe'll need to support the day-to-day\noperations of the sales people and the\nmanagers\nand because of the different time zones\nin play\nthe back-end infrastructure needs to be\navailable\n24 hours a day seven days a week\nany downtime will impact updated\ninventory for both online sales as well\nas store sales at any given time\nnow let's talk about the current\nproblems that the business is facing\nmost locations hold on premise hardware\nthat is out of date and also out of\nwarranty\nthe business looked at extending this\nwarranty but became very costly as well\nmanagement is on the fence about whether\nto buy new on-premise hardware or just\nmove to the cloud they were told that\ngoogle cloud is the way to go when it\ncomes to the retail space and so are\nopen to suggestions\nyet still very weary now when it comes\nto performance there seems to be a major\nlag from the vpn connecting from store\nto store\nas well as the head office that's\nresponsible for proper inventory\nthus slowing down the point of sale\nsystems and to top it all off\nbackups taking an exorbitant amount of\ntime\nis consuming a lot of bandwidth with the\ncurrent vpn connection now bowtie inc\nhas always struggled with the lack of\nhighly available systems and scalability\ndue to cost of new hardware this is\ncausing extreme stress for online\ne-commerce whenever a new marketing\ncampaign is launched\nas the systems are unable to keep up\nwith the demand\nlooking at the forecast for the next two\nquarters the business is looking to open\nup more stores in the eu\nas well as in the us\nand with the current database in place\nproviding very inefficient high\navailability or scalability\nthere is a major threat of the main\ndatabase going down\nnow when it comes to assessing the\nbackups the tape backups have become\nvery slow especially backing up from\nlondon and the off-site storage costs\ncontinuously go up every year\nthe backups are consuming a lot of\nbandwidth and are starting to become the\nmajor pain point\nfor connection issues between locations\non top of all these issues the small it\nstaff that is employed have outdated i.t\nskills and so there is a lot of manual\nintervention that needs to be done\nto top it all off all the running around\nthat is necessary to keep the outdated\ninfrastructure alive\nmanagement is also now pushing to open\nnew stores to supply bow ties globally\ngiven the ever-growing demand\nas well as being able to supply the\ndemand of bow ties online through their\ne-commerce store\nnow these are some realistic yet common\nscenarios that come up in reality for a\nlot of businesses that are not using\ncloud computing\nand throughout the course we will dive\ninto how google cloud can help ease the\npain\nof these current ongoing issues\nnow at a high level with what the\nbusiness wants to achieve and what the\nfavorable results are\nthey are all interrelated issues so\nbowtie inc requires a reliable and\nstable connection between all the\nlocations of the stores and offices\nso that sales\ninventory and point-of-sale systems are\nquick and up-to-date at all times\nthis will also allow all staff in these\nlocations to work a lot more efficiently\nwith a stable and reliable connection in\nplace\nbackups should be able to run smoothly\nand also eliminate the cost of off-site\nbackup\nnot to mention the manpower and\ninfrastructure involved to get the job\ndone\nwhile scaling up offices and stores due\nto increase in demand\nthe business should be able to deploy\nstores in new regions using pay as you\ngo billing while also meeting the\nrequirements and regulations when it\ncomes to gpdr and pci\nthis would also give the business\nflexibility of having a disaster\nrecovery strategy in place\nin case there was a failure of the main\ndatabase in montreal now as mentioned\nbefore the business is extremely thrifty\nespecially when it comes to spend on it\ninfrastructure\nand so the goal is to have the costs as\nlow as possible yet having the\nflexibility of scaling up when needed\nespecially when new marketing campaigns\nare launched during high demand sales\nperiods\nthis would also give bowtie inc the\nflexibility of analyzing sales ahead of\ntime\nusing real-time analytics and catering\nto exactly what the customer is\ndemanding\nthus making inventory a lot more\naccurate and reducing costs in\nmanufacturing items that end up going on\nsale and costing the company money in\nthe end\nfinally when it comes to people\nsupporting infrastructure automation is\nkey\nremoving manual steps and a lot of the\nprocesses can reduce the amount of\nmanpower needed to keep the\ninfrastructure alive\nand especially will reduce downtime when\ndisaster arises\nputting automation in place will also\nreduce the amount of tedious tasks that\nall departments have on their plate\nso that they can focus on more important\nbusiness needs\nnow that's the scenario at a high level\ni wanted to really emphasize that this\nis a typical type of scenario that you\nwill face as a cloud engineer and a\ncloud architect\nthe key to this scenario is the fact\nthat there are areas that are lacking in\ndetail\nand areas that are fully comprehensible\nand this will trigger knowing when and\nwhere to ask relevant questions\nespecially in your day-to-day role as an\nengineer\nit will allow you to fill the gaps so\nthat you're able to figure out what\nservices you will need and what type of\narchitecture to use\nthis is also extremely helpful when it\ncomes to the exam\nas in the exam you will be faced with\nquestions that pertain to real life\nscenarios that will test you in a\nsimilar manner knowing what services and\narchitecture to use based on the\ninformation given\nwill always give you the keys to the\ndoor with the right answer and lastly\nwhen it comes to the demos\nthis scenario used throughout the course\nwill help put things in perspective\nas we will come to resolve a lot of\nthese common issues\nreal world scenarios can give you a\nbetter perspective on learning as it is\ntied to something that makes it easy to\ncomprehend\nand again bow tie inc is the scenario\nthat i will be using throughout the\ncourse to help you grasp these concepts\nso that's all i have to cover this\nscenario so you can now mark this lesson\nas complete and let's move on to the\nnext one\n[Music]\nhey this is anthony cevallos and what i\nwanted to show you here is where you can\naccess the practice exam on the exam pro\nplatform\nso once you've signed up for your\naccount you can head on over to the\ncourse\nand you can scroll down to the bottom of\nthe curriculum list and you will see the\npractice exams here at the bottom\nnow just as a quick note\nyou should generally not attempt the\npractice exam unless you have completed\nall the lecture content including the\nfollow alongs as once you start to see\nthose questions you will get an urge to\nstart remembering these questions\nand so i always recommend to use the\npractice exam as a serious attempt\nand not just a way to get to the final\nexam at a faster pace taking your time\nwith the course\nwill allow you to really prevail through\nthese practice exams and allow you for a\nway better pass rate on the final exam\nlooking here we can see two practice\nexams with 50 questions each and so i\nwanted to take a moment here and dive\ninto the practice exam\nand show you what some of these\nquestions will look like and so clicking\ninto one of these exams we can get right\ninto it and so as you can see i've\nalready started on practice exam one and\nso i'm going to click into that right\nnow and as you can see the exam is\nalways timed and in this case will be\n120 minutes for this specific exam there\nare 50 questions for this practice exam\nand you will see the breakdown in the\nvery beginning\nof the types of questions you will be\nasked now for the google cloud exams at\nthe associate level they are usually\nstructured in a common format\nthey generally start with one or two\nlines of sentences which will typically\nrepresent a scenario followed by the\nquestion itself this question tends to\nbe brief and to the point immediately\nfollowing that you will be presented\nwith a number of answers\nusually four or five in nature and can\nsometimes be very very technical as they\nare designed for engineers like asking\nabout which gcloud commands to use to\nexecute in a given scenario as well as\ntheoretical questions that can deal with\nlet's say best practices or questions\nabout the specific services themselves\nnow these answers will come in two\ndifferent styles either multi-choice or\nmulti-select the multi-choice is usually\nabout identifying the correct answer\nfrom a group of incorrect or less\ncorrect answers whereas the multi-select\nwill be about choosing multiple correct\nsolutions to identify the answer as well\nfor this associate exam the overall\nstructure is pretty simple in nature and\ntypically will be either right or wrong\nnow sometimes these questions can get\ntricky where there are multiple possible\nanswers\nand you will have to select the most\nsuitable ones\nnow although most of these types of\nquestions\nusually show up in the professional exam\nthey can sometimes peek their heads into\nthe associate and so a great tactic that\ni always like to use is to immediately\nidentify what matters in the question\nitself\nand then to start ruling out any of the\nanswers that are wrong and this will\nallow you to answer the question a lot\nmore quickly and efficiently as it will\nbring the more correct answer to the\nsurface as well as making the answer a\nlot more obvious\nand making the entire question less\ncomplex so for instance with this\nquestion here you are immediately asked\nabout google's recommended practices\nwhen it comes to using cloud storage as\nbackup for disaster recovery and this\nwould be for a specific storage type and\nso quickly looking at the answers you\ncan see that standard storage and near\nline storage will not be part of the\nanswer and so that will leave cold line\nstorage or archive storage as the two\npossible choices\nfor the answer of this question and so\nthese are the typical techniques that i\nalways like to use\nfor these exams and so provided that\nyou've gone through all the course\ncontent you will be able to answer these\ntechnical questions with ease and\nfollowing the techniques i've just given\nand applying them to each question\ncan really help you in not only this\npractice exam but for the final exam\nlanding you a passing grade getting you\ncertified\n[Music]\nwelcome back and in this section i\nwanted to really hone in on the basics\nof cloud computing the characteristics\nthat make it what it is\nthe different types of computing\nand how they differ from each other as\nwell as the types of service models now\nin this lesson i wanted to dive into the\ndefinition of cloud computing and the\nessential characteristics that define it\nnow for some advanced folk watching this\nthis may be a review\nand for others\nthis may fulfill a better understanding\non what is cloud now cloud is a term\nthat is thrown around a lot these days\nyet holds a different definition or\nunderstanding to each and every\nindividual\nyou could probably ask 10 people on\ntheir definition of cloud and chances\nare\neveryone would have their own take on it\nmany see cloud as this abstract thing in\nthe sky\nwhere files and emails are stored but\nit's so much more than that\nnow the true definition of it can be put\nin very simple terms\nand can be applied to any public cloud\nbeing google cloud\naws\nand azure\nmoving on to the definition\ncloud computing is the delivery of a\nshared pool of on-demand computing\nservices over the public internet\nthat can be rapidly provisioned\nand released\nwith minimal management effort or\nservice provider interaction\nthese computing services\nconsist of things like servers\nstorage\nnetworking and databases they can be\nquickly provisioned and accessed from\nyour local computer\nover an internet connection now coupled\nwith this definition are five essential\ncharacteristics that define the cloud\nmodel that i would like to go over with\nyou and i believe that it would hold\nmassive benefits to understanding when\nspeaking to cloud this information can\nbe found in the white paper published by\nthe national institute of standards and\ntechnology i will include a link to this\npublication in the lesson notes for your\nreview now these essential\ncharacteristics are as follows the first\none\nis on-demand self-service\nand this can be defined as being able to\nprovision resources automatically\nwithout requiring human interaction on\nthe provider's end\nso in the end you will never need to\ncall up or interact with the service\nprovider in order to get resources\nprovisioned for you\nas well you have the flexibility of\nbeing able to provision and de-provision\nthese resources\nwhenever you need them and at any given\ntime of the day\nthe second characteristic is broad\nnetwork access\nnow this simply means that cloud\ncomputing resources are available over\nthe network and can be accessed by many\ndifferent customer platforms such as\nmobile phones\ntablets or computers\nin other words\ncloud services are available over a\nnetwork moving into the third\nis resource pooling\nso the provider's computing resources\nare pooled together to support a\nmulti-tenant model that allows multiple\ncustomers to share the same applications\nor the same physical infrastructure\nwhile retaining privacy and security\nover their information\nthis includes things like processing\npower\nmemory storage and networking\nit's similar to people living in an\napartment building sharing the same\nbuilding infrastructure like power and\nwater yet they still have their own\napartments and privacy within that\ninfrastructure\nthis also creates a sense of location\nindependence in that the customer\ngenerally has no control or knowledge\nover the exact location of the provided\nresources\nbut they may be able to specify location\nat a higher level of abstraction so in\nthe end the customer does not really\nhave the option of choosing exactly\nwhich server server rack or data center\nfor that matter\nof where the provided resources are\ncoming from\nthey will only be able to have the\noption to choose things like regions or\nsections within that region\nthe fourth essential characteristic is\nrapid elasticity\nthis to me\nis the key factor of what makes cloud\ncomputing so great and so agile\ncapabilities can be elastically\nprovisioned and released\nin some cases automatically to scale\nrapidly outwards and inwards in response\nwith demand\nto the consumer the capabilities\navailable for provisioning often appear\nto be unlimited\nand can be provisioned in any quantity\nat any time and touching on the fifth\nand last characteristic cloud systems\nautomatically control and optimize\nresource usage by leveraging a metering\ncapability\nresource usage can be monitored\ncontrolled and reported providing\ntransparency for both the provider and\nconsumer of the service\nnow what this means is that cloud\ncomputing resource usage is metered and\nyou can pay accordingly for what you've\nused\nresource utilization\ncan be optimized by leveraging\npay-per-use capabilities\nand this means that cloud resource usage\nwhether they are instances that are\nrunning\ncloud storage or bandwidth it all gets\nmonitored measured and reported by the\ncloud service provider the cost model is\nbased on\npay for what you use and so the payment\nis based on the actual consumption\nby the customer\nso knowing these key characteristics of\ncloud computing along with their\nbenefits\ni personally find can really give you a\nleg up on the exam\nas well as speaking to others in your\nday-to-day role\nas more and more companies start moving\nto cloud i hope this lesson has\nexplained to you on what is cloud\ncomputing and the benefits it provides\nso that's all i have for this lesson\nso you can now mark this lesson as\ncomplete and let's move on to the next\none\nwelcome back\nin this lesson i wanted to go over the\nfour common cloud deployment models and\ndistinguish the differences between\npublic cloud\nmulti-cloud\nprivate cloud and hybrid cloud\ndeployment models\nthis is a common subject that comes up a\nfair amount in the exam\nas well as a common theme in any\norganization moving to cloud knowing the\ndistinctions between them can be\ncritical to the types of architecture\nand services that you would use for the\nspecific scenario you are given\nas well as being able to speak to the\ndifferent types of deployment models as\nan engineer in the field getting back to\nthe deployment models let's start with\nthe public cloud model which we touched\non a bit in our last lesson\nnow the public cloud is defined as\ncomputing services offered by\nthird-party providers\nover the public internet\nmaking them available to anyone who\nwants to use or purchase them so this\nmeans that google cloud will fall under\nthis category as a public cloud\nthere are also other vendors that fall\nunder this category such as aws and\nazure\nso again public cloud is a cloud that is\noffered over the public internet\nnow public clouds can also be connected\nand used together within a single\nenvironment for various use cases\nthis cloud deployment model is called\nmulti-cloud\nnow a multi-cloud implementation can be\nextremely effective if architected in\nthe right way\none implementation that is an effective\nuse of multi-cloud is when it is used\nfor disaster recovery this is where your\narchitecture would be replicated across\nthe different public clouds in case one\nwere to go down\nanother could pick up the slack what\ndrives many cases of a multi-cloud\ndeployment\nis to prevent vendor lock-in where you\nare locked into a particular cloud\nprovider's infrastructure and unable to\nmove due to the vendor-specific feature\nset the main downfall to this type of\narchitecture is that the infrastructure\nof the public cloud that you're using\ncannot be fully utilized\nas each cloud vendor has their own\nproprietary resources that will only\nwork in their specific infrastructure in\nother words\nin order to replicate the environment it\nneeds to be the same within each cloud\nthis removes each cloud's unique\nfeatures which is what makes them so\nspecial and the resources so compelling\nso sometimes finding the right strategy\ncan be tricky depending on the scenario\nnow the next deployment model i wanted\nto touch on is private cloud private\ncloud refers to your architecture that\nexists on premise\nand restricted to the business itself\nwith no public access\nyet it still carries the same five\ncharacteristics that we discussed with\nregards to what defines cloud each of\nthe major cloud providers shown here\nall have their own flavor of private\ncloud that can be implemented on site\ngoogle cloud has anthos\naws\nhas aws outposts\nand azures is azure stack\nthey show the same characteristic\nand leverage similar technologies that\ncan be found in the vendor's public\ncloud yet can be installed on your own\non-premise infrastructure please be\naware\nany organizations may have a vmware\nimplementation which holds cloud-like\nfeatures yet this is not considered a\nprivate cloud\ntrue private cloud will always meet the\ncharacteristics that make up cloud now\nit is possible to use private cloud with\npublic cloud\nand this implementation is called hybrid\ncloud\nso hybrid cloud is when you are using\npublic cloud in conjunction with private\ncloud as a single system a common\narchitecture used is due to compliance\nwhere one cloud could help organizations\nachieve specific governance\nrisk management and compliance\nregulations while the other cloud could\ntake over the rest\nnow i'd really like to make an important\ndistinction here\nif your on-premise infrastructure is\nconnected to public cloud this is not\nconsidered hybrid cloud this is what's\nknown as hybrid environment or a hybrid\nnetwork as the on-premises\ninfrastructure holds no private cloud\ncharacteristics true hybrid cloud allows\nyou to use the exact same interface and\ntooling as what's available in the\npublic cloud so being aware of this can\navoid a lot of confusion down the road\nso to sum up everything that we\ndiscussed when it comes to public cloud\nthis is when one cloud provided by one\nvendor that is available over the public\ninternet\nmulti-cloud is two or more public clouds\nthat are connected together to be used\nas a single system a private cloud\nis considered an on-premises cloud that\nfollows the five characteristics of\ncloud\nand is restricted to the one\norganization with no accessibility to\nthe public and finally hybrid cloud\nis private cloud connected to a public\ncloud\nand being used as a single environment\nagain as a note\non-premises architecture connected to\npublic cloud is considered a hybrid\nenvironment and not hybrid cloud\nthe distinction between the two\nare very different and should be\nobserved carefully as gotchas may come\nup in both the exam\nand in your role as an engineer so these\nare all the different cloud deployment\nmodels which will help you distinguish\non what type of architecture you will be\nusing in any scenario that you are given\nand so this is all i wanted to cover\nwhen it comes to cloud deployment models\nso you can now mark this lesson as\ncomplete\nand let's move on to the next one\nwelcome back\nso to finish up the nist definition of\ncloud computing i wanted to touch on\ncloud service models which is commonly\nreferred to as zas\nnow this model is usually called zas or\nxaas\nstanding for anything as a service it\nincludes all the services in a cloud\nthat customers can consume and x can be\nchanged to associate with the specific\nservice\nso in order to describe the cloud\nservice models i needed to touch on some\nconcepts that you may or may not be\nfamiliar with this will make\nunderstanding the service models a\nlittle bit easier as i go through the\ncourse and describe the services\navailable and how they relate to the\nmodel this lesson will make so much\nsense by the end\nit'll make the services in cloud easier\nto both describe and define\nnow when it comes to deploying an\napplication they are deployed in an\ninfrastructure stack\nlike the one you see here\nnow a stack is a collection of needed\ninfrastructure that the application\nneeds to run on it is layered and each\nlayer builds on top of the one previous\nto it to create what it is that you see\nhere now as you can see at the top this\nis a traditional on-premises\ninfrastructure stack that was typically\nused pre-cloud now in this traditional\nmodel\nall the components are managed by the\ncustomer the purchasing of the data\ncenter and all the network and storage\ninvolved the physical servers the\nvirtualization the licensing for the\noperating systems the staff that's\nneeded to put it all together\nincluding racking stacking cabling\nphysical security was also something\nthat needed to be taken into\nconsideration in other words for the\norganization to put this together by\nthemselves they were looking at huge\ncosts\nnow the advantages to this is that it\nallowed for major flexibility as the\norganization is able to tune this any\nway they want to satisfy the application\ncompliance standards\nbasically anything that they wanted now\nwhen talking about the cloud service\nmodel concepts\nparts are always managed by you and\nparts are managed by the vendor now\nanother concept i wanted to touch on is\nthat unit of consumption is how the\nvendor prices what they are serving to\ntheir customer now just before cloud\nbecame big in the market there was a\nmodel where the data center was hosted\nfor you so a vendor would come along and\nthey would take care of everything with\nregards to the data center\nthe racks\nthe power to the racks the air\nconditioning\nthe networking cables out of the\nbuilding and even the physical security\nand so the unit of consumption here was\nthe rack space within the data center so\nthe vendor would charge you for the rack\nspace and in turn they would take care\nof all the necessities within the data\ncenter now this is less flexible than\nthe traditional on-premises model but\nthe data center is abstracted for you so\nthroughout this lesson i wanted to\nintroduce a concept that might make\nthings easier to grasp which is the\npizza as a service so now the\ntraditional on-premises model\nis where you would buy everything and\nmake the pizza at home\nnow as we go on in the lesson\nless flexibility will be available\nbecause more layers will be abstracted\nso the next service model that i wanted\nto introduce is infrastructure as a\nservice\nor i as for short this is where all the\nlayers from the data center up to\nvirtualization is taken care of by the\nvendor this is the most basic model\nwhich is essentially your virtual\nmachines in a cloud data center\nyou set up configure\nand manage instances that run in the\ndata center infrastructure and you put\nwhatever you want on them on google\ncloud google compute engine would\nsatisfy this model and so the unit of\nconsumption here would be the operating\nsystem as you would manage all the\noperating system updates and everything\nthat you decide to put on that instance\nbut as you can see here you are still\nresponsible for the container the run\ntime the data and the application layers\nnow bringing up the pizza as a service\nmodel is would be you picking up the\npizza and you cooking it at home moving\non to platform as a service or paz for\nshort this is a model that is geared\nmore towards developers and with pass\nthe cloud provider provides a computing\nplatform typically\nincluding the operating system the\nprogramming language execution\nenvironment the database and the web\nserver now typically with pass you never\nhave to worry about the operating system\nupdates or managing the runtime and\nmiddleware and so the unit of\nconsumption here would be the runtime\nnow the runtime layer would be the layer\nyou would consume as you would be\nrunning your code in the supplied\nruntime environment that the cloud\nvendor provides for you the provider\nmanages the hardware and software\ninfrastructure and you just use the\nservice this is usually the layer on top\nof is and so all the layers between the\ndata center and runtime is taken care of\nby the vendor a great example of this\nfor google cloud is google app engine\nwhich we will be diving into a little\nbit later getting back to the pizza as a\nservice model\npass would fall under the pizza being\ndelivered right to your door\nnow with the past model explained i want\nto move into the last model which is sas\nwhich stands for software as a service\nnow with sas all the layers are taken\ncare of by the vendor so users are\nprovided access to application software\nand cloud providers manage the\ninfrastructure and platforms that run\nthe applications g suite and microsoft's\noffice 365 are great examples of this\nmodel now sas doesn't offer much\nflexibility but the trade-off is that\nthe vendor actually takes care of all\nthese layers so again the unit of\nconsumption here is the application\nitself and of course getting to the\npizza as a service model sas\nis pretty much dining in the restaurant\nenjoying your pizza now to summarize\nwhen you have a data center on site you\nmanage everything\nwhen it's infrastructure as a service\npart of that stack is abstracted by the\ncloud vendor with platform as a service\nyou're responsible for the application\nand data\neverything else is abstracted by the\nvendor with software as a service again\nusing the pizza as a service analogy on\npremise you buy everything and you make\nthe pizza at home infrastructure as a\nservice\nyou pick up the pizza and you cook it at\nhome when it comes to platform as a\nservice the pizza is delivered\nand of course software as a service is\ndining in the restaurant now there will\nbe some other service models coming up\nin this course such as function as a\nservice and containers as a service and\ndon't worry i'll be getting into those\nlater but i just wanted to give you a\nheads up so now for some of you this may\nhave been a lot of information to take\nin but trust me\nknowing these models will give you a\nbetter understanding of the services\nprovided in google cloud as well as any\nother cloud vendor so that's all i\nwanted to cover in this lesson so you\ncan now mark this lesson as complete and\nlet's move on to the next one\nwelcome back in this lesson i wanted to\ndiscuss google cloud global\ninfrastructure how data centers are\nconnected how traffic flows when a\nrequest is done\nalong with the overall structure of how\ngoogle cloud geographic locations are\ndivided for better availability\ndurability and latency\nnow google holds a highly provisioned\nlow latency network where your traffic\nstays on google's private backbone for\nmost of its journey ensuring high\nperformance and a user experience that\nis always above the norm google cloud\nhas been designed to serve users all\naround the world by designing their\ninfrastructure with redundant cloud\nregions connected with high bandwidth\nfiber cables as well as subsea cables\nconnecting different continents\ncurrently google has invested in 13\nsubsea cables connecting these\ncontinents at points of presence as you\nsee here in this diagram hundreds of\nthousands of miles of fiber cables have\nalso been laid to connect points of\npresence for direct connectivity\nprivacy and reduced latency\njust to give you an idea of what a\nsubsea cable run might look like i have\nincluded a diagram of how dedicated\ngoogle is to their customers as there is\nso much that goes into running these\ncables that connect continents as you\ncan see here this is the north virginia\nregion being connected to the belgium\nregion from the u.s over to europe a\ncable is run from the north virginia\ndata center as well as having a point of\npresence in place\ngoing through a landing station before\ngoing deep into the sea on the other\nside the landing station on the french\nwest coast\npicks up the other side of the cable and\nbrings it over to the data center in the\nbelgium region and this is a typical\nsubsea cable run for google so\ncontinents are connected for maximum\nglobal connectivity\nnow at the time of recording this video\ngoogle cloud footprint spans 24 regions\n73 zones and over\n144 points of presence across more than\n200 countries and territories worldwide\nand as you can see here the white dots\non the map are regions that are\ncurrently being built to expand their\nnetwork for wider connectivity now to\nshow you how a request is routed through\ngoogle's network i thought i would\ndemonstrate this by using tony bowtie\nnow tony makes a request to his database\nin google cloud and google responds to\ntony's request\nfrom a pop or edge network location that\nwill provide the lowest latency this\npoint of presence is where isps can\nconnect to google's network google's\nedge network receives tony's request and\npasses it to the nearest google data\ncenter over its private fiber network\nthe data center generates a response\nthat's optimized to provide the best\nexperience for tony at that given moment\nin time the app or browser that tony is\nusing retrieves the requested content\nwith a response back from various google\nlocations including the google data\ncenters edge pops and edge nodes\nwhichever is providing the lowest\nlatency this data path happens in a\nmatter of seconds and due to google's\nglobal infrastructure it travels\nsecurely and with the least amount of\nlatency possible\nno matter the geographic location that\nthe request is coming from\nnow i wanted to take a moment to break\ndown how the geographic areas are broken\nout and organized in google cloud\nwe start off with the geographic\nlocation such as the united states of\namerica and it's broken down into\nmulti-region into regions and finally\nzones and so to start off with i wanted\nto talk about zones now a zone is a\ndeployment area for google cloud\nresources within a region a zone is the\nsmallest entity in google's global\nnetwork you can think of it as a single\nfailure domain within a region now as a\nbest practice resources should always be\ndeployed\nin zones that are closest to your users\nfor optimal latency\nnow next up we have a region\nand regions are independent geographic\nareas that are subdivided into zones so\nyou can think of a region as a\ncollection of zones and having a region\nwith multiple zones is designed for\nfault tolerance and high availability\nthe intercommunication between zones\nwithin a region is under five\nmilliseconds so rest assured that your\ndata is always traveling at optimal\nspeeds\nnow moving on into a multi-region\nnow multi-regions are large geographic\nareas that contain two or more regions\nand this allows google services to\nmaximize redundancy and distribution\nwithin and across regions\nand this is for google redundancy or\nhigh availability having your data\nspread across multiple regions\nalways reassures that your data is\nconstantly available\nand so that covers all the concepts that\ni wanted to go over when it comes to\ngeography and regions within google\ncloud\nnote that the geography and regions\nconcepts are fundamental not only for\nthe exam but for your day-to-day role in\ngoogle cloud\nso just as a recap a zone is a\ndeployment area for google cloud\nresources within a region a zone is the\nsmallest entity of google's global\ninfrastructure now a region is an\nindependent geographic area that are\nsubdivided into zones and finally when\nit comes to multi-region\nmulti-regions are large geographic areas\nthat contains two or more regions\nagain\nthese are all fundamental concepts that\nyou should know for the exam and for\nyour day-to-day role in google cloud and\nso that's all i had for this lesson so\nyou can now mark this lesson as complete\nand let's move on to the next one\n[Music]\nwelcome back\nthis lesson is going to be an overview\nof all the compute service options that\nare available in google cloud\nhow they differ from each other\nand where they fall under the cloud\nservice model again this lesson is just\nan overview of the compute options as we\nwill be diving deeper into each compute\noption\nlater on in this course so google cloud\ngives you so many options when it comes\nto compute services ones that offer\ncomplete control and flexibility others\nthat offer flexible container technology\nmanaged application platform and\nserverless environments and so when we\ntake all of these compute options and we\nlook at it from a service model\nperspective you can see that there's so\nmuch flexibility starting here on the\nleft with infrastructure as a service\ngiving you the most optimal flexibility\nmoving all the way over to the right\nwhere we have function as a service\noffering less flexibility but the upside\nbeing less that you have to manage and\nwe'll be going through these compute\noptions starting on the left here with\ninfrastructure as a service we have\ncompute engine now compute engine is\ngoogle's staple infrastructure the\nservice product that offers virtual\nmachines or vms called instances these\ninstances can be deployed in any region\nor zone that you choose you also have\nthe option of deciding what operating\nsystem you want on it as well as the\nsoftware so you have the option of\ninstalling different types of flavors of\nlinux or windows and the software to go\nwith it google also gives you the\noptions of creating these instances\nusing public or private images\nso if you or your company have a private\nimage that you'd like to use you can use\nthis to create your instances google\nalso gives you the option to use public\nimages to create instances and are\navailable when you launch compute engine\nas well there are also pre-configured\nimages and software packages available\nin the google cloud marketplace and we\nwill be diving a little bit deeper into\nthe google cloud marketplace in another\nlesson just know that there are slew of\nimages out there that's available to\ncreate instances giving you the ease to\ndeploy now when it comes to compute\nengine and you're managing multiple\ninstances these are done using instance\ngroups\nand when you're looking at adding or\nremoving capacity for those compute\nengine instances automatically you would\nuse auto scaling in conjunction with\nthose instance groups compute engine\nalso gives you the option of attaching\nand detaching disks as you need them as\nwell google cloud storage can be used in\nconjunction with compute engine as\nanother storage option and when\nconnecting directly to compute engine\ngoogle gives you the option of using ssh\nto securely connect to it so moving on\nto the next compute service option\nwe have google kubernetes engine also\nknown as gke\nnow gke\nis google's flagship container\norchestration system\nfor automating\ndeploying\nscaling and managing containers\ngke is also built on the same open\nsource kubernetes project that was\nintroduced by google to the public back\nin 2014\nnow before google made kubernetes a\nmanaged service there was many that\ndecided to build kubernetes on premise\nin their data centers and because it is\nbuilt on the same platform\ngke\noffers the flexibility of integrating\nwith these on-premise kubernetes\ndeployments now under the hood gke uses\ncompute engine instances as nodes in a\ncluster and as a quick note a cluster is\na group of nodes or compute engine\ninstances and again we'll be going over\nall this in much greater detail in a\ndifferent lesson so if you haven't\nalready figured it out google kubernetes\nengine is considered container as a\nservice now the next compute service\noption that i wanted to go over\nthat falls under platform as a service\nis app engine\nnow app engine is a fully managed\nserverless platform for developing and\nhosting web applications at scale now\nwith app engine google handles most of\nthe management of the resources for you\nfor example if your application requires\nmore computing resources because traffic\nto your website increases google\nautomatically scales the system to\nprovide these resources if the system\nsoftware needs a security update as well\nthat's handled for you too and so all\nyou need to really take care of is your\napplication\nand you can build your application in\nyour favorite language go java.net and\nmany others\nand you can use both pre-configured\nruntimes or use custom runtimes to allow\nyou to write the code in any language\napp engine also allows you to connect\nwith google cloud storage products and\ndatabases seamlessly app engine also\noffers the flexibility of connecting\nwith third-party databases as well as\nother cloud providers and third-party\nvendors app engine also integrates with\na well-known security product in google\ncloud called web security scanner as to\nidentify security vulnerabilities and so\nthat covers app engine in a nutshell\nmoving on to the next compute service\noption\nwe have cloud functions and cloud\nfunctions fall under function as a\nservice this is a serverless execution\nenvironment\nfor building and connecting cloud\nservices with cloud functions you write\nsimple single purpose functions that are\nattached to events\nthat are produced from your\ninfrastructure and services in google\ncloud your function is triggered when an\nevent being watched is fired your code\nthen executes in a fully managed\nenvironment there is no need to\nprovision any infrastructure or worry\nabout managing any servers and cloud\nfunctions can be written using\njavascript python 3\ngo or java runtimes so you can take your\nfunction and run it in any of these\nstandard environments which makes it\nextremely portable now cloud functions\nare a good choice for use cases that\ninclude the following\ndata processing or etl operations such\nas video transcoding and iot streaming\ndata web hooks that respond to http\ntriggers\nlightweight apis that compose loosely\ncoupled logic into applications as well\nas mobile back-end functions\nagain cloud functions are considered\nfunction as a service and so that covers\ncloud functions\nnow moving to the far right of the\nscreen on the other side of the arrow we\nhave our last compute service option\nwhich is cloud run now cloud run is a\nfully managed compute platform for\ndeploying and scaling containerized\napplications quickly and securely\ncloudrun was built on an open standard\ncalled k native and this enabled the\nportability of any applications that\nwere built on it cloudrun also abstracts\naway all the infrastructure management\nby automatically scaling up and down\nalmost instantaneously depending on the\ntraffic now cloud run was google's\nresponse to abstracting all the\ninfrastructure that was designed to run\ncontainers and so this is known as\nserverless for containers cloudrun has\nmassive flexibility as you can write it\nin any language\nany library using any binary this\ncompute service is considered a function\nas a service now at the time of\nrecording this video i have not heard of\ncloud cloudrun being in the exam but\nsince it is a compute service option i\nfelt the need for cloudrun to have an\nhonorable mention and so these are all\nthe compute service options that are\navailable on google cloud and we will be\ndiving deeper into each one of these\nlater on in this course\nagain this is just an overview of all\nthe compute service options that are\navailable on the google cloud platform\nand so that's all i wanted to cover for\nthis lesson\nso you can now mark this lesson as\ncomplete and let's move on to the next\none\n[Music]\nwelcome back\nnow in the last lesson i covered all the\ndifferent options for compute services\nin this lesson we're going to cover the\noptions that are available that couple\nwell with these compute services by\ndiving deeper into the different storage\ntypes and the different databases\navailable on google cloud again this is\nstrictly an overview as i will be diving\ndeeper into these services later on in\nthe course\nnow when it comes to storage options\nthere are three services that are\nreadily available to you in google cloud\neach of them have their own specific use\ncase that i will be diving into in just\na second\nthe first one i wanted to go over is\ncloud storage\nnow with cloud storage this is google's\nconsistent scalable\nlarge capacity and highly durable object\nstorage\nso when i refer to object storage this\nis not the type of storage that you\nwould attach to your instance and store\nyour operating system on i'm talking\nabout managing data as objects such as\ndocuments or pictures and shouldn't be\nconfused with block storage which\nmanages data at a more granular level\nsuch as an operating system not to worry\nif you fully don't grasp the concept of\nobject storage i will be going into\nfurther detail with that\nlater on in the cloud storage lesson\ncloud storage has 11 9's durability and\nwhat i mean by durability is basically\nloss of files so just to give you a\nbetter picture on cloud storage\ndurability if you store 1 million files\nstatistically google would lose one file\nevery 659\n000 years and you are about over 400\ntimes more likely to get hit by a meteor\nthan to actually lose a file so as you\ncan see cloud storage is a very good\nplace to be storing your files another\ngreat feature on cloud storage is the\nunlimited storage that it has with no\nminimum object size so feel free to\ncontinuously put files in cloud storage\nnow when it comes to use cases cloud\nstorage is fantastic for content\ndelivery data lakes and backups and to\nmake cloud storage even more flexible it\nis available in different storage\nclasses and availability which i will be\ngoing over in just a second now when it\ncomes to these different storage classes\nthere are four different classes that\nyou can choose from the first one is the\nstandard storage class and this storage\nclass offers the maximum availability\nwith your data with absolutely no\nlimitations this is great for storage\nthat you access all the time the next\nstorage class is near line and this is\nlow-cost archival storage so this\nstorage class is cheaper than standard\nand is designed for storage that only\nneeds to be accessed less than once a\nmonth and if you're looking for an even\nmore cost effective solution cloud\nstorage has cold line storage class\nwhich is an even lower cost archival\nstorage solution this storage class is\ndesigned for storage that only needs to\nbe accessed less than once every quarter\nand just when you thought that the\nprices couldn't get lower than cold line\ncloud storage has offered another\nstorage class called archive and this is\nthe lowest cost archival storage which\noffers storage at a fraction of a penny\nper gigabyte but is designed for\narchival or backup use that is accessed\nless than once a year now when it comes\nto cloud storage availability there are\nthree options that are available\nthere is region dual region and\nmulti-region region is designed to store\nyour data in one single region dual\nregion is exactly how it sounds which is\na pair of regions now in multiregion\ncloud storage stores your data over a\nlarge geographic area consisting of many\ndifferent regions across that same\nselected geographic area and so that\nabout covers cloud storage as a storage\noption the next storage option that i\nwanted to talk about is file store\nnow file store is a fully managed nfs\nfile server from google cloud that is\nnfs version 3 compliant you can store\ndata from running applications from\nmultiple vm instances and kubernetes\nclusters\naccessing the data at the same time file\nstore is a great option for when you're\nthinking about accessing data from let's\nsay an instance group and you need\nmultiple instances to access the same\ndata and moving on to the last storage\noption we have persistent disks\nnow with persistent disks this is\ndurable block storage for instances now\nas i explained before block storage is\ndifferent than object storage\nif you remember previously i explained\nthat object storage is designed to store\nobjects such as data or photos or videos\nwhereas block storage is raw storage\ncapacity that is used in drives that are\nconnected to an operating system in this\ncase persistent disks are doing just\nthat persistent disks come in two\noptions\nthe first one is the standard option\nwhich gives you regular standard storage\nat a reasonable price and the other\noption is solid state or ssd\nwhich gives you lower latency\nhigher iops and is just all around\nfaster than your standard persistent\ndisk both of these options are available\nin zonal and regional options depending\non what you need for your specific\nworkload so now that i've covered all\nthree storage options i wanted to touch\ninto the database options that are\navailable on google cloud these database\noptions come in both the sql and nosql\nflavors depending on your use case now\ngetting into the options themselves i\nwanted to start off going into a little\nbit of detail with the sql relational\noptions so the first option is cloud sql\nand cloud sql is a fully managed\ndatabase service that is offered in\npostgres mysql and sql server flavors\ncloud sql also has the option of being\nhighly available across zones now moving\ninto cloud spanner this is a scalable\nrelational database service that's\nhighly available not only across zones\nbut across regions and if need be\navailable globally cloud spanner is\ndesigned to support transactions strong\nconsistency and synchronous replication\nmoving into the nosql options there are\nfour available services that google\ncloud offers moving into the first one\nis bigtable\nand bigtable is a fully managed scalable\nnosql database that has high throughput\nand low latency bigtable also comes with\nthe flexibility of doing cluster\nresizing without any downtime the next\nnosql option available is datastore and\nthis is google cloud's fast fully\nmanaged\nserverless\nnosql document database datastore is\ndesigned for mobile web\nand internet of things applications\ndatastore has the capabilities of doing\nmulti-region replication\nas well as acid transactions for those\nof you who don't know i will be covering\nacid transactions in a later lesson next\nup for nosql options is firestore and\nthis is a nosql real-time database\nand is optimized for offline use if\nyou're looking to store data in a\ndatabase in real time firestore is your\noption and like bigtable you can resize\nthe cluster in firestore without any\ndowntime and the last nosql option is\nmemorystore and this is google cloud's\nhighly available\nin memory service for redis and\nmemcached this is a fully managed\nservice and so google cloud takes care\nof everything for you now i know this\nhas been a short lesson on storage and\ndatabase options but a necessary\noverview nonetheless of what's to come\nand so that's about all i wanted to\ncover in this lesson so you can now mark\nthis lesson as complete and let's move\non to the next one\n[Music]\nwelcome back now while there are some\nservices in gcp that take care of\nnetworking for you\nthere are still others like compute\nengine that give you a bit more\nflexibility in the type of networking\nyou'd like to establish\nthis lesson will go over these\nnetworking services at a high level and\nprovide you with strictly an overview to\ngive you an idea on what's available for\nany particular type of scenario when it\ncomes to connecting and scaling your\nnetwork traffic i will be going into\nfurther details\non these networking services in later\nlessons now i wanted to start off with\nsome core networking features for your\nresources and how to govern specific\ntraffic\ntraveling to and from your network this\nis where networks firewalls and routes\ncome into play so first i wanted to\nstart off with virtual private cloud\nalso known as vpc now vpc\nmanages networking functionality for\nyour google cloud resources\nthis is a virtualized network within\ngoogle cloud so you can picture it as\nyour virtualized data center vpc is a\ncore networking service\nand is also a global resource that spans\nthroughout all the different regions\navailable in google cloud each vpc\ncontains a default network as well\nadditional networks can be created in\nyour project but networks cannot be\nshared between projects\nand i'll be going into further depth on\nvpc in a later lesson so now that we've\ncovered vpc i wanted to get into\nfirewall rules and routes now firewall\nrules segment your networks with a\nglobal distributive firewall to restrict\naccess to resources so this governs\ntraffic coming into instances on a\nnetwork each default network has a\ndefault set of firewall rules that have\nalready been established but don't fret\nyou can create your own rules and set\nthem accordingly depending on your\nworkload now when it comes to routes\nthis specifies how traffic should be\nrouted within your vpc to get a little\nbit more granular routes specify how\npackets leaving an instance should be\ndirected so it's a basic way of defining\nwhich way your traffic is going to\ntravel moving on to the next concept i\nwanted to cover a little bit about low\nbalancing and how it distributes\nworkloads across multiple instances\nnow we have two different types of load\nbalancing and both these types of load\nbalancing can be broken down to even a\nmore granular level now when it comes to\nhttp or https low balancing this is the\ntype of load balancing that covers\nworldwide auto scaling and load\nbalancing over multiple regions or even\na single region on a single global ip\nhttps load balancing distributes traffic\nacross various regions and make sure\nthat the traffic is routed to the\nclosest region or in case there's\nfailures amongst instances or in\ninstances being bombarded with traffic\nhttp and https load balancing can route\nthe traffic to a healthy instance in the\nnext closest region another great\nfeature of this load balancing is that\nit can distribute traffic based on\ncontent type now when it comes to\nnetwork load balancing this is a\nregional load balancer and supports any\nand all ports\nit distributes traffic among server\ninstances in the same region\nbased on incoming ip protocol data such\nas address port and protocol now when it\ncomes to networking\ndns plays a big part and because dns\nplays a big part in networking google\nhas made this service 100 available\non top of giving any dns queries the\nabsolute lowest latency with google\ncloud dns you can publish and maintain\ndns records by using the same\ninfrastructure that google uses and you\ncan work with your managed zones and dns\nrecords such as mx records tax records\ncname records and a records and you can\ndo this all through the cli\nthe api\nor the sdk now some of the advanced\nconnectivity options that are available\nin google cloud are cloudvpn and direct\ninterconnect now cloudvpn connects your\nexisting network whether it be\non-premise or in another location\nto your vbc network through an ipsec\nconnection\nthe traffic is encrypted and travels\nbetween the two networks over the public\ninternet now when it comes to direct\ninterconnect this connectivity option\nallows you to connect your existing\nnetwork to your vpc network using a\nhighly available\nlow latency connection this connectivity\noption does not traverse the public\ninternet and merely connects to google's\nbackbone and this is what gives it the\nhighly available low latency connection\na couple of other advanced connectivity\noptions is direct and carrier peering\nthese connections allow your traffic to\nflow through google's edge network\nlocations and pairing can be done\ndirectly or it can be done through a\nthird-party carrier and so although this\nis a very short lesson i will be going\ninto greater depth on all these concepts\nin later lessons in the course so that's\nall i had to cover for this lesson so\nyou can now mark this lesson as complete\nand let's move on to the next one\nwelcome back in this lesson we're going\nto learn about how resources and\nentities\nare organized within google cloud and\nhow permissions are inherited through\nthis approach knowing this structure\nis a fundamental concept that you should\nknow while working in gcp at any\ncapacity so before defining what the\nresource hierarchy is i'd like to take a\nlittle bit of time to define what is a\nresource now in the context of google\ncloud a resource can refer to the\nservice level resources that are used to\nprocess your workloads such as compute\ninstance vms\ncloud storage buckets\nand even cloud sql databases as well as\nthe account level resources that sit\nabove the services\nsuch as the organization itself\nthe folders\nand the projects of course which we will\nbe getting into a little bit deeper in\njust a minute\nthe resource hierarchy is google's way\nto configure and grant access\nto the various cloud resources for your\ncompany within google cloud both at the\nservice level\nand at the account level\nthe resource hierarchy in google cloud\ncan truly define the granular\npermissions needed for when you need to\nconfigure permissions to everyone in the\norganization that actually makes sense\nso now that we covered what is a\nresource i wanted to start digging into\nthe resource hierarchy and the structure\nitself now google cloud resources are\norganized hierarchically using a\nparent-child relationship this hierarchy\nis designed to map an organization's\noperational structure to google cloud\nand to manage access control and\npermissions for groups of related\nresources\nso overall\nresource hierarchy will give\norganizations better management of\npermissions and access control\nthe accessibility of these resources or\npolicies are controlled by identity and\naccess management also known as iam a\nbig component of gcp which we will be\ndigging into a little bit later on in\nthis course and so when an iam policy is\nset on a parent the child will inherit\nthis policy respectively access control\npolicies and configuration settings on a\nparent resource\nare always inherited by the child also\nplease note that each child object can\nonly have exactly one parent\nand that these policies are again\ncontrolled by iam so now to understand a\nlittle bit more about how the gcp\nresource hierarchy works\ni wanted to dig into the layers that\nsupport this hierarchy\nso this is a diagram of exactly what the\nresource hierarchy looks like in all of\nits awesomeness\nincluding the billing account along with\nthe payments profile but we're not going\nto get into that right now i'll actually\nbe covering that in a later lesson so\nmore on that later\nso building the structure from the top\ndown we start off with the domain or\ncloud level and as you can see here the\ndomain of bowtieinc.co\nis at the top\nthis is the primary identity of your\norganization at the domain level this is\nwhere you manage your users in your\norganizations\nso users policies and these are linked\nto g suite or cloud identity accounts\nnow underneath the domain level we have\nthe organization level and this is\nintegrated very closely with the domain\nso with the organization level this\nrepresents an organization and is the\nroot node of the gcp resource hierarchy\nit is associated with exactly one domain\nhere we have the domain set as bowtie\ninc\nall entities or resources\nbelong to and are grouped under the\norganization\nall controlled policies applied to the\norganization\nare inherited by all other entities and\nresources underneath it so any folders\nprojects or resources will get those\npolicies that are applied from the\norganization layer now i know that we\nhaven't dug into roles as of yet\nbut the one thing that i did want to\npoint out is that when an organization\nis created\nan organization admin role is created\nand this is to allow full access to edit\nany or all resources\nnow moving on to the folders layer this\nis an additional grouping mechanism and\nisolation boundary between each project\nin essence\nit's a grouping of other folders\nprojects and resources so if you have\ndifferent departments and teams within a\ncompany\nthis is a great way to organize it now a\ncouple of caveats when it comes to\nfolders\nthe first one is you must have an\norganization node and the second one is\nwhile a folder can contain multiple\nfolders or resources\na folder or resource can have exactly\none parent\nnow moving into the projects layer this\nis a core organizational component of\ngoogle cloud as projects are required to\nuse service level resources\nthese projects are the base level\norganizing entity in gcp\nand parent all service level resources\njust as a note\nany given resource can only exist in one\nproject and not multiple projects at the\nsame time and moving on to the last\nlayer we have the resources layer and\nthis is any service level resource\ncreated in google cloud\neverything from compute engine instances\nto cloud storage buckets to cloud sql\ndatabases apis users\nall these service level resources that\nwe create in google cloud fall under\nthis layer now giving the hierarchy a\nlittle bit more context i want to touch\non labels for just a second\nlabels help categorize resources by\nusing a key value pair and you can\nattach them to any resource\nand so what labels help you do is to\nbreak down and organize costs when it\ncomes to billing now to give you some\nmore structure with regards to the\nhierarchy\nunder the domain level\neverything underneath this is considered\na resource\nand to break it down even further\neverything you see from the organization\nlayer to the projects layer is\nconsidered an account level resource\neverything in the resource layer is\nconsidered a service level resource and\nso this is how the google cloud resource\nhierarchy is split up and organized and\nso before i finish off this lesson i\nwanted to give you a quick run-through\non how policies can be applied at a\nhierarchical level\nso i thought i'd bring in tony bowtie\nfor a quick demo\nso just to give you an example\ntony bowtie is part of department b and\ntony's manager lark\ndecides to set a policy on department\nb's folder and this policy grants\nproject owner role to tony at\nbowtieinc.co so tony will have the\nproject owner role for project x and for\nproject y at the same time\nlark assigns laura at bowtieinc.co\ncloud storage admin role on project x\nand thus she will only be able to manage\ncloud storage buckets in that project\nthis hierarchy and permission\ninheritance comes up quite a bit not\nonly in the exam but is something that\nshould be carefully examined when\napplying permissions\nanywhere within the hierarchy in your\nday-to-day role as an engineer\napplying permissions or policies to\nresources\nwith existing policies\nmay not end up getting you the desired\nresults you're looking for and may have\na chance to be overlooked now i hope\nthese diagrams have given you some good\ncontacts with regards to resource\nhierarchy its structure and the\npermissions applied down the chain now\nthat's all i have for this lesson on\nresource hierarchy so you can now mark\nthis lesson as complete and let's move\non to the next one\n[Music]\nwelcome back\nin this lesson i will be covering a few\ndifferent topics that i will touch on\nwhen creating a new google cloud account\ni will be covering going over the free\ntier and the always free options the\ndifferences between them and a demo\nshowing how you can create your own free\ntier account as well i'll also be going\ninto what you will need in order to\nfulfill this demo so for the remainder\nof this course all the demos will run\nunder the free tier now when i built\nthis course i built it with budget in\nmind and having viewed on ways where i\ncan keep the price to a minimum while\nstill keeping the demos extremely useful\nand so the free tier falls within all\nthese guidelines and will help you learn\nwithout the high ticket price and so\ngetting into a quick overview of the\ndifferences between the free tier and\nthe always free option i have broken\nthem down here with their most\nsignificant differences in the free tier\ngoogle cloud offers you a 12 month free\ntrial with a 300\nu.s credit this type of account ends\nwhen the credit is used or after the 12\nmonths whichever happens first and so\nfor those of you who are looking at\ntaking advantage of this on a business\nlevel unfortunately the free tier only\napplies to a personal account and cannot\nbe attached to a business account now\nmoving over to the always free option\nthe always free option isn't a special\nprogram but it's a regular part of your\ngoogle cloud account it provides you\nlimited access to many of the google\ncloud resources free of charge and once\nthese limits have been hit\nthen you are charged at the regular per\nsecond billing rate\nand i will show you a little bit later\nhow to monitor these credits so that you\ndon't go over using this in conjunction\nwith the free tier account is not\npossible you have to have an upgraded\nbilling account which can also include a\nbusiness account now there are a bunch\nmore stipulations in this program and i\nwill include a link to both of them in\nthe lesson text below for later viewing\nat your convenience\nnow lastly before we get into the demo\ni wanted to go through a quick\nrun-through of exactly what's needed to\nopen up your free tier account\nso we're going to start off with a fresh\nnew gmail address so that it doesn't\nconflict with any current gmail address\nthat you may have you're gonna need a\ncredit card for verification and this is\nfor google to make sure that you're an\nactual human being and not a robot and\nyou won't be charged unless you go above\nthe 300 credit limit as well i highly\nrecommend going into a private browsing\nsession so whether you're using chrome\nyou would use an incognito session if\nyou're using firefox you would use\nprivate browsing and in microsoft edge\nyou would be using the in private mode\nand so in order to start with this free\ntrial you can head on over to the url\nlisted here and i'll also include this\nin the lesson text so head on over to\nthis url and i'll see you there in just\na second\nokay so here we are at the free trial\nurl i'm here in google chrome in an\nincognito session and so we're not going\nto sign up we're going to go over here\nto create account you can just click on\ncreate account\nfor myself because as i mentioned\nearlier you're not able to create a free\ntrial account with your business\nso i'm going to click on for myself\nand it's going to bring you to this page\nwhere it says create your google account\nand you're going to go to create a new\ngmail address instead\nand now you're going to fill in all the\nnecessary information that's needed in\norder to open up this new gmail account\nonce you're finished typing your\npassword you can hit next\nand now i got prompted for six digit\nverification code that i have to plug in\nbut in order to do that google needs my\ntelephone number so i'm gonna type that\nin now and just to let you know this\nverification is done to let google know\nthat you're not a bot and you're a real\nhuman and google just sent me a\nverification code\nand this is a one-time verification code\nthat i'm going to plug in\nand i'm going to hit verify\nand you can plug in the necessary\ninformation here for recovery email\naddress your birthday and gender and\nthis is so that google can authenticate\nyou in case you accidentally misplace\nyour password\nand then just hit next and here google\ngives you a little bit more information\non what your number can be used for and\nso i'm going to go ahead and skip it\nand of course we're going to read\nthrough the terms of service and the\nprivacy policy\nclick on agree\nand as you can see we're almost there\nit shows here that we're\nsigning up for the free trial i'm in\ncanada so\ndepending on your country this may\nchange of course i read the terms of\nservice and i'm going to agree to it and\ni don't really want any updates so you\ncan probably skip that and just hit\ncontinue\nand so this is all the necessary\ninformation that needs to be filled out\nfor billing and so here under account\ntype be sure to click on individual as\nopposed to business and again fill in\nall the necessary information with\nregards to your address and your credit\ncard details and once you fill that in\nyou can click on start my free trial\nand once you've entered in all that\ninformation you should be brought to\nthis page with a prompt\nasking you exactly what you need with\nregards to google cloud and you can just\nhit skip here\nand i'm going to zoom in here just see a\nlittle better and so here you're left\nwith a checklist where you can go\nthrough all the different resources and\nit even gives you a checklist to go\nthrough but other than that we're in\nand so just to verify that we're signed\nup for a free tier account i'm going to\ngo over to billing and i'm going to see\nhere that i have my free trial credit\nand it says 411 dollars and due to the\nfact that my currency is in canadian\ndollars it's been converted from us\ndollars and so we'll be going through\nbilling in a later lesson\nbut right now we are actually logged in\nand so that's all i wanted to cover for\nthis lesson on how to sign up for your\nfree trial account\nso you can now mark this lesson as\ncomplete and you can join me in the next\none\nwhere we will secure the account\nusing a method called two-step\nverification\n[Music]\nwelcome back\nso in the last lesson we went ahead and\ncreated a brand new gcp account in this\nlesson we'll be discussing how to secure\nthat gcp account by following some best\npractices\nwhenever any account is created in\ngoogle cloud and this can be applied\nwith regards to personal accounts as\nwell as the super admin account as it's\nalways good to keep safety as a priority\nthis lesson may be a refresher for those\nwho are a bit more advanced as for\neveryone else these steps could help you\nfrom an attack on your account i'd first\nlike to run you through a scenario of\nthe outcome on both secure and\nnon-secure accounts\nas well as the different options that\nreside in google cloud\nwhen it comes to locking down your\naccount i'll then run through a hands-on\ndemo in the console\nto show you how you can apply it\nyourself\nso in this specific scenario a username\nand password is used to secure the\naccount\nhere lark a trouble causing manager\nlooks over the shoulder of tony bowtie\nwhile he plugs in his username and\npassword\nso that he can later access his account\nto wreak havoc on tony's reputation as\ntony leaves for coffee\nlark decides to log in and send a\ncompany-wide email from tony's account\nto change an already made decision about\nnext season's store opening in rome\nitaly that would not look good for tony\nit was that easy for lark to steal\ntony's password and in a real life\nscenario it would be that easy for\nsomeone to steal your password now when\nsomeone steals your password they could\ndo even more devious things than what\nlark did not just sending out harmful\nemails they could lock you out of your\naccount or even delete emails or\ndocuments this is where two-step\nverification comes in this can help keep\nbad people out\neven if they have your password two-step\nverification is an extra layer of\nsecurity most people only have one layer\nto protect their account which is their\npassword with two-step verification\nif a bad person hacks through your\npassword they'll still need your phone\nor security key to get into your account\nso how two-step verification works is\nthat sign-in will require something you\nknow\nand something that you have\nthe first one is to protect your account\nwith something you know which will be\nyour password and the second is\nsomething that you have\nwhich is your phone or security key\nso whenever you sign into google you'll\nenter your password as usual\nthen a code will be sent to your phone\nvia text\nvoice call or google's mobile app or if\nyou have a security key you can insert\nit into your computer's usb port\ncodes can be sent in a text message or\nthrough a voice call depending on the\nsetting you choose\nyou can set up google authenticator or\nanother app that creates a one-time\nverification code which is great for\nwhen you're offline you would then enter\nthe verification code on the sign in\nscreen to help verify that it is you\nanother way for verification is using\ngoogle prompts and this can help protect\nagainst sim swap or other phone number\nbased hacks google prompts are push\nnotifications you'll receive on android\nphones that are signed into your google\naccount or iphones with the gmail app or\ngoogle app that's signed into your\ngoogle account now you can actually skip\na second step on trusted devices\nif you don't want to provide a second\nverification step each time you sign in\non your computer or your phone you can\ncheck the box next to don't ask again on\nthis computer and this is a great added\nfeature if you are the only user on this\ndevice\nthis feature is not recommended if this\ndevice is being used by multiple users\nsecurity keys are another way to help\nprotect your google account from\nphishing attacks when a hacker tries to\ntrick you into giving them your password\nor other personal information now a\nphysical security key is a small device\nthat you can buy to help prove it's you\nsigning in when google needs to make\nsure that it's you\nyou can simply connect your key to your\ncomputer and verify that it's you and\nwhen you have no other way to verify\nyour account you have the option of\nusing backup codes and these are\none-time use codes that you can print or\ndownload and these are multiple sets of\neight-digit codes that you can keep in a\nsafe place in case you have no other\noptions for verification i personally\nhave found use in using these backup\ncodes as i have used them in past when\nmy phone died\nso ever since lark's last email\ntony not only changed his password\nbut added a two-step verification to his\naccount so that only he would have\naccess and would never have to worry\nagain about others looking over his\nshoulder to gain access to his account\nas tony leaves for coffee\nlark tries to log in again but is\nunsuccessful due to the two-step\nverification in place tony has clearly\noutsmarted the bad man in this scenario\nand lark will have to look for another\nway to foil tony's plan to bring\ngreatness to bow ties across the globe\nand this is a sure difference between\nhaving a secure account and a not so\nsecure account and so now that i've gone\nthrough the theory of the two-step\nverification process i'm going to dive\ninto the console and implement it with\nthe hands-on demo just be aware that you\ncan also do this through the gmail\nconsole but we're going to go ahead and\ndo it through the google cloud console\nusing the url you see here so whenever\nyou're ready feel free to join me in the\nconsole\nand so here we are back in the console\nand over here on the top right hand\ncorner you will find a user icon and you\ncan simply click on it\nand click over to your google account\nnow i'm just going to zoom in for better\nviewing\nand so in order to enable two-step\nverification we're gonna go over here to\nthe menu on the left and click on\nsecurity and under signing into google\nyou will find two-step verification\ncurrently it's off as well as using my\nphone to sign in is off so i'm going to\nclick on this bar here for two-step\nverification\nand i definitely want to add an extra\nlayer of security and i definitely want\nto keep the bad guys out so i'm going to\ngo ahead and click on the get started\nbutton\nit'll ask me for my password\nand because i've entered my phone number\nwhen i first signed up for the account\nit actually shows up here this is i\nantony which is my iphone and so now i\ncan get a two-step verification here on\nmy iphone and again this is going to be\na google prompt as it shows here but if\ni wanted to change it to something else\ni can simply click on show more options\nand here we have a security key as well\nas text message or voice call i highly\nrecommend the google prompt as it's\nsuper easy to use with absolutely no\nfuss and so as i always like to verify\nwhat i've done i'm going to click on\nthis try it now button and so because i\nwanted to show you exactly what a live\ngoogle prompt looks like i'm going to\nbring up my phone here on the screen so\nthat you can take a look\nand it actually sent me a google prompt\nto my phone and i'm just going to go\nahead and open up my gmail app so i can\nverify that it is indeed me that wants\nto log in which i will accept\nand so once i've accepted the google\nprompt another window will pop up asking\nme about a backup option and so i'll\nsimply need my phone number\nand i can either get a text message or a\nphone call and again you have other\noptions as well so you can use the\none-time backup codes which we discussed\nearlier and you can print or download\nthem but i usually like to use a text\nmessage and so i'm going to use that\ni'm going to send it to my phone\nand so just to verify it\ni'm gonna now plug in the one-time code\nthat was sent to me\nand then just hit next\nso the second step is the google prompt\nit's my default and my backup options if\ni can't get google prompt is a voice or\ntext message and again this is for my\naccount antony gcloud ace at gmail.com\nsending it to my i antony device so turn\non two-step verification absolutely\nand so there you have it there is\ntwo-step verification enabled and if i\nwanted to change the available steps i\ncan do so here i can also edit it i can\nedit my phone number and i can also set\nup any backup codes in case i need it in\nmy personal opinion two-step\nverification\nis a must-have on any account best\npractice is to always do it for your\nsuper admin account which would be my\ngmail account that i am currently signed\nup with but i find is a necessity for\nany other users and always make it a\npolicy for people to add two-step\nverification to their accounts i highly\nrecommend that you make it your best\npractice to do this in your role as an\nengineer in any environment at any\norganization again two-step verification\nwill allow to keep you safe your users\nsafe and your environment safe from any\nmalicious activities that could happen\nat any time and that's all i have for\nthis lesson on two-step verification and\nsecuring your account\nso you can now mark this lesson as\ncomplete and let's move on to the next\none\n[Music]\nwelcome back\nnow there are many different ways in\nwhich you can interact with google cloud\nservices and resources this lesson is an\noverview of the gcp console and how you\ncan interact with it using the graphical\nuser interface and so for this hands-on\ndemo\ni will be diving into how to navigate\nthrough the gcp console and point out\nsome functions and features that you may\nfind helpful so with that being said\nlet's dive in\nand so here we are back in the console\nup here you can see the free trial\nstatus and then i still have 410 credit\nagain this is canadian dollars so i\nguess consider me lucky so i'm going to\ngo ahead over here and dismiss this\ndon't activate it because otherwise this\nwill kill your free trial status and you\ndon't want to do that so i'm just going\nto hit dismiss so over here on the main\npage you have a bunch of cards here that\nwill give you the status of your\nenvironment as well as the status of\nwhat's happening within google cloud\nwith these cards you can customize them\nby hitting this button over here\ncustomize and you can turn them on or\noff and you can go ahead and move these\naround if you'd like\nand i'm going to put this up here as\nwell i'm going to turn on my billing so\ni can keep track of exactly what my\nspend is i don't really need my get\nstarting card so i'm going to turn that\noff as well as the documentation i'm\ngoing to turn that off as well\nand the apis is always nice to have\nas well up here on the project info this\nreflects the current project which is my\nfirst project\nand the project name here is the same\nthe project id is showing and the\nproject number and i'm going to dive\ndeeper into that in another lesson also\nnote that your cards will reflect\nexactly what it is that you're\ninteracting with and so the more\nresources that you dive into the cards\nwill end up showing up here\nand you can add them and turn them off\nat will so i'm going to go up here and\nclick on done because i'm satisfied with\nthe way that things look\nhere on my home page and over here to\nyour left i wanted to focus on\nall the services that are available in\ntheir own specific topics so for\ninstance all of compute\nyou will find app engine compute engine\nkubernetes and so on so note that\nanything compute related you'll find\nthem all grouped together also another\ngreat feature is that you can pin\nexactly what it is that you use often so\nif i am a big user of app engine i can\npin this and it will move its way up to\nthe top this way it saves me the time\nfrom having to go and look for it every\ntime i need it and if i'm using it\nconstantly it's great to have a shortcut\nto unpin it i simply go back to the pin\nand click on it again as well if i'd\nlike to move the menu out of the way to\nget more screen real estate i can simply\nclick on this hamburger button here\nand make it disappear and to bring it\nback i can just click on that again and\ni'll bring it back again now i know that\nthere's a lot of resources here to go\nthrough so if you're looking for\nsomething specific you can always go up\nto the search bar right here\nand simply type it in so if i'm looking\nfor let's say cloud sql i can simply\ntype in sql\nand i can find it right here\ni can find the api and if anything\nassociated with the word sql if i'm\nlooking for cloud sql specifically i can\nsimply type in\ncloud sql\nand here it is\nanother thing to note is that if you\nwant to go back to your homepage you can\nsimply go up to the left hand corner\nhere and click on the google cloud\nplatform logo and it'll bring you right\nback and right here under the google\ncloud platform logo you'll see another\nset of tabs we have dashboard we also\nhave activity and this will show all the\nlatest activity that's been done\nand because this is a brand new account\ni don't have much here now because this\nis my first time in activity this is\ngoing to take some time to index\nand in the meantime i wanted to show you\nfilters\nif this were a long list to go through\nwhere activity has been happening for\nmonths i can filter through these\nactivities either by user or by\ncategories or by resource type as well\nas the date i can also combine these to\nsearch for something really granular and\nbeside the activity tab we have\nrecommendations which is based on the\nrecommender service and this service\nprovides recommendations and insights\nfor using resources on google cloud\nthese recommendations and insights are\non a per product or per service basis\nand they are based on machine learning\nand current resource usage a great\nexample of a recommendation is vm\ninstance right sizing so if the\nrecommender service detects that a vm\ninstance is underutilized it will\nrecommend changing the machine size so\nthat i can save some money and because\nthis is a fresh new account and i\nhaven't used any resources this is why\nthere is no recommendations for me so\ngoing back to the home page\ni want to touch on this projects menu\nfor a second and as you can see here i\ncan select a project now if i had many\ndifferent projects i can simply search\nfrom each different one and so to cover\nthe last part of the console i wanted to\ntouch on this menu on the top right hand\ncorner here so clicking on this present\nicon will reveal my free trial status\nwhich i dismissed earlier next to the\npresent we have a cloud shell icon and\nthis is where you can activate and bring\nup the cloud shell which i will be\ndiving into deeper in a later lesson and\nright next to it is the help button in\ncase you need a shortcut to any\ndocumentations or tutorials as well some\nkeyboard shortcuts\nmay help you be a little bit more\nefficient and you can always click on\nthis and it'll show you exactly what you\nneed to know and so i'm going to close\nthis\nand to move over to the next part in the\nmenu this is the notifications so any\nactivities that happen you will be\nnotified here and you can simply click\non the bell and it'll show you a bunch\nof different notifications for either\nresources that are created or any other\nactivities that may have happened now\nmoving on over\nthree buttons over here is the settings\nand utilities button\nand over here you will find the\npreferences\nand under communication you will find\nproduct notifications and updates and\noffers and you can turn them off or on\ndepending on whether or not you want to\nreceive these notifications as well you\nhave your language and region and you\ncan personalize the cloud console as to\nwhether or not you want to allow google\nto track your activity and this is great\nfor when you want recommendations so i'm\ngoing to keep that checked off getting\nback to some other options you will find\na link to downloads as well as cloud\npartners and the terms of service\nprivacy and project settings and so to\ncover the last topic i wanted to touch\non is the actual google account button\nand here you can add other user accounts\nfor when you log into the console with a\ndifferent user as well as go straight to\nyour google account and of course if\nyou're using a computer that's used by\nmultiple users you can sign out here as\nwell and so that's just a quick\nrun-through of the console and so feel\nfree to poke around and get familiar\nwith exactly what's available in the\nconsole so that it's a lot easier for\nyou to use and allow you to become more\nefficient and so that's all i have for\nthis lesson so you can now mark this\nlesson as complete and let's move on to\nthe next one\nwelcome back\nin this lesson i'm going to be going\nthrough a breakdown of cloud billing and\nan overview of the various resources\nthat's involved with billing billing is\nimportant to know\nand i'll be diving into the concepts\naround billing and billing interaction\nover the next few lessons\nas well i'll be getting into another\ndemo going through the details on how to\ncreate\nedit\nand delete a cloud billing account\nnow earlier on in the course i went over\nthe resource hierarchy and how google\ncloud resources are broken down starting\nfrom the domain level down to their\nresource level\nthis lesson will focus strictly on the\nbilling account\nand payments profile\nand the breakdown are concepts that are\ncomprised within them\nso getting right into it let's start\nwith the cloud billing account a cloud\nbilling account is a cloud level\nresource managed in the cloud console\nthis defines who pays for a given set of\ngoogle cloud resources billing tracks\nall of the costs incurred by your google\ncloud usage as well it is connected to a\ngoogle payments profile which includes a\npayment method defining on how you pay\nfor your charges a cloud billing account\ncan be linked to one or more projects\nand not to any one project specifically\ncloud billing also has billing specific\nroles and permissions to control\naccessing and modifying billing related\nfunctions that are established by\nidentity and access management cloud\nbilling is offered in two different\naccount types there is the self-service\nor online account or you can also choose\nfrom the invoiced or offline payments\nwhen it comes to the self-service option\nthe payment method is usually a credit\nor debit card and costs are charged\nautomatically to the specific payment\nmethod connected to the cloud billing\naccount and when you need access to your\ninvoices you can simply go to the cloud\nconsole and view them online now when it\ncomes to the invoice account first you\nmust be eligible for invoice billing\nonce you are made eligible the payment\nmethod used can be check or wire\ntransfer your invoices are sent by mail\nor electronically as well they're also\navailable in the cloud console as well\nas the payment receipts\nnow another cool feature of billing\naccount is sub-accounts and these are\nintended for resellers so if you are a\nreseller you can use subaccounts to\nrepresent your customers and make it\neasy for chargebacks cloud billing\nsubaccounts allow you to group charges\nfrom projects together on a separate\nsection of your invoice and is linked\nback to the master cloud billing account\non which your charges appear\nsub-accounts are designed to allow for\ncustomer separation and management so\nwhen it comes to ownership of a cloud\nbilling account it is limited to a\nsingle organization\nit is possible though for a cloud\nbilling account to pay for projects that\nbelong to an organization that is\ndifferent than the organization that\nowns the cloud billing account now one\nthing to note is that if you have a\nproject that is not linked to a billing\naccount you will have limited use of\nproducts and services available for your\nproject that is projects that are not\nlinked to a billing account cannot use\ngoogle cloud services that aren't free\nand so now that we've gone through an\noverview of the billing account let's\ntake a quick step into the payments\nprofile now the payments profile is a\ngoogle level resource managed at\npayments.google.com\nthe payments profile\nprocesses payments for all google\nservices and not just for google cloud\nit connects to all of your google\nservices such as google ads as well as\ngoogle cloud it stores information like\nyour name address and who is responsible\nfor the profile it stores your various\npayment methods like credit cards debit\ncards and bank accounts the payments\nprofile\nfunctions as a single pane of glass\nwhere you can view invoices payment\nhistory and so on it also controls who\ncan view and receive invoices for your\nvarious cloud billing accounts and\nproducts\nnow one thing to note about payments\nprofile is that there are two different\ntypes of payment profiles the first one\nis individual and that's when you're\nusing your account for your own personal\npayments if you register your payments\nprofile as an individual then only you\ncan manage the profile you won't be able\nto add or remove users or change\npermissions on the profile now if you\nchoose a business profile type you're\npaying on behalf of a business or\norganization a business profile gives\nyou the flexibility to add other users\nto the google payments profile you\nmanage so that more than one person can\naccess or manage a payments profile all\nusers added to a business profile\ncan then see the payment information on\nthat profile another thing to note is\nthat once the profile type has been\nselected it cannot be changed afterwards\nand so now that we've quickly gone\nthrough an overview of all the concepts\nwhen it comes to billing i am now going\nto run through a short demo where i will\ncreate a new billing account edit that\nbilling account and show you how to\nclose a billing account so whenever\nyou're ready join me in the console and\nso here i am back in the console and so\nthe first thing i want to do is i want\nto make sure that i have the proper\npermissions in order to create and edit\na new billing account so what i'm going\nto do is go over here to the hamburger\nmenu up here in the top left hand corner\nand click on it\nand go over to i am an admin and over to\niam\nnow don't worry i'm not going to get\nreally deep into this i will be going\nover this in a later section where i'll\ngo through iam and roles but i wanted to\ngive you a sense of exactly what you\nneed with regards to permissions so now\nthat i'm here i'm going to be looking\nfor a role that has to do with billing\nso i'm simply going to go over here on\nthe left hand menu and click on roles\nand you'll have a slew of roles coming\nup\nand what you can do is filter through\nthem just by simply typing in billing\ninto the filter table here at the top\nand as you can see here\nthere is billing account administrator\nbilling account creator and so on and so\nforth and just to give you a quick\noverview on these roles and so for the\nbilling account administrator this is a\nrole that lets you manage billing\naccounts but not create them so if you\nneed to set budget alerts or manage\npayment methods you can use this role\nthe billing account creator allows you\nto create new self-serve online billing\naccounts the billing account user allows\nyou to link projects to billing accounts\nthe billing account viewer allows you to\nview billing account cost information\nand transactions and lastly the project\nbilling manager allows you to link or\nunlink the project to and from a billing\naccount so as you can see these roles\nallow you to get pretty granular when it\ncomes to billing so i'm going to go back\nover to the left hand menu over on iam\nand click on there and i want to be able\nto check my specific role and what\npermissions that i have or i will need\nin order to create a new billing account\nand so if i click on this pencil it'll\nshow me exactly\nwhat my role is and what it does and as\nit says here i have full access to all\nresources which means that i am pretty\nmuch good to go so i'm going to cancel\nout here\nand i'm going to exit i am an admin\nso i'm going to click on the navigation\nmenu\nand go over to billing\nand so this billing account is tied to\nthe current project and because it's the\nonly billing account it's the one that\nshows up and so what i want to do is i\nwant to find out a little bit more\ninformation with regards to this billing\naccount so i'm going to move down the\nmenu and click on account management\nhere i can see the billing account which\nis my billing account i can rename it if\ni'd like\nand i can also see the projects that are\nlinked to this billing account so now\nthat we've viewed all the information\nwith regards to the my billing account\ni'm going to simply click on this menu\nover here\nand click on the arrow and go to manage\nbilling accounts and here it will bring\nme to all my billing accounts and\nbecause i only have one is shown here my\nbilling account but if i had more than\none they would show up here and so now\nin order for me to create this new\nbilling account i'm going to simply\nclick on create account\nand i will be prompted with a name a\ncountry and a currency for my new\nbilling account and i'm actually going\nto rename this billing account and i'm\ngoing to rename it to gcloud\nace\ndash billing\ni'm going to leave my country as canada\nand my currency in canadian dollars and\ni'm going to simply hit continue\nand it's giving me the choice in my\npayments profile\nand because i want to use the same\npayments profile i'm just going to\nsimply leave everything as is but for\ndemonstration purposes\nover here you can click on the payments\nprofile\nand the little arrow right beside the\ncurrent profile will give me the option\nto create a new payments profile\nand we're going to leave that as is\nunder customer info i have the option of\nchanging my address and i can click on\nthis pencil icon and change it as well i\ncan go to payment methods and click on\nthe current payment method with that\nlittle arrow\nand add a new credit or debit card and\nas i said before we're going to keep\nthings the way they are and just hit\nsubmit and enable billing\nnow as you can see here i got a prompt\nsaying that a confirmation email will be\nsent within 48 hours now usually when\nyou're setting up a brand new billing\nprofile with an already created payments\nprofile you'll definitely get a\nconfirmation email in less than 48 hours\nnow in order for me to finish up this\ndemo i'm gonna wait until the new\nbilling account shows up and continue\nwith the demo from then and so here i am\nback in the billing console and it only\ntook about 20 minutes and the gcloud ace\nbilling account has shown up and so with\npart of this demo what i wanted to show\nis how you can take a project and attach\nit to a different billing account and so\ncurrently my only project is attached to\nthe my billing account so now if i\nwanted to change my first project to my\ngcloud ace dash billing account\ni can simply go over here to actions\nclick on the hamburger menu\nand go to change billing\nhere i'll be prompted to choose a\nbilling account and i can choose g cloud\na stash billing\nand then click on set account\nand there it is my first project is now\nlinked to g cloud a stash billing so if\ni go back over to my billing accounts\nyou can see here that my billing account\ncurrently has zero projects and g cloud\na stash billing has one project now just\nas a quick note and i really want to\nemphasize this\nis that if you're changing a billing\naccount for a project\nand you are a regular user\nyou will need the role of the billing\naccount administrator\nas well as the project owner role\nso these two together will allow a\nregular user to change a billing account\nfor a project\nand so now what i want to do is i want\nto take the gcloud a stash billing and i\nwant to close that account\nbut before i do that i need to unlink\nthis project and bring it back to\nanother billing account which in this\ncase would be my billing account so i'm\ngoing to go back up here to the menu\nclick on my projects and we're going to\ndo the exact same thing that we did\nbefore\nunder actions i'm going to click on the\nhamburger menu and change billing\ni'm going to get the prompt again and\nunder billing account i'm going to\nchoose my billing account and then click\non set account\nso as you can see the project has been\nmoved to a different billing account i'm\ngoing to go back to my billing accounts\nand as you can see here the project is\nback to my billing account and so now\nthat the project is unlinked from the\ngcloud a stash billing account i can now\ngo ahead and close out that account now\nin order to do that i'm going to click\non gcloud a stash billing i'm going to\ngo down here on the hand menu all the\nway to the bottom to account management\nclick on there and at the top here you\nwill see close billing account i'm going\nto simply click on that and i'll get a\nprompt that i've spent zero dollars and\nis linked to zero projects\nnow if i did have a project that was\nlinked to this billing account i would\nhave to unlink the project before i was\nable to close this billing account so as\na failsafe i'm being asked to type close\nin order to close this billing account\nso i'm going to go ahead and do that now\nand click on close billing account just\nas a note google gives me the option to\nreopen this billing account in case i\ndid this by mistake and i really needed\nit\ni can reopen this billing account so now\nmoving back over to billing you'll see\nhere\nthat i'm left with my single billing\naccount called my billing account with\nthe one project that's linked to it and\nso that covers my demo on creating\nediting and closing a new billing\naccount as well as linking and unlinking\na project to and from a different\nbilling account so i hope you found this\nuseful\nand you can now mark this lesson as\ncomplete and let's move on to the next\none\n[Music]\nwelcome back\nin this lesson i'm going to be going\nover controlling costs in google cloud\nalong with budget alerts\ni will be touching on all the available\ndiscounts the number of ways to control\ncosts\nand go over budget alerts to get a more\ngranular and programmatic approach so\nstarting off i wanted to touch on\ncommitted use discounts now committed\nuse discounts provide discounted prices\nin exchange for your commitment to use a\nminimum level of resources for a\nspecified term the discounts are\nflexible cover a wide range of resources\nand are ideal for workloads with\npredictable resource needs when you\npurchase google cloud committed use\ndiscounts you commit to a consistent\namount of usage for a one or three year\nperiod there are two commitment types\navailable\nand as you can see here they are spend\nbased and resource based commitment\ntypes\nand unlike most other providers the\ncommitment fee is billed monthly so\ngoing over the specific commitment types\ni wanted to start off with spend based\ncommitment now for spend based\ncommitment you commit to a consistent\namount of usage measured in dollars per\nhour\nof equivalent on-demand spend for a one\nor three year term in exchange you\nreceive a discounted rate on the\napplicable usage your commitment covers\nso you can purchase committed use\ndiscounts from any cloud billing account\nand the discount applies to any eligible\nusage in projects paid for by that cloud\nbilling account any overage is charged\nat the on-demand rate spend based\ncommitments can give you a 25 discount\noff on-demand pricing for a one-year\ncommitment and up to a 52 discount off\nof on-demand pricing for a three-year\ncommitment now spend-based commitments\nare restricted to specific resources\nwhich is cloud sql database instances\nand google cloud vmware engine\nand this commitment\napplies to the cpu and memory usage for\nthese available resources now the other\ncommitted use discount is the\nresource-based commitment\nso this discount is for a commitment to\nspend a minimum amount for compute\nengine resources in a particular region\nresource-based commitments are ideal for\npredictable workloads when it comes to\nyour vms\nwhen you purchase a committed use\ncontract you purchase compute resources\nsuch as vcpus\nmemory\ngpus\nand local ssds and you purchase these at\na discounted price in return for\ncommitting to paying for those resources\nfor one or three years the discount is\nup to 57 percent for most resources like\nmachine types or gpus the discount is up\nto 70 percent for memory optimized\nmachine types and you can purchase a\ncommitted use contract for a single\nproject or purchase multiple contracts\nwhich you can share across many project\nby enabling shared discounts and sharing\nyour committed use discounts across all\nyour projects reduces the overhead of\nmanaging discounts on a per project\nbasis\nand maximizes your savings by pooling\nall of your discounts across your\nproject's resource usage if you have\nmultiple projects that share the same\ncloud billing account you can enable\ncommitted use discount sharing so all of\nyour projects within that cloud billing\naccount share all of your committed use\ndiscount contracts and so your sustained\nuse discounts are also pooled at the\nsame time so touching on sustained use\ndiscounts\nthese are automatic discounts for\nrunning specific compute engine\nresources a significant portion of the\nbilling month\nsustained use discounts apply to the\ngeneral purpose\ncompute and memory optimize machine\ntypes as well as sole tenant nodes and\ngpus again sustained use discounts are\napplied automatically to usage within a\nproject separately for each region so\nthere's no action required on your part\nto enable these discounts so for example\nwhen you're running one of these\nresources for more than let's say 25\npercent of the month\ncompute engine automatically gives you a\ndiscount for every incremental minute\nthat you use for that instance now\nsustained use discounts automatically\napply to vms created by both google\nkubernetes engine and compute engine but\nunfortunately do not apply to vms\ncreated using the app engine flexible\nenvironment as well as data flow and e2\nmachine types\nnow to take advantage of the full\ndiscount you would create your vm\ninstances on the first day of the month\nas discounts reset at the beginning of\neach month and so the following table\nshows the discount you get at each usage\nlevel of a vm instance these discounts\napply for all machine types but don't\napply to preemptable instances and so\nsustained use discounts can save you up\nto a maximum of a 30 percent discount so\nanother great way to calculate savings\nin google cloud is by using the gcp\npricing calculator this is a quick way\nto get an estimate of what your usage\nwill cost on google cloud so the gcp\npricing calculator can help you identify\nthe pricing for the resources that you\nplan to use in your future architecture\nso that you are able to calculate how\nmuch your architecture will cost you\nthis calculator holds the pricing for\nalmost all resources encapsulated within\ngcp and so you can get a pretty good\nidea of what your architecture will cost\nyou without having to find out the hard\nway this calculator can be found at the\nurl shown here and i will include this\nin the lesson text below now moving\nright along to cloud billing budgets so\nbudgets enable you to track your actual\nspend\nagainst your plan spend\nafter you've set a budget amount you set\nbudget alert threshold rules that are\nused to trigger email notifications and\nbudget alert emails help you stay\ninformed about how your spend is\ntracking against your budget this\nexample here is a diagram of a budget\nalert notification and is the default\nfunctionality for any budget alert\nnotifications\nnow to get a little bit more granular\nyou can define the scope of the budget\nso for example you can scope the budget\nto apply to the spend of an entire cloud\nbilling account or get more granular to\none or more projects\nand even down to a specific product you\ncan set the budget amount to a total\nthat you specify\nor base the budget amount on the\nprevious month's spend when costs exceed\na percentage of your budget based on the\nrules that you set by default alert\nemails are sent to billing account\nadministrators and billing account users\non the target cloud billing account and\nagain this is the default behavior of a\nbudget email notification\nnow as said before the default behavior\nof a budget is to send alert emails to\nbilling account administrators and\nbilling account users on the target\ncloud billing account when the budget\nalert threshold rules trigger an email\nnotification now these email recipients\ncan be customized by using cloud\nmonitoring to specify other people in\nyour organization to receive these\nbudget alert emails a great example of\nthis would be a project manager or a\ndirector knowing how much spend has been\nused up in your budget and the last\nconcept i wanted to touch on when it\ncomes to cloud billing budgets is that\nyou can also use pub sub for\nprogrammatic notifications to automate\nyour cost control response based on the\nbudget notification\nyou can also use pub sub in conjunction\nwith billing budgets to automate cost\nmanagement tasks and this will provide a\nreal-time status of the cloud billing\nbudget and allow you to do things like\nsend notifications to slack or disable\nbilling to stop usage as well as\nselectively control usage when budget\nhas been met and so these are all the\nconcepts that i wanted to cover when it\ncame to cloud billing budgets now i know\nthis lesson may have been a bit dry and\nnot the most exciting service to dive\ninto but it is very important to know\nboth for the exam\nand for your role as an engineer when it\ncomes to cutting costs in environments\nwhere your business owners deem\nnecessary and so that's all i had for\nthis lesson\nso you can now mark this lesson as\ncomplete and please join me in the next\none where i dive into the console and do\nsome hands-on demos when it comes to\ncommitted use discounts\nbudget alerts and editing budget alerts\nas well as adding a little bit of\nautomation into the budgeting alerts\n[Music]\nwelcome back in the last lesson i went\nover a few ways to do cost management\nand the behaviors of budget alerts\nin this lesson i will be doing a demo to\nshow you committed use discounts and\nreservations along with how to create\nbudget alerts\nand as well how to edit them so with\nthat being said let's dive in so now i'm\ngoing to start off with committed use\ndiscounts in order to get there i'm\ngoing to find it in compute engine so\ni'm going to simply go up here on the\ntop left hand corner back to the\nnavigation menu\ni'm going to go down to compute engine\nand i'm going to go over here to\ncommitted use discounts\nand as we discussed earlier these\ncommitments for compute engine are\nresource based and as you can see here\nwe have hardware commitments and\nreservations now reservations i will get\ninto just a little bit later but with\nregards to hardware commitments we're\ngoing to get into that right now and as\nexpected i have no current commitments\nso i'm going to go up to purchase\ncommitment and so i need to start off\nwith\nfinding a name for this commitment and\nso i'm going to name this commitment\ndemo dash commitment\nit's going to ask me for a region i'm\ngoing to keep it in us central one with\nthe commitment type here is where i can\nselect the type of machine that i'm\nlooking for so i can go into general\npurpose and 1 and 2\nand 2d e2 as well as memory optimize\nand compute optimized and so i'm going\nto keep it at general purpose and one\nagain the duration one or three years\nand we get down to cores i can have as\nmany vcpus as i'd like\nso if i needed 10 i can do that and i'll\nget a pop-up here on the right showing\nme the estimated monthly total as well\nas an hourly rate for this specific vm\nwith 10 cores i can also select the\nduration for three years and as expected\ni'll get a higher savings because i'm\ngiving a bigger commitment so bring it\nback down to one year and let's put the\nmemory up to 64 gigabytes here i can add\ngpus and i have quite a few to choose\nfrom as well as local ssds and here with\nthe local ssds i can choose as many\ndisks as i'd like as long as it's within\nmy quota and each disk size is going to\nbe 375 gigabytes so if you're looking\ninto committed use discounts and using\nlocal ssds please keep that in mind\nagain the reservation can be added here\nand i'll be getting into that in just a\nsecond and now i don't want to actually\npurchase it but i did want to show you\nexactly what a committed use discount\nwould look like and how you would apply\nit again here on the right hand side it\nshows me the details of the estimated\nmonthly total and the hourly rate so i'm\ngoing to go over here and hit cancel\nand if i were to have applied it\nthe commitment would show up here in\nthis table and give me all the specified\nconfigurations\nof that instance right here now touching\non reservations\nreservations is when you reserve the vm\ninstances you need\nso when the reservation has been placed\nthe reservation ensures that those\nresources are always available for you\nas some of you might know when you go to\nspin up a new compute engine vm\nespecially when it comes to auto scaling\ninstance groups the instances can\nsometimes be delayed or unavailable now\nthe thing with reservations is that a vm\ninstance can only use a reservation if\nits properties exactly match the\nproperties of the reservation which is\nwhy it's such a great pairing with\ncommitted use discounts\nso if you're looking to make a\nresource-based commitment and you always\nwant your instance available you can\nsimply create a reservation attach it to\nthe commitment and you will never have\nto worry about having the resources to\nsatisfy your workload as they will\nalways be there so again going into\ncreate reservation it'll show me here\nthe name the description i can choose to\nuse the reservation automatically or\nselect a specific reservation the region\nand zone\nnumber of instances and here i can\nspecify the machine type or specify an\ninstance template and again this is\nanother use case where if you need\ncompute engine instances spun up due to\nauto scaling this is where reservations\nwould apply so getting back to machine\ntype i can choose from vcpus\nas well as the memory i can customize it\ni can add as many local ssds as my\nquotas will allow me and i can select my\ninterface type and i'm going to cancel\nout of here now when it comes to\ncommitted use discounts and reservations\nas it pertains to the exam\ni have not seen it but since this is an\noption to save money i wanted to make\nsure that i included it in this lesson\nas this could be a great option for use\nin your environment so now that we\ncovered resource-based committed use\ndiscounts i wanted to move into spend\nbased commitments and so where you would\nfind that would be over in billing\nso again i'm going to go up to the\nnavigation menu in the top left hand\ncorner and go into billing\nnow you'd think that you would find it\nhere under commitments but only when you\nhave purchased a commitment will it\nactually show up here but as you can see\nhere it's prompting us to go to the\nbilling overview page\nso going back to the overview page\nyou'll find it\ndown here on the right and so i can now\npurchase a commitment and as we\ndiscussed before\na spend based commitment can be used for\neither cloud sql or for vmware engine\ni select my billing account\nthe commitment name the period either\none year or three years and it also\nshows me the discount which could help\nsway my decision as well as the region\nas well as the hourly on-demand\ncommitment now you're probably wondering\nwhat this is\nand as explained here this commitment is\nbased on the on-demand price\nand once this is all filled out the\ncommitment summary will be populated and\nafter you agree to all the terms and\nservices you can simply hit purchase\nbut i'm going to cancel out of here\nand so that is an overview for the spend\nbased commitment and again these\ncommitted use discounts i have not seen\non the exam\nbut i do think that it's good to know\nfor your day-to-day environment if\nyou're looking to save money and really\nbreak down costs\nso now that i've covered committed use\ndiscounts and reservations\ni wanted to move over to budgets and\nbudget alerts and because i'm already on\nthe billing page all i need to do is go\nover here to the left hand menu and\nclick on budgets and alerts now setting\nup a budget for yourself for this course\nwould be a great idea especially for\nthose who are cost conscious on how much\nyou're spending with regards to your\ncloud usage and so we're to go ahead and\ncreate a new budget right now so let's\ngo up here to the top to create budget\nand i'm going to be brought to a new\nwindow where i can put in the name of\nthe budget and i'm going to call this\nace\ndash budget and because i want to\nmonitor all projects and all products\ni'm going to leave this as is but if you\ndid have multiple projects you could get\na little bit more granular and the same\nthing with products\nso i'm going to go ahead and leave it as\nis and just click on next now under\nbudget type\ni can select from either a specified\namount or the last month's spend and so\nfor this demo i'm going to keep it at\nspecified amount\nand because i want to be really\nconscious about how much i spend in this\ncourse i'm going to put in 10\nfor my target amount i'm going to\ninclude the credits and cost and then\ni'm going to click on next now these\nthreshold rules are where billing\nadministrators will be emailed when a\ncertain percent of the budget is hit\nso if my spend happens to hit five\ndollars\nbecause i am a billing administrator i\nwill be sent an email telling me that my\nspend has hit five dollars i also have\nthe option of changing these percentages\nso if i decided to change it to forty\npercent\nnow my amount goes to four dollars and\nthis is done automatically so no need to\ndo any calculations\nbut i'm going to keep this here at 50\npercent\nand vice versa if i wanted to change the\namount\nthe percentage of budget will actually\nchange now with the trigger i actually\nhave the option of selecting forecasted\nor actual and so i'm going to keep it on\nactual and if i want i can add more\nthreshold rules now i'm going to leave\neverything as is and just click on\nfinish\nand now as you can see here i have a\nbudget name of ace budget now because\nthe budget name doesn't have to be\nglobally unique in your environment you\ncan name your budget exactly the same\nand again it'll give me all the specific\nconfigurations that i filled out shows\nme how much credits i've used and that's\nit and that's how you would create a\nbudget alert now if i needed to edit it\ni can always go back to ace budget and\nhere i can edit it but i'm not going to\ntouch it and i'm just going to hit\ncancel\nand so the last thing i wanted to show\nyou before we end this lesson is how to\ncreate another budget but being able to\nsend out the trigger alert emails to\ndifferent users\nand so in order to do that i'm going to\ngo back up here to create budget i'm\ngoing to name this to ace dash\nbudget\ndash\nusers i'm going to leave the rest as is\ni'm going to click on next again i'm\ngoing to leave the budget type the way\nit is the target amount i'm going to put\nten dollars\nleave the include credits and cost and\njust click on next\nand so here i'm going to leave the\nthreshold rules the way they are and\nright here under manage notifications\ni'm going to click off link monitoring\nemail notification channels to this\nbudget now because the email\nnotification channel needs cloud\nmonitoring in order to work i am\nprompted here to select a workspace\nwhich is needed by cloud monitoring so\nbecause i have none i'm going to go\nahead and create one and so clicking on\nmanaging monitoring workspaces will\nbring you to the documentation but in\norder for me to get a workspace created\ni need to go to cloud monitoring now\nworkspace is the top level container\nthat is used to organize and control\naccess to your monitoring notification\nchannels in order for your notification\nchannels to work they must belong to a\nmonitoring workspace so you need to\ncreate at least one workspace before\nadding monitoring\nnotification channels and don't worry\nwe'll be getting into greater depth with\nregards to monitoring in a later section\nin this course so i'm going to go ahead\nand cancel this\nand i'm going to go up to the navigation\nmenu\nclick on there\nand scroll down to monitoring\nand then overview and this may take a\nminute to start up\nas the apis are being enabled and the\ndefault workspace for cloud monitoring\nis being built\nokay and now that the monitoring api has\nbeen enabled we are now in monitoring\nthe workspace that was created is my\nfirst project so now that we have our\nmonitoring workspace created i need to\nadd the emails to the users that i want\nthe alerts to be sent out to and added\nto the notification channel so in order\nto do that i'm going to go over here to\nalerting and up here at the top i'm\ngoing to click on edit notification\nchannels\nand here as you can see are many\nnotification channels that you can\nenable by simply clicking on add new\nover here on the right so now what i'm\nlooking for is under email i'm going to\nclick on add new now here i can add the\nnew email address and so for me i'm\ngoing to add antony\nat antonyt.com\nand you can add whatever email address\nyou'd like\nand under display name i'm going to add\nbilling admin\nnotification\nand just click on save\nand as you can see my email has been\nadded to the notification channel and so\nthis is all i needed to do in order to\nmove on to the next step and so now that\ni've covered creating my monitoring\nworkspace as well as adding another\nemail to my email notification channels\ni can now go back to billing and finish\noff my budget alert\nlet's go over here to budgets and alerts\ncreate budget\nand we're gonna go through the same\nsteps\ncall this billing\nalert\nusers\nleave everything else as is and click on\nnext\ni'm just going to change the target\namount to 10\nclick on next\ni'm going to leave everything here as is\nand i'm going to go back to click on\nlink monitoring email notification\nchannels to this budget now if you\nnotice when i click on select workspace\nmy first project shows up and here it\nwill ask me for my notification channels\nand because i've already set it up i can\nsimply click on it and you'll see the\nbilling admin notification channel\nand so if i didn't have this set up i\ncan always go to manage notification\nchannels and it'll bring me back to the\nscreen which you saw earlier\nand so now that that's set up i can\nsimply click on finish\nand so now that i have a\nregular budget alert i also have another\nbudget alert that can go to a different\nemail so if you have a project manager\nor a director that you want to send\nbudget alerts to this is how you would\ndo it and so that about covers this demo\non committed use discounts reservations\nbudgets and budget alerts and so that's\nall i wanted to cover for this lesson\nso you can now mark this lesson as\ncomplete\nand let's move on to the next one\n[Music]\nwelcome back\nin this short lesson i will be covering\nthe exporting of your billing data so\nthat you're able to analyze that data\nand understand your spend at a more\ngranular level\ni will also be going through a short\ndemo where i will show you how to enable\nthe export billing feature and bring it\ninto bigquery to be analyzed\nnow cloud billing export to bigquery\nenables you to export granular google\ncloud billing data such as usage\ncost details and pricing data\nautomatically to a bigquery data set\nthat you specify then you can access\nyour cloud billing data from bigquery\nfor detailed analysis\nor use a tool like data studio to\nvisualize your data just a quick note\nhere that billing export is not\nretroactive and this should be taken\ninto consideration when planning for\nanalysis on this data and so there are\ntwo types of cloud billing data that you\ncan export\nthere's the daily cost detail data\nand the pricing data and these can be\nselected right within the console\ndepending on your use case and so now\nthat we've gone through exactly what\nbilling export is i wanted to get into a\ndemo and show you how to export your\ncloud billing data to bigquery and go\nthrough all the necessary steps to get\nit enabled so when you're ready join me\nin the console and so here we are back\nin the console and so in order to enable\nbilling export i'm going to be going to\nthe billing page so i'm going to move up\nto the top left hand corner to the\nnavigation menu\nand click on billing\nhere in the left hand menu you'll see\nbilling export and you can just click on\nthere\nand so for those just coming to billing\nexport for the first time there's a\nquick summary of exactly what the\nbigquery export is used for and as we\ndiscussed earlier there is an option for\nthe daily cost detail and for pricing\nand i'm going to use the daily cost\ndetail in this demo and export that data\nto bigquery so the first step i'm going\nto do\nis to click on edit settings and it's\ngoing to bring me to a new page where it\nwill ask me for my project and this is\nwhere my billing data is going to be\nstored but as you can see here i'm\ngetting a prompt that says you need to\ncreate a bigquery data set first now the\nbigquery data set that is asking for is\nwhere the billing data is going to be\nstored so in order to move forward with\nmy billing export i need to go to\nbigquery and set up a data set so i'm\ngoing to simply click on this button\nhere that says go to bigquery\nand it's going to bring me to the\nbigquery page where i'll be prompted\nwith a big welcome note you can just\nclick on done and over here in the right\nhand side where it says create data set\ni'm just going to click on there and i'm\ngoing to create my new data set and so\nfor my data set id i'm going to call\nthis\nbilling\nexport\nand just as a note with the data set id\nyou can't use any characters like\nhyphens commas or periods and therefore\ni capitalize the b and the e now with\nthe data location the default location\nis the us multi region but i can simply\nclick on the drop down and have an\noption to store my data in a different\nlocation\nbut i'm going to keep it at default i\nhave the option of expiring this table\nin either a certain amount of days or to\nnever expire as well when it comes to\nencryption i'm going to leave it as\ngoogle manage key as opposed to a\ncustomer manage key and i'll get into\nencryption and key management a little\nlater on in this course i'm going to go\nahead and move right down to the bottom\nand click on create data set\nand now my data set has been created i\ncan now see it over here on the left\nhand side menu where subtle poet 28400\nis the id for my project if i simply\nclick on the arrow beside it it'll show\nmy billing export data set because\nthere's nothing in it nothing is showing\nand so now that the data set is set up i\ncan now go back to the billing export\npage and finish setting up my billing\nexport so with that being said i'm going\nto go back up to the navigation menu\nhead over to billing\nand go to billing export under daily\ncost detail i'm going to click on edit\nsettings and because i have a data set\nalready set up and since it's the only\none it has been propagated in my billing\nexport data set field if i had more data\nsets then i would be able to select them\nhere as well so i'm going to leave the\ndata set at billing export\nand simply click on save\nand so now that billing export has been\nenabled i'll be able to check on my\nbilling as it is updated each day as it\nsays here and to go right to the data\nset i can simply click on this hot link\nand it'll bring me right to bigquery and\nso there is one last step that still\nneeds to be done to enable the billing\nexport to work and that is to enable the\nbigquery data transfer service api so in\norder to do that we need to go back to\nthe navigation menu\ngo into apis and services\ninto the dashboard\nand now i'm going to do a search for the\nbigquery data transfer service and i'm\ngoing to simply go up here to the top\nsearch bar\nand simply type in bigquery\nand here it is bigquery data transfer\napi i'm going to simply click on that\nand hit enable\nand this might take a minute and you may\nbe asked to create credentials over here\non the top right and you can simply\nignore that as they are not currently\nneeded and so now that the bigquery data\ntransfer service api has been enabled\ni'm now able to go over to bigquery and\ntake a look at my billing export data\nwithout any issues now it's going to\ntake time to propagate but by the time i\ncome here tomorrow the data will be\nfully propagated and i'll be able to\nquery the data as i see fit and so\nalthough this is a short demo this is\nnecessary to know for the exam\nas well being an engineer and looking to\nquery your billing data you will now\nhave the knowledge in order to take the\nsteps necessary that will allow you to\ndo so and so that's all i have for this\nlesson and demo on export billing data\nso you can now mark this lesson as\ncomplete\nand let's move on to the next one\nwelcome back\nin this hands-on demo i'm going to go\nover apis in google cloud\nnow the google cloud platform is pretty\nmuch run on apis\nwhether it's in the console or the sdk\nunder the hood it's hitting the apis now\nsome of you may be wondering what is an\napi\nwell this is an acronym standing for\napplication programming interface and\nit's a standard used amongst the\nprogramming community in this specific\ncontext it is the programming interface\nfor google cloud services\nand as i said before both the cloud sdk\nand the console are using apis under the\nhood and it provides similar\nfunctionality now when using the apis\ndirectly it allows you to enable\nautomation in your workflow by using the\nsoftware libraries that you use for your\nfavorite programming language now as\nseen in previous lessons\nto use a cloud api\nyou must enable it first so if i went to\ncompute engine or when i was enabling\nmonitoring\ni had to enable the api so no matter the\nservice you're requesting here in google\ncloud and some of them may be even\nlinked together it always has to be\nenabled in order to use it now getting a\nlittle bit more granular when using an\napi you need to have a project so when\nyou enable the api you enable it for\nyour project\nusing the permissions on the project and\npermissions on the api to enable it now\nsince this is a demo i want to go over\nto the navigation menu and go straight\ninto apis and services\nand so here is the dashboard of the apis\nand services you can see the traffic\nhere the errors and the latency with\nregards to these apis as well up here it\nhas a time frame for the median latency\nthat you can select for a more granular\nsearch now when it comes to what is\nenabled already you can see list here of\nthe apis that are enabled and since we\nhaven't done much there's only a few\napis that are enabled now this hands-on\ndemo is not meant to go into depth with\napis but is merely an overview so that\nyou understand what the apis are used\nfor in context with google cloud if\nyou'd like to go more in depth with\nregards to apis and possibly get\ncertified in it the apogee certification\nwith its corresponding lessons would be\na great way to get a little bit more\nunderstanding but for this demo we're\ngoing to stick with this overview and so\nin order to search for more apis that\nneed to be enabled or if you're looking\nfor something specific\nyou can come up here to enable apis and\nservices\nor you can do a quick search on the\nsearch bar at the top of the page but\njust as a quick glance i'm going to go\ninto enable apis and services and so you\nwill be brought to a new page where you\nwill see the api library on the left you\nwill see a menu where the apis are\ncategorized and all the apis that are\navailable when it comes to google cloud\nand other google services so as you saw\nbefore when i needed to enable the api\nfor bigquery\ni would simply type in bigquery\nand i can go to the api and since the\napi is enabled there's nothing for me to\ndo but if i needed to enable it i could\ndo that right there and just as a quick\nnote when going to a service that's\navailable in the console the api\nautomatically gets enabled when you go\nand use it for the first time and so\nagain this is just a quick overview of\napis and the api library with regards to\ngoogle cloud a short yet important demo\nto understand the under workings of the\ncloud sdk and the console so just\nremember that when using any service in\ngoogle cloud\nagain you must enable the api in order\nto start using it and so that about\nwraps up this demo for cloud apis so you\ncan now mark this lesson as complete and\nlet's move on to the next one\n[Music]\nwelcome back\nin this demo i'll be creating and\nsetting up a new gmail user as an admin\nuser for use moving ahead in this course\nas well as following google's best\npractices we need a user that has lesser\nprivileges than the user account that we\nset up previously and i'll be going\nthrough a full demo to show you how to\nconfigure it\nnow in a google cloud setup that uses a\ng suite or cloud identity account a\nsuper administrator account is created\nto administer the domain this super\nadmin account has irrevocable\nadministrative permissions\nthat should not be used for day-to-day\nadministration this means that no\npermissions can be taken away from this\naccount and has the power to grant\norganization admin role\nor any other role for that matter and\nrecover accounts at the domain level\nwhich makes this account extremely\npowerful now since i do not have a\ndomain setup or using a g suite or cloud\nidentity account i don't need to worry\nabout a super admin account in this\nspecific environment as gmail accounts\nare standalone accounts that are meant\nto be personal and hold no organization\nand usually start at the project level\nand so to explain it in a bit more\ndetail\ni have a diagram here showing the two\ndifferent accounts i will be using\nand the structure behind it\nnow as we discussed before billing\naccounts have the option of paying for\nprojects in a different organization so\nwhen creating new projects using the two\ndifferent gmail accounts they were\ncreated without any organization and so\neach account is standalone and can\ncreate their own projects now what makes\nthem different is that the antony gcloud\nace account owns the billing account and\nis set as a billing account\nadministrator and the tony bowtie ace\naccount is a billing account user that\nis able to link projects to that billing\naccount but does not hold full access to\nbilling\nso in the spirit of sticking to the\nprinciple of lease privilege\ni will be using the tony bowtie ace\naccount that i had created earlier with\nlesser privileges on billing it will\nstill give me all the permissions i need\nto create edit and delete resources\nwithout all the powerful permissions\nneeded for billing i will be assigning\nthis new gmail user the billing account\nuser role and it will allow you to\nachieve everything you need to build for\nthe remainder of the course\nso just as a review i will be using a\nnew google account that i have created\nor if you'd like you can use a\npre-existing google account and as\nalways i recommend enabling two-step\nverification on your account\nas this user will hold some powerful\npermissions to access a ton of different\nresources in google cloud\nso now that we've gone over the details\nof the what and why for setting up this\nsecond account let's head into the demo\nand get things started so whenever\nyou're ready join me over in the console\nand so here i am back in the console and\nso before switching over to my new user\ni need to assign the specific roles that\ni will need for that user which is the\nbilling account user role so to assign\nthis role to my new user i need to head\nover to billing so i'm going to go back\nup here to the left-hand corner\nand click on the navigation menu\nand go to billing\nagain in the left-hand menu i'm going to\nmove down to account management and\nclick on there and over here under my\nbilling account you will see that i have\npermissions assigned to one member of\nthe billing account administrator\nand as expected i am seeing anthony g\ncloud ace\ngmail.com and so i want to add another\nmember to my billing account so i'm\ngoing to simply click on add members and\nhere i will enter in my new second user\nwhich is tony bowtie ace\ngmail.com\nand under select a role i'm going to\nmove down to billing and over to billing\naccount user and as you can see here\nthis role billing account user will\nallow permissions to associate projects\nwith billing accounts which is exactly\nwhat i want to do\nand so i'm going to simply click on that\nand simply click on save\nand so now that i've assigned my second\nuser the proper permissions that i\nneeded i am now going to log out\nand log in as my new user by simply\ngoing up to the right hand corner in the\nicon clicking on the icon and going to\nadd account by adding the account i'll\nbe able to switch back and forth between\nthe different users and i would only\nrecommend this if you are the sole user\nof your computer if you are on a\ncomputer that has multiple users simply\nsign out and sign back in again with\nyour different user\nand here i'm asked for the email which\nwould be tony bowtie ace\ngmail.com\ni'm gonna plug in my password\nand it's going to ask me for my two-step\nverification\ni'm going to click on yes\nand i should be in\nand because it's my first time logging\ninto google cloud with this user i get a\nprompt asking me to agree to the terms\nof service i'm going to agree to them\nand simply click on agree and continue\nand so now i'm going to move back up to\noverview and as you can see here i don't\nhave the permissions to view costs for\nthis billing account and so all the\npermissions assigned for the billing\naccount administrator which is antony g\ncloud ace is not applied to tony bowtie\nace and therefore things like budgets\nand alerts even billing exports i do not\nhave access to\nso moving forward in the course if you\nneed to access anything in billing that\nyou currently don't have access to like\nbudgets and alerts you can simply switch\nover to your other account and take care\nof any necessary changes but what i do\nhave access to is if i go up here to my\nbilling account click on the drop down\nmenu and click on manage billing\naccounts but as you can see here i do\nhave access to view all the billing\naccounts along with the projects that\nare linked to them now because these\ngmail accounts are standalone accounts\nthis project here that is owned by\nantony gcloud ace i do not have access\nto in order to access the project i\nwould have to have permissions assigned\nto me directly in order for me to\nactually view the project or possibly\ncreating any resources within that\nproject now if i go back to my home page\ni can see here that i have no projects\navailable and therefore no resources\nwithin my environment and so to kick it\noff i'm going to create a new project\nand so under project name i am going to\ncall this\nproject tony\nand you can name your project whatever\nyou'd like\nunder location i don't have any\norganization\nand so therefore i'm just going to click\non create\nand this may take a minute to\ncreate and here we are with my first\nproject\nnamed project tony as well as my\nnotification came up saying that my\nproject has been created and so now that\nthis project has been created it should\nbe linked to my billing account so in\norder to verify this i'm going to go\nover into billing\nand under the drop down\ni'm going to click on manage billing\naccounts\nand as you can see here the number of\nprojects has gone from one to two and if\ni click on the menu up here under my\nprojects you can see that project tony\nis a project that is linked to my\nbilling account i also have the\npermissions to either disable billing or\nchange billing for this specific project\nyet in order to change billing i will\nhave to have another billing account but\nthere are no other billing accounts\navailable\nand so moving forward i will only have\nthis one billing account and so any\nprojects i decide to create will be\nlinked to this billing account and so\nthis is a great example of trimming down\nthe permissions needed for different\nusers and even though this is not a\ndomain owned account but a personal\naccount it's always recommended to\npractice the principle of lease\nprivilege whenever you come across\nassigning permissions to any user now as\ni said before any billing related tasks\nthat you decide to do moving forward\nyou can simply switch over to your other\nuser and do the necessary changes and so\nthat's all i have for this lesson\nso you can now mark this lesson as\ncomplete\nand let's move on to the next one\n[Music]\nwelcome back\nin this short lesson i'm going to be\ncovering an overview of the cloud sdk\nand the command line interface as it is\nan essential component of interacting\nwith google cloud for the exam you will\nneed to get familiar with the command\nline and the commands needed in order to\ncreate\nmodify and delete resources this is also\nan extremely valuable tool for your tool\nbelt in the world of being a cloud\nengineer as i have found that is a very\ncommon and easy way to implement small\noperations within google cloud as well\nas automating the complex ones so what\nexactly is the cloud sdk\nwell the cloud sdk is a set of command\nline tools\nthat allows you to manage resources\nthrough the terminal in google cloud and\nincludes commands such as gcloud\ngsutil bq and cubectl using these\ncommands\nallow you to manage resources such as\ncompute engine\ncloud storage bigquery kubernetes and so\nmany other resources these tools can be\nrun interactively or through automated\nscripts giving you the power and\nflexibility that you need to get the job\ndone the cloud sdk is so powerful that\nyou can do everything that the console\ncan do yet has more options than the\nconsole you can use it for\ninfrastructure as code autocompletion\nhelps you finish all of your command\nline statements and for those of you who\nrun windows the cloud sdk has got you\ncovered with availability for powershell\nnow in order to access google cloud\nplatform you will usually have to\nauthorize google cloud sdk tools so to\ngrant authorization to cloud sdk tools\nyou can either use a user account or a\nservice account now a user account is a\ngoogle account that allows end users to\nauthenticate directly to your\napplication for most common use cases on\na single machine using a user account is\nbest practice now going the route of a\nservice account this is a google account\nthat is associated with your gcp project\nand not a specific user a service\naccount can be used by providing a\nservice account key to your application\nand is recommended to script cloud sdk\ntools for use on multiple machines now\nhaving installed the cloud sdk it comes\nwith some built-in commands that allow\nyou to configure different options using\ngcloud init this initializes and\nauthorizes access and performs other\ncommon cloud sdk setup steps using some\noptional commands\ngcloud auth login authorizes your access\nfor gcloud with google user credentials\nand sets the current account as active\ngcloud config\nis another optional configuration that\nallows you to configure accounts and\nprojects as well gcloud components\nallow you to install\nupdate and delete\noptional components of the sdk that give\nyou more flexibility with different\nresources now after having installed the\ncloud sdk almost all gcloud commands\nwill follow a specific format shown here\nis an example of this format and is\nbroken down through component\nentity\noperation positional arguments and flags\nand i'll be going through some specific\nexamples in the demonstration a little\nbit later on and so that's all i wanted\nto cover in this overview of the cloud\nsdk and the cli so you can now mark this\nlesson as complete and you can join me\nin the next one where i go ahead and\ndemonstrate installing the cloud sdk\n[Music]\nback in this demonstration i will show\nyou how to download install and\nconfigure the cloud sdk and i will be\nusing the quick start guide that lies in\nthe cloud sdk documentation which holds\nall the steps for installing the cloud\nsdk on different operating systems and i\nwill make sure to include it in the\nlesson text below this demo will show\nyou how to install the cloud sdk\non each of the most common operating\nsystems\nwindows\nmac os and ubuntu linux all you need to\ndo is follow the process on each of the\npages and you should be well on your way\nso with that being said let's get this\ndemo started and bring the cloud sdk to\nlife by getting it all installed and\nconfigured for your specific operating\nsystem\nso as i explained before i'm gonna go\nahead and install the cloud sdk\non each of the three different operating\nsystems\nwindows mac os and ubuntu linux and i\nwill be installing it with the help of\nthe quick start guide that you see here\nand as i said before i'll be including\nthis link in the lesson text and so to\nkick off this demo i wanted to start by\ninstalling the cloud sdk on windows so\ni'm going to move over to my windows\nvirtual machine and i'm going to open up\na browser and i'm going to paste in the\nlink for the quick start guide\nand you can click on either link for the\nquick start for windows and each quick\nstart page will give me the instructions\nof exactly what i need to do for each\noperating system so now it says that we\nneed to have a project created which i\ndid in the last lesson which is project\ntony so next i'm going to download the\ncloud sdk installer\nso i'm going to click on there\nand i'll see a prompt in the bottom left\nhand corner that the installer has been\ndownloaded i'm going to click on it to\nopen the file and i'm going to be\nprompted to go through this wizard and\nso i'm just going to click on next\ni'm going to agree to the terms of the\nagreement it's going to be for just me\nanthony and my destination folder i'll\nkeep it as is and here's all the\ncomponents that it's going to install\ni'm going to keep the beta commands\nunchecked as i don't really need them\nand if i need them later then i can\ninstall that component for those who are\nmore experienced or even a bit curious\nyou could click on the beta commands and\ntake it for a test drive but i'm going\nto keep it off and i'm going to click\ninstall and depending on the power of\nyour machine\nit should take anywhere from two to five\nminutes to install and the google cloud\nsdk has been installed and so i'm just\ngoing to click on next and as shown here\nin the documentation you want to make\nsure that you have all your options\nchecked off is to create a start menu\nshortcut a desktop shortcut you want to\nstart the google cloud sdk shell and\nlastly you want to run gcloud init in\norder to initialize and configure the\ncloud sdk now i'm going to click on\nfinish to exit the setup and i'm going\nto get a command shell that pops up and\ni'm just going to zoom in for better\nviewing\nand so it says here my current\nconfiguration has been set to default so\nwhen it comes to configuration this is\nall about selecting the active account\nand so my current active account is\ngoing to be set as the default account\nit also needed to do a diagnostic check\njust to make sure that it can connect to\nthe internet so that it's able to verify\nthe account and so now the prompt is\nsaying you must log in to continue would\nyou like to log in yes\nyou can just click on y and then enter\nand it's going to prompt me with a new\nbrowser window where i need to log in\nusing my current account so that i can\nauthorize the cloud sdk so i'm going to\nlog in with my tony bowtie ace account\nclick on next\ntype in my password\nagain it's going to ask me for my\ntwo-step verification\nand i'm going to get a prompt saying\nthat the google sdk wants to access my\ngoogle account\ni'm going to click on allow\nand success you are now authenticated\nwith the google cloud sdk\nand if i go back to my terminal i am\nprompted to enter some values\nso that i can properly configure the\ngoogle cloud sdk so i'm going to pick a\ncloud project to use\nand i'm going to use project tony that i\ncreated earlier so i'm going to enter 1\nand hit enter\nand again whatever project that you've\ncreated use that one for your default\nconfiguration and it states here that my\ncurrent project has been set to project\ntony and again this configuration is\ncalled default\nso if i have a second configuration that\ni wanted to use i can call it a\ndifferent configuration but other than\nthat my google cloud sdk is configured\nand ready to use so just to make sure\nthat it's working i'm going to run a\ncouple commands i'm going to run the\ngcloud\nhelp\ncommand\nand as you can see it's given me a list\nof a bunch of different commands that i\ncan run and to exit you can just hit\nctrl c i'm going to run gcloud\nconfig list\nand this will give me\nmy properties in my active configuration\nso my account is tony bowtie ace\ngmail.com i've disabled usage reporting\nand my project is project tony and my\nactive configuration is set as default\nnow don't worry i'm going to be covering\nall these commands in the next lesson\nand i'm going to be going into detail on\nhow you can configure and add other\nusers\nwithin your cloud sdk configuration so\nas we go deeper into the course i'm\ngoing to be using a lot more command\nline just so you can get familiar with\nthe syntax and become a bit more\ncomfortable with it so now that i've\ninstalled the cloud sdk on windows the\nprocess will be a little bit different\nwhen it comes to installation on the\nother operating systems but will be very\nsimilar when it comes to the\nconfiguration so now let's head over to\nmac os and install the cloud sdk there\nand so here we are in mac os and so the\nfirst thing i want to do is i want to\nopen up a web browser and i want to go\nto the cloud sdk quick start page so i'm\njust going to paste in the url here\nand we're looking for the quick start\nfor mac os and so you can either click\non the menu from the left hand side or\nthe menu here on the main page\nand so like i said before\nthis installation is going to be a\nlittle bit different than what it was in\nwindows and so there's a few steps here\nto follow and so the first step asks us\nif we have a project already created\nwhich we've already done and is project\ntony and so the next step tells us that\nthe cloud sdk\nrequires python and so we want to check\nour system to see if we have a supported\nversion so in order to check our version\nwe're going to use this command here\npython minus v\nand i'm going to copy that to my\nclipboard\nand then open up a terminal and i'm\ngoing to zoom in for better viewing and\nso i'm going to paste the command in\nhere\nand simply click on enter and as you can\nsee here i'm running python 2.7\nbut the starred note here says that the\ncloud sdk will soon move to python 3 and\nso in order to avoid having to upgrade\nlater you'd want to check your version\nfor python 3 and so you can use a\nsimilar command by typing in python 3\nspace minus capital v\nand as you can see i'm running version\n3.7.3\nand so moving back to the guide i can\nsee here that it is a supportive version\nif you do not have a supportive version\ni will include a link on how to upgrade\nyour version\nin the lesson text below and so now that\ni've finished off this step let's move\non to the next one\nwhere i can download the archive file\nfor the google cloud sdk again most\nmachines will run the 64-bit package so\nif you do have the latest operating\nsystem for mac os\nyou should be good to go so i'm going to\nclick on this package\nand it'll start downloading for me and\nonce it's finished you can click on\ndownloads and click on the file itself\nand it should extract itself in the same\nfolder with all the files and folders\nwithin it and so just as another quick\nnote google prefers that you keep the\ngoogle cloud sdk in your home directory\nand so following the guide i'm going to\ndo exactly that and so the easiest way\nto move the folder into your home\ndirectory is to simply drag and drop it\ninto the home folder\non the left hand menu it should be\nmarked with a little house icon and\nnested under favorites i can now move\ninto my home folder and confirm that it\nis indeed in here and so now moving to\nthe last step which shows as optional\nthe guide asks us to install a script to\nadd cloud sdk tools to our path now i\nhighly recommend that you install this\nscript so that you can add the tools for\ncommand completion and i will get into\ncommand completion a little bit later on\nin the next couple of lessons and so\nhere is the command that i need to run\nso i'm going to copy that to my\nclipboard again and i'm going to move\nback over to my terminal i'm going to\nclear my screen and so to make sure i'm\nin my home directory where the cloud sdk\nfolder is i'm going to simply type ls\nand so for those who don't know\nls is a linux command that will list all\nyour files and folders in your current\npath and as you can see here the google\ncloud sdk is in my path and therefore i\ncan run that script so i'm going to\npaste it in here\nand i'm going to hit enter\nand so a prompt comes up asking me\nwhether or not i want to disable usage\nreporting and because i want to help\nimprove the google cloud sdk i'm going\nto type in y for yes and hit enter and\nso as i was explaining before\nthe cloud sdk tools will be installed in\nmy path and so this is the step that\ntakes care of it and so i'm going to\ntype y\nand enter\nfor yes to continue and usually the path\nthat comes up is the right one unless\nyou've changed it otherwise so i'm going\nto leave this blank and just hit enter\nand that's it i've installed the tools\nso now in order for me to run gcloud\ninit i have to start a new shell as it\nsays here for the changes to take effect\nso i'm going to go up here to the top\nleft hand menu click on terminal and\nquit terminal and so now i can restart\nthe terminal\nagain i'm going to zoom in for better\nviewing\nand now i'm able to run gcloud init in\norder to initialize the installation\nagain the prompt to do the diagnostic\ntests and i can see i have no network\nissues but it shows me that i have to\nlogin to continue i would like to log in\nso i'm going to type y for yes and hit\nenter\nand so a new browser has popped open\nprompting me to enter my email and\npassword and so i'm going to do that now\ni'm going to authorize my account with\ntwo-step verification\ni'm not going to save this password and\nyes i want to allow the google cloud sdk\nto access my google account\nso i'm going to click on allow\nand it shows that i've been\nauthenticated so now i'm going to move\nback to my terminal and so just as a\nnote before we move forward in case you\ndon't get a browser pop-up for you to\nlog into your google account you can\nsimply highlight this url copy it into\nyour browser and it should prompt you\njust the same so moving right ahead it\nshows that i'm logged in as\ntonybowtieace\ngmail.com which is exactly what i wanted\nand it's asking me to pick a cloud\nproject to use now i want to use project\ntony so i'm going to type in 1 and enter\nand that's it the cloud sdk has been\nconfigured and just to double check i'm\ngoing to run the gcloud\nconfig list command to show me my\nconfiguration and as you can see here my\naccount is tonybowties\ngmail.com my disable usage reporting is\nequal to false\nand my project is project tony and again\nmy active configuration is set as\ndefault and so that about covers the\ncloud sdk install for mac os and so\nfinally i'm going to move over to ubuntu\nlinux and configure the cloud sdk there\nand so here we are in ubuntu and like i\ndid in the other operating systems i'm\ngoing to open up the browser and i'm\ngoing to paste in the url for the quick\nstart guide\nand so we want to click on the quick\nstart for debian and ubuntu and so again\nyou have your choice from either\nclicking on the link on the left hand\nmenu or the one here in the main menu\nand so following the guide\nit is telling us that when it comes to\nan ubuntu release it is recommended that\nthe sdk should be installed on an ubuntu\nrelease that has not reached end of life\nthe guide also asks to create a project\nif we don't have one already which we\nhave already done\nand so now we can continue on with the\nsteps and so since we are not installing\nit inside a docker image we're gonna go\nahead and use the commands right here\nnow you can copy all the commands at\nonce\nby copying this to the clipboard but my\nrecommendation is to install each one\none by one so i'm going to copy this\nand i'm going to open up my terminal i'm\ngoing to zoom in for better viewing and\ni'm going to paste that command in and\nclick on enter it's going to prompt me\nfor my password\nand it didn't come up with any errors so\nthat means it was successfully executed\nand so i'm going to move on to the next\ncommand\ni'm going to copy this\ngo back over to my terminal\nand paste it in\nnow for those of you who do not have\ncurl installed you will be prompted to\ninstall it and given the command to run\nit so i'm going to copy and paste this\ncommand\nand click on enter\ni'm going to type in y for yes to\ncontinue and it's going to install it\nafter a couple of minutes okay now that\ncurl has been installed i'm able to run\nthat command again i'm going to clear\nthe screen first\nand that executed with no errors as well\nand so now moving on to the last command\nthis command will download and install\nthe google cloud sdk\ni am prompted to install some packages\nand so i'm going to type y for yes to\ncontinue so now it's going to download\nand install the necessary packages\nneeded for the google cloud sdk and\ndepending on the speed of your internet\nand the speed of your machine this could\ntake anywhere from two to five minutes\nokay and the google cloud sdk has been\ninstalled\nand so now that the cloud sdk has been\ninstalled we can now initialize the\nconfiguration\nso i'm going to type in gcloud init\nagain the prompt with the network\ndiagnostics i'm going to type y for yes\nto log in\nand i'm going to get the prompt for my\nemail and password\ni'm going to take care of my two-step\nverification and i'm going to allow the\ngoogle cloud sdk to access my google\naccount and success i am now\nauthenticated and moving back to the\nterminal just to verify it and again i'm\ngoing to pick project tony as the cloud\nproject to use\nand the cloud sdk has been configured as\nalways i'm going to do a double check by\nrunning a gcloud config list\nand as expected the same details has\ncome up and so this is a quick run\nthrough on all three operating systems\nwindows mac os and ubuntu linux on how\nto install the google cloud sdk and this\nwill help you get started with becoming\nmore familiar and more comfortable using\nthe command line interface and so that\nabout wraps up for this lesson\nso you can now mark this lesson as\ncomplete\nand let's move on to the next one\n[Music]\nwelcome back in the last demo we went\nthrough a complete install of the cloud\nsdk\nand configured our admin account to be\nused within it in this demonstration i\nwill be walking through how to manage\nthe cloud sdk and this will involve how\nto utilize it and how to customize it to\nyour environment as well as configuring\nour other user account so that we are\nable to apply switching configurations\nfrom one user to another and so i will\nbe going through initializing and\nauthorization\nconfigurations and properties installing\nand removing components as well as a\nfull run through of the gcloud\ninteractive shell so let's kick off this\ndemo by diving into a pre-configured\nterminal with the sdk installed and\nconfigured with my second user tony\nbowtie ace gmail.com\nand so here i am in the mac os terminal\nand just be aware that it doesn't matter\nwhich operating system you're running as\nlong as the sdk is installed and you\nhave your user configured and so as you\nsaw in the last lesson after you install\nthe cloud sdk the next step is typically\nto initialize the cloud sdk\nby running the gcloud init command and\nthis is to perform the initial setup\ntasks as well as authorizing the cloud\nsdk to use your user account credentials\nso that it can access google cloud and\nso in short it sets up a cloud sdk\nconfiguration and sets a base set of\nproperties and this usually covers the\nactive account the current project and\nif the api is enabled the default google\ncompute engine region and zone now as a\nnote if you're in a remote terminal\nsession with no access to a browser you\ncan still run the gcloud init command\nbut adding a flag of dash dash console\ndash only\nand this will prevent the command from\nlaunching a browser-based authorization\nlike you saw when setting up your last\nuser so now even though i have a user\nalready set up i can still run gcloud\ninit and it will give me a couple\ndifferent options to choose from so i\ncan re-initialize this configuration\nwith some new settings or i can create a\nnew configuration now for this demo\nsince we already have two users and to\ndemonstrate how to switch between\ndifferent users i want to create a new\nconfiguration with my very first user so\ni'm going to type in 2 and hit enter and\nit's going to ask me for a configuration\nname now it asks me for a configuration\nname because when setting up your first\nconfiguration it's set as default and\nbecause i know that this user account\nhas full access to billing as well as\nadministration privileges i'm going to\ncall this configuration master and i'm\ngoing to hit enter\nit did the necessary network checks and\nnow it's asking me for which account i\nwant to use this configuration for now\nif tony bowtie ace had access to two\ndifferent google cloud accounts i would\nbe able to add a different configuration\nhere and so because i'm going to log in\nwith a new account i'm going to put in\ntwo\nand hit enter\nand so again it brought me to my browser\nwindow and i'm going to log in using\nanother account\nand so here you can type in the first\naccount that you created and for me it\nwas antony gcloud ace gmail.com\ni hit next and i'm going to enter my\npassword\nit's going to ask me for my two-step\nverification\nand i don't want to save this password\nand i'm going to allow the google cloud\nsdk to access my google account and i am\nnow authenticated so moving back to the\nconsole you can see here that i am\ncurrently logged in and it's asking me\nto pick a cloud project to use now since\ni only have one project in that google\ncloud account which is subtle poet i'm\ngoing to choose one\nand since i have the compute engine api\nenabled i am now able to configure a\ndefault compute region and zone and so\ni'm going to hit y for yes to configure\nit and as you can see there are 74\ndifferent options to choose from and if\nyou scroll up a little bit you should be\nable to find the zone that you're\nlooking for and so for this course we\nare going to be using us central one\ndash a and so this is number eight so\ni'm going to scroll back down\nand type in eight\nand so now my master configuration has\nbeen configured with my antony g cloud\nace account using us central 1a as the\ncompute engine zone now touching back on\nauthorization if i didn't want to set up\na whole configuration i can simply type\nin gcloud\nauth login\nand this will allow me to authorize just\nthe user account only so gcloud init\nwould authorize access and perform the\ncloud sdk setup steps and gcloud auth\nlogin will authorize the access only now\nas i mentioned in a previous lesson you\ncan use a service account for\nauthorization to the cloud sdk tools and\nthis would be great for a compute\ninstance or an application but would\nneed a service account key file in order\nto authorize it and so moving back to\nour user accounts when running the cloud\nsdk you can only have one active account\nat any given time and so to check my\nactive account i can type in the command\ngcloud auth list\nand this will give me a list of all the\naccounts that have been authorized and\nso whenever you run a gcloud init it\nwill use that account as the active\naccount and as you can see here the\nantony gcloud ace gmail.com has a star\nbeside it and this is marked as the\nactive account and so in essence the\naccount with the star beside it is the\nactive account and so i'm looking to\nchange my active account back to tony\nbowtie ace and in order for me to do\nthat the command is conveniently shown\nhere and so i'm going to go ahead and\nrun that\nand the account would be the user shown\nabove and so when i do a gcloud auth\nlist\ni can see that my active account is now\nback to tony bowtie bowtieace gmail.com\nnow if you wanted to switch the account\non a per command basis you can always do\nthat using the flag dash dash account\nafter the command and put in the user\naccount that you want to use and so\nlet's say i wanted to revoke credentials\nfrom an account that i don't need\nanymore i can simply use the command\ngcloud auth revoke\nfollowed by the username and it will\nrevoke the credentials for that account\nand so doing this\nwould remove your credentials and any\naccess tokens for any specific account\nthat you choose that's currently on your\ncomputer and so if we're looking for\nthat specific account we can always use\nthe gcloud info command and it will give\nus the path for the user config\ndirectory and it is this directory that\nholds your encrypted credentials and\naccess tokens\nalongside with your active\nconfigurations and any other\nconfigurations as well now as you can\nsee here running the gcloud info command\nwill also give you some other\ninformation everything from the account\nthe project the current properties and\nwhere the logs can be found so now\nmoving on to configurations\na configuration is a named set of gcloud\ncli properties\nand it works kind of like a profile and\nso earlier on i demonstrated how to set\nup another configuration through gcloud\ninit so now if i run a gcloud config\nlist command it would give me all the\ninformation of the active configuration\nso as you can see here my user has\nchanged but my configuration has stayed\nthe same now as seen previously in a\ndifferent lesson tony bow tie ace does\nnot have access to the project subtle\npoet this project belongs to antony g\ncloud ace and the configuration was set\nfor that account now if tony bowtie ace\ndid have access to the subtle poet\nproject then i could use this\nconfiguration but it doesn't and so i\nwant to switch back to my other\nconfiguration and how i would do this is\ntype in the command\ngcloud config configurations\nactivate and the configuration that i\nset up for tony bowtie ace is the\ndefault configuration\nand so now that it has been activated i\ncan now run a gcloud config list and as\nyou can see here the configuration is\nback to default setup during the\ninitialization process for tony bowtie\nace now if i wanted to create multiple\nconfigurations for the same user account\ni can simply type in the command gcloud\nconfig configurations\ncreate\nbut if i wanted to just view the\nconfiguration properties i can always\ntype in the command gcloud config\nconfigurations describe\nand as you can see after the describe i\nneeded the configuration name to\ncomplete the command and so i'm going to\ndo that now\nand i've been given all the properties\nfor this configuration now another thing\nthat i wanted to share when it comes to\nproperties is that you can change the\nproject or the compute region and zone\nby simply typing in the command\ngcloud config set now if i wanted to\nchange the project i can simply type in\nproject and the project name if it was\nfor the compute instance i can simply\ntype in compute\nforward slash zone for the specific zone\nand just as a note only the properties\nthat are not in the core property\nsection are the ones that can be set as\nwell when you are setting the properties\nthis only applies to the active\nconfiguration if you want to change the\nconfiguration of one that is not active\nthen you'd have to switch to it and run\nthe gcloud config set command and so\nmoving on i wanted to touch on\ncomponents which are the installable\nparts of the sdk and when you install\nthe sdk the components gcloud bq gsutil\nand the core libraries are installed by\ndefault now you probably saw a list of\ncomponents when you ran the gcloud init\ncommand and so to see all the components\nagain you can simply type in the gcloud\ncomponents\nlist command\nand if you scroll up you're able to see\nall the components that are available\nthat you can install at your convenience\nand so if i wanted to install the\ncubectl component i can type in the\ncommand gcloud components install\ncubectl and a prompt will come up asking\nme if i want to continue with this i\nwant to say yes and now it will go\nthrough the process of installing these\ncomponents\nand so just to verify if i run the\ncommand gcloud components list you can\nsee here that i have the cube ctl\ncomponent installed now if i wanted to\nremove that component i can simply type\nin\ngcloud components\nremove\nand then the component that i want to\nremove\nwhich is cubectl i'm going to be\nprompted if i want to do this i'm going\nto say yes and it's going to go through\nthe stages of removing this component\nand it's been successfully uninstalled\nand so if you're working with a resource\nthat you need a component for you can\nsimply install or uninstall it using the\ngcloud components command and so one\nlast thing about components before we\nmove on\nis that you can update your components\nto make sure you have the latest version\nand so in order to update all of your\ninstalled components you would simply\nrun the command gcloud components update\nand so before i go ahead and finish off\nthis demonstration i wanted to touch on\nthe gcloud interactive shell the gcloud\ninteractive shell provides a richer\nshell experience simplifying commands\nand documentation discovery with as you\ntype autocompletion and help text\nsnippets below it produces suggestions\nand autocompletion for gcloud bq gsutil\nand cubectl command line tools as well\nas any command that has a man page sub\ncommands and flags can be completed\nalong with online help as you type the\ncommand and because this is part of the\nbeta component i need to install it and\nso i'm going to run the command gcloud\ncomponents install beta and i want to\nhit yes to continue and this will go\nahead and kick off the installation of\nthe gcloud beta commands\nand so now that it's installed i'm going\nto simply clear the screen and so now in\norder to run the gcloud interactive\nshell i need to run the command gcloud\nbeta\ninteractive\nand so now for every command that i type\ni will get auto suggestions that will\nhelp me with my commands and so to see\nit in all of its glory i'm going to\nstart typing\nand as you can see it's giving me the\noption between g cloud or gsutil and i\ncan use the arrow to choose either one\nand below it it'll also show me the\ndifferent flags that i can use for these\nspecific commands and how to structure\nthem and so for now i'm going to run\ngsutil version\nminus l and as you can see here it's\ngiving me all the information about this\ncommand and what it can do and so i'm\ngoing to hit enter\nand as you can see my gsutil version is\n4.52\nand along with the version number i'm\nalso given all the specific information\nwith regards to this gsutil version and\nthis can be used with absolutely any\ncommand used on the google cloud\nplatform and so i'm going to go ahead\nand do that again but running a\ndifferent command so i'm just going to\nfirst clear the screen and i'm going to\ntype gcloud\ncompute\ninstances and as you can see the snippet\non the bottom of the screen is showing\nme not only the command and how it's\nstructured but also the url for the\ndocumentation so continuing on gcloud\ncompute instances i'm going to do a list\nand i'm going to filter it by using the\nflag dash dash filter and i'm going to\nfilter the us east one a zone and i'm\ngoing to hit enter\nand as expected there are no instances\nin us east 1a and as you've just\nexperienced this is a great tool and i\nhighly recommend that you use it\nwhenever you can now i know this is a\nlot to take in\nand a lot of these commands will not\nshow up on the exam but again getting\ncomfortable with the command line and\nthe sdk will help you on your path to\nbecoming a cloud engineer as well it\nwill help you get really comfortable\nwith the command line and before you\nknow it you'll be running commands in\nthe command line and prefer it over\nusing the console and so that's all i\nhave for this demo on managing the cloud\nsdk so you can now mark this lesson as\ncomplete and let's move on to the next\none\nwelcome back in this demonstration i'm\ngoing to be talking about the always\navailable browser-based shell called\ncloud shell cloud shell is a virtual\nmachine that is loaded with development\ntools and offers a persistent five\ngigabyte home directory that runs on\ngoogle cloud cloud shell is what\nprovides you command line access to your\ngoogle cloud resources within the\nconsole cloud shell also comes with a\nbuilt-in code editor that i will be\ndiving into and allows you to browse\nfile directories as well as view and\nedit files while still accessing the\ncloud shell the code editor is available\nby default with every cloud shell\ninstance and is based on the open source\neditor thea\nnow cloud shell is available from\nanywhere in the console by merely\nclicking on the icon showed here in the\npicture\nand is positioned in the top right hand\ncorner of the console in the blue\ntoolbar so let's get started with the\ncloud shell by getting our hands dirty\nand jumping right into it\nand so here we are back in the console\nand i am logged in as tony bowtie ace\ngmail.com and as you can see up here in\nthe right hand corner\nas mentioned earlier you will find the\ncloud shell logo and so to open it up\nyou simply click on it and it'll\nactivate the cloud shell here at the\nbottom and because it's my first time\nusing cloud shell i'll get this prompt\nquickly explaining an overview of what\ncloud shell is and i'm going to simply\nhit continue\nand i'm going to make the terminal a\nlittle bit bigger by dragging this line\nup to the middle of the screen and so\nwhen you start cloud shell it provisions\nan e2 small\ngoogle compute engine instance running a\ndebian-based linux operating system now\nthis is an ephemeral pre-configured vm\nand the environment you work with is a\ndocker container running on that vm\ncloud shell instances are provisioned on\na per user per session basis the\ninstance persists while your cloud shell\nsession is active and after an hour of\ninactivity your session terminates and\nthe vm is discarded you can also\ncustomize your environment automatically\non boot time and it will allow you to\nhave your preferred tools when cloud\nshell boots up so when your cloud shell\ninstance is provision it's provisioned\nwith 5 gigabytes of free persistent disk\nstorage and it's mounted at your home\ndirectory on the virtual machine\ninstance and you can check your disk\nstorage by simply typing in the command\ndf minus h and here where it shows dev\ndisk by id google home part one it shows\nhere the size as 4.8 gigabytes and this\nwould be the persistent disk storage\nthat's mounted on your home directory\nnow if you've noticed it shows here that\ni'm logged in as tony bowtie ace at\ncloud shell and that my project id is\nset at project tony so the great thing\nabout cloud shell\nis that you're automatically\nauthenticated as the google account\nyou're logged in with so here you can\nsee i'm logged in as tony bowtie ace and\nso picture it like running gcloud auth\nlogin and specifying your google account\nbut without having to actually do it now\nwhen the cloud shell is started the\nactive project in the console is\npropagated to your gcloud configuration\ninside cloud shell so as you can see\nhere my project is set at project tony\nnow if i wanted to change it to a\ndifferent project i could simply use the\ncommand stated up here\ngcloud config set project along with the\nproject id and this will change me to a\ndifferent project now behind the scenes\ncloud shell is globally distributed\nacross multiple regions so when you\nfirst connect to cloud shell you'll be\nautomatically assigned to the closest\navailable region and thus avoiding\nany unnecessary latency you do not have\nthe option to choose your own region and\nso cloud shell does that for you by\noptimizing it to migrate to a closer\nregion whenever it can so if you're ever\ncurious where your cloud shell session\nis currently active\nyou can simply type in this command\ncurl metadata slash compute metadata\nslash version one slash instance slash\nzone\nand this will give me the zone where my\ninstance is located and as shown here it\nis in us east 1b now as you've probably\nbeen seeing every time i highlight\nsomething that there is a picture of\nscissors coming up the cloud shell has\nsome automated and available tools that\nare built in and so one of those\navailable tools is that whenever i\nhighlight something it will\nautomatically copy it to the clipboard\nfor me cloud shell also has a bunch of\nvery powerful pre-installed tools that\ncome with it such as the cloud sdk bash\nvim helm\ngit\ndocker and more as well cloud shell has\nsupport for a lot of major different\nprogramming languages like java go\npython node.js\nruby and net core for those who run\nwindows now if you're looking for an\navailable tool that is not pre-installed\nyou can actually customize your\nenvironment when your instance boots up\nand automatically run a script that will\ninstall the tool of your choice and the\nscript runs as root and you can install\nany package that you please and so in\norder for this environment customization\nto work there needs to be a file labeled\nas dot customize underscore environment\nnow if we do an ls here you can see that\nall we have is the readme dash cloud\nshell text file if we do ls space minus\nal to show all the hidden files as well\nyou can see that the dot customize\nunderscore environment file does not\nexist and this is because we need to\ncreate it ourselves and so for this\nexample i want terraform installed as an\navailable tool when my instance boots up\nand so i have to create this file so i'm\ngoing to do so by using the touch\ncommand and then the name of the file\ndot customize\nunderscore environment hit enter and if\ni clear the screen and do another ls\nspace minus al i can see that my dot\ncustomize underscore environment file\nhas been created and so now i'm going to\nneed the script to install terraform\nwhich means i would have to edit it and\nso another great feature of cloud shell\nis that it comes with a code editor and\ni can do it one of two ways i can either\ncome up here and click on the open\neditor button which will open up a new\ntab or i can simply use the edit command\nwith the file name and i'm going to do\njust that so edit\ndot customize underscore environment and\ni'm just going to hit enter and as you\ncan see i got a prompt saying that it's\nunable to load the code editor and this\nis because when using code editor you\nneed cookies enabled on your browser and\nbecause i am using a private browser\nsession cookies are disabled and because\nmy cloud shell environment persists i'm\ngoing to open up a regular browser\nwindow and i'm going to continue where i\nleft off and so here i am back with a\nnew browser window again logged in as\ntony bowtie ace and so just to show you\nthe persistence that happens in cloud\nshell i'm going to run the command ls\nspace minus al and as you can see here\nthe customize environment is still here\nand so again i wanted to install\nterraform as an extra tool to have in my\nenvironment and so i'm going to open up\nthe editor by typing in edit dot\ncustomize underscore environment and i'm\ngoing to hit enter and here is the\neditor that popped up\nas you can see here it's built with\neclipse thea and this is an open source\ncode editor that you can download from\neclipse and this is what the editor is\nbuilt on now this menu here on the left\ni can make it a little bit bigger and\nbecause the only viewable file on my\npersistent disk is the readme cloud\nshell dot text file i'm not able to see\nmy dot customize underscore environment\nso in order to open it and edit it i'm\ngoing to go to the menu at the top of\nthe editor and click on file open\nand here i'll be able to select the file\nthat i need so i'm going to select\ncustomize environment and click on open\nand so i'm going to paste in my script\nto install terraform and i'm just going\nto paste in my script from my clipboard\nand i'll be including the script in the\ngithub repo for those of you who use\nterraform and i'm going to move over to\nthe menu on the left click on file and\nthen hit save and so now in order for me\nto allow this to work\nthe customize environment needs to be\nloaded into my cloud shell so i'm going\nto have to restart it and so in order to\naccomplish this i'm going to move over\nto the menu on the right i'm going to\nclick on the icon with the three dots\nand click on restart and you'll be\npresented with a prompt it's saying that\nit will immediately terminate my session\nand then a new vm will be provisioned\nfor me and you'll also be presented with\nan optional response from google telling\nthem why you're restarting the vm and\nthis is merely for statistical purposes\nso i'm going to click on restart and i'm\ngoing to wait till a new cloud shell is\nprovisioned and my new cloud shell is\nprovisioned and up and running and so i\nwant to double check to see if terraform\nhas been installed so i'm going to go\nover here to the open terminal button on\nthe right hand side toolbar and i'm\ngoing to move back to my terminal and\ni'm going to simply run the command\nterraform dash dash version\nand so it looks like terraform has been\ninstalled and as you can see i'm running\nversion.12 but it says my terraform\nversion is out of date and that the\nlatest version is dot 13. and so because\ni really want to be up to date with\nterraform i want to be able to go into\nmy customize environment file and edit\nmy version of terraform so that when my\ncloud shell is initiated\nterraform.13 can be installed and so i'm\ngoing to simply type in the command edit\ndot customize underscore environment and\ni'm back to my editor and i'm going to\nchange the terraform version from dot 12\nto dot 13 and then go over here to the\nleft-hand menu click on file and then\nsave and now i'm going to restart my\nmachine again\nand come back when it's fully\nprovisioned and i'm back again my\nmachine has been provisioned and i'm\ngoing to go back to my terminal by\nclicking on the open terminal button and\nso i'm going to type in the command\nterraform dash dash version and as you\ncan see i'm at version dot 13 and i'm\ngoing to run a simple terraform command\nto see if it's working and as you can\nsee i am successful in running terraform\non cloud shell now customizing the\nenvironment is not on the exam but it is\nsuch an amazing feature that i wanted to\nhighlight it for you with a real world\nexample like terraform in case you're\naway from your computer\nand you're logged into a browser and you\nneed some special tools to use in cloud\nshell this is the best way to do it now\nas i mentioned before the cloud sdk is\npre-installed on this and so everything\nthat i've showed you in the last lesson\nwith regards to cloud sdk can be done in\nthe cloud shell as well so if i run the\ncommand gcloud\nbeta interactive i'd be able to bring up\nthe interactive cloud shell and i'll be\nable to run the same commands so now if\ni go ahead and run the command\ngcloud components list i'll be able to\nsee all the components installed and as\nyou can see with the cloud shell there\nare more components installed than\nwhat's installed on the default\ninstallation of the sdk i can also run\nthe gcloud config list command to see\nall the properties in my active\nconfiguration and so this goes to show\nyou that the sdk installation that's on\ncloud shell is just as capable as the\none that you've installed on your\ncomputer the only difference here is\nthat the sdk along with all the other\ntools that come installed in cloud shell\nis updated every week and so you can\nalways depend that they're up to date\nand so moving on to a few more features\nof cloud shell i wanted to point out the\nobvious ones\nup here in the cloud shell toolbar right\nbeside the open terminal i can open\nbrand new tabs opening up different\nprojects\nor even the same project\nbut just a different terminal and moving\nover to the right hand menu of cloud\nshell this keyboard icon can send key\ncombinations that you would normally not\nhave access to moving on to the gear\nicon with this you're able to change\nyour preferences\nand looking at the first item on the\nlist when it comes to color themes you\ncan go from a dark theme to a light\ntheme or if you prefer a different color\nin my case i prefer the dark theme\nas well you have the options of changing\nyour text size we can go to largest\nbut i think we'll just keep things back\ndown to medium and as well\nwe have\nthe different fonts the copy settings\nfrom which i showed you earlier as well\nas keyboard preferences you also have\nthe option of showing your scroll bar\nnow moving on to this icon right beside\nthe gear\nis the web preview button and so the web\npreview button is designed so that you\ncan run any web application that listens\nto http requests on the cloud shell and\nbe able to view it in a new web browser\ntab when running these web applications\nweb preview also supports applications\nrun in app engine now mind you these\nports are only available to the secure\ncloud shell proxy service which\nrestricts access over https to your user\naccount only and so to demonstrate this\nfeature i am going to run a simple http\nserver running a hello world page so\nfirst i'm going to clear my screen and\nthen i'm going to exit the interactive\nshell and again i'm going to paste in\nfor my clipboard a simple script that\nwill run my simple http server and as\nyou can see it's running on port 8080\nand now i'm able to click on the web\npreview button and i'm able to preview\nit on port 8080\nand a new web browser tab will open up\nand here i'll see my hello world page\nnow this is just a simple example and so\ni'm sure that many of you can find great\nuse for this and so i'm going to stop\nthis http server now by hitting ctrl c\nand just as a quick note web preview can\nalso run on a different port anywhere\nfrom port 2000\nall the way up to 65 000. now moving on\nto the rest of the features\nhitting on the more button here with the\nthree dots starting from the top we\ncovered restart earlier when we had to\nrestart our cloud shell you're able to\nboth upload and download a file within\ncloud shell when the demands are needed\nas well if i have a misconfigured\nconfiguration i can boot into safe mode\nand fix the issue instead of having to\nstart from scratch again moving on to\nboost cloud shell also known as boost\nmode is a feature that increases your\ncloud shell vm from the default e2 small\nto an e2 medium so in essence a memory\nbump from 2 gigabytes to 4 gigabytes and\nonce it's activated all your sessions\nwill be boosted for the next 24 hours\nand just as a quick note\nenabling boost mode restarts your cloud\nshell and immediately terminates your\nsession but don't worry the data in your\nhome directory will persist but any of\nthe processes that you are running will\nbe lost now when it comes to usage quota\ncloud shell has a 50 hour weekly usage\nlimit so if you reach your usage limit\nyou'll need to wait until your quota is\nreset before you can use cloud shell\nagain so it's always good to keep your\neyes on this in case you're a heavy user\nof cloud shell\nand moving back to the menu again you\nhave your usage statistics which\ncollects statistics on commands that\ncome pre-installed in the vm and you can\nturn them on or off\nand as well help for cloud shell is\navailable here as well if you wanted to\ngive feedback to the google cloud team\nwith regards to cloud shell this is the\nplace to do it and so one last thing\nabout cloud shell before we end this\ndemo is that if you do not access cloud\nshell for 120 days your home disk will\nbe deleted now don't worry you'll\nreceive an email notification before its\ndeletion and if you just log in and\nstart up a session you'll prevent it\nbeing removed now moving ahead in this\ncourse i will be using cloud shell quite\na bit and so feel free to use either\ncloud shell or the cloud sdk installed\non your computer or feel free to follow\nalong with me in the cloud shell within\nyour google cloud environment and so if\nyou are following along please make sure\nthat you keep an eye on your quota and\nso i hope this demonstration has given\nyou some really good insight as to what\nyou can do with cloud shell and its\nlimitations and so that's pretty much\nall i wanted to cover in this\ndemonstration of cloud shell so you can\nnow mark this as complete and let's move\non to the next one\n[Music]\nwelcome back in this lesson and\ndemonstration i am going to go over\nlimits and quotas and how they affect\nyour cloud usage within google cloud i'm\ngoing to quickly go over some theory\nfollowed by a demonstration on where to\nfind the quotas and how to edit them\naccordingly so google cloud enforces\nquotas on resource usage for project\nowners\nsetting a hard limit on how much of a\nparticular google cloud resource your\nproject can use and so there are two\ntypes of resource usage that google\nlimits with quota the first one is rate\nquota such as api requests per day this\nquota resets after a specified time such\nas a minute or a day the second one is\nallocation quota\nan example is the number of virtual\nmachines or load balancers used by your\nproject\nand this quota does not reset over time\nbut must be explicitly released when you\nno longer want to use the resource\nfor example by deleting a gke cluster\nnow quotas are enforced for a variety of\nreasons\nfor example they protect other google\ncloud users by preventing unforeseen\nusage spikes\nquotas also help with resource\nmanagement so you can set your own\nlimits on service usage within your\nquota while developing and testing your\napplications\neach quota limit is expressed in terms\nof a particular countable resource from\nrequests per day to an api to the number\nof load balancers used by your\napplication not all projects have the\nsame quotas for the same services and so\nusing this free trial account you may\nhave very limited quota compared to a\nhigher quota on a regular account as\nwell with your use of google cloud over\ntime your quotas may increase\naccordingly and so you can also request\nmore quota if you need it and set up\nmonitoring and alerts\nand cloud monitoring to warn you about\nunusual quota usage behavior or when\nyou're actually running out of quota now\nin addition to viewing basic quota\ninformation in the console\ngoogle cloud lets you monitor quota\nusage\nlimits and errors in greater depth using\nthe cloud monitoring api and ui along\nwith quota metrics appearing in the\nmetrics explorer you can then use these\nmetrics to create custom dashboards and\nalerts\nletting you monitor quota usage over\ntime\nand receive alerts when for example\nyou're near a quota limit only your\nservices that support quota metrics are\ndisplayed and so popular supported\nservices include compute engine\ndata flow\ncloud spanner cloud monitoring and cloud\nlogging common services that are not\nsupported include app engine cloud\nstorage and cloud sql now as a note be\naware that quota limits are updated once\na day\nand hence new limits may take up to 24\nhours to be reflected in the google\ncloud console if your project exceeds a\nparticular quota while using a service\nthe platform will return an error\nin general\ngoogle cloud will return an http\n429 error code if you're using http or\nrest to access the service\nor resource exhausted if you're using\ngrpc if you're using cloud monitoring\nyou can use it to identify the quota\nassociated with the error\nand then create custom alerts upon\ngetting a quota error and we will be\ngoing into greater depth with regards to\nmonitoring later on in the course now\nthere are two ways to view your current\nquota limits in the google cloud console\nthe first is using the quotas page which\ngives you a list of all of your\nproject's quota usage and limits the\nsecond is using the api dashboard which\ngives you the quota information for a\nparticular api\nincluding resource usage over time quota\nlimits are also accessible\nprogrammatically through the service\nusage api and so let's head into the\nconsole where i will provide a\ndemonstration\non where to look for quotas\nand how to increase them when you need\nto\nand so here we are back in the console\nand so as i explained before there are\ntwo main ways to view your current quota\nlimits\nin the console and so the first one is\nusing the quotas page and so in order to\nget to the quotas page i need to go to\niam so i'm going to do that now by going\nup to the navigation menu in the top\nleft hand corner\ni'm going to go to i am and admin and\nover to quotas\nand so here i am shown all the quotas of\nthe current apis that i have enabled as\nyou can see here it shows me the service\nthe limit name\nthe quota status and the details in this\npanel here on the right hand side shows\nme a little bit more information with\nregards to the service and the quota\nitself and so let's say i wanted to\nincrease my quota on the compute engine\napi\nwithin networks so i'm going to select\nthis service and over here on the right\nhand panel i'm going to tick the box\nthat says global and i'm going to go\nback over here to the top left\nand click on the edit quotas button and\na panel will pop up and i am prompted to\nenter a new quota limit\nalong with a description explaining to\ngoogle why i need this quota limit\nincrease and so once i've completed my\nrequest\ni can click on done and then submit\nrequest and like i said before once the\nrequest has been submitted it will go to\nsomebody at google to evaluate the\nrequests for approval and don't worry\nthese quota limit increases are usually\napproved within two business days and\ncan often times be sooner than that also\na great way to enter multiple quota\nchanges is to click on the selected apis\nlet's do bigquery api\nand cloud data store api and so i've\nclicked off three and now i can go back\nup to the top and click on the edit\nquotas button and as you can see in the\npanel i have all three apis that i want\nto increase my quotas on so i can enter\nall my new limit requests for each api\nand then i can submit it as a bulk\nrequest with all my new quota limit\nchanges and so doing it this way would\nincrease the efficiency\ninstead of increasing the quotas for\neach service one by one and because i'm\nnot going to submit any quota changes\ni'm going to close this panel and so\nagain using the quotas page will give\nyou a list of all your project quota\nusage and its limits and allow you to\nrequest changes accordingly and so now\nmoving on to the second way which you\ncan view your current quota limits i'm\ngoing to go to the api dashboard which\nwill give me a more granular view\nincluding the resource usage over time\nso to get there i'm going to go back up\nto the left hand side to the navigation\nmenu i'm going to go to apis and\nservices and click on dashboard\nand here i will see all the names of the\napis and i'm going to click on compute\nengine api for this demonstration\nand over here on the left hand menu you\nwill see quotas\nand in here as i said before\nyou can get some really granular data\nwith regards to queries read requests\nlist requests and a whole bunch of other\nrequests i'm going to drill down into\nqueries here and i can see my queries\nper day per 100 seconds per user and per\n100 seconds and i can see here that my\nqueries per 100 seconds is at a limit of\n2 000 so if i wanted to increase that\nlimit i can simply click on the pencil\nicon\nand a panel on the right hand side will\nprompt me to enter a new quota limit but\ni currently see that my quota limit is\nat its maximum and that i need to apply\nfor a higher quota so when i click on\nthe link it will bring me back to my iam\npage where my services are filtered and\ni can easily find the service that i was\nlooking at to raise my quota limit and i\ncan increase the quota by checking off\nthis box and clicking on the edit quotas\nbutton at the top of the page and so as\nyou can see the quotas page as well as\nthe api dashboard work in tandem so that\nyou can get all the information you need\nwith regards to quotas and limits and to\nedit them accordingly and so i hope this\ngave you a good idea and some great\ninsight\non how you can view and edit your quotas\nand quota limits according to the\nresources you use and so that about\nwraps up this brief yet important demo\non limits and quotas so you can now mark\nthis as complete and let's move on to\nthe next section\n[Music]\nwelcome back\nand in this section we're going to be\ngoing through in my opinion one of the\nmost important services in google cloud\nidentity and access management also\nknown as iam for short and i'll be\ndiving into identities roles and the\narchitecture of policies that will give\nyou a very good understanding of how\npermissions are granted and how policies\nare inherited so before i jump into i am\ni wanted to touch on the principle of\nleast privilege just for a second now\nthe principle of least privilege states\nthat a user program or process\nshould have access to the bare minimum\nprivileges necessary\nor the exact resources it needs in order\nto perform its function so for example\nif lisa is performing a create function\nto a cloud storage bucket\nlisa should be restricted to create\npermissions only on exactly one cloud\nstorage bucket\nshe doesn't need read edit or even\ndelete permissions on a cloud storage\nbucket to perform her job and so this is\na great illustration of how this\nprinciple works\nand this is something that happens in\nnot only google cloud but in every cloud\nenvironment as well as any on-premises\nenvironment so note that the principle\nof least privilege is something that i\nhave previously and will continue to be\ntalking about a lot in this course and\nthis is a key term that comes up quite a\nbit\nin any major exam\nand is a rule that most apply in their\nworking environment to avoid any\nunnecessary granted permissions a\nwell-known and unsaid rule when it comes\nto security hence me wanting to touch on\nthis for a brief moment so now with that\nout of the way i'd like to move on to\nidentity and access management or i am\nfor short so what is it really well with\niam you manage access control by\ndefining who the identity\nhas what access which is the role for\nwhich resource and this also includes\norganizations\nfolders and projects\nin iam permission to access a resource\nisn't granted directly to the end user\ninstead permissions are grouped into\nroles and roles are then granted to\nauthenticated members an iam policy\ndefines and enforces what roles are\ngranted to which members\nand this policy is attached to a\nresource so when an authenticated member\nattempts to access a resource iam checks\nthe resources policy to determine\nwhether the action is permitted and so\nwith that being said i want to dive into\nthe policy architecture breaking it down\nby means of components in this policy\narchitecture will give you a better\nunderstanding of how policies are put\ntogether so now what is a policy a\npolicy is a collection of bindings audit\nconfiguration and metadata now the\nbinding specifies how access should be\ngranted on resources\nand it binds one or more members with a\nsingle role and any contact specific\nconditions that change how and when the\nrole is granted now the metadata\nincludes additional information about\nthe policy such as an etag and version\nto facilitate policy management and\nfinally the audit config field specifies\nthe configuration data of how access\nattempts should be audited and so now i\nwanted to take a moment to dive deeper\ninto each component starting with member\nnow when it comes to members this is an\nidentity that can access a resource\nso the identity of a member is an email\naddress associated with a user\nservice account or google group or even\na domain name associated with a g suite\nor cloud identity domains now when it\ncomes to a google account this\nrepresents any person who interacts with\ngoogle cloud any email address that is\nassociated with a google account can be\nan identity including gmail.com or other\ndomains now a service account is an\naccount that belongs to your application\ninstead of an individual end user\nso when you run your code that is hosted\non gcp\nthis is the identity you would specify\nto run your code a google group is a\nnamed collection of google accounts and\ncan also include service accounts now\nthe advantages of using google groups is\nthat you can grant and change\npermissions\nfor the collection of accounts all at\nonce instead of changing access one by\none google groups can help you manage\nusers at scale and each member of a\ngoogle group inherits the iam roles\ngranted to that group the inheritance\nmeans that you can use a group's\nmembership to manage users roles instead\nof granting iam roles to individual\nusers moving on to g suite domains this\nrepresents your organization's internet\ndomain name such as\nantonyt.com and when you add a user to\nyour g suite domain a new google account\nis created for the user inside this\nvirtual group such as antony\nantonyt.com a g suite domain in\nactuality represents a virtual group of\nall of the google accounts that have\nbeen created like google groups g suite\ndomains cannot be used to establish\nidentity but they simply enable\npermission management now a cloud\nidentity domain is like a g suite domain\nbut the difference is that domain users\ndon't have access to g suite\napplications and features so a couple\nmore members that i wanted to address\nis the all authenticated users and the\nall users members the all authenticated\nusers is a special identifier that\nrepresents anyone who is authenticated\nwith a google account or a service\naccount users who are not authenticated\nsuch as anonymous visitors are not\nincluded and finally the all users\nmember is a special identifier that\nrepresents anyone and everyone so any\nuser who is on the internet including\nauthenticated and unauthenticated users\nand this covers the slew of the\ndifferent types of members now touching\non the next component of policies is\nroles now diving into roles this is a\nnamed collection of permissions that\ngrant access to perform actions on\ngoogle cloud resources\nso at the heart of it permissions are\nwhat determines what operations are\nallowed on a resource they usually but\nnot always correspond one-to-one with\nrest methods that is each google cloud\nservice has an associated permission for\neach rest method that it has so to call\na method the caller needs that\npermission now these permissions are not\ngranted to the users directly but\ngrouped together within the role you\nwould then grant roles which contain one\nor more permissions\nyou can also create a custom role by\ncombining one or more of the available\niam permissions and again permissions\nallow users to perform specific actions\non google cloud resources so you will\ntypically see a permission such as the\none you see here\ncompute.instances.list\nand within google cloud iam permissions\nare represented in this form\nservice.resource.verb\nso just as a recap on roles this is a\ncollection of permissions\nand you cannot grant a permission\ndirectly to the user but you grant a\nrole to a user and all the permissions\nthat the role contains so an example is\nshown here where the compute instances\npermissions are grouped together in a\nrole now you can grant permissions by\ngranting roles to a user a group or a\nservice account so moving up into a more\nbroader level there are three types of\nroles in iam\nthere are the primitive roles the\npredefined roles\nand the custom roles\nwith the primitive roles\nthese are roles that existed prior to\nthe introduction of iam\nand they consist of three specific roles\nowner editor and viewer and these roles\nare concentric which means that the\nowner role includes the permissions in\nthe editor role and the editor role\nincludes the permissions in the viewer\nrole and you can apply primitive roles\nat the project or service resource\nlevels by using the console the api and\nthe gcloud tool just as a note you\ncannot grant the owner role to a member\nfor a project using the iam api or the\ngcloud command line tool you can only\nadd owners to a project using the cloud\nconsole as well\ngoogle recommends avoiding these roles\nif possible due to the nature of how\nmuch access the permissions are given in\nthese specific roles google recommends\nthat you use pre-defined roles over\nprimitive roles and so moving into\npredefined roles\nthese are roles that give granular and\nfiner-grained access control than the\nprimitive roles to specific google cloud\nresources and prevent any unwanted\naccess to other resources predefined\nroles are created and maintained by\ngoogle their permissions are\nautomatically updated as necessary when\nnew features or services are added to\ngoogle cloud now when it comes to custom\nroles these are user defined and allow\nyou to bundle one or more supported\npermissions to meet your specific needs\nunlike predefined roles custom roles are\nnot maintained by google so when new\npermissions features or services are\nadded to google cloud your custom roles\nwill not be updated automatically when\nyou create a custom role you must choose\nan organization or project to create it\nin you can then grant the custom role on\nthe organization or project as well as\nany resources within that organization\nor project and just as a note you cannot\ncreate custom roles at the folder level\nif you need to use a custom role within\na folder define the custom role on the\nparent of that folder as well the custom\nroles user interface is only available\nto users who have permissions to create\nor manage custom roles by default only\nproject owners can create new roles now\nthere is one limitation that i wanted to\npoint out\nand that is that some predefined roles\ncontain permissions that are not\npermitted in custom roles so i highly\nrecommend that you check whether you can\nuse a specific permission when making a\ncustom role custom roles also have a\nreally cool feature that includes a\nlaunch stage which is stored in the\nstage property for the role the stage is\ninformational and helps you keep track\nof how close each role is to being\ngenerally available and these launch\nstages are available in the stages shown\nhere\nalpha which is in testing beta which is\ntested and awaiting approval and of\ncourse ga which is generally available\nand i'll be getting hands-on later with\nthese roles in an upcoming demonstration\nso now moving on to the next component\nis conditions and so a condition is a\nlogic expression and is used to define\nand enforce\nconditional\nattribute-based access control for\ngoogle cloud resources conditions allow\nyou to choose\ngranting resource access to identities\nalso known as members only if configured\nconditions are met for example this\ncould be done to configure temporary\naccess for users that are contractors\nand have been given specific access for\na certain amount of time a condition\ncould be put in place to remove the\naccess they needed once the contract has\nended conditions are specified in the\nrole bindings of a resources im policy\nso when a condition exists the access\nrequest is only granted if the condition\nexpression is true so now moving on to\nmetadata this component carries both e\ntags and version so first touching on e\nwhen multiple systems try to write to\nthe same im policy at the same time\nthere is a risk that those systems might\noverwrite each other's changes and the\nrisk exists because updating an im\npolicy involves multiple operations so\nin order to help prevent this issue iam\nsupports concurrency control through the\nuse of an etag field in the policy the\nvalue of this field changes each time a\npolicy is updated now when it comes to a\nversion\nthis is a version number that is added\nto determine features such as a\ncondition\nand for future releases of new features\nit is also used to avoid breaking your\nexisting integrations on new feature\nreleases that rely on consistency in the\npolicy structure\nalso when new policy schema versions are\nintroduced and lastly we have the\nauditconfig component and this is used\nin order to configure audit logging for\nthe policy it determines which\npermission types are logged and what\nidentities if any are exempted from\nlogging and so to sum it up this is a\npolicy in all its entirety each\ncomponent as you can see plays a\ndifferent part and i will be going\nthrough policies and how they are\nassembled in statements in a later\nlesson and so there is one more thing\nthat i wanted to touch on before ending\nthis lesson and that is the policy\ninheritance when it comes to resource\nhierarchy and so as explained in an\nearlier lesson you can set an im policy\nat any level in the resource hierarchy\nthe organization level the folder level\nthe project level or the resource level\nand resources inherit the policies of\nall their parent resources the effective\npolicy for a resource\nis the union of the policy set on that\nresource and the policies inherited from\nhigher up in the hierarchy and so again\ni wanted to reiterate that this policy\ninheritance is transitive in other words\nresources inherit policies from the\nproject\nwhich inherit policies from folders\nwhich inherit policies from the\norganization therefore the organization\nlevel policies\nalso apply at the resource level and so\njust a quick example if i apply a policy\non project x\non any resources within that project the\neffective policy is going to be a union\nof these policies as the resources will\ninherit the policy that is granted to\nproject x so i hope this gave you a\nbetter understanding of how policies are\ngranted as well as the course structure\nand so that's all i have for this lesson\nso you can now mark this lesson as\ncomplete and let's move on to the next\none\n[Music]\nwelcome back and in this lesson i wanted\nto build on the last lesson where we\nwent through iam and policy architecture\nand dive deeper into policies and\nconditions when it comes to putting them\ntogether in policy statements as cloud\nengineers you should be able to read and\ndecipher policy statements and\nunderstand how they're put together by\nusing all the components that we\ndiscussed earlier so just as a refresher\ni wanted to go over the policy\narchitecture again now as i discussed\npreviously a policy is a collection of\nstatements that define who has what type\nof access it is attached to a resource\nand is used to enforce access control\nwhenever that resource is accessed now\nthe binding within that policy binds one\nor more members with a single role and\nany context specific conditions so in\nother words the member roles and\nconditions are bound together using a\nbinding combined with the metadata and\naudit config we have a policy so now\ntaking all of this and putting it\ntogether in a policy statement shown\nhere you can see the bindings which have\nthe role the members and conditions the\nfirst member being tony beauties\ngmail.com holding the role of storage\nadmin and the second member as\nlarkfetterlogin at gmail.com\nholding the role of storage object\nviewer now because lark only needs to\nview the files for this project in cloud\nstorage till the new year a condition\nhas been applied that does not grant\naccess for lark to view these files\nafter january the 1st an e tag has been\nput in and the version is numbered 3 due\nto the condition which i will get into a\nlittle bit later this policy statement\nhas been structured in json format and\nis a common format used in policy\nstatements moving on we have the exact\nsame policy statement but has been\nformatted in yaml as you can see the\nmembers roles and conditions in the\nbindings are exactly the same as well as\nthe etag and version but due to the\nformatting it is much more condensed so\nas you can see policy statements can be\nwritten in both json or yaml depending\non your preference my personal\npreference is to write my policy\nstatements in yaml due to the shorter\nand cleaner format so i will be moving\nahead in this course with more\nstatements written in yaml when you are\nlooking to query your projects for its\ngranted policies\nan easy way to do this would be to query\nit from the command line as shown here\nhere i've taken a screenshot from tony\nbowtie ace in the cloud shell and have\nused the command gcloud projects get\ndash iam\npolicy with the project id and this\nbrought up all the members and roles\nwithin the bindings\nas well as the etag and version for the\npolicy that has been attached to this\nproject and as you can see here i have\nno conditions in place for any of my\nbindings and so again using the command\ngcloud projects\nget dash iam dash policy along with the\nproject id will bring up any policies\nthat are attached to this resource and\nthe resource being the project id if the\nresource were to be the folder id then\nyou could use the command gcloud\nresource dash manager\nfolders get dash iam-policy\nwith the folder id and for organizations\nthe command would be gcloud\norganizations get dash\niam-policy along with the organization\nid now because we don't have any folders\nor organizations in our environment\ntyping these commands in wouldn't bring\nup anything and just as a note using\nthese commands in the cloud shell or in\nthe sdk will bring up the policy\nstatement formatted in yaml so now i\nwanted to just take a second to dive\ninto policy versions now as i haven't\ncovered versions in detail i wanted to\nquickly go over it and the reasons for\neach numbered version now version one of\nthe i am syntax schema for policies\nsupports binding one role to one or more\nmembers\nit does not support conditional role\nbindings and so usually with version 1\nyou will not see any conditions version\n2 is used for google's internal use and\nso querying policies\nusually you will not see a version 2.\nand finally with version 3 this\nintroduces the condition field in the\nrole binding which constrains the role\nbinding via contact space and attributes\nbased rules so just as a note if your\nrequest does not specify a policy\nversion\niam will assume that you want a version\n1 policy and again if the policy does\nnot contain any conditions\nthen iam always returns a version one\npolicy regardless of the version number\nin the request so moving on to some\npolicy limitations each resource can\nonly have one policy and this includes\norganizations folders and projects\nanother limitation\nis that each iam policy can contain up\nto 1500 members\nand up to 250 of these members\ncan be google groups now when making\npolicy changes it will take up to seven\nminutes to fully propagate across the\ngoogle cloud platform this does not\nhappen instantaneously as iam is global\nas well there is a limit of 100\nconditional role bindings per policy now\ngetting a little bit deeper into\nconditions\nthese are attributes that are either\nbased on resource or based on details\nabout the request and this could vary\nfrom time stamp to originating or\ndestination ip address now as you\nprobably heard me use the term earlier\nconditional role bindings are another\nname for a policy that holds a condition\nwithin the binding conditional role\nbindings can be added to new or existing\niam policies\nto further control access to google\ncloud resources so when it comes to\nresource attributes this would enable\nyou to create conditions that evaluate\nthe resource in the access request\nincluding the resource type the resource\nname and the google cloud service being\nused request attributes allow you to\nmanage access based on days or hours of\nthe week a conditional role binding can\nbe used to grant time bounded access to\na resource ensuring that a user can no\nlonger access that resource after the\nspecified expiry date and time and this\nsets temporary access to google cloud\nresources using conditional role\nbindings in iam policies by using the\ndate time attributes shown here you can\nenforce time-based controls when\naccessing a given resource now showing\nanother example of a time-based\ncondition it is possible to get even\nmore granular and scope the geographic\nregion\nalong with the day and time for access\nin this policy lark only has access\nduring business hours to view any\nobjects within cloud storage lark can\nonly access these objects from monday to\nfriday nine to five this policy can also\nbe used as a great example for\ncontractors coming into your business\nyet only needing access during business\nhours now an example of a resource-based\ncondition shown here a group member has\na condition tied to it where dev only\naccess has been implemented any\ndevelopers that are part of this group\nwill only have access to vm resources\nwithin project cat bowties and tied to\nany resources that's name starts with\nthe word development now some\nlimitations when it comes to conditions\nis that conditions are limited to\nspecific services\nprimitive roles are unsupported and\nmembers cannot be of the all users or\nall authenticated users members\nconditions also hold a limit of 100\nconditional role bindings per policy as\nwell as 20 role bindings for the same\nrole and same member and so for the last\npart of the policy statements i wanted\nto touch on audit config logs and this\nspecifies the audit configuration for a\nservice the configuration determines\nwhich permission types are logged and\nwhat identities if any are exempted from\nlogging and when specifying audit\nconfigs they must have one or more audit\nlog configs now as shown here\nthis policy enables data read data write\nand admin read logging on all services\nwhile exempting tony bowtie ace\ngmail.com\nfrom admin read logging on cloud storage\nand so that's pretty much all i wanted\nto cover in this lesson\non policies policy statements\nand conditions and so i highly recommend\nas you come across more policy\nstatements take the time to read through\nit and get to know exactly\nwhat the statement is referring to and\nwhat type of permissions that are given\nand this will help you not only in the\nexam but will also help you in reading\nand writing policy statements in future\nand so that's all i have for this lesson\nso you can now mark this lesson as\ncomplete and let's move on to the next\none\n[Music]\nwelcome back\nand in this demonstration i'm going to\ndo a hands-on tour working with iam here\nin the google cloud console we're going\nto go through the available services in\nthe iam console as well as touching on\nthe command line in the cloud shell to\nshow how policies can be both added and\nedited we're also going to be bringing\nin another new user to really bring this\ndemo to life and to show you how to edit\nexisting policies so with that being\nsaid let's dive in so if i go over here\nto my user icon in the top right hand\ncorner i can see that i am logged in as\ntony bowtie ace\ngmail.com and as you can see at the top\ni'm here in project tony so now to get\nto iam i'm going to go over to the\nnavigation menu\nand i'm going to go to i am in admin and\nover to iam now moving over here to the\nmenu on the left i wanted to go through\nthe different options that we have in\niam so under iam itself this is where\nyou would add or edit permissions\nwith regards to members and roles for\nthe policy added to your given project\nwhich in my case is project tony and\ni'll be coming back in just a bit to go\ngreater in depth with regards to adding\nand editing the policy permissions\nmoving on to identity and organization\nnow although we haven't touched on cloud\nidentity yet i will be covering this in\nhigh level detail in a different lesson\nbut for now know that cloud identity is\ngoogle cloud's identity as a service\nsolution and it allows you to create and\nmanage users and groups within google\ncloud now if i was signed into cloud\nidentity i would have a whole bunch of\noptions here but since this is a\npersonal account i cannot create or\nmanage any users as well i do not have a\ndomain tied to any cloud identity\naccount as well as any g suite account\nso just know that if you had cloud\nidentity or g suite set up you would\nhave a bunch of different options to\nchoose from in order to help you manage\nyour users and groups and here under\norganization policies\ni'm able to manage organization policies\nbut since i am not an organization\npolicy administrator and i don't have an\norganization there's not much that i can\ndo here just know that when you have an\norganization set up you are able to come\nhere in order to manage and edit your\norganization policies now moving under\nquotas we went over this in a little bit\nof detail in a previous lesson and again\nthis is to edit any quotas for any of\nyour services in case you need a limit\nincrease moving on to service accounts\ni will be covering this topic in great\ndepth in a later lesson and we'll be\ngoing through a hands-on demonstration\nas well now i know i haven't touched\nmuch on labels as of yet but know that\nlabels are a key value pair that helps\nyou organize and then filter your\nresources based on their labels these\nsame labels are also forwarded to your\nbilling system so you can then break\ndown your billing charges by label and\nyou can also use labels based on teams\ncost centers components and even\nenvironments\nso for example if i wanted to label my\nvirtual machines by environment i can\nsimply use environment as the key and as\nthe value i can use anything from\ndevelopment\nto qa\nto testing\nto production and i could simply add\nthis label and add all the different\nenvironments and later i'd be able to\nquery based on these specific labels now\na good rule of thumb is to label all of\nyour resources so that this way you're\nable to find them a lot easier and\nyou're able to query them a lot easier\nso moving forward with any of your\nresources that you are creating be sure\nto add some labels to give you maximum\nflexibility so i'm going to discard\nthese changes and we're going to move on\nto settings and we touched on settings\nin an earlier lesson with regards to\nprojects and so here i could change the\nproject name it'll give me the project\nid the project number and i'm able to\nmigrate or shut down the project now\nwhen it comes to access transparency\nthis provides you with logs that capture\nthe actions that google personnel take\nwhen they're accessing your content for\ntroubleshooting so they're like cloud\naudit logs but for google support now in\norder to enable access transparency for\nyour google cloud organization\nyour google cloud account must have a\npremium support plan or a minimum level\nof a 400 a month support plan and\nbecause i don't have this i wouldn't be\nable to enable access transparency now\nalthough access transparency is not on\nthe exam\nthis is a great feature to know about in\ncase you are working in any bigger\nenvironments that have these support\nplans and compliance is of the utmost\nimportance now moving into privacy and\nsecurity this is where google supplies\nall of their clients of google cloud the\ncompliance that they need in order to\nmeet regulations across the world and\nacross various industries such as health\ncare and education and because google\nhas a broad base in europe google\nprovides capabilities and contractual\ncommitments created to meet data\nprotection recommendations which is why\nyou can see here eu model contract\nclauses\nand eu representative contacts as well\nunder transparency and control i'm able\nto disable the usage data that google\ncollects in order to provide better data\ninsights and recommendations and this is\ndone at the project level and as well i\nhave the option of going over to my\nbilling account and i could select a\ndifferent billing account that's linked\nto some other projects that you can get\nrecommendations on and so continuing\nforward identity aware proxy is\nsomething that i will be covering in a\nlater lesson and so i won't be getting\ninto any detail about that right now and\nso what i really wanted to dig into is\nroles now this may look familiar as i\ntouched on this very briefly in a\nprevious lesson and here's where i can\ncreate roles\ni can create some custom roles from\ndifferent selections and here i have\naccess to all the permissions\nand if i wanted to i can filter down\nfrom the different types the names the\npermissions even the status so let's say\ni was looking for a specific permission\nand i'm looking all the permissions for\nprojects this could help me find exactly\nwhat it is that i'm looking for and\nthese filters allow me to get really\ngranular so i can find the exact\npermission and so you can get really\ngranular with regards to your\npermissions and create roles that are\ncustom to your environment now moving on\nto audit logs here i can enable the auto\nlogs without having to use a specific\npolicy by simply clicking on default\nautoconfig and here i can turn on and\noff\nall the selected logging\nas well as add any exempted users now i\ndon't recommend that you turn these on\nas audit logging can create an extremely\nlarge amount of data and can quickly\nblow through all of your 300 credit so\ni'm going to keep that off move back to\nthe main screen of the audit logs and as\nwell here i'm able to get really\ngranular about what i want to log now\nquickly touching on audit logs in the\ncommand line i wanted to quickly open up\ncloud shell and show you an example of\nhow i can edit the policy in order to\nenable audit logging just going to make\nthis a little bit bigger\nand i'm going to paste in my command\ngcloud projects get dash iam\ndash policy\nwith the project id which is project\ntony\n286016 and i'm gonna just hit enter\nand as you can see here this is my\ncurrent policy and as well as expected\naudit logs are not enabled due to the\nfact that the audit config field is not\npresent so in order for me to enable the\naudit config logs i'm going to have to\nedit the policy and so the easiest way\nfor me to do that is for me to run the\nsame command and output it to a file\nwhere i can edit it and i'm going to\ncall this\nnew dash policy dot yaml and so now that\nmy policy has been outputted to this\nfile i'm going to now go into the editor\nand as you can see my new policy.yaml is\nright here and so for me to enable the\nautoconfig logs i'm going to simply\nappend it to the file and then i'm going\nto go over here to the top menu\nand click on file and save and so now\nfor me to apply this new policy i'm\ngoing to go back over to the terminal\nand now i'm going to paste in the\ncommand\ngcloud projects set dash\niam-policy with the project id and the\nfile name new dash policy dot yaml and\ni'm just going to hit enter\nand as you can see the audit log configs\nhave been enabled for all services and\nbecause this may take some time to\nreflect in the console it will not show\nup right away but either way audit logs\nusually take up a lot of data and i\ndon't want to blow through my 300 credit\nand so i'm going to disable them now the\neasiest way for me to do this is to\noutput this policy to another file edit\nit and set it again and so i'm going to\ngo ahead and do that i'm going to first\nclear the screen and then i'm going to\npaste in my command while outputting it\nto a new file called updated dash policy\ndot yaml and i'm gonna hit enter and now\ni'm gonna go into the editor so i can\nedit the file now the one thing i wanted\nto point out is that i could have\noverwritten\nthe file new dash policy but if you look\nhere in the updated policy the e-tag\nis different than the e-tag in the old\npolicy and so this allowed me to\nhighlight e-tags when it comes to\nediting and creating new policies and so\nwhen editing policies make sure that the\netag is correct otherwise you will\nreceive an error and not be able to set\nthe new policy so going back to the\nupdated policy file i'm going to take\nout the audit log configs and i'm going\nto leave the auto configs field there\nand i'm going to go to the menu click on\nfile and then save now i'm going to go\nback to the terminal and i'm going to\npaste in the new command and this will\nupdate my policy and as you can see the\naudit config logs have been disabled and\nthe policy has been updated now this is\nthe same process that you can use when\nyou want to update any parts of the\npolicy when it comes to your members or\nroles and even adding any conditions so\nnow moving on to the last item on the\nmenu\nis groups\nand as you can see here because i do not\nhave an organization i'm not able to\nview any groups and so if i did have an\norganization i could manage my groups\nright here in this page now moving back\nover to iam\ni wanted to dig into policies in a\nlittle bit of further detail now what we\nsee here are the permissions and roles\nthat have been granted to selected\nmembers in this specific project which\nis project tony now remember an im\npolicy is a total collection of members\nthat have roles granted to them in\nwhat's known as a binding and then the\nbinding is applied to that layer and all\nother layers underneath it and since i'm\nat the project layer this policy is\ninherited by all the resources\nunderneath it and so just to verify\nthrough the command line i'm going to\nopen up cloud shell\nand i'm going to paste in the command\ngcloud projects get dash\niam-policy with my project id\nand i'm going to hit enter\nand as you can see here the policy is a\nreflection of exactly what you see here\nin the console so as you can see here\nhere's the service agent which you will\nfind here and the other two service\naccounts which you will find above\nas well as tony bowtie ace gmail.com and\nall the other roles that accompany those\nmembers so as i mentioned earlier i've\ngone ahead and created a new user and so\nfor those who are following along you\ncan go ahead and feel free to create a\nnew gmail user now going ahead with this\ndemonstration the user i created is\nnamed laura delightful now tony needed\nan extra hand and decided to bring her\nonto the team from another department\nnow unfortunately in order for laura to\nhelp tony on the project she needs\naccess to this project and as you can\nsee she doesn't have any access and so\nwe're going to go ahead and change that\nand give her access to this project so\ni'm going to go back over to my open tab\nfor tony bowtie ace and we're gonna go\nahead and give laura permissions and so\ni'm gonna go ahead and click on this add\nbutton at the top of the page and the\nprompt will ask me to add a new member\nso i'm gonna add laura in here now\nand here she is and i'm going to select\nthe role\nas project viewer i'm not going to add\nany conditions and i'm simply going to\nclick on save and the policy has been\nupdated and as you can see here laura\nhas been granted the role of project\nviewer so i'm going to move over to the\nother open tab where laura's console is\nopen and i'm going to simply do a\nrefresh\nand now laura has access to view all the\nresources within project tony now laura\nis able to view everything in the\nproject but laura isn't actually able to\ndo anything and so in order for laura to\nget things done a big part of her job is\ngoing to be creating files with new\nideas for the fall winter line of bow\nties in 2021 and so because laura holds\nthe project viewer role she is able to\nsee everything in cloud storage but she\nis unable to create buckets\nto upload edit or delete any files or\neven folders and as you can see here\nthere is a folder marked bowtie inc\nfallwinter 2021 ideas but laura cannot\ncreate any new buckets because she\ndoesn't have the required permissions as\nwell drilling down into this bucket\nlaura is unable to create any folders as\nexplained earlier\nand the same stands for uploading any\nfiles and so i'm going to cancel out of\nthis and so in order to give laura the\nproper permissions for her to do her job\nwe're going to give laura the storage\nadmin role and so moving back over to\nthe open console for tony bowtie i'm\ngoing to give laura access by using the\ncommand line so i'm going to go up to\nthe top right and open up cloud shell\nand so the command i need to run\nto give laura the role of storage admin\nwould be the following gcloud projects\nadd dash iam dash policy dash binding\nwith the project id dash dash member\nuser followed by colon and then the user\nname which is laura delightful gmail.com\ndash dash role and the role which is\nstorage admin and i'm going to go ahead\nand hit enter\nand as you can see it has been executed\nsuccessfully so if i do a refresh of the\nweb page here i'm going to be able to\nsee the changes reflected in the console\nand after a refresh you can see here\nstorage admin has been added to the role\nfor laura delightful gmail.com and so if\ni go over to the open tab where laura\nhas her console open i can simply do a\nrefresh\nand if i go back to the home page for\ncloud storage you can see here that\nlaura now has the permissions to create\na bucket laura also now has permissions\nto create new folders create edit and\ndelete new files on top of being able to\ncreate new storage buckets and so that\nabout wraps up this demonstration on\ngetting hands-on with iam\nin both the console and the command line\nand i also hope that this demo has given\nyou a bit more confidence\non working in the shell running the\ncommands needed in order to create new\nbindings along with editing existing\npolicies\nand this will get you comfortable for\nwhen you need to assign roles to new and\nexisting users that are added to your\ngcp environment and so you can now mark\nthis lesson as complete\nand let's move on to the next one\nwelcome back in this lesson i'm going to\ntake a deep dive into service accounts\nnow service accounts play a powerful\npart in google cloud and can allow a\ndifferent approach for application\ninteraction with the resources in google\ncloud now service accounts being both an\nidentity and a resource can cause some\nconfusion for some and so i really\nwanted to spend some time breaking it\ndown for better understanding and so i'm\nfirst going to start off by explaining\nwhat exactly is a service account and so\na service account is a special kind of\naccount that is used by an application\nor a virtual machine instance and not a\nperson\nan application uses the service account\nto authenticate between the application\nand gcp services so that the users\naren't directly involved in short it is\na special type of google account\nintended to represent a non-human user\nthat needs to authenticate and be\nauthorized to access data in google apis\nthis way the service account is the\nidentity of the service and the service\naccounts permissions control which\nresources the service can access and as\na note a service account is identified\nby its email address\nwhich is unique to the account now the\ndifferent service account types\ncome in three different flavors\nuser managed\ndefault and google managed service\naccounts when it comes to the user\nmanaged service accounts\nthese are service accounts that you\ncreate\nyou're responsible for managing and\nsecuring these accounts\nand by default you can create up to 100\nuser managed service accounts in a\nproject or you can also request a quota\nincrease in case you need more now when\nyou create a user managed service\naccount in your project it is you that\nchooses a name for the service account\nthis name appears in the email address\nthat identifies the service account\nwhich uses the following format seen\nhere the service account name\nat the project id dot\niam.gserviceaccount.com\nnow moving on to the default service\naccounts\nwhen you use some google cloud services\nthey create user managed service\naccounts that enable the service to\ndeploy jobs that access other google\ncloud resources these accounts are known\nas default service accounts so when it\ncomes to production workloads google\nstrongly recommends that you create your\nown user managed service accounts and\ngrant the appropriate roles to each\nservice account when a default service\naccount is created it is automatically\ngranted the editor role on your project\nnow following the principle of lease\nprivilege google strongly recommends\nthat you disable the automatic role\ngrant\nby adding a constraint to your\norganization policy\nor by revoking the editor role manually\nthe default service account will be\nassigned an email address\nfollowing the format you see here\nproject id\nat appspot.gserviceaccount.com\nfor any service accounts created by app\nengine and project number dash compute\nat developer.gserviceaccount.com\nfor compute engine and so lastly when it\ncomes to google managed service accounts\nthese are created and managed by google\nand they are used by google services the\ndisplay name of most google managed\nservice accounts\nends with a\ngserviceaccount.com address now some of\nthese service accounts are visible but\nothers are hidden so for example\ngoogle api service agent is a service\naccount named with an email address that\nuses the following format\nproject number at cloudservices.gerisa\nand this runs internal google processes\non your behalf and this is just one\nexample of the many google managed\nservices that run in your environment\nand just as a warning it is not\nrecommended to change or revoke the\nroles that are granted to the google api\nservice agent or to any other google\nmanaged service accounts for that matter\nif you change or revoke these roles\nsome google cloud services will no\nlonger work now when it comes to\nauthentication for service accounts they\nauthenticate using service account keys\nso each service account is associated\nwith two sets of public and private rsa\nkey pairs that are used to authenticate\nto google they are the google manage\nkeys and the user manage keys with the\ngoogle manage keys google stores both\nthe public and private portion of the\nkey\nrotates them regularly and the private\nkey is always held in escrow and is\nnever directly accessible iam provides\napis to use these keys to sign on behalf\nof the service account now when using\nuser managed key pairs this implies that\nyou own both the public and private\nportions of a key pair you can create\none or more user managed key pairs also\nknown as external keys that can be used\nfrom outside of google cloud google only\nstores the public portion of a user\nmanaged key\nso you are responsible for the security\nof the private key as well as the key\nrotation private keys cannot be\nretrieved by google so if you're using a\nuser manage key\nplease be aware that if you lose your\nkey your service account will\neffectively stop working google\nrecommends storing these keys in cloud\nkms for better security and better\nmanagement user managed keys are\nextremely powerful credentials and they\ncan represent a security risk if they\nare not managed correctly and as you can\nsee here a user managed key has many\ndifferent areas that need to be\naddressed when it comes to key\nmanagement now when it comes to service\naccount permissions\nin addition to being an identity a\nservice account is a resource which has\nim policies attached to it and these\npolicies determine who can use the\nservice account so for instance\nlark can have the editor role on a\nservice account and laura can have a\nviewer role on a service account so this\nis just like granting roles for any\nother google cloud resource just as a\nnote\nthe default compute engine and app\nengine service accounts are granted\neditor roles on the project when they\nare created so that the code executing\nin your app or vm instance has the\nnecessary permissions now you can grant\nthe service account user role at both\nthe project level for all service\naccounts in the project or at the\nservice account level now granting the\nservice account user role to a user for\na project\ngives the user access to all service\naccounts in the project\nincluding service accounts that may be\ncreated in the future granting the\nservice account user role to a user for\na specific\nservice account gives a user access to\nonly that service account so please be\naware when granting the service account\nuser role to any member now users who\nare granted the service account user\nrole on a service account can use it to\nindirectly access\nall the resources to which the service\naccount has access\nwhen this happens the user impersonates\nthe service account to perform any tasks\nusing its granted roles and permissions\nand is known as service account\nimpersonation now when it comes to\nservice account permissions there is\nalso another method use called access\nscopes service account scopes are the\nlegacy method of specifying permissions\nfor your instance\nand they are used in substitution of iam\nroles these are used specifically for\ndefault or automatically created service\naccounts based on enabled apis now\nbefore the existence of iam roles access\nscopes were the only way for granting\npermissions to service accounts and\nalthough they are not the primary way of\ngranting permissions now\nyou must still set service account\nscopes when configuring an instance to\nrun as a service account however when\nyou are using a custom service account\nyou will not be using scopes rather you\nwill be using iam roles\nso when you are using a default service\naccount for your compute instance it\nwill default to using scopes instead of\niam roles and so i wanted to quickly\ntouch on how service accounts are used\nnow one way of using a service account\nis to attach this service account to a\nresource\nso if you want to start a long-running\njob that authenticates as a service\naccount you need to attach a service\naccount to the resource that will run\nthe job and this will bind the service\naccount to the resource now the other\nway of using a service account is\ndirectly impersonating a service account\nwhich i had explained a little bit\nearlier so once granted they require\npermissions a user or a service can\ndirectly impersonate the identity of a\nservice account in a few common\nscenarios you can impersonate the\nservice account without requiring the\nuse of a downloaded external service\naccount key as well a user may get\nartifacts signed by the google managed\nprivate key of the service account\nwithout ever actually retrieving a\ncredential for the service account and\nthis is an advanced use case and is only\nsupported for programmatic access now\nalthough i'm going to be covering best\npractices\nat the end of this section i wanted to\ngo over some best practices for service\naccounts specifically so you should\nalways look at auditing the service\naccounts\nand their keys\nusing either the service account dot\nkeys dot list method\nor the logs viewer page in the console\nnow if your service accounts don't need\nexternal keys\nyou should definitely delete them you\nshould always grant the service account\nonly the minimum set of permissions\nrequired to achieve the goal\nservice accounts should also be created\nfor each specific service with only the\npermissions required for that service\nand finally when it comes to\nimplementing key rotation you should\ntake advantage of the iam service\naccount api to get the job done and so\nthat's all i have for this lesson on\nservice accounts\nso you can now mark this lesson as\ncomplete\nand please join me in the next one where\nwe go hands-on in the console\n[Music]\nwelcome back\nso in this demonstration i'm going to\ntake a hands-on tour diving through\nvarious aspects of working with both\ndefault and custom-made service accounts\nwe're going to start off fresh\nobserving a new service account being\nautomatically created along with viewing\nscopes observing how to edit them and\ncreating custom service accounts that\nget a little bit more granular with the\npermissions assigned so with that being\nsaid let's dive in so as you can see\nhere from the top right hand corner that\ni am logged in under tony bowtie ace\ngmail.com and looking over here from the\ntop drop down menu you can see that i am\nin the project of cat bow ties fall 2021\nand this is a brand new project that i\nhad created specifically for this demo\nand so i currently have no resources\ncreated along with no apis enabled so\nnow i want to navigate over to iam so\ni'm going to go up to the left hand\ncorner to the navigation menu\nand i'm going to go to i am an admin\nand over to iam and as expected i have\nno members here other than myself tony\nbowtie ace gmail.com with no other\nmembers and if i go over here to the\nleft hand menu under service accounts\nyou can see that i have no service\naccounts created so now in order to\ndemonstrate a default service account\ni'm going to go over to the navigation\nmenu and go into compute engine and as\nyou can see the compute engine api is\nstarting up and so this may take a\ncouple minutes to get ready okay and the\ncompute engine api has been enabled so\nnow if i go back over to iam to take a\nlook at my service accounts as expected\ni have my compute engine default service\naccount now again i did not create this\nmanually this service account was\nautomatically created when i had enabled\nthe compute engine api along with the\napi's service agent and the compute\nengine service agent and the same would\nhappen to other various apis that are\nenabled as well and so now that i have\nmy default service account i want to go\nback over to compute engine\nand i'm going to go ahead and create a\nvm instance so i'm going to just click\non create\ni'm going to keep everything as the\ndefault except i'm going to change the\nmachine type from an e2 medium to an e2\nmicro and so now i'm going to scroll\ndown to where it says identity and api\naccess\nnow here under service account you can\nsee that the compute engine default\nservice account has been highlighted and\nthis is because i don't have any other\nservice accounts that i am able to\nselect from now when a default service\naccount is the only service account you\nhave access to\naccess scopes are the only permissions\nthat will be available for you to select\nfrom now remember access scopes are the\nlegacy method of specifying permissions\nin google cloud now under access scopes\ni can select from the allow default\naccess\nallow full access to all cloud apis\nand set access for each api and so i\nwant to click on set access for each api\nfor just a second and so as you can see\nhere i have access to set permissions\nfor each api the difference being is\nthat i only have access to primitive\nroles and so now that i'm looking to\ngrant access to my service account i'm\ngoing to grant access to cloud storage\non a read-only capacity\nand so now that i have granted\npermissions for my service account i'm\ngoing to now create my instance by\nsimply clicking on the create button\nand so now that my instance is created\ni want to head over to cloud storage to\nsee exactly what my service account will\nhave access to so i'm going to go over\nto my navigation menu and scroll down\nand click on storage and as you can see\nhere i have created a bucket in advance\ncalled bow tie ink fall winter 2012\ndesigns and this is due to bow tie ink\nbringing back some old designs from 2012\nand making them relevant for today and\nwithin that bucket there are a few files\nof different design ideas that were best\nsellers back in 2012\nthat tony bowtie wanted to re-release\nfor the fall winter 2012 collection and\nso with the new granted access to my\ndefault service account i should have\naccess to view these files so in order\nto test this i'm going to go back over\nto the navigation menu and go back to\ncompute engine and i'm going to ssh into\nmy instance\nand so now that i've sshed into my\nvirtual machine\ni wanted to first check to see who is it\nthat's running the commands is it my\nuser account or is it my service account\nand so i'll be able to do this very\neasily by checking the configuration and\ni can do this by running the command\ngcloud config list and as you can see my\ncurrent configuration is showing that my\nservice account is the member that is\nbeing used to run this command in the\nproject of cat bow ties fall 2021 now if\ni wanted to run any commands using my\ntony bowtie ace\ngmail.com user account i can simply run\nthe command gcloud auth login and it\nwill bring me through the login process\nthat we've seen earlier on in the course\nfor my tony bowtie ace\ngmail.com account but now since i'm\nrunning all my commands using my service\naccount from this compute engine\ninstance i'm using the permissions\ngranted to that service account that we\nsaw earlier and so since i set the\nstorage scope for the service account to\nread only we should be able to see the\ncloud storage bucket and all the files\nwithin it by simply running the gsutil\ncommand so to list the contents of the\nbucket i'm going to type in the command\ngsutil ls for list and the name of the\nbucket and the syntax for that would be\ngs\ncolon forward slash forward slash\nfollowed by the name of the bucket which\nwould be bowtie inc\nfw2012\ndesigns\nand as you can see we're able to view\nall the files that are in the bucket and\nso it is working as expected and so now\nbecause i've only granted viewing\npermissions for this service account i\ncannot create any files due to the lack\nof permissions so for instance if i was\nto create a file\nusing the command touch\nfile one i have now created that file\nhere on the instance so now i want to\ncopy this file to my bucket and so i'm\ngoing to run the gsutil command\ncp for copy\nfile 1 which is the name of my file and\ngs\ncolon forward slash forward slash along\nwith the name of the bucket which is bow\ntie inc fw\n2012\ndesigns and as expected i am getting an\naccess denied exception with a prompt\ntelling me that i have insufficient\npermissions and so now that i've shown\nyou how to create a default service\naccount and give it permissions using\naccess scopes let's now create a custom\nservice account and assign it proper\npermissions\nto not only read files from cloud\nstorage but be able to write files to\ncloud storage as well so i'm going to\nnow close down this tab\nand i'm going to go back over to the\nnavigation menu\nand go back to iam where we can go in\nand create our new service account\nunder service accounts\nand so as you can see here this is the\ndefault service account and since we\nwant to create a custom one i'm going to\ngo ahead and go up to the top here and\nclick on the button that says create\nservice account\nand so now i'm prompted to enter some\ninformation with regards to details of\nthis service account including the\nservice account name the account id\nalong with a description and so i'm\ngoing to call this service account sa\nhyphen bowtie hyphen demo and as you can\nsee it automatically propagated the\nservice account id and i'm going to give\nthis service account a description\nstorage read write access\nand i'm going to click on the button\ncreate\nand so now i've been prompted to grant\npermissions to the service account and i\ncan do that by simply clicking on the\ndrop down and selecting a roll but i'm\nlooking to get a little bit more\ngranular and so i'm going to simply type\nin storage and as you can see i'm coming\nup with some more granular roles as\nopposed to the primitive roles that i\nonly had access to prior to the search\nso i'm going to click on storage object\nviewer for read access to cloud storage\ni'm not going to add any conditions and\ni'm going to add another role and this\ntime\ni'm going to add storage object creator\nand so those are all the permissions i\nneed for read write access to cloud\nstorage and so now i can simply click on\ncontinue and so now i'm being prompted\nto add another user to act as a service\naccount and this is what we discussed in\nthe last lesson about service accounts\nbeing both a member and a resource now\nnotice that i have an option for both\nthe service account users role and the\nservice account admins role now as\ndiscussed earlier the service account\nand men's role has the ability to grant\nother users the role of service account\nuser and so because we don't want to do\nthat i'm going to leave both of these\nfields blank\nand simply click on done now i know in\nthe last lesson i talked about creating\ncustom keys for authentication\nin case you're hosting your code on\npremise or on another cloud and so if i\nwanted to do that i can simply go to the\nactions menu and click on create key and\nit'll give me the option on creating a\nprivate key either using json or p12\nformat and because i'm not creating any\nkeys i'm going to simply click on cancel\nand so in order for me to apply this\nservice account\nto our vm instance i'm going to now go\nback over to the navigation menu and go\nback into compute engine and so now in\norder for me to change this service\naccount that's currently assigned to\nthis instance i'm going to go ahead and\ncheck off this instance and click on\nstop\nnow please note that in order to change\nservice accounts on any instance you\nmust stop it first before you can edit\nthe service account and so now that the\ninstance has stopped i'm going to drill\ndown into this instance one\nand i'm going to click on edit\nnow i'm going to scroll down to the\nbottom\nand at the bottom you will find the\nservice account field and clicking on\nthe drop down i'll find my custom\nservice account as a bow tie demo so i\nwant to select this and simply click on\nsave and so now that i've selected my\nnew service account to be used in this\nvm instance i can now start up the\ninstance again to test out the\npermissions that were granted\nand so just as a quick note here i\nwanted to bring your attention to the\nexternal ip whenever stopping and\nstarting an instance with an ephemeral\nip in other words it is not assigned a\nstatic ip your vm instance will receive\na new ip address and i'll be getting\ninto this in a lot deeper detail in the\ncompute engine section of the course and\nso now i'm going to ssh into this\ninstance\nnow i'm going to run the same gsutil\ncommand that i did previously to list\nall the files in the bucket so i'm going\nto run the command gsutil ls for list\nand gs\ncolon forward slash forward slash bow\ntie inc fw 2012 designs\nand as you can see i'm able to read all\nthe files in the bucket now the\ndifference in the permissions granted\nfor the service account is that i'm able\nto write files to cloud storage and so\nin order to test that i'm going to use\nthe touch command again and i'm going to\nname the file file2 and so now i'm going\nto copy this file to the cloud storage\nbucket by using the command gsutil cp\nfile2 and the bucket name\ngs colon forward slash forward slash bow\ntie inc fw 2012 designs and as expected\nthe file copied over successfully as we\ndo have permissions to write to cloud\nstorage and so before i end this\ndemonstration i wanted to quickly go\nover exactly how to create service\naccounts\nusing the command line and so i'm going\nto close down this tab and i'm going to\nhead up to the top right hand corner and\nactivate my cloud shell i'm going to\nmake this window a little bit bigger and\nso now in order to view the service\naccounts i currently have\ni'm going to run the command\ngcloud\niam\nservice dash accounts\nlist\nand so as expected the compute engine\ndefault service account along with the\ncustom service account that i created\nearlier called sa bowtie demo is now\ndisplaying and in order to just verify\nthat i'm going to go over to iam\nunder service accounts and as you can\nsee it is reflecting exactly the same in\nthe console so now in order for me to\ncreate a new service account using the\ncommand line i'm going to run the\ncommand\ngcloud iam service accounts create\nand the name of the service account\nwhich i'm going to call sa-tony bowtie\nalong with the display name as essay\ntony bowtie as well and i'm going to hit\nenter\nand my service account has been created\nso now if i run the command gcloud i am\nservice accounts list\ni should see my new service account and\nas well if i did a refresh here on the\nconsole i can see that it is reflecting\nthe same so now that we've created our\nnew service account we need to assign\nsome permissions to it in order for us\nto be able to use it and so if i go over\nhere to iam in the console i can see\nhere that my service account has not\nbeen assigned any permissions and so in\norder to do that i am going to simply\nrun the command\ngcloud projects\nadd dash iam-policy-binding\nso we're adding a policy binding and\nthen the name of the project catbow ties\nfall 2021 we need to add the member\nwhich is the new service account email\naddress along with the role of storage\nobject viewer i'm going to hit enter\nand as you can see\nmy member sa tony bowtie has been\nassigned the storage object viewer role\nand so if i wanted to grant some other\nroles to the service account i can do\nthat as well and so if i did a refresh\nhere i can see that the console reflects\nexactly the same and so in order for me\nto use this account in my instance i'm\ngoing to first have to stop my instance\nattach my service account and then start\nup my instance again so i'm going to go\nover to my cloud shell i'm just going to\nclear the screen and i'm going to paste\nin the command gcloud compute instances\nstop the name of the instance along with\nthe zone and now that the instance has\nstopped i can now add my surface account\nto the instance and so i'm going to use\nthe command gcloud compute instances\nset service account instance 1\nalong with the zone and the service\naccount email address i'm going to go\nahead and hit enter\nand it has now been successfully added\nand so now that that's done i can now\nstart up the instance by using the\ncommand gcloud compute instances start\nalong with the instance name and the\nzone and so now if i go over to my\nnavigation menu and go over to compute\nengine and drill down on the instance if\ni scroll down to the bottom\ni'll be able to see that my new service\naccount has been added\nand so this is a great demonstration for\nwhen you want to add different service\naccounts for your different applications\non different instances or even on\ndifferent resources and so that's pretty\nmuch all i wanted to cover in this\ndemonstration so you can now mark this\nlesson as complete and let's move on to\nthe next one\nwelcome back\nin this lesson i'm going to dive into\ncloud identity google's identity as a\nservice offering for google cloud that\nmaximizes end user efficiency protect\ncompany data\nand so much more\nnow cloud identity as i said before is\nan identity as a service solution that\ncentrally manages users and groups this\nwould be the sole system for\nauthentication and that provides a\nsingle sign-on experience for all\nemployees of an organization to be used\nfor all your internal and external\napplications cloud identity also gives\nyou more control over the accounts that\nare used in your organization for\nexample if developers in your\norganization use personal accounts such\nas gmail accounts those accounts are\noutside of your control\nso when you adopt cloud identity you can\nmanage access and compliance across all\nthe users in your domain now when you\nadopt cloud identity you create a cloud\nidentity account for each of your users\nand groups you can then use iam to\nmanage access to google cloud resources\nfor each cloud identity account and you\ncan also configure cloud identity to\nfederate identities between google and\nother identity providers such as active\ndirectory and azure active directory and\ni'll be getting more into that a little\nbit later\nso now when it comes to cloud identity\nit gives you so much more than just user\nand group management it provides a slew\nof features such as device management\nsecurity\nsingle sign-on\nreporting\nand directory management\nand i will be diving deeper into each\none of these features of cloud identity\nnow starting with device management\nthis lets people in any organization\naccess their work accounts from mobile\ndevices while keeping the organization's\ndata more secure in today's world\nemployees want to access business\napplications from wherever they are\nwhether at home at work\nor even traveling\nand many even want to use their own\ndevices which is also known as bring\nyour own device or byod for short using\nmobile device management there are\nseveral ways that you can provide the\nbusiness applications employees need\non their personal devices while\nimplementing policies that keep the\ncorporate data safe you can create a\nwhite list of approved applications\nwhere users can access corporate data\nsecurely through those applications\nyou can enforce work profiles on android\ndevices and requiring managed\napplications on ios devices policies can\nalso be pushed out on these devices to\nprotect corporate data and identities as\nwell as keeping inventory of devices\nwith corporate data present then when\nthese devices are either no longer being\nused for corporate use or stolen the\ndevice can then be wiped of all its\ncorporate data device management also\ngives organizations the power to enforce\npasscodes\nas well as auditing now moving into the\nsecurity component of cloud identity\nthis is where two-step verification\nsteps in now as explained earlier\ntwo-step verification or to sv\nis a security feature that requires\nusers to verify their identity through\nsomething they know such as a password\nplus something they have such as a\nphysical key or access code and this can\nbe anything from security keys to google\nprompt\nthe authenticator app and backup codes\nso cloud identity helps by applying\nsecurity best practices along with being\nable to deploy\ntwo-step verification for the whole\ncompany along with enforcement controls\nand can also manage passwords to make\nsure they are meeting the enforced\npassword requirements automatically so\nsingle sign-on is where users can access\nmany applications\nwithout having to enter their username\nand password for each application single\nsign-on also known as sso can provide a\nsingle point of authentication through\nan identity provider also known as idp\nfor short you can set up sso using\ngoogle as an identity provider to access\na slew of third-party applications\nas well as any on-premise or custom\nin-house applications you can also\naccess a centralized dashboard for\nconveniently accessing your applications\nso now when lisa logs in with her\nemployee credentials she will then have\naccess to many cloud applications that\nbowtie inc it department has approved\nthrough a catalog of sso applications\nand this will increase both security and\nproductivity for lisa and bowtie inc as\nlisa won't have to enter\na separate username and password for\nseparate applications now getting into\nreporting this covers audit logs for\nlogins groups devices and even tokens\nyou're even able to export these logs to\nbigquery for analysis\nand then you can create reports from\nthese logs that cover security\napplications and activity\nnow moving on to the last component of\ncloud identity is directory management\nand this provides profile information\nfor users in your organization\nemail\nand group addresses and shared external\ncontacts in the directory using google\ncloud directory sync or gcds you can\nsynchronize the data in your google\naccount with your microsoft active\ndirectory or ldap server gcds doesn't\nmigrate any content such as your email\nyour calendar events or your files to\nyour google account gcds is used to\nsynchronize all your users groups and\nshared contacts to match the information\nin your ldap server which could be your\nactive directory server or your azure\nactive directory domain now getting\ndeeper into google cloud directory sync\ni'd like to touch on active directory\nfor just a minute now active directory\nis a very common directory service\ndeveloped by microsoft and is a\ncornerstone in most big corporate\non-premises environments it\nauthenticates and authorizes all users\nand computers in a windows domain type\nnetwork signing and enforcing security\npolicies for all computers and\ninstalling or updating software as\nnecessary now as you can see here in the\ndiagram the active directory forest\ncontains the active directory domain a\nbowtieinc.co\nand the active directory federation\nservices of bowtieinc.co where the\nactive directory forest is the\nhierarchical structure for active\ndirectory the active directory domain is\nresponsible for storing information\nabout members of the domain including\ndevices and users and it verifies their\ncredentials and defines their access\nrights active directory federation\nservices or adfs\nis a single sign-on service where\nfederation is the means of linking a\nperson's electronic identity and\nattributes stored across multiple\ndistinct identity management systems so\nyou can think of it as a subset of sso\nas it relates only to authentication\ntechnologies used for federated identity\ninclude some common terms that you may\nhear me or others in the industry use\nfrom time to time such as saml which\nstands for security assertion markup\nlanguage oauth open id and even security\ntokens such as simple web tokens json\nweb tokens and saml assertions and so\nwhen you have identities already in your\non-premises environment that live in\nactive directory you need a way to tie\nthese identities to the cloud and so\nhere's where you would use google cloud\ndirectory sync to automatically\nprovision users and groups from active\ndirectory to cloud identity or g suite\ngoogle cloud directory sync is a free\ngoogle provided tool that implements the\nsynchronization process and can be run\non google cloud or in your on-premises\nenvironment synchronization is one way\nso that active directory remains the\nsource of truth cloud identity or g\nsuite uses active directory federation\nservices or adfs for single sign-on any\nexisting corporate applications and\nother sas services can continue to use\nyour adfs as an identity provider now i\nknow this may be a review for some who\nare advanced in this topic but for those\nwho aren't this is a very important\ntopic to know as google cloud directory\nsync is a big part of cloud identity and\nis a common way that is used in many\ncorporate environments to sync active\ndirectory or any other ldap server to\ngoogle cloud especially when you want to\nkeep your active directory as the single\nsource of truth and so that's pretty\nmuch all i wanted to cover\nwhen it comes to cloud identity and\ngoogle cloud directory sync so you can\nnow mark this lesson as complete and\nlet's move on to the next one\n[Music]\nwelcome back now i wanted to close out\nthis section by briefly going over the\nbest practices to follow when working\nwith identity and access management so\nthe phrase that was discussed in the\nbeginning of this lesson that will\ncontinuously come up in the exam is the\nprinciple of least privilege and again\nthis is where you would apply only the\nminimal access level required for what\nis needed to be done and this can be\ndone using predefined roles which is a\nmore granular level role than using\nprimitive roles which are very wide\nscoped roles that are applied to the\nwhole project roles should also be\ngranted at the smallest scope necessary\nso for instance when assigning somebody\nthe permissions needed\nfor managing pre-existing compute\ninstances assigning a compute instance\nadmin role might be sufficient for what\nthey need to do as opposed to assigning\nthem the compute instance role that has\nfull control of all compute engine\ninstance resources now when it comes to\nchild resources they cannot restrict\naccess granted on its parent\nso always remember to check the policy\ngranted on every resource and make sure\nyou understand the hierarchical\ninheritance you also want to make sure\nthat you restrict access to members\nabilities to create and manage service\naccounts\nas users who are granted the service\naccount actor role for a service account\ncan access all the resources for which\nthe service account has access and\ngranting someone with the owner role\nshould be used with caution as they will\nhave access to modify almost all\nresources\nproject-wide including iam policies and\nbilling granting an editor role might be\nmore sufficient for the needs of most\nwhen using primitive roles\nnow when dealing with resource hierarchy\nto make it easy on how to structure your\nenvironment\nyou should look at mirroring your google\ncloud resource hierarchy structure to\nyour organizational structure in other\nwords the google cloud resource\nhierarchy should reflect how your\ncompany is organized you should also use\nprojects to group resources that share\nthe same trust boundary as well as\nsetting policies at the organization\nlevel and at the project level rather\nthan at the resource level now going\nback to what we discussed earlier about\nthe principle of least privilege\nyou should use this guideline to grant\niam roles that is\nonly give the least amount of access\nnecessary to your resources and when\ngranting roles across multiple projects\nit is recommended to grant them at the\nfolder level instead of at the project\nlevel\nnow diving back into service accounts a\nseparate trust boundary should always be\napplied for any given application in\nother words create a new service account\nwhen multiple components are involved in\nyour application you also want to make\nsure that you don't delete any service\naccounts that are in use by running\ninstances as your application is likely\nto fail\nso you will want to schedule this during\nplan down time to avoid any outages now\nearlier on in this section we discussed\nservice account keys and how they\ninteract with google cloud and that is\nthe main authentication mechanism used\nfor keys so you want to make sure that\nany user managed keys are rotated\nperiodically to avoid being compromised\nyou can rotate a key by creating a new\nkey switching applications to use the\nnew key and then deleting the old key\nbut be sure to create the new key first\nbefore deleting the old one as this will\nresult in parts or even your entire\napplication failing and also when\nworking with service account keys it's\nalways good practice to name your\nservice keys and this will reflect your\nuse for those keys and permissions for\nthose keys so you know what they are\nused for when you're looking at them now\nwhen you are giving access to service\naccounts you want to make sure that only\nthose who truly need access are the ones\nthat have it\nothers in your environment should be\nrestricted to avoid any misuse now when\nit comes to keeping your service account\nkeys safe i can't stress this enough you\nnever want to check in these keys source\ncode or leave them in your downloads\ndirectory as this is a prime way of not\nonly getting your keys compromised but\ncompromising your entire environment to\nbe accessed publicly\nnow we touched a bit on auditing but we\nhaven't really gone into it in detail\nand we'll be going into it later on in\nthe course but touching on best\npractices\nyou want to be sure to check your cloud\naudit logs regularly and audit all i am\npolicy changes whenever you edit any iam\npolicies a log is generated that records\nthat change and so you always want to\nperiodically check these logs to make\nsure that there are no changes that are\nout of your security scope you also want\nto check to see\nwho has editing permissions on these iam\npolicies and make sure that those who\nhold them have the rights to do so point\nbeing is that you want to restrict who\nhas the ability to edit policies and\nonce these audit logs have been\ngenerated you want to export them to\ncloud storage so that you're able to\nstore them for long term retention as\nthese logs are typically held for weeks\nand not years getting back to service\naccount keys\nservice account key access should be\nperiodically audited for viewing of any\nmisuse or unauthorized access and lastly\naudit logs should also be restricted to\nonly those who need access and others\nshould have no permissions to view them\nand this can be done by adding a role to\nbe able to view these logs now when\ntouching on policy management you want\nto grant access to all projects in your\norganization by using an organization\nlevel policy you also want to grant\nroles to a google group instead of\nindividual users as it is easier to add\nor remove members from a google group\ninstead of updating an im policy and\nfinally when you need to grant multiple\nroles to a task you should create a\ngoogle group as it is a lot easier to\ngrant the roles to that group and then\nadd the users to that group as opposed\nto adding roles to each individual user\nand so that's all i wanted to cover on\nthis short yet very important lesson on\nbest practices when it comes to iam now\ni know this is not the most exciting\ntopic but will become extremely\nnecessary when you are dealing with\nmanaging users groups and policies in\nenvironments that require you to use iam\nsecurely and so please keep this in mind\nwhenever you are working in any\nenvironment as it will help you grant\nthe proper permissions when it comes to\nthese different topics so now i highly\nrecommend that you take a break grab a\ntea or coffee before moving on into the\nnext section and so for now you can mark\nthis lesson as complete and whenever\nyou're ready please join me in the next\nsection\n[Music]\nwelcome back\nnow i wanted to make this as easy as\npossible for those students who do not\nhave a background in networking or any\nnetworking knowledge in general which is\nwhy i wanted to add this quick\nnetworking refresher to kick off the\nnetworking section of this course so\nwith that being said let's dive in so\nbefore the internet computers were\nstandalone and didn't have the\ncapabilities to send emails\ntransfer files or share any information\nfast forward some time\npeople started to connect their\ncomputers together to share and be able\nto do the things that modern networks\ncan do today part of being in this\nnetwork is being able to identify each\ncomputer to know where to send and\nreceive files\nthis problem was solved by using an\naddress to identify each computer on the\nnetwork like humans use a street address\nto identify where they live\nso that mail and packages can be\ndelivered to them an ip address is used\nto identify a computer or device on any\nnetwork so communication between\nmachines was done by the use of an ip\naddress\na numerical label assigned to each\ndevice connected to a computer network\nthat uses the internet protocol for\ncommunication also known as ip for short\nso for this system to work a\ncommunication system was put in place\nthat defined how the network would\nfunction\nthis system was put together as a\nconsistent model of protocol layers\ndefining interoperability\nbetween network devices and software in\nlayers\nto standardize how different protocols\nwould communicate in this stack this\nstack is referred to as the open systems\ninterconnection model or you may hear\nmany refer to it as the seven layer osi\nmodel now this is not a deep dive\nnetworking course but i did feel the\nneed to cover that which is necessary\nfor the understanding of the elements\ntaught in this course\nfor those wanting to learn more about\nthe osi model and the layers within it\nplease check out the links that i have\nincluded in the lesson text below\nso for this lesson and the next i will\nbe covering the specific layers with its\nprotocols that are highlighted here and\nwill help you understand the networking\nconcepts in this course with a bit\nbetter clarity\nso i'll be covering a layer 3 being the\nnetwork layer layer 4 being the\ntransport layer and layer 7 being the\napplication layer so first up i will be\ncovering layer 3 which is the networking\nlayer along with the internet protocol\nnow there are two versions of the\ninternet protocol and are managed\nglobally by the regional internet\nregistries also known as the rir the\nfirst one which is ipv4\nis the original version of the internet\nprotocol that first came on the scene in\n1981 the second version is ipv6 which is\na newer version designed in 2017 to deal\nwith the problem of ipv4 address\nexhaustion meaning that the amount of\nusable ips were slowly being used up\nand i will be covering both versions of\nthe internet protocol in a little bit of\ndepth so let's first dive into ipv\nversion 4. so ipv4 can be read in a\nhuman readable notation represented in\ndotted decimal notation consisting of\nfour numbers\neach ranging from 0 to 255 separated by\ndots each part between the dots\nrepresents a group of 8 bits also known\nas an octet a valid range for an ip\naddress starts from 0.0.0.0\nand ends in 255.255.255.255.\nand this would give you a total number\nof over 4.2 billion ip addresses now\nthis range was viewed as extremely large\nback then until the number of ip\naddresses available were quickly\ndwindling due to the many ipconnected\ndevices that we have today\nand this is when a new addressing\narchitecture was introduced called\nclassful addressing where the address\nwas split into smaller ranges and this\nwas originally assigned to you when you\nneeded an ip address by one of the\nregistries noted before so for any given\nip address they're typically made of two\nseparate components the first part of\nthe address is used to identify the\nnetwork that the address is a part of\nthe part that comes afterwards is used\nto specify a specific host within that\nnetwork now the first part was assigned\nto you and your business by the\nregistries\nand the second part was for you to do it\nas you'd like and so these ip addresses\nwere assigned from the smaller ranges\nexplained earlier called classes the\nfirst range of classes is class a\nand it started at 0.0.0.0\nand ended at 127.255\nand this would give a total number of\nover 2.1 billion addresses with 128\ndifferent networks class a ip addresses\ncan support over 16 million hosts per\nnetwork and those who were assigned\naddresses in this class\nhad a fixed value of the first octet the\nsecond third and fourth octet was free\nfor the business to assign as they\nchoose class a ip addresses were to be\nused by huge networks like those\ndeployed by internet service providers\nand so when ips started to dwindle many\ncompanies return these class a network\nblocks back to the registries to assist\nwith extending addressing capacity and\nso the next range is class b and this is\nhalf the size of the class a network the\nclass b network range started at one at\n128.0.0.0\nand end it at 191.255.255.255\nand carries a total number of over 1\nbillion ip addresses with over 16 000\nnetworks the fixed value in this class\nis of the first and second octet the\nthird and fourth octet can be done with\nas you like ip addresses in this class\nwere to be used for medium and large\nsize networks in enterprises and\norganizations the next range is class c\nand this is half the size of the class b\nnetwork the class c network range starts\nat 192\nand ends at 223.255.255.255\nand carries a total of over half a\nbillion addresses with over two million\nnetworks and can support up to\n256 hosts the fixed value of this class\nis the first second and third octet and\nthe fourth can be done with as you like\nip addresses in this class\nwere the most common class and were to\nbe used in small business and home\nnetworks now there's a couple more\nclasses that were not commonly used\ncalled class d and class e\nand this is beyond the scope of this\ncourse so we won't be discussing this\nand so this was the way that was used to\nassign public ip addresses to devices on\nthe internet and allowed communication\nbetween devices now the problem with\nclassful addressing was that with\nbusinesses that needed larger address\nblocks than a class c network provided\nthey received a class b block which in\nmost cases was much larger than required\nand the same thing happened with\nrequiring more ips than class b\nand getting a class a network block this\nproblem introduced a lot of wasted ips\nas there was no real middle ground and\nso this was a way to address any\npublicly routable ips now there were\ncertain ranges that were allocated for\nprivate use and were designed to be used\nin private networks whether on-premises\nor in cloud and again they are not\ndesigned for public use and also didn't\nhave the need to communicate over the\npublic internet and so these private ip\naddress spaces were standardized using\nthe rfc standard 1918\nand again these ip addresses are\ndesigned for private use and can be used\nanywhere you like as long as they are\nstill kept private chances are a network\nthat you've come across whether it be a\ncloud provider your home network or\npublic wi-fi will use one of these\nclasses to define their network and\nthese are split into three ranges\nfirst one being single class a with\n10.0.0\nending in 10.255.255.255.\nthe class b range\nranging from 172.16.0.0\nto\n172.31 dot\nand lastly class c which was ranging\nfrom 192.168.0.0\nto 192.168.255.255.\nnow for those networks that use these\nprivate ips over the public internet the\nprocess they would use is a process\ncalled network address translation\nor nat for short\nand i will be covering this in a\ndifferent lesson later on in the section\nthis method of classful addressing has\nbeen replaced with something a bit more\nefficient where network blocks can be\ndefined more granularly and was done due\nto the internet running out of ipv4\naddresses as we needed to allocate these\nips more efficiently now this method is\ncalled classless inter domain routing or\ncider for short now with cider based\nnetworks you aren't limited to only\nthese three classes of networks class a\nb and c have been removed for something\nmore efficient which will allow you to\ncreate networks in any one of those\nranges cider ranges are represented by\nits starting ip address called a network\naddress\nfollowed by what is called a prefix\nwhich is a slash and then a number this\nslash number represents the size of the\nnetwork the bigger the number the\nsmaller the network and the smaller the\nnumber the bigger the network given the\nexample here\n192.168.0.0 is the network address\nand the prefix is a slash 16. now at\nthis high level it is not necessary to\nunderstand the math behind this but i\nwill include a link in the lesson text\nfor those of you who are interested in\nlearning more about it all you need to\nkeep in mind is as i said before\nthe bigger the prefix number the smaller\nthe network and the smaller the prefix\nnumber the bigger the network so just as\nan example the size of this slash 16\nnetwork is represented here by this\ncircle its ip range is 192.168.0.0\nending in 192.168.255.255.\nand once you understand the math you\nwill be able to tell that a slash 16\nrange means that the network is the\nfixed value in the first and second\noctet the hosts on the network or the\nrange are the values of anything in the\nthird or fourth octets so this network\nin total will provide us with 65\n536\nip addresses now let's say you decided\nto create a large network such as this\nand you wanted to allocate part of it to\nanother part of your business you can\nsimply do so by splitting it in two\nand be left with two slash 17 networks\nso instead of one slash 16 network you\nwill now have 2 17 networks and each\nnetwork will be assigned 32\n768 ip addresses so just to break it\ndown the previous network which was\n192.16\nforward slash 16 with the first two\noctets being the network which is\n192.168\nit leaves the third and fourth octet to\ndistribute as you like and these third\nand fourth octets\nare what you're having to create these\ntwo networks so looking at the blue half\nthe address range will start at 0.0 and\nwill end at 127.255.\nthe green half will start halfway\nthrough the slash 16 network which will\nbe\n128.0 and end at 255.255.\nso now what if i was looking to break\nthis network down even further and break\nit into four networks well using cider\nranges this makes things fairly easy as\ni can have it again and as shown here i\nwould split the two slash 17 networks to\ncreate four slash 18 networks so if i\ntook the blue half circle and split it\ninto two and then splitting the green\nhalf circle into\nthis would leave me with four slash 18\nnetworks as seen here the blue quarter\nwould start from 192.168.0.0\nending with the last two octets of\n63.255\nand the red quarter which starts from\nwhere the blue left off\nstarting at the last two octets of 64.0\nand ending in 127.255.\nthe green quarter again starting off\nwith the previously defined 128.0\nnetwork which is where the red quarter\nleft off and ending with the last two\noctets being\n191.255 and lastly the yellow quarter\nstarting off from where the green\nquarter left off at 192.0 with the last\ntwo octets ending with\n255.255 and so this would leave us with\nfour smaller slash 18 networks broken\ndown from the previous two\n17 networks with each of these networks\nconsisting of 16\n384 ip addresses and we can continue\nthis process continuously having\nnetworks and breaking them down into\nsmaller networks this process of\ndividing each network into two smaller\nnetworks is known as subnetting and each\ntime you subnet a network and create two\nsmaller networks the number in the\nprefix will increase and so i know this\nis already a lot to take in so this\nwould be a perfect time for you to grab\na coffee or a tea and i will be ending\npart one here and part two will be\ncontinuing immediately after part one so\nyou can now mark this lesson as complete\nand i'll see you in the next one for\npart two\n[Music]\nwelcome back and in this lesson i'm\ngoing to be covering the second part of\nthe networking refresher now part two of\nthis lesson is starting immediately from\nthe end of part one so with that being\nsaid let's dive in\nnow i know this network refresher has\nbeen filled with a ton of numbers\nwith an underlying current of math but i\nwanted you to focus on the why so that\nthings will make sense later i wanted to\nintroduce the hard stuff first so that\nover the length of this course you will\nbe able to digest this information\nand understand where this fits into\nwhen discussing the different network\nparts of google cloud this will also\nhelp you immensely in the real world as\nwell as the exam when configuring\nnetworks and knowing how to do the job\nof an engineer\nso getting right into it i wanted to\njust do a quick review on classless\ninter-domain routing or cider so as\ndiscussed in the first refresher an ipv4\naddress is referenced in dotted decimal\nnotation alongside the slash 16 is the\nprefix and defines how large the network\nis and so before i move on i wanted to\ngive you some references that i found\nhelpful in order to determine the size\nof a network and so here i have\nreferenced three of the most common\nprefixes\nthat i continuously run into that i\nthink would be an extremely helpful\nreference for you so if you look at the\nfirst i p address\n192.168.0.0\nwith slash 8 as the prefix slash 8 would\nfall under a class a network 192 being\nthe first octet\nas well as being the network part of the\naddress would be fixed and so the host\npart of it would be anything after that\nso the address could be 192 dot anything\nand this cider range would give you over\n16 million ip addresses the second most\ncommon network that i see is a slash 16\nnetwork and this would make this ip fall\nunder a class b network making the first\ntwo octets fixed and being the network\npart meaning that anything after 192.168\nwould be the host part meaning that the\naddress could be\n192.168.anything and this would give you\n65536 ip addresses and so for the third\nip address which is probably the most\ncommon one that i see\nis a slash 24 network which falls under\na class c network meaning that the first\nthree octets are fixed and the fourth\noctet could be anything from zero to two\nfive five and this would give you\n256 ip addresses and another common one\nwhich is the smallest that you will see\nis a slash 32 prefix and this is one\nthat i use constantly for white listing\nmy ip address and because a slash 32 is\none ip address this is a good one to\nknow when you are configuring vpn for\nyourself or you're whitelisting your ip\naddress from home or work and for the\nlast reference as well as being the\nbiggest network is the ip address of\n0.0.0.1\nforward slash 0 which covers all ip\naddresses and you will see this commonly\nused for the internet gateway in any\ncloud environment and so these are some\ncommon prefixes that come up very\nfrequently and so i hope this reference\nwill help you now moving back to the osi\nmodel i've covered ipv4 in the network\nlayer and so now it's time to discuss\nipv6 now as i noted earlier\nipv4 notation is called dotted decimal\nand each number between the dots is an\noctet with a value of 0 to 255. now\nunderneath it all each octet is made up\nof an 8-bit value and having four\nnumbers in an ip address that would make\nit a 32-bit value ipv6 is a much longer\nvalue and is represented in hexadecimal\nand each grouping is two octets which is\n16 bits and is often referred to as a\nhextet now as these addresses are very\nlong as you can see you're able to\nabbreviate them by removing redundant\nzeros so this example shown here is the\nsame address as the one above it so if\nthere is a sequence of zeros you can\nsimply replace them with one zero so in\nthis address each grouping of four zeros\ncan be represented by one zero and if\nyou have multiple groups of zeros in one\naddress\nyou can remove them all and replace them\nwith double colons so each of these ipv6\naddresses that you see here are exactly\nthe same now each ipv6 address is 128\nbits long and is represented in a\nsimilar way to\nipv4 starting with the network address\nand ending with the prefix each hextet\nis 16 bits and the prefix number is the\nnumber of bits that represent the\nnetwork with this example\nslash 64 refers to the network address\nunderlined in green which is 2001\ncolon de3 each hextet is 16 bits and the\nprefix is 64. so that's four groups of\n16 and so this is how we know which part\nis the network part of the address and\nwhich is the host part of the address\nagain notice the double colon here and\nas i explained previously any unneeded\nzeros can be replaced by a double colon\nand so this address would represent a\nslew of zeros and so adding in all the\nzeros the ipv6 starting network address\nwould look like this now because the\nnetwork address starts at 2001 colon de3\nwith another two hextets of zeros as the\nnetwork address that was determined by\nthe slash 64 prefix which is four\nhextets it means a network finishes at\nthat network address followed by all fs\nand so that's the process of how we can\ndetermine the start and end of every\nipv6 network now as i've shown you\nbefore with all ipv4 addresses they are\nrepresented with a 0.0.0.0.0\nand because ipv6 addresses are\nrepresented by the same network address\nand prefix we can represent ipv6\naddresses as double colon slash zero and\nyou will see this frequently when using\nipv6 and so i know this is really\ncomplicated but i just wanted to give\nyou the exposure of ipv6 i don't expect\nyou to understand this right away\nin the end it should become a lot\nclearer as we go through the course and\ni promise you it will become a lot\neasier i had a hard time myself trying\nto understand this network concept\nbut after a few days i was able to\ndigest it and as i went back and did\nsome practice it started to make a lot\nmore sense to me and so i know as we\nmove along with the course\nthat it will start making sense to you\nas well so now that we've discussed\nlayer 3 in the osi model i wanted to get\ninto layer 4 which is the transport\nlayer with ip packets discussing tcp and\nudp and so in its simplest form a packet\nis the basic unit of information in\nnetwork transmission so most networks\nuse tcpip as the network protocol or set\nof rules for communication between\ndevices and the rules of tcpip require\ninformation to be split into packets\nthat contain a segment of data to be\ntransferred along with the protocol and\nits port number the originating address\nand the address of where the data is to\nbe sent now udp is another protocol that\nis sent with ip and is used in specific\napplications but mostly in this course i\nwill be referring to tcpip and so as you\ncan see in this diagram of the ip packet\nthis is a basic datagram of what a\npacket would look like again with this\nsource and destination ip address\nthe protocol port number and the data\nitself now this is mainly just to give\nyou a high level understanding of tcpip\nand udpip and is not a deep dive into\nnetworking now moving on to layer 7 of\nthe osi model\nthis layer is used by networked\napplications or applications that use\nthe internet and so there are many\nprotocols that fall under this layer now\nthese applications do not reside in this\nlayer but use the protocols in this\nlayer to function so the application\nlayer provides services for networked\napplications with the help of protocols\nto perform user activities and you will\nsee many of these protocols being\naddressed as we go through this course\nthrough resources in google cloud like\nhttp or https for load balancing dns\nthat uses udp on port 53 and ssh on port\n22 for logging into hosts and so these\nare just a few of the many scenarios\nwhere layer 7 and the protocols that\nreside in that layer come up in this\ncourse and we will be diving into many\nmore in the lessons to come and so that\nabout wraps up this networking refresher\nlesson\nand don't worry like i said before i'm\nnot expecting you to pick things up in\nthis first go\nthings will start to make more sense as\nwe go through the course and we start\nputting these networking concepts into\npractice also feel free to go back and\nreview the last couple of lessons again\nif things didn't make sense to you the\nfirst time or if you come across some\nnetworking challenges in future lessons\nand so that's everything i wanted to\ncover so you can now mark this lesson as\ncomplete and let's move on to the next\none\n[Music]\nwelcome back in this lesson we will be\ndiscussing the core networking service\nof gcp virtual private cloud or vpc for\nshort it is the service that allows you\nto create networks inside google cloud\nwith both private and public\nconnectivity options both for in-cloud\ndeployments and on-premise hybrid cloud\ndeployments this is a service that you\nmust know well as there are many\nquestions that come up on the exam with\nregards to vpcs so with that being said\nlet's dive in now vpcs are what manages\nthe networking functionality for your\ngoogle cloud resources this is a\nsoftware defined network and is not\nconfined to the physical limitations of\nnetworking in a data center this has\nbeen abstracted for you vpc networks\nincluding their associated routes and\nfirewall rules are global resources they\nare not associated with any particular\nregion or zone they are global resources\nand span all available regions across\nthe globe as explained earlier vpcs are\nalso encapsulated within projects\nprojects are the logical container where\nyour vpcs live\nnow these vpcs do not have ip ranges but\nare simply a construct of all of the\nindividual ip addresses and services\nwithin that network the ip addresses and\nranges are defined within the\nsubnetworks that i will be diving into a\nbit later as well\ntraffic to and from instances can be\ncontrolled with network firewall rules\nrules are implemented on the vms\nthemselves so traffic can be controlled\nand logged as it leaves or arrives at a\nvm\nnow resources within a vpc network\ncan communicate with one another by\nusing internal or private ipv4 addresses\nand these are subject to applicable\nnetwork firewall rules these resources\nmust be in the same vpc for\ncommunication\notherwise they must traverse the public\ninternet with an assigned public ip or\nuse a vpc peering connection or\nestablish a vpn connection another\nimportant thing to note is that vpc\nnetworks only support ipv4 unicast\ntraffic they do not support ipv6 traffic\nwithin the network vms in the vpc\nnetwork can only send to ipv4\ndestinations\nand only receive traffic from ipv4\nsources however it is possible to create\nan ipv6 address for a global load\nbalancer now unless you choose to\ndisable it each new project starts with\na default network in a vpc the default\nnetwork is an auto mode vpc network with\npredefined subnets a subnet is allocated\nfor each region with non-overlapping\ncider blocks also each default network\nhas a default firewall rule\nthese rules are configured to allow\ningress traffic\nfor icmp\nrdp and ssh traffic from anywhere\nas well as ingress traffic from within\nthe default network for all protocols\nand ports and so there are two different\ntypes of vpc networks\nauto mode or custom mode an auto mode\nnetwork also has one subnet per region\nthe default network is actually an auto\nmode network as explained earlier now\nthese automatically created subnets use\na set of predefined ip ranges with a\nslash 20 cider block that can be\nexpanded to a slash 16 cider block all\nof these subnets\nfit within the default\n10.128.0.0 ford slash 9 cider block and\nas new gcp regions become available\nnew subnets in those regions are\nautomatically added to auto mode\nnetworks using an ip range on that block\nnow a custom owned network does not\nautomatically create subnets\nthis type of network provides you with\ncomplete control over its subnets and ip\nranges as well as another note an auto\nmode network can be converted to a\ncustom mode network to gain more control\nbut please be aware this conversion is\none way meaning that custom networks\ncannot be changed to auto mode networks\nso when deciding on the different types\nof networks you want to use\nmake sure that you review all of your\nconsiderations now custom mode vpc\nnetworks are more flexible and better\nsuited to production and google\nrecommends that you use custom mode vpc\nnetworks in production so here is an\nexample of a project that contains three\nnetworks all of these networks span\nmultiple regions across the globe as you\ncan see here on the right hand side and\neach network contains separate vms and\nso this diagram is to demonstrate that\nvms that are in the same network or vpc\ncan communicate privately even when\nplaced in separate regions because vms\nin network a are in the same network\nthey can communicate over internal ip\naddresses even though they're in\ndifferent regions essentially your vms\ncan communicate even if they exist in\ndifferent locations across the globe as\nlong as they are within the same network\nthe vms in network b and network c\nare not in the same network therefore by\ndefault these vms must communicate over\nexternal ips even though they're in the\nsame region as no internal ip\ncommunication is allowed between\nnetworks unless you set up vpc network\npeering or use a vpn connection now i\nwanted to bring back the focus to the\ndefault vpc for just a minute unless you\ncreate an organizational policy that\nprohibits it new projects will always\nstart with a default network that has\none subnet in each region and again this\nis an auto mode vpc network in this\nparticular example i am showing a\ndefault vpc with seven of its default\nregions displayed along with their ip\nranges and again i want to stress that\nvpc networks along with their associated\nroutes and firewall rules are global\nresources they are not associated with\nany particular region or zone so the\nsubnets within them are regional and so\nwhen an auto mode vpc network is created\none subnet from each region is\nautomatically created within it these\nautomatically created subnets use a set\nof predefined ip ranges that fit within\nthe cider block that you see here\nof 10.128.0.049\nand as new google cloud regions become\navailable\nnew subnets in those regions are\nautomatically added to auto mode vpc\nnetworks\nby using an ip range from that block in\naddition to the automatically created\nsubnets you can add more subnets\nmanually to auto mode vpc networks in\nregions that you choose by using ip\nranges outside of 10.128.0.049\nnow if you're using a default vbc or\nhave already created an auto mode vpc\nyou can switch the vpc network from auto\nmode to custom mode and this is a\none-way conversion only as custom mode\nvpc networks cannot be changed to auto\nmode vpc networks now bringing this\ntheory into practice with regards to the\ndefault vpc\ni wanted to take the time to do a short\ndemo so whenever you're ready join me in\nthe console\nand so here we are back in the console\nand if i go here in the top right hand\ncorner i am logged in as tony bowties at\ngmail.com and in the top drop down\nproject menu i'm logged in under project\ntony and because this demo is geared\naround the default vpc i want to\nnavigate to vpc networks so i'm going to\ngo over here to the top left hand corner\nto the navigation menu\nand i'm going to click on it and scroll\ndown\nto vpc network under networking\nand so as you can see here in the left\nhand menu there are a bunch of different\noptions that i can choose from but i\nwon't be touching on any of these topics\nas i have other lessons that will deep\ndive into those topics so in this demo\ni'd like to strictly touch on the\ndefault vpc and as you can see in\nproject tony it has created a default\nvpc for me with a one subnet in every\nregion having its own ip address range\nand so just as a reminder whenever you\ncreate a new project a default vpc will\nbe automatically created for you and\nwhen these subnets were created each of\nthem have a route out to the public\ninternet and so the internet gateway is\nlisted here its corresponding firewall\nrules along with global dynamic routing\nand flow logs are turned off and again i\nwill be getting deeper into routing and\nflow logs in later lessons in the\nsection now earlier i had pointed out\nthat an auto mode vpc can be converted\nto a custom vpc and it's as simple as\nclicking this button but we don't want\nto do that just yet and what i'd like to\ndo is drill down into the default vbc\nand show you all the different options\nas you can see here the dns api has not\nbeen enabled and so for most of you a\ngood idea would be to enable it and so\ni'm going to go ahead and do that now as\nwell you can see here that i can make\nadjustments to each of the different\nsubnets or i can change the\nconfiguration of the vpc itself so if i\nclick on this edit button here at the\ntop i'm able to change the subnet\ncreation mode along with the dynamic\nrouting mode which i will get into in a\nlater lesson and the same thing with the\ndns server policy and so to make this\ndemo a little bit more exciting i want\nto show you the process on how to expand\na subnet so i'm going to go into us\ncentral one i'm going to drill down here\nand here's all the configuration\nsettings for the default subnet in the\nus central one region and so for me to\nedit this subnet i can simply click on\nthe edit button up here at the top and\nso right below the ip address range i am\nprompted with a note saying that the ip\nranges must be unique and\nnon-overlapping as we stated before and\nthis is a very important point to know\nwhen you're architecting any vpcs or its\ncorresponding sub networks and so i'm\ngoing to go ahead and change the subnet\nfrom a cider range of 20\nand i'm going to change it to 16. i'm\nnot going to add any secondary ip ranges\ni'm going to leave private google access\noff and so i'm going to leave everything\nelse as is\nand simply click on save and so once\nthis has completed i'll be able to see\nthat my subnet range will go from a\nslash 20 to a slash 16. and so here you\ncan see the ip address range has now\nchanged to a slash 16. if i go back to\nthe main page of the vpc network i can\nsee that the ip address range is\ndifferent from all the other ones now\nyou're probably asking why can't i just\nchange the ip address range on all the\nsubnets at once and so even though i'd\nlove to do that\nunfortunately google does not give you\nthe option each subnet must be\nconfigured one by one to change the ipa\naddress range now i wanted to quickly\njump into the default firewall rules and\nas discussed earlier the rules for\nincoming ssh\nrdp\nand icmp have been pre-populated\nalong with a default rule that allows\nincoming connections for all protocols\nand ports\namong instances within the same network\nso when it comes to routes with regards\nto the vpc network the only one i really\nwanted to touch on is the default route\nto the internet and so without this\nroute any of the subnets in this vpc\nwouldn't have access to route traffic to\nthe internet and so when the default vpc\nis created the default internet gateway\nis also created and so now going back to\nthe main page of the vpc network i\nwanted to go through the process\nof making the ip address range bigger\nbut doing it through the command line\nand so i'm going to go up to the right\nhand corner and open up cloud shell i'm\ngoing to make this a little bit bigger\nand so for this demo i'm going to\nincrease the address range for the\nsubnet in us west one from a slash 20 to\na slash 16 and so i'm going to paste in\nthe command\nwhich is gcloud compute networks\nsubnets expand\nip dash range and then the name of the\nnetwork which is default as well as the\nregion and i'm going to do uswest1 along\nwith the prefix length which is going to\nbe 16. so i'm going to hit enter\ni've been prompted to make sure that\nthis is what i want to do and so yes i\ndo want to continue so i'm going to type\nin y for yes and hit enter and so within\na few seconds i should get some\nconfirmation and as expected my subnet\nhas been updated and so because i like\nto verify everything i'm going to now\nclear the screen and i'm going to paste\nin the command gcloud compute networks\nsubnets describe and then the subnet\nname which is default along with the\nregion which would be uswest1 i'm going\nto click on enter and as you can see\nhere the ipsider range is consistent\nwith what we have changed and if i do a\nquick refresh on the browser\ni'll be able to see that the console has\nreflected the same thing and as expected\nthe ip address range here for us west\none in the console reflects that which\nwe see here in cloud shell and so now to\nend this demo i wanted to quickly show\nyou how i can delete the default vpc and\nrecreate it so all i need to do is to\ndrill into the settings\nand then click on delete vpc network\nright here at the top i'm going to get a\nprompt to ask me if i'm sure and i'm\ngoing to simply click on delete now just\nas a note if you have any resources that\nare in any vpc networks you will not be\nable to delete the vpc you would have to\ndelete the resources first and then\ndelete the vpc afterwards okay and it\nhas been successfully deleted and as you\ncan see there are no local vpc networks\nin this current project and so i want to\ngo ahead and recreate the default vpc so\ni'm going to simply click on create vpc\nnetwork and so here i'm prompted to\nenter in a bunch of information\nfor creating this new vpc network and so\nkeeping with the spirit of default vpcs\ni'm going to name this vpc default\ni'm going to put default in the\ndescription and under subnet creation\nmode i'm going to click on automatic and\nas you can see a prompt came up telling\nme these ip address ranges will be\nassigned to each region in your vpc\nnetwork and i'm able to review the ip\naddress ranges for each region and as\nstated before the ip address ranges for\neach region will always be the same\nevery time i create\nthis default vpc or create a vpc in the\nautomatic subnet creation mode\nnow as a note here under firewall rules\nif i don't select these firewall rules\nnone will actually be created so if\nyou're creating a new default vpc be\nsure to check these off and so i'm going\nto leave everything else as is and i'm\ngoing to simply go to the bottom and\nclick on the create button and within\nabout a minute i should have the new\ndefault vpc created okay and we are back\nin business the default vpc has been\nrecreated with all of these subnets in\nits corresponding regions all the ip\naddress ranges the firewall rules\neverything that we saw earlier in the\ndefault vpc and so that's pretty much\nall i wanted to cover in this demo on\nthe default vpc network along with the\nlesson on vpcs so you can now mark this\nlesson as complete and let's move on to\nthe next\none welcome back and in this lesson i'm\ngoing to be discussing vpc network\nsubnets now the terms subnet and sub\nnetwork are synonymous and are used\ninterchangeably in google cloud as\nyou'll hear me using either one in this\nlesson yet i am referring to the same\nthing now when you create a resource in\ngoogle cloud you choose a network and a\nsubnet and so because a subnet is needed\nbefore creating resources some good\nknowledge behind it is necessary for\nboth building and google cloud as well\nas in the exam so in this lesson i'll be\ncovering subnets at a deeper level with\nall of its features and functionality so\nwith that being said let's dive in\nnow each vpc network consists of one or\nmore useful ip range partitions\ncalled subnets also known in google\ncloud as sub networks each subnet is\nassociated with the region and vpc\nnetworks do not have any ip address\nranges associated with them ip ranges\nare defined for the subnets a network\nmust have at least one subnet before you\ncan use it and as mentioned earlier when\nyou create a project it will create a\ndefault vpc network with subnets in each\nregion automatically auto mode will run\nunder this same functionality now custom\nvpc networks on the other hand start\nwith no subnets giving you full control\nover subnet creation and you can create\nmore than one subnet per region you\ncannot change the name or region of a\nsubnet after you've created it you would\nhave to delete the subnet and replace it\nas long as no resources are using it\nprimary and secondary ranges for subnets\ncannot overlap with any allocated range\nany primary or secondary range of\nanother subnet in the same network\nor any ip ranges of subnets in peered\nnetworks in other words they must be a\nunique valid cider block now when it\ncomes to ip addresses of a subnet google\ncloud vpc has an amazing feature that\nlets you increase the ip space of any\nsubnets without any workload shutdown or\ndowntime as demonstrated earlier in the\nprevious lesson and this gives you the\nflexibility and growth options to meet\nyour needs but unfortunately there are\nsome caveats the new subnet must not\noverlap with other subnets in the same\nvpc network in any region also the new\nsubnets must stay inside the rfc 1918\naddress space the new network range must\nbe larger than the original which means\nthe prefix length must be smaller in\nnumber and once a subnet has been\nexpanded you cannot undo an expansion\nnow auto mode network starts with a\nslash 20 range that can be expanded to a\n16 ip range but not larger you can also\nconvert the auto mode network to a\ncustom mode network to increase the ip\nrange even further and again this is a\none-way conversion\ncustom mode vpc networks cannot be\nchanged to auto mode vpc networks\nnow in any network that is created in\ngoogle cloud\nthere will always be some ip addresses\nthat you will not be able to use and\nthese are reserved for google and so\nevery subnet has four reserved ip\naddresses in its primary ip range and\njust as a note there are no reserved ip\naddresses in the secondary ip ranges and\nthese reserved ips can be looked at as\nthe first two and the last two ip\naddresses in the cider range now the\nfirst address in the primary ip range\nfor the subnet is reserved for the\nnetwork the second address in the\nprimary ip range for the subnet is\nreserved for the default gateway and\nallows you access to the internet the\nsecond to last address in the primary ip\nrange for the subnet is reserved for\ngoogle cloud for potential future use\nand the last address and the ip range\nfor the subnet is for broadcast\nand so that about covers this short yet\nimportant lesson on vpc network subnets\nthese features and functionalities of\nsubnets that have been presented to you\nwill help you make better design\ndecisions that will give you a bit more\nknowledge and flexibility when it comes\nto assigning ipspace within your vpc\nnetworks and so that's all i have to\ncover for this lesson so you can now\nmark this lesson as complete and let's\nmove on to the next one\n[Music]\nwelcome back and in this lesson i'm\ngoing to be going through\nrouting and private google access\nnow although routing doesn't really show\nup in the exam i wanted to give you an\ninside look on how traffic is routed so\nwhen you're building in google cloud\nyou'll know exactly what you will need\nto do if you need to edit these routes\nin any way or if you need to build new\nones to satisfy your particular need now\nprivate google access does pop its head\nin the exam but only at a high level but\ni wanted to get just a bit deeper with\nthe service and get into the data flow\nof when the service is enabled so with\nthat being said let's dive in now google\ncloud routes define the paths that\nnetwork traffic takes from a vm instance\nto other destinations these destinations\ncan be inside your google cloud vpc\nnetwork for example in another vm or\noutside it in a vpc network a route\nconsists of a single destination\nand a single next hop when an instance\nin a vpc network sends a packet google\ncloud delivers the packet to the route's\nnext hop if the packet's destination\naddress is within the route's\ndestination range\nand so all these routes are stored in\nthe routing table for the vpc now for\nthose of you who are not familiar with a\nrouting table in computer networking a\nrouting table is a data table stored in\na router or a network host that lists\nthe routes to particular network\ndestinations and so in this case the vpc\nis responsible for storing the routing\ntable as well each vm instance has a\ncontroller that is kept informed of all\napplicable routes\nfrom the network's routing table each\npacket leaving a vm\nis delivered to the appropriate next hop\nof an applicable route based on a\nrouting order now i wanted to take a\ncouple minutes to go through the\ndifferent routing types that are\navailable on google cloud now in google\ncloud there are two types of routing\nthere is the system generated which\noffers the default and subnet route and\nthen there are the custom routes which\nsupport static routes and dynamic routes\nand so i first wanted to cover system\ngenerated routes in a little bit of\ndepth and so every new network whether\nit be an automatic vpc or a custom vpc\nhas two types of system generated routes\na default route which you can remove or\nreplace and one subnet route for each of\nits subnets now when you create a vpc\nnetwork google cloud creates a system\ngenerated default route and this route\nserves two purposes it defines the path\nout of the vpc network including the\npath to the internet in addition to\nhaving this route instances must meet\nadditional requirements if they need\ninternet access the default route also\nprovides a standard path for private\ngoogle access and if you want to\ncompletely isolate your network from the\ninternet or if you need to replace the\ndefault route with the custom route you\ncan delete the default route now if you\nremove the default route and do not\nreplace it packets destined to ip ranges\nthat are not covered by other routes are\ndropped lastly the system generated\ndefault route has a priority of 1000\nbecause its destination is the broadest\npossible which covers all ip addresses\nin the\n0.0.0.0.0 range google cloud only uses\nit if a route with a more specific\ndestination does not apply to a packet\nand i'll be getting into priorities in\njust a little bit and so now that we've\ncovered the default route i wanted to\nget into the subnet route now subnet\nroutes are system generated routes that\ndefine paths to each subnet in the vpc\nnetwork each subnet has at least one\nsubnet route whose destination matches\nthe primary ip range of the subnet if\nthe subnet has secondary ip ranges\ngoogle cloud creates a subnet route with\na corresponding destination for each\nsecondary range no other route can have\na destination that matches\nor is more specific than the destination\nof a subnet route you can create a\ncustom route that has a broader\ndestination range that contains the\nsubnet route's destination range now\nwhen a subnet is created a corresponding\nsubnet route for the subnet's primary\nand secondary ip range is also created\nauto mode vpc networks create a subnet\nroute for the primary ip ranges of each\nof their automatically created subnets\nyou can delete these subnets but only if\nyou convert the auto mode vpc network to\ncustom mode and you cannot delete a\nsubnet route unless you modify or delete\nthe subnet so when you delete a subnet\nall subnet routes for both primary and\nsecondary ranges are deleted\nautomatically you cannot delete the\nsubnet route for the subnet's primary\nrange in any other way and just as a\nnote when networks are connected by\nusing vpc network peering which i will\nget into a little bit later some subnet\nroutes from one network are imported\ninto the other network and vice versa\nand cannot be removed unless you break\nthe peering relationship and so when you\nbreak the peering relationship all\nimported subnet routes from the other\nnetwork are automatically removed so now\nthat we've covered the system generated\nroutes i wanted to get into custom\nroutes now custom routes are either\nstatic routes that you can create\nmanually or dynamic routes maintained\nautomatically by one or more of your\ncloud routers and these are created on\ntop of the already created system\ngenerated routes destinations for custom\nroutes cannot match or be specific than\nany subnet route in the network now\nstatic routes can use any of the static\nroute next hops and these can be created\nmanually if you use the google cloud\nconsole to create a cloud vpn tunnel\nthat uses policy-based routing or one\nthat is a route based vpn static routes\nfor the remote traffic selectors are\ncreated for you and so just to give you\na little bit more clarity and a little\nbit of context i've included a\nscreenshot here for all the different\nroutes that are available for the next\nhop we have the default internet gateway\nto define a path to external ip\naddresses specify an instance and this\nis where traffic is directed to the\nprimary internal ip address of the vm's\nnetwork interface in the vpc network\nwhere you define the route specify ip\naddress is where you provide an internal\nip address assigned to a google cloud vm\nas a next hop for cloud vpn tunnels that\nuse policy based routing and route-based\nvpns you can direct traffic to the vpn\ntunnel by creating routes whose next\nhops refer to the tunnel by its name and\nregion and just as a note google cloud\nignores routes whose next hops are cloud\nvpn tunnels that are down and lastly for\ninternal tcp and udp low balancing you\ncan use a load balancer's ip address as\na next hop that distributes traffic\namong healthy back-end instances custom\nstatic routes that use this next hop\ncannot be scoped to specific instances\nby network tags and so when creating\nstatic routes you will always be asked\nfor different parameters that are needed\nin order to create this route and so\nhere i've taken a screenshot from the\nconsole to give you a bit more context\nwith regards to the information that's\nneeded so first up is the name and\ndescription\nso these fields identify the route a\nname is required but a description is\noptional and every route in your project\nmust have a unique name next up is the\nnetwork and each route must be\nassociated with exactly one vpc network\nin this case it happens to be the\ndefault network but if you have other\nnetworks available you're able to click\non the drop down arrow and choose a\ndifferent network the destination range\nis a single ipv4 cider block that\ncontains the ip addresses of systems\nthat receive incoming packets and the ip\nrange must be entered as a valid ipv4\ncider block as shown in the example\nbelow the field now if multiple routes\nhave identical destinations priority is\nused to determine which route should be\nused so a lower number would indicate a\nhigher priority for example a route with\na priority value of 100 has a higher\npriority than one with a priority value\nof 200 so the highest route priority\nmeans the smallest possible non-negative\nnumber as well another great example is\nif you look back on your default routes\nall your subnet routes are of a priority\nof zero and the default internet gateway\nis of a priority of 1000 and therefore\nthe subnet routes will take priority\nover the default internet gateway and\nthis is due to the smaller number so\nremember a good rule of thumb is that\nthe lower the number the higher the\npriority the higher the number the lower\nthe priority now to get a little bit\nmore granular you can specify a list of\nnetwork tags so that the route only\napplies to instances that have at least\none of the listed tags and if you don't\nspecify any tags then google cloud\napplies the route to all instances in\nthe network and finally next hop which\nwas shown previously this is dedicated\nto static routes that have next hops\nthat point to the options shown earlier\nso now that i've covered static routes\nin a bit of detail i want to get into\ndynamic routes now dynamic routes are\nmanaged by one or more cloud routers and\nthis allows you to dynamically exchange\nroutes between a vpc network and an\non-premises network with dynamic routes\ntheir destinations always represent ip\nranges outside of your vpc network\nand their next hops are always bgp peer\naddresses a cloud router can manage\ndynamic routes for cloud vpn tunnels\nthat use dynamic routing as well as\ncloud interconnect and don't worry i'll\nbe getting into cloud routers in a bit\nof detail in a later lesson now i wanted\nto take a minute to go through routing\norder and the routing order deals with\npriorities that i touched on a little\nbit earlier now subnet routes are always\nconsidered first because google cloud\nrequires that subnet routes have the\nmost specific destinations matching the\nip address ranges of their respective\nsubnets if no applicable destination is\nfound google cloud drops the packet and\nreplies with a network unreachable error\nsystem generated routes apply to all\ninstances in the vpc network the scope\nof instances to which subnet routes\napply cannot be altered although you can\nreplace the default route and so just as\na note custom static routes apply to all\ninstances or specific instances so if\nthe route doesn't have a network tag the\nroute applies to all instances in the\nnetwork now vpc networks have special\nroutes that are used for certain\nservices and these are referred to as\nspecial return paths in google cloud\nthese routes are defined outside of your\nvpc network in google's production\nnetwork they don't appear in your vpc\nnetwork's routing table you cannot\nremove them or override them or if you\ndelete or replace a default route in\nyour vpc network although you can\ncontrol traffic to and from these\nservices by using firewall rules and the\nservices that are covered are load\nbalancers internet aware proxy or iap as\nwell as cloud dns and so before i end\nthis lesson i wanted to touch on private\ngoogle access now vm instances that only\nhave internal ip addresses can use\nprivate google access and this allows\nthem to reach the external ip addresses\nof google's apis and services the source\nip address of the packet can be the\nprimary internal ip address of the\nnetwork interface or an address in an\nalias ip range that is assigned to the\ninterface if you disable private google\naccess the vm instances can no longer\nreach google apis and services and will\nonly be able to send traffic within the\nvpc network private google access has no\neffect on instances that have\nexternal ip addresses and can still\naccess the internet they don't need any\nspecial configuration to send requests\nto the external ip addresses of google\napis and services you enable private\ngoogle access on a subnet by subnet\nbasis and it's a setting for subnets in\na vpc network and i will be showing you\nthis in an upcoming demo where we'll be\nbuilding our own custom vpc network now\neven though the next hop for the\nrequired routes is called the default\ninternet gateway\nand the ip addresses for google apis and\nservices are external requests to google\napis and services from vms that only\nhold internal ip addresses in subnet 1\nwhere private google access is enabled\nare not sent through the public internet\nthose requests stay within google's\nnetwork as well vms that only have\ninternal ip addresses do not meet the\ninternet access requirements\nfor access to other external ip\naddresses\nbeyond those for google apis and\nservices now touching on this diagram\nhere\nfirewall rules in the vpc network have\nbeen configured to allow internet access\nvm1 can access google apis and services\nincluding cloud storage because its\nnetwork interface is located in subnet 1\nwhich has private google access enabled\nand because this instance only has an\ninternal ip address\nprivate google access applies to this\ninstance now with vm2 it can also access\ngoogle apis and services including cloud\nstorage because it has an external ip\naddress private google access has no\neffect on this instance as it has an\nexternal ip address and private google\naccess has not been enabled on that\nsubnet and because both of these\ninstances are in the same network they\nare still able to communicate with each\nother over an internal subnet route and\nso this is just one way where private\ngoogle access can be applied there are\nsome other options for private access as\nwell you can use private google access\nto connect to google apis and services\nfrom your on-premises network through a\ncloud vpn tunnel or cloud interconnect\nwithout having any external ip addresses\nyou also have the option of using\nprivate google access through a vpc\nnetwork peering connection which is\nknown as private services access and\nfinally the last option available for\nprivate google access is connecting\ndirectly from serverless google services\nthrough an internal vpc connection now i\nknow this has been a lot of theory to\ntake in but i promise it'll become a lot\neasier and concepts will become less\ncomplicated when we start putting this\ninto practice coming up soon in the demo\nof building our own custom vpc and so\nthat's pretty much all i wanted to cover\nwhen it comes to routing and private\ngoogle access so you can now mark this\nlesson as complete and let's move on to\nthe next one\n[Music]\nwelcome back and in this lesson i'm\ngoing to be discussing ip addressing now\nin the network refresher lesson i went\ninto a bit of depth on how i p addresses\nare broken down and used for\ncommunication in computer networks in\nthis lesson i'll be getting into the\navailable types of ip addressing in\ngoogle cloud and how they are used in\neach different scenario please note for\nthe exam a high level overview will be\nneeded to know when it comes to ip\naddressing but the details behind it\nwill give you a better understanding on\nwhen to use each type of ip address so\nwith that being said let's dive in\nnow ip addressing in google cloud holds\nquite a few categories\nand really start by determining whether\nyou are planning for communication\ninternally within your vpc or for\nexternal use to communicate with the\noutside world through the internet once\nyou determine the type of communication\nthat you're looking to apply between\nresources some more decisions need to be\nmade with regards to the other options\nand i will be going through these\noptions in just a sec now in order to\nmake these options a little bit more\ndigestible i wanted to start off with\nthe options available for internal ip\naddresses\nnow internal ip addresses are not\npublicly advertised they are used only\nwithin a network now every vpc network\nor on-premises network has at least one\ninternal ip address range resources with\ninternal ip addresses communicate with\nother resources as if they're all on the\nsame private network now every vm\ninstance can have one primary internal\nip address that is unique to the vpc\nnetwork and you can assign a specific\ninternal ip address when you create a vm\ninstance or you can reserve a static\ninternal ip address for your project and\nassign that address to your resources if\nyou don't specify an address one will be\nautomatically assigned to the vm in\neither case the address must belong to\nthe ip range of the subnet and so if\nyour network is an auto mode vpc network\nthe address comes from the region subnet\nif your network is a custom mode vpc\nnetwork you must specify which subnet\nthe ip address comes from now all\nsubnets have a primary sider range which\nis the range of internal ip addresses\nthat define the subnet each vm instance\ngets its primary internal ip address\nfrom this range you can also allocate\nalias ip ranges from that primary range\nor you can add a secondary range to the\nsubnet and allocate alias ip ranges from\nthe secondary range use of alias ip\nranges does not require secondary subnet\nranges these secondary subnet ranges\nmerely provide an organizational tool\nnow when using ip aliasing you can\nconfigure multiple internal ip addresses\nrepresenting containers or applications\nhosted in a vm without having to define\na separate network interface and you can\nassign vm alias ip ranges from either\nthe subnet's primary or secondary ranges\nwhen alias ip ranges are configured\ngoogle cloud automatically installs vpc\nnetwork routes for primary and alias ip\nranges for the subnet of your primary\nnetwork interface your container\norchestrator or gke does not need to\nspecify vpc network connectivity for\nthese routes and this simplifies routing\ntraffic and managing your containers now\nwhen choosing either an auto mode vpc or\na custom vpc you will have the option to\nchoose either an ephemeral ip or a\nstatic ip now an ephemeral ip address is\nan ip address that doesn't persist\nbeyond the life of the resource for\nexample when you create an instance or\nforwarding rule without specifying an ip\naddress google cloud will automatically\nassign the resource an ephemeral ip\naddress and this ephemeral ip address is\nreleased when you delete the resource\nwhen the ip address is released it is\nfree to eventually be assigned to\nanother resource so is never a great\noption if you depend on this ip to\nremain the same this ephemeral ip\naddress can be automatically assigned\nand will be assigned from the selected\nregion subnet as well if you have\nephemeral ip addresses that are\ncurrently in use\nyou can promote these addresses to\nstatic internal ip addresses so that\nthey remain with your project until you\nactively remove them and just as a note\nbefore you reserve an existing ip\naddress you will need the value of the\nip address that you want to promote now\nreserving a static ip address\nassigns the address to your project\nuntil you explicitly release it this is\nuseful if you are dependent on a\nspecific ip address for a specific\nservice and need to prevent another\nresource from being able to use the same\naddress static addresses are also useful\nif you need to move an ip address from\none google cloud resource to another and\nyou also have the same options when\ncreating an internal load balancer as\nyou do with vm instances and so now that\nwe've covered all the options for\ninternal ip addresses i would like to\nmove on to cover all the available\noptions for external ip addresses now\nyou can assign an external ip address to\nan instance or a forwarding rule if you\nneed to communicate with the internet\nwith resources in another network or\nneed to communicate with a public google\ncloud service sources from outside a\ngoogle cloud vpc network can address a\nspecific resource by the external ip\naddress as long as firewall rules enable\nthe connection and only resources with\nan external ip address can send and\nreceive traffic directly to and from\noutside the network and like internal ip\naddresses external ip addresses have the\noption of choosing from an ephemeral or\nstatic ip address now an ephemeral\nexternal ip address is an ip address\nthat doesn't persist beyond the life of\nthe resource and so follows the same\nrules as ephemeral internal ip addresses\nso when you create an instance or\nforwarding rule without specifying an ip\naddress the resource is automatically\nassigned an ephemeral external ip\naddress and this is something that you\nwill see quite often ephemeral external\nip addresses are released from a\nresource if you delete the resource for\nvm instances the ephemeral external ip\naddress is also released if you stop the\ninstance so after you restart the\ninstance it is assigned a new ephemeral\nexternal ip address and if you have an\nexisting vm that doesn't have an\nexternal ip address you can assign one\nto it forwarding rules always have an ip\naddress whether external or internal so\nyou don't need to assign an ip address\nto a forwarding rule after it is created\nand if your instance has an ephemeral\nexternal ip address and you want to\npermanently assign the ip to your\nproject like ephemeral internal ip\naddresses you have the option to promote\nthe ip address from ephemeral to static\nand in this case promoting an ephemeral\nexternal ip address to a static external\nip address now when assigning a static\nip address these are assigned to a\nproject long term until they are\nexplicitly released from that assignment\nand remain attached to a resource until\nthey are explicitly detached for vm\ninstances static external ip addresses\nremain attached to stopped instances\nuntil they are removed and this is\nuseful if you are dependent on a\nspecific ip address for a specific\nservice like a web server or a global\nload balancer that needs access to the\ninternet static external ip addresses\ncan be either a regional or global\nresource\nin a regional static ip address allows\nresources of that region\nor resources of zones within that region\nto use the ip address and just as a note\nyou can use your own publicly routable\nip address prefixes as google cloud\nexternal ip addresses and advertise them\non the internet the only caveat is that\nyou must own and bring at the minimum a\n24 cider block and so now that we've\ndiscussed internal and external ip\naddressing options i wanted to move into\ninternal ip address reservations now\nstatic internal ips provide the ability\nto reserve internal ip addresses\nfrom the ip range configured in the\nsubnet then assign those reserved\ninternal addresses to resources as\nneeded reserving an internal ip address\ntakes that address out of the dynamic\nallocation pool and prevents it from\nbeing used for automatic allocations\nwith the ability to reserve static\ninternal ip addresses you can always use\nthe same ip address for the same\nresource even if you have to delete and\nrecreate the resource so when it comes\nto internal ip address reservation you\ncan either reserve a static internal ip\naddress before creating the associated\nresource or you can create the resource\nwith an ephemeral internal ip address\nand then promote that ephemeral ip\naddress to a static internal ip address\nand so just to give you a bit more\ncontext i have a diagram here to run you\nthrough it so in the first example you\nwould create a subnet from your vpc\nnetwork you would then reserve an\ninternal ip address from that subnet's\nprimary ip range and in this diagram is\nmarked as 10.12.4.3\nand will be held as reserved for later\nuse with a resource and then when you\ndecide to create a vm instance or an\ninternal load balancer you can use the\nreserved ip address that was created in\nthe previous step that i p address then\nbecomes marked as reserved and in use\nnow touching on the second example you\nwould first create a subnet from your\nvpc network\nyou would then create a vm instance or\nan internal load balancer with either an\nautomatically allocated ephemeral ip\naddress or a specific ip address that\nyou've chosen from within that specific\nsubnet and so once the ephemeral ip\naddress is in use you can then promote\nthe ephemeral ip address to a static\ninternal ip address and would then\nbecome reserved and in use now when it\ncomes to the external ip address\nreservation\nyou are able to obtain a static external\nip address by using one of the following\ntwo options you can either reserve a new\nstatic external ip address and then\nassign the address to a new vm instance\nor you can promote an existing ephemeral\nexternal ip address to become a static\nexternal ip address now in the case of\nexternal ip addresses you can reserve\ntwo different types\na regional ip address which can be used\nby vm instances with one or more network\ninterfaces or by network load balancers\nthese ip addresses can be created either\nin the console or through the command\nline with the limitation that you will\nonly be allowed to create ipv4 ip\naddresses the other type is a global ip\naddress which can be used for global\nload balancers and can be created either\nin the console or through the command\nline as shown here the limitation here\nis that you must choose the premium\nnetwork service tier in order to create\na global ip address\nand after reserving the address you can\nfinally assign it to an instance during\ninstance creation or to an existing\ninstance and so as you can see there is\na lot to take in when it comes to\nunderstanding ip addressing and i hope\nthis lesson has given you some better\ninsight as to which type of ips should\nbe used in a specific scenario now don't\nworry the options may seem overwhelming\nbut once you start working with ip\naddresses more often the options will\nbecome so much clearer on what to use\nand when and as i said in the beginning\nonly high level concepts are needed to\nknow for the exam but knowing the\noptions will allow you to make better\ndecisions\nin your daily role as a cloud engineer\nand so that's pretty much all i wanted\nto cover when it comes to ip addressing\nin google cloud and so now that we've\ncovered the theory behind ip addressing\nin google cloud i wanted to bring this\ninto the console for a demo where we\nwill get hands-on with creating both\ninternal and external static ip\naddresses so as i explained before there\nwas a lot to take in with this lesson so\nnow would be a perfect opportunity to\nget up and have a stretch grab yourself\na tea or a coffee and whenever you're\nready join me back in the console so you\ncan now mark this lesson as complete and\ni'll see you in the next\n[Music]\nwelcome back in this demonstration i'm\ngoing to be going over how to create and\napply both internal and external static\nip addresses i'm going to show how to\ncreate them in both the console and the\ncommand line as well as how to promote\nip addresses from ephemeral ips to\nstatic ips and once we're done creating\nall the ip addresses i'm going to show\nyou the steps on how to delete them now\nthere's a lot to get done here so let's\ndive in now for this demonstration i'm\ngoing to be using a project that has the\ndefault vpc created and so in my case i\nwill be using project bowtieinc dev and\nso before you start make sure that your\ndefault vpc is created in the project\nthat you had selected so in order to do\nthat i'm going to head over to the\nnavigation menu i'm going to scroll down\nto vpc network and we're going to see\nhere that the default vpc has been\ncreated and so i can go ahead and start\nthe demonstration and so the first thing\ni wanted to demonstrate is how to create\na static internal ip address and so in\norder for me to demonstrate this i'm\ngoing to be using a vm instance and so\ni'm going to head over to the navigation\nmenu again and i'm going to scroll down\nto compute engine\nand so here i'm going to create my new\ninstance by simply clicking on create\ninstance and so under name i'm going to\nkeep it as instance 1. under region you\nwant to select us east one and i'm going\nto keep the zone as the default selected\nunder machine type i'm going to select\nthe drop down and select e2 micro and\ni'm going to leave everything else as\nthe default i'm going to scroll down\nhere to management security disks\nnetworking and soul tenancy and i'm\ngoing to select the networking tab from\nthere\nand so under here i'm going to select\nunder network interfaces the default\nnetwork interface and here is where i\ncan create my static internal ip and so\nclicking on the drop down under primary\ninternal ip you will see ephemeral\nautomatic ephemeral custom and reserve\nstatic internal ip address and so you're\ngoing to select reserve static internal\nip address and you'll get a pop-up\nprompting you with some fields to fill\nout to reserve a static internal ip\naddress and so under name i'm going to\ncall this\nstatic dash internal and for the\npurposes of this demo i'm going to leave\nthe subnet and the static ip address as\nthe currently selected if i wanted to\nselect a specific ip address i can click\non this drop down and select let me\nchoose and this will give me the option\nto enter in a custom ip address with the\nsubnet range that is selected for this\nspecific sub network and so because i'm\nnot going to do that i'm going to select\nassign automatically i'm going to leave\nthe purpose as non-shared and i'm going\nto simply click on reserve and this is\ngoing to reserve this specific ip\naddress and now as you can see here i\nhave the primary internal ip marked as\nstatic internal and so this is going to\nbe my first static internal ip address\nand so once you've done these steps you\ncan simply click on done and you can\nhead on down to the bottom and simply\nclick on create to create the instance\nand when the instance finishes creating\nyou will see the internal static ip\naddress and as you can see here your\nstatic internal ip address has been\nassigned to the default network\ninterface on instance 1. and so in order\nfor me to view this static internal ip\naddress in the console i can view this\nin vpc networks and drill down into the\nspecific vpc and find it under static\ninternal ip addresses but i wanted to\nshow you how to view it by querying it\nthrough the command line and so in order\nto do this i'm going to simply go up to\nthe menu bar on the right hand side and\nopen up cloud shell and once cloud shell\nhas come up you're going to simply paste\nin the command\ngcloud compute addresses list and this\nwill give me a list of the internal ip\naddresses that are available and so now\ni'm going to be prompted to authorize\nthis api call using my credentials and i\ndefinitely do so i'm going to click on\nauthorize and as expected the static\ninternal ip address that we created\nearlier has shown up it's marked as\ninternal in the region of us east one in\nthe default subnet and the status is in\nuse and so as we discussed in the last\nlesson static ip addresses persist even\nafter the resource has been deleted and\nso to demonstrate this i'm going to now\ndelete the instance i'm going to simply\ncheck off the instance and go up to the\ntop and click on delete you're going to\nbe prompted to make sure if you want to\ndelete this yes i do so i'm going to\nclick on delete and so now that the\ninstance has been deleted i'm going to\nquery the ip addresses again by using\nthe same command gcloud compute\naddresses list i'm going to hit enter\nand as you can see here the ip address\nstatic dash internal still persists but\nthe status is now marked as reserved and\nso if i wanted to use this ip address\nfor another instance i can do so by\nsimply clicking on create instance up\nhere at the top menu and then i can\nselect static dash internal as my ip\naddress so i'm going to quickly close\ndown cloud shell\nand i'm going to leave the name as\ninstance one the region\ncan select us east one and we're going\nto keep the zone as the default selected\nunder machine type you're going to\nselect the e2 micro machine type going\nto scroll down to management security\ndisks networking into soul tenancy and\ni'm going to select the networking tab\nfrom under here\nand under network interfaces i'm going\nto select the default network interface\nand under primary internal ip\nif i click on the drop down i have the\noption of selecting the static dash\ninternal static ip address and so i\nwanted to move on to demonstrate how to\npromote an internal ephemeral ip address\nto an internal static ip address and so\nin order to do this i'm going to select\non ephemeral automatic and i'm going to\nscroll down and click on done and i'm\ngoing to go ahead and create the\ninstance and once the instance is ready\ni'll be able to go in and edit the\nnetwork interface and so the instance is\nup and ready and so i'm going to drill\ndown into the instance\nand i'm going to go up to the top and\nclick on edit i'm going to scroll down\nto network interfaces and i'm going to\nedit the default network interface so\ni'm going to scroll down a little bit\nmore and here under internal iptype i'm\ngoing to click on the drop down and i'm\ngoing to select static\nand so here you are taking the current\nip address which is 10.142.0.4\nand promoting it to a static internal ip\naddress and so you're going to be\nprompted with a pop-up confirming the\nreservation for that static internal ip\naddress and so notice that i don't have\nany other options and so all i'm going\nto do is type in a name and i'm going to\ncall this promoted\nstatic and i'm going to click on reserve\nand this will promote the internal ip\naddress from an ephemeral ip address to\na static ip address and so now i'm just\ngoing to click on done\nand i'm going to scroll down and click\non save and so now because i want to\nverify the ip address i'm going to go\nahead and open up the cloud shell again\nand i'm going to use the same command\nthat i used earlier which is gcloud\ncompute addresses list and i'm going to\nhit enter\nas expected the promoted static ip\naddress is showing as an internal ip\naddress in the region of us east 1 in\nthe default subnet and its status is in\nuse and so just as a recap we've created\na static internal ip address for the\nfirst instance and for the second\ninstance we promoted an ephemeral\ninternal ip address into a static\ninternal ip address and we were able to\nverify this through cloud shell using\nthe gcloud compute addresses list\ncommand and so this is the end of part\none of this demo it was getting a bit\nlong so i decided to break it up and\nthis would be a great opportunity for\nyou to get up and have a stretch get\nyourself a coffee or tea and whenever\nyou're ready join me in part two where\nwe will be starting immediately from the\nend of part one so you can now mark this\nas complete and i'll see you in the next\none\n[Music]\nwelcome back this is part two of the\ncreating internal and external ip\naddresses demo and we will be starting\nimmediately from the end of part one so\nwith that being said let's dive in and\nso now that we've gone through how to\nboth create static ip addresses and\npromote ephemeral ip addresses to static\nip addresses for internal ips\ni want to go ahead and go through the\nsame with external ips and so i'm going\nto first start off by deleting this\ninstance i'm going to go ahead and click\non delete\nand so instead of doing it through the\ncompute engine interface i want to go\ninto the external ip address interface\nwhich can be found in the vpc network\nmenu\nso i'm going to go ahead up to the left\nhand corner click on the navigation menu\nand i'm going to scroll down to vpc\nnetwork\nand from the menu here on the left hand\nside you can simply click on external ip\naddresses\nand here you will see the console where\nyou can create a static external ip\naddress and so to start the process you\ncan simply click on reserve static\naddress and so here you'll be prompted\nwith a bunch of fields to fill out to\ncreate this new external static ip\naddress and so for the name of this\nstatic ip address you can simply call\nthis external dash static i'm going to\nuse the same in the description now here\nunder network service tier i can choose\nfrom either the premium or the standard\nand as you can see i'm currently using\nthe premium network service tier and if\ni hover over the question mark over here\nit tells me a little bit more about this\nnetwork service tier and as you can see\nthe premium tier allows me higher\nperformance as well as lower latency\nrouting but this premium routing comes\nat a cost\nwhereas the standard network service\ntier offers a lower performance compared\nto the premium network service tier and\nis a little bit more cost effective but\nstill delivering performance that's\ncomparable with other cloud providers\nand so i'm just going to leave it as the\ndefault selected and as we discussed in\nthe previous lesson ipv6 external static\nip addresses can only be used for global\nload balancers and so since we're only\nusing it for an instance an ipv4 address\nwill suffice and so just as a note for\nnetwork service tier if i click on\nstandard ipv6 is grayed out as well as\nthe global selection and this is because\nin order to use global load balancing\nyou need to be using the premium network\nservice tier so whenever you're creating\na global load balancer please keep this\nin mind as your cost may increase so i'm\ngoing to switch this back to premium and\nso under type i'm going to keep it as\nregional and under region i'm going to\nselect the same region that my instance\nis going to be in which is us east 1 and\nbecause i haven't created the instance\nyet there is nothing to attach it to and\nso i'm going to click on the drop down\nand click on none and so just as another\nnote i wanted to quickly highlight this\ncaution point that the static ip\naddresses\nnot attached to an instance or low\nbalancer are still billed at an hourly\nrate so if you're not using any static\nip addresses\nplease remember to delete them otherwise\nyou will be charged and so everything\nlooks good here to create my external\nstatic ip address so i'm going to simply\nclick on reserve\nand this will create my external static\nip address\nand put the status of it as reserved so\nas you can see here the external static\nip address has been created and you will\nfind all of your external static ip\naddresses that you create in future\nright here in this menu and you will\nstill be able to query all these\nexternal ip addresses from the command\nline and so now in order to assign this\nip address to a network interface i'm\ngoing to go back over to the navigation\nmenu and scroll down to compute engine\nand create a new instance so you can go\nahead and click on create instance i'm\ngoing to go ahead and keep the name of\nthis instance as instance one and in the\nregion i'm going to select us east one\ni'm going to keep the zone as the\nselected default and under machine type\ni'm going to select the e2 micro machine\ntype i'm going to scroll down to\nmanagement security disks networking and\nsoul tenancy and i'm going to select the\nnetworking tab and here under network\ninterfaces i'm going to select the\ndefault network interface i'm going to\nscroll down a little bit here and under\nexternal ip\nephemeral has been selected but if i\nclick on the drop down i will have the\noption to select the ip that we had just\ncreated which is the external dash\nstatic ip and so i'm going to select\nthat i'm going to click on done and you\ncan go down and click on create and so\nnow when the instance is created i will\nsee the external ip address\nof external static as the assigned\nexternal ip and as expected here it is\nand because i always like to verify my\nwork i'm going to go ahead and open up\nthe cloud shell and verify it through\nthe command line\nand so now i'm going to query all my\navailable static ip addresses using the\ncommand gcloud compute addresses list\ni'm going to hit enter\nand as you can see here the external\nstatic ip address of 34.75.76\nin the us east one region is now in use\nand this is because it is assigned to\nthe network interface on instance one\nand so before we go ahead and complete\nthis demo there's one more step that i\nwanted to go through and this is to\npromote an ephemeral external ip address\nto a static external ip address and so\ni'm going to go up here to the top menu\nand create a new instance i'm going to\nleave the name here as instance two\nunder the region i'm going to select us\neast one i'm going to keep the zone as\nthe selected default under machine type\ni'm going to select the e2 micro machine\ntype i'm going to leave everything else\nas the default and i'm going to scroll\ndown to management security disks\nnetworking and soul tenancy and select\nthe networking tab and i'm going to\nverify that i'm going to be using an\nephemeral external ip upon the creation\nof this instance if i scroll down here a\nlittle bit i can see that an external\nephemeral ip address will be used upon\ncreation and this will be the ip address\nthat i will be promoting to a static ip\nthrough the command line so i'm going to\ngo ahead and scroll down click on done\nand then i'm going to scroll down and\nclick on create and once this instance\nis created then i can go ahead and\npromote the ephemeral external ip\naddress okay and the instance has been\ncreated along with its external\nephemeral ip address and so now i can go\nahead and promote this ephemeral ip\naddress so in order for me to do this\ni'm going to move back to my cloud shell\nand i'm going to quickly clear my screen\nand i'm going to use the command gcloud\ncompute addresses create and then the\nname that we want to use for this static\nexternal ip address so i'm going to call\nthis promoted external i'm going to use\nthe flag dash dash addresses and so here\ni will need the external ip address that\ni am promoting\nwhich is going to be 104.196.219.42\nand so i'm going to copy this to my\nclipboard and i'm going to paste it here\nin the command line and now i'm going to\nadd the region flag\nalong with the region of us east one and\ni'm going to go ahead and hit enter\nand success my ephemeral external ip\naddress has been promoted to a static\nexternal ip address and of course to\nverify it i'm going to simply type in\nthe gcloud compute addresses list\ncommand i'm going to hit enter and as\nexpected here it is the promoted\nexternal ip of 104.196.219.42\nmarked as external in the u.s east one\nregion and the status is marked as in\nuse and so i wanted to take a moment to\ncongratulate you on making it through\nthis demonstration of creating internal\nand external ip addresses as well as\npromoting them so just as a recap you've\ncreated a static internal ip address in\nconjunction with creating a new instance\nand assigning it to that instance you\nthen created another instance and used\nan ephemeral ip and then promoted it to\na static internal ip address\nyou then created an external static ip\naddress using the console and assigned\nit to a brand new instance you then\ncreated another instance using an\nexternal ephemeral ip address and\npromoted it to a static external ip\naddress and you did this all using both\nthe console and the command line so i\nwanted to congratulate you on a great\njob now before we end this demonstration\ni wanted to go through the steps of\ncleaning up any leftover resources so\nthe first thing you want to do is delete\nthese instances so you can select them\nall and go up to the top and click on\ndelete it's going to ask you if you want\nto delete the two instances yes we do\nclick on delete and this will delete\nyour instances and free up the external\nip addresses so that you're able to\ndelete them and so now that the\ninstances have been deleted i'm going to\ngo over to the vpc network menu and i'm\ngoing to head on over to the external ip\naddress console\nand here i'm able to delete the external\nip addresses and so i'm going to select\nall of them and i'm going to go up to\nthe top menu and click on release static\naddress and you should get a prompt\nasking you if you want to delete both\nthese addresses the answer is yes click\non delete and within a few seconds these\nexternal ip addresses should be deleted\nand so now all that's left to delete are\nthe two static internal ip addresses\nand as i said before because there is no\nconsole to be able to view any of these\nstatic internal ip addresses i have to\ndo it through the command line so i'm\ngoing to go back to my cloud shell i'm\ngoing to clear the screen and i'm going\nto list the ip addresses currently in my\nnetwork and so here they are promoted\nstatic and static internal and so the\ncommand to delete any static ip\naddresses is as follows gcloud compute\naddresses delete the name of the ip\naddress that i want to delete which is\npromoted static and then i will need the\nregion flag and it'll be the region of\nus east one and i'm going to go ahead\nand hit enter it's going to prompt me if\ni want to continue with this and i'm\ngoing to type y for yes hit enter\nand success it has been deleted and so\njust a double check i'm going to do a\nquick verification\nand yes it has been deleted and so all\nthat's left to delete is the static\ninternal ip address and so i'm going to\npaste in the command\ngcloud compute addresses delete the name\nof the ip address that i want to delete\nwhich is static dash internal along with\nthe region flag of us east one i'm going\nto go ahead and hit enter\ny for yes to continue\nand success and one last verification to\nmake sure that it's all cleared up and\nas you can see i have no more static i p\naddresses and so this concludes this\ndemonstration on creating assigning and\ndeleting both static internal and static\nexternal ip addresses and so again i\nwanted to congratulate you on a great\njob and so that's pretty much all i\nwanted to cover\nin this demo on creating internal and\nexternal static ip addresses so you can\nnow mark this as complete and i'll see\nyou in the next one\n[Music]\nwelcome back\nin this lesson i will be diving into\nsome network security by introducing vpc\nfirewall rules a service used to filter\nincoming and outgoing network traffic\nbased on a set of user-defined rules\na concept that you should be fairly\nfamiliar with for the exam\nand comes up extremely often when\nworking as an engineer in google cloud\nit is definitely an essential security\nlayer that prevents unwanted access to\nyour cloud infrastructure\nnow vpc firewall rules apply to a given\nproject and network\nand if you'd like you can also apply\nfirewall rules across an organization\nbut i will be sticking to strictly vpc\nfirewall rules in this lesson now vpc\nfirewall rules let you allow or deny\nconnections\nto or from your vm instances\nbased on a configuration that you\nspecify\nand these rules apply to either incoming\nconnections or outgoing connections\nbut never both at the same time enabled\nvpc firewall rules are always enforced\nregardless of their configuration and\noperating system even if they have not\nstarted up now every vpc network\nfunctions as a distributed firewall\nwhen firewall rules are defined at the\nnetwork level connections are allowed or\ndenied on a per instance basis\nso you can think of the vpc firewall\nrules as existing not only between your\ninstances and other networks\nbut also between individual instances\nwithin the same network now when you\ncreate a vpc firewall rule you specify a\nvpc network and a set of components that\ndefine what the rule does\nthe components enable you to target\ncertain types of traffic\nbased on the traffic's protocol ports\nsources and destinations when you create\nor modify a firewall rule you can\nspecify the instances\nto which it is intended to apply\nby using the target component of the\nrule now in addition to firewall rules\nthat you create google cloud has other\nrules that can affect incoming or\noutgoing connections so for instance\ngoogle cloud doesn't allow certain ip\nprotocols\nsuch as egress traffic on tcp port 25\nwithin a vpc network and protocols other\nthan tcp udp\nicmp and gre\nto external ip addresses of google cloud\nresources are blocked google cloud\nalways allows communication between a vm\ninstance and its corresponding metadata\nserver at 169.254\nand this server is essential to the\noperation of the instance\nso the instance can access it regardless\nof any firewall rules that you configure\nthe metadata server provides some basic\nservices to the instance like dhcp dns\nresolution instance metadata and network\ntime protocol or ntp now just as a note\nevery network has two implied firewall\nrules that permit outgoing connections\nand block incoming connections firewall\nrules that you create can override these\nimplied rules now the first implied rule\nis the allow egress rule and this is an\negress rule whose action is allow and\nthe destination is all ips and the\npriority is the lowest possible and lets\nany instance send traffic to any\ndestination except for traffic blocked\nby google cloud the second implied\nfirewall rule is the deny ingress rule\nand this is an ingress rule whose action\nis deny and the source is all ips and\nthe priority is the lowest possible and\nprotects all instances by blocking\nincoming connections to them now i know\nwe touched on this earlier on in a\nprevious lesson but i felt the need to\nbring it up as these are pre-populated\nrules and the rules that i'm referring\nto are with regards to the default vpc\nnetwork and as explained earlier these\nrules can be deleted or modified as\nnecessary the rules as you can see here\nin the table allow ingress connections\nfrom any source to any instance on the\nnetwork when it comes to icmp rdp on\nport 3389 for windows remote desktop\nprotocol and for ssh on port 22. and as\nwell the last rule allows ingress\nconnections for all protocols and ports\namong instances in the network and it\npermits incoming connections to vm\ninstances from others in the same\nnetwork and all of these have a rule\npriority of six five five four which is\nthe second to lowest priority so\nbreaking down firewall rules there are a\nfew characteristics that google put in\nplace that help define these rules and\nthe characteristics are as follows each\nfirewall rule applies to incoming or\noutgoing connections\nand not both firewall rules only support\nipv4 connections so when specifying a\nsource for an ingress rule or a\ndestination for an egress rule by\naddress\nyou can only use an ipv4 address or ipv4\nblock insider notation as well each\nfirewall rules action is either allow or\ndeny you cannot have both at the same\ntime and the rule applies to connections\nas long as it is enforced so for example\nyou can disable a rule for\ntroubleshooting purposes and then enable\nit back again now when you create a\nfirewall rule you must select a vpc\nnetwork while the rule is enforced at\nthe instance level its configuration is\nassociated with a vpc network this means\nyou cannot share firewall rules among\nvpc networks including\nnetworks connected by vpc network\npeering or by using cloud vpn tunnels\nanother major thing to note about\nfirewall rules is that they are stateful\nand so that means when a connection is\nallowed through the firewall in either\ndirection return traffic matching this\nconnection is also allowed you cannot\nconfigure a firewall rule to deny\nassociated response traffic return\ntraffic must match the five tuple of the\naccepted request traffic but with the\nsource and destination addresses and\nports reversed so just as a note for\nthose who may be wondering what a five\ntuple is i was referring to the set of\nfive different values that comprise a\ntcpip connection and this would be\nsource ip destination ip source port\ndestination port and protocol google\ncloud associates incoming packets with\ncorresponding outbound packets by using\na connection tracking table google cloud\nimplements connection tracking\nregardless of whether the protocol\nsupports connections if a connection is\nallowed between a source and a target or\nbetween a target and a destination all\nresponse traffic is allowed as long as\nthe firewalls connections tracking state\nis active and as well as a note a\nfirewall rules tracking state is\nconsidered active if at least one packet\nis sent every 10 minutes now along with\nthe multiple characteristics that make\nup a firewall rule there are also\nfirewall rule components that go along\nwith it here i have a screenshot from\nthe console with the configuration\ncomponents of a firewall rule and i\nwanted to take a moment to highlight\nthese components for better clarity so\nnow the first component is the network\nand this is the vpc network that you\nwant the firewall rule to apply to the\nnext one is priority which we discussed\nearlier and this is the numerical\npriority which determines whether the\nrule is applied as only the highest\npriority rule whose other components\nmatch traffic is applied and remember\nthe lower the number the higher the\npriority the higher the number the lower\nthe priority now the next component is\nthe direction of traffic and these are\nthe ingress rules that apply to incoming\nconnections from specified sources to\ngoogle cloud targets and this is where\ningress rules apply to incoming\nconnections from specified sources to\ngoogle cloud targets\nand egress rules apply to connections\ngoing to specify destinations from\ntargets and the next one up is action on\nmatch and this component either allows\nor denies which determines whether the\nrule permits or blocks the connection\nnow a target is what defines which\ninstances to which the rule applies and\nyou can specify a target by using one of\nthe following three options the first\noption\nare all instances in the network and\nthis is the firewall rule that does\nexactly what it says it applies to all\nthe instances in the network the second\noption is instances by target tags and\nthis is where the firewall rule applies\nonly to instances with a matching\nnetwork tag and so i know i haven't\nexplained it earlier but a network tag\nis simply a character string added to a\ntags field in a resource so let's say i\nhad a bunch of instances that were\nconsidered development i can simply\nthrow a network tag on them using a\nnetwork tag of dev and apply the\nnecessary firewall rule for all the\ndevelopment servers holding the network\ntag dev and so the third option is\ninstances by target service accounts\nthis is where the firewall rule applies\nonly to instances that use a specific\nservice account and so the next\ncomponent is the source filter and this\nis a source for ingress rules or a\ndestination for egress rules the source\nparameter is only applicable to ingress\nrules and it must be one of the\nfollowing three selections source ip\nranges and this is where you specify\nranges of ip addresses as sources for\npackets either inside or outside of\ngoogle cloud the second one is source\ntags and this is where the source\ninstances are identified by a matching\nnetwork tag and source service accounts\nwhere source instances\nare identified by the service accounts\nthey use you can also use service\naccounts to create firewall rules that\nare a bit more granular and so one of\nthe last components of the firewall rule\nis the protocols and ports you can\nspecify a protocol or a combination of\nprotocols and their ports if you omit\nboth protocols and ports the firewall\nrule is applicable for all traffic on\nany protocol and any port and so when it\ncomes to enforcement status of the\nfirewall rule there is a drop down right\nunderneath all the components where you\ncan enable or disable the enforcement\nand as i said before this is a great way\nto enable or disable a firewall rule\nwithout having to delete it and is great\nfor troubleshooting or to grant\ntemporary access to any instances and\nunless you specify otherwise\nall firewall rules are enabled when they\nare created but you can also choose to\ncreate a rule in a disabled state and so\nthis covers the vpc firewall rules in\nall its entirety and i will be showing\nyou how to implement vpc firewall rules\nalong with building a custom vpc\ncustom routes\nand even private google access\nall together in a demo following this\nlesson to give you some hands-on skills\nof putting it all into practice and so\nthat's pretty much all i wanted to cover\nwhen it comes to vpc firewall rules so\nyou can now mark this lesson as complete\nand let's move on to the next one where\nwe dive in and build our custom vpc so\nnow is a perfect time to grab a coffee\nor tea and whenever you're ready join me\nin the console\nwelcome back\nin this demonstration i want to take all\nthe concepts that we've learned so far\nin this networking section and put it\nall into practice this diagram shown\nhere is the architecture of exactly what\nwe will be building in this demo we're\ngoing to start by creating a custom vpc\nand then we're going to create two\nsubnets\none public and one private\nin two separate regions we're then going\nto create a cloud storage bucket with\nsome objects in it and then we will\ncreate some instances to demonstrate\naccess to cloud storage as well as\ncommunication between instances and\nfinally we're going to create some\nfirewall rules for routing traffic to\nall the right places we're also going to\nimplement private google access\nand demonstrate accessibility to the\nfiles in cloud storage from the private\ninstance without an external ip so this\nmay be a little bit out of your comfort\nzone for some\nbut don't worry i'll be with you every\nstep of the way and other than creating\nthe instances all the steps here have\nbeen covered in previous lessons now\nthere's a lot to get done here so\nwhenever you're ready join me in the\nconsole and so here we are back in the\nconsole and as you can see up here in\nthe right hand corner i am logged in as\ntony bowtie ace gmail.com and currently\ni am logged in under project tony and so\nin order to start off on a clean slate\ni'm going to create a new project and so\ni'm going to simply click on the project\nmenu drop-down and click on new project\ni'm going to call this project\nbowtie inc and i don't have any\norganizations so i'm going to simply\nclick on create and as well for those of\nyou doing this lesson i would also\nrecommend for you to create a brand new\nproject so that you can start off anew\nagain i'm going to go over to the\nproject drop down and i'm going to\nselect bow tie ink as the project and\nnow that i have a fresh new project i\ncan now create my vpc network so i'm\ngoing to go over to the left hand corner\nto the navigation menu and i'm going to\nscroll down to vpc network and so\nbecause vpc networks are tied in with\nthe compute engine api\nwe need to enable it before we can\ncreate any vpc networks so you can go\nahead and enable this api so once this\napi has finished and is enabled we'll be\nable to create our vpc network\nok and the api has been enabled and as\nyou can see the default vpc network has\nbeen created with a subnet in every\nregion along with its corresponding ip\naddress ranges and so for this demo\nwe're going to create a brand new vpc\nnetwork along with some custom subnets\nand so in order to do that i'm going to\ngo up here to the top and i'm going to\nclick on create vpc network and so here\ni'm prompted with some fields to fill\nout\nso under name i'm going to think of a\ncreative name that i can call my vpc\nnetwork so i'm going to simply call it\ncustom under description i'm going to\ncall this custom\nvpc network and i'm going to move down\nhere to subnets and because i'm creating\ncustom subnets i'm going to keep it\nunder custom under subnet creation mode\nand so i'm going to need a public subnet\nand a private subnet and you'll be able\nto get the values from the text file in\nthe github repository within the sub\nnetworks folder under networking\nservices and so i'm going to create my\npublic subnet first and i'm going to\nsimply call the public subnet public for\nregion i'm going to use us east one and\nthe ip address range will be 10.0.0.0\nforward slash 24 and i'm going to leave\nprivate google access off and i'm going\nto simply click on done and now i can\ncreate the private subnet so underneath\nthe public subnet you'll see add subnet\nyou can simply click on that and the\nname of the new subnet will be as you\nguessed it private under region i'm\ngoing to use us east 4 and for the ip\naddress range\nbe sure to use 10.0.5.0.24\nand we're going to leave private google\naccess off for now and we'll be turning\nthat on a little bit later in the demo\nand so you can now click on done and\nbefore we click on create we want to\nenable the dns api and clicking on\nenable will bring you to the dns api\nhome page and you can click on enable to\nenable the api okay so now that we have\nour network configured along with our\npublic and private subnets as well as\ndns being enabled we can now simply\nclick on create but before i do that i\nwanted to give you some insight with\nregards to the command line so as i've\nshared before everything that can be\ndone in the console can be done through\nthe command line and so if ever you\nwanted to do that or you wanted to get\nto know the command line a little bit\nbetter\nafter filling out all the fields with\nregards to creating resources in the\nconsole you will be given the option of\na command line link that you can simply\nclick on and here you will be given all\nthe commands to create all the same\nresources with all the same preferences\nthrough the command line and i will be\nproviding these commands in the lesson\ntext so that you can familiarize\nyourself with the commands to use in\norder to build any networks using the\ncommand line but this is a great\nreference for you to use at any time and\nso i'm going to click on close\nand now i'm going to click on create\nand within a minute or two the custom\nvpc network will be created and ready to\nuse okay and the custom vpc network has\nbeen created along with its public and\nprivate subnet and so just to get a\nlittle bit more insight with this custom\nvpc network i'm going to drill down into\nit\nand as you can see here the subnets are\nrespectively labeled private and public\nalong with its region ip address range\nthe gateway and private google access\nthe routes as you can see here are the\nsystem generated routes that i had\ndiscussed in an earlier lesson it has\nboth the subnet routes to its respective\nip range along with the default route\nwith a path to the internet as well as a\npath for private google access now we\ndon't have any firewall rules here yet\nbut we'll be adding those in just a few\nminutes and so now that you've created\nthe vpc network with its respective\nsubnets we're going to head on over to\ncloud storage and create a bucket along\nwith uploading the necessary files so\ni'm going to go again over to the\nnavigation menu\nand i'm going to scroll down to storage\nand so as expected there are no buckets\npresent here in cloud storage and so\nwe're just going to go ahead and create\nour first bucket by going up here to the\ntop menu and clicking on create bucket\nand so here i've been prompted to name\nmy bucket and for those of you who are\nhere for the first time when it comes to\nnaming a storage bucket the name needs\nto be globally unique and this means\nthat the name has to be unique across\nall of the google cloud platform now\ndon't worry i'm going to get into\nfurther detail with this in the cloud\nstorage lesson with all of these\nspecific details when it comes to names\nstorage classes and permissions and so\nin the meantime you can come up with a\nname for your bucket something that\nresonates with you and so for me i'm\ngoing to name my bucket bowtie inc dash\nfile dash access and so now i'm going to\nsimply click continue and so just as a\nnote for those who are unable to\ncontinue through it is because the name\nfor your bucket is not globally unique\nso do try to find one that is now when\nit comes to location type i'm just going\nto click on region and you can keep the\ndefault location as used one and i'm\ngoing to leave all the other options as\ndefault and i'm going to go down to the\nbottom and click create and so for those\nof you who have created your bucket you\ncan now upload the files and those files\ncan be found in the github repository\nin the cloud storage bucket folder under\nnetworking services and so now i'm going\nto click on upload files\nand under the networking services\nsection under cloud storage bucket you\nwill find these three jpeg files and you\ncan simply select them and click on open\nand so they are now uploaded into the\nbucket and so now i'm ready to move on\nto the next step so you should now have\ncreated the vpc network with a private\nand public subnet along with creating\nyour own bucket in cloud storage and\nhave uploaded the three jpeg files so\nnow that this is done we can now create\nthe instances\nthat will have access to these files and\nso again i will go over to the\nnavigation menu in the top left hand\ncorner and scroll down to compute engine\nand here i will click on create\nand so again i will be prompted with\nsome fields to fill out and so for this\ninstance i'm going to first create the\npublic instance again i'm going to get\nreally creative and call this\npublic dash instance under labels i'm\ngoing to add a label\nunder key\ni'm going to type environment and under\nvalue i'm going to type in public i'm\ngoing to go down to the bottom and click\non save and under region i'm going to\nselect us east1 and you can leave the\nzone as us east 1b moving down under\nmachine type i'm going to select the e2\nmicro as the machine type just because\ni'm being cost conscious and i want to\nkeep the cost down and so i'm going to\nscroll down to identity and api access\nand under service account you should\nhave the compute engine default service\naccount already pre-selected now under\naccess scopes i want to be able to have\nthe proper permissions to be able to\nread and write to cloud storage along\nwith read and write access to compute\nengine and so you can click on set\naccess for each api and you can scroll\ndown to compute engine\nclick on the drop down menu and select\nread write and this will give the public\ninstance the specific access that it\nneeds to ssh into the private instance\nand so now i'm going to set the access\nfor cloud storage so i'm going to scroll\ndown to storage i'm going to click on\nthe drop down menu and select read write\nand this will give the instance read\nwrite access to cloud storage scrolling\ndown a little bit further i'm going to\ngo to management security disks\nnetworking and sold tenancy and i'm\ngoing to click on that\nscroll up here just a little bit\nand you can click on the networking tab\nwhich will prompt you for a bunch of\noptions that you can configure for the\nnetworking of the instance so under\nnetwork tags i want to type in public\nand you can click enter you can then\nscroll down to where it says network\ninterfaces and click on the current\ninterface which is the default and here\nit'll open up all your options and so\nunder network you want to click on the\ndrop down and set it from default to\ncustom the public subnet will\nautomatically be propagated so you can\nleave it as is and you also want to make\nsure that your primary internal ip\nas well as your external ip are set to\nephemeral and you can leave all the\nother options as default and simply\nclick on done and again before clicking\non create you can click on the command\nline link and it will show you all the\ncommands needed in order to create this\ninstance through the command line so i'm\ngoing to go ahead and close this\nand so i'm going to leave all the other\noptions as default and i'm going to\nclick on create and so now that my\npublic instance is being created i'm\ngoing to go ahead and create my private\ninstance\nusing the same steps that i did for the\nlast instance so i'm going to go ahead\nand click on create instance here at the\ntop and so the first thing i'm going to\nbe prompted for is the name of the\ninstance\nand so i'm going to call this instance\nprivate dash instance and here i'm going\nto add a label the key being environment\nand the value being private i'm going to\ngo down here to the bottom and click on\nsave\nand under region i'm going to select us\neast 4\nand you can keep the zone as the default\nselected under machine type we're going\nto select the e2 micro and again\nscrolling down to the identity and api\naccess under the access scopes for the\ndefault service account i'm going to\nclick on the set access for each api and\ni'm going to scroll down to storage i'm\ngoing to click on the drop down menu and\ni'm going to select access for read\nwrite and for the last step i'm going to\ngo into the networking tab under\nmanagement security disks networking and\nsoul tenancy and under network tags i'm\ngoing to give this instance a network\ntag of private and under network\ninterfaces we want to edit this and\nchange it from default over to the\ncustom network and as expected it\nselected the private subnet by default\nand because this is going to be a\nprivate instance we are not going to\ngive this an external ip so i'm going to\nclick on the drop down and select none\nand with all the other options set as\ndefault i'm going to simply click on\ncreate\nand this will create my private instance\nalong with having my public instance so\njust as a recap we've created a new\ncustom vpc network\nalong with a private and public subnet\nwe've created a storage bucket and added\nsome files in it to be accessed and\nwe've created a private and public\ninstance and assigning the service\naccount on the public instance read\nwrite access to both compute engine and\ncloud storage along with a public ip\naddress and assigning the service\naccount on the private instance read\nwrite access only for cloud storage and\nno public ip and so this is the end of\npart one of this demo\nand this would be a great opportunity\nfor you to get up and have a stretch\nget yourself a coffee or tea\nand whenever you're ready you can join\nme in part two\nwhere we will be starting immediately\nfrom the end of part one so you can go\nahead and complete this video and i will\nsee you in part two\n[Music]\nwelcome back\nthis is part two of the custom vpc demo\nand we will be starting exactly where we\nleft off from part one so with that\nbeing said let's dive in and so now the\nlast thing that needs to be done is to\nsimply create some firewall rules and so\nwith these firewall rules this will give\nme ssh access into the public instance\nas well as allowing private\ncommunication from the public instance\nto the private instance as well as\ngiving ssh access\nfrom the public instance to the private\ninstance and this will allow us to\naccess the files in the bucket from the\nprivate instance and so in order to\ncreate these firewall rules i need to go\nback to my vpc network so i'm going to\ngo up to the left hand corner again to\nthe navigation menu\nand scroll down to vpc network over here\non the left hand menu you'll see\nfirewall i'm going to click on that\nand here you will see all the default\nfirewall rules for the default network\nso for us to create some new ones for\nthe custom vpc i'm going to go up here\nto the top and click on create firewall\nand so the first rule i want to create\nis for my public instance and i want to\ngive it public access as well as ssh\naccess and so i'm going to name this\naccordingly as public dash access i'm\ngoing to give this the same description\nalways a good idea to turn on logs but\nfor this demonstration i'm going to keep\nthem off under network i'm going to\nselect the custom network i'm going to\nkeep the priority at 1000 the direction\nof traffic will be ingress and the\naction on match will be allow and so\nhere is where the target tags come into\nplay when it comes to giving access to\nthe network so targets we're going to\nkeep it as specified target tags\nand under target tags you can simply\ntype in public\nunder source filter you can keep it\nunder ip ranges\nand the source ip range will be 0.0.0.0\nforward slash 0. and we're not going to\nadd a second source filter here so\nmoving down to protocols and ports under\ntcp i'm going to click that off and add\nin port 22. and because i want to be\nable to ping the instance i'm going to\nhave to add another protocol which is\nicmp\nand again as explained earlier the\ndisable rule link will bring up the\nenforcement and as you can see it is\nenabled but if you wanted to create any\nfirewall rules in future and have them\ndisabled you can do that right here but\nwe're gonna keep this enabled and we're\ngonna simply click on create and this\nwill create the public firewall rule for\nour public instance in our custom vpc\nnetwork and so we're going to now go\nahead and create the private firewall\nrule and so i'm going to name this\nprivate dash access\nrespectively i'm going to put the\ndescription as the same under network\ni'm going to select our custom network\nkeep the priority at 1000 direction of\ntraffic should be at ingress and the\naction on match should be allow for\ntarget tags you can type in private and\nthen hit enter and because i want to be\nable to reach the private instance from\nthe public instance the source ip range\nwill be\n10.0.0.1\nforward slash 24. we're not going to add\na second source filter and under\nprotocols and ports we're going to\nsimply add tcp port 22\nand again i want to add icmp\nso that i'm able to ping the instance\nand i'm going to click on create\nand so we now have our two firewall\nrules private access and public access\nand if i go over to the custom vpc\nnetwork and i drill into it\ni'll be able to see these selective\nfirewall rules under the respective\nfirewall rules tab and so now that we've\ncreated our vpc network along with the\npublic and private subnet we've created\nthe cloud storage bucket with the files\nthat we need to access the instances\nthat will access those files along with\nthe firewall rules that will allow the\nproper communication we can now go ahead\nto test everything that we built and\nmake sure that everything is working as\nexpected so let's kick things off by\nfirst logging into the public instance\nso you can head on over to the\nnavigation menu and scroll down to\ncompute engine\nand you can ssh into the public instance\nby clicking on ssh under connect\nand this should open up a new tab or a\nnew window logging you in with your\ncurrently authenticated credentials okay\nand we are logged into our instance and\ni'm going to zoom in for better viewing\nand so just to make sure that everything\nis working as expected we know that our\nfirewall rule is correct because we are\nable to ssh into the instance and now i\nwant to see if i have access to my files\nin the bucket and so in order to do that\ni'm going to run the gsutil command ls\nfor list and then gs colon forward slash\nforward slash along with my bucket name\nwhich is bow tie inc\nhyphen file iphone access and i'm going\nto hit enter and as you can see i have\naccess to all the files in the bucket\nand the last thing i wanted to check is\nif i can ping the private instance so\ni'm going to first clear my screen and\ni'm going to head on over back to the\nconsole i'm going to copy the ip address\nof the private instance to my clipboard\nand then i'm going to head back on over\nto my terminal and i'm going to type in\nping i'm going to paste the ip address\nand success\ni am able to successfully ping the\nprivate instance\nfrom the public instance\nusing the icmp protocol and you can hit\ncontrol c to stop the ping so now that i\nknow that my public instance has the\nproper permissions to reach cloud\nstorage\nas well as being able to ping my private\ninstance i want to be able to check if i\ncan ssh\ninto the private instance from my public\ninstance and so i'm going to first clear\nmy screen and next i'm going to paste in\nthis command in order for me to ssh into\nthe private instance g cloud compute ssh\ndash dash project and my project name\nwhich is bow tie inc dash dash zone and\nthe zone that my instance is in which is\nus east 4c along with the name of the\ninstance which is private dash instance\nand along with the flag dash dash\ninternal dash ip stating that i am using\nthe internal ip in order to ssh into the\ninstance and i'm going to hit enter and\nso now i've been prompted for a\npassphrase in order to secure my rsa key\npair as one is being generated to log\ninto the private instance now it's\nalways good practice when it comes to\nsecurity to secure your key pair with a\npassphrase but for this demo i'm just\ngoing to leave it blank\nand so i'm just going to hit enter\ni'm going to hit enter again\nnow i don't want to get too deep into it\nbut i did want to give you some context\non what's happening here so when you log\ninto an instance on google cloud with os\nlogin disabled google manages the\nauthorized keys file\nfor new user accounts based on ssh keys\nin metadata and so the keys that are\nbeing generated that are being used for\nthe first time are currently being\nstored within the instance metadata so\nnow that i'm logged into my private\ninstance i'm going to quickly clear my\nscreen and just as a note you'll be able\nto know whether or not you're logged\ninto your private instance by looking\nhere at your prompt and so now i want to\nmake sure that i can ping my public\ninstance so i'm going to quickly type\nthe ping command i'm going to head on\nover to the console i'm going to grab\nthe ip address of the public instance\ni'm going to go back to my terminal and\npaste it in and as expected i'm able to\nping my public instance from my private\ninstance i'm just going to go ahead and\nhit control c to stop and i'm going to\nclear the screen so now we'd like to\nverify whether or not we have access to\nthe files in the cloud storage bucket\nthat we created earlier\nand so now i'm going to use the same\ncommand\nthat i used in the public instance to\nlist all the files in the cloud storage\nbucket so i'm going to use the gsutil\ncommand ls for list along with gs colon\nforward slash forward slash and the\nbucket name which is bow tie ink hyphen\nfile if an access and i'm going to hit\nenter\nand as you can see here i'm not getting\na response and the command is hanging\nand this is due to the fact that\nexternal access is needed in order to\nreach cloud storage and this instance\nonly has an internal or private ip so\naccessing the files in the cloud storage\nbucket is not possible now in order to\naccess cloud storage and the set of\nexternal ip addresses used by google\napis and services we can do this by\nenabling private google access on the\nsubnet used by the vms network interface\nand so we're going to go ahead and do\nthat right now so i'm going to hit\ncontrol c to stop and i'm going to go\nback into the console i'm going to go to\nthe navigation menu and i'm going to\nscroll down to vpc network\nand then i'm going to drill down into\nthe private subnet and i'm going to edit\nit under private google access i'm going\nto turn it on and i'm going to go down\nto the bottom and click on save and by\ngiving this subnet private google access\ni will allow the private instance and\nany instances with private ip addresses\nto access any public apis\nsuch as cloud storage so now when i go\nback to my instance i'm going to clear\nthe screen here and i'm going to run the\ngsutil command again\nand success\nwe are now able to access cloud storage\ndue to enabling private google access on\nthe respective private subnet\nso i first wanted to congratulate you on\nmaking it to the end of this demo\nand hope that this demo has been\nextremely useful as this is a real life\nscenario that can come up and so just as\na recap you've created a custom network\nwith two custom subnets you've created a\ncloud storage bucket and uploaded some\nfiles to it you've created a public\ninstance and a private instance and then\ncreated some firewall rules to route the\ntraffic you then tested it all by using\nthe command line for communication you\nalso enable private google access for\nthe instance with only the internal ip\nto access google's public apis so that\nit can access cloud storage and so again\nfantastic job on your part as this was a\npretty complex demo\nand you can expect things like what\nyou've experienced in this demo to pop\nup in your role of being a cloud\nengineer at any time so before you go be\nsure to delete all the resources you've\ncreated\nand again congrats on the great job so\nyou can now mark this as complete and\ni'll see you in the next one\nwelcome back in this lesson i will be\ngoing over vpc network peering and how\nyou can privately communicate across\nvpcs in the same or different\norganization vpc network peering and vpc\npeering are used interchangeably in this\nlesson as they are used to communicate\nthe same thing now for instances in one\nvpc to communicate with an instance in\nanother vpc they would route traffic via\nthe public internet however to\ncommunicate privately between two vpcs\ngoogle cloud offers a service called vpc\npeering and i will be going through the\ntheory and concepts of vpc peering\nthroughout this lesson so with that\nbeing said let's dive in\nnow vpc peering enables you to peer vpc\nnetworks\nso that workloads in different vpc\nnetworks can communicate in a private\nspace that follows the rfc\n1918 standard thus allowing private\nconnectivity across two vpc networks\ntraffic stays within google's network\nand never traverses the public internet\nvpc peering gives you the flexibility of\npeering networks that are of the same or\ndifferent projects along with being able\nto peer with other networks in different\norganizations vpc peering also gives you\nseveral advantages over using external\nip addresses or vpns to connect the\nfirst one is reducing network latency as\nall peering traffic stays within\ngoogle's high-speed network vpc peering\nalso offers greater network security as\nyou don't need to have services exposed\nto the public internet and deal with\ngreater risks of having your traffic\ngetting compromised or if you're trying\nto achieve compliance standards for your\norganization vpc peering will allow you\nto achieve the standards that you need\nand finally vpc network peering reduces\nnetwork costs as you save on egress\ncosts for traffic leaving gcp so in a\nregular network google charges you for\ntraffic communicating using public ips\neven if the traffic is within the same\nzone now you can bypass this and save\nmoney by using internal ips to\ncommunicate and keeping the traffic\nwithin the gcp network\nnow there are certain properties or\ncharacteristics that peered vpcs follow\nand i wanted to point these out for\nbetter understanding first off peer vpc\nnetworks remain administratively\nseparate so what exactly does this mean\nwell it means that routes firewalls vpns\nand other traffic management tools are\nadministered and applied separately in\neach of the vpc networks so this applies\nto each vpc independently which also\nmeans that each side of a peering\nassociation\nis set up independently as well so when\nyou connect one vpc to the other you\nhave to go into each vpc that you are\nconnecting to both initiate and\nestablish the connection peering becomes\nactive only when the configuration from\nboth sides match this also means that\neach vpc can delete the peering\nassociation at any given time now during\nvpc peering the vpc peers always\nexchange all subnet routes you also have\nthe option of exchanging custom routes\nsubnet and static routes are global and\ndynamic routes can be regional or global\na given vpc network can peer with\nmultiple vpc networks but there is a\nlimit that you can reach in which you\nwould have to reach out to google and\nask the limit to be increased now when\npeering with vpc networks there are\ncertain restrictions in place that you\nshould be aware of first off a subnet\ncider range in one peered vpc network\ncannot overlap with a static route in\nanother peered network this rule covers\nboth subnet routes and static routes so\nwhen a vpc subnet is created or a subnet\nip range is expanded google cloud\nperforms a check to make sure that the\nnew subnet range does not overlap with\nip ranges of subnets in the same vpc\nnetwork or in directly peered vpc\nnetworks if it does the creation or\nexpansion will fail google cloud also\nensures that no overlapping subnet ip\nranges\nare allowed across vpc networks that\nhave appeared network in common and\nagain if it does the creation or\nexpansion will fail now speaking of\nrouting when you create a new subnet in\nappeared vpc network\nvpc network peering doesn't provide\ngranular route controls to filter out\nwhich subnet cider ranges are reachable\nacross pure networks these are handled\nby firewall rules so to allow ingress\ntraffic from vm instances in a peer\nnetwork you must create ingress allow\nfirewall rules by default ingress\ntraffic to vms is blocked by the implied\ndeny ingress rule another key point to\nnote is that transitive peering is not\nsupported and only directly peered\nnetworks can communicate so they have to\nbe peered directly in this diagram\nnetwork a is peered with network b and\nnetwork b is peered with network c and\nso if one instance is trying to\ncommunicate from network a to network c\nthis cannot be done unless network a is\ndirectly peered with network c an\nextremely important point to note for\nvpc peering another thing to note is\nthat you cannot use a tag or service\naccount from one peered network in the\nother peered network they must each have\ntheir own as again they are each\nindependently operated as stated earlier\nand so the last thing that i wanted to\ncover is that internal dns is not\naccessible for compute engine in peered\nnetworks as they must use an ip to\ncommunicate and so that about covers\nthis short yet important lesson on the\ntheory and concepts of vpc peering and\nso now that we've covered all the theory\ni'm going to be taking these concepts\ninto a demo where we will be pairing two\nnetworks together and verifying the\ncommunication between them and so you\ncan now mark this lesson as complete and\nwhenever you're ready join me in the\nconsole\nwelcome back in this hands-on\ndemonstration\nwe're going to go through the steps to\ncreate a peering connection from two\nvpcs\nin two separate projects as shown here\nin the diagram and then to verify that\nthe connection works we're going to\ncreate two instances one in each network\nand ping one instance from the other\ninstance this demo is very similar to\nthe custom vpc demo that you had done\nearlier but we are adding in another\nlayer of complexity by adding in vpc\nnetwork peering and so there's quite a\nbit to do here so let's go ahead and\njust dive in\nokay so here we are back in the console\nas you can see up in the top right hand\ncorner i am logged in as tony bowties\ngmail.com and for this specific demo i\nwill be using two projects both project\ntony and project bowtie inc and if you\ncurrently do not have two projects you\ncan go ahead and create yourself a new\nproject or the two projects if you have\nnone and so i'm going to continue here\nwith project tony and the first thing i\nwant to do is create the two networks in\nthe two separate projects so i'm going\nto go up to the navigation menu in the\ntop left hand corner and i'm going to\nscroll down to vpc network\nhere i'm going to create my first vpc\nnetwork and i'm going to name this\nbowtie ink\ndash a i'm going to give it the same\ndescription\nand then under subnets i'm going to\nleave the subnet creation mode under\ncustom under the subnet name you can\ncall this subnet dash a\ni'm going to use the us east one region\nand for the ip address range i'm going\nto use 10.0 that's 0.0 forward slash 20.\nand i'm going to leave all the other\noptions as default and i'm going to go\ndown to the bottom and click on create\nnow as this network is being created i'm\ngoing to go over to the project bowtie\ninc and i'm going to create the vpc\nnetwork there so under name i'm going to\ncall this bowtie inc\nb and under description i'm going to use\nthe same under subnets i'm going to keep\nsubnet creation mode as custom and under\nnew subnet i'm going to call this subnet\nsubnet b the region will be used 4\nand the ip address range will be\n10.4.0.0\nforward slash 20. you can leave all the\nother options as default and scroll down\nto the bottom and click on create as\nthis network is being created i'm going\nto go back to project tony and i'm going\nto create the firewall rule for bow tie\nink dash a\nin this firewall rule as explained in\nthe last lesson we'll allow\ncommunication from one instance to the\nother and so i'm going to click on\ncreate firewall\nand under name i'm going to call this\nproject\ntony dash a under description i'm going\nto use the same\nunder the network i'm going to choose\nthe source network which will be bowtie\ninc dash a priority i'm going to keep at\n1000 direction of traffic should be\ningress and action on match should be\nallow under targets i'm going to select\nall instances in the network and under\nsource filter i'm going to keep ip\nranges selected and the source ip range\nspecifically for this demo is going to\nbe 0.0.0.0\nforward slash 0. and again this is\nspecifically used for this demo and\nshould never be used in a\nproduction-like environment in\nproduction you should only use the\nsource ip ranges that you are\ncommunicating with and under protocols\nand ports because i need to log into the\ninstance to be able to ping the other\ninstance i'm going to have to open up\ntcp on port 22. under other protocols\nyou can add icmp and this will allow the\nping command to be used i'm going to\nleave all the other options as default\nand i'm going to click on create and now\nthat this firewall rule has been created\ni need to go back over to project bowtie\ninc and create the firewall rule there\nas well\ni'm going to call this firewall rule\nbowtie inc dash b i'm going to give it\nthe same description under network i'm\ngoing to select bow tie ink dash b i'm\ngoing to keep the priority as 1000 and\nthe direction of traffic should be\ningress as well the action on match\nshould be allow scrolling down under\ntargets i'm going to select all\ninstances in the network and again under\nsource filter i'm going to keep ip\nranges selected and under source ip\nranges i'm going to enter in\n0.0.0.0 forward slash 0. and under\nprotocols and ports i'm going to select\ntcp with port 22 as well under other\nprotocols i'm going to type in icmp i'm\ngoing to leave everything else as\ndefault and i'm going to click on create\nnow once you've created both networks\nand have created both firewall rules you\ncan now start creating the instances so\nbecause i'm already in project bowtie\ninc i'm going to go to the left-hand\nnavigation menu and i'm going to scroll\ndown to compute engine and create my\ninstance so i'm just going to click on\ncreate\nand to keep with the naming convention\ni'm going to call this instance instance\nb i'm not going to add any labels for\nnow under region i'm going to choose us\neast 4 and you can leave the zone as the\ndefault selection and under machine type\ni'm going to select e2 micro and i'm\ngoing to scroll down to the bottom and\ni'm going to click on management\nsecurity disks networking and sold\ntenancy so that i'm able to go into the\nnetworking tab to change the network on\nthe default network interface so i'm\ngoing to click on the default network\ninterface and under network i'm going to\nselect bowtie inc b and the subnet has\nalready been selected for me and then\ni'm going to scroll down click on done\nand i'm going to leave all the other\noptions as default and click on create\nand so as this is creating i'm going to\ngo over to project tony\nand i'm going to create my instance\nthere\nand i'm going to name this instance\ninstance a under region i am going to\nselect us east1 you can leave the zone\nas the default selected under machine\ntype i'm going to select e2 micro and\nscrolling down here to the bottom i'm\ngoing to go into the networking tab\nunder management security disks\nnetworking and soul\nand here i'm going to edit the network\ninterface and change it from the default\nnetwork to bow tie ink dash a and as you\ncan see the subnet has been\nautomatically selected for me\nso now i can just simply click on done\ni'm going to leave all the other options\nas default and i'm going to click on\ncreate\nso just as a recap we've created two\nseparate networks in two separate\nprojects along with its corresponding\nsubnets and the firewall rules along\nwith creating an instance in each\nnetwork and so now that we have both\nenvironments set up it's now time to\ncreate the vbc peering connection and so\nbecause i'm in project tony i'm going to\nstart off with this project and i'm\ngoing to go up to the navigation menu\nand scroll down to vpc network and under\nvpc network on the left hand menu you're\ngoing to click on vpc network peering\nand through the interface shown here\nwe'll be able to create our vpc network\npeering so now you're going to click on\ncreate connection and i'm prompted with\nsome information that i will need and\nbecause we are connecting to another vpc\nin another project you're going to need\nthe project id as well as the name of\nthe vpc network you want to peer with\nand just as explained in the earlier\nlesson the subnet ip ranges in both\nnetworks cannot overlap so please make\nsure that if you are using ip ranges\noutside of the ones that are given for\nthis demonstration the ip ranges that\nyou are using do not overlap so once you\nhave that information you can then click\ncontinue\nand so here you will be prompted with\nsome fields to fill out with the\ninformation that you were asked to\ncollect in the previous screen and so\nsince we have that information already\nwe can go ahead and start filling in the\nfields so i'm going to call this peering\nconnection peering\na b and under vpc network i'm going to\nselect bow tie ink dash a under peered\nvpc network we're going to select the\nother project which should be bowtie inc\nand the vpc network name will be bow tie\ninc dash b and i'm going to leave all\nthe other options as default and so\nunder vpc network name you will see\nexchange custom routes and here i can\nselect to import and export custom\nroutes that i have previously created so\nany special routes that i have created\nbefore the actual peering connection i\ncan bring them over to the other network\nto satisfy my requirements and so i'm\nnot going to do that right now i'm going\nto close this up and i'm going to simply\nclick on create and so this is finished\ncreating and is marked as inactive and\nthis is because the corresponding\npeering connection in project bowtie has\nyet to be configured the status will\nchange to a green check mark in both\nnetworks and marked as active once they\nare connected if this status remains as\ninactive then you should recheck your\nconfiguration and edit it accordingly so\nnow i'm going to head on over to project\nbowtie inc and i'm going to create the\ncorresponding peering connection i'm\ngoing to click on create connection once\nyou have your project id and the vpc\nnetwork you can click on continue and\nfor the name of this peering connection\ni'm going to call this peering dash ba\nrespectively under vpc network i'm going\nto select bowtie inc b and under peered\nvpc network i'm going to select in\nanother project here you want to type in\nyour project id for me i'm going to\npaste in my project tony project id and\nunder vpc network name i'm going to type\nin bowtie inc\na and i'm going to leave all the other\noptions as default and i'm going to\nclick on create and so now that we've\nestablished connections on each of the\npeering connections in each vpc if the\ninformation that we've entered is\ncorrect then we should receive a green\ncheck mark stating that the peering\nconnection is connected and success here\nwe have status as active and if i head\non over to project tony i should have\nthe same green check mark under status\nfor the peering connection and as\nexpected the status has a green check\nmark and is marked as active so now in\norder to do the pairing connectivity\ntest i'm going to need to grab the\ninternal ip of the instance in the other\nnetwork that resides in project bowtie\nand so because it doesn't matter which\ninstance i log into as both of them have\nssh and ping access i'm going to simply\ngo over to the navigation menu i'm going\nto head on over to compute engine and\ni'm going to record the internal ip of\ninstance a and now i'm going to head\nover to project bowtie and log into\ninstance b and ping instance a and so in\norder to ssh into this instance i'm\ngoing to click on the ssh button under\nconnect and it should open a new browser\ntab for me logging me into the instance\nokay i'm logged in here and i'm going to\nzoom in for better viewing and so now\ni'm going to run a ping command against\ninstance a using the internal ip that i\nhad copied earlier and i'm going to hit\nenter and as you can see ping is working\nand so now we can confirm that the vpc\npeering connection is established and\nthe two instances in the different vpc\nnetworks are communicating over their\nprivate ips and you can go ahead and hit\ncontrol c to stop the ping and so just\nas a recap you've created two separate\nvpc networks with their own separate\nsubnets in two separate projects you've\ncreated the necessary firewall rules in\neach of these networks along with\ncreating instances in each of those\nnetworks you then established a vpc\npeering connection establishing the\nconfiguration in each vpc you then did a\nconnectivity test by logging into one of\nthe instances and pinging the other\ninstance and so i hope this helps cement\nthe theory of vpc peering that you\nlearned in the previous lesson and has\ngiven you some context when it comes to\nconfiguring each end of the peering\nconnection so i wanted to take a moment\nto congratulate you on completing this\ndemo and so all that's left now is to\nclean up all the resources that we\ncreated throughout this demo and you can\nstart by selecting the instances and\ndeleting them in each network as well as\nthe firewall rules and the networks\nthemselves i'm going to go over to\nproject tony and i'm going to do the\nsame thing there and so you can do\nexactly what you did with the last\ninstance here you can select it click on\ndelete and delete the instance and so\nnext we're going to delete the peering\nconnection so we're going to go up to\nthe navigation menu we're going to\nscroll down to vpc network and on the\nleft hand menu we're going to scroll\ndown to vpc network peering and so we're\ngoing to select appearing connection\nwe're going to go to the top and click\non delete and then delete the peering\nconnection\nand so now we're going to delete the\nfirewall rule so we're going to go up to\nfirewall\nwe're going to select the firewall rule\nat the top we're going to click delete\nand then delete the firewall rule and\nlast but not least we want to delete the\nvpc network that we created so we're\ngoing to go up to vpc networks we're\ngoing to drill down into the custom vpc\nup at the top we're going to click on\ndelete vpc network and then we're going\nto click on delete and so now that we've\ndeleted all the resources in project\ntony we're going to go back over to our\nsecond project project bowtie and do the\nsame thing and so we're first going to\nstart off with the vpc peering\nconnection so we're going to go over to\nvpc network peering we're going to\nselect the appearing connection we're\ngonna click on delete at the top and\ndelete the peering connection next we're\ngonna go into firewall we're gonna\nselect the firewall rule go up to the\ntop and click on delete and then delete\nthe firewall rule and finally we're\ngonna go over to vpc networks we're\ngoing to drill down into the custom\nnetwork we're going to click on delete\nvpc network at the top and delete the\nvpc network\nand so now that you've successfully\ndeleted all your resources you can now\nmark this lesson as complete and i'll\nsee you in the next one and congrats\nagain on the great job of completing\nthis demo\n[Music]\nwelcome back and in this lesson i'm\ngoing to be discussing the concepts and\nterminology of shared vpcs i'm also\ngoing to go into some detailed use cases\nand how shared vpcs would be used in\ndifferent scenarios so with that being\nsaid let's dive in\nnow when a vpc is created it is usually\ntied to a specific project now what\nhappens when you want to share resources\nacross different projects but still have\nseparate billing and access within the\nprojects themselves\nthis is where shared vpcs come into play\nshared vpcs allow an organization to\nconnect resources from multiple projects\nto a common vpc network so that way they\ncan communicate with each other securely\nand efficiently using internal ips from\nthat network when you use shared vpcs\nyou designate a project as a host\nproject and attach one or more other\nservice projects to it the vpc networks\nin the host project are considered the\nshared vpc networks so just as a\nreminder a project that participates in\na shared vpc is either a host project or\na service project a host project can\ncontain one or more shared vpc networks\na service project is any project that\nhas been attached to a host project by a\nshared vpc admin this attachment allows\nit to participate in the shared vpc and\njust as a note a project cannot be both\na host and a service project\nsimultaneously it has to be one or the\nother and you can create and use\nmultiple host projects however each\nservice project can only be attached to\na single host project it is also a\ncommon practice to have multiple service\nprojects administered by different\ndepartments or teams in the organization\nand so just for clarity for those who\nare wondering a project that does not\nparticipate in a shared vpc\nis called a standalone project\nand this is to emphasize that it is\nneither a host project or a service\nproject now when it comes to\nadministering these shared vpcs we\nshould be adhering to the principle of\nleast privilege and only assigning the\nnecessary access needed to specific\nusers so here i broken down the roles\nthat are needed to enable and administer\nthe shared vpcs a shared vpc admin has\nthe permissions to enable host projects\nattach service projects to host projects\nand delegate access to some or all of\nthe subnets in shared vpc networks to\nservice project admins when it comes to\na service project admin this is a shared\nvpc admin for a given host project and\nis typically its project owner as well\nalthough when defining each service\nproject admin a shared vpc admin can\ngrant permission to use the whole host\nproject or just some subnets and so when\nit comes to service project admins there\nare two separate levels of permissions\nthat can be applied the first is project\nlevel permissions and this is a service\nproject admin that can be defined to\nhave permission to use all subnets in\nthe host project when it comes to subnet\nlevel permissions a service project\nadmin can be granted a more restrictive\nset of permissions to use only some\nsubnets now i wanted to move into some\nuse cases which will give you a bit more\ncontext on how shared vpcs are used in\nspecific environments illustrated here\nis a simple shared vpc scenario here a\nhost project has been created and\nattached to service projects to it the\nservice project admin in service project\na\ncan be configured to access all or some\nof the subnets in the shared vpc network\nservice project admin with at least\nsubnet level permissions to the 10.0.2.0\n24 subnet has created vm1 in a zone\nlocated in the us west one region this\ninstance receives its internal ip\naddress\n10.0.2.15 from the 10.0.2.0\n24 cider block now service project\nadmins in service project b can be\nconfigured to access all or some of the\nsubnets in the shared vpc network a\nservice project admin with at least\nsubnet level permissions to the\n10.10.4.0 forward slash 24 subnet has\ncreated vm2 in a zone located in the us\ncentral 1 region this instance receives\nits internal ip address\n10.10.4.1\nfrom the\n10.10.4.0 forward slash 24 cider block\nand of course the standalone project\ndoes not participate in the shared vpc\nat all as it is neither a host nor a\nservice project and the last thing to\nnote\ninstances in service projects attached\nto a host project using the same shared\nvpc network\ncan communicate with one another using\neither ephemeral or reserve static\ninternal ip addresses and i will be\ncovering both ephemeral and static ip\naddresses in a later section under\ncompute engine external ip addresses\ndefined in the host project are only\nusable by resources in that project they\nare not available for use in service\nprojects moving on to the next use case\nis a multiple hosts project for this use\ncase an organization is using two\nseparate host projects development and\nproduction\nand each host project has two service\nprojects attached to them both host\nprojects have one shared vpc network\nwith subnets configured to use the same\ncider ranges both the testing and\nproduction networks have been purposely\nconfigured in the same way so this way\nwhen you work with resources tied to a\nsubnet range it will automatically\ntranslate over from one environment to\nthe other moving on to the next use case\nis the hybrid environment now in this\nuse case the organization has a single\nhost project with a single shared vpc\nnetwork the shared vpc network is\nconnected via cloud vpn to an\non-premises network some services and\napplications are hosted in gcp while\nothers are kept on premises and this way\nseparate teams can manage each of their\nown service projects\nand each project has no permissions to\nthe other service projects as well each\nservice project can also be billed\nseparately subnet level or project level\npermissions have been granted to the\nnecessary service project admins\nso they can create instances that use\nthe shared vpc network and again\ninstances in these service projects can\nbe configured to communicate with\ninternal services\nsuch as database or directory servers\nlocated on premises and finally the last\nuse case is a two-tier web service here\nan organization has a web service that\nis separated into two tiers and\ndifferent teams manage each tier the\ntier one service project represents the\nexternally facing component behind an\nhttp or https load balancer the tier 2\nservice project represents an internal\nservice upon which tier 1 relies on and\nit is balanced using an internal tcp or\nudp load balancer the shared vpc allows\nmapping of each tier of the web service\nto different projects so that they can\nbe managed by different teams while\nsharing a common vpc network to host\nresources that are needed for both tiers\nnow we cover quite a bit in this lesson\nwhen it comes to all the concepts of\nshared vpcs we covered both host and\nservice projects and the roles that they\nplay and their limitations we also went\nover the different roles that are needed\nto administrate these shared vpcs and we\nwent over different use cases on how to\nuse shared vpcs for different scenarios\nand so that about covers everything i\nwanted to discuss in this lesson\nso you can now mark this lesson as\ncomplete and let's move on to the next\none\n[Music]\nwelcome back and in this lesson i'm\ngoing to be discussing vpc flow logs\nflow logs is an essential tool for\nmonitoring and analyzing traffic\ncoming in and going out of vpcs from vm\ninstances flow logs are essential to\nknow for the exam as you should know the\ncapabilities and use cases and so with\nthat being said let's dive in\nso vpc flow logs records a sample of\nnetwork flows\nsent from and received by vm instances\nincluding instances used as google\nkubernetes engine nodes these logs can\nbe used for network monitoring forensics\nreal-time security analysis and expense\noptimization when you enable vpc flow\nlogs you enable for all vms in a subnet\nso basically you would be enabling vpc\nflow logs on a subnet by subnet basis\nflow logs are aggregated by connection\nfrom compute engine vms and exported in\nreal time these logs can be exported to\ncloud logging previously known as\nstackdriver for 30 days if logs need to\nbe stored for longer than 30 days they\ncan be exported to a cloud storage\nbucket for longer term storage and then\nread and queried by cloud logging google\ncloud samples packets that leave and\nenter a vm to generate flow logs now not\nevery packet is captured into its own\nlog record about one out of every 10\npackets is captured but this sampling\nrate might be lower depending on the\nvm's load and just as a note you cannot\nadjust this rate this rate is locked by\ngoogle cloud and cannot be changed in\nany way and because vpc flow logs do not\ncapture every packet it compensates for\nmissed packets by interpolating from the\ncaptured packets now there are many\ndifferent use cases for vpc flow logs\nand i wanted to take a quick minute to\ngo over them the first one i wanted to\nmention is network monitoring vpc flow\nlogs provide you with real-time\nvisibility into network throughput and\nperformance so you can monitor the vpc\nnetwork perform network diagnostics\nunderstand traffic changes and help\nforecast capacity\nfor capacity planning you can also\nanalyze network usage with vpc flow logs\nand you can analyze the network flows\nfor traffic between regions and zones\ntraffic to specific countries on the\ninternet\nand based on the analysis you can\noptimize your network traffic expenses\nnow a great use case for vpc flow logs\nis network forensics\nso for example if an incident occurs you\ncan examine which ips talked with whom\nand when and you can also look at any\ncompromised ips by analyzing all the\nincoming and outgoing network flows and\nlastly\nvpc flow logs can be used for real-time\nsecurity analysis\nyou can leverage the real-time streaming\napis using pub sub and integrate them\nwith a sim or security information in\nevent management system like splunk\nrapid7 or logarithm and this is a very\ncommon way to add an extra layer of\nsecurity to your currently existing\nenvironment as well as a great way to\nmeet any compliance standards that are\nneeded for your organization now vpc\nflow logs are recorded in a specific\nformat log records contain base fields\nwhich are the core fields of every log\nrecord and meta data fields that add\nadditional information metadata fields\nmay be omitted to save storage costs but\nbase fields are always included and\ncannot be omitted some log fields are in\na multi-field format with more than one\npiece of data in a given field\nfor example\nthe connection field that you see from\nthe base is of the ip details format\nwhich contains the source and\ndestination ip address and port\nplus the protocol in a single field\nflows that have an endpoint in a gke\ncluster can be annotated with gke\nannotations which can include details of\nthe cluster\npod and service of the endpoint gke\nannotations are only available with a\ncustom configuration of metadata fields\nnow when you enable vpc flow logs you\ncan set a filter based on both base and\nmetadata fields that only preserves logs\nthat match the filter all other logs are\ndiscarded before being written to\nlogging which saves you money and\nreduces the time needed to find the\ninformation you're looking for shown\nhere is a sample from the console in\nboth the classic logs viewer as well as\nthe logs viewer in preview and so in the\nclassic logs viewer you can simply\nselect the sub network from the first\npull down menu and from the second pull\ndown menu you can select the\ncompute.googleapis.com\nforward slash vpc underscore flows and\nthis will give you the information that\nyou need to pull up all your vpc flow\nlogs in the logs viewer preview it is\ndone in a similar way but the query is\nshown here in the query builder and can\nbe adjusted accordingly pulling up any\nvpc flow logs must be done within the\nconsole when viewing them in google\ncloud and so the last thing i wanted to\nshow you before ending this lesson is a\nsample of the log itself the log shown\nhere is a sample of what a vpc flow log\nlooks like\nand as you can see here beside each\nfield you will see a small arrow\nclicking on these arrows will expand the\nfield and reveal many of the subfields\nthat you saw on the last slide and will\ngive you the necessary information you\nneed to analyze your vpc flow logs in\nthis example of the connection field it\nshows the five tuple that describes this\nconnection which you can clearly see up\nhere at the top and if i were to go\nfurther down and expand more of these\nfields i would find more information\nthat could help me better analyze more\nlogging info for my given problem that i\nam trying to solve now i didn't want to\ngo too deep into logging as i will be\ndiving into a complete section on its\nown in a later section of the course but\ni did want you to get a feel for what\ntype of data vpc flow logs can give you\nand how it can help you in your specific\nuse case as well as on the exam and so\nthat's pretty much all i wanted to cover\nwith regards to vpc flow logs so you can\nnow mark this lesson as complete and\nlet's move on to the next one\n[Music]\nwelcome back in this lesson i'm going to\ncover a high-level overview of a basic\nfoundational service that supports the\nbackbone of the internet as we know it\ntoday this foundation is called dns or\nthe domain name system dns is used\nwidely in google cloud from mostly an\ninfrastructure perspective and is used\nin pretty much any other cloud\nenvironment or computer network on the\nplanet now there is quite a bit to cover\nin this lesson with regards to dns so\nwith that being said let's dive in\nnow dns or domain name system is a\nglobal decentralized distributed\ndatabase that lets you store ip\naddresses and other data\nand look them up by name this system\nuses human readable names like\ngoogle.com and translates it into a\nlanguage that computers understand which\nare numeric ip addresses for example\nhumans access information online through\na domain name like google.com computers\nuse ip addresses to access information\nonline like 172.217.\nnow whether you type google.com or the\nip address into a web browser both will\nconnect to google.com dns translates the\ndomain name to an ip address so that the\nweb browser knows where to connect to\nand we know what to enter into the web\nbrowser through dns you can connect a\ndomain name to web hosting\nmail\nand other services\nnow getting a bit deeper into it as ip\naddresses are at the core of\ncommunicating between devices on the\ninternet they are hard to memorize and\ncan change often even for the same\nservice to get around these problems we\ngave names to ip addresses for example\nwhen it comes to our computer\ncommunicating with\nwww.google.com it will use the dns\nsystem to do this now in the dns\ndatabase contains the information needed\nto convert the www.google.com\ndomain name to the ip address and this\npiece of information is stored in a\nlogical container called a zone the way\nthat the zone is stored is through\nwhat's commonly known as a zone file now\nwithin this zone file is a dns record\nwhich links the name\nwww and the ip address that your laptop\nneeds to communicate\nwith the specific website and this zone\nfile is hosted by what's known as a name\nserver or ns server for short and i will\nbe going into further detail on this in\njust a minute so in short if you can\nquery the zone for the record\nwww.google.com\nthen your computer can communicate with\nthe web server and dns is what makes it\nall happen\nnow i wanted to go into a bit of history\nof how dns came about so in early\ncomputer networks a simple text file\ncalled a host file was created that\nmapped hostnames to ip addresses and\nthis enabled people to refer to other\ncomputers by the name and their\ncomputers translated that name to an ip\naddress when it needed to communicate\nwith it the problem is as network sizes\nincreased the host file approach became\nimpractical due to the fact that it\nneeded to be stored on each computer as\neach computer would have to resolve the\nsame host names as well updates were\ndifficult to manage as all of the\ncomputers would need to be given an\nupdated file all in all this system was\nnot scalable\nnow to overcome these and other\nlimitations the dns system was developed\nand the dns system essentially provided\nfor a way to organize the names using a\ndomain name structure it also provided a\ndynamic system for protocols services\nand methods\nfor storing updating and retrieving ip\naddresses for host computers\nnow that i've covered what dns is\nand why we use it i wanted to dive into\nthe structure of the dns system now the\nstructure all begins with a dot the root\nif you will and this can be found after\nevery domain name that you type into\nyour browser you will almost never see\nit and this is because your browser will\nautomatically put it in without your\nknowing you can try it with any domain\nin any browser and you will almost\nalways come up with the same result this\ndot is put in for you and will provide\nthe route for you and this is where we\nstart to break down the dns system\nnow the domain name space consists of a\nhierarchical data structure like the one\nyou have on your computer each node has\na label and zero or more resource\nrecords which hold information\nassociated with the domain name the\ndomain name itself consists of the label\nconcatenated with the name of its parent\nnode on the right separated by a dot so\nwhen it comes to dns the domain name is\nalways assembled from right to left this\nhierarchy or tree is subdivided into\nzones beginning at the root zone a dns\nzone may consist of only one domain or\nmay consist of many domains and sub\ndomains depending on the administrative\nchoices of the zone manager now getting\nright into it the root server is the\nfirst step in translating human readable\nhostnames into ip addresses the root\ndomain is comprised of 13 dns systems\ndispersed around the world known\ncollectively as the dns root servers\nthey are indicated by the letters a\nthrough m\noperated by 12 organizations such as\nverisign cogent and nasa while there are\n13 ip addresses that represent these\nsystems there are actually more than 13\nservers some of the ip addresses are\nactually a cluster of dns servers and so\neach of these dns servers also consists\nof the root zone file which contains the\naddress of the authoritative name server\nfor each top level domain and because\nthis is such a big undertaking to keep\nupdated iana or the internet assigned\nnumbers authority was appointed as the\nauthority that manages and administrates\nthis file and i will include a link in\nthe lesson text for those of you who are\nlooking to dive deeper into the contents\nof this root zone file as well as\ngetting to know a little bit more about\nthe iana organization now while the dns\nroot servers establish the hierarchy\nmost of the name resolution process is\ndelegated to other dns servers so just\nbelow the dns route in the hierarchy are\nthe top level domain servers\nalso known as tld for short the top\nlevel domain takes the tld provided in\nthe user's query for example www.google\nand provides details for the dot-com tld\nname server the companies that\nadminister these domains are named\nregistries and they operate the\nauthoritative name servers for these top\nlevel domains for example verisign is\nthe registry for the dot com top level\ndomain over a hundred million domains\nhave been registered in the dot com top\nlevel domain and these top level dns\nservers\nhandle top level domains such as com dot\norg dot net and dot io and this can also\nbe referred to as the gtld which is the\ngeneral top level domains and the cctld\nwhich is the country code top level\ndomain like dot ca for canada dot uk for\nthe united kingdom and dot it for italy\nthe top level dns servers delegate to\nthousands of second level dns servers\nnow second level domain names are sold\nto companies and other organizations and\nover 900 accredited registrars register\nand manage the second level domains in\nthe dot com domain for end users the\nsecond level of this structure is\ncomprised of millions of domain names\nsecond level dns servers can further\ndelegate the zone but most commonly\nstore the individual host records for a\ndomain name this is the server at the\nbottom of the dns lookup chain where you\nwould typically find resource records\nand it is these resource records that\nmaps services and host names to ip\naddresses and will respond with the\nqueried resource record ultimately\nallowing the web browser making the\nrequest to reach the ip address needed\nto access a website or other web\nresources now there is one more concept\nthat i wanted to cover\nbefore we move on and this is the sub\ndomain now some of you have noticed and\nwondered where does the sub domain come\ninto play with regards to the dns\nstructure well this is a resource record\nthat falls under the second level domain\nand in dns hierarchy a sub domain is a\ndomain that is a part of another main\ndomain but i wanted to put it in here\njust to give you an understanding of\nwhere subdomains would fall so now that\nwe understand how dns is structured i\nwanted to go through the breakdown of\nthe data flow of dns to give you some\nbetter contacts now there are eight\nsteps in a dns lookup first we start off\nwith the dns client which is shown here\nas tony bowtie's laptop and this is a\nclient device which could also be a\nphone or a tablet and is configured with\nsoftware to send name resolution queries\nto a dns server so when a client needs\nto resolve a remote host name into its\nip address in most cases it sends a\nrequest to the dns recursive resolver\nwhich returns the ip address of the\nremote host to the client a recursive\nresolver\nis a dns server that is configured to\nquery other dns servers until it finds\nthe answer to the question it will\neither return the answer or an error\nmessage to the client if it cannot\nanswer the query and the query will\neventually be passed off to the dns\nclient the recursive resolver in essence\nacts as the middle man between a client\nand a dns name server which is usually\nthe internet service provider a service\ncarrier or a corporate network now to\nmake sure that a resolver is able to\nproperly run dns a root hints file is\nsupplied with almost every operating\nsystem and this file holds the ip\naddresses for the root name servers this\nalso includes the dns resolver but in\ncase it is unable to answer the query\nthe client will be able to still make\nthe query to the dns name servers now\nafter receiving a dns query from a\nclient\nthis recursive resolver will either\nrespond with cache data or send a\nrequest to a root name server and in\nthis case the resolver queries a dns\nroot name server the root server then\nresponds to the resolver with the\naddress of a top level domain or tld dns\nserver such as com or dot net which\nstores the information for its domains\nnow when searching for google.com the\nrequest is pointed towards the dot-com\ntld so naturally the resolver then makes\na request to the com tld then the tld\nname server then responds with the ip\naddress of the domain's name server\ngoogle.com and lastly the resolver then\nsends a query to the domain's name\nserver the ip address for google.com is\nthen returned to the resolver from the\nname server this ip address is cache for\na period of time determined by the\ngoogle.com name server and this process\nis so that a future request for this\nhostname could be resolved from its\ncache rather than performing the entire\nprocess from beginning to end and so for\nthose of you who are unaware cache is a\ncomponent that stores data so that\nfuture requests for that data can be\nserved faster the purpose of this\ncaching is to temporarily store data in\na location that results in improvements\nin performance and reliability for data\nrequests dns caching involves storing\nthe data closer to the requesting client\nso that the dns query can be resolved\nearlier and additional queries further\ndown the dns lookup chain can be avoided\nand thus improving load times dns data\ncan be cached in a variety of locations\ndown the chain each of which will store\ndns records for a set amount of time\ndetermined by a time to live also known\nas ttl for short and this value is the\ntime to live for that domain record a\nhigh ttl for a domain record means that\nlocal dns resolvers will cache responses\nfor longer and give quicker responses\nhowever making changes to dns records\ncan take longer due to the need to wait\nfor all cash records to expire\nalternatively domain records with low\nttls can change much more quickly but\ndns resolvers will need to refresh their\nrecords more often and so in this final\nstep the dns resolver then responds to\nthe web browser with the ip address of\nthe domain requested initially and once\nthese eight steps of the dns lookup have\nreturned the ip address for\nwww.google.com\nthe browser is able to make the request\nfor the webpage and so the browser will\nreach out to the ip address of the\nserver and request the web page which\nwill be loaded up in the browser now i\nknow this probably has been a review for\nthose who are a bit more advanced when\nit comes to understanding dns but for\nothers who are fairly new to the\nunderpinnings of dns i hope this has\ngiven you a basic understanding of what\nit is why we use it and how it works\nmoving forward in the course i will be\ndiscussing dns with regards to different\nservices and the needed resource records\nwithin zones that are used by these\ngiven services and so that's pretty much\nall i wanted to cover when it comes to\nthe fundamentals of dns so you can now\nmark this lesson as complete and let's\nmove on to the next one\n[Music]\nwelcome back in this lesson i'm going to\nbe diving into dns record types now dns\nresource records are the basic\ninformation elements of the domain name\nsystem they are entries in the dns\ndatabase which provide information about\nhosts these records are physically\nstored in the zone files on the dns\nserver this lesson will go through some\nof the most commonly used dns records\nthat we will be coming across throughout\nthis course so with that being said\nlet's dive in now the first record that\ni wanted to touch on are the name server\nrecords also known as ns records for\nshort this record identifies which dns\nserver contains the current records for\na domain these servers are usually found\nat a registrar internet service provider\nor hosting company ns records are\ncreated to identify the name server used\nfor each domain name within a given zone\nin this example we have the dot co zone\nthat will have multiple name server\nrecords for\nbowtieinc.co now these name server\nrecords are how the dot co delegation\nhappens for bowtieinc.co and they point\nat servers that host the\ninc.co zone that is managed by bowtie\ninc and the flow shown here of the query\nstarts from the root zone going to the\ndot co zone where the record lies for\nthe name servers for bowtieinc.com\nand flows down to the bowtieinc.cozone\nthat contain all the necessary records\nfor bowtieinc.co\nthe next record that i wanted to touch\non are the a and aaa records and this is\nshort for address records for ipv4 and\nipv6 ip addresses respectively and this\nrecord points a domain name to an ip\naddress for example when you type wwe\nin a web browser the dns system will\ntranslate that domain name\nto the ip address of 52.54.92.195\nusing the a record information stored in\nthe bowtieinc.co\ndns zone file the a record links a\nwebsite's domain name to an ipv4 address\nthat points to the server where the\nwebsite's files live now when it comes\nto an aaa record this links a website's\ndomain to an ipv6 address that points to\nthe same server where the website's\nfiles live a records are the simplest\ntype of dns records and one of the\nprimary records used in dns servers you\ncan do a lot with a records including\nusing multiple a records for the same\ndomain in order to provide redundancy\nthe same can be said\nfor aaa records additionally multiple\ndomains could point to the same address\nin which case each would have its own a\nor aaa record pointing to that same ip\naddress\nmoving on to cname records a c name\nrecord short for canonical name record\nis a type of resource record that maps\none domain name to another this can be\nreally convenient when running multiple\nservices like an ftp server and an\ne-commerce server each running on\ndifferent ports from a single ip address\nyou can for example\npoint ftp ftp.bowtieinc.co\nand shop.bowtieinc.co\nto the dns entry for bowtieinc.co\nwhich in turn has an a record which\npoints to the ip address so if the ip\naddress ever changes\nyou only have to change the record in\none place in the dns a record for bow\ntie inc dot co and just as a note cname\nrecords must always point to another\ndomain name and never directly to an ip\naddress next up are txt records a text\nrecord or txt for short is a type of\nresource record that provides text\ninformation to sources outside your\ndomain that can be used for a number of\narbitrary purposes the records value can\nbe either human or machine readable text\nin many cases text records are used to\nverify domain ownership or even to\nprovide human readable information about\na server a network or a data center it\nis also often used in a more structured\nfashion to record small amounts of\nmachine readable data into the dns\nsystem a domain may have multiple tax\nrecords associated with it\nprovided the dns server implementation\nsupports this each record can in turn\nhave one or more character strings in\nthis example\ngoogle wants to verify the bowtieinc.co\ndomain so that g suite can be set up and\nneeds verification through the domain to\ngoogle through creating a text record\nand adding it to the zone google will\nthen supply a text verification record\nto add to the domain host's dns records\nand start to scan for the text record to\nverify the domain\nthe supplied text record is then added\nby the domain administrator and behind\nthe scenes google is doing a\nverification check at timed intervals\nwhen google finally sees the record\nexists the domain ownership is confirmed\nand g suite can be enabled for the\ndomain and this is a typical example of\nhow tax records are used now moving on\nto mx records a dns\nmx record also known as the mail\nexchange record is the resource record\nthat directs email to a mail server the\nmx record indicates how email messages\nshould be routed and to which server\nmail should go to like cname records an\nmx record must always point to another\ndomain now mx records consist of two\nparts the priority\nand the domain name the priority are the\nnumbers before the domains for these mx\nrecords and indicate the preference of\nthe order in which the mail server\nshould be used the lower the preference\nnumber the higher the priority so in\nthis example\nlaura is emailing tony bowtie at tony at\nbowtieinc.co\nthe mx records are part of this process\nas dns needs to know where to send the\nmail to and we'll look at the domain\nattached to the email address which is\nbowtieinc.co so the dns client will run\na regular dns query by first going to\nthe root then to the\ncotld and finally to bowtieinc.co\nit will then receive the mx record which\nin this example is two of them the first\none being mail representing\nmail.bowtieinc.co\nand then the second one is a different\nmail server outside the current domain\nand in this case is a google mail server\nof aspmx.l.google.com\nand this is a fully qualified domain\nname as the dot on the right of this\nrecord suggests so here the server will\nalways try mail.bowtieinc.co\nfirst because 5 is lower than 10. and\nthis will give mail.bowtieinc.co\nthe higher priority in the result of a\nmessage send failure the server will\ndefault to aspmx.l.google.com\nif both values are the same then it\nwould be low balanced across both\nservers whichever is used the server\ngets the result of the query back and it\nuses this to connect to the mail server\nfor bowtieinc.co via the smtp protocol\nand it uses this protocol to deliver all\nemail and this is how mx records are\nused for email the next record i wanted\nto cover are the pointer records\nalso known as ptr records for short and\nthis provides the domain name associated\nwith an ip address so a dns pointer\nrecord is exactly the opposite of the a\nrecord which provides the ip address\nassociated with the domain name dns\npointer records are used in reverse dns\nlookups as we discussed earlier when a\nuser attempts to reach a domain name in\ntheir browser a dns lookup occurs\nmatching the domain name to the ip\naddress a reverse dns lookup is the\nopposite of this process and it is a\nquery that starts with the ip address\nand looks up the domain name while dnsa\nrecords are stored under the given\ndomain name dns pointer records are\nstored under the ip address reverse and\nending in dot i n\na d d r dot arpa so in this example the\npointer record for the iap address\n52.54.90\nwould be stored under 195.92.54.52\ndot in\naddr dot arpa ipv6 addresses are\nconstructed differently from ipv4\naddresses and ipv6 pointer records exist\nin a different namespace\nwithin.arpa ipv6 pointer records are\nstored under the ipv6 address reversed\nand converted into 4-bit sections as\nopposed to 8-bit sections as in ipv4 and\nas well the domain.ip6.arpa\nis added at the end pointer records are\nused most commonly in reverse dns\nlookups for anti-spam troubleshooting\nemail delivery issues and logging and so\nthe last record that i wanted to cover\nare the soa records also known as the\nstart of authority records and this\nresource record is created for you when\nyou create your managed zone and\nspecifies the authoritative information\nincluding global parameters about a dns\nzone the soa record stores important\ninformation about a domain or zone such\nas the email address of the\nadministrator when the domain was last\nupdated and how long the server should\nwait between refreshes every dns zone\nregistered must have an soa record as\nper the rfc 1035 and there is exactly\none soa record per zone the soa record\ncontains the core information about your\nzone so it is not possible for your zone\nto work without that information and i\nwill include a link in the lesson text\nfor those who are interested in diving\ndeeper and understanding all the\ninformation that is covered under these\nsoa records a properly optimized and\nupdated soa record can reduce bandwidth\nbetween name servers increase the speed\nof website access and ensure the site is\nalive even when the primary dns server\nis down and so that about covers\neverything that i wanted to discuss when\nit comes to resource records within dns\nso you can now mark this lesson as\ncomplete\nand let's move on to the next one\n[Music]\nwelcome back\nin this lesson i'm going to be covering\nnetwork address translation also known\nas nat for short this is a common\nprocess\nused in home business and any cloud\nnetworks that you will encounter knowing\nand understanding that will help you\nachieve why you would use it and what\nmakes it such a necessary process\nnow there's quite a bit to cover here so\nwith that being said let's dive in\nnow at a high level nat is a way to map\nmultiple local private ip addresses to a\npublic ip address before transferring\nthe information this is done by altering\nthe network address data in the ip\nheader of the data packet while\ntraveling through a network towards the\ndestination\nas packets pass through a nat device\neither the source or destination ip\naddress is changed\nthen packets returning in the other\ndirection are translated back to the\noriginal addresses\nand this is a process that is typically\nused in most home routers that are\nprovided by your internet service\nprovider now originally nat was designed\nto deal with the scarcity of free ipv4\naddresses increasing the number of\ncomputers that can operate off a single\npublicly routable ip address and so\nbecause devices in the private ip space\nsuch as 192.168.0.0\ncannot traverse the public internet\nthat is needed for those devices to\ncommunicate with the public internet now\nipv6 was designed to overcome the ipv4\nshortage and has tons of available\naddresses and therefore there is no real\nneed for nat when it comes to ipv6 now\nnat has an additional benefit of adding\na layer of security and privacy by\nhiding the ip address of your devices\nfrom the outside world and only allowing\npackets to be sent and received from the\noriginating private device and so this\nis a high level of what nat is now there\nare multiple types of not that i will be\ncovering\nwhich at a high level do the same thing\nwhich is translate private i p addresses\nto public ip addresses yet different\ntypes of nat handles the process\ndifferently so first we have static nat\nwhich maps a single private ip address\nto a public ip address\nso a one-to-one mapping that gives the\ndevice with the private ip address\naccess to the public internet in both\ndirections\nthis is commonly used where one specific\ndevice with a private address needs\naccess to the public internet the next\ntype of nat is dynamic nan and this is\nsimilar to static nat but doesn't hold\nthe same static allocation a private ip\naddress space\nis mapped to a pool of public ip\naddresses and are allocated randomly as\nneeded when the ip address is no longer\nneeded the ip address is returned back\nto the pool ready to be used by another\ndevice\nthis method is commonly used where\nmultiple internal hosts with private i p\naddresses\nare sharing an equal or fewer amount of\npublic i p addresses\nand is designed to be an efficient use\nof public ips and finally there is port\naddress translation or pat\nwhere multiple private ip addresses are\ntranslated using a single public ip\naddress and a specific port\nand this is probably what your home\nrouter is using and will cover all the\ndevices you use in your home network\nthis method uses ports to help\ndistinguish individual devices\nand is also the method that is used for\ncloudnat in google cloud which i will be\ncovering in a later lesson and so i\nwanted to get into a bit more detail on\nhow these methods work\nstarting with static not\nnow to set the stage for static not i'm\ngoing to start off with a private\nnetwork here on the left\nand the public ip space here on the\nright\nand the router or not device in the\nmiddle in this example there is a server\non the left that needs access to\nexternal services and for this example\nthe external service we are using is the\nbowtress service an image sharing site\nfor all sorts of awesome bow ties\nso the server on the left is private\nwith a private ip address of 192.168.0.5\nand this means it has an address in the\nip version 4 private address space\nmeaning that it cannot route packets\nover the public internet because it only\nhas a private ip\nthe beautress service on the other hand\nhas a public ip address which is\n54.5.4.9\nso the issue we run into is that the\nprivate address can't be routed over the\npublic internet because it's private and\nthe public address of the beau trust\nservice\ncan't directly communicate with any\nprivate address because public and\nprivate addresses can communicate over\nthe public internet what we need is to\ntranslate the private address that the\nserver on the left has\nto a public ip that can communicate with\nthe service on the right and vice versa\nnow then that device will map the\nprivate ip to public ip\nusing and maintaining a nat table and in\nthis case of static nat the nat device\nwill have a one-to-one mapping of the\nprivate ip address to a public ip\naddress and can be allocated to the\ndevice specified which in this case is\nthe server marked as 192.168.0.15\nand so in order for the server on the\nleft\nto communicate with the beautress\nservice the server will generate a\npacket as normal with the source ip of\nthe packet being the server's private ip\naddress and the destination ip of the\npacket being the ip of the bowtrust\nservice now the router in the middle is\nthe default gateway for any destination\nso any ip packets which are destined for\nanything but the local network are sent\nto the router so as you can see here\nwith the entry in the table it will\ncontain the private i p address of\n192.168.0.15\nand mapped to the public address which\nin this case is 73.6.2.33\nand these are statically mapped to one\nanother and so as the packet passes\nthrough the nat device the source\naddress of the packet is translated\nfrom the private address to the mapped\npublic address and this results in a new\npacket so this new packet still has\nbeautrest as the destination\nbut now it has a valid public ip address\nas the source\nand so this is the translation that\nhappens through nat now this process\nworks in a similar way in the other\ndirection\nso when the beautress service receives\nthe packet it sees the source as this\npublic ip\nso when it responds with data its packet\nhas its ip address as the source\nand the previous server's public ip\naddress as the destination\nso it sends this packet back to this\npublic ip so when the packet arrives at\nthe nat device the table is checked\nit recognizes then that the ip is for\nthe server and so this time for incoming\ntraffic\nthe destination ip address is updated to\nthe corresponding private ip address and\nthen the packet is forwarded through to\nthe private server and this is how\nstatic nat works the source i p address\nis translated from the mapped private ip\nto public ip\nand for incoming traffic the destination\ni p address is translated from the\nallocated public ip to the corresponding\nprivate ip all without having to\nconfigure a public ip\non any private device\nas they always hold their private ip\naddresses\nnow i wanted to supply an analogy for\nnat and so a very common analogy that is\nused is that of a phone service so in\nthis example\nlaura is the new manager of bow tie inc\nnew location in montreal and has put in\na new public phone number of\n514-555-8437\nalthough as you can see here laura also\nhas a private extension\nof one three three seven now if george\ncalled laura at that public phone number\nhe would reach laura without ever\nknowing her private extension so the\nprivate extension acts as that private\nip address\nand the public phone number would act as\nthe public ip address and this would be\nthe telephone analogy for static nat and\nso this is the end of part one of this\nlesson it was getting a bit long so i\ndecided to break it up this would be a\ngreat opportunity for you to get up and\nhave a stretch get yourself a coffee or\na tea and whenever you're ready you can\njoin me in part two where we will be\nstarting immediately from the end of\npart one so you can go ahead and\ncomplete this video and i will see you\nin part two\n[Music]\nwelcome back this is part two of the\nnetwork address translation lesson and\nwe will be starting exactly where we\nleft off from part 1.\nso with that being said let's dive in\nnow moving on to dynamic nat\nthis method is similar to static nat\nexcept that devices are not allocated a\npermanent public ip\na public ip address is allocated from a\npool of ip addresses\nas they are needed and the mapping of\npublic to private is allocation base in\nthis example there are two devices on\nthe left and according to the nat table\nthere are two public ip addresses\navailable for use\n73.6.2.33\nand 73.6.2.34\nso when the laptop on the left is\nlooking to access the beautress service\nit will generate a packet where the\nsource ip\nis the private address of 192.168.0.13\nand the destination ip is 54.5.4.9\nso it sends this packet and again the\nrouter in the middle is the default\ngateway for anything that isn't local as\nthe packet passes through the router or\nthe nat device\nit checks if the private ip has a\ncurrent allocation of public addressing\nfrom the pool and if it doesn't and one\nis available it allocates one\ndynamically and in this case\n73.6.2.34\nis allocated\nso the packet's source i p address\nis translated to this address\nand the packets are sent to the\nbeautress service and so this process is\nthe same as static not thus far\nbut because dynamic nat allocates these\nip addresses dynamically multiple\nprivate devices can share a single\npublic ip\nas long as the devices are not using the\nsame public ip at the same time and so\nonce the device is finished\ncommunication the ip is returned back to\nthe pool and is ready for use by another\ndevice now just as a note if there's no\npublic ip addresses available\nthe router rejects any new connections\nuntil you clear the nat mappings\nbut if you have as many public ip\naddresses as hosts in your network\nyou won't encounter this problem and so\nin this case since the lower server is\nlooking to access the fashion tube\nservice\nthere is an available public ip address\nin the pool\nof 73.6.2.33\nthus giving it access to the public\ninternet and access to fashion tube so\nin summary the nat device maps a private\nip with the public ip in a nat table and\npublic ips are allocated randomly and\ndynamically from a pool now this type of\nknot is used where multiple internal\nhosts with private ip addresses\nare sharing an equal or fewer amount of\npublic ip addresses when all of those\nprivate devices at some time will need\npublic access\nnow an example of dynamic nat using the\ntelephone analogy\nwould be if laura and two other bow tie\ninc employees\nlisa and jane\nhad private phone numbers\nand this would represent your private\nips\nin this example bowtie inc has three\npublic phone numbers\nnow when any employee makes an outbound\ncall they are routed to whichever public\nline is open at the time so the caller\nid on the receiver's end\nwould show any one of the three public\nphone numbers depending on which one was\ngiven to the caller and this would\nrepresent the public ips in the public\nip pool\nnow the last type of nat which i wanted\nto talk about is the one which you're\nprobably most familiar with and this is\nport address translation which is also\nknown as not overload and this is the\ntype of not you likely use on your home\nnetwork port address translation is what\nallows a large number of private devices\nto share one public ip address\ngiving it a many to one mapping\narchitecture now in this example we'll\nbe using three private devices on the\nleft\nall wanting to access fashiontube on the\nright\na popular video sharing website of the\nlatest men's fashions\nshared by millions across the globe\nand this site has a public ip of\n62.88.44.88\nand accessed using tcp port 443 now the\nway that port address translation or pat\nworks\nis to use both the ip addresses and\nports\nto allow for multiple devices to share\nthe same public ip every tcp connection\nin addition to a source and destination\nip address\nhas a source and destination port the\nsource port is randomly assigned by the\nclient so as long as the source port is\nalways unique then many private clients\ncan use the same public ip address and\nall this information is recorded in the\nnat table on the nat device\nin this example let's assume that the\npublic ip address of this nat device is\n73.6.2.33\nso when the laptop in the top left\ngenerates a packet and the packet is\ngoing to fashion tube its destination ip\naddress is 62.80\nand its destination port is 443. now the\nsource ip of this packet is the laptop's\nprivate ip address of 192.168.6\nand the source port is 35535\nwhich is a randomly assigned ephemeral\nport so the packet is routed through the\nnat device\nand in transit the nat device records\nthe source ip and the original source\nprivate port\nand it allocates a new public ip address\nand a new public source port which in\nthis case is 8844\nit records this information inside the\nnot table as shown here and it adjusts\nthe pocket so that its source ip address\nis the public ip address that the nat\ndevice is using and the source port is\nthis newly allocated source port and\nthis newly adjusted packet is forwarded\non to fashiontube now the process is\nvery similar with the return traffic\nwhere the packet will verify the\nrecorded ips and ports\nin the nat table before forwarding the\npacket back to the originating source\nnow if the middle laptop with the ip of\n192.168.0.14\ndid the same thing then the same process\nwould be followed all of this\ninformation would be recorded in the nat\ntable a new public source port would be\nallocated and would translate the packet\nadjusting the packet's source ip address\nand source port as well the same process\nwould happen for the laptop on the\nbottom generating a packet with the\nsource and destination ip with the\naddition of the source and destination\nports and when routed through the nat\ndevice goes through its translation\nrecording the information in the nat\ntable and reaching its destination again\nreturn traffic will be verified by the\nrecorded ips and ports in the nat table\nbefore forwarding the packet back to its\noriginating source and so just as a\nsummary when it comes to port address\ntranslation the nat device records the\nsource ip and source port in a nat table\nthe source ip is then replaced with a\npublic ip and public source port\nand are allocated from a pool that\nallows overloading and this is a\nmany-to-one architecture\nand so for the telephone analogy for pat\nlet's use a phone operator example so in\nthis instance george is trying to call\nlaura now george only knows lark laura's\nexecutive admin and only has lark's\nphone number george does not have\nlaura's private line lark's public phone\nnumber is the equivalent to having a\npublic ip address george calls lark who\nthen connects george to laura the caveat\nhere is that lark never gives out\nlaura's phone number in fact laura\ndoesn't have a public phone number and\ncan only be called by lark and here's\nwhere nat can add an extra layer of\nsecurity by only allowing needed ports\nto be accessed without allowing anyone\nto connect to any port now i hope this\nhas helped you understand the process of\nnetwork address translation\nhow the translation happens\nand the process of using a nat table to\nachieve packet translation\nalong with its destination this is so\ncommon in most environments that you\nwill encounter and it's very important\nto fully understand the different types\nof not\nand how it can be used in these types of\nenvironments and so that's pretty much\nall i wanted to cover\non this lesson of network address\ntranslation so you can now mark this\nlesson as complete\nand let's move on to the next one\n[Music]\nwelcome back so now that we've covered\nthe fundamentals of dns along with the\ndifferent record types i wanted to focus\nin on google cloud's dns service called\ncloud dns now cloud dns is a fully\nmanaged service that manages dns servers\nfor your specific zones and since cloud\ndns shows up on the exam only on a high\nlevel i will be giving an overview of\nwhat this service can do so with that\nbeing said let's dive in now cloud dns\nacts as an authoritative dns server for\npublic zones that are visible to the\ninternet or for private zones that are\nvisible only within your network and is\ncommonly referred to as google's dns as\na service cloud dns has servers that\nspan the globe making it a globally\nresilient service now while it is a\nglobal service there is no way to select\nspecific regions to deploy your zones\nand dns server policies you simply add\nyour zones records and policies and it\nis distributed amongst google's dns\nservers across the globe cloud dns is\nalso one of the few google cloud\nservices that offers 100\navailability along with low latency\naccess\nby leveraging google's massive global\nnetwork backbone now in order to use\ncloud dns with a specific publicly\navailable domain a domain name must be\npurchased through a domain name\nregistrar and you can register a domain\nname through google domains or another\ndomain registrar of your choice cloud\ndns does not provide this service and\njust as a note that to create private\nzones the purchasing of a domain name is\nnot necessary now as stated earlier\ncloud dns offers the flexibility of\nhosting both public zones and privately\nmanaged dns zones now public zones are\nzones that are visible to the public\ninternet and so when cloud dns is\nmanaging your public domain it has\npublic authoritative name servers that\nrespond to public zone dns queries for\nyour specific domain now when it comes\nto private zones these enable you to\nmanage custom domain names\nfor your google cloud resources without\nexposing any dns data to the public\ninternet a private zone can only be\nqueried by resources in the same project\nwhere it is defined and as we discussed\nearlier a zone is a container of dns\nrecords that are queried by dns so from\na private zone perspective these can\nonly be queried by one or more vpc\nnetworks that you authorize to do so and\njust as a note the vpc networks that you\nauthorize must be located in the same\nproject as the private zone to query\nrecords hosted in manage private zones\nin other projects the use of dns peering\nis needed now i don't want to get too\ndeep into dns peering\nbut just know that vpc network peering\nis not required for the cloud dns\npeering zone to operate peering zones do\nnot depend on vpc network peering now\neach managed zone that you create is\nassociated with a google cloud project\nand once this zone is created it is\nhosted by google's managed name servers\nnow these zones are always hosted on\ngoogle's manage name servers within\ngoogle cloud so you would create records\nand record sets and these servers would\nthen become allocated to that specific\nzone hosting your records and record\nsets and just as a quick reminder a\nrecord set is the collection of dns\nrecords in a zone that have the same\nname and are of the same type most\nrecords contain a single record but it's\nnot uncommon to see record sets a great\nexample of this are a records or ns\nrecords which we discussed earlier and\nthese records can usually be found in\npairs\nand so now to give you a practical\nexample of cloud dns i wanted to bring\nthe theory into practice through a short\ndemo where i'll be creating a managed\nprivate zone so whenever you're ready\njoin me in the console and so here we\nare back in the console and i'm logged\nin as tonybowties gmail.com and i'm\ncurrently in project bowtie inc so now\nto get to cloud dns i'm going to go over\nto the navigation menu i'm going to\nscroll down to network services and go\nover to cloud dns\nand because i currently don't have any\nzones\ni'm prompted with only one option which\nis to create a zone and so i'm going to\ngo ahead and create a zone and so here\ni've been prompted with a bunch of\ndifferent options in order to create my\ndns zone and so the first option that i\nhave is zone type and because i'm\ncreating a private zone i'm going to\nsimply click on private and i need to\nprovide a zone name which i'm going to\ncall tony bowtie next i'm going to have\nto provide a dns name which i will call\ntony bowtie dot private and under the\ndescription i'm just going to type in\nprivate zone for tony bowtie and so the\nnext field i've been given is the\noptions field where it is currently\nmarked as default private and so if i go\nover here to the right hand side and\nopen up the drop down menu i'm given the\noptions to forward queries to another\nserver dns peering manage reverse lookup\nzones and use a service directory\nnamespace and so depending on your type\nof scenario one of these five options in\nmost cases will suffice so i'm going to\nkeep it under default private and under\nnetworks it says your private zone will\nbe visible to the selected networks\nand so i'm going to click on the drop\ndown and i'm giving only the option of\nthe default network because it's the\nonly network that i have and so i'm\ngoing to select it\nand i'm going to click on the white\nspace and if i feel so inclined i can\nsimply click on the shortcut for the\ncommand line and here i'm given this\nspecific commands if i was to use the\ncommand line in order to create this dns\nzone so i'm going to click on close here\nand i'm going to click on create and as\nyou can see here my zone has been\ncreated along with a couple of dns\nrecords the first one being my name\nserver records as well as my start of\nauthority records and so as a note to\nknow for the exam when creating a zone\nthese two records will always be created\nboth the soa record and the ns record\nand moving on to some other options here\ni can add another record set if i choose\nto again the dns name the record type\nwhich i have a whole slew of record\ntypes to choose from it's ttl and the ip\naddress but i'm not going to add any\nrecords so i'm just going to cancel and\nby clicking in use by i can view which\nvpc network is using this zone and as\nexpected the default network shows up\nand i also have the choice of adding\nanother network but since i don't have\nany other networks i can't add anything\nso i'm going to simply cancel i also\nhave the option of removing any networks\nso if i click on this i can remove the\nnetwork or i can also remove the network\nby clicking on the hamburger menu and so\nas you can see i have a slew of options\nto choose from when creating zones and\nrecord sets and so that about covers\neverything that i wanted to show you\nhere in cloud dns\nbut before i go i'm going to go ahead\nand clean up and i'm just going to click\non the garbage can here on the right\nhand side of the zone and i'm going to\nbe prompted if i want to delete the zone\nyes i do so i'm going to click on delete\nand so that pretty much covers\neverything that i wanted to show you\nwith regards to cloud dns so you can now\nmark this lesson as complete and let's\nmove on to the next one\nwelcome back now before we step into the\ncompute engine section of the course\ni wanted to cover a basic foundation of\nwhat makes these vms possible\nand this is where a basic understanding\nof virtualization comes into play now\nthis is merely an introductory lesson to\nvirtualization and i won't be getting\ntoo deep into the underpinnings it\nserves as just a basic foundation as to\nhow compute engine gets its features\nunder the hood and how they are possible\nthrough the use of virtualization for\nmore in-depth understanding on\nvirtualization i will be including some\nlinks in the lesson text for those who\nare looking to learn more but for now\nthis will provide just enough theory to\nhelp you understand how compute engine\nworks\nso with that being said let's dive in so\nwhat exactly is virtualization well\nvirtualization is the process of running\nmultiple operating systems on a server\nsimultaneously now before virtualization\nbecame popular a standard model was used\nwhere an operating system would be\ninstalled on a server\nso the server would consist of typical\nhardware like cpu\nmemory network cards and other devices\nsuch as video cards usb devices and\nstorage and then the operating system\nwould run on top of the hardware now\nthere is a middle layer of the operating\nsystem a supervisor if you will that is\nresponsible for interacting with\nunderlying hardware and this is known as\nthe kernel the kernel manages the\ndistribution of the hardware resources\nof the computer efficiently and fairly\namong all the various processes running\non the computer now the kernel operates\nunder what is called kernel mode or\nprivilege mode as it runs privileged\ninstructions that interacts with the\nhardware directly now the operating\nsystem allows other software to run on\ntop of it like an application\nbut cannot interact directly with the\nhardware it must interact with the\noperating system in user mode or\nnon-privileged mode so when lark decides\nto do something on an application that\nneeds to use the system hardware that\napplication needs to go through the\noperating system it needs to make what's\nknown as a system call and this is the\nmodel of running one operating system on\na single server now when passed servers\nwould traditionally run one application\non one server with one operating system\nin the old system the number of servers\nwould continue to mount\nsince every new application required its\nown server and its own operating system\nas a result expensive hardware resources\nwere purchased but not used and each\nserver would use approximately under 20\nof its resources on average server\nresources were then known as\nunderutilized now there came a time when\nmultiple operating systems were\ninstalled on one computer\nisolated from each other with each\noperating system running their own\napplications this was a perfect model to\nconsolidate hardware and keep\nutilization high but there is a major\nissue that arose each cpu at this given\nmoment in time could only have one thing\nrunning as privileged so having multiple\noperating systems running on their own\nin an unmodified state\nand expecting to be running on their own\nin a privileged state running privileged\ninstructions\nwas causing instability in systems\ncausing not just application crashes but\nsystem crashes now a hypervisor is what\nsolved this problem it is a small\nsoftware layer that enables multiple\noperating systems to run alongside each\nother\nsharing the same physical computing\nresources these operating systems come\nas virtual machines or vms and these are\nfiles that mimic an entire computing\nhardware environment in software the\nhypervisor also known as a virtual\nmachine monitor or vmm\nmanages these vms as they run alongside\neach other it separates virtual machines\nfrom each other logically assigning each\nits own slice of the underlying\ncomputing cpu memory and other devices\nlike graphics network and storage this\nprevents the vms from interfering with\neach other so if for example one\noperating system suffers a crash or a\nsecurity compromise the others will\nsurvive and continue running now the\nhypervisor was never as efficient as how\nyou see it here it went through some\nmajor iterations that gave its structure\nas we know it today initially\nvirtualization had to be done in\nsoftware or what we now refer to as the\nhost machine\nand the operating system with its\napplications put in logical containers\nknown as virtual machines or guests the\noperating system would be installed on\nthe host which included additional\ncapabilities called a hypervisor and\nallowed it to make the necessary\nprivileged calls to the hardware\nhaving full access to the host the\nhypervisor exposed the interface of the\nhardware device that is available on the\nhost\nand allowed it to be mapped to the\nvirtual machine and emulated the\nbehavior of this device and this allowed\nthe virtual machine using the operating\nsystem drivers that were designed to\ninteract with the emulated device\nwithout installing any special drivers\nor tools\nas well as keeping the operating system\nunmodified the problem here is that it\nwas all emulated and so every time the\nvirtual machines made calls back to the\nhost each instruction needed to be\ntranslated by the hypervisor\nusing what's called a binary translation\nnow without this translation the\nemulation wouldn't work and would cause\nsystem crashes bringing down all virtual\nmachines in the process now the problem\nwith this process is that it made the\nsystem painfully slow and it was this\nperformance penalty that caused this\nprocess to not be so widely adopted but\nthen another type of virtualization came\non the scene called para virtualization\nnow in this model a modified guest\noperating system is able to speak\ndirectly to the hypervisor and this\ninvolves having the operating system\nkernel to be modified and recompiled\nbefore installation onto the virtual\nmachine this would allow the operating\nsystem to talk directly with the\nhypervisor without any performance hits\nas there is no translation going on like\nan emulation para virtualization\nreplaces instructions that cannot be\nvirtualized with hyper calls that\ncommunicate directly with the hypervisor\nso a hypercall is based on the same\nconcept as a system call privileged\ninstructions\nthat accept instead of calling the\nkernel directly it calls the hypervisor\nand due to the modification in this\nguest operating system performance is\nenhanced as the modified guest operating\nsystem communicates directly with the\nhypervisor and emulation overhead is\nremoved the guest operating system\nbecomes almost virtualization aware yet\nthere is still a process whereby\nsoftware was used to speak to the\nhardware the virtual machines could\nstill not access the hardware directly\nalthough\nthings changed in the world of\nvirtualization when the physical\nhardware on the host became\nvirtualization aware and this is where\nhardware assisted virtualization came\ninto play now hardware assisted\nvirtualization is an approach that\nenables efficient\nfull virtualization using help from\nhardware capabilities\non the host cpu using this model the\noperating system has direct access to\nresources without any hypervisor\nemulation or operating system\nmodification the hardware itself becomes\nvirtualization aware the cpu contains\nspecific instructions and capabilities\nso that the hypervisor can directly\ncontrol and configure this support it\nalso provides improved performance\nbecause the privileged instructions from\nthe virtual machines are now trapped and\nemulated in the hardware directly this\nmeans that the operating system kernels\nno longer need to be modified and\nrecompiled like in para virtualization\nand can run as is at the same time the\nhypervisor also does not need to be\ninvolved in the extremely slow process\nof binary translation now there is one\nmore iteration that i wanted to discuss\nwhen it comes to virtualization and that\nis kernel level virtualization\nnow instead of using a hypervisor\nkernel level virtualization runs a\nseparate version of the linux kernel and\nsees the associated virtual machine as a\nuser space process on the physical host\nthis makes it easy to run multiple\nvirtual machines on a single host a\ndevice driver is used for communication\nbetween the main linux kernel and the\nvirtual machine every vm is implemented\nas a regular linux process\nscheduled by the standard linux\nscheduler\nwith dedicated virtual hardware like a\nnetwork card\ngraphics adapter\ncpu memory and disk hardware support by\nthe cpu is required for virtualization a\nslightly modified emulation process is\nused as the display and execution\ncontainers for the virtual machines in\nmany ways kernel level virtualization is\na specialized form of server\nvirtualization and this is the type of\nvirtualization platform that is used in\nall of google cloud now with this type\nof virtualization because of the kernel\nacting as the hypervisor it enables a\nspecific feature called nested\nvirtualization now with nested\nvirtualization it is made possible to\ninstall a hypervisor on top of the\nalready running virtual machine\nand so this is what google cloud has\ndone now you're probably wondering after\ngoing through all the complexities\ninvolved with previous virtualization\nmodels\nwhat makes this scenario worthwhile well\nusing nested virtualization it makes it\neasier for users to move their\non-premises\nvirtualized workloads to the cloud\nwithout having to import and convert vm\nimages so in essence\nit eases the use when migrating to cloud\na great use case for many but wouldn't\nbe possible on google cloud without the\nbenefit of running kernel level\nvirtualization now this is an advanced\nconcept that does not show up on the\nexam but i wanted you to understand\nvirtualization at a high level\nso that you can understand nested\nvirtualization within google cloud\nas it is a part of the feature set of\ncompute engine and so that's pretty much\nall i wanted to cover when it comes to\nvirtualization\nso you can now mark this lesson as\ncomplete and let's move on to the next\none\n[Music]\nwelcome back now earlier on in the\ncourse i discussed compute engine at a\nhigh level to understand what it is and\nwhat it does the goal for this section\nis to dive deeper into compute engine as\nit comes up heavily on the exam and so i\nwant to make sure i expose all the\nnuances\nas well it is the go-to service offering\nfrom google cloud when looking to solve\nany general computing needs with this\nlesson specifically i will be going into\nwhat makes up an instance and the\ndifferent options that are available\nwhen creating the instance so with that\nbeing said let's dive in\nnow compute engine lets you create and\nrun virtual machines known as instances\nand host them on google's infrastructure\ncompute engine is google's\ninfrastructure as a service virtual\nmachine offering so it being an is\nservice google takes care of the\nvirtualization platform the physical\nservers the network and storage along\nwith managing the data center and these\ninstances are available in different\nsizes depending on how much cpu and\nmemory you might need as well compute\nengine offers different family types for\nthe type of workload you need it for\neach instance is charged by the second\nafter the first minute as this is a\nconsumption based model and as well\nthese instances are launched in a vpc\nnetwork in a specific zone and these\ninstances will actually sit on hosts in\nthese zones and you will be given the\noption of using a multi-tenant host\nwhere the server that is hosting your\nmachine is shared with others\nbut please note that each instance is\ncompletely isolated from the other so no\none can see each other's instances\nnow you're also given the option of\nrunning your instance on a sole tenant\nnode whereby your instance is on its own\ndedicated hosts that is reserved just\nfor you and you alone you don't share it\nwith anyone else and this is strictly\nfor you only now although this option\nmay sound really great it does come at a\nsteep cost\nso only if your use case requires you to\nuse a sole tenant node for security or\ncompliance purposes i recommend that you\nstick with a multi-tenant host when\nlaunching your instances and this is\nusually the most common selection for\nmost\nnow compute engine instances can be\nconfigured in many different ways and\nallow you the flexibility to fulfill the\nrequests for your specific scenario and\nas you can see here there are four\ndifferent base options when it comes to\nconfiguration of the instance that you\nare preparing to launch and so i wanted\nto take time to go through them in just\na bit of detail for context starting\nfirst with the machine type which covers\nvcpu and memory now there are many\ndifferent predefined machine types that\ni will be covering in great depth in a\ndifferent lesson but for now just know\nthat they are available in different\nfamilies depending on your needs and can\nbe chosen from the general\ncompute optimize and memory optimize\nmachine types they are available in\nintel or amd flavors and if the\npre-defined options doesn't fit your\nneed you have the option of creating a\ncustom machine that will suit your\nspecific workload now when creating a vm\ninstance on compute engine each virtual\ncpu or vcpu is implemented as a single\nhardware hyper thread on one of the\navailable cpu processors that live on\nthe host now when choosing the amount of\nvcpus on an instance\nyou must take into consideration the\ndesired network throughput as the amount\nof vcpus will determine this throughput\nas the bandwidth is determined per vm\ninstance not per network interface or\nper ip address and so the network\nthroughput is determined by calculating\n2 gigabits per second for every vcpu on\nyour instance so if you're looking for\ngreater network throughput then you may\nwant to select an instance with more\nvcpus and so once you've determined a\nmachine type for your compute engine\ninstance you will need to provide it an\nimage with an operating system to boot\nup with now when creating your vm\ninstances you must use an operating\nsystem image to create boot disks for\nyour instances now compute engine offers\nmany pre-configured public images that\nhave compatible linux or windows\noperating systems and these operating\nsystem images can be used to create and\nstart instances compute engine uses your\nselected image to create a persistent\nboot disk for each instance by default\nthe boot disk for your instance is the\nsame size as the image that you selected\nand you can use most public images at no\nadditional cost but please be aware that\nthere are some premium images that do\nadd additional cost to your instances\nnow moving on to custom images this is a\nboot disk image that you own and control\naccess to a private image if you will\ncustom images are available only to your\ncloud project unless you specifically\ndecide to share them with another\nproject or another organization you can\ncreate a custom image from boot disks or\nother images then use the custom image\nto create an instance custom images that\nyou import to compute engine add no cost\nto your instances but do incur an image\nstorage charge\nwhile you keep your custom image in your\nproject now the third option that you\nhave is by using a marketplace image now\ngoogle cloud marketplace lets you\nquickly deploy\nfunctional software packages that run on\ngoogle cloud you can start up a software\npackage without having to manually\nconfigure the software the vm instances\nthe storage or even the network settings\nthis is a all-in-one instance template\nthat includes the operating system and\nthe software pre-configured and you can\ndeploy a software package whenever you\nlike and is by far the easiest way to\nlaunch a software package and i will be\ngiving you a run through on these\nmarketplace images in a later demo now\nonce you've decided on your machine type\nas well as the type of image that you\nwanted to use moving into the type of\nstorage that you want would be your next\nstep now when configuring a new instance\nyou will need to create a new boot disk\nfor it and this is where performance\nversus cost comes into play as you have\nthe option to pay less and have a slower\ndisk speed or lower iops or you can\nchoose to have fast disk speed with\nhigher iops but pay a higher cost and so\nthe slowest and most inexpensive of\nthese options is the standard persistent\ndisk which are backed by standard hard\ndisk drives the balance persistent disks\nare backed by solid state drives and are\nfaster and can provide higher iops than\nthe standard option and lastly ssd is\nthe fastest option which also brings\nwith it the highest iops available for\npersistent disks now outside of these\nthree options for persistent disks you\nalso have the option of choosing a local\nssd and these are solid state drives\nthat are physically attached to the\nserver that hosts your vm instances and\nthis is why they have the highest\nthroughput and lowest latency than any\nof the available persistent disks just\nas a note the data that you store on a\nlocal ssd persists only until the\ninstance is stopped or deleted which is\nwhy local ssds are suited only for\ntemporary storage such as caches or swap\ndisk and so lastly moving into\nnetworking\neach network interface of a compute\nengine instance is associated with a\nsubnet of a unique vpc network as you've\nseen in the last section you can do this\nwith an auto a default or a custom\nnetwork each network is available in\nmany different regions and zones within\nthat region we've also experienced\nrouting traffic for our instance both in\nand out of the vpc network\nby use of firewall rules targeting ip\nranges\nspecific network tags or by instances\nwithin the network now load balancers\nare responsible for helping distribute\nuser traffic\nacross multiple instances either within\nthe network or externally using a\nregional or global load balancer\nand i will be getting into low balancing\nin another section of the course but i\nwanted to stress that load balancers are\npart of instance networking that help\nroute and manage traffic coming in and\ngoing out of the network\nand so this is a high level overview of\nthe different configuration types that\ngo into putting together an instance and\ni will be diving deeper into each\nin this section as well i will be\nputting a hands-on approach to this by\ncreating an instance in the next lesson\nand focusing on the different available\nfeatures that you can use for your\nspecific use case and so this is all i\nwanted to cover for this lesson so you\ncan now mark this lesson as complete and\nlet's move on to the next one\n[Music]\nwelcome back now i know in previous\ndemonstrations we've built quite a few\ncompute engine instances and have\nconfigured them accordingly in this\ndemonstration we're going to go through\na build of another instance but i wanted\nto dig deeper into the specific\nconfigurations that are available for\ncompute engine so with that being said\nlet's dive in and so i am now logged in\nunder tony bowties gmail.com as well i\nam logged in under the bowtie inc\nproject so in order to kick off this\ndemo i'm going to head on over to the\ncompute engine console so i'm going to\ngo over to the navigation menu and i'm\ngoing to scroll down to compute engine\nand so here i'm prompted\nto either create or import a vm instance\nas well as taking the quick start and so\ni'm not going to import or take the\nquick start so i'm going to simply click\non create\nand so i want to take a moment here to\nfocus on the left hand menu where there\nare a bunch of different options to\ncreate any given instance so the first\nand default option allows me to create\nthe instance from scratch choosing the\nnew vm instance from template option\nallows me to create a new instance from\nan instance template and because i don't\nhave any instance templates i am\nprompted here with the option to create\none and so for those of you who are\nunfamiliar with instance templates\ntemplates are used in managed instance\ngroups and define instance properties\nfor when instances are launched within\nthat managed instance group but don't\nworry i will be covering instance groups\nand instant templates in a later lesson\nthe next option that's available is new\nvm instance from machine image and an\nimage is a clone or a copy of an\ninstance and again i will be covering\nthis in a separate lesson and going\nthrough all the details of machine\nimages but if i did have any machine\nimages i would be able to create my\ninstance from here but since i do not i\nam prompted with the option to create a\nnew machine image now the last option\nthat i wanted to show you is the\nmarketplace\nand so the marketplace has existing\nmachine images that are all\npre-configured with its proper operating\nsystem as well as the software to\naccompany it so for instance if i'm\nlooking to create a vm with a wordpress\ninstallation on it i can simply go up to\nthe top to the search bar type in\nwordpress and i will be presented with\nmany different options and i'm just\ngoing to choose the one here at the top\nand i am presented with 49 results of\nvirtual machines with different types of\nwordpress installations on them and\nthese are all different instances that\nhave been configured specifically for\nwordpress by different companies like\nlightspeed analog innovation and\ncognosis inc and so for this\ndemonstration i'm going to choose\nwordpress on centos 7\nand here i'm giving an overview about\nthe software itself i'm also given\ninformation about the company that\nconfigured this as well at the top i'm\ngiven a monthly estimated cost for this\nspecific instance and if i scroll down\nthe page i can get a little bit more\ninformation with regards to this image\nand as shown here on the right i can see\nmy pricing the usage fee will cost me\n109 a month along with the vm instance\ntype that the software is configured for\nthe amount of disk space and the\nsustained use discount i've also been\ngiven some links here for tutorials and\ndocumentation\nand i've also been given instructions\nfor maintenance and support i've been\ngiven both an email and a link to live\nsupport and of course at the bottom we\nhave the terms of service and this is a\ntypical software package amongst many\nothers that's available in the google\ncloud marketplace now i can go ahead and\nlaunch this if i choose but i'm going to\nchoose not to launch this and i'm going\nto back out and so just to give you some\ncontext with regards to enterprise\nsoftware\nsoftware packages like f5 and jenkins\nare also available in the google cloud\nmarketplace and again when i click on\nthe first option it'll give me a bunch\nof available options on jenkins and its\navailability from different companies on\ndifferent platforms now just as a note\nto update your existing deployment of a\nsoftware package\nyou have to redeploy the software\npackage from marketplace in order to\nupdate it but other than that caveat the\neasiest way to deploy a software package\nis definitely through the marketplace\nand so now that we've gone through all\nthe different options on how to create\nan instance i'm gonna go back and select\nnew vm instance so i can create a new vm\nfrom scratch and so i am prompted here\nat the top with a note telling me that\nthere was a draft that was saved from\nwhen i started to create in my new\ninstance but i navigated away from it\nand i have the option to restore the\nconfiguration i was working on and so\njust know that when you are in the midst\nof creating an instance\ngoogle cloud will automatically save a\ndraft of your build so that you are able\nto continue working on it later now i\ndon't really need this draft but i will\njust hit restore\nand for the name i'm going to keep it as\ninstance 1 and for the sake of this demo\ni'm going to add a label\nthe key is going to be environment and\nthe value will be testing i'm going to\ngo down to the bottom click save now\nwhen it comes to the geographic location\nof the instance using regions i can\nsimply click on the drop down and i will\nhave access to deploy this instance in\nany currently available region as\nregions are added they will be added\nhere as well and so i'm going to keep it\nas us east one\nand under zone i have the availability\nof putting it in any zone within that\nregion and so i'm going to keep it as us\neast 1b and just as another note once\nyou've deployed the instance in a\nspecific region you will not be able to\nmove that instance to a different region\nyou will have to recreate it using a\nsnapshot in another region and i will be\ngoing over this in a later lesson now\nscrolling down to machine configuration\nthere are three different types of\nfamilies that you can choose from when\nit comes to machine types the general\npurpose the compute optimized and the\nmemory optimized the general purpose\nmachine family has a great available\nselection of different series types that\nyou can choose from and is usually the\ngo to machine family if you're unsure\nabout which machine type to select so\nfor this demo i'm going to keep my\nselection for series type as e2 and\nunder machine type i'm given a very\nlarge selection of different sizes when\nit comes to vcpu and memory and so i can\nselect from a shared core a standard\ntype a high memory type or a high cpu\ntype and i will be going over this in\ngreater detail in another lesson on\nmachine types now in case the predefined\nmachine types do not fit my needs\nor the scope for the amount of vcpus and\nmemory that i need\nfall in between those predefined machine\ntypes i can simply select the custom\noption and this will bring up a set of\nsliders\nwhere i am able to select both the\namount of vcpus and amount of memory\nthat i need for the instance that i am\ncreating now as i change the course\nslider to either more vcpus or less my\ncore to memory ratio for this series\nwill stay the same and therefore my\nmemory will be adjusted automatically i\nalso have the option to change the\nmemory as i see fit to either add more\nmemory or to remove it and so this is\ngreat for when you're in between sizes\nand you're looking for something\nspecific that fits your workload and so\ni'm going to change back the machine\ntype to an e2 micro\nand as you can see in the top right\ni will find a monthly estimate of how\nmuch the instance will cost me\nand i can click on this drop down and it\nwill give me a breakdown of the cost for\nvcpu in memory the cost for my disks as\nwell as my sustained use discount and if\ni had any other resources that i was\nconsuming like a static ip or an extra\nattached disk those costs would show up\nhere as well and so if i went to a\ncompute optimized you can see how the\nprice has changed but i'm given the\nbreakdown so that i know exactly what\ni'm paying for so i'm going to switch it\nback to general purpose\nand i wanted to point out here the cpu\nplatform and gpu as you can add gpus to\nyour specific machine configuration and\nso just as another note\ngpus can only be added to an n1 machine\ntype as any other type will show the gpu\nselection as grayed out and so here i\ncan add the gpu type as well as adding\nthe number of gpus that i need but for\nthe sake of this demonstration i'm not\ngoing to add any gpus\nand i'm going to select the e2 series\nand change it back to e2 micro scrolling\ndown a little bit here\nwhen it comes to cpu platform depending\non the machine type you can choose\nbetween intel or amd if you are looking\nfor a specific cpu but just know that\nyour configuration is permanent now\nmoving down a little bit more you will\nsee here display device now display\ndevice is a feature on compute engine\nthat allows you to add a virtual display\nto a vm for system management tools\nremote desktop software and any\napplication that requires you to connect\nto a display device on a remote server\nthis is an especially great feature to\nhave for when your server is stuck at\nboot patching or hardware failure and\nyou can't log in and the drivers are\nalready included for both windows and\nlinux vms this feature works with the\ndefault vga driver right out of the box\nand so i'm going to keep this checked\noff as i don't need it and i'm going to\nmove down to confidential vm service now\nconfidential computing is a security\nfeature to encrypt sensitive code and\ndata that's in memory so even when it's\nbeing processed it is still encrypted\nand is a great use case when you're\ndealing with very sensitive information\nthat requires strict requirements now\ncompute engine also gives you the option\nof deploying containers on it and this\nis a great way to test your containers\ninstead of deploying a whole kubernetes\ncluster and may even suffice for\nspecific use cases but just note that\nyou can only deploy one container per vm\ninstance and so now that we've covered\nmost of the general configuration\noptions for compute engine i wanted to\ntake a minute to dive into the options\nthat are available for boot disk so i'm\ngoing to go ahead and click on change\nand here i have the option of choosing\nfrom a bunch of different public images\nwith different operating systems that i\ncan use for my boot disk so if i wanted\nto load up ubuntu i can simply select\nubuntu and i can choose from each\ndifferent version that's available\nas well i'm shown here the boot disk\ntype which is currently selected as the\nstandard persistent disk but i also have\nthe option of selecting either a\nbalanced persistent disk or ssd\npersistent disk and i'm going to keep it\nas standard persistent disk and if i\nwanted to i can increase the boot disk\nsize so if i wanted 100 gigs i can\nsimply add it and if i select it and i\ngo back up to the top right hand corner\ni can see that my price for the instance\nhas changed now i'm not charged for the\noperating system due to it being an open\nsource image but i am charged more for\nthe standard persistent disk because i'm\nno longer using 10 gigs but i'm using\n100 gigabytes\nnow let's say i wanted to go back and i\nwanted to change this image to a windows\nimage i'm going to go down here to\nwindows server and i want to select\nwindows server 2016 i'm going to load up\nthe data center version and i'm going to\nkeep the standard persistent disk along\nwith 100 gigabytes i'm going to select\nit if i scroll back up i can see that\ni'm charged a licensing fee for windows\nserver and these images with these\nlicensing fees are known as premium\nimages so please make sure that you are\naware of these licensing fees when\nlaunching your instances and because i\nwant to save on money just for now i'm\ngoing to scroll back down to my boot\ndisk and change it back to ubuntu\nand i'm going to change the size back\ndown to 10 gigabytes as well before you\nmove on i wanted to touch on custom\nimages and so if i did have any custom\nimages i could see them here and i would\nbe able to create instances from my\ncustom images using this method i also\nhave the option of creating an instance\nfrom a snapshot and because i don't have\nany nothing shows up and lastly i have\nthe option of using existing disks so\nlet's say for instance i had a vm\ninstance and i had deleted it but i\ndecided to keep the attached boot disk\nit would show up as unattached and i am\nable to attach that to a new instance\nand so now that i've shown you all the\navailable options when it comes to boot\ndisk i'm going to go ahead and select\nthe ubuntu operating system and move on\nto the next option here we have identity\nand api access which we've gone through\nin great depth in a previous demo as\nwell i'm given an option to create a\nfirewall rule automatically for http and\nhttps traffic and as for networking as\nwe covered it in great depth in the last\nsection\ni will skip that part of the\nconfiguration and simply launch it in\nthe default vpc and so just as a quick\nnote i wanted to remind you that down at\nthe bottom of the page you can find the\ncommand line shortcut and when you click\non it it will give you the gcloud\ncommand to run that you can use in order\nto create your instance and so i want to\ndeploy this as is so i'm going to click\nhere on close and i'm going to click on\ncreate\nand so i'm just going to give it a\nminute now so the instance can be\ncreated and it took a few seconds but\nthe instance is created and this is\nregarded as the inventory page to view\nyour instance inventory and to look up\nany correlating information on any of\nyour instances and so this probably\nlooks familiar to you from the previous\ninstances that you've launched so here\nwe have the name of the instance the\nzone\nthe internal ip along with the external\nip and a selection to connect to the\ninstance as well i'm also given the\noption to connect to this instance in\ndifferent ways you also have the option\nof adding more column information to\nyour inventory dashboard with regards to\nyour instance\nand you can do this by simply clicking\non the columns button right here above\nthe list of instances and you can select\nfrom creation time\nmachine type preserve state and even the\nnetwork and this may bring you more\ninsight on the information available for\nthat instance or even grouping of\ninstances with common configurations\nthis will also help you identify your\ninstances visually in the console and so\ni'm just going to put the columns back\nto\nexactly what it was\nand so now i want to take a moment to\ndive right into the instance and have a\nlook at the instance details so as you\nremember we selected the machine type of\ne2 micro which has two vcpus and one\ngigabyte of memory here we have the\ninstance id as well scrolling down we\nhave the cpu platform we have the\ndisplay device that i was mentioning\nearlier along with the zone the labels\nthe creation time as well as the network\ninterface and scrolling down i can see\nhere the boot disk with the ubuntu image\nas well as the name of the boot disk so\nthere are quite a few configurations\nhere and if i click on edit i can edit\nsome of these configurations on the fly\nand with some configurations i need to\nstop the instance before editing them\nand there are some configurations like\nthe network interface where i would have\nto delete the instance in order to\nrecreate it so for instance if i wanted\nto change the machine type i need to\nstop the instance in order to change it\nand the same thing goes for my display\ndevice as well the network interface in\norder for me to change it from its\ncurrent network or subnetwork i'm going\nto have to stop the instance in order to\nchange it as well and so i hope this\ngeneral walkthrough of configuring an\ninstance has given you a sense of what\ncan be configured on launch\nand allowed you to gain some insight on\nediting features of an instance after\nlaunch a lot of what you've seen here in\nthis demo will come up in the exam and\nso i would recommend that before going\ninto the exam to spend some time\nlaunching instances knowing exactly how\nthey will behave and what can be edited\nafter creation that can be done on the\nfly edits that need the instance to be\nshut down and edits that need the\ninstance to be recreated and so that's\npretty much all i wanted to cover when\nit comes to creating an instance so you\ncan now mark this as complete and let's\nmove on to the next one\nwelcome back now in this lesson i'm\ngoing to be discussing compute engine\nmachine types now a machine type is a\nset of virtualized hardware resources\nthat's available to a vm instance\nincluding the system memory size\nvirtual cpu count\nand persistent disks in compute engine\nmachine types are grouped and curated by\nfamilies for different workloads you\nmust always choose a machine type when\nyou create an instance and you can\nselect from a number of pre-defined\nmachine types in each machine type\nfamily if the pre-defined machine types\ndon't meet your needs then you can\ncreate your own custom machine types in\nthis lesson i will be going through all\nthe different machine types their\nfamilies and their use cases so with\nthat being said let's dive in\nnow each machine type family displayed\nhere includes different machine types\neach family is curated for specific\nworkload types the following primary\nmachine types are offered on compute\nengine which is general purpose compute\noptimized and memory optimized and so i\nwanted to go through each one of these\nfamilies in a little bit of detail now\nbefore diving right into it\ndefining what type of machine type you\nare running can be overwhelming for some\nbut can be broken down to be understood\na bit better they are broken down into\nthree parts and separated by hyphens the\nfirst part in this example shown here\nis the series so for this example the\nseries is e2 and the number after the\nletter is the generation type in this\ncase it would be the second generation\nnow the series come in many different\nvarieties and each are designed for\nspecific workloads now moving on to the\nmiddle part of the machine type this is\nthe actual type and types as well can\ncome in a slew of different flavors and\nis usually coupled with a specific\nseries so in this example the type here\nis standard and so moving on to the\nthird part of the machine type this is\nthe amount of vcp use\nin the machine type and so with vcpus\nthey can be offered anywhere from one\nvcpu up to 416 vcpus and so for the\nexample shown here this machine type has\n32 vcpus and so there is one more aspect\nof a machine type\nwhich is the gpus\nbut please note that gpus are only\navailable for the n1 series and so\ncombining the series the type and the\nvcpu\nyou will get your machine type and so\nnow that we've broken down the machine\ntypes in order to properly define them\ni wanted to get into the predefined\nmachine type families\nspecifically starting off with the\ngeneral purpose predefined machine type\nand all the general purpose machine\ntypes are available in the standard type\nthe high memory type and the high cpu\ntype so the standard type\nis the balance of cpu and memory and\nthis is the most common general purpose\nmachine type general purpose also comes\nin high memory and this is a high memory\nto cpu ratio so very high memory a lower\ncpu\nand lastly we have the high cpu machine\ntype and this is a high cpu to memory\nratio so this would be the opposite of\nthe high memory so very high cpu to\nlower memory so now digging into the\ngeneral purpose machine family i wanted\nto start off with the e2 series and this\nis designed for day-to-day computing at\na low cost so if you're looking to do\nthings like web serving\napplication serving\nback office applications\nsmall to medium databases microservices\nvirtual desktops or even development\nenvironments the e2 series would serve\nthe purpose perfectly\nnow the e2 machine types are cost\noptimized machine types that offer\nsizing between 2 to 32 vcpus and half a\ngigabyte to 128 gigabytes of memory so\nsmall to medium workloads that don't\nrequire as many vcpus and applications\nthat don't require local ssds or gpus\nare an ideal fit for e2 machines e2\nmachine types do not offer sustained use\ndiscounts however they do provide\nconsistently\nlow on-demand and committed use pricing\nin other words they offer the lowest\non-demand pricing across the general\npurpose machine types as well the e2\nseries machines are available in both\npre-defined and custom machine types\nmoving on i wanted to touch on all the\nmachine types available in the n-series\nand these are a balanced machine type\nwith price and performance across a wide\nrange of vm flavors and these machines\nare designed for web servers application\nservers back office applications medium\nto large databases as well as caching\nand media streaming and they are offered\nin the standard high memory and high cpu\ntypes\nnow the n1 machine types are compute\nengines first generation general purpose\nmachine types now this machine type\noffers up to 96 vcpus and 624 gigabytes\nof memory and again as i mentioned\nearlier this is the only machine type\nthat offers both gpu support and tpu\nsupport the n1 type is available as both\npre-defined machine types and custom\nmachine types and the n1 series offers a\nlarger sustained use discount than n2\nmachine types speaking of which\nthe n2 machine types are the second\ngeneration general purpose machine types\nand these offer flexible sizing between\ntwo 280 vcpus and half a gigabyte of\nmemory to 640 gigabytes of memory and\nthese machine types also offer an\noverall performance improvement over the\nn1 machine types workloads that can take\nadvantage of the higher clock frequency\nof the cpu\nare a good choice for n2 machine types\nand these workloads can get higher per\nthread performance while benefiting from\nall the flexibility that a general\npurpose machine type offers and two\nmachine types also offer the extended\nmemory feature and this helps control\nper cpu software licensing costs now\ngetting into the last n series machine\ntype the n2d machine type is the largest\ngeneral purpose machine type with up to\n224 vcpus and\n896 gigabytes of memory this machine\ntype is available in predefined and\ncustom machine types and this machine\ntype as well has the extended memory\nfeature which i discussed earlier that\nhelps you avoid per cpu software\nlicensing the n2d machine type supports\nthe committed use and sustain use\ndiscounts now moving on from the general\npurpose machine type family i wanted to\nmove into the compute optimize machine\nfamily now this series\noffers ultra high performance for\ncompute intensive workloads such as high\nperformance computing\nelectronic design automation\ngaming and single threaded applications\nso anything that is designed for compute\nintensive workloads this will definitely\nbe your best choice\nnow compute engine optimized machine\ntypes are ideal for as i said earlier\ncompute intensive workloads and these\nmachine types offer the highest\nperformance per core\non compute engine compute optimized\ntypes are only available as predefined\nmachine types and so they are not\navailable for any custom machine types\nthe c2 machine types offer a maximum of\n60 vcpus and a maximum of 240 gigabytes\nof memory now although the c2 machine\ntype works great for compute intensive\nworkloads it does come with some caveats\nand so you cannot use regional\npersistent disks with compute optimized\nmachine types and i will be getting into\nthe details of persistent disks in a\nlater lesson and they are only available\nin select zones and regions on select\ncpu platforms and so now moving into the\nlast family is the memory optimize\nmachine family and this is for ultra\nhigh memory workloads this family is\ndesigned for large in memory databases\nlike sap hana as well as in memory\nanalytics\nnow the m series comes in two separate\ngenerations\nm1 and m2 the m1 offering a maximum of\n160 vcpus and a maximum memory of\n3844 gigabytes whereas the m2 offering\nagain a maximum of 160 vcpus but\noffering a whopping 11\n776 gigabytes of maximum memory and as i\nsaid before these machine types they're\nideal for tasks that require intensive\nuse of memory so they are suited for\nin-memory databases and in memory\nanalytics data warehousing workloads\ngenomics analysis and sql analysis\nservices memory optimized machine types\nare only available as predefined machine\ntypes and the caveats here is that you\ncannot use regional persistent disks\nwith memory optimized machine types as\nwell they're only available in specific\nzones now i wanted to take a moment to\ngo back\nto the general purpose machine type so\nthat i can dig into the shared cord\nmachine type and this is spread amongst\nthe e2 and n1 series and these shared\ncore machine types are used for\nburstable workloads are very cost\neffective as well they're great for\nnon-resource intensive applications\nshared core machine types use context\nswitching to share a physical core\nbetween vcpus for the purpose of\nmultitasking different shared core\nmachine types sustain different amounts\nof time on a physical core which allows\ngoogle cloud to cut the price in general\nshare core instances can be more cost\neffective for running small\nnon-resource intensive applications than\nstandard high memory or high cpu machine\ntypes now when it comes to cpu bursting\nthese shared core machine types offer\nbursting capabilities that allow\ninstances to use additional physical cpu\nfor short periods of time bursting\nhappens automatically when your instance\nrequires more physical cpu than\noriginally allocated during these spikes\nyour instance will take advantage of\navailable physical cpu in bursts and the\ne2 shared core machine type is offered\nin micro small and medium while the n1\nseries is offered in the f1 micro and\nthe g1 small and both of these series\nhave a maximum of two vcpus with a\nmaximum of four gigabytes of memory now\ni wanted to take a moment to touch on\ncustom machine types and these are\navailable for any general purpose\nmachine and so this is customer defined\ncpu and memory designed for custom\nworkloads\nnow if none of the general purpose\npredefined machine types cater to your\nneeds\nyou can create a custom machine type\nwith a specific number of vcpus and\namount of memory that you need for your\ninstance these machine types are ideal\nfor workloads that are not a good fit\nfor the pre-defined machine types that\nare available they're also great for\nwhen you need more memory or more cpu\nbut the predefined machine types don't\nquite fit exactly what you need for your\nworkload just as a note it costs\nslightly more to use a custom machine\ntype than a pre-defined machine type and\nthere are limitations in the amount of\nmemory and vcpu you can select and as i\nstated earlier when creating a custom\nmachine type you can choose from the e2\nn2\nand 2d and n1 machine types and so the\nlast part i wanted to touch on are the\ngpus that are available and these are\ndesigned for the graphic intensive\nworkloads and again are only available\nfor the n1 machine type and gpus come in\nfive different flavors from nvidia\nshowing here as the tesla k80 the tesla\np4 the tesla t4 the tesla v100 and the\ntesla p100 and so these are all the\nfamilies and machine types that are\navailable for you in google cloud and\nwill allow you to be a little bit more\nflexible with the type of workload that\nyou need them for and so for the exam\nyou won't have to memorize each machine\ntype but you will need to know an\noverview of what each machine type does\nnow i know there's been a lot of theory\npresented here in this lesson but i hope\nthis is giving you a better\nunderstanding of all the available\npre-defined machine types in google\ncloud and so that's pretty much all i\nwanted to cover in this lesson on\ncompute engine machine types so you can\nnow mark this lesson as complete and\nlet's move on to the next one\n[Music]\nwelcome back in this lesson i'm going to\nbe reviewing managing your instances now\nhow you manage your instances is a big\ntopic in the exam\nas well it's very useful to know for\nyour work as a cloud engineer in the\nenvironments you are responsible for\nknowing both the features that are\navailable as well as the best practices\nwill allow you to make better decisions\nwith regards to your instances and allow\nyou to keep your environment healthy\nthis lesson will dive into the many\nfeatures that are available in order to\nbetter manage your instances using the\nspecific features within google cloud so\nwith that being said let's dive in\nnow i wanted to start off this lesson\ndiscussing the life cycle of an instance\nwithin google cloud every instance has a\npredefined life cycle from its starting\nprovisioning state to its deletion an\ninstance can transition through many\ninstant states as part of its life cycle\nwhen you first create an instance\ncompute engine provisions resources to\nstart your instance next the instance\nmoves into staging where it prepares the\nfirst boot and then it finally boots up\nand is considered running during its\nlifetime a running instance can be\nrepeatedly stopped and restarted or\nsuspended and resumed so now i wanted to\ntake a few minutes to go through the\ninstance life cycle in a bit of detail\nstarting with the provisioning state\nnow this is where resources are being\nallocated for the instance the instance\nis not yet running and the instance is\nbeing allocated its requested amount of\ncpu and memory along with its root disk\nany additional disks that are attached\nto it and as well some additional\nfeature sets that are assigned to this\ninstance and when it comes to the cost\nwhile in the provisioning state there\nare no costs that are being incurred\nmoving right along to the staging state\nafter finishing the provisioning state\nthe life cycle continues with the\nstaging state and this is where\nresources have been acquired and the\ninstance is being prepared for first\nboot both internal and external ips are\nallocated and can be either static or\nephemeral in the system image that was\noriginally chosen for this instance\nis used to boot up the instance and this\ncan be either a public image or a custom\nimage costs in the state are still not\nincurred as the instance is still in the\npre-boot state\nnow once the instance has left staging\nit will move on to the running state and\nthis is where the instance is booting up\nor running and should allow you to log\ninto the instance either using ssh or\nrdp within a short waiting period due to\nany startup scripts or any boot\nmaintenance tasks for the operating\nsystem now during the running state you\ncan reset your instance and this is\nwhere you would wipe the memory contents\nof the vm instance and reset the virtual\nmachine to its initial state resetting\nan instance\ncauses an immediate hard reset of the vm\nand therefore the vm does not do a\ngraceful shutdown for the guest\noperating system however\nthe vm retains all persistent disk data\nand none of the instance properties\nchange the instance remains in running\nstate through the reset now as well in\nthe running state a repair can happen\ndue to the instance encountering an\ninternal error or the underlying machine\nis unavailable due to maintenance during\nthis time the instance is unusable and\nif the repair is successful the instance\nreturns back to the running state paying\nattention to costs\nthis state is where the instance starts\nto occur them and is related to the\nresources assigned to the instance like\nthe cpu and memory any static ips and\nany disks that are attached to the\ninstance and i will be going into a bit\nof detail in just a bit with regards to\nthis state\nand finally we end the life cycle with\nthe stopping suspended and terminated\nstates now when you are suspending an\ninstance it is like closing the lid of\nyour laptop suspending the instance will\npreserve the guest operating system\nmemory and application state of the\ninstance otherwise it'll be discarded\nand from this state you can choose\neither to resume or to delete it when it\ncomes to stopping either a user has made\na request to stop the instance or there\nwas a failure and this is a temporary\nstatus and the instance will move to\nterminated touching on costs for just a\nsecond when suspending or stopping an\ninstance you pay for resources that are\nstill attached to the vm instance\nsuch as static ips and persistent disk\ndata you do not pay the cost of a\nrunning vm instance ephemeral external\nip addresses are released from the\ninstance and will be assigned a new one\nwhen the instance is started now when it\ncomes to stopping suspending or\nresetting an instance you can stop or\nsuspend an instance if you no longer\nneed it but want to keep the instance\naround for future use compute engine\nwaits for the guest to finish shutting\ndown and then transitions the instance\nto the terminated state so touching on\nthe terminated state this is where a\nuser either shuts down the instance or\nthe instance encounters a failure you\ncan choose to restart the instance or\ndelete it as well as holding some reset\noptions within the availability policy\nin this state you still pay for static\nips and disks\nbut like the suspending or stopping\nstate you do not pay for the cpu and\nmemory resources allocated to the\ninstance\nand so this covers a high level overview\nof the instance lifecycle in google\ncloud and all of the states that make up\nthis lifecycle now to get into some\ndetail with regards to some feature sets\nfor compute engine i wanted to revisit\nthe states where those features apply\nnow when creating your instance you have\nthe option of using shielded vms for\nadded security and when using them the\ninstance would instantiate them as the\ninstance boots and enters into the\nrunning state\nso what exactly is a shielded vm\nwell shielded vms offer verifiable\nintegrity of your compute engine vm\ninstances so you can be sure that your\ninstances haven't been compromised by\nboot or kernel level malware or rootkits\nand this is achieved through a four-step\nprocess\nwhich is covered by secure boot virtual\ntrusted platform module also known as\nvtpm measure boot which is running on\nvtpm and integrity monitoring so i\nwanted to dig into this for just a sec\nto give you a bit more context\nnow the boot process for shielded vms\nstart with secure boot and this helps\nensure that the system only runs\nauthentic software by verifying the\ndigital signature for all boot\ncomponents and stopping the boot process\nif signature verification fails so\nshielded vm instances run firmware\nthat's signed and verified using\ngoogle's certificate authority and on\neach and every boot any boot component\nthat isn't properly signed or isn't\nsigned at all is not allowed to run and\nso the first time you boot a vm instance\nmeasure boot creates the integrity\npolicy baseline from the first set of\nthese measurements and then securely\nstores this data each time the vm\ninstance boots after that these\nmeasurements are taken again and stored\nin secure memory until the next reboot\nhaving these two sets of measurements\nenables integrity monitoring which is\nthe next step and allows it to determine\nif there have been changes to a vm\ninstance's boot sequence and this policy\nis loaded onto a virtualized trusted\nplatform module again known as the vtpm\nfor short which is a specialized\ncomputer chip that you can use to\nprotect objects like keys and\ncertificates that you use to\nauthenticate access to your system with\nshielded vms vtpm enables measured boot\nby performing the measurements needed to\ncreate a known good boot baseline and\nthis is called the integrity policy\nbaseline the integrity policy baseline\nis used for comparison\nwith measurements from subsequent vm\nboots to determine if anything has\nchanged integrity monitoring relies on\nthe measurements created by measured\nboot for both the integrity policy\nbaseline and the most recent boot\nsequence integrity monitoring compares\nthe most recent boot measurements\nto the integrity policy baseline and\nreturns a pair of pass or failed results\ndepending on whether they match or not\none for the early boot sequence and one\nfor the late boot sequence and so in\nsummary this is how shielded vms help\nprevent data exfiltration so touching\nnow on the running state when you start\na vm instance using google provided\npublic images a guest environment is\nautomatically installed on the vm\ninstance a guest environment is a set of\nscripts daemons and binaries that read\nthe content of the metadata server to\nmake a virtual machine run properly on\ncompute engine a metadata server is a\ncommunication channel for transferring\ninformation from a client to the guest\noperating system vm instances created\nusing google provided public images\ninclude a guest environment that is\ninstalled by default creating vm\ninstances\nusing a custom image will require you to\nmanually install the guest environment\nthis guest environment is available for\nboth linux and windows systems and each\nsupported operating system that is\navailable on compute engine requires\nspecific guest environment packages\neither google or the owner of the\noperating system builds these packages\nnow when it comes to the linux guest\nenvironment it is either built by google\nor the owner of the operating system\nand there are some key components that\nare applicable to all builds which can\nbe found in the link that i have\nincluded in the lesson text the base\ncomponents of a linux guest environment\nis a python package that contains\nscripts daemons and packages for the\nsupported linux distributions when it\ncomes to windows a similar approach\napplies where a package is available\nwith main scripts and binaries as a part\nof this guest environment\nnow touching back on the metadata server\ncompute engine provides a method for\nstoring and retrieving metadata in the\nform of the metadata server this service\nprovides a central point to set metadata\nin the form of key value pairs which is\nthen provided to virtual machines at\nruntime and you can query this metadata\nserver programmatically from within the\ninstance and from the compute engine api\nthis is great for use with startup and\nshutdown scripts or gaining more insight\nwith your instance metadata can be\nassigned to projects as well as\ninstances and project metadata\npropagates to all instances within the\nproject while instance metadata only\nimpacts that instance and you can access\nthe metadata using the following url\nwith the curl command you see here on\nthe screen so if you're looking for the\nmetadata for a project you would use the\nfirst url that ends in project and for\nany instance metadata you can use the\nsecond url that ends in instance now\nplease note that when you make a request\nto get information from the metadata\nserver your request and the subsequent\nmetadata response never leaves the\nphysical host running the virtual\nmachine instance now once the instance\nhas booted and has gone through the\nstartup scripts you will then have the\nability to login to your instance using\nssh or rdp now there are some different\nmethods that you can use to connect and\naccess both your linux instances and\nyour windows instances that i will be\ngoing over\nnow when it comes to linux instances\nwe've already gone through accessing\nthese types of instances in previous\nlessons and demos but just as a\nrefresher you would typically connect to\nyour vm instance via ssh access on port\n22. please note that you will require a\nfirewall rule as we have done in\nprevious demos to allow this access and\nyou can connect to your linux instances\nthrough the google cloud console or the\ncloud shell using the cloud sdk now i\nknow that the use of ssh keys are the\ndefacto when it comes to logging into\nlinux instances now in most scenarios on\ngoogle cloud google recommends using os\nlogin over using ssh keys the os login\nfeature lets you use compute engine iam\nroles to manage ssh access to linux\ninstances and then if you'd like you can\nadd an extra layer of security by\nsetting up os login with two-step\nverification and manage access at the\norganization level by setting up\norganizational policies os login\nsimplifies ssh access management by\nlinking your linux user account to your\ngoogle identity administrators can\neasily manage access to instances\nat either an instance or project level\nby setting iam permissions now if you're\nrunning your own directory service for\nmanaging access or are unable to set up\nos login you can manually manage ssh\nkeys and local user accounts in metadata\nby manually creating ssh keys and\nediting the public ssh key metadata now\nwhen it comes to windows instances you\nwould typically connect to your vm\ninstance via rdp access on port 3389 and\nplease note that you will also require a\nfirewall rule as shown here to allow\nthis access you can connect to your\nwindows instances through the rdp\nprotocol or through a powershell\nterminal now when logging into windows\nthis requires setting a windows password\nand can be done either through the\nconsole or the gcloud command line tool\nand then after setting your password you\ncan then log in from the recommended rdp\nchrome extension or using a third-party\nrdp client and i will provide a link to\nthis rdp chrome extension in the lesson\ntext now once the instance has booted up\nand your instance is ready to be logged\ninto you always have the option of\nmodifying your instance and you can do\nit manually by either modifying it on\nthe fly or you can take the necessary\nsteps to edit your instance like i\nshowed you in a previous lesson by\nstopping it editing it and then\nrestarting it although when it comes to\ngoogle having to do maintenance on a vm\nor you merely want to move your instance\nto a different zone in the same region\nthis has all become possible without\nshutting down your instance\nusing a feature called live migration\nnow when it comes to live migration\ncompute engine migrates your running\ninstances to another host\nin the same zone instead of requiring\nyour vms to be rebooted this allows\ngoogle to perform maintenance reliably\nwithout interrupting any of your vms\nwhen a vm is scheduled to be live\nmigrated google provides a notification\nto the guest that a migration is coming\nsoon live migration keeps your instances\nrunning during compute engine hosts that\nare in need of regular infrastructure\nmaintenance and upgrades replacement of\nfailed hardware and system configuration\nchanges when google migrates a running\nvm instance from one host to another\nit moves the complete instance state\nfrom the source to the destination in a\nway that is transparent to the guest os\nand anyone communicating with it google\nalso gives you the option of doing live\nmigration manually from one zone to\nanother within the same region either\nusing the console or running the command\nline you see here gcloud compute\ninstances move the name of the vm with\nthe zone flag and the zone that it's\ncurrently in and then the destination\nzone flag with the zone that you wanted\nto go to and just as a note with some\ncaveats instances with gpus attached\ncannot be live migrated and you can't\nconfigure a preemptable instance to live\nmigrate and so instance lifecycle is\nfull of different options and\nunderstanding them can help better\ncoordinate moving editing and repairing\nvm instances no matter where they may\nlie in this life cycle now i hope this\nlesson has given you the necessary\ntheory that will help better use the\ndiscuss feature sets and giving you some\nideas on how to better manage your\ninstances now there is a lot more to\nknow than what i've shown you here to\nmanage your instances but topics shown\nhere are what shows up in the exam as\nwell are some really great starting\npoints to begin managing your instances\nand so that's pretty much all i wanted\nto cover when it comes to managing\ninstances so you can now mark this\nlesson as complete and join me in the\nnext one where i will cement the theory\nin this lesson with the hands-on demo\n[Music]\nwelcome back in this demonstration i'm\ngoing to be cementing some of the theory\nthat we learned in the last lesson with\nregards to the different login methods\nfor windows and linux instances how to\nimplement these methods are extremely\nuseful to know both for the exam and for\nmanaging multiple instances in different\nenvironments now there's a lot to cover\nhere so with that being said let's dive\nin so as you can see i am logged in here\nunder tony bowtie ace\ngmail.com as well i am in the project of\nbowtie inc and so the first thing that i\nwant to do is create both a linux\ninstance and a windows instance and this\nis to demonstrate the different options\nyou have for logging into an instance\nand so in order for me to do that i need\nto head on over to compute engine so i'm\ngoing to go over to the navigation menu\nand i'm going to scroll down to compute\nengine and so just as a note before\ncreating your instances please make sure\nthat you have a default vpc created\nbefore going ahead and creating these\ninstances if you've forgotten how to\ncreate a default vpc please go back to\nthe networking services section and\nwatch the vpc lesson for a refresher and\nso i'm going to go ahead and create my\nfirst instance and i'm going to start\nwith the windows instance so i'm going\nto simply click on create\nand so for the name of this instance you\ncan simply call this windows dash\ninstance\nand i'm not going to add any labels and\nfor the region you should select us\neast1 and you can keep the zone as the\ndefault for us east 1b and scrolling\ndown to the machine configuration for\nthe machine type i'm going to keep it as\nis as it is a windows instance and i'm\ngoing to need a little bit more power\nscrolling down to boot disk we need to\nchange this from debian over to windows\nso i'm going to simply click on the\nchange button and under operating system\ni'm going to click on the drop down and\nselect windows server for the version\ni'm going to select the latest version\nof windows server which is the windows\nserver 2019 data center and you can keep\nthe boot disk type and the size as its\ndefault and simply head on down and\nclick on select and we're going to leave\neverything else as the default and\nsimply click on create\nand success our windows instance has\nbeen created and so the first thing that\nyou want to do is you want to set a\nwindows password for this instance and\nso i'm going to head on over to the rdp\nbutton and i'm going to click on the\ndrop-down and here i'm going to select\nset windows password and here i'm going\nto get a pop-up to set a new windows\npassword the username has been\npropagated for me as tony bowties i'm\ngoing to leave it as is and i'm going to\nclick on set\nand i'm going to be prompted with a new\nwindows password that has been set for\nme so i'm going to copy this and i'm\ngoing to paste it into my notepad so be\nsure to record it somewhere either write\nit down\nor copy and paste it into a text editor\nof your choice i'm going to click on\nclose and so now for me to log into this\ni need to make sure of a couple things\nthe first thing is i need to make sure\nthat i have a firewall rule open for\nport 3389 the second is i need to make\nsure that i have an rdp client and so in\norder to satisfy my first constraint i'm\ngoing to head on over to the navigation\nmenu and go down to vpc network\nhere i'm going to select firewall and as\nexpected the rdp firewall rule has been\nalready created due to the fact that\nupon creation of the default vpc network\nthis default firewall rule is always\ncreated and so now that i've gotten that\nout of the way i'm going to head back on\nover to compute engine\nand what i'm going to do is i'm going to\nrecord the external ip so that i'll be\nable to log into it now i'm going to be\nlogging into this instance\nfrom both a windows client and a mac\nclient so starting with windows i'm\ngoing to head on over to my windows\nvirtual machine and because i know\nwindows has a default rdp client already\nbuilt in i'm going to simply bring it up\nby hitting the windows key and typing\nremote desktop connection\ni'm going to click on that i'm going to\npaste in the public ip for the instance\nthat i just recorded and i'm going to\nclick on connect you should get a pop-up\nasking for your credentials i'm going to\ntype in my username as tony bowtie ace\nas well i'm going to paste in the\npassword and i'm going to click on ok\ni'm prompted to accept the security\ncertificate and i'm going to select yes\nand success\ni'm now connected to my windows server\ninstance and it's going to run all its\nnecessary startup scripts you may get a\ncouple of prompts that come up\nasking you if you want to connect to\nyour network\nabsolutely i'm going to close down\nserver manager just for now\nand another thing that i wanted to note\nis that when you create a windows\ninstance there will automatically be\nprovisioned a google cloud shell with\nthe sdk pre-installed and so you'll be\nable to run all your regular commands\nright from this shell without having to\ninstall it and this is due to the guest\nenvironment that was automatically\ninstalled on the vm instance upon\ncreation and this is a perfect example\nof some of the scripts that are\ninstalled with the guest environment i'm\ngoing to go ahead and close out of this\nand i'm going to go ahead and close out\nof my instance\nhit ok and so being here in windows i\nwanted to show you an alternate way of\nlogging into your instance through\npowershell so for those of you who are\nquite versed in windows and use\npowershell in your day-to-day there is\nan easy way to log into your instance\nusing powershell now in order for me to\ndo that i need to open another firewall\nrule covering tcp port 5986 so i'm going\nto head on over back to the google cloud\nconsole i'm going to head over to the\nnavigation menu and i'm going to scroll\ndown to vpc network\ni'm going to go into firewall and i'm\ngoing to create a new firewall rule and\nunder name i'm going to name this as\nallow\npowershell i'm going to use the same for\nthe description i'm going to scroll down\nto targets and i'm going to select all\ninstances in the network and under\nsource ip ranges for this demonstration\ni'm going to use\n0.0.0.0 forward slash 0. and again this\nshould not be used in a production\nenvironment but is used merely for this\ndemo i'm going to leave everything else\nas is and i'm going to go down to\nprotocols and ports i'm going to click\non tcp and i'm going to type in 5986 for\nthe port and i'm going to click on\ncreate i'm going to give it a second\njust to create and it took a couple\nseconds but our firewall rule is now\ncreated and so now i'm gonna head over\nto my windows vm and i'm gonna open up a\npowershell command prompt and hit the\nwindows key and type in powershell\nand so in order for me to not get\nconstantly asked about my username and\npassword i'm going to use a variable\nthat will keep my password for me and so\nevery time i connect to my windows\ninstance i won't need to type it in all\nthe time and so the command for that is\ndollar sign credentials equals get dash\ncredential i'm going to hit enter and\ni'm going to get a prompt to type in my\nusername and password so i'm going to\nsimply type that in now along with my\npassword and hit ok and if you don't get\na prompt with any errors then chances\nare that you've been successful at\nentering your credentials and so now in\norder to connect to the instance you're\ngoing to need the public ip address\nagain so i'm going to head on over back\nto the console i'm going to head on over\nto the navigation menu and back to\ncompute engine here i'm going to record\nthe external ip and i'm going to head on\nover back to my windows virtual machine\nand so you're going to enter this\ncommand which i will include in the\nlesson text and you'll also be able to\nfind it in the github repository beside\ncomputer name you're going to put in\nyour public ip address of your windows\ninstance and make sure at the end you\nhave your credentials variable i'm going\nto simply click enter and success i'm\nnow connected to my windows instance in\ngoogle cloud so as you can see here on\nthe left\nis the public ip of my windows instance\nand so these are the various ways that\nyou can connect to your windows instance\nfrom a windows machine and so now for me\nto connect to my windows instance on a\nmac i'm going to head on over there now\nand like i said before i need to satisfy\nthe constraint of having an rdp client\nunfortunately mac does not come with an\nrdp client and so the recommended tool\nto use is the chrome extension but i\npersonally like microsoft's rdp for mac\napplication and so i'm going to go ahead\nand do a walkthrough of the installation\nso i'm going to start off by opening up\nsafari and i'm going to paste in this\nurl which i will include in the lesson\ntext\nand microsoft has made available a\nmicrosoft remote desktop app available\nin the app store i'm going to go ahead\nand view it in the app store and i'm\ngoing to simply click on get and then\ninstall and once you've entered your\ncredentials and you've downloaded and\ninstalled it you can simply click on\nopen i'm going to click on not now and\ncontinue and i'm going to close all\nthese other windows for better viewing\ni'm going to click on add pc i'm going\nto paste in the public ip address of my\nwindows instance and under user account\ni'm going to add my user account type in\nmy username paste in my password you can\nadd a friendly name here i'm going to\ntype in windows dash gc for google cloud\nand i'm going to click on add and then\nonce you've pasted in all the\ncredentials and your information you can\nthen click on add and i should be able\nto connect to my windows instance by\ndouble clicking on this window it's\nasking me for my certificates i'm going\nto hit continue\nand success i'm connected to my windows\ninstance and so this is how you would\nconnect to a windows instance from a\nwindows machine as well as from a mac as\nwell there are a couple of other options\nthat i wanted to show you over here on\nthe drop down beside rdp i can download\nan rdp file which will contain the\npublic ip address of the windows\ninstance along with your username if i\nneed to reset my password i can view the\ngcloud command to do it or i can set a\nnew windows password if i forgotten my\nold one and so that's everything i had\nto show you with regards to connecting\nto a windows instance and so since this\ndemo was getting kind of long i decided\nto split it up into two parts\nand so this is the end of part one of\nthis demo and this would be a great\nopportunity to get up and have a stretch\ngrab yourself a tea or a coffee and\nwhenever you're ready you can join me in\npart two where we will be starting\nimmediately from the end of part 1 so\nyou can complete this video and i'll see\nyou in part 2.\n[Music]\nwelcome back this is part 2 of the\nconnecting to your instances demo and we\nwill be starting exactly where we left\noff in part one so with that being said\nlet's dive in and so now that we've\ncreated our windows instance and went\nthrough all the methods of how to\nconnect to it let's go ahead and create\na linux instance i'm going to go up to\nthe top menu here and click on create\ninstance and i'm going to name this\ninstance\nlinux instance i'm not going to give it\nany labels under region i'm going to\nselect the us east one region and the\nzone i'm going to leave it as its set\ndefault as us east 1b the machine\nconfiguration i'm going to leave it as\nis under boot disk i'm going to leave\nthis as is with the debian distribution\nand i'm going to go ahead and click on\ncreate\nokay and our linux instance has been\ncreated and in order for me to connect\nto it\ni am going to ssh into it but first i\nneed to satisfy the constraint of having\na firewall rule with tcp port 22 open so\ni'm going to head on over to the\nnavigation menu\nand i'm going to scroll down to vpc\nnetwork i'm going to head on over to\nfirewall and as expected the allow ssh\nfirewall rule has been created alongside\nthe default vpc network and so since\ni've satisfied that constraint i can\nhead back on over to compute engine and\nso here i have a few different options\nthat i can select from for logging into\nmy linux instance i can open in a\nbrowser window if i decided i wanted to\nput it on a custom port i can use this\noption here if i provided a private ssh\nkey to connect to this linux instance i\ncan use this option here i have the\noption of viewing the gcloud command in\norder to connect to it\nand i've been presented with a pop-up\nwith the command to use within the\ngcloud command line in order to connect\nto my instance i can run it now in cloud\nshell but i'm going to simply close it\nand so whether you are on a mac a\nwindows machine or a linux machine you\ncan simply click on ssh and it will open\na new browser window connecting you to\nyour instance\nnow when you connect to your linux\ninstance for the first time\ncompute engine generates an ssh key pair\nfor you this key pair by default is\nadded to your project or instance\nmetadata and this will give you the\nfreedom of not having to worry about\nmanaging keys now if your account is\nconfigured to use os login compute\nengine stores the generated key pair\nwith your user account\nnow when connecting to your linux\ninstance in most scenarios google\nrecommends using os login this feature\nlets you use iam roles to manage ssh\naccess to linux instances and this\nrelieves the complexity of having to\nmanage multiple key pairs and is the\nrecommended way to manage many users\nacross multiple instances or projects\nand so i'm going to go ahead now and\nshow you how to configure os login for\nyour linux instance and the way to do\nthis will be very similar on all\nplatforms so i'm going to go ahead and\ngo back to my mac vm and i'm going to\nopen up my terminal\nmake this bigger for better viewing\nand i'm going to start by running the\ngcloud init command in order to make\nsure i'm using the right user and for\nthe sake of this demonstration i'm going\nto re-initialize this configuration so\ni'm going to click on one hit enter\nnumber two for tony bowtie ace and i'm\ngoing to use project bow tie ink so 1\nand i'm not going to configure a default\ncompute region in zone and so if i run\nthe gcloud config list command i can see\nthat the account that i'm using is tony\nbowties gmail.com in project bowtie inc\nand so because os login requires a key\npair i'm going to have to generate that\nmyself so i'm going to go ahead and\nclear the screen and i'm going to use\nthe command ssh keygen and this is the\ncommand to create a public and private\nkey pair i'm going to use the default\npath to save my key and i'm going to\nenter a passphrase\ni'm going to enter it again and i\nrecommend that you write down your\npassphrase so that you don't forget it\nas when you lose it you will be unable\nto use your key pair and so if i change\ndirectory to dot ssh and do an ls for\nlist i can see that i now have my public\nand private key pair the private key\nlying in id underscore rsa and the\npublic key lying in id underscore\nrsa.pub and so another constraint that i\nhave is i need to enable os login for my\nlinux instance so i'm going to go ahead\nand go back to the console and i'm going\nto go ahead and go into my linux\ninstance\ni'm going to click on edit and if you\nscroll down you will come to some fields\nmarked as custom metadata and under key\nyou will type in enable dash os login\nand under value you will type in all\ncaps true now i wanted to take a moment\nhere to discuss this feature here under\nssh keys for block project wide ssh keys\nnow project wide public ssh keys are\nmeant to give users access to all of the\nlinux instances in a project that allow\nproject project-wide public ssh keys so\nif an instance blocks project-wide\npublic ssh keys as you see here\na user can't use their project-wide\npublic ssh key to connect to the\ninstance\nunless the same public ssh key is also\nadded to the instance metadata this\nallows only users whose public ssh key\nis stored in instance level metadata to\naccess the instance\nand so this is an important feature to\nnote for the exam and so we're going to\nleave this feature checked off for now\nand then you can go to the bottom and\nclick on save now if i wanted to enable\nos login for all instances in my project\ni can simply go over to the menu on the\nleft and click on metadata and add the\nmetadata here with the same values so\nunder key i type in enable dash os login\nand under value i type in in all caps\ntrue but i don't want to enable it for\nall my instances\nonly for that one specific instance so\nwith regards to project-wide public keys\nthese keys can be managed through\nmetadata and should only be used as a\nlast resort if you cannot use the other\ntools such as ssh from the console or os\nlogin these are where the keys are\nstored and so you can always find them\nhere when looking for them here as you\ncan see there are a couple of keys for\ntony bowtie ace that i have used for\nprevious instances and so i'm going to\ngo back to metadata just to make sure\nthat my key value pair for os login has\nnot been saved and it is not and i'm\ngoing to head back on over to my\ninstances and so now that my constraint\nhas been fulfilled where i've enabled\nthe os login feature by adding the\nunnecessary metadata i'm going to head\non over back to my mac vm\ni'm going to go ahead and clear the\nscreen so now i'm going to go ahead and\nlog into my instance using os login by\nusing the command gcloud compute os dash\nlogin ssh dash keys add and then the\nflag key dash file and then the path for\nmy public key which is dot ssh forward\nslash id underscore rsa.pub i'm gonna\nhit enter\nand so my key has been successfully\nstored with my user account i'm gonna go\nahead and make this a little bigger for\nbetter viewing and so in order to log\ninto my instance i'm going to need my\nusername which is right up here under\nusername i'm going to copy that and i'm\njust going to clear my screen for a\nsecond here for better viewing and so in\norder for me to ssh into my instance i'm\ngoing to type in the command ssh minus i\ni'm going to have to provide my private\nkey which is in dot ssh forward slash id\nunderscore rsa and then my username that\ni had recorded earlier at and then i'm\ngoing to need my public ip address of my\nlinux instance so i'm going to head back\nover to the console for just a sec\ni'm going to copy the ip address head\nback over to my mac vm paste it in and\nhit enter it's asking if i want to\ncontinue yes i do\nenter the passphrase for my key\nand success i am connected and so there\nis one caveat that i wanted to show you\nwith regards to permissions for os login\nso i'm going to head back over to the\nconsole and i'm going to go up to the\nnavigation menu and head over to i am an\nadmin now as you can see here tony\nbowties gmail.com has the role of owner\nand therefore i don't need any granular\nspecific permissions i have the access\nto do absolutely anything now in case i\nwas a different user and i didn't hold\nthe role of owner i would be looking for\nspecific permissions\nthat would be under compute\nos login and this would give me\npermissions as a standard user now if i\nwanted super user access or root access\ni would need to be given the compute os\nadmin login role and as you can see it\nwould allow me administrator user\nprivileges so when using os login and\nthe member is not an owner one of these\ntwo roles are needed so i'm going to\nexit out of here i'm going to hit cancel\nand so that about covers everything that\ni wanted to show you with regards to all\nthe different methods that you can use\nfor connecting to vm instances for both\nwindows and linux instances now i know\nthis may have been a refresher for some\nbut for others\nknowing all the different methods of\nconnecting to instances can come in very\nuseful especially when coordinating many\ninstances in bigger environments i want\nto congratulate you on making it to the\nend of this demo and gaining a bit more\nknowledge on this crucial part of\nmanaging your instances so before you go\nbe sure to delete any resources that\nyou've created and again congrats on the\ngreat job so you can now mark this as\ncomplete and i'll see you in the next\none\nwelcome back in this demonstration i'll\nbe discussing metadata and how it can\npertain to a project as well as an\ninstance as well i'm going to touch on\nstartup and shutdown scripts and it's\nreal world use cases in the last lesson\nwe touched the tip of the iceberg when\nit came to metadata and wanted to go a\nbit deeper on this topic as i personally\nfeel that it holds so much value\nand give you some ideas on how you can\nuse it i'm also going to combine the\nmetadata using variables in a startup\nscript and i'm going to bring to life\nsomething that's dynamic in nature so\nwith that being said let's dive in so i\nam currently logged in as tony at bowtie\nace gmail.com\nunder the project of bow tie inc and so\nin order to get right into the metadata\ni'm going to head on over to my\nnavigation menu and go straight to\ncompute engine and over here on the left\nhand menu you will see metadata and you\ncan drill down into there now as i\nexplained in a previous lesson\nmetadata can be assigned to both\nprojects and instances while instance\nmetadata\nonly impacts a specific instance so here\ni can add and store metadata which will\nbe used on a project-wide basis as well\nas mentioned earlier metadata is stored\nin key value pairs and can be added at\nany time now this is a way to add custom\nmetadata but there is a default set of\nmetadata entries that every instance has\naccess to and again this applies for\nboth project and instance metadata so\nhere i have the option of setting my\ncustom metadata for the entire project\nand so i'm going to dive into where to\nstore custom metadata on an instance and\nso in order for me to show you this i'm\ngoing to first head over to vm instances\nand create my instance and so just as a\nnote before creating your instance make\nsure that you have the default vpc\ncreated and so because i like to double\ncheck things i'm going to head over to\nthe navigation menu i'm going to scroll\ndown to vpc network and as expected i\nhave the default vpc already created and\nso this means i can go ahead and create\nmy instance so i'm going to head back on\nover to compute engine\nand i'm going to create my instance and\ni'm going to name this instance\nbowtie dash web server i'm not going to\nadd any labels and under the region i'm\ngoing to select us east one and you can\nkeep the zone as the default as us east\n1b under machine type i want to keep\nthings cost effective so i'm going to\nselect the e2 micro i'm going to scroll\ndown and under identity and api access i\nwant to set access for each api\nand scroll down to compute engine i want\nto select it and i want to select on\nread write and i'm going to leave the\nrest as is and scrolling down to the\nbottom i want to click on management\nsecurity disks networking and sold\ntenancy\nand under here you will find the option\nto add any custom metadata and you can\nprovide it right here under metadata as\na key value pair but we're not going to\nadd any metadata right now so i'm just\ngoing to scroll down to the bottom i'm\ngoing to leave everything else as is and\nsimply click on create\nand it should take a few moments for my\ninstance to be created okay and now that\nmy instance is up i want to go ahead and\nstart querying the metadata now just as\na note metadata must be queried from the\ninstance itself and can't be done from\nanother instance or even from the cloud\nsdk on your computer so i'm going to go\nahead and log into the instance using\nssh\nokay and now that i'm logged into my\ninstance i want to start querying the\nmetadata now normally you would use\ntools like wget or curl to make these\nqueries\nin this demo i will use curl and for\nthose who don't know curl is a command\nline tool to transfer data to or from a\nserver using supported protocols like\nhttp ftp scp and many more this tool is\nfantastic for automation since it's\ndesigned to work without any user\ninteraction and so i'm going to paste in\nthe url that i am going to use to query\nthe instance metadata and this is the\ndefault url that you would use to query\nany metadata on any instance getting a\nlittle deeper into it a trailing slash\nshown here shows that the instance value\nis actually a directory and will have\nother values that append to this url\nwhether they are other directories or\njust endpoint values now when you query\nfor metadata you must provide the\nfollowing header in all of your requests\nmetadata dash flavor colon google and\nshould be put in quotations if you don't\nprovide this header the metadata server\nwill deny your request so i'm going to\ngo ahead and hit enter and as you can\nsee i've been brought up a lot of\ndifferent values that i can choose from\nin order to retrieve different types of\nmetadata and as stated before anything\nwith a trailing slash is actually a\ndirectory and will have other values\nunderneath it so if i wanted to query\nthe network interfaces\nand because it's a directory i need to\nmake sure that i add the trailing slash\nat the end and as you can see here i\nhave the network interface of 0 and i'm\ngoing to go ahead and query that\nand here i will have access to all the\ninformation about the network interface\non this instance so i'm going to go\nahead and query the network on this\ninterface and as expected the default\nnetwork is displayed i'm going to\nquickly go ahead and clear my screen and\ni'm going to go ahead and query some\nmore metadata this time i'm going to do\nthe name of the server and as expected\nbowtie dash web server showed up and\nbecause it's an endpoint i don't need\nthe trailing slash at the end i'm going\nto go ahead and do one more this time\ni'm going to choose machine type\nand again as expected the e2 micro\nmachine type is displayed and so just as\na note for those who haven't noticed any\ntime that you query metadata it will\nshow up to the left of your command\nprompt now what i've shown you here is\nwhat you can do with instance metadata\nand so how about if you wanted to query\nany project metadata well instead of\ninstance at the end you would use\nproject with the trailing slash i'm\ngoing to simply click on enter and as\nyou can see here project doesn't give me\na whole lot of options but it does give\nme some important values like project id\nso i'm going to simply query that right\nnow and as expected bowtie inc is\ndisplayed and so this is a great example\nof how to query any default metadata for\ninstances and for projects now you're\nprobably wondering how do i query my\ncustom metadata well once custom\nmetadata has been set you can then query\nit from the attributes directory in the\nattributes directory can be found in\nboth the instance and project metadata\nso i'm going to go ahead and show you\nthat now but first i wanted to add some\ncustom metadata and this can be set in\neither the console the gcloud command\nline tool or using the api and so i'm\ngoing to run the command here gcloud\ncompute instances add dash metadata the\nname of your instance and when you're\nadding custom metadata you would add the\nflag dash dash metadata with the key\nvalue pair which in this example is\nenvironment equals dev and then i'm also\ngoing to add the zone of the instance\nwhich is us east 1a and i'm going to hit\nenter\nand because i had a typo there i'm going\nto go ahead and try that again using us\neast 1b\ni'm going to hit on enter\nand success and so to verify that this\ncommand has worked\ni'm going to go ahead and query the\ninstance and i'm going to go under\nattributes\ni'm going to hit on enter and as you can\nsee here the environment endpoint has\nbeen populated so i'm going to query\nthat and as expected dev is displaying\nas the environment value now if i wanted\nto double check that in the console i\ncan go over to the console i can drill\ndown into bowtie web server\nand if i scroll down to the bottom under\ncustom metadata you can see the key\nvalue pair here has m as the key and dev\nbeing the value and so these are the\nmany different ways that you can query\nmetadata for any instances or projects\nnow i wanted to take a quick moment to\nswitch gears and talk about startup and\nshutdown scripts now compute engine lets\nyou create and run your own startup and\nshutdown scripts on your vm instance and\nthis allows you to perform automation\nthat can perform actions when starting\nup such as installing software\nperforming updates or any other tasks\nthat are defined in the script and when\nshutting down you can allow instances\ntime to clean up on perform tasks such\nas exporting logs to cloud storage or\nbigquery or syncing with other systems\nand so i wanted to go ahead and show you\nhow this would work while combining\nmetadata into the script so i'm going to\ngo ahead and drill down into bow tie web\nserver\ni'm going to click on edit and i'm going\nto scroll down here\nto custom metadata i'm going to click on\nadd item and under key i'm going to type\nin\nstartup dash script and under value i'm\ngoing to paste in my script i'm going to\njust enlarge this here for a second and\ni will be providing the script in the\ngithub repository now just to break it\ndown this is a bash script i'm pulling\nin a variable called name which will\nquery the instance name as well i have a\nvariable called zone which will query\nthe instance zone i'm going to be\ninstalling an apache web server and it's\ngoing to display on a web browser both\nthe server name and the zone that it's\nin and so in order for me to see this\nweb page i also need to open up some\nfirewall rules and so an easy way to do\nthis would be to scroll up to firewalls\nand simply click on allow http and allow\nhttps traffic this will tag the instance\nwith some network tags as http server\nand https server and create two separate\nfirewall rules that will allow traffic\nfor port 80 and port 443 so i'm going to\nleave everything else as is i'm going to\nscroll down to the bottom and click on\nsave okay and it took a few seconds\nthere but it did finish saving i'm going\nto go ahead and go up to the top and\nclick on reset and this will perform a\nhard reset on the instance and will\nallow the startup script to take effect\nso i'm going to click on reset it's\ngoing to ask me if i really want to do\nthis and for the purposes of this\ndemonstration i'm going to click on\nreset please note you should never do\nthis in production as it doesn't do a\nclean shutdown on the operating system\nbut as this is an instance with nothing\non it i'm going to simply click on reset\nnow i'm going to head on back to the\nmain console for my vm instances and i'm\ngoing to record my external ip i'm going\nto open up a new browser i'm going to\nzoom in for better viewing and i'm going\nto paste in my ip address and hit enter\nand as you can see here\ni've used my startup script to display\nnot only this web page but i was able to\nbring in metadata that i pulled using\nvariables and was able to display it\nhere in the browser and so before i end\nthis demonstration i wanted to show you\nanother way of using a startup script\nbut being able to pull it in from cloud\nstorage so i'm going to go back to the\nnavigation menu and i'm going to scroll\ndown to storage\nhere i will create a new bucket\nand for now find a globally unique name\nto name your bucket and i'm going to\ncall my bucket bowtie web server site\nand i'm going to leave the rest as its\ndefault and i'm going to simply click on\ncreate\nand if you have a globally unique name\nfor your bucket you will be prompted\nwith this page without any errors and\ni'm going to go ahead and upload the\nscript\nand you can find this script in the\ngithub repository so i'm going to go\ninto my repo and i'm going to look for\nbow tie start up final sh i'm going to\nopen it\nand now that i have the script uploaded\ni'm going to drill into this file so i\ncan get some more information that i\nneed for the instance and what i need\nfrom here is to copy the uri so i'm\ngoing to copy this to my clipboard and\ni'm going to head back on over to\ncompute engine i'm going to drill down\ninto my instance\ni'm going to click on edit at the top\nand i'm going to scroll down to where it\nsays custom metadata and here i'm going\nto remove the startup script metadata\nand i'm going to add a new item and i'm\ngoing to be adding startup dash script\ndash url and in the value i'm going to\npaste in the uri that i had just copied\nover and this way on startup my instance\nwill use this startup script that's in\ncloud storage so i'm going to scroll\ndown to the bottom click on save\nand now i'm going to click on reset i'm\ngoing to reset here i'm going to go back\nto the main page for my vm instances and\ni can see that my external ip hasn't\nchanged so i'm going to go back to my\nopen web browser and i'm going to click\non refresh and success and as you can\nsee here i've taken a whole bunch of\ndifferent variables including the\nmachine name\nthe environment variable the zone as\nwell as the project and i've displayed\nit here in a simple website and although\nyou may not find this website\nspecifically useful in your production\nenvironment this is just an idea to get\ncreative using default and custom\nmetadata along with a startup script\ni've seen in some environments where\npeople have multiple web servers and\ncreate a web page to display all the\nspecific web servers in their different\nenvironments along with their ips their\ndata and their configurations and so\njust as a recap we've gone through the\ndefault and custom metadata and how to\nquery it in an instance we also went\nthrough startup scripts and how to apply\nthem both locally and using cloud\nstorage and so i hope you have enjoyed\nhaving fun with metadata and using them\nin startup scripts such as this one i\nalso hope you find some fascinating use\ncases in your current environments and\nso before you go just a quick reminder\nto delete any resources that you've\ncreated to not incur any added costs and\nso that's pretty much all i wanted to\ncover with this demonstration so you can\nnow mark this as complete and let's move\non to the next one\n[Music]\nwelcome back and in this lesson i'm\ngoing to be discussing compute engine\nbilling now when it comes to pricing\nwith regards to compute engine i've only\ngone over the fact that instances are\ncharged by the second after the first\nminute but i never got into the depths\nof billing and the various ways to save\nmoney when using compute engine in this\nlesson i will be unveiling how both\ncosts and discounts are broken down in\ngoogle cloud as it refers to the\nresource based billing model and the\nvarious savings that can be had when\nusing compute engine so with that being\nsaid let's dive in\nnow each vcpu and each gigabyte of\nmemory on compute engine is built\nseparately rather than as part of a\nsingle machine type you are still\ncreating instances using pre-defined\nmachine types but your bill shows them\nas individual cpus and memory used per\nhour and this is what google refers to\nas resource-based billing which i will\nget into in just a bit the billing model\napplies to all vcpus gpus and memory\nresources and are charged a minimum of\none minute for example if you run your\nvirtual machine for 30 seconds you will\nbe billed for one minute of usage after\none minute instances are charged in one\nsecond increments instance up time is\nanother determining factor for cost and\nis measured as the number of seconds\nbetween when you start an instance and\nwhen you stop an instance in other words\nwhen your instance is in the terminated\nstate if an instance is idle but still\nhas a state of running it will be\ncharged for instance uptime but again\nyou will not be charged if your instance\nis in a terminated state\nnow getting into reservations these are\ndesigned to reserve the vm instances you\nneed so after you create a reservation\nthe reservation ensures that those\nresources are always available for you\nto use during the creation process you\ncan choose how a reservation is to be\nused for example you can choose for a\nreservation to be automatically applied\nto any new or existing instances that\nmatch the reservation's properties which\nis the default behavior or you can\nspecify that reservation to be consumed\nby a specific instance in all cases a vm\ninstance can only use a reservation if\nits properties exactly match the\nproperties of the reservation after you\ncreate a reservation you begin paying\nfor the reserved resources immediately\nand they remain available for your\nproject to use indefinitely until the\nreservation is deleted reservations are\ngreat to ensure that your project has\nresources for future increases in demand\nincluding planned or unplanned spikes\nbackup and disaster recovery or for a\nbuffer when you're planning growth when\nyou no longer need a reservation you can\nsimply delete the reservation to stop\nincurring charges each reservation like\nnormal vms are charged based on existing\non-demand rates which include sustained\nuse discounts and are eligible for\ncommitted use discounts which i will be\ngetting into in just a bit now\npurchasing reservations do come with\nsome caveats\nreservations apply only to compute\nengine data proc\nand google kubernetes engine as well\nreservations don't apply to shared core\nmachine types preemptable vms sole\ntenant nodes\ncloud sql and data flow now as i\nexplained before each vcpu and each\ngigabyte of memory on compute engine is\nbuilt separately rather than as a part\nof a single machine type and is billed\nas individual cpus and memory used per\nhour resource-based pricing allows\ncompute engine to apply sustained use\ndiscounts\nto all of your pre-defined machine type\nusage in a region collectively\nrather than to individual machine types\nand this way vcpu and memory usage for\neach machine type can receive any one of\nthe following discounts sustained use\ndiscounts committed use discounts and\npreemptable vms and i'd like to take a\nmoment to dive into a bit of detail on\neach of these discount types starting\nwith sustained use discounts\nnow sustained use discounts are\nautomatic discounts for running specific\ncompute engine resources a significant\nportion of the billing month for example\nwhen you run one of these resources for\nmore than 25 percent of a month compute\nengine automatically gives you a\ndiscount for every incremental minute\nthat you use for that instance now the\nfollowing tables show the discounts\napplied for the specific resources\ndescribed here now for the table on the\nleft for general purpose n2 and n2d\npredefined and custom machine types and\nfor compute optimized machine types you\ncan receive a discount of up to 20\npercent the table on the right shows\nthat for general purpose n1 predefined\nand custom machine types as well as sole\ntenant nodes and gpus you can get a\ndiscount of up to 30 percent sustained\nuse discounts are applied automatically\nto usage within a project separately for\neach region so there is no action\nrequired on your part to enable these\ndiscounts now some notes that i wanted\nto cover here is that sustained use\ndiscounts automatically apply to vms\ncreated by both google kubernetes engine\nand compute engine as well they do not\napply to vms created using the app\nengine flexible environment as well as\ndata flow and the e-2 machine types\nsustained use discounts are applied on\nincremental use after you reach certain\nusage thresholds this means that you pay\nonly for the number of minutes that you\nuse an instance and compute engine\nautomatically gives you the best price\ngoogle truly believes that there's no\nreason to run an instance for longer\nthan you need it\nnow sustained use discounts are applied\non incremental use after you reach\ncertain usage thresholds this means that\nyou pay only for the number of minutes\nthat you use an instance and compute\nengine automatically gives you the best\nprice now consider a scenario where you\nhave two instances or sole tenant nodes\nin the same region that have different\nmachine types and run at different times\nof the month\ncompute engine\nbreaks down the number of vcpus and\namount of memory used across all\ninstances that use predefined machine\ntypes and combines the resources to\nqualify for the largest sustained usage\ndiscounts possible now in this example\nassume you run the following two\ninstances\nin the us east one region during a month\nfor the first half you run an n1\nstandard four instance with four vcpus\nand 15 gigabytes of memory for the\nsecond half of the month you run a\nlarger and one standard 16 instance with\n16 vcpus and 60 gigabytes of memory in\nthis scenario compute engine reorganizes\nthese machine types into individual vcpu\nand memory resources and combines their\nusage to create the following resources\nfor vcpus so because four vcpus were\nbeing used for the whole month the\ndiscount here would be thirty percent\nthe additional twelve vcpus were added\non week two in the month and so for\nthose 12 vcpus they would receive a 10\ndiscount and this is how discounts are\napplied when it comes to sustained use\ndiscounts now moving on to the next\ndiscount type is committed use discounts\nso compute engine lets you purchase\ncommitted use contracts in return for\ndeeply discounted prices for vm usage so\nwhen you purchase a committed use\ncontract you purchase compute resource\nwhich is comprised of vcpus memory\ngpus and local ssds and you purchase\nthese resources at a discounted price in\nreturn for committing to paying for\nthose resources for one year or three\nyears committed use discounts are ideal\nfor workloads with predictable resource\nneeds so if you know exactly what you're\ngoing to use committed use discounts\nwould be a great option for this and the\ndiscount is up to 57\nfor most resources like machine types or\ngpus when it comes to memory optimized\nmachine types the discount is up to 70\npercent now when you purchase a\ncommitted use contract you can purchase\nit for a single project and applies to a\nsingle project by default or you can\npurchase multiple contracts which you\ncan share across many projects by\nenabling shared discounts once purchased\nyour billed monthly for the resources\nyou purchased for the duration of the\nterm you selected whether you use the\nservices or not if you have multiple\nprojects that share the same cloud\nbilling account you can enable committed\nuse discount sharing so that all of your\nprojects within that cloud billing\naccount share all of your committed use\ndiscount contracts your sustained use\ndiscounts are also pooled at the same\ntime now some caveats when it comes to\ncommitted use discounts shared core\nmachines are excluded on this as well\nyou can purchase commitments only on a\nper region basis if a reservation is\nattached to a committed use discount the\nreservation can't be deleted for the\nduration of the commitment so please be\naware now to purchase a commitment for\ngpus or local ssds you must purchase a\ngeneral purpose and one commitment and\nlastly after you create a commitment you\ncannot cancel it you must pay the agreed\nupon monthly amount for the duration of\nthe commitment now committed use\ndiscount recommendations give you\nopportunities to optimize your compute\ncosts by analyzing your vm spending\ntrends with and without a committed use\ndiscount contract by comparing these\nnumbers you can see how much you can\nsave each month with a committed use\ncontract and this can be found under the\nrecommendations tab on the home page in\nthe console and so i wanted to move on\nto the last discount type which are\npreemptable vms now preemptable vms are\nup to eighty percent cheaper than\nregular instances pricing is fixed and\nyou never have to worry about variable\npricing these prices can be found on the\nlink to instance pricing that i have\nincluded in the lesson text a\npreemptable vm is an instance that you\ncan create and run at a much lower price\nthan normal instances however compute\nengine might stop or preempt these\ninstances if it requires access to those\nresources for other tasks as preemptable\ninstances our access compute engine\ncapacity so their availability varies\nwith usage now generally compute engine\navoids preempting instances\nbut compute engine does not use an\ninstant cpu usage or other behavior to\ndetermine whether or not to preempt it\nnow a crucial characteristic to know\nabout preemptable vms is that compute\nengine always stops them after they run\nfor 24 hours and this is something to be\naware of for the exam preemptable\ninstances are finite compute engine\nresources so they might not always be\navailable and if you happen to\naccidentally spin up a preemptable vm\nand you want to shut it down there is no\ncharge if it's running for less than 10\nminutes now another thing to note is\nthat preemptable instances can't live\nmigrate to a regular vm instance or be\nset to automatically restart when there\nis a maintenance event due to the\nlimitations preemptable instances are\nnot covered by any service level\nagreement and when it comes to the\ngoogle cloud free tier credits for\ncompute engine this does not apply to\npreemptable instances so you're probably\nasking when is a great time to use\npreemptable vms well if your apps are\nfault tolerant and can withstand\npossible instance preemptions then\npreemptable instances can reduce your\ncompute engine costs significantly for\nexample batch processing jobs can run on\npreemptable instances if some of those\ninstances stop during processing the job\nslows down but does not completely stop\npreemptable instances create your batch\nprocessing tasks without placing any\nadditional workload on your existing\ninstances and without requiring for you\nto pay full price for additional normal\ninstances and since containers are\nnaturally stateless and fault tolerant\nthis makes containers an amazing fit for\npreemptable vms so running preemptable\nvms for google kubernetes engine is\nanother fantastic use case now it's\nreally critical that you have an\nunderstanding for each different\ndiscount type and when is a good time to\nuse each as you may be presented\ndifferent cost-effective solutions in\nthe exam and understanding these\ndiscount types will prepare you to\nanswer them understanding the theory\nbehind this resource-based pricing model\nall the available discount types along\nwith the types of workloads that are\ngood for each will guarantee that you\nwill become familiar with what types of\nquestions are being asked in the exam\nand will also make you a better cloud\nengineer as you will be able to spot\nwhere you can save money and be able to\nmake the appropriate changes and so\nthat's pretty much all i wanted to cover\nwhen it comes to compute engine billing\nand its discount types so you can now\nmark this lesson as complete and let's\nmove on to the next one\nwelcome back in this lesson i'm going to\nbe covering the fundamentals as it\npertains to storage these concepts are\nneeded to know in order to fully\nunderstand the different google cloud\nstorage options that i will be diving\ninto later as well the exam expects that\nyou know the different types of storage\nthat's available for all the various\nservices\nand so before i get into the different\ntypes of storage i wanted to cover the\nunderlying theory behind it so with that\nbeing said let's dive in\nso i wanted to start off by going\nthrough the three types of storage and\nhow data is presented to a user or to\nthe server there is block storage file\nstorage and object storage these types\nof storage tie into the available\nservices that are available in google\ncloud and they offer different options\nfor different types of workloads and i\nwill be going over each of these in a\nbit of depth and so the first one i\nwanted to touch on is block storage\nnow block storage is sometimes referred\nto as block level storage and is a\ntechnology that is used to store data\nfiles on storage systems or cloud-based\nstorage environments block storage is\nthe fastest available storage type and\nit is also efficient and reliable with\nblock storage files are split into\nevenly sized blocks of data each with\nits own unique identifier it is\npresented to the operating system as\nstructureless raw data in the form of a\nlogical volume or a hard drive and the\noperating system structures it with a\nfile system like ext3 or ext4 on linux\nand ntfs for windows it would then mount\nthis volume or drive as the root volume\nin linux or a c or d drive in windows\nblock storage is usually delivered on\nphysical media in the case of google\ncloud it is delivered as either spinning\nhard drives or solid state drives so in\ngoogle cloud you're presented with block\nstorage that consists of either\npersistent disks or local ssd\nwhich can both be mountable and bootable\nblock storage volumes can then be used\nas your boot volumes for compute\ninstances in google cloud\ninstalled with your operating system of\nchoice and structured so that your\noperating system database or application\nwill then be able to consume it now\nmoving on to the second type of storage\nis file storage\nnow file storage is also referred to as\nfile level or file based storage and is\nnormally storage that is presented to\nusers and applications as a traditional\nnetwork file system in other words the\nuser or application receives data\nthrough directory trees folders and\nfiles file storage also allows you to do\nthe same this functions similarly to a\nlocal hard drive however a structure has\nalready been applied and cannot be\nadjusted after the fact this type of\nstructure only has the capabilities of\nbeing mountable but not bootable you\ncannot install an operating system on\nfile storage as i said before the\nstructure has already been put in place\nfor you and is ready for you or your\napplication to consume due to this\nstructure the service that is serving\nthe file system has some underlying\nsoftware that can handle access rights\nfile sharing file locking and other\ncontrols related to file storage in\ngoogle cloud this service that serves\nthis type of storage is known as cloud\nfile store and is usually presented over\nthe network to users in your vpc network\nusing the nfs protocol or in this case\nnfs version 3. but i'll be diving into\nthat a little bit later and the last\nstorage type that i wanted to cover is\nobject storage\nnow object storage also referred to as\nobject-based storage\nis a general term that refers to the way\nin which we organize and work with units\nof storage called objects and this is a\nstorage type that is a flat collection\nof unstructured data and this type of\nstorage holds no structure like the\nother two types of storage and is made\nup of three characteristics the first\none is the data itself and this could be\nanything from movies songs and even\nphotos of men in fancy bow ties the data\ncould also be binary data as well the\nsecond characteristic is the metadata\nand this is usually related to any\ncontextual information about what the\ndata is or anything that is relevant to\nthe data and the third characteristic is\na globally unique identifier and this\nway it's possible to find the data\nwithout having to know the physical\nlocation of the data and this is what\nallows object storage to be infinitely\nscalable as it doesn't matter where the\nobject is stored this type of storage\ncan be found in google cloud and is\nknown as cloud storage cloud storage is\nflat storage with a logical container\ncalled a bucket that you put objects\ninto now although this type of storage\nis not bootable using an open source\ntool called fuse this storage type can\nbe mounted in google cloud and i will be\ncovering that a little bit later in the\ncloud storage lesson but in most cases\nobject store is designed as the type of\nstorage that is not bootable or\nmountable and because of the\ncharacteristics of this storage\nit allows object storage again to be\ninfinitely scalable and so these are the\nthree main types of storage that you\nwill need to know and understand as each\nhas its use cases so if you're looking\nfor high performance storage you will\nalways look to block storage to satisfy\nyour needs if you're looking to share\nfiles across multiple systems or have\nmultiple applications\nthat need access to the same files and\ndirectories then file storage might be\nyour best bet if you're looking to store\nterabytes of pictures for a web\napplication and you don't want to worry\nabout scaling object storage will allow\nyou to read and write an infinite amount\nof pictures that will meet your\nrequirements so now that we've covered\nthese storage types let's take a few\nmoments to discuss storage performance\nterms now when discussing storage\nperformance there are some key terms to\nunderstand that when used together\ndefine the performance of your storage\nfirst there is io which stands for input\noutput\nand is a single read write request and\ncan be measured in block size and this\nblock size can vary anywhere from one\nkilobyte to four megabytes and beyond\ndepending on your workload now q depth\nwhen it comes to storage is the number\nof pending input output requests\nwaiting to be performed on a disk io\nrequests become queued when reads or\nwrites are requested faster than they\ncan be processed by the disk when io\nrequests are queued the total amount of\ntime it takes to read or write data to\ndisk becomes significantly higher this\nis where performance degradation can\noccur and queue depth must be adjusted\naccordingly now the next term is a\ncommon touch point when it comes to\ndiscussing storage performance on gcp\nand on the exam which is iops and this\nis a metric that stands for input output\noperations per second this value\nindicates how many different input or\noutput operations a device or group of\ndevices can perform in one second more\nvalue in the iops signifies the\ncapability of executing more operations\nper second and again this is a common\ntouch point that i will be diving into a\nlittle bit later now next up is\nthroughput and this is the speed at\nwhich the data is transferred in a\nsecond and is most commonly measured in\nmegabytes per second this is going to be\nanother common topic that comes up\nfrequently when discussing storage on\ngcp as well\nlatency is the measurement of delay\nbetween the time data is requested when\nthe data starts being returned and is\nmeasured in milliseconds so the time\neach io request will take to complete\nresults in being your average latency\nand the last two terms i wanted to bring\nup is sequential and random access\nsequential would be a large single file\nlike a video and random access would be\nloading an application or an operating\nsystem so lots of little files that are\nall over the place it's obvious that\naccessing data randomly is much slower\nand less efficient than accessing it\nsequentially and this can also affect\nperformance now why i bring up all these\nterms is not about calculating the\naverage throughput but to give you a\nholistic view on storage performance\nas all these characteristics play a part\nin defining the performance of your\nstorage\nthere is not one specific characteristic\nthat is responsible for disk performance\nbut all have a role in achieving the\nhighest performance possible\nfor your selected storage now i know\nthis is a lot of theory to take in but\nthis will all start to make more sense\nwhen we dive into other parts of the\ncourse where we will discuss disk\nperformance with all these\ncharacteristics as it relates to compute\nengine and other services that use\nstorage it is crucial to know the\nstorage types as well as the performance\ncharacteristics as it will bring clarity\nto questions in the exam and also give\nyou a better sense on how to increase\nyour storage performance in your work\nenvironment and so that's pretty much\nall i wanted to cover when it comes to\nstorage types and storage performance as\nit pertains to storage as a whole so you\ncan now mark this lesson as complete and\nlet's move on to the next one\n[Music]\nwelcome back and in this lesson i'm\ngoing to be covering persistent disks\nand local ssds i'm going to be getting\ninto the detail with the most commonly\nused storage types for instances which\nare both persistent disks and local ssds\nthis lesson will sift through all the\ndifferent types of persistent disks and\nlocal ssds along with the performance of\neach knowing what type of disk to use\nfor your instance and how to increase\ndisk performance shows up on the exam\nand so i want to make sure to cover it\nin detail and leave no stone unturned so\nwith that being said let's dive in now\npersistent disks and local ssds are the\ntwo available types of block storage\ndevices\navailable in google cloud and the\ndetermining factor of what you will use\nfor your particular scenario will depend\non your use case and the specific\ncharacteristics that you require from\neach storage medium now by default each\ncompute engine instance has a single\nboot persistent disk that contains the\noperating system when you require\nadditional storage space you can add one\nor more additional persistent disks or\nlocal ssds to your instance and i will\nbe going through these storage options\nalong with their characteristics now as\nyou can see here persistent disks and\nlocal ssds come in a slew of different\ntypes as well with persistent disks they\nare available in both zonal and regional\noptions so starting off with persistent\ndisks you have three different types you\ncan choose from as well you have the\nflexibility of choosing from two\ndifferent geographic options when it\ncomes to the redundancy of your\npersistent disks and i will be covering\nthe zonal and regional options in detail\nin just a bit now persistent disks are\ndurable network storage devices\nthat your instances can access like\nphysical disks in a computer so these\nare not physically attached disks but\nnetwork disks that are connected over\ngoogle's internal network persistent\ndisks are independent of your instance\nand can persist after your instance has\nbeen terminated and this can be done by\nturning on this flag upon creation you\ncan even detach your disk and move it to\nother instances when you need to scaling\npersistent disks can be done\nautomatically and on the fly by using\nthe disk resize feature and this gives\nyou the flexibility to resize your\ncurrent persistent disks with no\ndowntime and even add additional disks\nto your instance for additional\nperformance and storage persistent disks\nare also encrypted by default and google\nalso gives you the option of using your\nown custom keys each persistent disk can\nbe up to 64 terabytes in size and most\ninstances can have up to 128 persistent\ndisks and up to 257 terabytes of total\npersistent disk space attached and just\nas a note share core machine types are\nlimited to 16 persistent disks and 3\nterabytes of total persistent disk space\nand so now that i've gone through the\ndetails of persistent disks i wanted to\ndive into the two geographic options\nthat's available for persistent disks\nfirst starting with zonal now zonal\npersistent disks are disks that are\navailable in one zone in one region\nthese disks are the most commonly used\npersistent disks for general day-to-day\nusage and used for those whose workloads\nare not sensitive to specific zone\noutages they are redundant within the\nzone you've created them in but cannot\nsurvive an outage of that zone and may\nbe subjected to data loss if that\nspecific zone is affected and this is\nwhere snapshots should be a part of your\nhigh availability strategy when using\nzonal persistent disks snapshots are\nincremental and can be taken even if you\nsnapshot disks that are attached to\nrunning instances and i'll be going into\ndetail about snapshots in a later lesson\nzonal persistent disks can also be used\nwith any machine type including\npre-defined shared core and custom\nmachine types now when it comes to\nregional persistent disks they have\nstorage qualities that are similar to\nzonal persistent disks however regional\npersistent disks provide durable storage\nand replication of data between two\nzones in the same region if you are\ndesigning systems that require high\navailability on compute engine you\nshould use regional persistent disks\ncombined with snapshots for durability\nregional persistent disks are also\ndesigned to work with regional managed\ninstance groups in the unlikely event of\na zonal outage you can usually fail over\nyour workload running on regional\npersistent disks to another zone by\nsimply using the force attached flag\nregional persistent disks are slower\nthan zonal persistent disks and should\nbe taken into consideration when write\nperformance is less critical than data\nredundancy across multiple zones now\nnoting a couple of caveats here when it\ncomes to disk limits regional persistent\ndisks are similar to zonal persistent\ndisks however regional standard\npersistent disks have a 200 gigabyte\nsize minimum and may be a major factor\nwhen it comes to cost so please be aware\nas well you can't use regional\npersistent disks with memory optimized\nmachine types or compute optimized\nmachine types now these two geographic\noptions are available for all three\npersistent disk types whose\ncharacteristics i will dive into now\nstarting off with the standard\npersistent disk type also known in\ngoogle cloud as pd standard now these\npersistent disks are backed by standard\nhard disk drives and these are your\nstandard spinning hard disk drives and\nallows google cloud to give a cost\neffective solution for your specific\nneeds standard persistent disks are\ngreat for large data processing\nworkloads that primarily use sequential\nios now as explained earlier sequential\naccess would be accessing larger files\nand would require less work by the hard\ndrive thus decreasing latency as there\nare physical moving parts in this hard\ndrive this would allow the disc to do\nthe least amount of work as possible and\ntherefore making it the most efficient\nas possible and therefore sequential ios\nare best suited for this type of\npersistent disk and again this is the\nlowest price persistent disks out of all\nthe persistent disk types now stepping\ninto the performance of standard\npersistent disks for just a second\nplease remember that iops and throughput\nperformance depends on disk size\ninstance vcpu count and i o block size\namong other factors and so this table\nhere along with the subsequent tables\nyou will see later are average speeds\nthat google has deemed optimum for these\nspecific disk types they cover the\nmaximum sustained iops as well as the\nmaximum sustained throughput along with\nthe granular breakdown of each here you\ncan see the differences between both the\nzonal and regional standard pd and as\nyou can see here in the table the zonal\nstandard pd and the regional standard pd\nare pretty much the same when it comes\nto most of these metrics but when you\nlook closely at the read iops per\ninstance this is where they differ where\nthe zonal standard pd has a higher read\niops per instance than the regional\nstandard pd and this is because the\nregional standard pd is accessing two\ndifferent disks in two separate zones\nand so the latency will be higher the\nsame thing goes for right throughput per\ninstance and so this would be a decision\nbetween high availability versus speed\nmoving on to the next type of persistent\ndisk is the balanced persistent disk in\ngoogle cloud known as pd balance this\ndisk type is the alternative to the ssd\npersistent disks that balance both\nperformance and cost as this disk type\nhas the same maximum iops as the ssd\npersistent disk type but holds a lower\niops per gigabyte and so this disk is\ndesigned for general purpose use the\nprice for this disk also falls in\nbetween the standard and the ssd\npersistent disks so this is basically\nyour middle of the road disk when you're\ntrying to decide between price and speed\nmoving straight into performance i put\nthe standard pd metric here so that you\ncan see a side-by-side comparison\nbetween the balance pd and the standard\npd and as you can see here when it comes\nto the metrics under the maximum\nsustained iops the balance pd is\nsignificantly higher than the standard\npd in both the zonal and regional\noptions as well looking at the maximum\nsustained throughput the read write\nthroughput per gigabyte is a little over\ntwo times faster and the right\nthroughput per instance is three times\nfaster so quite a bit of jump from the\nstandard pd to the balance pd and moving\non to the last persistent disk type is\nthe ssd persistent disk type also known\nin google cloud as a pd ssd and these\nare the fastest persistent disks that\nare available\nand are great for enterprise\napplications and high performance\ndatabases that demand lower latency and\nmore iops so this would be great for\ntransactional databases or applications\nthat require demanding and near\nreal-time performance the pd ssds have a\nsingle digit millisecond latency and\nbecause of this comes at a higher cost\nand therefore is the highest price\npersistent disk moving on to the\nperformance of this persistent disk this\ndisk type is five times faster when it\ncomes to read iops per gigabyte than the\nbalance pd as well as five times faster\nfor the right iops per gigabyte and so\nthe table here on the left shows the\nperformance for the pd ssd and the table\non the right shows the performance of\nboth the standard pd and the balance pd\nand so here you can see the difference\nmoving from the standard pd over to the\nssd pd the read write throughput per\ninstance stays the same from the\nstandard pd all the way up to the ssd pd\nbut where the ssd outperforms all the\nother ones is through the read write\nthroughput per gigabyte it's one and a\nhalf times faster than the balance pd\nand four times faster than the standard\npd and again you will also notice a drop\nin performance from the zonal option to\nthe regional option and so this is the\nend of part one of this lesson as it\nstarted to get a little bit long and so\nwhenever you're ready you can join me in\npart two where i will be starting\nimmediately from the end of part one so\nyou can complete this video and i will\nsee you in the next\n[Music]\nwelcome back this is part two of the\npersistent disks and local ssds lesson\nand we will be starting exactly where we\nleft off in part one so with that being\nsaid let's dive in and so now that i've\ncovered all the persistent disk types i\nwanted to move into discussing the\ncharacteristics of the local ssd local\nssds are physically attached to the\nserver that hosts your vm instance local\nssds have higher throughput and lower\nlatency than any of the available\npersistent disk options and again this\nis because it's physically attached and\nthe data doesn't have to travel over the\nnetwork now the crucial thing to know\nabout local ssds is that the data you\nstore on a local ssd persists only until\nthe instance is stopped or deleted once\nthe instance is stopped or deleted your\ndata will be gone and there is no chance\nof getting it back now each local ssd is\n375 gigabytes in size but you can attach\na maximum of 24 local ssd partitions for\na total of 9 terabytes per instance\nlocal ssds are designed to offer very\nhigh iops and very low latency and this\nis great for when you need a fast\nscratch disk or a cache and you don't\nwant to use instance memory local ssds\nare also available in two flavors scuzzy\nand mvme now for those of you who are\nunaware\nscuzzy is an older protocol and made\nspecifically for hard drives it also\nholds the limitation of having one queue\nfor commands nvme on the other hand also\nknown as non-volatile memory express is\na newer protocol and is designed for the\nspecific use of flash memory and\ndesigned to have up to 64 000 qs as well\neach of those queues in turn can have up\nto 64 000 commands running at the same\ntime and thus making nvme infinitely\nfaster now although nvme comes with\nthese incredible speeds it does come at\na cost and so when it comes to the\ncaveats of local ssd although compute\nengine automatically encrypts your data\nwhen it's written to local ssd storage\nspace you can't use customer supplied\nencryption keys with local ssds as well\nlocal ssds are only available for the n1\nn2 and compute optimized machine types\nnow moving on to the performance of\nlocal ssds throughput is the same\nbetween scuzzy and nvme but the read\nwrite iops per instance is where nvme\ncomes out on top and as you can see here\nthe read iops per instance is a whopping\ntwo million four hundred thousand read\niops per instance as well the right iops\nper instance is 1.2 million over the 800\n000 for local ssd now before i end this\nlesson i wanted to cover a few points on\nperformance scaling\nas it pertains to block storage on\ncompute engine now persistent disk\nperformance scales with the size of the\ndisk and with the number of vcpus on\nyour vm instance persistent disk\nperformance scales linearly until it\nreaches either the limits of the volume\nor the limits of each compute engine\ninstance whichever is lower now this may\nseem odd that the performance of your\ndisk scales with cpu count but you have\nto remember persistent disks aren't\nphysically attached to your vm they are\nindependently located as such i o on a\npd is a network operation and thus it\ntakes cpu to do i o which means that\nsmaller instances run out of cpu to\nperform disk io at higher rates so in\norder for you to get better performance\nyou can increase the iops for your disk\nby resizing them to their maximum\ncapacity but once that size has been\nreached you will have to increase the\nnumber of cpus on your instance in order\nto increase your disk performance a\nrecommendation by google is that you\nhave one available vcpu for every 2000\nto\niops of expected traffic so to sum it up\nperformance scales until it reaches\neither the limits of the disk or the\nlimits of the vm instance to which the\ndisk is attached the vm instance limits\nare determined by the machine type and\nthe number of vcpus of the instance now\nif you want to get more granular with\nregards to disk performance i've\nincluded a few links in the lesson text\nthat will give you some more insight but\nfor most general purposes and for the\nexam remember that persistent disk\nperformance is based on the total\npersistent disk capacity\nattached to an instance and the number\nof vcpus that the instance has and so\nthat's pretty much all i wanted to cover\nwhen it comes to persistent disks and\nlocal ssds so you can now mark this\nlesson as complete and let's move on to\nthe next one\nwelcome back in this demo i'm going to\nbe covering how to manage and interact\nwith your disks on compute engine this\ndemo is designed to give you both\nexperience and understanding on working\nwith persistent disks and how you would\ninteract with them we're going to start\nthe demo off by creating an instance\nwe're then going to create a separate\npersistent disk and attach it to the\ninstance we're going to then interact\nwith the disk and then resize the disk\nwhile afterwards we will delete it and\nwe're going to do this all by both using\nthe console and the command line so with\nthat being said let's dive in so here i\nam in the console i'm logged in as tony\nbowties gmail.com and i am in project\nbowtie inc and so the first thing we\nneed to do to kick off this demo is to\ncreate an instance that we can attach\nour disk to but first i always like to\nmake sure that i have a vpc to deploy my\ninstance into with its corresponding\ndefault firewall rules so i'm going to\nhead on over to the navigation menu\nand i'm going to go down to vpc network\nand as expected my default vpc has been\ncreated and just to make sure that i\nhave all my necessary firewall rules i'm\ngoing to drill down into the vpc and\nhead on over to firewall rules i'm going\nto click on firewall rules and the\nnecessary firewall rule that i need for\nssh is created and so i can go ahead and\ncreate my instance so i'm going to go\nback up to the navigation menu and i'm\ngoing to go over to compute engine so\ni'm going to go ahead and click on\ncreate and i'm going to name this\ninstance bowtie dash instance and for\nthe sake of this demo i'll add in a\nlabel here the key is going to be\nenvironment and the value will be\ntesting i'm going to go down to the\nbottom click on save with regards to the\nregion i'm going to select us east 1 and\ni'm going to keep the zone as the\ndefault for us east 1b and under machine\ntype to keep things cost effective i'm\ngoing to use an e2 micro shared core\nmachine and i'm going to scroll down to\nservice account and under service\naccount you want to select the set\naccess for each api\nyou want to scroll down to compute\nengine and here you want to select read\nwrite and this will give us the\nnecessary permissions in order to\ninteract with our disk that we will be\ncreating later so i'm going to scroll\ndown to the bottom here and i'm going to\nleave everything else set at its default\nand just before creating the instance\nplease do remember you can always click\non the command line link where you can\nget the gcloud command to create this\ninstance through the command line i'm\ngoing to close this up and i'm going to\nsimply click on create i'm just going to\nwait a few seconds here for my instance\nto come up okay and my instance is up\nand so now what we want to do is we want\nto create our new disk so i'm going to\ngo over here to the left hand menu and\ni'm going to click on disks and as you\ncan see here the disk for the instance\nthat i had just created has 10 gigabytes\nin us east 1b and we want to leave that\nalone and we want to create our new disk\nso i'm going to go up to the top here\nand simply click on create disk\nand so for the name of the disk i'm\ngoing to call this disk new pd for\npersistent disk and i'm going to give it\nthe same description i'm going to keep\nthe type as standard persistent disk and\nfor the region i want to select us east\none i'm going to keep the zone as its\ndefault in us east 1b and as the disk is\nin us east 1b i'll be able to attach it\nto my instance and so just as a note\nhere there is a selection where you can\nreplicate this disk within the region if\ni click that off i've now changed this\nfrom a zonal persistent disk to a\nregional persistent disk and over here\nin zones it'll give me the option to\nselect any two zones that i prefer and\nso if you're looking at creating some\nregional persistent disks these are the\nsteps you would need to take in order to\nget it done in the console now in order\nto save on costs i'm going to keep this\nas a zonal persistent disk so i'm going\nto click on cancel i'm going to uncheck\nthe option and make sure your region is\nstill set at us east 1 and your zone is\nselected as us east 1b we're going to\nleave the snapshot schedule alone and\ni'll be diving into snapshot schedules\nin a later lesson i'm going to scroll\ndown here to source type i'm going to\nkeep it as blank disk and the size here\nis set at 500 gigabytes and we want to\nset it to 100 gigabytes but before we do\nthat i wanted to bring your attention to\nthe estimated performance here you can\nsee the sustain random iops limits as\nwell as the throughput limit and so\ndepending on the size of the disk that\nyou want to add these limits will change\naccordingly so if i change this to 100\nmy sustained random iops limit on read\nwent from 375 iops to 75 iops and so\nthis is a great demonstration that the\nlarger your disc the better your\nperformance and so this is a great way\nto figure out on what your performance\nwill be before you create your disk and\ni've also been prompted with a note here\nsaying that because my disk is under 200\ngigabytes that i will have reduced\nperformance and so for this demo that's\nokay i'm going to keep my encryption as\nthe google manage key and under labels i\nwill add environment as the key and\nvalue is testing\nand so now that i've entered all my\noptions i'm going to simply click on\ncreate\nand i'm going to give it a few seconds\nand my new disk should be created okay\nand my new disk has been created and you\ncan easily create this disk through the\ncommand line and i will be supplying\nthat in the lesson text i merely want to\ngo through the console setup so that you\nare aware of all the different options\nand so now that i've created my disk and\ni've created my instance i want to now\nlog into my instance and attach this new\ndisk so i'm going to go back to vm\ninstances and here i want to ssh into\nthe bowtie instance and i'm going to\ngive it a few seconds here to connect\nand i'm going to zoom in for better\nviewing i'm going to clear my screen\nand so the first thing i want to do is i\nwant to list all my block devices that\nare available to me on this instance and\nthe linux command for that is ls blk\nand as you can see my boot disk has been\nmounted\nand is available to me and so now i want\nto attach the new disk that we just\ncreated and just as a note i could as\neasily have done this in the console but\ni wanted to give you an idea of what it\nwould look like doing it from the\ncommand line and so i'm going to paste\nin the command to attach the disk which\nis gcloud compute instances attach dash\ndisk the name of the instance which is\nbow tie dash instance along with the\nflag dash dash disk the disk name which\nis new pd and the zone of the disk using\nthe zone flag with us east 1b so i'm\ngoing to go ahead and hit enter\nand no errors came up so i'm assuming\nthat this had worked and so just to\ndouble check i'm gonna run the lsblk\ncommand again and success as you can see\nhere my block device sdb has been\nattached to my instance and is available\nto me with the size of 100 gigabytes and\nso now i want to look at the state that\nthis roblox device is in and so the\ncommand for that will be sudo\nfile dash s followed by the path of the\nblock device which is forward slash dev\nforward slash sdb i'm going to hit on\nenter and as you can see it is showing\ndata which means that it is just a raw\ndata device and so in order for me to\ninteract with it i need to format the\ndrive with a file system that the\noperating system will be able to\ninteract with and so the command to\nformat the drive would be sudo mkfs\nwhich is make file system i'm going to\nuse ext4 as the file system minus\ncapital f along with the path of the new\ndisk so i'm going to hit on enter and no\nerrors so i'm assuming that it was\nsuccessful so just to verify i'm going\nto run the sudo file minus s command and\nas you can see here because the disk now\nhas a file system i've been given the\ninformation with regards to this disk\nwhereas before it was simply raw data\nand so now that we've created our disk\nand we've formatted our disk to a file\nsystem that the operating system is able\nto read we need to now mount the disk\nand so in order to do that we need to\ncreate a mount point so i'm going to\nfirst clear the screen and i'm going to\nrun the command sudo mkdir and the new\nmount point i'm going to call it slash\nnew pd i'm going to hit enter and now\ni'm going to mount the disk and the\ncommand for that is sudo mount the path\nfor the block device which is forward\nslash dev forward slash sdb and then the\nmount point which is forward slash new\npd i'm going to hit enter no errors so\ni'm assuming that it had worked but just\nto verify i'm going to run the command\nlsblk\nand success as you can see sdb has now\nbeen mounted as new pd and so now i can\ninteract with this disk so the first\nthing i want to do is i want to change\ndirectories to this mount point i'm in\nnow new pd i'm going to do an ls and so\njust as a note for those of you who are\nwondering the lost and found directory\nis found on each linux file system and\nthis is designed to place orphaned or\ncorrupted files or any corrupted bits of\ndata from the file system to be placed\nhere and so it's not something that you\nwould interact with but always a good to\nknow so i'm going to now create a file\nin new pd so i'm going to run the\ncommand sudo nano file a bow ties dot\ntext so file a bow ties is the file that\ni'm going to create nano is my text\neditor and so i'm going to hit on enter\nand so in this file i'm going to type in\nbow ties are so classy\nbecause after all they are i'm going to\nhit ctrl o to save i'm going to hit\nenter to verify it and ctrl x to exit so\nif i do another ls i can see the file of\nbow ties has been created also by\nrunning the command df minus k i'll be\nable to see the file system here as well\nand so this is the end of part one of\nthis demo it was getting a bit long so i\ndecided to break it up this would be a\ngreat opportunity for you to get up have\na stretch get yourself a coffee or tea\nand whenever you're ready you can join\nme in the next one where part two will\nbe starting immediately from the end of\npart one\n[Music]\nwelcome back this is part two of this\ndemo and we're gonna continue\nimmediately from the end of part one so\nwith that being said let's dive in and\nso what i want to do now is i want to\nreboot the instance in order to\ndemonstrate the mounting of this device\nand i'm going to do that by using the\ncommand sudo reboot it's going to\ndisconnect me i'm going to click on\nclose and i'm going to wait about a\nminute for it to reboot okay and it's\nbeen about a minute so i'm going to now\nssh into my instance\nokay and here i am back again logged\ninto my instance i'm going to quickly\nclear the screen and i'm going to run\nthe lsblk command now what i wanted to\ndemonstrate here is that although i\nmounted the new device it did not stay\nmounted through the reboot and this is\nbecause there is a configuration file in\nlinux that points to which partitions\nget mounted automatically upon startup\nthat i need to edit in order to make\nsure that this device is mounted every\ntime the instance reboots and so in\norder to do that i need to edit a file\ncalled fstab and i'm going to have to\nadd the unique identifier for this\npartition also known as the device sdb\nand this will mount the partition\nautomatically every time there happens\nto be a reboot so in order to do that\ni'm going to run the command sudo blk id\nand the path of the block device forward\nslash dev forward slash sdb i'm going to\nhit on enter and here is the identifier\nalso known as the uuid that i need to\nappend to the fstab file so i'm going to\ncopy the uuid\nand i'm going to use the command\nsudo nano\netc\nfs tab and i'm going to hit on enter and\nhere you will find the uuid for your\nother partitions and so you're going to\nbe appending a line here right at the\nend so i'm going to move my cursor down\nhere i'm going to type in uuid equals\nand then the uuid that i had copied\nearlier the amount point which is going\nto be forward slash new pd the type of\nfile system which is ext4 along with\ndefaults\ncomma no fail i'm going to hit control o\nto save hit enter to verify and control\nx to exit and so now i'm going to mount\nthis device by running the command sudo\nmount dash a and hit enter and this\ncommand will mount all the partitions\nthat are available in the fstab file and\nso when i run a lsblk\ni can see here that my block device sdb\nis now mounted on forward slash new pd\nnow i know this may be a refresher for\nsome but this is a perfect demonstration\nof the tasks that need to be done when\ncreating and attaching a new disk to an\ninstance and is a common task for many\nworking on linux instances and working\nin cloud this can definitely be scripted\nbut i wanted to show you the steps that\nneed to be taken in order to get a new\ndisk in a usable state okay so great we\nhave created a new disk we had attached\nthe disk created a file system and had\nmounted the disk along with editing the\nconfiguration file to make sure that the\ndevice mounts whenever the instance\nstarts up so now that we've done all\nthat i wanted to demonstrate resizing\nthis disk from 100 gigabytes to 150\ngigabytes and so just to show you where\nit is in the console i'm going to\nquickly go back to my console tab and so\nhere i'm going to go to the left hand\nmenu i'm going to click on disks i'm\ngoing to drill down into new pd and at\nthe top i'm going to click on edit and\nso here i'm able to adjust the disk\nspace size and simply click on save not\nmuch that i really need to do here but i\ndid want to show you how to do this in\nthe command line so i'm going to go back\nto the tab of my instance and i'm going\nto quickly clear the screen and i'm\ngoing to paste in the command gcloud\ncompute disks\nresize the name of the disk which is new\npd and the new size in gigabytes using\nthe dash dash size flag 150 which is the\nnew size of the disc along with the dash\ndash zone flag of us east 1b i'm going\nto hit enter it's going to ask me if i\nwant to do this as this is not\nreversible and please remember when you\nresize a disk you can only make it\nbigger and never smaller so i'm going to\nhit y to continue\nand it took a few seconds there but it\nwas successful so if i run a df minus k\nyou can see here that i only have 100\ngigabytes available to me and this is\nbecause i have to extend the file system\non the disk so i've made the disk larger\nbut i haven't allocated those raw blocks\nto the file system so in order for the\nfile system to see those unallocated\nblocks that's available to it i need to\nrun another command so i'm going to\nquickly clear my screen again\nand i'm going to run the command sudo\nresize to fs along with the block device\ni'm going to hit enter and as you can\nsee it was successful showing the old\nblocks as 13 and the new blocks as 19.\nso if i run a df minus k i can now see\nmy 150 gigabytes that's available to me\nand so just to demonstrate after\nresizing the disk along with mounting\nand then remounting the disk that the\nfile that i've created still exists i'm\ngoing to run an ls minus al but first i\nwill need to\nchange directories into new pd clear my\nscreen and run an ls and phyla bow ties\nis still there and so this is a great\nexample demonstrating how the data on\npersistent disks persist through the\nlifetime of a disk even when mounting\nunmounting rebooting and resizing and so\nas you can see we've done a lot of work\nhere and so just as a recap where we've\ncreated a new disk we attached this disk\nto an instance we formatted the disk\ninto an ext4 file system we've mounted\nthis disk we've written a file to it\nadded its unique identifier to the\nconfiguration file so that it mounts on\nstartup and then we've resized the disk\nalong with extending the file system on\nthe disk and so this is the end of the\ndemo and i wanted to congratulate you on\nmaking it to the end and i hope this\ndemo has been extremely useful and again\nfantastic job on your part now before\nyou go i wanted to quickly walk through\nthe steps of deleting all the resources\nyou've created and so the first thing\nthat i want to do is delete the disk\nthat was created for this demo and so\nbefore i can delete the disk i'm going\nto first detach the disk from the\ninstance and the easiest way to do that\nis through the command line so i'm going\nto quickly clear my screen and so i'm\ngoing to show you how to detach the disk\nfrom the instance and so i'm going to\npaste in this command gcloud compute\ninstances detach disk the instance name\nwhich is bow tie dash instance along\nwith the disc with the flag dash dash\ndisc the name of the disc which is new\npd along with the zone i'm going to hit\nenter\nand it's been successfully detached and\nso now that it's detached i can actually\ndelete the disk and so i'm going to head\non over back to the console and i'm\ngoing to go ahead and delete the new pd\ndisk i'm going to click on delete i'm\ngoing to get a prompt asking me if i'm\nsure yes i am if i go back to the main\nmenu for my disks and this should just\ntake a moment and once it's deleted you\nwill no longer see it here and i'm going\nto go back over to vm instances and i'm\ngoing to delete this as well\nand so there's no need to delete your\ndefault vpc unless you'd like to\nrecreate it again but don't worry for\nthose who decide to keep it you will not\nbe charged for your vpc as we will be\nusing it in the next demo and so that's\npretty much all i wanted to cover when\nit comes to managing disks with compute\nengine so you can now mark this as\ncomplete and let's move on to the next\none\n[Music]\nwelcome back in this lesson i'll be\ndiscussing persistent disk snapshots now\nsnapshots are a great way to backup data\nfrom any running or stopped instances\nfrom unexpected data loss\nsnapshots are also a great strategy for\nuse in a backup plan for any and all\ninstances no matter where they are\nlocated and so as cloud engineers and\narchitects this is a great tool for\nachieving the greatest uptime for your\ninstances so diving right into it\nsnapshots as i mentioned before are a\ngreat way for both backing up and\nrestoring the data of your persistent\ndisks you can create snapshots from\ndisks even while they are attached to\nrunning instances snapshots are global\nresources so any snapshot is accessible\nby any resource within the same project\nyou can also share snapshots across\nprojects as well snapshots also support\nboth zonal and regional persistent disks\nsnapshots are incremental and\nautomatically compressed so you can\ncreate regular snapshots on a persistent\ndisk\nfaster and at a much lower cost than if\nyou regularly created a full image of a\ndisk now when you create a snapshot you\nhave the option of choosing a storage\nlocation snapshots are stored in cloud\nstorage\nand can be stored in either a\nmulti-regional location or a regional\ncloud storage bucket a multi-regional\nstorage location provides higher\navailability but will drive up costs\nplease be aware that the location of a\nsnapshot affects its availability and\ncan incur\nnetworking costs when creating the\nsnapshot or restoring it to a new disk\nif you do not specify storage location\nfor a snapshot google cloud uses the\ndefault location which stores your\nsnapshot in a cloud storage\nmulti-regional location closest to the\nregion of your source disk if you store\nyour snapshot in the same region as your\nsource disk there is no network charge\nwhen you access that snapshot from the\nsame region if you access the snapshot\nfrom a different region you will incur a\nnetwork cost compute engine stores\nmultiple copies of each snapshot across\nmultiple locations as well you cannot\nchange the storage location of an\nexisting snapshot once a snapshot has\nbeen taken it can be used to create a\nnew disk in any region and zone\nregardless of the storage location of\nthe snapshot now as i explained earlier\nsnapshots are incremental and i wanted\nto take a moment to dive into that for\njust a minute so when creating snapshots\nthe first successful snapshot of a\npersistent disk is a full snapshot that\ncontains all the data on the persistent\ndisk the second snapshot only contains\nany new data or modify data since the\nfirst snapshot data that hasn't changed\nsince snapshot 1 isn't included instead\nsnapshot 2 contains references to\nsnapshot 1 for any unchanged data as\nshown here snapshot 3 contains any new\nor changed data since snapshot 2 but\nwon't contain any unchanged data from\nsnapshot 1 or 2. instead snapshot 3\ncontains references to blocks in\nsnapshot 1 and snapshot 2 for any\nunchanged data this repeats for all\nsubsequent snapshots of the persistent\ndisk snapshots are always created based\non the last successful snapshot taken\nand so now you're probably wondering\nwhat happens when you decide to delete a\nsnapshot are they dependent on each\nother well when you delete a snapshot\ncompute engine immediately marks the\nsnapshot as deleted in the system if the\nsnapshot has no dependent snapshots it\nis deleted outright however if the\nsnapshot does have dependent snapshots\nthen there are some steps that happen\nbehind the scenes so shown here in this\ndiagram snapshot 2 is deleted the next\nsnapshot from the full snapshot no\nlonger references the snapshot for\ndeletion in this example snapshot 1 then\nbecomes the reference for snapshot 3 and\nany data that is required for restoring\nother snapshots is moved into the next\nsnapshot increasing its size shown here\nblocks that were unique to snapshot 2\nare moved to snapshot 3 and the size of\nsnapshot 3 increases any data that is\nnot required for restoring other\nsnapshots is deleted so in this case\nblocks that are already in snapshot 3\nare deleted from snapshot 2 and the size\nof all snapshots are lower now because\nsubsequent snapshots might require\ninformation stored in a previous\nsnapshot\nplease be aware that deleting a snapshot\ndoes not necessarily delete all the data\non the snapshot if you're looking to\nmake sure that your data has indeed been\ndeleted from your snapshots you should\ndelete all snapshots if your disk has a\nsnapshot schedule you must detach the\nsnapshot schedule from the disk before\nyou can delete the schedule\nremoving the snapshot schedule from the\ndisk prevents further snapshot activity\nfrom occurring\nnow touching on the topic of scheduled\nsnapshots by far the best way to backup\nyour data on compute engine is to use\nscheduled snapshots this way you will\nnever have to worry about manually\ncreating snapshots or even worry about\nusing other tools to kick off those\nsnapshots you can simply use this\nbuilt-in tool by google which is why\nsnapshot schedules are considered best\npractice to backup any compute engine\npersistent disks now in order to create\nany snapshot schedules you must create\nyour snapshot schedule in the same\nregion where your persistent disk\nresides now there are two ways to create\na snapshot schedule the first one is to\ncreate a snapshot schedule and then\nattach it to an existing persistent disk\nthe other way is to create a new\npersistent disk with a snapshot schedule\nyou also have the option of setting up a\nsnapshot retention policy that defines\nhow long you want to keep your snapshots\nsome options when creating snapshot\nschedules are both retention policies\nand source disk deletion rules now if\nyou choose to set up a snapshot\nretention policy you must do it as part\nof your snapshot schedule when you\ncreate a snapshot schedule is when you\ncan also set a source disk deletion rule\nthe source disk deletion rule controls\nwhat happens to your snapshots if the\nsource disk is deleted now a few caveats\nhere on the scheduled snapshots is that\na persistent disk can only have one\nsnapshot schedule attached to it at a\ntime also you cannot delete a snapshot\nschedule if it is attached to a disk you\nmust detach the schedule from all disks\nthen delete the schedule as well after\nyou create a snapshot schedule you\ncannot edit it to update a snapshot\nschedule you must delete it and create a\nnew one now before i end this lesson i\nwanted to touch on managing snapshots\nfor just a minute so when managing\nsnapshots there's a few things to\nremember in order to use snapshots to\nmanage your data efficiently you can\nsnapshot your disks at most once every\n10 minutes you are unable to snapshot\nyour disks at intervals less than 10\nminutes so please keep that in mind when\ncreating your schedules also you should\ncreate snapshots on a regular schedule\nto minimize data loss if there was an\nunexpected failure if you have existing\nsnapshots of a persistent disk the\nsystem automatically uses them as a\nbaseline for any subsequent snapshots\nthat you create from that same disk\nso in order to improve performance you\ncan eliminate excessive snapshots by\ncreating an image and reusing it using\nthis method would not only be ideal for\nstorage and management of snapshots but\nalso help to reduce costs and if you\nschedule regular snapshots for your\npersistent disks you can reduce the time\nthat it takes to complete each snapshot\nby creating them during off-peak hours\nwhen possible and lastly for those of\nyou who use windows for most situations\nyou can use the volume shadow copy\nservice to take snapshots of persistent\ndisks that are attached to windows\ninstances you can create vss snapshots\nwithout having to stop the instance or\ndetach the persistent disk and so that's\npretty much all i wanted to cover when\nit comes to the theory of persistent\ndisk snapshots their schedules and how\nto manage them in the next lesson i'll\nbe doing a hands-on demo\ndemonstrating snapshots and putting this\ntheory into practice and get a feel for\nhow snapshots work and how they can be\napplied to persistent disks so you can\nnow mark this lesson as complete and\nwhenever you're ready join me in the\nconsole\n[Music]\nwelcome back\nin this demonstration we're going to\ndive into snapshots and snapshot\nschedules this demo will give you the\nhands-on knowledge you need to create\nand delete snapshots along with how to\nmanage snapshot schedules we're going to\nstart the demo off by creating an\ninstance we're going to interact with it\nand then take a snapshot of the disk\nwe're going to then create another\ninstance from the snapshot and then\ncreate some snapshot schedules for both\nof these instances by using both the\nconsole and the command line so there's\na lot to do here so with that being said\nlet's dive in and so i'm currently\nlogged in as tony bowties gmail.com as\nwell i'm in project bowtie inc so the\nfirst thing that we need to do to kick\noff this demo is to create an instance\nbut first as always i like to make sure\nthat i have a vpc to deploy my instance\ninto with its corresponding default\nfirewall rules and so i'm going to head\non over to the navigation menu and\nscroll down to vpc network\nand because i didn't delete my default\nvpc from the last demo i still have it\nhere i'm just going to drill down and\nmake sure that i have my firewall rules\ni'm gonna go over to firewall rules and\nas expected the ssh firewall rule that i\nneed has already been created and so now\nthat i have everything in order i'm\ngonna go back over to the navigation\nmenu and head on over to compute engine\nto create my instance now i figure for\nthis demo i'd switch it up a little bit\nand create the instance by the command\nline so i'm going to head on over to\ncloud shell i'm going to open that up\nand it took a minute to provision and so\nwhat i'm going to do now is i'm going to\nopen it up in a new tab i'm going to\nzoom in for better viewing and i'm going\nto paste in my command to create my\ninstance and this gcloud command to\ncreate these instances will be available\nin the github repository and you will\nfind all the instructions and the\ncommands\nunder managing snapshots in compute\nengine so i'm going to hit enter\nand you may get a prompt to authorize\nthis api call and i'm going to click on\nauthorize\nand success our instance has been\ncreated and is up and running and so now\nwhat i want to do is ssh into the\ninstance and so i'm just going to run\nthe command from here which is gcloud\ncompute ssh dash dash zone the zone that\ni'm in which is used 1b and the instance\nwhich is bowtie dash instance i'm going\nto hit enter it's going to prompt me if\ni want to continue i'm going to say yes\nand i'm going to enter my passphrase and\nenter it again\nit's going to update my metadata and\nit's going to ask me again for my\npassphrase and i'm in so i'm going to\njust quickly clear my screen and so the\nfirst thing i want to do is i want to\nverify the name of my instance so i'm\ngoing to type in the command hostname\nand as expected bowtie dash instance\nshows up and so now i want to create a\ntext file and so i'm going to run the\ncommand\nsudo nano file a\ntext i'm going to hit enter and it's\ngoing to open up my nano text editor and\nyou can enter a message of any kind that\nyou'd like for me i'm going to enter\nmore bow tie needed because you can\nnever get enough bow ties i'm going to\nhit ctrl o to save press enter to verify\nthe file name to write and then ctrl x\nto exit i'm going to run the command ls\nspace minus al to list my files so i can\nverify that my file has been created and\nas you can see here file a bowties.txt\nhas been created and so now that i've\ncreated my instance and i've written a\nfile to disk i'm going to now head on\nover to the console and take a snapshot\nof this disk and because my session was\ntransferred to another tab i can now\nclose the terminal and you want to head\nover to the left-hand menu and go to\ndisks and so now i want to show you two\nways on how you can create this snapshot\nthe first one is going to disks and\nchoosing the disk that you want for me\nit's bowtie instance and under actions\ni'm going to click on the hamburger menu\nand here i can create snapshot and this\nwill bring me straight to my snapshot\nmenu but for this demo i'm going to go\nover to the left hand menu and i'm going\nto click on snapshots and here i'm going\nto click on create snapshot and so for\nthe name of the snapshot i'm going to\ntype in bowtie snapshot and i'm going to\nuse the same for the description moving\ndown on the source disk the only one\nthat i can select is bow tie instance\nand that's the one that i want anyways\nso i'm going to click on that the\nlocation in order to cut down on costs\nwe don't need multi-regional we're going\nto just select regional and if you\nselect on the location i'm able to\nselect any other locations like tokyo\nand i can create my snapshot in tokyo\nbut i want to keep my snapshot in the\nsame region so i'm going to go back and\nselect us east one where it is based on\nthe source disk location and i'm going\nto add a label here with the key\nenvironment and the value of testing i'm\ngoing to leave my encryption type as\ngoogle managed and i'm going to simply\nclick on create and this will create a\nsnapshot of the boot disk on bow tie\ninstance and that took about a minute\nthere and so just as a note if you have\nany bigger discs they will take a little\nbit longer to snapshot okay and now that\ni've created my snapshot i'm going to go\nback up to vm instances and i'm going to\ncreate a new instance from that snapshot\nand so i'm going to name this instance\nbowtie dash instance dash 2 and i'm\ngoing to give this a label i'm going to\nadd a label here the key of environment\nand the value of testing and hit save\nthe region is going to be used 1 and you\ncan leave the zone as its default as us\neast 1b and under machine type you can\nselect the e2 micro and you want to go\ndown to boot disk and select the change\nbutton and here i'm going to select\nsnapshots instead of using a public\nimage so i'm going to click on snapshots\nand if i select the snapshot drop down\nmenu i will see here my bowtie snapshot\nso i'm going to select this i'm going to\nleave the rest as default and i'm going\nto go down to select and i'm going to\nleave everything else as its default and\ni'm going to click on create i'm going\nto just give it a minute here so bowtie\ninstance 2 can be created okay and it\ntook a minute there so now i'm going to\nssh into this instance\nand i'm going to zoom in for better\nviewing and even though i know the\ninstance is named bowtie.instance2\ni'm still going to run the hostname\ncommand and as expected the same name\npops up but what i was really curious\nabout is if i run the command ls space\ndash al i can see here my file of file\nof bowties.text\nand if i cat the file\n[Music]\ni'll be able to see the text that i\ninputted into that file and so although\nit was only one file and a text file at\nthat i was able to verify that my\nsnapshot had worked as there will be\ntimes where your snapshot can get\ncorrupted and so doing some various spot\nchecks on your snapshots is some good\ncommon practice and so now i want to\ncreate a snapshot schedule for both of\nthese instances and so i'm going to go\nback to the console and on the left hand\nmenu i'm going to head down to snapshots\nand if i go over to snapshot schedules\nyou can see that i have no snapshot\nschedules so let's go ahead and create a\nnew one by clicking on create snapshot\nschedule and so as mentioned in the last\nlesson we need to create this schedule\nfirst before we can attach it to a disk\nand so i'm going to name this snapshot\nschedule as bow tie dash disk schedule\ni'm going to use the same for the\ndescription the region i'm going to\nselect it as us east one and i'm going\nto keep the snapshot location as\nregional under us east one you scroll\ndown here and under schedule options you\ncan leave the schedule frequency as\ndaily and just as a note for start time\nthis time is measured in utc so please\nremember this when you're creating your\nschedule in your specific time zone and\nso i'm going to put the start time as o\n600 and this will be 1 am eastern\nstandard time as backups are always best\ndone when there is the least amount of\nactivity and i'm going to keep the auto\ndelete snapshots after 14 days i'm going\nto keep the deletion rule as keep\nsnapshots as well i can enable the\nvolume shadow copy service for windows\nbut since we're running linux i don't\nneed to enable this and since we labeled\neverything else i might as well give\nthis a label i'm going to use the key as\nenvironment and the value of testing and\nonce you've filled everything out then\nyou can simply click on create and it\ntook a minute there but the schedule was\ncreated and so now that i have my\nsnapshot schedule i need to attach it to\na disk so i'm going to head on over to\nthe left hand menu and click on disks\nand here i'm going to drill down into\nbow tie instance i'm going to go up to\nthe top and click on edit and under\nsnapshot schedule i'm going to click on\nthe drop down and here i will find bow\ntie disk schedule i'm going to select\nthat i'm going to click on save and so\nnow that i have my snapshot schedule\nattached to my disk for the bowtie\ninstance instance i now want to create a\nsnapshot schedule for my other instance\nand so instead of using the console i'm\ngoing to go ahead and do it through the\ncommand line so i'm going to go up to\nthe top to my open shell and i'm going\nto quickly clear the screen and so in\norder to create my schedule i'm going to\nrun this command gcloud compute resource\npolicies create snapshot schedule the\nname of the snapshot schedule which is\nbow tie disk schedule 2 the region the\nmaximum retention days the retention\npolicy and the schedule followed by the\nstorage location and like i said before\nthese commands you will find in the\ngithub repository so i'm going to go\nahead and hit enter\nand so i wanted to leave this error in\nhere to show you that i needed the\nproper permissions in order to create\nthis snapshot schedule a great reminder\nto always check if you have the right\nrole for the task at hand and so i have\ntwo options i can either change users\nfrom my service account user to tony\nbowtie or i can simply head on over to\nmy instance and edit the service account\npermissions and so the easiest way to do\nit would be to just switch users and so\ni'm going to go ahead and do that so i'm\ngoing to go ahead and run the command\ngcloud auth login and remember that this\nis something that you don't have to do i\nmerely wanted to show you that you\nrequire the proper permissions on\ncreation of specific resources okay and\ni quickly went through the\nauthentication process i'm gonna just\nclear my screen and i'm going to go\nahead and run the command again\nand as expected the snapshot schedule\nwas created with no errors and so now\nthat my schedule has been created i can\nnow attach it to the disk so i'm going\nto run the command gcloud compute disks\nadd resource policies the instance name\nwhich is bowtie instance 2 and the\nresource policy which is the snapshot\nschedule named as bowtie disk schedule 2\nin the zone of us east 1b i'm going to\nhit enter\nand success and so just to verify that\nthe snapshot schedule has been attached\nto my disk i'm going to go back to the\nconsole i'm going to head back on over\nto the main page of disks i'm going to\ndrill down into bow tie instance 2 and\nhere it is the snapshot schedule has\nbeen attached and so i want to\ncongratulate you on making it to the end\nof this demo and i hope this demo has\nbeen useful as snapshots in the role of\nan engineer is a common task that can\nsave you from any data loss once set\ninto place and so just as a recap you've\ncreated an instance you created a file\non that instance and then you've created\na snapshot of the disk of that instance\nand used it to create another instance\nyou then verified the snapshot and then\ncreated a snapshot schedule for both\nboot disks of the instances using the\nconsole and the command line well done\non another great job now before you go i\nwanted to take a moment to clean up any\nresources we've used so we don't\naccumulate any costs and so the first\nthing we want to do is we want to detach\nthe snapshot schedules from the disks\nand so since we're in bow tie instance 2\ni'm going to go ahead and click on edit\nunder snapshot schedule i'm going to\nselect the no schedule hit save and i'm\ngoing to do the same thing with my other\ndisk\nnow i'm going to head back on over to\nsnapshots i'm going to delete this\nsnapshot and i'm going to head back on\nover to snapshot schedules i'm going to\nselect all the snapshot schedules and\ni'm going to click on delete\nand now that everything's cleaned up\nwith regards to snapshots and snapshot\nschedules i can now go over to vm\ninstances and delete the instances\ni'm going to select them all and simply\nclick on delete\nand so that's pretty much all i wanted\nto cover in this demo when it comes to\nsnapshots and snapshot schedules\nso you can now mark this as complete and\nlet's move on to the next one\nwelcome back in this lesson we're going\nto switch gears and take an automated\napproach to deployment by diving into\ngoogle's tool for infrastructure as code\ncalled deployment manager now deployment\nmanager allows you to deploy\nupdate and tear down resources from\nwithin google cloud using yaml jinja and\npython code templates it allows you to\nautomate the deployment of all the\nresources that are available in google\ncloud and deploy it in a fast easy and\nrepeatable way for consistency and\nefficiency in this lesson we're going to\nexplore the architecture of deployment\nmanager and dive into all the different\ncomponents that gives it its flexibility\nand the features that make this tool an\neasy solution for deploying complex\nenvironments so with that being said\nlet's dive in\nnow breaking down the components that i\nmentioned earlier i wanted to start off\nwith the first component being the\nconfiguration now a configuration\ndefines the structure of your deployment\nas you must specify a configuration to\ncreate a deployment a configuration\ndescribes all the resources you want for\na single deployment and is written in\nyaml syntax that lists each of the\nresources you want to create and its\nrespective resource properties a\nconfiguration must contain a resources\nsection followed by the list of\nresources to create and so each resource\nmust contain these three components the\nname the type and properties without\nthese three components a deployment will\nnot instantiate and so i wanted to take\na moment to go over these three\ncomponents in a bit of depth so the\nfirst component of the configuration is\nthe name and the name is a user defined\nstring to identify this resource and can\nbe anything you choose from names like\ninstance one my-vm\nbowtie dash instance and you can even go\nas far to use larks dash instance dash\ndon't dash touch and the syntax can be\nfound here and must not contain any\nspaces or invalid characters next\ncomponent in a configuration is type and\nthere are a couple of different types\nthat you can choose from a type can\nrepresent a single api source known as a\nbase type\nor a set of resources known as a\ncomposite type and either one of these\ncan be used to create part of your\ndeployment the type of the resource\nbeing deployed here in this diagram is\nshown as a base type of\ncompute.v1.instance\nand there are many other api resources\nthat can be used such as compute.v1.disk\napp engine dot v1 as well as\nbigquery.v2 and the syntax is shown here\nas api dot version dot resource now a\ncomposite type contains one or more\ntemplates that are pre-configured to\nwork together these templates expand to\na set of base types when deployed in a\ndeployment composite types are\nessentially hosted templates that you\ncan add to deployment manager the syntax\nis shown here as gcp dash types forward\nslash provider colon resource and to\ngive you an example of what a composite\ntype looks like\nhere is shown the creation of a reserved\nip address using the compute engine v1\napi and you could also use composite\ntypes with other apis in the same way\nsuch as gcp dash types forward slash app\nengine dash v1 colon apps or bigquery\nv2 colon data sets and for the last\ncomponent in a configuration is\nproperties and this is the parameters\nfor the resource type this includes all\nthe parameters you see here in this\nexample including the zone\nmachine type the type of disk along with\nits parameters pretty much everything\nthat gives detail on the resource type\nnow just as a note they must match the\nproperties for this type so what do i\nmean by this so let's say you entered a\nzone but that particular zone doesn't\nexist or that compute engine machine\ntype doesn't exist in that zone you will\nend up getting an error as deployment\nmanager will not be able to parse this\nconfiguration and thus failing\ndeployment so make sure when you add\nyour properties that they match those of\nthe resource now a configuration can\ncontain templates which are essentially\nparts of the configuration file that\nhave been abstracted into individual\nbuilding blocks a template is a separate\nfile that is imported and used as a type\nin a configuration and you can use as\nmany templates as you want in a\nconfiguration and allow you to separate\nyour configuration out into different\npieces that you can use and reuse across\ndifferent deployments templates can be\nas generalized or specific as you need\nand they also allow you to take\nadvantage of features like template\nproperties environment variables and\nmodules to create dynamic configuration\nas shown here templates can be written\nin a couple of different ways they can\nbe written in either ginger 2.1 or\npython 3. the example shown on the left\nhas been written in ginger and is very\nsimilar to the yaml syntax so if you're\nfamiliar with yaml this might be better\nfor you the example on the right has\nbeen written in python and is pretty\namazing as you can take advantage of\nprogrammatically generating parts of\nyour templates if you are familiar with\npython this might be a better format for\nyou now one of the advantages of using\ntemplates is the ability to create and\ndefine custom template properties\ntemplate properties are arbitrary\nvariables that you define in template\nfiles any configuration file or template\nfile that uses the template in question\ncan provide a value for the template\nproperty without changing the template\ndirectly this lets you abstract the\nproperty so that you can change the\nproperty's value for each unique\nconfiguration without updating the\nunderlying template and just as a note\ndeployment manager creates predefined\nenvironment variables that you can use\nin your deployment in this example the\nproject variable will use the project id\nfor this specific project and so\ncombining all these components together\nwill give you a deployment and so a\ndeployment is a collection of resources\nthat are deployed and managed together\nusing a configuration you can then\ndeploy update or delete this deployment\nby merely changing some code or at the\nclick of a button now when you deploy\nyou provide a valid configuration in the\nrequest to create the deployment a\ndeployment can contain a number of\nresources across a number of google\ncloud services when you create a\ndeployment deployment manager creates\nall of the described resources to deploy\na configuration it must be done through\nthe command line and cannot be done\nthrough the console you can simply use\nthe syntax shown here and a deployment\nwill be instantiated from the\nconfiguration file that you have entered\nwhere bow tie deploy is the name of the\ndeployment and the file after the dash\ndash config is your configuration file\ngoogle cloud also offers pre-defined\ntemplates that you can use to deploy\nfrom the gcp marketplace and can be\nfound right in the console of deployment\nmanager this way all the configuration\nand template creation is handled for you\nand you just deploy the solution through\nthe console now after you've created a\ndeployment you can update it whenever\nyou need to you can update a deployment\nby adding or removing resources from a\ndeployment or updating the properties of\nexisting resources in a deployment a\nsingle update can contain any\ncombination of these changes so you can\nmake changes to the properties of\nexisting resources and add new resources\nin the same request you update your\ndeployment by first making changes to\nyour configuration file or you can\ncreate a configuration file with the\nchanges you want you will then have the\noption to pick the policies to use for\nyour updates or you can use the default\npolicies and finally you then make the\nupdate request to deployment manager and\nso once you've launched your deployment\neach deployment has a corresponding\nmanifest as the example shown here a\nmanifest is a read-only property that\ndescribes all the resources in your\ndeployment and is automatically created\nwith each new deployment manifests\ncannot be modified after they have been\ncreated as well it's not the same as a\nconfiguration file but is created based\non the configuration file and so when\nyou delete a deployment all resources\nthat are part of the deployment are also\ndeleted if you want to delete specific\nresources from your deployment and keep\nthe rest delete those resources from\nyour configuration file and update the\ndeployment instead\nand so as you can see here deployment\nmanager gives you a slew of different\noptions to deploy update or delete\nresources simultaneously in google cloud\nnow like most services in gcp there are\nalways some best practices to follow\nnote that there are many more best\npractices to add to this and can be\nfound in the documentation which i will\nbe providing the link to in the lesson\ntext but i did want to point out some\nimportant ones to remember so the first\none i wanted to bring up is to break\nyour configurations up into logical\nunits so for example you should create\nseparate configurations for networking\nservices security services and compute\nservices so this way each team will be\nable to easily take care of their own\ndomain without having to sift through a\nmassive template containing the code to\nthe entire environment another best\npractice to follow is to use references\nand references should be used for values\nthat are not defined until a resource is\ncreated such as resources self-link ip\naddress or system generated id without\nreferences deployment manager creates\nall resources in parallel so there's no\nguarantee that dependent resources are\ncreated in the correct order using\nreferences would enforce the order in\nwhich resources are created the next one\nis to preview your deployments using the\npreview flag so you should always\npreview your deployments to assess how\nmaking an update will affect your\ndeployment deployment manager does not\nactually deploy resources when you\npreview a configuration but runs a mock\ndeployment of those resources instead\nthis gives you the opportunity to see\nthe changes to your deployment before\ncommitting to it you also want to\nconsider automating the creation of\nprojects as well as automating the\ncreation of resources contained within\nthe projects and this enables you to\nadopt an infrastructure as code approach\nfor project provisioning this will allow\nyou to provide a series of predefined\nproject environments that can be quickly\nand easily provisioned it will also\nallow you to use version control to\nmanage your base project configuration\nand it will also allow you to deploy\nreproducible and consistent project\nconfigurations and lastly using a\nversion control system as part of the\ndevelopment process for your deployments\nis a great best practice to follow as it\nallows you to fall back to a previous\nknown good configuration it provides an\naudit trail for changes as well it uses\nthe configuration as part of a\ncontinuous deployment system now as\nyou've seen here in this lesson\ndeployment manager can be a powerful\ntool in your tool belt when it comes to\nimplementing infrastructure as code and\nit has endless possibilities that you\ncan explore on your own it can also\nprovide a massive push\ntowards devops practices and head down\nthe path of continuous automation\nthrough continuous integration\ncontinuous delivery and continuous\ndeployment and so that's pretty much all\ni wanted to cover when it comes to\ndeployment manager and so whenever\nyou're ready join me in the next one\nwhere we will go hands-on in a\ndemonstration to deploy a configuration\nin deployment manager so you can now\nmark this lesson as complete and\nwhenever you're ready join me in the\nconsole\n[Music]\nwelcome back in this demonstration we're\ngonna go hands-on with deployment\nmanager and deploy a small web server\nwe're gonna first use the google cloud\neditor to copy in our code and we're\ngonna then do a dry run and then finally\ndeploy our code we're gonna then do a\nwalkthrough of deployment manager in the\nconsole and go through the manifest as\nwell as some of the other features we're\nthen going to verify all the deployed\nresources and we get to do an easy\ncleanup in the end by hitting the delete\nbutton and taking care of removing any\nresources that were created so there's\nquite a bit to go through here and so\nwith that being said let's dive in and\nso as you can see here i am logged in as\ntonybowties gmail.com in the project of\nbowtie inc now since we're going to be\ndoing most of our work in code the first\nthing that we want to do is go to the\ngoogle cloud editor so i'm going to go\nup here to the top and open up cloud\nshell and i'm going to then click on the\nbutton open editor i'm going to make\nthis full screen for better viewing and\nso in order to get the terminal in the\nsame viewing pane as the editor i'm\ngoing to simply go up to the top menu\nand click on terminal and select new\nterminal now for better viewing and this\nis totally optional for you i'm going to\nchange the color theme into a dark mode\nand so i'm going to go up to the menu\nclick on file go down to settings and go\nover to color theme and i'm going to\nselect dark visual studio and for those\nof you who are working in visual studio\ncode this may look very familiar to you\nand i'm also going to increase the font\nsize by again going back up to file over\nto settings and then over to open\npreferences here under workspace and\nthen scroll down to terminal\nand if you scroll down to integrated\nfont size i'm going to adjust the font\nsize to 20 for better viewing and my\ncloud shell font size is a little bit\neasier to see and so once you've done\nthat you can then close the preferences\ntab and we're now ready to create files\nin our editor okay so next up i want to\ncreate a folder for all my files to live\nin so i'm going to go up to the menu\nhere i'm going to select on file and\nselect new folder and i'm going to\nrename this folder as templates and hit\nok and so now that we have the folder\nthat all of our files are going to live\nin the next step is to open up the\ngithub repository in your text editor\nand have your files ready to copy over\nand so just as a note for those who are\nfluent in how to use git\nyou can use this new feature in the\ncloud shell editor to clone the course\nrepo without having to recreate the\nfiles so i'm going to go over my text\neditor and make sure that you've\nrecently done a git pull we're going to\nopen up the files under compute engine\ndeployment manager and you'll see\ntemplates with a set of three files and\ni've already conveniently opened them up\ni'm going to go up to bow tie\ndeploy.yaml and this is going to be the\nconfiguration file that i'm going to be\ncopying over and once i finish copying\nall these files over i'll be going\nthrough this in a little bit of detail\njust so you can understand the format of\nthis configuration and so i'm going to\nselect all of this i'm going to copy\nthis head back on over to the editor and\nhere i'm going to select file new file\nso i'm going to rename this as bow tie\ndash deploy dot yaml hit okay and i'm\ngoing to paste in my code and so this\nconfiguration file is showing that i'm\ngoing to be importing two templates by\nthe name of bowtie.webserver.jinja\nas well as\nbowtie.network.jinja so i'm going to\nhave a template for my web server and a\ntemplate for the network and under\nresources as you can see this code here\nwill create my bow tie dash web server\nthe type is going to be the template the\nproperties will have the zone the\nmachine type as well as a reference for\nthe network as well underneath the\nbowtie web server is the bowtie network\nand again this is pulling from type\nbowtie.network.jinja\nso this is a another template file and\nunder the properties we have the region\nof us east one and so we're going to\ncopy over these two templates bowtie web\nserver and bowtie network as we need\nboth of these templates in order to\ncomplete this deployment and so i'm\ngoing to go ahead and do that now head\nback on over to my code editor i'm going\nto go to bowtie web server i'm going to\ncopy everything here back to my editor\nand i'm going to create the new file\ncalled bowtie\nweb server it's going to be dot jinja\nhit enter i'm going to paste the code in\nand just to do a quick run through of\nthe template the instance name is going\nto be bow tie dash website the type is\ncompute.v1.instance\nand as you can see here we are using a\nbunch of different properties here under\nzone we have property zone which is\ngoing to reference back to the yaml\ntemplate here under zone you will see us\neast 1b and so this way if i have to\ncreate another web server\ni can enter whatever zone i like here in\nthe configuration file and leave the bow\ntie dash web server template just the\nway it is under machine type i have\nvariables set for both the zone and\nmachine type under disks i'm going to\nhave the device name as an environment\nvariable and it's going to be a\npersistent disk and the source image is\ngoing to be debian9 i also put in some\nmetadata here that will bring up the web\nserver and lastly i have a network tag\nof http server as well as the\nconfiguration for the network interface\nthe network referring to bowtie dash\nnetwork and a sub network called public\nwhich i will be showing to you in just a\nmoment and as well the access configs of\nthe type one to one nat and this will\ngive the instance a public ip address\nand so now that we've gone through that\ntemplate we need to create one last\ntemplate which is the bowtie dash\nnetwork so i'm going to head back on\nover to my code editor and open up\nbowtie network select the code copy it\nback over to cloud editor and i'm going\nto create a new file call this bowtie\nnetwork dot jinja hit enter paste in my\ncode and to quickly walk you through\nthis we're going to be creating a new\ncustom network called bow tie dash\nnetwork the type is going to be\ncompute.v1.network\nas the vpc uses the compute engine api\nit's going to be a custom network so the\nvalue of the auto create sub networks is\ngoing to be false the name is going to\nbe public here we have the custom\nipcider range and you can also use this\nas a variable but for this demo i\ndecided to just leave it under network i\nhave a reference to the bowtie network\nthe value for private google access is\nfalse and the region variable is\nfulfilled through the configuration file\nmoving right along i have two firewall\nrules here one for ssh access and the\nother for web server access one opening\nup port 22 to the world as well as port\n80. as well the web server access\nfirewall rule has a target tag of http\nserver referencing back to the network\ntag of the bowtie web server instance\nokay and so now we've finished creating\nthe configuration file along with the\ntemplates so i'm going to head back on\nup to the menu click on file and select\nsave all and since we've finished\ncreating all of our files the next thing\nto do is to execute a mock deploy using\nthe bowtie deploy configuration but\nfirst i know that we haven't used\ndeployment manager before and so i need\nto go in and turn on the api and so i'm\njust going to go up here to the top to\nthe search bar and i'm going to type in\ndeployment and you should see deployment\nmanager as the first result and bring\nthis down a little bit and as expected\nthe deployment manager api has not been\nenabled yet so i'm going to click on\nenable and after a few moments we should\nbe good to go\nokay and as you can see here deployment\nmanager is pretty empty\nas most of it is done through the\ncommand line but if you're looking to\ndeploy a marketplace solution you can do\nthat right here at the top and this will\nbring you right to the marketplace and\nwill allow you to deploy from a large\nselection of pre-configured templates\nbut i don't want to do that and so i'm\njust going to bring this up a little bit\nand i'm going to head on over to the\nterminal i'm going to run an ls i'm\ngoing to run the command ls and you\nshould be able to see the templates\nfolder i'm going to change my directory\ninto the templates folder do another ls\nand here are all my files and so before\nwe do a mock deploy of this\nconfiguration we want to make sure that\nwe're deploying to the correct project i\ncan see here that i am currently in bow\ntie inc but if you are ever unsure about\nthe project that you're in you can\nalways run the gcloud config list\ncommand in order to confirm so i'm going\nto quickly clear my screen and i'm going\nto run the command gcloud config list\nit's going to prompt me to authorize\nthis api call and i'm going to authorize\nand as expected my project is set to\ndeploy in project bowtie inc and so now\nthat i've verified it i'm going to\nquickly clear my screen again and so i'm\ngoing to paste in my command gcloud\ndeployment dash manager deployments\ncreate bowtie deploy which is the name\nof the deployment along with the\nconfiguration file flag dash dash config\nand then the name of the configuration\nfile which is bowtie\ndeploy.yaml and the preview flag as\nwe're only doing a mock deploy and so if\nthere are any errors i'll be able to see\nthis before i actually deploy all the\nresources so i'm going to go ahead and\nhit enter and in just a minute we'll\nfind out exactly what happens\nand as you can see here the mock\ndeployment was a success and there are\nno errors and if i do a quick refresh up\nhere in the console i'll be able to see\nmy deployment which i can drill down\ninto and here i will see my manifest\nfile with my manifest name and i can\nview the config as well as my templates\nthat it imported the layout as well as\nthe expanded config so if i click on\nview of the config it'll show me here in\nthe right hand panel exactly what this\ndeployment has used for the config and i\ncan do the same thing with my template\nfiles so i'm going to open up my network\ntemplate and i can quickly go through\nthat if i'd like as well i also have the\noption to download it and if i really\nwant to get granular i can go over here\nto the left hand pane i can select on vm\ninstance and it'll show me all the\nresource properties everything from the\ndisks to the machine type to the\nmetadata the network interfaces the zone\nthat it's in and the network tag same\nthing if i go over here to the network\nand again because this is a custom\nnetwork the value for the autocreate\nsubnetworks is false i can check on the\npublic sub network as well as the\nfirewall rules and so because this is a\npreview it has not actually deployed\nanything now taking a look at compute\nengine instances in a new tab you can\nsee here that i have no instances\ndeployed and so the same goes for any of\nthe other resources and so what we want\nto do now is we want to deploy this\ndeployment and we can do that one of two\nways we can simply click on the button\nhere that says deploy or we can run the\ncommand in the command line and so i'm\nlooking to show you how to do it in the\ncommand line so i'm going to move down\nto the command line i'm going to quickly\nclear my screen\ni'm going to paste in the code which is\ngcloud deployment dash manager\ndeployments update bowtie deploy now\nyou're probably wondering why update and\nthis is because the configuration has\nbeen deployed even though it's a preview\ndeployment manager still sees it as a\ndeployment and has created what google\ncloud calls a shell and so by using\nupdate you can fully deploy the\nconfiguration using your last preview to\nperform that update and this will deploy\nyour resources exactly how you see it in\nthe manifest and so anytime i make an\nadjustment to either the configuration\nor the templates i can simply run the\nupdate command instead of doing the\nwhole deployment again so i want to get\nthis deployed now and so i'm going to\nhit enter\nand i'll be back in a minute once it's\ndeployed all the resources and success\nmy deployment is successful and as you\ncan see here there are no errors and all\nthe resources are in a completed state\nso i'm going to select my bow tie\nwebsite in my manifest and i'll have\naccess to the resource with a link up\nhere at the top that will bring me to\nthe instance as well i can ssh into the\ninstance and i have all the same options\nthat i have in the compute engine\nconsole and so in order to verify that\nall my resources have been deployed i'm\ngoing to go back over to the tab that i\nalready have open and as you can see my\ninstance has been deployed and i want to\ncheck to see if my network has been\ndeployed so i'm going to go up to the\nnavigation menu and i'm going to head on\ndown to vpc network and as you can see\nhere bowtie network has been deployed\nwith its two corresponding firewall\nrules i'm going to drill down into\nbowtie network and check out the\nfirewall rules and as you can see here\nssh access and web server access have\nbeen created with its corresponding\nprotocols and ports and so now that i\nknow that all my resources have been\ndeployed i want to head back on over to\ncompute engine to see if my instance has\nbeen configured properly so i'm going to\nclick on ssh to see if i can ssh into\nthe instance and success with ssh so i\nknow that this is working properly and\nso i'm going to close this tab down and\ni also want to see whether or not my web\nserver has been configured properly with\nthe metadata that i provided it and so i\ncan directly open up the webpage by\nsimply clicking on this link and success\nmy you look dapper today why thank you\ntony bowtie and so as you can see the\nweb server has been configured properly\nusing the metadata that i provided so i\nwanted to congratulate you on making it\nto the end of this demo and hope it has\nbeen extremely useful and gave you an\nunderstanding of how infrastructure is\ncode is used in google cloud using their\nnative tools i hope this also triggered\nsome possible use cases for you that\nwill allow you to automate more\nresources and configurations in your\nenvironment and allow you to start\ninnovating on fantastic new ways for\ncicd for those of you who are familiar\nwith infrastructure as code this may\nhave been a refresher but will give you\nsome insight for questions on the exam\nthat cover deployment manager and just\nas a quick note for those of you who are\nlooking to learn more about\ninfrastructure as code i have put a few\nlinks in the lesson text going into\ndepth on deployment manager and another\ntool that google recommends called\nterraform and so now before you go we\nwant to clean up all the resources that\nwe've deployed to reduce any incurred\ncosts and because deployment manager\nmakes it easy we can do it in one simple\nstep so i'm going to head back on over\nto my open tab where i have my console\nopen to deployment manager and i'm going\nto head on over to the delete button and\nsimply click on delete now deployment\nmanager gives me the option of deleting\nall the resources it created or simply\ndeleting the manifest but keeping the\nresources untouched and so you want to\nselect delete bowtie deploy with all of\nits resources and simply click on delete\nall and this will initiate the teardown\nof all the resources that have been\ndeployed from the bowtie deploy\nconfiguration and this will take a few\nminutes to tear down but if you ever\nhave a larger configuration to deploy\njust as a note it may take a little bit\nlonger to both deploy and to tear down\nand so just as a recap you've created a\nconfiguration file and two templates in\nthe cloud shell editor you then deployed\nyour configuration using deployment\nmanager through the command line in\ncloud shell you then verified each\nindividual resource that was deployed\nand verified the configuration of each\nresource congratulations again on a job\nwell done and so that's pretty much all\ni wanted to cover in this demo when it\ncomes to deploying resources using\ndeployment manager so you can now mark\nthis as complete and let's move on to\nthe next one\n[Music]\nwelcome back and in this lesson we're\ngoing to learn about google cloud load\nbalancing and how it's used to\ndistribute traffic within the google\ncloud platform google cloud load\nbalancing is essential when using it\nwith instance groups kubernetes clusters\nand is pretty much the defacto when it\ncomes to balancing traffic coming in as\nwell as within your gcp environment\nknowing the differences between the\ntypes of load balancers and which one to\nuse for specific scenarios is crucial\nfor the exam as you will be tested on it\nand so there's a lot to cover here so\nwith that being said let's dive in now i\nwanted to start off with some basics\nwith regards to what is low balancing\nand so when it comes to the low balancer\nitself a low balancer distributes user\ntraffic across multiple instances of\nyour application so by spreading the\nload you reduce the risk of your\napplications experiencing performance\nissues a load balancer is a single point\nof entry with either one or multiple\nback ends and within gcp these back ends\ncould consist of either instance groups\nor negs and i'll be getting into any g's\nin just a little bit low balancers on\ngcp are fully distributed and software\ndefined so there is no actual hardware\nload balancer involved in low balancing\non gcp it is completely software defined\nand so there's no need to worry about\nany hardware any pre-warming time as\nthis is all done through software now\ndepending on which low balancer you\nchoose google cloud gives you the option\nof having either a global load balancer\nor a regional load balancer the load\nbalancers are meant to serve content as\nclose as possible to the users so that\nthey don't experience increased latency\nand gives the users a better experience\nas well as reducing latency on your\napplications when dealing with low\nbalancers in between services google\ncloud also offers auto scaling with\nhealth checks in their load balancers to\nmake sure that your traffic is always\nrouted to healthy instances and by using\nauto scaling able to scale up the amount\nof instances you need in order to handle\nthe load automatically now as there are\nmany different low balancers to choose\nfrom it helps to know what specific\naspects you're looking for and how you\nwant your traffic distributed and so\ngoogle has broken them down for us into\nthese three categories the first\ncategory is global versus regional\nglobal load balancing is great for when\nyour back ends are distributed across\nmultiple regions\nand your users need access to the same\napplications and content\nusing a single anycast ip address\nas well when you're looking for ipv6\ntermination global load balancing will\ntake care of that now when it comes to\nregional load balancing this is if\nyou're looking at serving your back ends\nin a single region and handling only\nipv4 traffic now once you've determined\nwhether or not you need global versus\nregional low balancing the second\ncategory to dive into is external versus\ninternal external load balancers are\ndesigned to distribute traffic coming\ninto your network from the internet\nand internal load balancers are designed\nto distribute traffic within your\nnetwork and finally the last category\nthat will help you decide on what type\nof load balancer you need is the traffic\ntype and shown here are all the traffic\ntypes that cover http https tcp and udp\nand so now that we've covered the\ndifferent types of load balancing that's\navailable on google cloud i wanted to\ndive into some more depth on the low\nbalancers themselves here you can see\nthat there are five load balancers\navailable and i will be going through\neach one of these in detail now before\ndiving into the low balancers themselves\ni wanted to introduce you to a concept\nusing gcp\nfor all load balancers called back end\nservices how a low balancer knows\nexactly what to do is defined by a\nbackend service and this is how cloud\nload balancing knows how to distribute\nthe traffic the backend service\nconfiguration contains a set of values\nsuch as the protocol used to connect to\nback ends various distribution in\nsession settings health checks and\ntimeouts these settings provide fine\ngrain control over how your load\nbalancer behaves an external http or\nhttps load balancer must have at least\none backend service and can have\nmultiple backend services the back ends\nof a backend service can be either\ninstance groups or network endpoint\ngroups also known as negs but not a\ncombination of both and so just as a\nnote you'll hear me refer to negs over\nthe course of this lesson and so a\nnetwork endpoint group also known as neg\nis a configuration object that specifies\na group of back-end endpoints or\nservices and a common use case for this\nconfiguration is deploying services into\ncontainers now moving on to the values\nthemselves i wanted to first start with\nhealth checks and google cloud uses the\noverall health state of each back end to\ndetermine its eligibility for receiving\nnew requests or connections back ends\nthat respond successfully for the\nconfigured number of times are\nconsidered healthy back-ends that fail\nto respond successfully for a separate\nnumber of times are considered unhealthy\nand when a back-end is considered\nunhealthy traffic will not be routed to\nit next up is session affinity and\nsession affinity sends all requests from\nthe same client to the same back end if\nthe back end is healthy and it has\ncapacity service timeout is the next\nvalue and this is the amount of time\nthat the load balancer waits for a\nbackend to return a full response to a\nrequest next up is traffic distribution\nand this comprises of three different\nvalues the first one is a balancing mode\nand this defines how the load balancer\nmeasures back-end readiness for the new\nrequests or connections the second one\nis target capacity and this defines a\ntarget maximum number of connections a\ntarget maximum rate or target maximum\ncpu utilization and the third value for\ntraffic distribution is capacity scalar\nand this adjusts overall available\ncapacity without modifying the target\ncapacity and the last value for back-end\nservices are back-ends and a back-end is\na group of endpoints that receive\ntraffic from a google cloud load\nbalancer and there are several types of\nback-ends but the one that we are\nconcentrating on for this section and\nfor the exam is the instance group now\nbackend services are not critical to\nknow for the exam but i wanted to\nintroduce you to this concept to add a\nbit more context for when you are\ncreating low balancers in any\nenvironment\nand will help you understand other\nconcepts in this lesson and so this is\nthe end of part one of this lesson it\nwas getting a bit long so i decided to\nbreak it up this would be a great\nopportunity for you to get up and have a\nstretch get yourself a coffee or tea and\nwhenever you're ready join me in part\ntwo where we will be starting\nimmediately from the end of part one so\nyou can now complete this video and i\nwill see you in part two\nthis is part two of the cloud load\nbalancers lesson and we'll be starting\nexactly where we left off in part one so\nwith that being said let's dive in now\nbefore jumping right into the first load\nbalancer that i wanted to introduce\nwhich is http and https low balancer\nthere's a couple of different concepts\nthat i wanted to introduce and these are\nthe methods of how an http and https\nload balancer distributes traffic using\nforwarding rules and these are cross\nregion low balancing and content based\nload balancing now touching on cross\nregion load balancing when you configure\nan external http or https load balancer\nin premium tier it uses a global\nexternal ip address and can\nintelligently route requests from users\nto the closest backend instance group or\nneg based on proximity for example if\nyou set up instance groups in north\namerica and europe and attach them to a\nlow balancers back-end service user\nrequests around the world are\nautomatically sent to the vms closest to\nthe users assuming that the vms pass\nhealth checks and have enough capacity\nif the closest vms are all unhealthy or\nif the closest instance group is at\ncapacity and another instance group is\nnot at capacity the load balancer\nautomatically sends requests to the next\nclosest region that has available\ncapacity and so here in this diagram a\nuser in switzerland hits the low\nbalancer by going to bowtieinc.co and\nbecause there are vms that are able to\nserve that traffic in europe west 6\ntraffic is routed to that region and so\nnow getting into content based load\nbalancing http and https low balancing\nsupports content based load balancing\nusing url maps to select a backend\nservice based on the requested host name\nrequest path or both for example you can\nuse a set of instance groups or negs to\nhandle your video content and another\nset to handle static as well as another\nset to handle any images you can also\nuse http or https low balancing with\ncloud storage buckets and then after you\nhave your load balancer set up you can\nadd cloud storage buckets to it now\nmoving right along when it comes to http\nand https load balancer this is a global\nproxy based layer 7 low balancer which\nis at the application layer and so just\nas a note here with all the other low\nbalancers that are available in gcp the\nhttp and https low balancer is the only\nlayer 7 load balancer all the other low\nbalancers in gcp are layer 4 and will\nwork at the network layer and so this\nlow balancer enables you to serve your\napplications worldwide behind a single\nexternal unicast ip address external\nhttp and https load balancing\ndistributes http and https traffic to\nback ends hosted on compute engine and\ngke external http and https load\nbalancing is implemented on google front\nends or gfes as shown here in the\ndiagram gfes are distributed globally\nand operate together using google's\nglobal network and control plane in the\npremium tier gfes offer cross-regional\nlow balancing directing traffic to the\nclosest healthy backend that has\ncapacity and terminating http and https\ntraffic as close as possible to your\nusers with the standard tier the load\nbalancing is handled regionally and this\nload balancer is available to be used\nboth externally and internally that\nmakes this load balancer global external\nand internal this load balancer also\ngives support for https and ssl which\ncovers tls for encryption in transit as\nwell this load balancer accepts all\ntraffic whether it is ipv4 or ipv6\ntraffic and just know that ipv6 traffic\nwill terminate at the low balancer and\nthen it will forward traffic as ipv4 so\nit doesn't really matter which type of\ntraffic you're sending the load balancer\nwill still send the traffic to the back\nend using ipv4 this traffic is\ndistributed by location or by content as\nshown in the previous diagram forwarding\nrules are in place to distribute defined\ntargets to each target pool for the\ninstance groups again defined targets\ncould be content based and therefore as\nshown in the previous diagram video\ncontent could go to one target whereas\nstatic content could go to another\ntarget url maps direct your requests\nbased on rules so you can create a bunch\nof rules depending on what type of\ntraffic you want to direct and put them\nin maps for requests ssl certificates\nare needed for https and these can be\neither google managed or self-managed\nand so just as a quick note here the\nports used for http are on 80 and 8080\nas well on https the port that is used\nis port 443 now moving into the next low\nbalancer is ssl proxy an ssl proxy low\nbalancing is a reverse proxy load\nbalancer that distributes ssl traffic\ncoming from the internet to your vm\ninstances when using ssl proxy load\nbalancing for your ssl traffic user ssl\nconnections are terminated at the low\nbalancing layer and then proxied to the\nclosest available backend instances by\neither using ssl or tcp with the premium\ntier ssl proxy low balancing can be\nconfigured as a global load balancing\nservice with the standard tier the ssl\nproxy load balancer handles low\nbalancing regionally this load balancer\nalso distributes traffic by location\nonly ssl proxy low balancing lets you\nuse a single ip address for all users\nworldwide and is a layer 4 load balancer\nwhich works on the network layer this\nload balancer shows support for tcp with\nssl offload and this is something\nspecific to remember for the exam this\nis not like the http or https load\nbalancer where we can use specific rules\nor specific configurations in order to\ndirect traffic ssl proxy low balancer\nsupports both ipv4 and ipv6 but again it\ndoes terminate at the load balancer and\nforwards the traffic to the back end as\nipv4 traffic and forwarding rules are in\nplace to distribute each defined target\nto its proper target pool and encryption\nis supported by configuring back-end\nservices to accept all the traffic over\nssl now just as a note it can also be\nused for other protocols that use ssl\nsuch as web sockets and imap over ssl\nand carry a number of open ports to\nsupport them moving on to the next load\nbalancer is tcp proxy now the tcp proxy\nload balancer is a reverse proxy load\nbalancer that distributes tcp traffic\ncoming from the internet to your vm\ninstances when using tcp proxy load\nbalancing traffic coming over a tcp\nconnection is terminated at the load\nbalancing layer and then forwarded to\nthe closest available backend using tcp\nor ssl so this is where the low balancer\nwill determine which instances are at\ncapacity and send them to those\ninstances that are not like ssl proxy\nload balancing tcp proxy load balancing\nlets you use a single ip address for all\nusers worldwide the tcp proxy load\nbalancer automatically routes traffic to\nthe back ends that are closest to the\nuser this is a layer 4 load balancer and\nagain can serve traffic both globally\nand externally tcp proxy distributes\ntraffic by location only and is intended\nfor specifically non-http traffic\nalthough you can decide if you want to\nuse ssl between the proxy and your back\nend and you can do this by selecting a\ncertificate on the back end again this\ntype of load balancer supports ipv4 and\nipv6 traffic and ipv6 traffic will\nterminate at the low balancer and\nforwards that traffic to the back end as\nipv4 traffic now tcp proxy low balancing\nis intended for tcp traffic and supports\nmany well-known ports such as port 25\nfor simple mail transfer protocol or\nsmtp next up we have the network load\nbalancer now the tcp udp network load\nbalancer is a regional pass-through load\nbalancer a network load balancer\ndistributes tcp or udp traffic among\ninstances in the same region network\nload balancers are not proxies and\ntherefore responses from the back end\nvms go directly to the clients\nnot back through the load balancer the\nterm known for this is direct server\nreturn as shown here in the diagram this\nis a layer 4 regional load balancer and\nan external load balancer as well that\ncan serve to regional locations it\nsupports either tcp or udp but not both\nalthough it can low balance udp tcp and\nssl traffic on the ports that are not\nsupported by the tcp proxy and ssl proxy\nssl traffic can still be decrypted by\nyour back end instead of the load\nbalancer itself traffic is also\ndistributed by incoming protocol data\nthis being protocols scheme and scope\nthere is no tls offloading or proxying\nand forwarding rules are in place to\ndistribute and define targets to their\ntarget pools and this is for tcp and udp\nonly now with other protocols they use\ntarget instances as opposed to instance\ngroups lastly a network load balancer\ncan also only support\nself-managed ssl certificates as opposed\nto the google managed certificates as\nwell and so the last low balancer to\nintroduce is the internal load balancer\nnow an internal tcp or udp load balancer\nis a layer 4 regional load balancer that\nenables you to distribute traffic behind\nan internal load balancing ip address\nthat is accessible only to your internal\nvm instances internal tcp and udp load\nbalancing distributes traffic among vm\ninstances in the same region this load\nbalancer supports tcp or udp traffic but\nnot both and as i said before this type\nof load balancer is used to balance\ntraffic within gcp across instances this\nlow balancer cannot be used for\nbalancing internet traffic as it is\ninternal only traffic is automatically\nsent to the back end as it does not\nterminate client connections and for\nforwarding rules this load balancer\nfollows specific specifications where\nyou need to specify at least one and up\nto five ports by number as well you must\nspecify all to forward traffic to all\nports now again like the network load\nbalancer you can use either tcp or udp\nand so that's pretty much all i had to\ncover with this lesson on low balancing\nplease remember that for the exam you\nwill need to know the differences\nbetween them all\nin my experience there are a few\nquestions that come up on the exam where\nyou will need to know what low balancer\nto use and so a good idea might be to\ndive into the console and have a look at\nthe options as well as going back\nthrough this lesson as a refresher to\nunderstand each use case this is also a\ncrucial component in any environment\nthat is used especially when serving\napplications to the internet for any\nthree-tier web application or kubernetes\ncluster and so that pretty much sums up\nthis lesson on low balancing so you can\nnow mark this lesson as complete and\nlet's move on to the next one\nwelcome back in this lesson i will be\ngoing into depth on instance groups\nalong with instance templates instance\ngroups are a great way to set up a group\nof identical servers used in conjunction\nwith instance groups instance templates\nhandles the instance properties to\ndeploy the instance groups into your\nenvironment this lesson will dive into\nthe details of the features use cases\nand how instance groups and instance\ntemplates work together to create a\nhighly scalable and performing\nenvironment now there's a lot to cover\nhere so with that being said let's dive\nin now an instance group is a collection\nof vm instances that you can manage as a\nsingle entity compute engine offers two\nkinds of vm instance groups managed and\nunmanaged manage instance groups or migs\nlet you operate applications on multiple\nidentical vms you can make your workload\nscalable and highly available by taking\nadvantage of automated mig services like\nauto scaling auto healing regional and\nzonal deployments and automatic updating\nand i'll be getting into these services\nin just a sec now when it comes to\nunmanaged instance groups they also let\nyou low balance across a fleet of vms\nbut this is something that you need to\nmanage and i'll be going deeper into\nunmanaged instance groups a bit later\nright now i wanted to take some time to\ngo through the features and use cases of\nmigs in a bit more detail for some more\ncontext starting off with its use cases\nnow migs are great for stateless serving\nworkloads such as website front ends web\nservers and website applications as the\napplication does not preserve its state\nand saves no data to persistent storage\nall user and session data stays with the\nclient and makes scaling up and down\nquick and easy migs are also great for\nstateless batch workloads and these are\nhigh performance or high throughput\ncompute workloads such as image\nprocessing from a queue and lastly you\ncan build highly available stateful\nworkloads using stateful managed\ninstance groups or stateful migs\nstateful workloads include applications\nwith stateful data or configuration such\nas databases\nlegacy monolith type applications and\nlong running batch computations with\ncheckpointing you can improve uptime and\nresiliency of these types of\napplications with auto healing\ncontrolled updates and multi-zone\ndeployments while preserving each\ninstance's unique state including\ninstance names persistent disks and\nmetadata now that i've covered the type\nof workloads that are used with migs i\nwanted to dive into the features\nstarting with auto healing\nnow when it comes to auto healing\nmanaged instance groups maintain high\navailability of your applications by\nproactively keeping your instances in a\nrunning state a mig automatically\nrecreates an instance that is not\nrunning and managed instance groups also\ntake care of application-based auto\nhealing and this improves application\navailability by relying on a health\ncheck that detects things like freezing\ncrashing or overloading if a health\ncheck determines that an application has\nfailed on a vm the mig auto healer\nautomatically recreates that vm instance\nthe health check used to monitor the\nmigs are similar to the health checks\nused for low balancing with a few little\ndifferences low balancing health checks\nhelp direct traffic away from\nunresponsive instances and towards\nhealthy ones these health checks cannot\nrecreate instances whereas mig health\nchecks proactively signal to delete and\nrecreate instances that become unhealthy\nmoving on to managed instance groups\nregional or multi-zone feature now you\nhave the option of creating regional\nmigs or zonal migs\nregional migs provide higher\navailability compared to zonal migs\nbecause the instances in a regional mig\nare spread across multiple zones in a\nsingle region google recommends regional\nmigs over zonal migs as you can manage\ntwice as many migs as zonal migs so you\ncan manage 2 000 migs instead of 1000\nyou can also spread your application\nload across multiple zones instead of a\nsingle zone or managing multiple zonal\nmigs across different zones and this\nprotects against zonal failures and\nunforeseen scenarios where an entire\ngroup of instances in a single zone\nmalfunctions in the case of a zonal\nfailure or if a group of instances in a\nzone stops responding a regional mig\ncontinues supporting your instances by\ncontinuing to serve traffic to the\ninstances in the remaining zones now\ncloud low balancing can use instance\ngroups to serve traffic so you can add\ninstance groups to a target pool or to a\nback end an instance group is a type of\nback end and the instances in the\ninstance group respond to traffic from\nthe load balancer the back end service\nin turn knows which instances it can use\nand how much traffic they can handle and\nhow much traffic they are currently\nhandling in addition the back-end\nservice monitors health checking and\ndoes not send new connections to\nunhealthy instances now when your\napplications require additional compute\nresources migs support auto scaling that\ndynamically add or remove instances from\nthe mig in response to an increase or\ndecrease in load you can turn on auto\nscaling and configure an auto scaling\npolicy to specify how you want the group\nto scale not only will auto scaling\nscale up to meet the load demands but\nwill also shrink and remove instances as\nthe load decreases to reduce your costs\nauto scaling policies include scaling\nbased on cpu utilization load balancing\ncapacity and cloud monitoring metrics\nand so when it comes to auto updating\nyou can easily and safely deploy new\nversions of software to instances in a\nmig the rollout of an update happens\nautomatically based on your\nspecifications you can also control the\nspeed and scope of the deployments in\norder to minimize disruptions to your\napplication you can optionally perform\nrolling updates as well as partial\nrollouts for canary testing and for\nthose who don't know rolling updates\nallow updates to take place with zero\ndowntime by incrementally updating\ninstances with new ones as well canary\ntesting is a way to reduce risk and\nvalidate new software by releasing\nsoftware to a small percentage of users\nwith canary testing you can deliver to\ncertain groups of users at a time and\nthis is also referred to as stage\nrollouts and this is a best practice in\ndevops and software development now\nthere are a few more things that i\nwanted to point out that relate to migs\nyou can reduce the cost of your workload\nby using preemptable vm instances in\nyour instance group and when they are\ndeleted auto healing will bring the\ninstances back when preemptable capacity\nbecomes available again you can also\ndeploy containers to instances in\nmanaged instance groups when you specify\na container image in an instance\ntemplate and is used to create a mig\neach vm is created with the container\noptimized os that includes docker and\nyour container starts automatically on\neach vm in the group and finally when\ncreating migs you must define the vpc\nnetwork that it will reside in although\nwhen you don't define the network google\ncloud will attempt to use the default\nnetwork now moving on into unmanaged\ninstance groups for just a minute\nunmanaged instance groups can contain\nheterogeneous instances and these are\ninstances that are of mixed sizes of cpu\nram as well as instance types and you\ncan add and remove these instances from\nthe group whenever you choose there's a\nmajor downside to this though unmanaged\ninstance groups do not offer auto\nscaling auto healing rolling update\nsupport multi-zone support or the use of\ninstance templates and are not a good\nfit for deploying highly available and\nscalable workloads you should only use\nunmanaged instance groups if you need to\napply load balancing to groups of these\nmixed types of instances or if you need\nto manage the instances yourself so\nunmanaged instance groups are designed\nfor very special use cases where you\nwill need to mix instance types in\nalmost all cases you will be using\nmanaged instance groups as they were\nintended to capture the benefits of all\nthe features they have to offer\nnow in order to launch an instance group\ninto any environment you will need\nanother resource to do this and this is\nwhere instance templates come into play\nan instance template is a resource that\nyou can use to create vm instances and\nmanaged instance groups instance\ntemplates define the machine type boot\ndisk image or container image as well as\nlabels and other instance properties you\ncan then use an instance template to\ncreate a mig or vm instance instance\ntemplates are an easy way to save a vm\ninstances configuration so you can use\nit later to recreate vms or groups of\nvms an instance template\nis a global resource that is not bound\nto a zone or region although you can\nrestrict a template to a zone by calling\nout specific zonal resources now there\nis something to note for when you are\never using migs if you want to create a\ngroup of identical instances you must\nuse an instance template to create a mig\nand is something you should always keep\nin the front of mind when using migs\nthese two resources both instance\ntemplates and managed instance groups go\nhand in hand now some other things to\nnote is that instance templates are\ndesigned to create instances with\nidentical configurations so you cannot\nupdate an existing instance template or\nchange an instance template after you\ncreate it if you need to make changes to\nthe configuration\ncreate a new instance template you can\ncreate a template based on an existing\ninstance template or based on an\nexisting instance to use an existing vm\nto make a template you can save the\nconfiguration using the gcloud command\ngcloud instance dash templates create or\nto use the console you can simply go to\nthe instance templates page click on the\ntemplate that you want to update and\nclick on create similar the last thing\nthat i wanted to point out is that you\ncan use custom or public images in your\ninstance templates and so that's pretty\nmuch all i had to cover when it comes to\ninstance groups and instance templates\nmanaged instance groups are great for\nwhen you're looking at high availability\nas a priority and letting migs do all\nthe work of keeping your environment up\nand running and so you can now mark this\nlesson as complete and whenever you're\nready join me in the next one where we\ngo hands-on with instance groups\ninstance templates and load balancers in\na demo\nwelcome back in this demo we're going to\nput everything that we've learned\ntogether in a hands-on demo called\nmanaging bow ties we're going to create\nan instance template and next we're\ngoing to use it to create an instance\ngroup we're then going to create a low\nbalancer with a new back end and create\nsome health checks along the way we're\nthen going to verify that all instances\nare working by browsing to the load\nbalancer ip and verifying the website\napplication we're then going to stress\ntest one of the instances to simulate a\nscale out using auto scaling and then\nwe're going to simulate scaling the\ninstance group back in now there's quite\na bit to do here so with that being said\nlet's dive in so here i am logged in as\ntony bowties at gmail.com under project\nbowtie inc and so the first thing that\nyou want to do is you want to make sure\nthat you have a default vpc network\nalready created and so just to double\ncheck i'm going to go over to the\nnavigation menu i'm going to scroll down\nto vpc network\nand yes i do have a default vpc network\nso i'm going to go ahead and start\ncreating my resources and so now what i\nwant to do is i want to create my\ninstance template and so in order to do\nthat i'm going to go back up to the\nnavigation menu i'm going to go down to\ncompute engine and go up to instance\ntemplates as you can see i currently\nhave no instance templates and yours\nshould look the same and so you can go\nahead and click on create instance\ntemplate and so just as a note there are\nno monthly costs associated with\ninstance templates but this estimate\nhere on the right is to show you the\ncost of each instance you will be\ncreating with this template okay so\ngetting right into it i'm going to name\nthis instance template\nbowtie template and since we're spinning\nup a lot of vms you want to be conscious\non costs and so under series you're\ngoing to click on the drop down and\nyou're going to select n1 and under\nmachine type you're going to select f1\nmicro and this is the smallest instance\ntype as well as the cheapest within\ngoogle cloud you can go ahead and scroll\ndown right to the bottom here under\nfirewall you want to check off allow\nhttp traffic next you want to select\nmanagement security disks networking and\nsold tenancy you scroll down a little\nbit and under startup script you're\ngoing to paste in the script that's\navailable in the repo and you will find\na link to this script and the repo in\nthe lesson text and so you can leave all\nthe other options as its default and\nsimply click on create it's going to\ntake a couple minutes here okay and the\ninstance template is ready and so the\nnext step that you want to do is create\nan instance group and as i said in a\nprevious lesson in order to create an\ninstance group you need an instance\ntemplate hence why we made the instance\ntemplate first okay and our instance\ntemplate has been created and so now\nthat you've created your instance\ntemplate you can head on over to\ninstance groups here in the left hand\nmenu and as expected there are no\ninstance groups and so you can go ahead\nand click on the big blue button and\ncreate an instance group you're going to\nmake sure that new managed instance\ngroup stateless is selected and here you\nhave the option of choosing a stateful\ninstance group as well as an unmanaged\ninstance group and so we're going to\nkeep things stateless and so for the\nname of the instance group you can\nsimply call this bowtie group i'm going\nto use the same name in the description\nand under location you want to check off\nmultiple zones in under region you want\nto select us east one and if you click\non configure zones you can see here that\nyou can select all the different zones\nthat's available in that region that you\nchoose to have your instances in and so\ni'm going to keep it under all three\nzones i'm going to scroll down here a\nlittle bit and under instance template\nyou should see bow tie template you can\nselect that you can scroll down a little\nbit more and here under minimum number\nof instances you want to set the minimum\nnumber of instances to 3 and under\nmaximum number of instances you want to\nset that to 6 and so this is going to be\ndouble the amount of the minimum number\nof instances so when you're scaled out\nyou should have a maximum of 6 instances\nand when you're scaled in or you have\nvery low traffic you should only have\nthree instances so you can scroll down\nsome more and under auto healing you\nwant to select the health check and\nyou're going to go ahead and create a\nnew health check under name you can call\nthis healthy bow ties i'm going to use\nthe same for the description and i'm\ngoing to leave the rest as its default\nand go down and click on save and\ncontinue i'm going to scroll down some\nmore and i'm going to leave the rest as\nis and simply click on create and it's\ngoing to take a couple minutes here and\nso i'm going to pause the video and i'll\nbe back in a flash okay and my instance\ngroup has been created and so to get a\nbetter look at it i'm going to click on\nbow tie group and i can see here that\nthree instances have been created if i\ngo up to vm instances you can see here\nthat i have three instances but under\ninstance groups because i have health\ncheck enabled it shows that my instances\nare unhealthy and this is because i\nstill need to create a firewall rule\nthat will allow google's health check\nprobes to reach my vm instances and so\nyou're going to go ahead and create that\nfirewall rule so you can bring the\nhealth check status up to healthy so i'm\ngoing to go over to the navigation menu\nand scroll down to vpc network and go\nover to firewall here under firewall as\nexpected you have the default firewall\nrules from the default created vpc\nnetwork and so i'm going to go up to\ncreate firewall and you can name this\nfirewall rule allow health check i'm\ngoing to use the same for the\ndescription i'm going to scroll down\nhere a little bit and under targets i'm\ngoing to select all instances in the\nnetwork source filter i'm going to leave\nas i p ranges and so here under source i\np ranges i want to enter in the ip\naddresses for the google cloud health\ncheck probes and you can find these in\nthe documentation and i will also be\nsupplying them in the instructions and\nthere are two sets of ip addresses that\nneed to be entered and just as a note\nyou don't need to know this for the exam\nbut it's always a good to know if you're\never adding health checks to any of your\ninstances i'm going to scroll down a\nlittle bit to protocols and ports and\nunder tcp i'm going to check it off and\nput in port 80. that's pretty much all\nyou have to do here so whenever you\nentered all that information in you can\nsimply click on create and so now i have\na firewall rule that will allow health\nchecks to be done and so it may take a\nminute or two but if i head back on over\nto my compute engine instances and go\nover to my instance groups\ni'll be able to see that all my\ninstances are now healthy and so\nwhenever you're creating instance groups\nand you're applying health checks this\nfirewall rule is necessary so please be\naware okay so now that we've created our\ninstance templates we've created our\ninstance groups and we created a\nfirewall rule in order to satisfy health\nchecks we can now move on to the next\nstep which is creating the load balancer\nso i'm going to go back up to the\nnavigation menu and i'm going to scroll\ndown to network services and over to\nload balancing and as expected there are\nno load balancers created and so\nwhenever you're ready you can click on\nthe big blue button and create a new low\nbalancer here you have the option of\ncreating an http or https load balancer\nalong with a tcp load balancer or a udp\nload balancer and because we're serving\nexternal traffic on port 80 we're going\nto use the http load balancer so you can\nclick on start configuration and i'm\nbeing prompted to decide between\ninternet facing or internal only and\nyou're going to be accepting traffic\nfrom the internet to your load bouncer\nso make sure that from internet to my\nvms is checked off and simply click\ncontinue and so next you will be\nprompted with a page with a bunch of\nconfigurations that you can enter and so\nwe'll get to that in just a second but\nfirst we need to name our load balancer\nand so i'm going to call this\nbowtie dash lb for low balancer and so\nnext step for your load balancer is you\nneed to configure a back end so you can\nclick on back end configuration and here\nyou have the option of selecting from\nback-end services or back-end buckets so\nyou're going to go ahead and click on\nback-end services and create a back-end\nservice and here you will be prompted\nwith a bunch of fields to fill out in\norder to create your back-end service\nand you can go ahead and name the\nbackend service as bowtie backend\nservice back-end type is going to be\ninstance group and you can leave the\nprotocol named port and timeout as is as\nwe're going to be using http under\ninstance group in new back-end if you\nselect the drop-down you should see your\navailable bow tie group instance group\nselect that\nscroll down a little bit and under port\nnumbers you can enter in port 80 and you\ncan leave all the other options as\ndefault and simply click on done and so\nif you're ever interested you can always\nadd a cache using cloud cdn now i know\nwe haven't gone through cloud cdn in\nthis course but just know that this is\ngoogle's content delivery network and it\nuses google's global edge network to\nserve content closer to users and this\naccelerates your websites and your\napplications and delivers a better user\nexperience for your user okay and moving\non here under health check if i click on\nthe drop down you should see healthy bow\nties you can select that for your health\ncheck and so just as a note here under\nadvanced configurations you can set your\nsession affinity your connection\ndraining timeout as well as request and\nresponse headers and so we don't need\nany of that for this demo and so i'm\ngoing to go ahead and collapse this and\nonce you've finished filling in all the\nfields you can simply click on create\nokay and so you should now have your\nback end configuration and your host and\npath rules configured and so the only\nthing that's left to configure is the\nfront end so you can go up and click on\nfront-end configuration and you can name\nyour front-end bowtie front-end service\ngonna keep the protocols http and here\nis where you would select the network\nservice tier choosing either premium or\nstandard and if you remember in the load\nbalancing lesson in order to use this as\na global load balancer i need to use a\npremium tier okay and we're going to\nkeep this as ipv4 with an ephemeral ip\naddress on port 80 so once you've\nfinished configuring the front end you\ncan simply click on done and you can go\nand click on review and finalize and\nthis will give you a summary on your\nconfiguration and so i'm happy with the\nway everything's configured and if you\nare as well you can simply click on\ncreate and this may take a minute or two\nbut it will create your low balancer\nalong with your back end and your front\nend so again i'm going to pause the\nvideo here for just a minute and i'll be\nback before you can say cat in the hat\nokay and my load balancer has been\ncreated and to get a little bit more\ndetails i'm going to drill down into it\nand i can see here the details of my\nload balancer along with my monitoring\nand any caching but i don't have any\ncaching enabled and therefore nothing is\nshowing so going back to the details i\ncan see here that i have a new ip\naddress for my load balancer and i'll be\ngetting into that in just a minute i'm\ngoing to go back here and i'm going to\ncheck out my back ends click on bow tie\nback end service and here i can see the\nrequests per second as well as my\nconfiguration and if you do see this\ncaution symbol here showing that some of\nyour instances are unhealthy it's only\nbecause the low balancer needs time to\ndo a full health check on all the\ninstances in the instance group and so\nthis will take some time okay and so i'm\ngoing to go back over and check out my\nfront end and there's nothing to drill\ndown into with the front end service but\nit does show me my scope the address the\nprotocol\nnetwork tier and the low balancer itself\nso this is the end of part one of this\ndemo it was getting a bit long so i\ndecided to break it up this would be a\ngreat opportunity for you to get up have\na stretch get yourself a coffee or tea\nand whenever you're ready part two will\nbe starting immediately from the end of\npart one so you can now mark this as\ncomplete and i'll see you in part two\nthis is part two of the managing bow\nties demo and we will be starting\nexactly where we left off in part one so\nwith that being said let's dive in and\nso before you move forward you want to\nmake sure that all your instances are\nconsidered healthy by your load balancer\nand as i can see here all my instances\nin my instance group are considered\nhealthy by the load balancer and so just\nto verify this i'm going to go ahead and\ncopy the i p address and you can open up\na new tab in your browser and simply\npaste it in\nand success as you can see here managing\nthe production of many bow ties can be\nautomated but managing the wearer of\nthem definitely cannot another fine\nmessage from the people at bow tie inc\nnow although this is a simple web page i\nused a couple variables just to show you\nthe low balancing that happens in the\nbackground and traffic will be load\nbalanced in between all of the instances\nin the instance group so if you click on\nrefresh then you should see the machine\nname and the data center change so every\ntime i click refresh the traffic will be\nrouted to a different instance in a\ndifferent zone and so a simple\nsimulation on how traffic is low balance\nbetween the different instances in their\ndifferent zones okay so now that we've\nverified the website application i'm\ngoing to close down this tab and so now\nthat we've created our instance template\nwe've created our instance group and\nwe've created our low balancer with the\nback end and front end service and it\nlooks like everything seems to be\nworking together nicely we're going to\ngo ahead and simulate a scale out using\nauto scaling and so in order to simulate\nthis we're going to do a stress test on\none of the instances so i'm going to\nhead back on over to the navigation menu\nscroll down to compute engine and here\nyou can ssh into any one of these\ninstances and run the stress test from\nthere so i'm going to pick here the one\nat the top and so whenever you're logged\nin you can simply paste in the command\nthat i've included in the instructions\nthat will run the stress test and so\nthis is a stress test application called\nstress that was included in the startup\nscript and this again will put stress on\nthe server itself and trigger a scale\nout to handle the load and it'll do this\nfor 30 seconds so you can go ahead and\nhit enter and head back over to the\nconsole and in about a minute or two you\nshould see some new instances that will\nbe created by your instance group in\norder to handle the load okay and after\nabout a couple minutes it's showing here\nthat instances are being created and it\nwill be scaling out to the maximum\namount of instances that i've set it to\nwhich is six i'm going to drill down\ninto this\nand yes a scale out is happening and\nsome new instances are being created to\nhandle the load so i'm going to give it\njust a minute here okay and as you can\nsee here all the instances have been\ncreated they've been added to the\ninstance group and all of them are\nmarked as healthy and so just to verify\nthat all the instances are working i'm\ngoing to go ahead and open up a new tab\ni'm going to plug in the ip address on\nmy load balancer and i'm going to simply\ncycle through all these instances to\nmake sure that all them are working and\nit looks like i have no issues and so\nnow that you've simulated a scale out i\nwanted to go ahead and run a scale in\nand so i'm first going to close up these\ntabs now with regards to scaling there\nis a 10 minute stabilization period that\ncannot be adjusted for scaling and this\nis a built-in feature into google cloud\nnow because i respect your time as a\nstudent i'm going to show you a work\naround to trigger a scale in sooner\nstrictly for this demo and i also wanted\nto caution that this should never be\ndone in a production or production-like\nenvironment you should always wait for\nthe scaling to happen on its own and\nnever force it this method is being used\nstrictly for learning purposes to save\nyou some time and so i'm going to go\nahead to the top menu and click on\nrolling restart and replace and this\nwill bring up a new page where you will\nhave the option to either restart or\nreplace any instances in your instance\ngroup and so for your purposes under\noperation make sure that you have\nrestart checked off and this will\nrestart all of your instances and only\nbring up the ones that are needed so i'm\ngoing to go ahead and click on restart\ni'm going to go back to my instance\ngroup console and i'm just going to give\nthis a few minutes to cook and i'll be\nright back in a flash okay so it looks\nlike the instance group has scaled in\nand we are now down left to three\ninstances the minimum that we configured\nfor our instance group and so that\npretty much covers the managing bow ties\ndemo so i wanted to congratulate you on\nmaking it through this demo and i hope\nthat this has been extremely useful in\nexcelling your knowledge on managing\ninstance templates managed instance\ngroups and creating load balancers with\nback-end and front-end services now this\nwas a jam-packed demo and there was a\nlot to pack in with everything you've\nlearned from the last few lessons and so\njust as a recap you created an instance\ntemplate with your startup script you\nthen created a new instance group with a\nhealth check to go with it configuring\nauto scaling for a minimum of three\ninstances you then created a firewall\nrule so that the health check probes\nwere able to connect to the application\nand you then created a load balancer\nwith its back end and front-end service\nand verified that the website\napplication was indeed up and running\nyou then ran a stress test to allow a\nsimulation of a scale out of your\ninstance group and then simulated a\nscale in of your instance group great\njob and so now that we've completed this\ndemo you want to make sure that you're\nnot accumulating any unnecessary costs\nand so i'm going to go ahead and walk\nyou through the breakdown of deleting\nall these resources so first you're\ngoing to go ahead and delete the load\nbalancer go back up to the navigation\nmenu and scroll down to network services\nand go over to load balancing so i'm\ngoing to go ahead and check off bow tie\nlb and simply go up to the top and click\non delete it's going to ask me if i'm\nsure i want to do this i'm also going to\nselect bow tie back end service and i\ncan delete my load balancer and my back\nend service all at once i'm going to go\nahead and delete load balancer and the\nselected resources\nand this should clear up within a few\nseconds okay and our load balancer has\nbeen deleted i'm going to just go up\nhere to the back end make sure\neverything's good yeah we're all clean\nsame thing with front end and so now you\ncan move on to instance groups so i'm\ngoing to head back up to the navigation\nmenu go down a compute engine and go up\nto instance groups and here you can just\nsimply check off bow tie group and\nsimply click on delete\nyou're going to be prompted with a\nnotification to make sure you want to\ndelete bow tie group yes i want to\ndelete and again this should take about\na minute okay it actually took a couple\nminutes but my instance group has been\ndeleted and so now i'm going to go over\nto instance templates and i'm going to\ndelete my template and check off bow tie\ntemplate and simply click delete you're\ngoing to get a prompt to make sure you\nwant to delete your instance template\nyes you want to delete\nand success you've now deleted all your\nresources although there is one more\nresource that you will not be billed for\nbut since we're cleaning everything up\nwe might as well clean that up as well\nand this is the firewall rule that we\ncreated and go over to the navigation\nmenu and scroll down to vpc network\ni'm going to go to firewall here on the\nleft hand menu and here i'm going to\ncheck off the allow health check\nfirewall rule and simply click on delete\ni'm going to get a prompt to make sure\nthat i want to delete it yes you want to\ndelete i'm going to quickly hit refresh\nand yes we've deleted it and so this\nconcludes the end of this demo so you\ncan now mark this as complete and i'll\nsee you in the next one\nwelcome back in this next section we\nwill be focusing on google cloud's\npremier container orchestration service\ncalled kubernetes but before we can dive\nright into kubernetes and the benefits\nthat it gives to containers you'll need\nan understanding as to what containers\nare and what value containers provide in\nthis lesson i will be covering the\ndifference between virtual machines and\ncontainers what containers are how they\nwork and the value proposition they\nbring so with that being said let's dive\nin\nnow for those of you who didn't know\ncontainer technology gets its name from\nthe shipping industry products get\nplaced into standardized shipping\ncontainers which are designed to fit\ninto the ship that accommodates the\ncontainer's standard size instead of\nhaving various sizes of packaging now by\nstandardizing this process and keeping\nthe items together the container can be\nmoved as a unit and it costs less to do\nit this way as well the standardization\nallows for consistency when packing and\nmoving the containers placing them on\nships and docks as well as storage no\nmatter where the container is it always\nstays the same size and the contents\nstay isolated from all the other\ncontainers that they are stacked with\nand so now before we get into the\ndetails of containers i wanted to cover\nhow we got here and why\nso a great way to discuss containers is\nthrough their comparison to virtual\nmachines now as we discussed in a\nprevious lesson when it comes to vms the\nsystems are virtualized through a\nhypervisor that sits on top of the\nunderlying host infrastructure the\nunderlying hardware is virtualized so\nthat multiple operating system instances\ncan run on the hardware each vm runs its\nown operating system and has access to\nvirtualized resources representing the\nunderlying hardware due to this process\nvms come with the cost of large overhead\nin cpu memory and disk as well can be\nvery large due to the fact that each vm\nneeds its own individual operating\nsystem there also lacks standardization\nbetween each vm making them unique due\nto the os configuration the software\ninstalled and the software libraries\nthus not making it very portable to be\nable to run in any environment now when\ndealing with containers things are run\nvery differently the underlying host\ninfrastructure is still there but\ninstead of just using a hypervisor and\nabstracting the underlying hardware\ncontainerization takes it one step\nfurther and abstracts the operating\nsystem\nthus\nleaving the application with all of its\ndependencies in a neatly packaged\nstandardized container this is done by\ninstalling the operating system on top\nof the host infrastructure\nand then a separate layer on top of the\nhost operating system called the\ncontainer engine now instead of having\ntheir own operating system the\ncontainers share the operating system\nkernel with other containers\nwhile operating independently\nrunning just the application code and\nthe dependencies needed to run that\napplication this allows each container\nto consume very little memory or disk\nmaking containers very lightweight\nefficient and portable containerized\napplications can start in seconds and\nmany more instances of the application\ncan fit onto the machine compared to a\nvm environment this container can now be\nbrought over to other environments\nrunning docker and able to run without\nhaving the worries of running into\nissues of compatibility now although\nthere are a few different container\nengines out there the one that has\nreceived the most popularity is docker\nand this is the engine that we will be\nreferring to for the remainder of this\ncourse now a docker image is a\ncollection or stack of layers that are\ncreated from sequential instructions on\na docker file so each line in the\ndockerfile is run line by line and a\nunique read-only layer is written to the\nimage what makes docker images unique is\nthat each time you add another\ninstruction in the docker file a new\nlayer is created now going through a\npractical example here shown on the\nright is a docker file and we will be\nable to map each line of code to a layer\nshown on the docker image on the left\nthe line marked from\nshows the base image that the image will\nbe using the example shown here shows\nthat the ubuntu image version 12.04\nwill be used next the run instruction is\nused which will perform a general update\ninstall apache 2 and output a message to\nbe displayed that is written to the\nindex.html file next up is the working\ndirectories and these are the\nenvironment variables set by using an\nenv instruction and this will help run\nthe apache runtime next layer is the\nexpose instruction and this is used to\nexpose the container's port on 8080 and\nlastly the command layer is an\ninstruction that is executing the apache\nweb server from its executable path and\nso this is a great example of how a\ndocker file is broken down from each\nline to create the layers of this image\nand so just as a note here each docker\nimage starts with a base image as well\neach line in a docker file creates a new\nlayer that is added to the image and\nfinally all the layers in a docker image\nare read only and cannot be changed\nunless the docker file is adjusted to\nreflect that change\nso now how do we get from a docker image\nto a container well a running docker\ncontainer is actually an instantiation\nof an image so containers using the same\nimage are identical to each other in\nterms of their application code and\nruntime dependencies so i could use the\nsame image for multiple copies of the\nsame container that have different tasks\nwhat makes each individual container\ndifferent\nis that running containers include a\nwritable layer on top of the read-only\ncontent runtime changes including any\nrights and updates to data and files are\nsaved in this read write layer so in\nthis example when using the command\ndocker run fashionista a docker\ncontainer will be instantiated from the\ndocker image and a read write layer is\nalways added on top of the read-only\nlayers when a container is created\nwriting any necessary files that's\nneeded for the application and so just\nas a note here docker containers are\nalways created from docker images and\ncontainers can use the same image yet\nwill always have a different read write\nlayer no matter the amount of containers\nrunning on a given host so now when your\ncontainers have been created you need a\nplace to store them and so this is where\na container registry comes into play now\na container registry is a single place\nfor you to store and manage docker\nimages now when you create your docker\nfile and then build your image\nyou want to store that image in a\ncentral image repository whether it be a\nprivate one or a public one a popular\npublic container registry is docker hub\nand this is a common registry where many\nopen source images can be found\nincluding those used for the base layer\nimages like the ubuntu example that i\nshowed you earlier and so once you have\nyour containers in a container registry\nyou need to be able to run these\ncontainers so in order to run these\ncontainers you need docker hosts and\nthese can consist of any machine running\nthe docker engine and this could be your\nlaptop\nserver or you can run them in provided\nhosted cloud environments now this may\nhave been a refresher for some but for\nthose of you who are new to containers i\nhope this has given you a lot more\nclarity on what containers are what they\ndo and the value that they bring to any\nenvironment and so that's pretty much\nall i wanted to cover on this short\nlesson of an introduction to containers\nso you can now mark this lesson as\ncomplete and let's move on to the next\none\nwelcome back so now that you've gotten\nfamiliar with what containers are and\nhow they work i wanted to dive into\ngoogle cloud's platform as a service\noffering for containers called google\nkubernetes engine also known as short as\ngke now although the exam goes into a\nmore operational perspective with\nregards to gke knowing the foundation of\nkubernetes and the different topics of\nkubernetes is a must in order to\nunderstand the abstractions that take\nplace with gke from regular kubernetes\nin this lesson i will be getting into\nkey topics with regards to kubernetes\nand we'll be touching on the\narchitecture\ncomponents and how they all work\ntogether to achieve the desired state\nfor your containerized workloads now\nthere's a lot to get into so with that\nbeing said let's dive in now before i\ncan get into gke i need to set the stage\non explaining what kubernetes is put\nsimply kubernetes is an orchestration\nplatform for containers which was\ninvented by google and eventually open\nsource it is now maintained by the cncf\nshort for the cloud native computing\nfoundation and has achieved incredible\nwidespread adoption kubernetes provides\na platform to automate schedule and run\ncontainers on clusters of physical or\nvirtual machines\nthus eliminating many of the manual\nprocesses involved in deploying and\nscaling containerized applications\nkubernetes manages the containers that\nrun the applications and ensure that\nthere is no downtime in a way that you\nthe user can define\nfor example if you define that when a\ncontainer goes down and another\ncontainer needs to start kubernetes\nwould take care of that for you\nautomatically and seamlessly kubernetes\nprovides you with the framework to run\ndistributed systems resiliently it takes\ncare of scaling and failover for your\napplication provides deployment patterns\nand allows you to manage your\napplications with tons of flexibility\nreliability and power it works with a\nrange of container tools including\ndocker now although this adoption was\nwidespread it did come with its various\nchallenges this included scaling at cd\nload balancing availability auto scaling\nnetworking\nrollback on faulty deployments and so\nmuch more\nso now google cloud has since developed\na managed offering for kubernetes\nproviding a managed environment for\ndeploying managing and scaling your\ncontainerized applications using google\ninfrastructure the gke environment\nconsists of compute engine instances\ngrouped together to form a cluster and\nit provides all the same benefits as\non-premises kubernetes yet has\nabstracted the complexity of having to\nworry about the hardware and to top it\noff it has the benefits of advanced\ncluster management features that google\ncloud provides\nwith things like cloud load balancing\nand being able to spread traffic amongst\nclusters and nodes node pools to\ndesignate subnets of nodes within a\ncluster for additional flexibility\nautomatic scaling of your cluster's node\ninstance count and automatic upgrades\nfor your clusters node software it also\nallows you to maintain node health and\navailability with node auto repair and\ntakes care of logging and monitoring\nwith google cloud's operation suite for\nvisibility into your cluster so as you\ncan see here gke holds a lot of benefits\nwhen it comes to running kubernetes in\ngoogle cloud so i wanted to take a\nmoment now to dive into the cluster\narchitecture and help familiarize you\nwith all the components involved in a\ncluster so a cluster is the foundation\nof google kubernetes engine and\nkubernetes as a whole the kubernetes\nobjects that represent your\ncontainerized applications all run on\ntop of the cluster in gke a cluster\nconsists of at least one control plane\nand multiple worker machines called\nnodes the control plane and node\nmachines run the kubernetes cluster the\ncontrol plane is responsible to\ncoordinate the entire cluster and this\ncan include scheduling workloads like\ncontainerized applications and managing\nthe workload's life cycle scaling and\nupgrades the control plane also manages\nnetwork and storage resources for those\nworkloads and most importantly it\nmanages the state of the cluster and\nmake sure it is at the desired state now\nthe nodes are the worker machines that\nrun your containerized applications and\nother workloads the nodes are compute\nengine vm instances that gke creates on\nyour behalf when you create a cluster\neach node is managed from the control\nplane which receives updates on each\nnode's self-reported status a node also\nruns the services necessary to support\nthe docker containers that make up your\ncluster's workloads these include the\ndocker runtime and the kubernetes node\nagent known as the cubelet which\ncommunicates with the control plane and\nis responsible for starting and running\ndocker containers scheduled on that node\nnow diving deeper into the architecture\nthere are components within the control\nplane and nodes that you should\nfamiliarize yourself with as these\ncomponents are what ties the cluster\ntogether and helps manage the\norchestration as well as the state now\nthe control plane is the unified\nendpoint for your cluster the control\nplane's components make global decisions\nabout the cluster for example scheduling\nas well as detecting and responding to\ncluster events all interactions with the\ncluster are done via kubernetes api\ncalls and the control plane runs the\nkubernetes api server process to handle\nthose requests you can make kubernetes\napi calls directly via http or grpc or\ncan also be done indirectly by running\ncommands from the kubernetes command\nline client called cubectl and of course\nyou can interact with the ui in the\ncloud console the api server process is\nthe hub for all communications for the\ncluster moving on to the next component\nis cube scheduler the cube scheduler is\na component that discovers and assigns\nnewly created pods to a node for them to\nrun on so any new pods that are created\nwill automatically be assigned to its\nappropriate node by the cube scheduler\ntaking into consideration any\nconstraints that are in place next up is\nthe cube controller manager and this is\nthe component that runs controller\nprocesses and is responsible for things\nlike noticing and responding when nodes\ngo down\nmaintaining the correct number of pods\npopulating the services and pods as well\nas creating default accounts and api\naccess tokens for new namespaces it is\nthese controllers that will basically\nlook to make changes to the cluster when\nthe current state does not meet the\ndesired state now when it comes to the\ncloud controller manager this is what\nembeds cloud-specific control logic the\ncloud controller manager lets you link\nyour cluster into any cloud providers\napi\nand separates out the components that\ninteract with that cloud platform from\ncomponents that just interact with your\ncluster the cloud controller manager\nonly runs controllers that are specific\nto your cloud provider in this case\ngoogle cloud and lastly we have fcd and\nthis component is responsible to store\nthe state of the cluster at cd is a\nconsistent and highly available key\nvalue store that only interacts with the\napi server it saves all the\nconfiguration data along with what nodes\nare part of the cluster and what pods\nthey are running so now the control\nplane needs a way to interact with the\nnodes of the cluster thus the nodes\nhaving components themselves for this\ncommunication to occur this component is\ncalled a cubelet and this is an agent\nthat runs on each node in the cluster\nthat communicates with the control plane\nit is responsible for starting and\nrunning docker containers scheduled on\nthat node it takes a set of pod specs\nthat are provided to it and ensures that\nthe containers described in those pod\nspecs are running and healthy and i will\nbe diving into pod specs in a later\nlesson next up is cube proxy and this is\nthe component that maintains network\nconnectivity to the pods in a cluster\nand lastly the container runtime is the\nsoftware that is responsible for running\ncontainers kubernetes supports container\nruntimes like docker and container d and\nso these are the main components in a\ncluster covering the control plane and\nnodes with regards to communication\nwithin the cluster now before i end this\nlesson there is one more topic i wanted\nto touch on with regards to the\narchitecture of a gke cluster and that\nis the abstraction that happens and what\nexactly does gke manage with regards to\nkubernetes well gke manages all the\ncontrol plane components the endpoint\nexposes the kubernetes api server that\ncubectl uses to communicate with your\ncluster control plane the endpoint\nexposes the kubernetes api server that\ncubectl uses to communicate with your\ncluster control plane the endpoint ip is\ndisplayed in cloud console and this ip\nwill allow you to interact with the\ncluster when you run the command gcloud\ncontainer clusters get dash credentials\nyou see that the command gets the\ncluster endpoint as part of updating\ncubeconfig an ip address for the cluster\nis then exposed to interact with and is\nresponsible for provisioning and\nmanaging all the infrastructure that is\nneeded for the control plane gke also\nautomates the kubernetes nodes by\nlaunching them as compute engine vms\nunder the hood but still allows the user\nto change the machine type and access\nupgrade options by default google\nkubernetes engine clusters and node\npools are upgraded automatically by\ngoogle but you can also control when\nauto upgrades can and cannot occur by\nconfiguring maintenance windows and\nexclusions and just as a note a clusters\ncontrol plane and nodes do not\nnecessarily run the same version at all\ntimes and i will be digging more into\nthat in a later lesson and so i know\nthis is a lot of theory to take in but\nis as i said before a necessity to\nunderstanding kubernetes and gke and as\nwe go further along into kubernetes and\nget into demos i promise that this will\nstart to make a lot more sense and you\nwill start becoming more comfortable\nwith gke and the underlying components\nof kubernetes knowing kubernetes is a\nmust when working in any cloud\nenvironment as it is a popular and\ngrowing technology that is not slowing\ndown so knowing gke will put you in a\nreally good position for your career as\nan engineer in google cloud as well will\ngive you a leg up on diving into other\ncloud vendors implementation of\nkubernetes and so that's pretty much all\ni wanted to cover when it comes to\ngoogle kubernetes engine and kubernetes\nso you can now mark this lesson as\ncomplete and let's move on to the next\none\nwelcome back in this lesson i will be\ncovering cluster and node management in\ngke as it refers to choosing different\ncluster types for your workloads cluster\nversions\nnode pools as well as upgrades and the\nmany different options to choose from it\nis good to familiarize yourself with\nthese options as they may be the\ndeciding factor of having to keep your\nworkloads highly available and your\ntolerance to risk within your\nenvironment so with that being said\nlet's dive in now in the last lesson we\ntouched on nodes and how they are the\nworkers for the kubernetes cluster so\nnow that you are familiar with nodes i\nwanted to touch on a concept that builds\non it called node pools now a node pool\nis a group of nodes within a cluster\nthat all have the same configuration and\nusing node config specification to\nachieve this a node pool can also\ncontain one or multiple nodes when you\nfirst create a cluster the number and\ntype of nodes that you specify becomes\nthe default node pool as shown here in\nthe diagram then you can add additional\ncustom node pools of different sizes and\ntypes to your cluster all nodes in any\ngiven node pool are identical to one\nanother now custom node pools are really\nuseful when you need to schedule pods\nthat require more resources than others\nsuch as more memory more disk space or\neven different machine types you can\ncreate upgrade and delete node pools\nindividually without affecting the whole\ncluster and just as a note you cannot\nconfigure a single node in any node pool\nany configuration changes affect all\nnodes in the node pool and by default\nall new node pools run the latest stable\nversion of kubernetes existing node\npools can be manually upgraded or\nautomatically upgraded you can also run\nmultiple kubernetes node versions on\neach node pool in your cluster update\neach node pool independently and target\ndifferent node pools for specific\ndeployments in that node now with gke\nyou can create a cluster tailored to\nyour availability requirements and your\nbudget the types of available clusters\ninclude zonal both single zone or\nmulti-zonal and regional zonal clusters\nhave a single control plane in a single\nzone depending on what kind of\navailability you want you can distribute\nyour nodes for your zonal cluster in a\nsingle zone or in multiple zones now\nwhen you decide to deploy a single zone\ncluster it again has a single control\nplane running in one zone this control\nplane manages workloads on nodes running\nin the same zone a multi-zonal cluster\non the other hand has a single replica\nof the control plane running in a single\nzone and has nodes running in multiple\nzones during an upgrade of the cluster\nor an outage of the zone where the\ncontrol plane runs\nworkloads still run however the cluster\nits nodes and its workloads cannot be\nconfigured until the control plane is\navailable multi-zonal clusters are\ndesigned to balance availability and\ncost for consistent workloads and just\nas a note the same number of nodes will\nbe deployed to each selected zone and\nmay cost you more than budgeted so\nplease be aware and of course when\nyou're looking to achieve high\navailability for your cluster regional\nclusters are always the way to go a\nregional cluster has multiple replicas\nof the control plane running in multiple\nzones within a given region nodes also\nrun in each zone where a replica of the\ncontrol plane runs because a regional\ncluster replicates the control plane and\nnodes it consumes more compute engine\nresources than a similar single zone or\nmulti-zonal cluster the same number of\nnodes will be deployed to each selected\nzone and the default when selecting\nregional clusters is three zones now if\nyou're dealing with more sensitive\nworkloads that require more strict\nguidelines private clusters give you the\nability to isolate nodes from having\ninbound and outbound connectivity to the\npublic internet this isolation is\nachieved as the nodes have internal ip\naddresses only if you want to provide\noutbound internet access for certain\nprivate nodes you can use cloudnat or\nmanage your own nat gateway by default\nprivate google access is enabled in\nprivate clusters and their workloads\nwith limited outbound access to google\ncloud apis and services over google's\nprivate network in private clusters the\ncontrol plane's vpc network is connected\nto your clusters vpc network with vpc\nnetwork peering your vpc network\ncontains the cluster nodes and a\nseparate google cloud vpc network\ncontains your cluster's control plane\nthe control plane's vpc network is\nlocated in a project controlled by\ngoogle traffic between nodes and the\ncontrol plane is routed entirely using\ninternal ip addresses the control plane\nfor a private cluster has a private\nendpoint in addition to a public\nendpoint the control plane for a\nnon-private cluster only has a public\nendpoint the private endpoint is an\ninternal ip address in the control\nplane's vpc network the public endpoint\nis the external ip address of the\ncontrol plane and you can control access\nto this endpoint using authorized\nnetworks or you can disable access to\nthe public endpoint as shown here in the\ndiagram you can disable the public\nendpoint and connect to your network\nusing an internal ip address using cloud\ninterconnect or cloud vpn and you always\nhave the option of enabling or disabling\nthis public endpoint now when you create\na cluster you can choose the cluster\nspecific kubernetes version or you can\nmix the versions for flexibility on\nfeatures either way it is always\nrecommended that you enable auto upgrade\nfor the cluster and its nodes now when\nyou have auto upgrade enabled you are\ngiven the choice to choose from what are\ncalled release channels when you enroll\na new cluster in a release channel\ngoogle automatically manages the version\nand upgrade cadence for the cluster and\nits node pools all channels offer\nsupported releases of gke and are\nconsidered in general availability you\ncan choose from three different release\nchannels for automatic management of\nyour cluster's version and upgrade\ncadence as shown here the available\nrelease channels are rapid regular and\nstable release channels the rapid\nrelease channel gets the latest\nkubernetes release as early as possible\nand be able to use new gka features the\nmoment that they go into general\navailability with the regular release\nchannel you have access to gke and\nkubernetes features reasonably soon\nafter they are released but on a version\nthat has been qualified two to three\nmonths after releasing in the rapid\nrelease channel and finally we have the\nstable release channel where stability\nis prioritized over new functionality\nchanges and new versions in this channel\nare rolled out last after being\nvalidated two to three months in the\nregular release channel and so if you're\nlooking for more direct management of\nyour cluster's version choose a static\nversion when you enroll a cluster in a\nrelease channel that cluster is upgraded\nautomatically when a new version is\navailable in that channel now if you do\nnot use a release channel or choose a\ncluster version the current default\nversion is use the default version is\nselected based on usage and real world\nperformance and is changed regularly\nwhile the default version is the most\nmature one\nother versions being made available are\ngenerally available versions that pass\ninternal testing and qualification\nchanges to the default version are\nannounced in a release note now if you\nknow that you need to use a specific\nsupported version of kubernetes for a\ngiven workload you can specify it when\ncreating the cluster if you do not need\nto control the specific patch version\nyou use consider enrolling your cluster\nin a release channel instead of managing\nits version directly now when it comes\nto upgrading the cluster please be aware\nthat control plane and nodes do not\nalways run the same version at all times\nas well a control plane is always\nupgraded before its nodes when it comes\nto zonal clusters you cannot launch or\nedit workloads during that upgrade and\nwith regional clusters each control\nplane is upgraded one by one as well\nwith control planes auto upgrade is\nenabled by default and this is google\ncloud's best practice now again if you\nchoose you can do a manual upgrade but\nyou cannot upgrade the control plane\nmore than one minor version at a time so\nplease be aware as well with any cluster\nupgrades maintenance windows and\nexclusions are available and so this way\nyou can choose the best times for your\nupgrades and so like cluster upgrades by\ndefault a clusters nodes have auto\nupgrade enabled and it is recommended\nthat you do not disable it again this is\nbest practice by google cloud and again\nlike the cluster upgrades a manual\nupgrade is available and maintenance\nwindows and exclusions are available for\nall of these upgrades now when a no pool\nis upgraded gke upgrades one node at a\ntime\nwhile a node is being upgraded gke stops\nscheduling new pods onto it and attempts\nto schedule its running pods onto other\nnodes the node is then recreated at the\nnew version but using the same name as\nbefore this is similar to other events\nthat recreate the node such as enabling\nor disabling a feature on the node pool\nand the upgrade is only complete when\nall nodes have been recreated and the\ncluster is in the desired state when a\nnewly upgraded node registers with the\ncontrol plane gke marks the node as\nschedulable upgrading a no pool may\ndisrupt workloads running in that pool\nand so in order to avoid this you can\ncreate a new node pool with the desired\nversion and migrate the workload then\nafter migration you can delete the old\nnode pool now surge upgrades let you\ncontrol the number of nodes gke can\nupgrade at a time and control how\ndisruptive upgrades are to your\nworkloads you can change how many nodes\ngke attempts to upgrade at once by\nchanging the surge upgrade parameters on\na no pool surge upgrades reduce\ndisruption to your workloads during\ncluster maintenance and also allow you\nto control the number of nodes upgraded\nin parallel surge upgrades also work\nwith the cluster auto scaler to prevent\nchanges to nodes that are being upgraded\nnow surge upgrade behavior is determined\nby two settings max surge upgrade and\nmax unavailable upgrade\nnow with max surge upgrade this is the\nnumber of additional nodes that can be\nadded to the no pool during an upgrade\nincreasing max surge upgrade raises the\nnumber of nodes that can be upgraded\nsimultaneously and when it comes to the\nmax unavailable upgrade this is the\nnumber of nodes that can be\nsimultaneously unavailable during an\nupgrade increasing max unavailable\nupgrade raises the number of nodes that\ncan be upgraded in parallel so with max\nsurge upgrade the higher the number the\nmore parallel upgrades which will end up\ncosting you more money with max\nunavailable upgrade the higher the\nnumber the more disruptive it is and so\nthe more risk you are taking and so\nduring upgrades gke brings down at most\nthe sum of the max surge upgrade added\nwith the max unavailable upgrade so as\nyou can see here there are a slew of\noptions when it comes to deciding on the\ntype of cluster you want as well as the\ntype of upgrades that are available\nalong with when you want them to occur\nand so your deciding factor in the end\nwill be the workload that you are\nrunning and your risk tolerance and this\nwill play a big factor in keeping up\ntime for your cluster as well as saving\nmoney in any type of environment and so\nthat's pretty much all i wanted to cover\nwhen it comes to gke cluster and node\nmanagement so you can now mark this\nlesson as complete and let's move on to\nthe next one\n[Music]\nwelcome back and in this lesson i will\nbe diving into some more theory within\nkubernetes and gke this time touching on\nobjects and how objects are managed pods\nare only one type of object but there\nare many other parts that are involved\nin the management of these objects and\nthis is what this lesson is set out to\nteach you now there's quite a bit to\ncover here so with that being said let's\ndive in\nnow kubernetes objects are persistent\nentities in kubernetes kubernetes uses\nthese entities to represent the state of\nyour cluster for example it can describe\nthings like what containerized\napplications are running and on which\nnodes and what resources are available\nto those applications a kubernetes\nobject is a record of intent once you\ncreate the object kubernetes will\nconstantly work to ensure that object\nexists by creating an object you're\neffectively telling kubernetes what you\nwant your cluster's workload to look\nlike and this is your cluster's desired\nstate and you've heard me speak about\nthis many times before and this is what\ni was referring to now almost every\nkubernetes object includes two nested\nobject fields that govern the object's\nconfiguration the object spec and the\nobject's status for objects that have a\nspec you have to set this when you\ncreate the object providing a\ndescription of the characteristics you\nwant the resource to have its desired\nstate the status describes the current\nstate of the object supplied and updated\nby kubernetes and its components the\nkubernetes control plane continually and\nactively manages every object's actual\nstate to match the desired state you\nsupplied now each object in your cluster\nhas a name that is unique for that type\nof resource every kubernetes object also\nhas a uid that is unique across your\nwhole cluster only one object of a given\nkind can have a given name at a time\nhowever if you delete the object you can\nmake a new object with that same name\nevery object created over the whole\nlifetime of a kubernetes cluster has a\ndistinct uid these distinct uids are\nalso known as uuids which we discussed\nearlier on in the course now when\ncreating updating or deleting objects in\nkubernetes this is done through the use\nof a manifest file where you would\nspecify the desired state of an object\nthat kubernetes will maintain when you\napply the manifest each configuration\nfile can contain multiple manifests and\nis common practice to do so when\npossible a manifest file is defined in\nthe form of a yaml file or a json file\nand it is recommended to use yaml now in\neach yaml file for the kubernetes object\nthat you want to create there are some\nrequired values that need to be set the\nfirst one is the api version and this\ndefines which version of the kubernetes\napi you're using to create this object\nthe kind described in this example as a\npod is the kind of object you want to\ncreate next up is the metadata and this\nis the data that helps uniquely identify\nthe object including a string name\na uid and an optional namespace and the\nlast required value is the spec\nand this is what state you desire for\nthe object and the spec in this example\nis a container by the name of bow tie\ndash web server and is to be built with\nthe latest nginx web server image as\nwell as having port 80 open on the\ncontainer now when it comes to objects\npods are the smallest most basic\ndeployable objects in kubernetes a pod\nrepresents a single instance of a\nrunning process in your cluster pods\ncontain one or more containers such as\ndocker containers and when a pod runs\nmultiple containers the containers are\nmanaged as a single entity and share the\npods resources which also includes\nshared networking and shared storage for\ntheir containers generally one pod is\nmeant to run a single instance of an\napplication on your cluster which is\nself-contained and isolated\nnow although a pod is meant to run a\nsingle instance of your application on\nyour cluster\nit is not recommended to create\nindividual pods directly instead you\ngenerally create a set of identical pods\ncalled replicas to run your application\na set of replicated pods are created and\nmanaged by a controller such as a\ndeployment controllers manage the life\ncycle of their pods as well as\nperforming horizontal scaling changing\nthe number of pods is necessary now\nalthough you might occasionally interact\nwith pods directly to debug troubleshoot\nor inspect them it's recommended that\nyou use a controller to manage your pods\nand so once your pods are created they\nare then run on nodes in your cluster\nwhich we discussed earlier the pod will\nthen remain on its node until its\nprocess is complete the pot is deleted\nthe pod is evicted from the node due to\nlack of resources or the node fails if a\nnode fails pods on the node are\nautomatically scheduled for deletion now\na single gke cluster should be able to\nsatisfy the needs of multiple users or\ngroups of users and kubernetes\nnamespaces help different projects teams\nor customers to share a kubernetes\ncluster you can think of a namespace as\na virtual cluster inside of your\nkubernetes cluster and you can have\nmultiple namespaces logically isolated\nfrom each other they can help you and\nyour teams with organization and\nsecurity now you can name your\nnamespaces whatever you'd like but\nkubernetes starts with four initial\nnamespaces the first one is the default\nnamespace and this is for objects with\nno other namespace\nso when creating new objects without a\nnamespace your object will automatically\nbe assigned to this namespace cube dash\nsystem is the next one and these are for\nobjects created by kubernetes\ncube-public is created automatically and\nis readable by all users but is mostly\nreserved for cluster usage in case that\nsome resources should be visible and\nreadable publicly throughout the whole\ncluster and finally cube node lease is\nthe namespace for the lease objects\nassociated with each node which improves\nthe performance of the node heartbeats\nas the cluster scales and so like most\nresources in google cloud labels are key\nvalue pairs that help you organize your\nresources in this case kubernetes\nobjects labels can be attached to\nobjects at creation time and can be\nadded or modified at any time each\nobject can have a set of key value\nlabels defined and each key must be\nunique for a given object and labels can\nbe found under metadata in your manifest\nfile and so the one thing to remember\nabout pods is that they are ephemeral\nthey are not designed to run forever and\nwhen a pod is terminated it cannot be\nbrought back in general pods do not\ndisappear until they are deleted by a\nuser or by a controller pods do not heal\nor repair themselves for example if a\npod is scheduled on a node which later\nfails the pod is deleted as well if a\npod is evicted from a node for any\nreason the pod does not replace itself\nand so here is a diagram of a pod life\ncycle that shows the different phases of\nits running time to give you some better\nclarity of its ephemeral nature when\nfirst creating the pod the pod will\nstart impending and this is the pod's\ninitial phase and is waiting for one or\nmore of the containers to be set up and\nmade ready to run this includes the time\na pod spends waiting to be scheduled as\nwell as the time spent downloading\ncontainer images over the network once\nthe pod has completed the pending phase\nit is moved on to be scheduled and once\nit is scheduled it will move into the\nrunning phase and this is the phase\nwhere the pod has been bound to a node\nand all of the containers have been\ncreated the running phase has at least\none container in the pod running or is\nin the process of starting or restarting\nand once the workload is complete the\npod will move into the succeeded phase\nand this is where all the containers in\nthe pod have terminated in success and\nwill not be restarted now if all the\ncontainers in the pod have not\nterminated successfully the pod will\nmove into a failed phase and this is\nwhere all the containers in the pod have\nterminated and at least one container\nhas terminated in failure now there's\none more phase in the pod life cycle\nthat i wanted to bring up which is the\nunknown phase and this is the state of\nthe pod that could not be obtained this\nphase typically occurs due to an error\nin communicating with the node where the\npod should be running so now when you're\ncreating pods using a deployment is a\ncommon way to do this a deployment runs\nmultiple replicas of your application\nand automatically replaces any instances\nthat fail or become unresponsive\ndeployments help ensure that one or more\ninstances of your application are\navailable to serve user requests\ndeployments use a pod template which\ncontains a specification for its pods\nthe pod specification determines how\neach pod should look like for instance\nwhat applications should run inside its\ncontainers which volumes the pods should\nmount its labels and more and so when a\ndeployments pod template is changed new\npods are automatically created one at a\ntime now i wanted to quickly bring up\nreplica sets for just a moment you'll\nhear about replica sets and i wanted to\nmake sure that i covered it replica sets\nensures that a specified number of pod\nreplicas are running at any given time\nhowever a deployment is a higher level\nconcept that manages replica sets and\nprovides updates to pods along with\nother features and so using deployments\nis recommended over using replica sets\nunless your workload requires it and i\nwill be including a link to replica sets\nin the lesson text so speaking of\nworkloads in kubernetes workloads are\nobjects that set deployment rules four\npods based on these rules kubernetes\nperforms the deployment and updates the\nworkload with the current state of the\napplication workloads let you define the\nrules for application scheduling scaling\nand upgrading now deployments which we\njust discussed is a type of workload and\nas we've seen a deployment runs multiple\nreplicas of your application and\nautomatically replaces any instances\nthat fail or become unresponsive\ndeployments are best used\nfor stateless applications another type\nof workload is stateful sets and in\ncontrast to deployments these are great\nfor when your application needs to\nmaintain its identity and store data so\nbasically any application that requires\nsome sort of persistent storage daemon\nsets is another common workload that\nensures every node in the cluster runs a\ncopy of that pod and this is for use\ncases where you're collecting logs or\nmonitoring node performance now jobs is\na workload that launches one or more\npods and ensures that a specified number\nof them successfully terminate jobs are\nbest used to run a finite task to\ncompletion as opposed to managing an\nongoing desired application state and\ncron jobs are similar to jobs however\ncron jobs runs to completion on a\ncron-based schedule and so the last\nworkload that i wanted to cover are\nconfig maps and these store general\nconfiguration information and so after\nyou upload a config map any workload can\nreference it as either an environment\nvariable or a volume mount and so just\nas a note config maps are not meant to\nstore sensitive data if you're planning\nto do this please use secrets now i know\nthis lesson has been extremely heavy in\ntheory but these are fundamental\nconcepts to know when dealing with\nkubernetes and gke as well as the\nobjects that it supports so i recommend\nthat if you need to go back and review\nthis lesson if things aren't making\nsense so that you can better understand\nit as these concepts all tie in together\nand will come up in the exam and so\nthat's pretty much all i wanted to cover\nin this lesson on pods and object\nmanagement within gke so you can now\nmark this lesson as complete\nand let's move on to the next one\n[Music]\nwelcome back and in this lesson i'm\ngoing to be diving into kubernetes\nservices now services are a major\nnetworking component when it comes to\nworking in kubernetes and can play a\nmajor factor when it comes to deciding\non how you want to route your traffic\nwithin your kubernetes cluster as well\nin my experience services show up on the\nexam and so an understanding of how they\nwork and the different types to use are\nessential to understanding the big\npicture of kubernetes this lesson will\ncover an overview on what services are\nwhat they do and the different types\nthat are available along with their use\ncases now there's a lot to cover here so\nwith that being said let's dive in now\nas i had discussed earlier kubernetes\npods are ephemeral pods are created and\ndestroyed to match the state of your\ncluster so these resources are never\npermanent a perfect example of this is\nby using a deployment object so you can\ncreate and destroy pods dynamically now\nwhen it comes to networking in\nkubernetes each pod gets its own ip\naddress however in a deployment a pod\nthat is running once destroyed will be\nrecreated with a new ip address and\nthere is no real way to keep track of\nthese i p addresses for communication as\nthey change very frequently and this is\nwhere services come into play now a\nservice is an abstraction in the sense\nthat it is not a process that listens on\nsome network interface\na service can be defined as a logical\nset of pods an abstraction on top of the\npod which provides a single persistent\nip address and dns name by which pods\ncan be accessed it allows for routing\nexternal traffic into your kubernetes\ncluster and used inside your cluster for\nmore intelligent routing with services\nit is also very easy to manage load\nbalancing configuration for traffic\nbetween replicas it helps pods scale\nquickly and easily as the service will\nautomatically handle the recreation of\npods and their new ip addresses the main\ngoal of services in kubernetes is to\nprovide persistent access to its pods\nwithout the necessity to look for a\npod's ip\neach time when the pod is recreated and\nagain services also allow for external\naccess from users to the applications\ninside the cluster without having to\nknow the ip address of the individual\npod in order to reach that application\nnow in order for a service to route\ntraffic to the correct pod in the\ncluster there are some fields in the\nmanifest file that will help determine\nthe end points on where traffic should\nbe routed shown here on the right is the\ndeployment manifest for reference and on\nthe left is the services manifest now as\nyou can see here in the service manifest\non the left the kind is clearly defined\nas service under metadata is the name of\nthe service and this will be the dns\nname of the service when it is created\nso when it comes to the spec there is a\nfield here called a selector and this is\nwhat defines what pods should be\nincluded in the service and it is the\nlabels under the selector that define\nwhich pods and labels are what we\ndiscussed in the last lesson as\narbitrary key value pairs so any pod\nwith these matching labels is what will\nbe added to the service as shown here in\nthe deployment file this workload will\nbe a part of the service and its labels\nmatch that of the selector in the\nservices file for type this is the type\nof service that you will want to use in\nthis example type cluster ip is used but\ndepending on the use case you have a few\ndifferent ones to choose from now at the\nbottom here is a list of port\nconfigurations protocol being the\nnetwork protocol to use with the port\nport being the port that incoming\ntraffic goes to and finally the target\nport which is the port on the pod that\ntraffic should be sent to and this will\nmake more sense as we go through the\nupcoming diagrams so touching on\nselectors and labels for a moment\nkubernetes has a very unique way of\nrouting traffic and when it comes to\nservices it's not any different services\nselect pods based on their labels now\nwhen a selector request is made to the\nservice it selects all pods in the\ncluster matching the key value pair\nunder the selector it chooses one of the\npods if there are more than one with the\nsame key value pair and forwards the\nnetwork request to it and so here in\nthis example you can see that the\nselector specified for the service has a\nkey value pair of app inventory you can\nsee the pod on node 1 on the left holds\nthe label of app inventory as well which\nmatches the key value pair of the\nselector and so traffic will get routed\nto that pod because of it if you look at\nthe label for the pod in node 2 on the\nright the label does not match that of\nthe selector and so it will not route\ntraffic to that pod and so to sum it up\nthe label on the pod matching the\nselector in the service determines where\nthe network request will get routed to\nand so now i will be going through the\nmany different service types that are\navailable for routing network traffic\nwithin gke starting with cluster ip\nnow a cluster ip service is the default\nkubernetes service it gives you a\nservice inside your cluster that other\napps inside your cluster can access the\nservice is not exposed outside the\ncluster but can be addressed from within\nthe cluster when you create a service of\ntype cluster ip kubernetes creates a\nstable ip address that is accessible\nfrom nodes in the cluster clients in the\ncluster call the service by using the\ncluster ip address and the port value\nspecified in the port field of the\nservice manifest the request is\nforwarded to one of the member pods on\nthe port specified in the target port\nfield and just as a note this ip address\nis stable for the lifetime of the\nservice so for this example a client\ncalls the service at 10.176\non tcp port 80. the request is forwarded\nto one of the member pods on tcp port\n80. note that the member pod must have a\ncontainer that is listening on tcp port\n80. if there is no container listening\non port 80 clients will see a message\nlike fail to connect or this site can't\nbe reached think of the case when you\nhave a dns record that you don't want to\nchange and you want the name to resolve\nto the same ip address or you merely\nwant a static ip address for your\nworkload this would be a great use case\nfor the use of the cluster ip service\nnow although the service is not\naccessible by network requests outside\nof the cluster\nif you need to connect to the service\nyou can still connect to it with the\ncloud sdk or cloud shell by using the\nexposed ip address of the cluster and so\ni wanted to take a moment to show you\nwhat a cluster ip manifest actually\nlooks like and i will be going through\nthe manifest for each service type for\nyou to familiarize yourself with we\nfirst have the name of the service which\nis cluster ip dash service\nwe then have the label used for the\nselector which is the key value pair of\napp inventory and then we have the\nservice type which is cluster ip and we\nhave the port number exposed internally\nin the cluster which is port 80 along\nwith the target port that containers are\nlistening on which again is port 80. and\nso the next service type we have is node\nport\nso when you create a service of type\nnode port you specify a node port value\nthe node port is a static port and is\nchosen from a pre-configured range\nbetween 30 000 and 32\n760\nyou can specify your own value within\nthis range but please note that any\nvalue outside of this range will not be\naccepted by kubernetes as well if you do\nnot choose a value a random value within\nthe range specified will be assigned\nonce this port range has been assigned\nto the service then the service is\naccessible by using the ip address of\nany node along with the no port value\nthe service is then exposed on a port on\nevery node in the cluster the service\ncan then be accessed externally at the\nnode ip along with the node port when\nusing node port services you must make\nsure that the selected port is not\nalready open on your nodes and so just\nas a note the no port type is an\nextension of the cluster i p type so a\nservice of type node port naturally has\na cluster i p address and so this method\nisn't very secure as it opens up each\nnode to external entry as well this\nmethod relies on knowing the ip\naddresses of the nodes which could\nchange at any time and so going through\nthe manifest of type node port service\nwe start off with the name of the\nservice which is node port dash service\nthe label used for the selector which\nuses the key value pair of app inventory\nthe type which is node port and notice\nthe case sensitivity here which you will\nfind in most service types along with\nthe port number exposed internally in\nthe cluster which is port 80 and again\nthe port that the containers are\nlistening on which is the target port\nwhich is port 80 as well and lastly and\nmost importantly we have the no port\nvalue which is marked as you saw in the\ndiagram earlier as port\n32002 the next service type we have up\nis low balancer and this service is\nexposed as a load balancer in the\ncluster low balancer services will\ncreate an internal kubernetes service\nthat is connected to a cloud provider's\nload balancer and in this case google\ncloud this will create a static publicly\naddressable ip address and a dns name\nthat can be used to access your cluster\nfrom an external source the low balancer\ntype is an extension of the no port type\nso a service of type load balancer\nnaturally has a cluster ip address if\nyou want to directly expose a service\nthis is the default method all traffic\non the port you specify\nwill be forwarded to the service there\nis no filtering or routing and it means\nyou can send many different types of\ntraffic to it like http https tcp or udp\nand more the downside here is that for\neach service you expose with a low\nbalancer you pay for that load balancer\nand so you can really rack up your bill\nif you're using multiple load balancers\nand shown here is the manifest for type\nload balancer it shows the name of the\nservice load balancer dash service the\nlabel which is used for the selector\nwhich is the key value pair of app\ninventory\nthe service type which is low balancer\nagain notice the case sensitivity along\nwith the port and the target port which\nare both port 80. and so this is the end\nof part one of this lesson it was\ngetting a bit long so i decided to break\nit up this would be a great opportunity\nfor you to get up and have a stretch get\nyourself a coffee or tea and whenever\nyou're ready part two will be starting\nimmediately from the end of part one so\ngo ahead and mark this as complete and\ni'll see you in the next one\n[Music]\nwelcome back this is part two of the\nkubernetes services lesson and we're\ngoing to continue immediately from the\nend of part one so whenever you're ready\nlet's dive in and so the next service\ntype we have is multiport services\nnow for some services there is the need\nto expose more than one port kubernetes\nlets you configure multiple port\ndefinitions on a service object so when\nusing multiple ports for a service you\nmust give all your ports names and if\nyou have multiple service ports these\nnames must be unique in this example if\na client calls the service at 10.176.1\non tcp port 80 the request is forwarded\nto a member pod on tcp port 80 on either\nnode 1 or node 2. but if a client calls\nthe service at 10.176.133.7\non tcp port 9752 the request is\nforwarded to the pod on tcp port 9752\nthat resides on node 1. each member pod\nmust have a container listening on tcp\nport 80 and a container listening on tcp\nport 9752 this could be a single\ncontainer with two threads or two\ncontainers running in the same pod and\nof course as shown here is a manifest\nshowing the multi-port services\nthe name of the service\nthe label used for the selector\nas well as the service type the port\nnode exposed internally for each\nseparate workload as well as the port\nthat containers are listening on for\neach workload as well and as you saw\nbefore nginx was using target port 80\nwhere appy was using port 9752 moving on\nto another service type is external name\nnow a service of type external name\nprovides an internal alias for an\nexternal dns name internal clients make\nrequests using the internal dns name and\nthe requests are redirected to the\nexternal name when you create a service\nkubernetes creates a dns name that\ninternal clients can use to call the\nservice in this example the internal dns\nname is bowtie.sql when an internal\nclient makes a request to the internal\ndns name of bowtie.sql the request gets\nredirected to bowtie.sql2\ndot bow tie inc dot private the external\nname service type is a bit different\nthan other service types as it's not\nassociated with a set of pods or an ip\naddress it is a mapping from an internal\ndns name to an external dns name this\nservice does a simple cname redirection\nand is a great use case for any external\nservice that resides outside of your\ncluster and again here is a view of a\nmanifest for type external name here\nshowing the internal dns name along with\nthe external dns name redirect and\nmoving on to the last service type we\nhave the headless service type now\nsometimes you don't need or want low\nbalancing and a single service ip in\nthis case you can create headless\nservices by specifying none as the\nservice type in the manifest file this\noption also allows you to choose other\nservice discovery mechanisms without\nbeing tied to kubernetes implementation\napplications can still use a\nself-registration pattern with this\nservice and so a great use case for this\nis when you don't need any low balancing\nor routing you only need the service to\npatch the request to the back end pod no\nips needed headless service is typically\nused with stateful sets where the name\nof the pods are fixed this is useful in\nsituations like when you're setting up a\nmysql cluster where you need to know the\nname of the master and so here is a\nmanifest for the headless service again\nthe service type is marked as none and\nso to sum it up kubernetes services\nprovides the interfaces through which\npods can communicate with each other\nthey also act as the main gateway for\nyour application services use selectors\nto identify which pods they should\ncontrol they expose an ip address and a\nport that is not necessarily the same\nport at which the pod is listening and\nservices can expose more than one port\nand can also route traffic to other\nservices external ip addresses or dns\nnames services make it really easy to\ncreate network services in kubernetes\neach service can be backed with as many\npods as needed without having to make\nyour code aware of how each service is\nbacked also please note that there are\nmany other features and use cases within\nthe services that have been mentioned\nthat i've not brought up i will also\ninclude some links in the lesson text\nfor those who are interested in diving\ndeeper into services this lesson was to\nmerely summarize the different service\ntypes and knowing these service types\nwill put you in a great position on the\nexam for any questions that cover\nservices within gke now i know this has\nbeen another lesson that's been\nextremely heavy in theory and has been a\ntremendous amount to take in but not to\nworry next up is a demo that will put\nall this theory into practice and we'll\nbe going ahead and building a cluster\nalong with touching on much of the\ncomponents discussed within the past few\nlessons and so that's pretty much all i\nwanted to cover when it comes to\nkubernetes service types so you can now\nmark this lesson as complete and\nwhenever you're ready join me in the\nconsole\n[Music]\nwelcome back\nin this lesson i'll be going over\ningress for gke\nan object within gke that defines rules\nfor routing traffic to specific services\ningress is a well-known topic that comes\nup in the exam\nas well as being a common resource that\nis used in many gke clusters that you\nwill see in most environments\nsomething that you will get very\nfamiliar with while diving deeper into\nmore complex environments\nso whenever you're ready let's dive in\nnow in gke an ingress object defines\nrules for routing http and https traffic\nto applications running in a cluster\nan ingress object is associated with one\nor more service objects\neach of which is associated with a set\nof pods\nwhen you create an ingress object the\ngke ingress controller\ncreates a google cloud\nhttp or https load balancer and\nconfigures it according to the\ninformation in the ingress and its\nassociated services\ngke ingress is a built-in\nand managed ingress controller\nthis controller implements ingress\nresources as google cloud load balancers\nfor http and https workloads in gke\nalso the load balancer is given a stable\nip address that you can associate with a\ndomain name each external http\nand https load balancer or internal http\nor https load balancer uses a single url\nmap\nwhich references one or more back-end\nservices\none back-end service corresponds to each\nservice referenced by the ingress in\nthis example assume that you have\nassociated the load balancers ip address\nwith the domain name bowtieinc.co\nwhen a client sends a request to\nbowtieinc.co\nthe request is routed to a kubernetes\nservice named products on port 80. and\nwhen a client sends a request to\nbowtieinc.co\nforward slash discontinued the request\nis routed to a kubernetes service named\ndiscontinued on port 21337\ningress is probably the most powerful\nway to expose your services but can also\nbe very complex\nas there are also many types of ingress\ncontrollers to choose from\nalong with plugins for ingress\ncontrollers\ningress is the most useful and cost\neffective if you want to expose\nmultiple services under the same ip\naddress\nas you only pay\nfor one load balancer if you are using\nthe native gcp integration\nand comes with a slew of features\nand so shown here is the ingress\nmanifest which is a bit different from\nthe other manifest that you've seen\nas it holds rules for different paths\nexplain in the previous diagram in the\nmanifest shown here one path directs all\ntraffic\nto the product's service name\nwhile the other path redirects traffic\nfrom discontinued to the back end\nservice name of discontinued\nand note that each of these service\nnames have their own independent\nmanifest\nas it is needed to create the service\nand are referenced within the ingress\nmanifest\nso the more rules you have for different\npaths or ports the more services you\nwill need\nnow i wanted to touch on network\nendpoint groups or any g's for short for\njust a second\nnow this is a configuration object that\nspecifies a group of back-end endpoints\nor services\nnegs are useful\nfor container native load balancing\nwhere each container can be represented\nas an endpoint to the load balancer the\nnegs are used to track pod endpoints\ndynamically so the google low balancer\ncan route traffic to its appropriate\nback ends\nso traffic is low balanced from the load\nbalancer directly to the pod ip\nas opposed to traversing the vm ip and\ncoupe proxy networking in these\nconditions\nservices will be annotated automatically\nindicating that a neg\nshould be created to mirror the pod ips\nwithin the service the neg is what\nallows compute engine load balancers to\ncommunicate directly with pods the\ndiagram shown here is the ingress to\ncompute engine resource mappings of the\nmanifest that you saw earlier where the\ngke ingress controller\ndeploys and manages compute engine low\nbalancer resources based on the\ningressed resources\nthat are deployed in the cluster\nnow touching on health checks for just a\nminute if there are no specified health\ncheck parameters for a corresponding\nservice\nusing a back-end custom resource\ndefinition\na set of default and inferred parameters\nare used health check parameters for a\nback-end service should be explicitly\ndefined by creating a back-end config\ncustom resource definition for the\nservice and this should be done if\nyou're using anthos\na backend config custom resource\ndefinition should also be used if you\nhave more than one container in the\nserving pods as well if you need control\nover the port that's used for the low\nbalancers health checks now you can\nspecify the backend services health\ncheck parameters\nusing the health check parameter of a\nback-end config custom resource\ndefinition referenced by the\ncorresponding service\nthis gives you more flexibility and\ncontrol\nover health checks for a google cloud\nexternal http or https load balancer or\ninternal http or https load balancer\ncreated by an ingress\nand lastly i wanted to touch on ssl\ncertificates and there are three ways to\nprovide ssl certificates to an http or\nhttps load balancer the first way is\ngoogle managed certificates\nand these are provisioned deployed\nrenewed\nand managed for your domains and just as\na note\nmanaged certificates do not support\nwildcard domains the second way to\nprovide ssl certificates is through\nself-managed certificates that are\nshared with google cloud you can\nprovision your own ssl certificate\nand create a certificate resource\nin your google cloud project you can\nthen list the certificate resource in an\nannotation on an ingress to create an\nhttp or https load balancer that uses\nthe certificate and the last way to\nprovide ssl certificates is through\nself-managed certificates as secret\nresources so you can provision your own\nssl certificate and create a secret to\nhold it you can then refer to the secret\nas an ingress specification to create an\nhttp or https load balancer that uses\nthis certificate and just as a note you\ncan specify multiple certificates in an\ningress manifest the load balancer\nchooses a certificate if the common name\nin the certificate\nmatches the host name\nused in the request and so that pretty\nmuch covers\nall the main topics in this short lesson\non ingress for gke\nso you can now mark this lesson as\ncomplete\nand let's move on to the next one\n[Music]\nwelcome back\nin this lesson i'll be going over gke\nstorage options now kubernetes currently\noffers a slew of different storage\noptions\nand is only enhanced by the added\nfeatures available in google cloud for\ngke we'll also be getting into the\ndifferent abstractions that kubernetes\noffers to manage storage\nand how they can be used for different\ntypes of workloads\nnow there's quite a bit to go over here\nso with that being said let's dive in\nnow as i stated before there are several\nstorage options for applications running\non gke\nthe choices vary in terms of flexibility\nand ease of use\ngoogle cloud offers several storage\noptions that can be used for your\nspecific workload\nkubernetes also provides storage\nabstractions which i will be getting\ninto in just a bit the easiest storage\noptions are google cloud's managed\nstorage products if you need to connect\na database to your cluster you can\nconsider\nusing cloud sql datastore or cloud\nspanner and when it comes to object\nstorage cloud storage would be an\nexcellent option to fill the gap file\nstore is a great option for when your\napplication requires\nmanaged network attached storage and if\nyour application requires block storage\nthe best option is to use persistent\ndisks\nand can be provisioned manually or\nprovisioned dynamically through\nkubernetes now i wanted to first start\noff with kubernetes storage abstractions\nbut in order to understand kubernetes\nstorage abstractions i wanted to take a\nmoment to explain how storage is mounted\nin the concept of docker now docker has\na concept of volumes\nthough it is somewhat looser and less\nmanaged than kubernetes\na docker volume is a directory on disk\nor in another container\ndocker provides volume drivers but the\nfunctionality is somewhat limited a\ndocker container has a writable layer\nand this is where the data is stored by\ndefault\nmaking the data ephemeral and so data is\nnot persisted when the container is\nremoved so storing data inside a\ncontainer is not always recommended now\nthere are three ways to mount data\ninside a docker container the first way\nis a docker volume and sits inside the\ndocker area within the host's file\nsystem and can be shared amongst other\ncontainers\nthis volume is a docker object and is\ndecoupled from the container\nthey can be attached and shared across\nmultiple containers as well bind\nmounting is the second way to mount data\nand is coming directly from the host's\nfile system\nbind mounts are great for local\napplication development\nyet cannot be shared across containers\nand the last way to mount data is by\nusing temp-fs\nand is stored in the host's memory this\nway is great for ephemeral data and\nincreases performance as it no longer\nlies in the container's writable layer\nnow with kubernetes storage abstractions\nfile system and block based storage are\nprovided to your pods but are different\nthan docker in nature volumes are the\nbasic storage unit in kubernetes that\ndecouples the storage from the container\nand tie it to the pod and not the\ncontainer like in docker a regular\nvolume simply called volume is basically\na directory that the containers in a pod\nhave access to the particular volume\ntype used is what will determine its\npurpose\nsome volume types are backed by\nephemeral storage\nlike empty dir\nconfig map and secrets and these volumes\ndo not persist after the pod ceases to\nexist\nvolumes are useful for caching temporary\ninformation\nsharing files between containers\nor to load data into a pod other volume\ntypes are backed by durable storage and\npersist beyond the lifetime of a pod\nlike persistent volumes and persistent\nvolume claims a persistent volume is a\ncluster resource\nthat pods can use for durable storage a\npersistent volume claim\ncan be used to dynamically provision a\npersistent volume\nbacked by persistent disks persistent\nvolume claims can also be used to\nprovision other types of backing storage\nlike nfs\nand i will be getting more into\npersistent volumes and persistent volume\nclaims in just a bit\nnow as you saw in docker on disk files\nin a container are the simplest place\nfor an application to write data but\nfiles are lost when the container\ncrashes or stops for any other reason\nas well as being unaccessible to other\ncontainers running in the same pod in\nkubernetes the volume source declared in\nthe pod specification determines how the\ndirectory is created\nthe storage medium used\nand the directory's initial contents\na pod specifies what volumes it contains\nand the path where containers mount the\nvolume ephemeral volume types\nlive the same amount of time as the pods\nthey are connected to these volumes are\ncreated when the pod is created and\npersist through container restarts only\nwhen the pod terminates or is deleted\nare the volumes terminated as well other\nvolume types are interfaces to durable\nstorage that exist independently of a\npod like ephemeral volumes data in a\nvolume backed by durable storage\nis preserved when the pod is removed\nthe volume is merely unmounted and the\ndata can be handed off to another pod\nnow volumes differ in their storage\nimplementation\nand their initial contents you can\nchoose the volume source that best fits\nyour use case\nand i will be going over some common\nvolume sources\nthat are used and you will see\nin many gke implementations the first\nvolume that i want to bring up is empty\ndir\nnow an empty dir volume provides an\nempty directory that containers in the\npod can read and write from when the pod\nis removed from a node for any reason\nthe data in the empty dir is deleted\nforever an empty dir volume is stored on\nwhatever medium is backing the node\nwhich might be a disk\nssd or network storage\nempty der volumes are useful for scratch\nspace and sharing data between multiple\ncontainers in a pod\nthe next type of volume that i wanted to\ngo over is config map\nand config map is a resource that\nprovides a way to inject configuration\ndata into pods\nthe data stored in a config map object\ncan be referenced in a volume of type\nconfig map\nand then consumed through files running\nin a pod the next volume type is secret\nand a secret volume is used to make\nsensitive data such as passwords oauth\ntokens and ssh keys\navailable to applications\nthe data stored in a secret object can\nbe referenced in a volume of type secret\nand then consumed through files running\nin a pod\nnext volume type is downward api and\nthis volume makes downward api data\navailable to applications\nso this data includes information\nabout the pod and container in which an\napplication is running in\nan example of this would be to expose\ninformation about the pods namespace and\nip address to applications and the last\nvolume type that i wanted to touch on is\npersistent volume claim now a persistent\nvolume claim volume can be used to\nprovision durable storage so that they\ncan be used by applications a pod uses a\npersistent volume claim\nto mount a volume that is backed by this\ndurable storage and so now that i've\ncovered volumes i wanted to go into a\nbit of detail about persistent volumes\npersistent volume resources are used to\nmanage durable storage in a cluster in\ngke a persistent volume\nis typically backed by a persistent disk\nor file store can be used as an nfs\nsolution unlike volumes the persistent\nvolume life cycle is managed by\nkubernetes and can be dynamically\nprovisioned\nwithout the need to manually create and\ndelete the backing storage persistent\nvolume resources are cluster resources\nthat exist independently of pods and\ncontinue to persist as the cluster\nchanges and as pods are deleted and\nrecreated moving on to persistent volume\nclaims this is a request for\nand claim to\na persistent volume resource persistent\nvolume claim objects request a specific\nsize\naccess mode and storage class for the\npersistent volume if an existing\npersistent volume can satisfy the\nrequest or can be provisioned the\npersistent volume claim is bound to that\npersistent volume and just as a note\npods use claims\nas volumes the cluster inspects the\nclaim to find the bound volume and\nmounts that volume for the pod\nnow i wanted to take a moment to go over\nstorage classes and how they apply to\nthe overall storage in gke\nnow these volume implementations\nsuch as gce persistent disk are\nconfigured through storage class\nresources\ngke creates a default storage class for\nyou which uses the standard persistent\ndisk type of ext4 as shown here the\ndefault storage class is used when a\npersistent volume claim doesn't specify\na storage class name\nand can also be replaced with one of\nyour choosing you can even create your\nown storage class resources to describe\ndifferent classes of storage\nand is helpful when using windows node\npools\nnow as i stated before persistent volume\nclaims can automatically provision\npersistent disks for you\nwhen you create this persistent volume\nclaim object\nkubernetes dynamically creates a\ncorresponding persistent volume object\ndue to the gke default storage class\nthis persistent volume\nis backed by a new empty compute engine\npersistent disk you use this disk in a\npod by using the claim as a volume when\nyou delete a claim the corresponding\npersistent volume object and the\nprovision compute engine persistent disk\nare also deleted now to prevent deletion\nyou can set the reclaim policy of the\npersistent disk resource\nor its storage class resource to retain\nnow deployments as shown here in this\ndiagram are designed for stateless\napplications\nso all replicas of a deployment\nshare the same persistent volume claim\nwhich is why stateful sets are the\nrecommended method of deploying stateful\napplications\nthat require a unique volume per replica\nby using stateful sets with persistent\nvolume claim templates\nyou can have applications that can scale\nup automatically\nwith unique persistent volume claims\nassociated to each replica pod\nnow lastly i wanted to touch on some\ntopics that will determine the storage\naccess that is available for any gke\ncluster in your environment now i first\nwanted to start off with access modes\nand there are three supported modes for\nyour persistent disks that allow read\nwrite access and are listed here read\nwrite once is where the volume can be\nmounted as read write by a single node\nread only many is where the volume can\nbe mounted as a read only by many nodes\nand lastly read write many is where the\nvolume can be mounted as read write by\nmany nodes and just as a note\nread write once is the most common use\ncase for persistent disks\nand works as the default access mode for\nmost applications next i wanted to touch\non the type of persistent disks that are\navailable and the benefits and caveats\nof access for each now going through the\npersistent disks lesson of this course\nyou probably know by now about the\navailable persistent disks when it comes\nto zonal versus regional availability\nand so this may be a refresher for some\nnow going into regional persistent disks\nthese are multi-zonal resources that\nreplicate data between two zones in the\nsame region and can be used similarly to\nzonal persistent disks in the event of a\nzonal outage kubernetes can fail over\nworkloads using the volume to the other\nzone regional persistent disks are great\nfor highly available solutions for\nstateful workloads on gke now zonal\npersistent disks\nare zonal resources\nand so unless a zone is specified\ngke assigns the disk to a single zone\nand chooses the zone at random once a\npersistent disk is provisioned\nany pods referencing the disk are\nscheduled to the same zone as the disk\nand just as a note\nusing anti-affinity on zones\nallows stateful set pods to be spread\nacross zones\nalong with the corresponding disks and\nthe last point that i wanted to cover\nwhen it comes to persistent volume\naccess\nis the speed of access\nnow as stated in an earlier lesson the\nsize of persistent disks determine the\niops and throughput of the disk gke\ntypically uses persistent disks\nas boot disks and to back kubernetes\npersistent volumes\nso whenever possible use larger and\nfewer disks\nto achieve higher iops and throughput\nand so that pretty much covers\neverything that i wanted to go over\nin this lesson on gke storage options\nso you can now mark this lesson as\ncomplete\nand let's move on to the next one\n[Music]\nwelcome back in these next few demos i'm\ngoing to be doing a complete walkthrough\nand putting all the theory we learned\ninto practice through building and\ninteracting with gke clusters and you'll\nbe building and deploying your own\ncontainerized application on this\ncluster called box of bowties so in this\ndemo we're going to be setting up our\nown gke cluster in the console along\nwith going through all the options that\nare available when deploying it we're\nalso going to use the command line to\nconfigure the cubectl command line tool\nso that we can interact with the cluster\nso with that being said let's dive in\nand so here in the console i am logged\nin as tonybowties gmail.com\nunder the project of bow tie inc and so\nbefore launching the cluster i need to\nmake sure that my default vpc has been\ncreated so i'm going to go over to the\nnavigation menu and i'm going to scroll\ndown to vpc network\nand as expected the default network is\nhere so i can go ahead and create my\ncluster and so in order to get to my\nkubernetes engine console i'm going to\ngo up to the navigation menu and i'm\ngoing to scroll down under compute and\nyou will find here kubernetes engine and\nyou'll see a few different options to\nchoose from and over here on the left\nhand menu i will be going through these\noptions in the upcoming demos but for\nnow i want to concentrate on creating\nour cluster now gk makes things pretty\neasy\nas i have the option to create a cluster\nto deploy a container or even taking the\nquick start and so we're going to go\nahead and click on create our cluster\nand so here we are prompted with our\ncluster basics now if i really wanted to\ni can simply fill out all the fields\nthat you see here and click on create\nand it will use all the defaults to\nbuild my cluster but we're going to\ncustomize it a little bit so we're going\nto go ahead and go through all these\noptions so first under name we're going\nto name this cluster bowtie dash cluster\nand so under location type we want to\nkeep things as zonal and if i check off\nthe specify default node locations i'll\nbe able to make this a multi-zonal\ncluster as i have the option of\nselecting from multiple zones where i\ncan situate my nodes and so i can select\noff a bunch of different zones if i\nchoose but we want to keep it as a\nsingle zonal cluster and so i'm going to\ncheck these all off\nand under zone i'm going to click on the\ndrop down menu and i'm going to select\nus east 1b and just as a note for each\nzone that you select this is where the\ncontrol plane will live so if i was to\ncreate a multi-zonal cluster as you can\nsee the master zone is the zone where\nthe control plane will be created and is\nselected as us east 1b as that is the\nzone that i had selected and so if i\nchange this\nto let's say us east 1d you can see that\nthe control plane will change with it so\ni'm going to change it back to us east\n1b and you also have the option of\ncreating a regional cluster and the\nlocation selection will change from zone\nto region and here you will have to\nspecify at least one zone to select but\nplease also remember that the same\nnumber of nodes will be deployed to each\nselected zone so if i have three nodes\nin this cluster and i decide to select\nthree zones then i will have nine nodes\nin this cluster and so doing something\nlike this could get quite pricey when\nyou're looking to be cost conscious okay\nso moving on i'm going to uncheck\nspecify default node locations i'm going\nto change the location type back to\nzonal and make sure that my zone is at\nus east 1b moving down to the master\nversion this is where we would select\neither a static version or opt-in to a\nrelease channel for the version of\nkubernetes that you want for your\ncluster and so with the static version i\ncan choose from a bunch of different\nversions here all the way back from\n1.14.10\nall the way to the latest version and so\nwith the release channel i have the\nrelease channel selection here and i can\nchoose from the rapid channel the\nregular channel or the stable channel\nand so i'm going to keep things as the\ndefault with the regular channel as well\ni'm going to keep the default version as\nthe version of my choice now i could go\nahead and simply click on create here\nbut as this demo is a walkthrough i'm\ngoing to go ahead and go through all the\navailable options so i'm going to start\nby going over to the left hand menu and\nclicking on default pool under no pools\nnow here i have one node pool already\nwith three nodes and this is the default\nnode pool that comes with any cluster\nbut if i was doing something specific i\ncould add another node pool and\nconfigure it from here but because i\ndon't have a need for two node pools i'm\ngonna go ahead and remove nodepool1 so\ni'm going to go up here to remove\nnodepool and as you can see gke makes it\nreally easy for me to add or remove node\npools so i'm going to go back to the\ndefault pool and i'm going to keep the\nname as is i'm gonna keep my number of\nnodes as three and if i wanted to change\nthe number of nodes i can simply select\nthis i can choose six or however many\nnodes you need for your workload and so\nbecause we're not deploying a large\nworkload i'm gonna keep this number at 3\nand moving right along we do want to\ncheck off enable auto scaling and so\nthis way we don't have to worry about\nscaling up or scaling down and here i'm\ngoing to put the minimum number of nodes\nas one and i'm going to keep my maximum\nnumber of nodes at 3. and so here i'm\ngiven the option to select the zone\nlocation for my nodes but again for each\nzone that i select it will run the same\namount of nodes so basically i have\nanother option in order to choose from\nhaving a zonal or multi-zonal cluster\nand because we're creating our cluster\nin a single zone i'm going to uncheck\nthis and under automation as you can see\nenable auto upgrade and enable auto\nrepair are both checked off and this is\ndue to the fact that the auto upgrade\nfeature is always enabled for the\nrelease channel that i selected but as i\npointed out in a previous lesson that\nthis is google's best practice\nto have auto upgrade and auto repair\nenabled and so moving down to the bottom\nare some fields to change the surge\nupgrade behavior and so just as a\nrefresher surge upgrades allow you to\ncontrol the number of nodes gke can\nupgrade at a time and control how\ndisruptive those upgrades are to your\nworkloads so max surge being the number\nof additional nodes that can be added to\nthe node pool during an upgrade and max\nunavailable being the number of nodes\nthat can be simultaneously unavailable\nduring that upgrade and because we're\nnot worried about disruptions we'll just\nleave it set as the default and so\nmoving on we're going to move back over\nto the left hand menu and under no pools\nwe're going to click on nodes and here\nis where i can choose the type of\ninstance that i want to be using for my\nnodes and so i'm going to keep the image\ntype as container optimize os and this\nis the default image type but i also\nhave the option of choosing from others\nlike ubuntu or windows and so i'm going\nto keep it as the default and under\nmachine configuration i'm going to keep\nit under general purpose\nwith series e2 but i do want to change\nthe machine type to e2 micro just to be\ncost conscious and under boot disk size\ni want to keep it as 10 gigabytes as we\ndon't really need 100 gigabytes for what\nwe're doing here and you also have the\noption of choosing from a different boot\ndisk type you can change it from\nstandard persistent disk to ssd but i'm\ngoing to keep things as standard as well\ni also have the option here to use\ncustomer manage keys for encryption on\nmy boot disk as well as selecting from\npreemptable nodes for some cost savings\nand so i'm going to now move down to\nnetworking and here if i wanted to get\nreally granular i can add a maximum pods\nper node as well as some network tags\nbut our demo doesn't require this so i'm\ngoing to leave it as is and i'm going to\ngo back over to the left hand menu and\nclick on security and under node\nsecurity you have the option of changing\nyour service account along with the\naccess scopes and so for this demo we\ncan keep things as the default service\naccount and the access scopes can be\nleft as is i'm going to go back over to\nthe left hand menu and click on metadata\nand here i can add kubernetes labels as\nwell as the instance metadata and so i\nknow i didn't get into node taints but\njust to fill you in on no taints when\nyou submit a workload to run in a\ncluster the scheduler determines where\nto place the pods associated with the\nworkload and so the scheduler will place\na pod on any node that satisfies the\nresource requirements for that workload\nso no taints will give you some more\ncontrol over which workloads can run on\na particular pool of nodes and so they\nlet you mark a node so that the\nscheduler avoids or prevents using it\nfor certain pods so for instance if you\nhad a node pool that is dedicated to\ngpus you'd want to keep that node pool\nspecifically for the workload that\nrequires it and although it is in beta\nthis is a great feature to have and so\nthat pretty much covers no pools as we\nsee it here and so this is the end of\npart one of this demo it was getting a\nbit long so i decided to break it up\nthis would be a great opportunity for\nyou to get up and have a stretch get\nyourself a coffee or a tea and whenever\nyou're ready part two will be starting\nimmediately from the end of part one so\nyou can now mark this as complete and\ni'll see you in the next one\n[Music]\nthis is part two of creating a gke\ncluster part 2 will be starting\nimmediately from the end of part 1. so\nwith that being said let's dive in and\nso i'm going to go back over to the left\nhand menu and under cluster i'm going to\nclick on automation and here i have the\noption of enabling a maintenance window\nfor aligning times when auto upgrades\nare allowed i have the option of adding\nthe window here and i can do it at\nspecified times during the week or i can\ncreate a custom maintenance window and\nso we don't need a maintenance window\nright now so i'm going to uncheck this\nand as well you have the option of doing\nmaintenance exclusions for when you\ndon't want maintenance to occur ngk\ngives you the option of doing multiple\nmaintenance exclusions for whenever you\nneed them and because we don't need any\nmaintenance exclusions i'm going to\ndelete these and here you have the\noption to enable vertical pod auto\nscaling and this is where gke will\nautomatically schedule pods onto other\nnodes that satisfy the resources\nrequired for that workload as well here\ni can enable my node auto provisioning\nand enabling this option allows gke to\nautomatically manage a set of node pools\nthat can be created and deleted as\nneeded and i have a bunch of fields that\ni can choose from the resource type the\nminimum and maximum for cpu and memory\nthe service account\nas well as adding even more resources\nlike gpus but our workload doesn't\nrequire anything this fancy so i'm going\nto delete this and i'm going to uncheck\nenable auto provisioning and lastly we\nhave the auto scaling profile and i have\nthe option from choosing the balance\nprofile which is the default as well as\nthe optimize utilization which is still\nin beta and so i'm going to keep things\nas the default and i'm going to move\nback on over to the left hand menu over\nto networking and so here i can get\nreally granular with my cluster when it\ncomes to networking i have the option of\nchoosing from a public or a private\ncluster as well i can choose from a\ndifferent network and since we only have\nthe default that's what shows up but if\nyou had different networks here you can\nchoose from them as well as the subnets\ni can also choose from other networking\noptions like pod address range maximum\npods per node and there's a bunch of\nother options which i won't get into any\ndetail with but i encourage you if\nyou're very curious to go through the\ndocs and to check out these different\noptions now the one thing that i wanted\nto note here is the enable http low\nbalancing and this is a add-on that is\nrequired in order to use google cloud\nload balancer and so as we discussed\npreviously in the services lesson when\nyou enable service type load balancer a\nload balancer will be created for you by\nthe cloud provider and so google\nrequires you to check this off so that a\ncontroller can be installed in the\ncluster upon creation and will allow a\nload balancer to be created when the\nservice is created and so i'm going to\nleave this checked as we will be\ndeploying a load balancer a little bit\nlater and so moving back over to the\nleft hand menu i'm going to now click on\nsecurity and there are many options here\nto choose from that will allow you to\nreally lock down your cluster and again\nthis would all depend on your specific\ntype of workload now i'm not going to go\nthrough all these options here but i did\nwant to highlight it for those who are\nlooking to be more security focused with\nyour cluster and so moving down the list\nin the menu i'm going to click on\nmetadata and so here i can enter a\ndescription for my cluster as well as\nadding labels and so the last option on\nthe cluster menu is features and here i\nhave the option of running cloud run for\nanthos which will allow you to deploy\nserverless workloads to anthos clusters\nand runs on top of gke and here you can\nenable monitoring for gke and have it be\nnatively monitored by google cloud\nmonitoring and if i was running a\nthird-party product to monitor my\ncluster i can simply uncheck this and\nuse my third-party monitoring and\nthere's a whole bunch of other features\nthat i won't dive into right now but if\nyou're curious you can always hover over\nthe question mark and get some more\ninformation about what it does and so\nnow i've pretty much covered all the\nconfiguration that's needed for this\ncluster and so now i'm going to finally\nhead down to the bottom and click on\ncreate and so it may take a few minutes\nto create this cluster so i'm going to\ngo ahead and pause this video here and\ni'll be back faster than you can say cat\nin the hat okay and the cluster has been\ncreated as you can see it's in the\nlocation of us east 1b with three nodes\nsix vcpus and three gigabytes of memory\nand i can drill down and see exactly the\ndetails of the cluster as well if i\nwanted to edit any of these options i\ncan simply go up to the top click on\nedit and make the necessary changes and\nso now you're probably wondering what\nwill i need to do in order to create\nthis cluster through the command line\nwell it's a bit simpler than what you\nthink and i'm going to show you right\nnow i'm going to simply go over to the\nright hand menu and activate cloud shell\nand bring this up for better viewing and\ni'm going to paste in my command gcloud\ncontainer clusters create bow tie dash\ncluster with the flag num nodes and the\nnumber of nodes that i choose which is\nthree and so like i said before if i\nwanted to simply create a simple cluster\ni can do so like this but if i wanted to\ncreate the cluster exactly how i built\nmy last cluster then i can use this\ncommand which has all the necessary\nflags that i need to make it customize\nto my liking a not so very exciting\ndemonstration but at the same time shows\nyou how easy yet powerful gke really is\nand so i'm not going to launch this\ncluster as i already have one and so now\ni wanted to show you how to interact\nwith your new gke cluster so i'm going\nto simply clear my screen and so now in\norder for me to interact with my cluster\ni'm going to be using the cube ctl\ncommand line tool and this is the tool\nthat is used to interact with any\nkubernetes cluster no matter the\nplatform now i could use the gcloud\ncontainer commands but they won't allow\nme to get very granular as the cubectl\ntool and so a caveat of creating your\ncluster through the console is that you\nneed to run a command in order to\nretrieve the cluster's credentials and\nconfigure the cubectl command line tool\nand i'm going to go ahead and paste that\nin now and the command is gcloud\ncontainer clusters get dash credentials\nand the name of my cluster which is bow\ntie dash cluster along with the zone\nflag dash dash zone followed by the zone\nitself which is us east 1b i'm going to\ngo ahead and hit enter and as you can\nsee cubectl has now been configured and\nso now i'm able to interact with my\ncluster so just to verify i'm going to\nrun the command cubectl\ngetpods and naturally as no workloads\nare currently deployed in the cluster\nthere are no pods so i'm going to run\nthe command cube ctl get nodes\nand as you can see the cubectl command\nline tool is configured correctly and so\nnow this cluster is ready to have\nworkloads deployed to it and is also\nconfigured with the cubectl command line\ntool so that you're able to manage the\ncluster and troubleshoot if necessary\nnow i know that there has been a ton of\nfeatures that i covered but i wanted to\ngive you the full walkthrough so that\nyou are able to tie in some of the\ntheory from the last few lessons and get\na feel for the gke cluster as we will be\ngetting more involved with it over the\nnext couple of demos and so that's\npretty much all i wanted to cover when\nit comes to creating and setting up a\ngke cluster so you can now mark this as\ncomplete and whenever you're ready join\nme in the console in the next one where\nyou will be building your box a bow ties\ncontainer to deploy to your new cluster\nbut if you are not planning to go\nstraight into the next demo i do\nrecommend that you delete your cluster\nto avoid any unnecessary costs and\nrecreate it when you are ready to go\ninto the next demo\n[Music]\nwelcome back now in the last lesson you\nbuilt a custom gke cluster and\nconfigured the cube ctl command line\ntool to interact with the cluster in\nthis lesson you're going to be building\na docker image for a box of bow ties\nusing cloud build which will then be\npushed over to google cloud container\nregistry so that you can deploy it to\nyour current gke cluster and so as you\ncan see there's a lot to do here so with\nthat being said let's dive in so now the\nfirst thing that you want to do is to\nclone your repo within cloud shell so\nyou can run the necessary commands to\nbuild your image so i'm going to go up\nhere to the top right and i'm going to\nopen up cloud shell i'm going to make\nsure that i'm in my home directory so\ni'm going to run the command cd space\ntilde\nhit enter and i'm in my home directory\nif i run the command ls i can see that i\nonly have cloud shell.txt and so now i'm\ngoing to clone my github repository and\ni'll have a link in the instructions in\nthe github repo as well as having it in\nthe lesson text below and so the command\nwould be git clone along with the https\naddress of the github repo and i'm going\nto hit enter\nand it's finished cloning my repo i'm\ngoing to quickly clear my screen\nand i'm going to run the command ls and\ni can see my repo here and now i'm going\nto drill down into the directory by\nrunning cd google cloud associate cloud\nengineer if i run an ls i can see all my\nclone files and folders and so now the\nfiles that we need are going to be found\nin the box of bowties folder under\nkubernetes engine and containers so i'm\ngoing to change directories to that\nlocation and run ls and under box of bow\nties is a folder called container which\nwill have all the necessary files that\nyou need in order to build your image we\nhave the jpeg for box of bow ties we\nhave the docker file and we have our\nindex.html and so these are the three\nfiles that we need in order to build the\nimage and so as i said before we are\ngoing to be using a tool called cloud\nbuild which we have not discussed yet\ncloudbuild is a serverless ci cd\nplatform that allows me to package\nsource code into containers and you can\nget really fancy with cloud build but\nwe're not going to be setting up any ci\ncd pipelines we're merely using cloud\nbuild to build our image and to push it\nout to container registry as well\ncontainer registry is google cloud's\nprivate docker repository where you can\nmanage your docker images and integrates\nwith cloud build gke app engine cloud\nfunctions\nand other repos like github or bitbucket\nand it allows for an amazing build\nexperience with absolutely no heavy\nlifting and because you're able to build\nimages without having to leave google\ncloud i figured that this would be a\ngreat time to highlight these services\nso getting back to it we've cloned the\nrepo and so we have our files here in\ncloud shell and so what you want to do\nnow is you want to make sure the cloud\nbuild api has been enabled as this is a\nservice that we haven't used before now\nwe can go through the console and enable\nthe api there but i'm going to run it\nhere from cloud shell and i'm going to\npaste in the command gcloud services\nenable cloudbuild.googleapis.com\ni'm going to hit enter and you should\nget a prompt asking you to authorize the\napi call you definitely want to\nauthorize\nshould take a few seconds all right and\nthe api has been enabled for cloud build\nso now i'm going to quickly clear my\nscreen and so because i want to show you\nexactly what cloud build is doing i want\nto head on over there through the\nconsole and so i'm going to go over to\nthe navigation menu and i'm going to\nscroll down to tools until you come to\ncloud build\nand as expected there is nothing here in\nthe build history as well not a lot here\nto interact with and so now you're going\nto run the command that builds the image\nand so you're going to paste that\ncommand into the cloud shell which is\ngcloud builds submit dash dash tag\ngcr.io which is the google cloud\ncontainer registry our variable for our\ngoogle cloud project along with the\nimage name of box bow ties version 1.0.0\nand please don't forget the trailing dot\nat the end i'm going to go ahead and hit\nenter cloud build will now compress the\nfiles and move them to a cloud storage\nbucket and then cloud build takes those\nfiles from the bucket and uses the\ndocker file to execute the docker build\nprocess and so i'm going to pause the\nvideo here till the build completes and\ni'll be back in a flash okay and the\nimage is complete and is now showing up\nin the build history in the cloud build\ndashboard and so if i want to drill down\ninto the actual build right beside the\ngreen check mark you will see the hot\nlink so you can just simply click on\nthat and here you will see a build\nsummary with the build log\nthe execution details along with the\nbuild artifacts and as well the\ncompressed files are stored in cloud\nstorage and it has a hot link right here\nif i wanted to download the build log i\ncan do so here and i conveniently have a\nhot link to the image of box of bow ties\nand this will bring me to my container\nregistry so you can go ahead and click\non the link\nit should open up another tab and bring\nyou right to the page of the image that\ncovers a lot of its details now the\ngreat thing i love about container\nregistry is again it's so tightly\ncoupled with a lot of the other\nresources within google cloud that i am\nable to simply deploy right from here\nand i can deploy to cloud run to gke as\nwell as compute engine now i could\nsimply deploy this image right from here\nbut i wanted to do it from gke so i'm\ngoing to go back over to gke in the\nother tab i'm going to go to the\nnavigation menu go down to kubernetes\nengine\nand i'm going to go up to the top menu\nand click on deploy it's going to ask\nfor the image you want to deploy and you\nwant to click on select to select a new\ncontainer image and you should have a\nmenu pop up from the right hand side of\nyour screen and under container registry\nyou should see box of bow ties you can\nexpand the node here and simply click on\nthe image and then hit select\nand so now the container image has been\npopulated into my image path and you\nwant to scroll down and if i wanted to i\ncould add another container and even add\nsome environment variables and so we're\nnot looking to do that right now so you\ncan simply click on continue and you're\ngoing to be prompted with some fields to\nfill out for your configuration on your\ndeployment and so the application name\nis going to be called box of bow ties\ni'm going to keep it in the default\nnamespace as well i'm going to keep the\nkey value pair as app box of bow ties\nfor my labels and because this\nconfiguration will create a deployment\nfile for me you can always have a look\nat the manifest by clicking on the view\nyaml button before it's deployed and\nthis is always good practice before you\ndeploy any workload so as you can see\nhere at the top i have the kind as\ndeployment the name as well as the\nnamespace my labels\nreplicas of three as well as my selector\nand my spec down here at the bottom as\nwell this manifest also holds another\nkind\nof horizontal pod auto scaler and is\ncoupled with the deployment in this\nmanifest due to the reference of the\ndeployment itself and so it's always\ncommon practice to try and group the\nmanifest together whenever you can and\nso this is a really cool feature to take\nadvantage of on gke so i'm going to\nclose this now and i'm actually going to\nclose cloud shell as i don't need it\nright now as well you can see here that\nit's going to deploy to my kubernetes\ncluster of bow tie cluster in us east 1b\nand if i wanted to i can deploy it to a\nnew cluster and if i had any other\nclusters in my environment they would\nshow up here and i'd be able to select\nfrom them as well but bow tie cluster is\nthe only one that i have and so now that\nyou've completed your configuration for\nyour deployment you can simply click on\ndeploy this is just going to take a\ncouple minutes so i'm just going to\npause the video here and i'll be back as\nsoon as the deployment is done okay the\nworkload has been deployed and i got\nsome default messages that popped up i\ncan set an automated pipeline for this\nworkload but we're not going to do that\nfor this demo but feel free to try it on\nyour own later if you'd like and we will\nwant to expose our service as we want to\nsee if it's up and running and we're\ngoing to take care of that in just a bit\nand so if i scroll through some of the\ndetails here i can see that i have some\nmetrics here for cpu memory and disk the\ncluster\nnamespace\nlabels and all the pods that it's\nrunning on basically a live visual\nrepresentation of my deployment if i\nscroll back up to the top i can dive\ninto some details events\nand even my manifest i can also copy my\nmanifest and download it if i'd like so\nas you can see a lot of different\noptions and so now i want to verify my\ndeployment and so i'm going to use the\ncube ctl command line tool to run some\ncommands to verify the information so\ni'm going to open back up my cloud shell\nand make this a little bit bigger for\nbetter viewing and i'm going to run the\ncommand cubectl get all\nand as you can see here i have a list of\nall the pods that are running the name\nof the service the deployment the\nreplica set everything about my cluster\nand my deployment and you should be\nseeing the same when running this\ncommand and so next you want to pull up\nthe details on your deployments in the\ncluster and so the command for that is\ncube ctl get deployments and it came out\nkind of crammed at the bottom so i'm\ngoing to simply clear my screen and run\nthat command again\nand as you can see the box of bowties\ndeployment is displayed how many\nreplicas that are available how many of\nthose replicas achieve their desired\nstate and along with how long the\napplication has been running and so now\ni want to dive into my pods and in order\nto do that i'm going to run the command\ncube ctl get pods and here i can see all\nmy pods now if i wanted to look at a\nlist of events\nfor a specific pod the command for that\nwould be cubectl describe pod and then\nthe name of one of the pods so i'm going\nto pick this first one copy that i'm\ngoing to paste it and i'm going to hit\nenter and here i can see all the events\nthat have occurred for this pod as well\ni also have access to some other\ninformation with regards to volumes\nconditions and even the container and\nimage ids and this is a great command to\nuse for when you're troubleshooting your\npods and you're trying to get to the\nbottom of a problem and so now the final\nstep that you want to do is you want to\nbe able to expose your application so\nyou can check to see if it's running\nproperly and so we're going to go ahead\nand do that through the console so i'm\ngoing to close down cloud shell and i'm\ngoing to go to overview and scroll down\nto the bottom click on the button that\nsays expose and if i wanted to i can do\nit from up here in the top right hand\ncorner where it says expose deployment\nso i'm going to click on expose and this\nprobably looks very familiar to you as\nthis is a graphical representation of\nthe services manifest and so the port\nmapping here will cover the ports\nconfiguration of the services manifest\nstarting here with port target port as\nwell as protocol for target port i'm\ngoing to open up port 80. here under\nservice type you have the option of\nselecting cluster ip\nnode port or load balancer and the\nservice type you want to use is going to\nbe low balancer and we can keep the\nservice name as box of bowties service\nand again you can view the manifest file\nfor this service and you can copy or\ndownload it if you need to but we don't\nneed this right now so i'm going to\nclose it in a pretty simple process\nso all i need to do is click on expose\nand within a minute or two you should\nhave your service up and running with\nyour shiny new low balancer okay and the\nservice has been created and as you can\nsee we're under the services and ingress\nfrom the left hand menu and if i go back\nto the main page of services in ingress\nyou can see that box a bow tie service\nis the only one that's here i also have\nthe option of creating a service type\ningress but we don't want to do that\nright now so i'm going to go back to\nservices and here you will see your\nendpoint and this is the hot link that\nshould bring you to your application so\nyou can click on it now you'll get a\nredirect notice as it is only http and\nnot https so it's safe to click on it so\ni'm going to click on it now and success\nand here is your box of bow ties\nwhat were you expecting and so i wanted\nto congratulate you on deploying your\nfirst application box of bow ties on\nyour gke cluster and so just as a recap\nyou've cloned your repo into your cloud\nshell environment you then built a\ncontainer image using cloud build and\npushed the image to container registry\nyou then created a deployment using this\nimage and verified the deployment using\nthe cube ctl command line tool you then\nlaunched a service of type low balancer\nto expose your application and verified\nthat your application was working so\nfantastic job on your part and that's\npretty much all i wanted to cover in\nthis part of the demo\nso you can now mark this as complete and\nwhenever you're ready join me in the\nconsole for the next part of the demo\nwhere you will manage your workload on\nthe gke cluster so please be aware of\nthe charges incurred on your currently\ndeployed cluster if you plan to do the\nnext demo at a later date again you can\nmark this as complete and i'll see you\nin the next\nwelcome back in the last couple of demo\nlessons you built a custom gke cluster\nand deployed the box of bowties\napplication in this lesson you will be\ninteracting with this workload on gke by\nscaling the application editing your\napplication and rebuilding your docker\nimage so you can do a rolling update to\nthe current workload in your cluster now\nthere's a lot to do here so with that\nbeing said let's dive in so continuing\nwhere we left off you currently have\nyour box of bow ties workload deployed\non your gke cluster and so the first\nthing you want to do is scale your\ndeployment and you are looking to scale\ndown your cluster to one pod and then\nback up again to three and this is just\nto simulate scaling your workload so\nwhether it be ten pods or one the action\nis still the same so now we can easily\ndo it through the console by drilling\ndown into the box of bowties workload\ngoing up to the top menu and clicking on\nactions and clicking on scale and here i\ncan indicate how many replicas i'd like\nand scale it accordingly and so i wanted\nto do this using the command line so i'm\ngoing to cancel out of here and then i'm\ngoing to open up cloud shell instead\nokay and now that you have cloud shell\nopen up you want to run the command cube\nctl get pods to show the currently\nrunning available pods for the box of\nbowties workload and you may get a\npop-up asking you to authorize the api\ncall using your credentials and you\ndefinitely want to authorize and here\nyou will get a list of all the pods that\nare running your box of bow ties\nworkload and so now since you want to\nscale your replicas down to one you can\nrun this command cube ctl scale\ndeployment and your workload which is\nbox of bowties dash dash replicas is\nequal to one you can hit enter and it is\nnow scaled\nand in order to verify that i'm going to\nrun cube ctl get pods and notice that\nthere is only one pod running with my\nbox of bow ties workload and in order\nfor me to scale my deployment back up to\nthree replicas i can simply run the same\ncommand but change the replicas from 1\nto 3. hit enter it's been scaled i'm\ngoing to run cube ctl get pods and\nnotice that i am now back up to 3\nreplicas and so as you can see\nincreasing or decreasing the number of\nreplicas in order to scale your\napplication is pretty simple to do okay\nso now that you've learned how to scale\nyour application you're gonna learn how\nto perform a rolling update but in order\nto do that you need to make changes to\nyour application and so what you're\ngoing to do is edit your application\nthen rebuild your docker image and apply\na rolling update and in order to do that\nwe can stay here in cloud shell as\nyou're going to edit the file in cloud\nshell editor i'm going to first clear my\nscreen i'm going to change directory\ninto my home directory and now you want\nto change directories to your container\nfolder where the files are that i need\nto edit i'm going to run ls and here's\nthe files that i need and so what you're\ngoing to do now is edit the\nindex.html file and the easiest way to\ndo that is to simply type in edit\nindex.html and hit enter and this will\nopen up your editor so you can edit your\nindex.html file and if you remember when\nwe launched our application it looked\nexactly like this and so instead of what\nwere you expecting we're going to\nactually change that text to something a\nlittle different and so i'm going to go\nback to the editor in my other tab and\nwhere it says what were you expecting\ni'm going to actually change this to\nwell i could always use something to eat\nthen i'm going to go back up to the menu\nclick on file and click on save and so\nnow in order for me to deploy this i\nneed to rebuild my container and so i'm\ngoing to go back to my terminal i'm\ngoing to clear the screen and i'm going\nto run the same command that i did the\nlast time which is gcloud build submit\ndash dash tag gcr dot io with the\nvariable for your google cloud project\nfollowed by the image box of bowties\ncolon\n1.0.1 and so this will be a different\nversion of the image also don't forget\nthat trailing dot at the end and you can\nhit enter and again this is the process\nwhere cloud build compresses the files\nmoves them to a cloud storage bucket and\nthen takes the files from the bucket and\nuses the docker file to execute the\ndocker build process and this will take\na couple minutes so i'm going to pause\nthe video here and i'll be back before\nyou can say cat in the hat okay and my\nnew image has been created and so i want\nto head over to cloud build just to make\nsure that there are no errors so i'm\ngoing to close down cloud shell because\ni don't need it right now i'm going to\nhead back up to the navigation menu and\nscroll down to cloud build and under\nbuild history you should see your second\nbuild and if you drill down into it you\nwill see that the build was successful\nand heading over to build artifacts you\nshould now see your new image as version\n1.0.1 and so now i'm going to head over\nto the registry and verify the image\nthere and it seems like everything looks\nokay so now i'm gonna head back on over\nto my gke cluster\ni'm gonna go to the navigation menu down\nto kubernetes engine and here i'm gonna\nclick on workloads i'm gonna select box\nof bowties and up at the top menu you\ncan click on actions and select a\nrolling update and here you are prompted\nwith a pop-up where you can enter in\nyour minimum seconds ready your maximum\nsearch percentage as well as your\nmaximum unavailable percentage and so\nhere under container images i am\nprompted to enter in the sha-256 hash of\nthis docker image now a docker image's\nid is a digest which contains a sha-256\nhash of the image's configuration and if\ni go back over to the open tab for\ncontainer registry you can see here the\ndigest details to give you a little bit\nmore context along with the sha 256 hash\nfor the image that i need to deploy and\nso you can copy this digest by simply\nclicking on the copy button and then you\ncan head back on over to the gke console\nhead over to the container images\nhighlight the hash and paste in the new\nhash and so when you copy it in make\nsure it's still in the same format of\ngcr dot io forward slash your project\nname forward slash box of bow ties the\nat symbol followed by the hash and so\nonce you've done that you can click on\nthe update button and this will schedule\nan update for your application and as\nyou can see here at the top it says that\npods are pending\nas well if i go down to active revisions\nyou can see here that there is a summary\nand the status that pods are pending and\nso just as a note\nrolling updates allow the deployments\nupdate to take place with zero downtime\nby incrementally updating pods instances\nwith new ones so the pods will be\nscheduled on nodes with available\nresources and if the nodes do not have\nenough resources the pods will stay in a\npending state but i don't think we're\ngoing to have any problems with these\nnodes as this application is very light\nin resources and if i open up cloud\nshell\nand run a cube ctl get pods command\nyou will see that new pods have started\nand you can tell this by the age of the\npod as well if you ran the command keep\nctl describe pod along with the pod name\nyou could also see the event logs when\nthe pod was created and if i close cloud\nshell i can see up here at the top of my\ndeployment details it shows that my\nreplicas have one updated four ready\nthree available and one unavailable and\nif i click on refresh i can see now that\nmy replicas are all updated and\navailable and so now in order to check\nyour new update you can simply go down\nto exposing services and click on the\nendpoints link you'll get that redirect\nnotice you can simply click on the link\nand because the old site may be cached\nin your browser you may have to refresh\nyour web page\nand success and you have now completed a\nrolling update in gke so i wanted to\ncongratulate you on making it to the end\nof this multi-part demo and hope that\nit's been extremely useful in excelling\nyour knowledge in gke and so just as a\nrecap you scaled your application to\naccommodate both less and more replicas\nyou edited your application in the cloud\nshell editor and rebuilt your container\nimage using cloud build you then applied\nthe new digest to your rolling update\nand applied that rolling update to your\ndeployment while verifying it all in the\nend fantastic job on your part as this\nwas a pretty complex and long multi-part\ndemo and you can expect things like what\nyou've experienced in this demo to pop\nup in your role of being a cloud\nengineer when dealing with gke and so\nthat's pretty much all i wanted to cover\nwith this multi-part demo working with\ngke so before you go i wanted to take a\nfew moments to delete all the resources\nyou've created one by one so i'm going\nto go up to the top i'm going to close\nall my tabs i'm going to head on over to\nclusters and so i don't want to delete\nmy cluster just yet but the first thing\nthat i want to do is delete my container\nimages so i'm going to head up to the\ntop and open up cloud shell\nand i'm going to use the command gcloud\ncontainer images delete gcr dot io\nforward slash your google cloud project\nvariable forward slash along with your\nfirst image of box of bow ties colon\n1.0.0\nhit enter it's going to prompt you if\nyou want to continue you want to hit y\nfor yes and it has now deleted the image\nas well you want to delete your latest\nimage which is\n1.0.1 so i'm going to change the zero to\none hit enter it's going to ask if you\nwant to continue yes and so the\ncontainer images have now been deleted\nand so now along with the images you\nwant to delete the artifacts as well and\nthose are stored in cloud storage so i'm\ngoing to close down cloud shell i'm\ngoing to head on up to the navigation\nmenu and i'm going to head down to\nstorage and you want to select your\nbucket that has your project name\nunderscore cloud build select the source\nfolder and click on delete and you're\ngoing to get a prompt asking you to\ndelete the selected folder but in order\nto do this you need to type in the name\nof the folder so i'm going to type it in\nnow\nyou can click on confirm and so now the\nfolder has been deleted along with the\nartifacts and so now that we've taken\ncare of the images along with the\nartifacts we need to clean up our gke\ncluster so i'm going to head back on up\nto the navigation menu and i'm going to\nhead on over to kubernetes engine and\nthe first thing that i want to delete is\nthe low balancer so i'm going to head on\nup to services and ingress and you can\nselect box of bow tie service and go up\nto the top and click on delete you're\ngoing to get a confirmation and you want\nto click on delete and it's going to\ntake a couple minutes you do quick\nrefresh and the service has finally been\ndeleted i now want to delete my workload\nso i'm going to go over to the left hand\nmenu click on workloads select the\nworkload box of bowties and go up to the\ntop and click on delete and you want to\ndelete all resources including the\nhorizontal pod auto scaler so you can\nsimply click on delete and it may take a\nfew minutes to delete gonna go up to the\ntop and hit refresh and my workload has\nbeen deleted and so now all that's left\nto delete is the gke cluster itself so\ni'm going to go back to clusters so\nyou're going to select the cluster and\ngo up to the top and click on delete and\nyou're going to get a prompt asking you\nif you want to delete these storage pods\nand these are default storage pods that\nare installed with the cluster as well\nyou can delete the cluster while the\nworkload is still in play but i have\nthis habit of being thorough so i wanted\nto delete the workload before deleting\nthe cluster and so you want to go ahead\nand click on delete and so that's pretty\nmuch all i have for this demo\nand this section on google kubernetes\nengine and again congrats on the great\njob you can now mark this as complete\nand i'll see you in the next one\n[Music]\nwelcome back and in this lesson i will\nbe covering the features of cloud vpn an\nessential service for any engineer to\nknow about when looking to connect\nanother network to google cloud whether\nit be your on-premises network another\ncloud provider\nor even when connecting to vpcs\nthis service is a must know for any\nengineer and for the exam so with that\nbeing said let's dive in\nnow cloudvpn securely connects your peer\nnetwork to your vpc network through an\nipsec vpn connection when i talk about a\npeer network this is referring to an\non-premises vpn device or vpn service a\nvpn gateway hosted by another cloud\nprovider such as aws or azure or another\ngoogle cloud vpn gateway and so this is\nan ipsec or encrypted tunnel from your\npeer network to your vpc network that\ntraverses the public internet and so for\nthose who don't know ipsec being short\nfor internet security protocol and this\nis a set of protocols using algorithms\nallowing the transport of secure data\nover an ip network ipsec operates at the\nnetwork layer so layer 3 of the osi\nmodel which allows it to be independent\nof any applications although it does\ncome with some additional overhead so\nplease be aware and so when creating\nyour cloud vpn\ntraffic traveling between the two\nnetworks is encrypted by one vpn gateway\nand then decrypted by the other vpn\ngateway now moving on to some details\nabout cloud vpn this is a regional\nservice and so please take that into\nconsideration when connecting your\non-premises location to google cloud for\nthe least amount of latency it also\nmeans that if that region were to go\ndown you would lose your connection\nuntil the region is back up and running\nnow cloud vpn is also a site-to-site vpn\nonly and therefore it does not support\nsite-to-client so this means that if you\nhave a laptop or a computer at home you\ncannot use this option with a vpn client\nto connect to google cloud cloudvpn can\nalso be used in conjunction with private\ngoogle access for your on-premises hosts\nso if you're using private google access\nwithin gcp you can simply connect to\nyour data center with vpn and have\naccess as if you were already in gcp so\nif you're looking to extend private\ngoogle access to your on-premises data\ncenter cloud vpn would be the perfect\nchoice and so when it comes to speeds\neach cloud vpn tunnel can support up to\nthree gigabits per second total for\ningress and egress as well routing\noptions that are available are both\nstatic and dynamic but are only\navailable as dynamic for aha vpn and\nlastly cloudvpn supports ik version 1\nand ike version 2 using shared secret\nand for those of you who are unaware ike\nstands for internet key exchange and\nthis helps establish a secure\nauthenticated communication channel by\nusing a key exchange algorithm to\ngenerate a shared secret key to encrypt\ncommunications so know that when you\nchoose cloudvpn that your connection is\nboth private and secure so now there are\ntwo types of vpn options that are\navailable in google cloud one being the\nclassic vpn and the other being h a vpn\nand i'm going to take a moment to go\nthrough the differences now with classic\nvpn this provides a service level\nagreement of 99.9 percent also known as\nan sla of three nines while h a vpn\nprovides a four nines sla when\nconfigured with two interfaces and two\nexternal ips now when it comes to\nrouting classic vpn supports both static\nand dynamic routing whereas havpn\nsupports dynamic routing only and this\nmust be done through bgp using cloud\nrouter classic vpn gateways have a\nsingle interface\nand a single external ip address and\nsupport tunnels using static routing as\nwell as dynamic routing and the static\nrouting can be either route based or\npolicy based whereas with havpn it can\nbe configured for two interfaces and two\nexternal ips for true ha capabilities\nand as mentioned earlier when it comes\nto routing for havpn dynamic routing is\nthe only available option now the one\nthing about classic vpn is that google\ncloud is deprecating certain\nfunctionality on october 31st of 2021\nand is recommending all their customers\nto move to h a vpn and so know that this\nhas not been reflected in the exam and\nnot sure if and when it will be but know\nthat when you are creating a cloud vpn\nconnection in your current environment h\na vpn is the recommended option and so\nnow i wanted to dive into some\narchitecture of how cloud vpn is set up\nfor these two options starting with\nclassic vpn\nnow as i said before classic vpn is a\ncloud vpn solution\nthat lets you connect your peer network\nto your vpc network through an ipsec vpn\nconnection in a single region now unlike\nh a vpn classic vpn offers no redundancy\nout of the box you would have to create\nanother vpn connection and if the\nconnection were to go down you would\nhave to manually switch over the\nconnection from one to the other now as\nyou can see here when you create a vpn\ngateway google cloud automatically\nchooses only one external ip address for\nits interface and the diagram shown here\nshows that of a classic vpn network\nconnected from the bowtie dash network\nvpc in bowtie project to an on-premises\nnetwork configured using a static route\nto connect now moving on to h-a-v-p-n\nagain this is a highly available cloud\nvpn solution that lets you connect your\npeer network to your vpc network using\nan ipsec vpn connection in a single\nregion exactly like classic vpn where\nhavpn differs is that it provides four\nnines sla and as you can see here it\nsupports double the connections so when\nyou create an h a vpn gateway google\ncloud automatically chooses two external\nip addresses\none for each of its fixed number of two\ninterfaces each ip address is\nautomatically chosen from a unique\naddress pool to support high\navailability each of these ha vpn\ngateway interfaces supports multiple\ntunnels which allows you to create\nmultiple h a vpn gateways and you can\nconfigure an h a vpn gateway with only\none active interface and one public ip\naddress however this configuration does\nnot provide a four nines sla now for h a\nvpn gateway you configure an external\npeer vpn gateway resource that\nrepresents your physical peer gateway in\ngoogle cloud you can also create this\nresource as a standalone resource and\nuse it later in this diagram the two\ninterfaces of an h a vpn gateway in the\nbowtie network vpc living in bowtie\nproject are connected to two peer vpn\ngateways in an on-premises network and\nthis connection is using dynamic routing\nwith bgp connecting to a cloud router in\ngoogle cloud now when it comes to the\ntimes when using cloudvpn makes sense\none of the first things you should think\nabout is whether or not you need public\ninternet access so when you're sharing\nfiles or your company needs a specific\nsas product that's only available on the\ninternet vpn would be your only option\nas well when you're looking to use\ninterconnect and your peering location\nis not available so you're not able to\nconnect your data center to the\ncolocation facility of your choice vpn\nwould be the only other option that you\nhave as well if budget constraints come\ninto play when deciding on connecting to\nyour peer network vpn would always be\nthe way to go as cloud interconnect is\ngoing to be the more expensive option\nand lastly if you don't need a high\nspeed network and low latency is not\nreally a concern for you and you only\nhave regular outgoing traffic coming\nfrom google cloud then vpn would suffice\nfor your everyday needs and so the\noptions shown here are also the deciding\nfactors to look for when it comes to\nquestions in the exam that refer to\ncloudvpn or connecting networks and so\nthat's pretty much all i have for this\nshort lesson on cloudvpn so you can now\nmark this lesson as complete and let's\nmove on to the next one\n[Music]\nwelcome back and in this lesson i'm\ngoing to go over another connection type\nthat allows for on-premises connectivity\nto your google cloud vpcs which is cloud\ninterconnect other than vpn this is the\nother connection type that allows\nconnectivity from your on-premises\nenvironment to your google cloud vpc\ncloud interconnect is the most common\nconnection for most larger organizations\nand are for those that demand fast low\nlatency connections this lesson will\ncover the features of cloud interconnect\nand the different types that are\navailable so with that being said let's\ndive in so getting right into it cloud\ninterconnect is a low latency highly\navailable connection between your\non-premises data center and google cloud\nvpc networks also cloud interconnect\nconnections provide internal ip address\nconnection which means internal ip\naddresses are directly accessible from\nboth networks and so on premises hosts\ncan use internal ip addresses and take\nadvantage of private google access\nrather than external ip addresses to\nreach google apis and services traffic\nbetween your on-premises network and\nyour vpc network doesn't traverse the\npublic internet traffic traverses a\ndedicated connection or through a\nservice provider with a dedicated\nconnection your vpc network's internal\nip addresses are directly accessible\nfrom your on-premises network now unlike\nvpn this connection is not encrypted if\nyou need to encrypt your traffic at the\nip layer you can create one or more\nself-managed vpn gateways in your vpc\nnetwork and assign a private ip address\nto each gateway now although this may be\na very fast connection it also comes\nwith a very high price tag now unlike\nvpn this connection type is not\nencrypted if you need to encrypt your\ntraffic at the ip layer you can create\none or more self-managed vpn gateways in\nyour vpc network and assign a private ip\naddress to each gateway now although\nthis may be a very fast connection it\nalso comes with a very high price tag\nand is the highest price connection type\ncloud interconnect offers two options\nfor extending your on-premises network\ndedicated interconnect which provides a\ndirect physical connection between your\non-premises network and google's network\nas well as partner interconnect which\nprovides connectivity between your\non-premises and vpc networks through a\nsupported service provider and so i\nwanted to take a moment to highlight the\ndifferent options for cloud interconnect\nstarting with dedicated interconnect now\ndedicated interconnect provides a direct\nphysical connection between your\non-premises network and google's network\ndedicated interconnect enables you to\ntransfer large amounts of data between\nyour network and google cloud which can\nbe more cost effective than purchasing\nadditional bandwidth over the public\ninternet for dedicated interconnect you\nprovision a dedicated interconnect\nconnection between the google network\nand your own router in a common location\nthe following example shown here shows a\nsingle dedicated interconnect connection\nbetween a vpc network and an on-premises\nnetwork for this basic setup a dedicated\ninterconnect connection is provisioned\nbetween the google network and the\non-premises router in a common\nco-location facility when you create a\nvlan attachment you associate it with a\ncloud router this cloud router creates a\nbgp session for the vlan attachment and\nits corresponding on-premises peer\nrouter these routes are added as custom\ndynamic routes in your vpc network and\nso for dedicated interconnect connection\ncapacity is delivered over one or more\n10 gigabits per second or 100 gigabits\nper second ethernet connections with the\nfollow-on maximum capacity supported per\ninterconnect connection so with your 10\ngigabit per second connections you can\nget up to eight connections totaling a\nspeed of 80 gigabits per second with the\n100 gigabit per second connection you\ncan connect two of them together to have\na total speed of 200 gigabits per second\nand so for dedicated interconnect your\nnetwork must physically meet google's\nnetwork in a supported co-location\nfacility also known as an interconnect\nconnection location this facility\nis where a vendor the co-location\nfacility provider provisions a circuit\nbetween your network and a google edge\npoint of presence also known as a pop\nthe setup shown here is suitable for\nnon-critical applications that can\ntolerate some downtime but for sensitive\nproduction applications at least two\ninterconnect connections in two\ndifferent edge availability domains are\nrecommended now partner interconnect\nprovides connectivity between your\non-premises network and your vpc network\nthrough a supported service provider so\nthis is not a direct connection from\nyour on-premises network to google as\nthe service provider provides a conduit\nbetween your on-premises network and\ngoogle's pop now a partner interconnect\nconnection is useful if a dedicated\ninterconnect co-location facility is\nphysically out of reach or your\nworkloads don't warrant an entire 10\ngigabit per second connection for\npartner interconnect 50 megabits per\nsecond to 50 gigabits per second vlan\nattachments are available with the\nmaximum supported attachment size of 50\ngigabits per second now service\nproviders have existing physical\nconnections to google's network that\nthey make available for their customer\nto use so in this example shown here you\nwould provision a partner interconnect\nconnection with a service provider and\nconnecting your on-premises network to\nthat service provider after connectivity\nis established with the service provider\na partner interconnect connection is\nrequested from the service provider and\nthe service provider configures your vln\nattachment for use once your connection\nis provisioned you can start passing\ntraffic between your networks by using\nthe service providers network now there\nare many more detailed steps involved to\nget a connection established along with\ntraffic flowing but i just wanted to\ngive you a high level summary of how a\nconnection would be established with a\nservice provider now as well to build a\nhighly available topology you can use\nmultiple service providers as well you\nmust build redundant connections for\neach service provider in each\nmetropolitan and so now there's a couple\nmore connection types that run through\nservice providers that are not on the\nexam but i wanted you to be aware of\nthem if ever the situation arises in\nyour role as a cloud engineer so the\nfirst one is direct peering and direct\npeering enables you to establish a\ndirect peering connection between your\nbusiness network and google's edge\nnetwork and exchange high throughput\ncloud traffic this capability is\navailable at any of more than 100\nlocations in 33 countries around the\nworld when established direct peering\nprovides a direct path from your\non-premises network to google services\nincluding google cloud products that can\nbe exposed through one or more public ip\naddresses traffic from google's network\nto your on-premises network also takes\nthat direct path\nincluding traffic from vpc networks in\nyour projects now you can also save\nmoney and receive direct egress pricing\nfor your projects after they have\nestablished direct peering with google\ndirect peering exists outside of google\ncloud unless you need to access google\nworkspace applications the recommended\nmethods of access to google cloud are\ndedicated interconnect or partner\ninterconnect establishing a direct\npeering connection with google is free\nand there are no costs per port and no\nper hour charges you just have to meet\ngoogle's technical peering requirements\nand can then be considered for the\ndirect peering service\nand moving on to the last connection\ntype is cdn interconnect now i know we\nhaven't gotten into cdns in the course\nas the exam does not require you to know\nit but cdn standing for content delivery\nnetwork is what caches content at the\nnetwork edge to deliver files faster to\nthose requesting it one of the main ways\nto improve website performance now\nmoving on to cdn interconnect this\nconnection type enables select\nthird-party cdn providers like akamai\nand cloudflare along with others to\nestablish and optimize your cdn\npopulation costs by using direct peering\nlinks with google's edge network and\nenables you to direct your traffic from\nyour vpc networks to the provider's\nnetwork and so your egress traffic from\ngoogle cloud through one of these links\nbenefits from the direct connectivity to\nthe cdn provider and is billed\nautomatically with reduced pricing\ntypical use cases for cdn interconnect\nis if you're populating your cdn with\nlarge data files from google cloud or\nyou have frequent content updates stored\nin different cdn locations and so\ngetting into the use cases of when to\nuse cloud interconnect a big purpose for\nit would be to prevent traffic from\ntraversing the public internet it is a\ndedicated physical connection right to\ngoogle's data centers so when you need\nan extension of your vpc network to your\non-premises network interconnect is\ndefinitely the way to go now in speed\nand low latencies of extreme importance\ninterconnect is always the best option\nand will support up to 200 gigabits per\nsecond as well when you have heavy\noutgoing traffic or egress traffic\nleaving google cloud cloud interconnect\nfits the bill perfectly and lastly when\nit comes to private google access this\ntravels over the backbone of google's\nnetwork and so when you are connected\nwith interconnect this is an extension\nof that backbone and therefore your\non-premises hosts will be able to take\nadvantage of private google access and\nso i hope this has given you some\nclarity on the differences between the\ndifferent connection types and how to\nextend your google cloud network to a\npeer or on-premises network so that's\npretty much all i had to cover when it\ncomes to cloud interconnect so you can\nnow mark this lesson as complete and\nlet's move on to the next one\n[Music]\nwelcome back in this lesson i'm going to\nbe covering an overview of app engine\nnow this is not a deep dive lesson for\napp engine as there is so much to cover\nwith this service but i will be listing\na lot of the features of app engine to\ngive you a good feel for what it can do\nand what you will need to know for the\nexam so with that being said let's dive\nin now app engine is a fully managed\nserverless platform for developing and\nhosting web applications at scale this\nis google's platform as a service\noffering that was designed for\ndevelopers so that they can develop\ntheir application and let app engine do\nall the heavy lifting by taking care of\nprovisioning the servers and scaling the\ninstances needed based on demand app\nengine gives you the flexibility of\nlaunching your code as is or you can\nlaunch it as a container and uses\nruntime environments of a variety of\ndifferent programming languages like\npython java node.js go ruby php or net\napplications deployed on app engine that\nexperience regular traffic fluctuations\nor newly deployed applications where\nyou're simply unsure about the load are\nauto scaled accordingly and\nautomatically your apps scale up to the\nnumber of instances that are running to\nprovide consistent performance or scale\ndown to minimize idle instances and\nreduces costs app engine also has the\ncapabilities of being able to deal with\nrapid scaling for sudden extreme spikes\nof traffic having multiple versions of\nyour application within each service\nallows you to quickly switch between\ndifferent versions of that application\nfor rollbacks testing or other temporary\nevents you can route traffic to one or\nmore specific versions of your\napplication by migrating or splitting\ntraffic and you can use traffic\nsplitting to specify a percentage\ndistribution of traffic across two or\nmore of the versions within a service\nand allows you to do a b testing or blue\ngreen deployment between your versions\nwhen rolling out new features app engine\nsupports connecting to back-end storage\nservices such as cloud firestore cloud\nsql and cloud storage along with\nconnecting to on-premises databases and\neven external databases that are hosted\non other public clouds app engine is\navailable in two separate flavors\nstandard and flexible environments and\neach environment offers their own set of\nfeatures that i will get into in just a\nsec\nnow as i mentioned before app engine is\navailable in standard and flexible\nenvironments and depending on your\napplication needs either one will\nsupport what you need for your workload\nor you could even use both\nsimultaneously the features shown here\nwill give you a feel for both types of\nenvironments and i'm going to be doing a\nquick run through summarizing the\nfeatures of each starting with the\nstandard environment now with the\nstandard environment applications run in\na secure sandboxed environment allowing\napp engine standard to distribute\nrequests across multiple servers and\nscaling servers to meet traffic demands\nyour application runs with its own\nsecure reliable environment that is\nindependent of the hardware\noperating system or physical location of\nthe server the source code is written in\nspecific versions\nof the supported programming languages\nand with app engine standard it is\nintended to run for free or at a very\nlow cost where you pay only for what you\nneed and when you need it with app\nengine standard your application can\nscale to zero instances when there is no\ntraffic app engine standard is designed\nfor sudden and extreme spikes of traffic\nwhich require immediate scaling and\npricing for standard app engine is based\non instance hours and so when it comes\nto features for app engine flexible the\napplication instances run within docker\ncontainers that includes a custom\nruntime or source code written in other\nprogramming languages these docker\ncontainers are then run on compute\nengine vms app engine flexible will run\nany source code that is written in a\nversion of any of the supported\nprogramming languages for app engine\nflexible and unlike the standard\nenvironment unfortunately there is no\nfree quota for app engine flexible as\nwell app engine flexible is designed for\nconsistent traffic or for applications\nthat experience regular traffic\nfluctuations and pricing is based on the\nvm resources and not on instance hours\nlike app engine standard and so where\napp engine flexible really shines over\napp engine standard are how the vms are\nmanaged so instances are health checked\nhealed as necessary and co-located with\nother services within the project the\nvm's operating system is updated and\napplied automatically as well vms are\nrestarted on a weekly basis to make sure\nany necessary operating system and\nsecurity updates are applied ssh along\nwith root access are available to the vm\ninstances running your containers now\ndeploying applications to app engine is\nas simple as using the gcloud app deploy\ncommand\nthis command automatically builds a\ncontainer image from your configuration\nfile by using the cloud build service\nand then deploys that image to app\nengine now an app engine application is\nmade up of a single application resource\nthat consists of one or more services\neach service can be configured to use\ndifferent runtimes and to operate with\ndifferent performance settings\nservices and app engine are used to\nfactor your large applications into\nlogical components\nthat can securely share app engine\nfeatures and communicate with one\nanother these app engine services become\nloosely coupled behaving like\nmicroservices now within each service\nyou deploy versions of that service and\neach version then runs within one or\nmore instances depending on how much\ntraffic you configured it to handle\nhaving multiple versions of your\napplication within each service allows\nyou to quickly switch between different\nversions of that application for\nrollbacks testing or other temporary\nevents you can route traffic to one or\nmore specific versions of your\napplication by migrating traffic to one\nspecific version\nor splitting your traffic between two\nseparate versions and so the versions\nwithin your services run on one or more\ninstances by default app engine scales\nyour application to match the load your\napplications will scale up the number of\ninstances that are running to provide\nconsistent performance or scale down to\nminimize idle instances and reduce costs\nnow when it comes to managing instances\napp engine can automatically create and\nshut down instances as traffic\nfluctuates or you can specify a number\nof instances to run\nregardless of the amount of traffic you\ncan also configure how and when new\ninstances are created by specifying a\nscaling type for your application and\nhow you do this is you specify the\nscaling type in your application's\napp.yaml file now there are three\ndifferent types of scaling choices to\nchoose from and the first one being\nautomatic scaling and this scaling type\ncreates instances based on request rate\nresponse latencies and other application\nmetrics you can specify thresholds for\neach of these metrics as well as a\nminimum number instances to keep running\nat all times if you use automatic\nscaling each instance in your\napplication has its own queue for\nincoming requests before the queues\nbecome long enough to have a visible\neffect on your app's latency app engine\nautomatically creates one or more new\ninstances to handle the load the second\ntype is basic scaling and this creates\ninstances when your application receives\nrequests each instance is shut down when\nthe application becomes idle basic\nscaling is fantastic for intermittent\nworkloads or if you're looking to drive\nyour application by user activity app\nengine will try to keep your costs low\neven though it might result in higher\nlatency as the volume of incoming\nrequests increase and so the last\nscaling type is manual scaling and this\nis where you specify the number of\ninstances that continuously run\nregardless of the load so these are\ninstances that are constantly running\nand this allows complex startup tasks on\nthe instances to have already been\ncompleted when receiving requests and\napplications that rely on the state of\nthe memory over time so this is ideal\nfor instances whose configuration\nscripts require some time to fully run\ntheir course so now that i've gone over\nmanaging the instances i wanted to take\na few moments to go over how app engine\nmanages traffic starting with traffic\nmigration now traffic migration switches\nthe request routing between the versions\nwithin a service of your application\nmoving traffic from one or more versions\nto a single new version so when\ndeploying a new version with the same\nname of an existing version it causes an\nimmediate traffic migration all\ninstances of the old version are\nimmediately shut down in app engine\nstandard you can choose to route\nrequests to the target version either\nimmediately or gradually you can also\nchoose to enable warm-up requests if you\nwant the traffic gradually migrated to a\nversion gradual traffic migration is not\nsupported in app engine flexible and\ntraffic is migrated immediately now one\nthing to note is that when you\nimmediately migrate traffic to a new\nversion without any running instances\nthen your application will have a spike\nin latency for loading requests\nwhile instances are being created and so\nanother way to manage traffic on app\nengine is through traffic splitting now\nyou can use traffic splitting to specify\na percentage distribution of traffic\nacross two or more of the versions\nwithin a service so in this example if\ni'm deploying a new version of my\nservice i can decide on how i want to\ndistribute traffic to each version of my\napplication and so i decide that i want\nto keep my current version in play but\nroll out the new version of my\napplication to 10 of my users leaving\nthe old version was still 90 of the\ntraffic going to that version and so\nsplitting traffic allows you to conduct\na b testing between your versions and\nprovides control over the pace when\nrolling out features and just as a note\nwhen you've specified two or more\nversions for splitting you must choose\nwhether to split traffic by either by\neither ip address http cookie or do it\nrandomly now again this has not been a\ndeep dive lesson on app engine but i\nhope this has given you an overview of\nthe features that are available as the\nexam touches on these features i also\nwanted to give you some familiarity with\nthe service itself as coming up next i\nwill be going into a demo where we will\nbe launching an application using app\nengine and trying on some of these\nfeatures for yourself and so that's\npretty much all i wanted to cover\nwhen it comes to app engine so you can\nnow mark this lesson as complete and\nwhenever you're ready join me in the\nconsole where you will deploy an\napplication on app engine and try out\nsome of these features for yourself\n[Music]\nwelcome back and in this demo you're\ngoing to build another application to\ndeploy on app engine called serverless\nbowties this demo will run you through\nthe ins and outs of deploying a website\napplication on app engine along with\nmanaging it while experiencing no\ndowntime so there's quite a bit of work\nto do here so with that being said let's\ndive in and so here in my console i am\nlogged in as tonybowtieace gmail.com\nunder project bowtie inc and so the\nfirst thing i want to do here is i want\nto head on over to app engine so in\norder to do that i'm going to go to the\ntop left-hand navigation menu and i'm\ngoing to go down to app engine and\nbecause i haven't created any\napplications i'm going to be brought to\nthis splash page now in order to deploy\nthis application we're not going to be\ndoing it through the console but we will\nbe doing it through the command line and\nso to get started with that i'm going to\ngo up to the top and open up cloud shell\ni'm going to make this bigger for better\nviewing and so in order for me to get\nthe code to launch this application i'm\ngoing to be cloning my github repository\ninto cloud shell and so for those of you\nwho haven't deleted your repository from\nthe last demo you can go ahead and skip\nthe cloning step for those of you who\nneed to clone your repository you will\nfind a link to the instructions in the\nlesson text and there you'll be able to\nretrieve the command which will be git\nclone along with the address of the repo\ni'm going to hit enter and because i've\nalready cloned this repo i'm receiving\nthis error i'm going to do an ls and as\nyou can see here the google cloud\nassociate cloud engineer repo has\nalready been cloned so i'm going to cd\ninto that directory and in order to get\nthe code i'm going to simply run the\ncommand git pull\nto get the latest and i'm going to\nsimply clear my screen and so now that\ni've retrieved all the code that i need\nin order to deploy it i need to go to\nthat directory and that directory is\ngoing to be 11 serverless services\nforward slash 0 1 serverless bowties and\nhit enter you're going to run ls and\nhere you will find two versions of the\nwebsite application site v1 and site v2\nalong with the instructions if you want\nto follow straight from here and so i\nwant to go ahead and deploy my first\nwebsite application so i'm going to cd\ninto site v1 ls and here you will see\nthe app.yaml which is the configuration\nfile that you will need in order to run\nthe application on app engine and so\nbefore i go ahead and deploy this i\nwanted to take a moment to show you the\napplication configuration so i'm going\nto go ahead and open it up in cloud\nshell editor so i'm going to type in\nedit app.yaml enter and as you can see\nhere my runtime is python 3.7 and as you\ncan see i have a default expiration of\ntwo seconds along with an expiration\nunderneath each handler and this is due\nto the caching issue that happens with\napp engine and so in order to simulate\ntraffic splitting between the two\nwebsite applications in order to make\nthings easy i needed to expire the cash\nand this is an easy way to do it now\nthere may be applications out there that\ndo need that caching and so the\nexpiration may be a lot higher but for\nthe purposes of this demo two seconds\nexpiration should suffice as well\nexplain the two handlers here the first\none showing the files that will be\nuploaded to the cloud storage bucket as\nwell as the second stating what static\nfiles will be presented and so i'm going\nto go ahead back over to my terminal and\ni'm going to go ahead and clear my\nscreen and i'm going to go ahead and run\nthe command gcloud app deploy with the\nflag dash dash version and this is going\nto be version one so i'm going to go\nahead and hit enter and you may get a\npop-up asking you to authorize this api\ncall using your credentials and you want\nto click on authorize and you're going\nto be prompted to enter in a region that\nyou want to deploy your website\napplication to we want to keep this in\nus east one so i'm going to type in 15\nhit enter\nand you're going to be prompted to\nverify your configuration for your\napplication before it's deployed you're\nalso going to be prompted if you want to\ncontinue definitely yes so i'm going to\nhit y enter and so now as you've seen\nthe files have been uploaded to cloud\nstorage and app engine is going to take\na few minutes to create the service\nalong with the version so i'm going to\nlet it do the needful and i'll be back\nbefore you know it okay and my\napplication has been deployed now\nalthough you don't see it here in the\nconsole it has been deployed all i need\nto do is refresh my screen but i wanted\nto just point out a couple things that\nis shown here in the terminal the first\none being the default service now the\nfirst time you deploy a version of your\napplication it will always deploy to the\ndefault service initially and only then\nwill you be able to deploy another named\nservice to app engine now here where it\nsays setting traffic split for service\nthis is referring to the configuration\nfor traffic splitting being applied in\nthe background which i will be getting\ninto a little bit later and lastly the\nurl shown for the deployed service will\nalways start with the name of your\nproject followed by.ue.r.appspot.com\nwhich is why in production google\nrecommends to run app engine in a\ncompletely separate project\nbefore this demo running it in the same\nproject that we've been using will\nsuffice okay so let's go ahead and take\na look at the application so i'm going\nto go back up to the top here to the\nnavigation menu and i'm gonna go down to\napp engine and go over to services and\nso here you will see the default service\nwith version one and if i go over to\nversions i will see here my version the\nstatus\nthe traffic allocation along with any\ninstances that it needs the run time the\nspecific environment and i'll have some\ndiagnostic tools here that i could use\nand so because this is a static website\napplication we won't be using any\ninstances and so this will always show a\nzero so now i want to head back on over\nto services and i'm going to launch my\napplication by simply clicking on this\nhot link\nand success serverless bow ties for all\nand so it looks like my application has\nbeen successfully deployed so i'm going\nto close down this tab now there's a\ncouple of things that i wanted to run\nthrough here on the left hand menu just\nfor your information so here i can click\non instances and if i was running any\ninstances i am able to see a summary of\nthose instances and i can click on the\ndrop down here and choose a different\nmetric and find out any information that\ni need as well i can click on this drop\ndown and select a version if i had\nmultiple versions which i do not\nclicking on task queues here is where i\ncan manage my task queues but this is a\nlegacy service that will soon be\ndeprecated clicking on cron jobs here i\ncan schedule any tasks that i need to\nrun at a specific time on a recurring\nbasis i can edit or add any firewall\nrules if i need to and as you can see\nthe default firewall rule is open to the\nworld now you probably noticed memcache\nas being one of the options here in the\nmenu but this is a legacy service that\nwill soon be deprecated\nmemcache is a distributed in-memory data\nstore that is bundled into the python to\nruntime acting as a cache for specific\ntasks and google recommends moving to\nmemory store for redis if you're\nplanning on applying caching for your\napp engine application and so i'm not\nsure how much longer this will be here\nand lastly under settings here is where\nyou can change your settings for your\napplication i can add any custom domains\nany ssl certificates as well as setting\nup email for any applications that want\nto send email out to your users okay and\nnow that we've done that walkthrough i\nwant to go ahead and deploy my second\nversion of the application and so i'm\ngoing to go ahead back down to cloud\nshell i'm going to quickly clear my\nscreen and i want to move into the site\nv2 directory so i'm going to hit cd dot\ndot which will bring you back one\ndirectory you do an ls and i'm going to\nchange directories into site v2 and do\nan ls just to verify and yes you will\nsee serverless bow ties too i'm going to\nquickly clear my screen and i'm going to\nrun the same command as before which is\ngcloud app deploy with the version flag\ndash dash version and instead of one i'm\ngoing to launch version 2. so i'm going\nto hit enter i'm going to be prompted if\ni want to continue yes i do and as you\ncan see the files have been uploaded to\ncloud storage for version 2 of the\nwebsite application and app engine is\ngoing to take a few minutes to create\nthe service along with the version so\ni'm going to let it cook here for a\ncouple minutes and i'll be back before\nyou can say cat in the hat okay so\nversion 2 has been deployed and so if i\ngo up here to the console and i click on\nrefresh you should see version 2 of your\nservice and as you can see 100 of the\ntraffic has been allocated to version 2\nautomatically and this is the default\nbehavior for whenever you launch a new\nversion of your service the only way to\navoid this is to deploy your new version\nwith the no promote flag and so if i go\nback to services here on the left and i\nclick on the default service\nyou should see success for version two\nand so i know that my website\napplication for version 2 has been\ndeployed successfully so i'm going to\nclose down this tab again and i'm going\nto go back to versions and so what i\nwant to do now is i want to simulate an\na b test or blue green deployment by\nmigrating my traffic back to the old\nversion in this case being version one\nso in production let's say that you\nwould release a new version and the\nversion doesn't go according to plan you\ncan always go back to the previous\nversion and app engine allows you to do\nthat very easily and so i'm going to\nclick on version 1 and i'm going to go\nup to the top menu and click on migrate\ntraffic you'll be prompted if you want\nto migrate traffic yes i do so i'm going\nto click on migrate and it should take a\nminute here and traffic should migrate\nover to version one and success traffic\nhas been migrated and so we want to\nverify that this has happened i'm gonna\ngo back to services i'm gonna click on\nthe default service and yes the traffic\nhas been allocated to version one okay\nso i'm going to shut down this tab i'm\ngoing to go back to versions and so now\nwhat i want to do is i want to simulate\nsplitting the traffic between the two\nversions and so in order for you to do\nthis you can go up to the top menu\nclick on split traffic and you'll be\nprompted with a new menu here and here i\ncan choose from different versions and\nbecause i only have two versions i'm\ngoing to add version 2 and in order to\nallocate the traffic between the two i\ncan either use this slider\nand as you can see the allocation\npercentage will change or i can simply\njust type it in and so i'm going to\nleave this at 50 percent so fifty\npercent of version one fifty percent of\nversion two i'm going to split traffic\nrandomly i'm gonna move this down just a\nlittle bit and so that's exactly how you\nwanna allocate your traffic and so once\nyou've completed that you can simply\nclick on save it's going to take a\nmoment to update the settings and it's\nbeen successful so if i head back on\nover to the previous page you can see\nhere that traffic has been allocated to\nboth versions and so now in order to\nverify this what you're going to do is\ngo over to services and click on the\ndefault hot link and you'll see version\none but if i continuously refresh my\nscreen i can see that here i have\nversion two so because it's random i\nhave a 50 chance of getting version 1\nand a 50 chance of getting version 2.\nand so this is a simulation of splitting\ntraffic to different versions and\nusually with a b testing only a small\npercentage of the traffic is routed to\nthe new version until verification can\nbe made that the new version deployed\nhas indeed been successful and this can\nbe done by receiving feedback from the\nusers and so now i wanted to take a\nquick moment to congratulate you on\nmaking it through this demo and hope\nthat it has been extremely useful in\nexcelling your knowledge in deploying\nand managing applications on app engine\nso just as a recap you've cloned the\nrepo to cloud shell you then deployed\nversion one of your application into app\nengine you verified its launch and then\nyou deployed version two of the\napplication and verified its launch as\nwell you then migrated traffic from\nversion two over to version one and then\nyou went ahead and split traffic between\nboth versions and allotted 50 of the\ntraffic allocation to each version and\nso now before you go i want to make sure\nthat we clean up any resources that\nwe've deployed so that we don't incur\nany unnecessary costs and so the way to\ndo this is very simple so first step you\nwant to go over to the left hand menu\nand click on settings and simply click\non disable application you're going to\nbe prompted to type in the app's id for\nme it's bowtie inc so i'm going to type\nthat in and i'm going to click on\ndisable now unfortunately with app\nengine you can't actually delete the\napplication it can only be disabled and\nso now here i'm going to hit the hot\nlink to go over to the cloud storage\nbucket and as you can see here i have no\nfiles but i'm going to move back to my\nbuckets\nand i'm going to move into the staging\nbucket which is appended with your\nproject id.appspot.com\nand as you can see here there's a whole\nbunch of different files as well if i\ndrill down into the directory marked as\nae for app engine i can see here that i\nhave some more directories along with\nthe manifest and so now if you want to\nkeep your application in order to run it\nlater you don't need to delete this\nbucket but because i don't need it i'm\ngoing to go ahead and delete the bucket\nhit delete paste in my bucket name hit\ndelete as well under us.artifacts\nyou will find a directory called\ncontainers and as explained in the last\nlesson code build builds a container for\nyour application before deploying it to\napp engine so i'm going to drill down\ninto images so here's all the container\ndigests and i don't need any of these so\ni'm gonna go ahead and delete this\nbucket as well and so this is the last\nstep in order to delete all the\ndirectories and files that we use to\ndeploy our application in an app engine\nokay and so i'm gonna head back on over\nto app engine and so now that cleanup\nhas been taken care of that's pretty\nmuch all i wanted to cover in this demo\nfor deploying and managing applications\non app engine so you can now mark this\nas complete and i'll see you in the next\none and again congrats on a job well\ndone\n[Music]\nwelcome back in this lesson i will be\ndiving into another serverless product\nfrom google cloud by the name of cloud\nfunctions an extremely useful and\nadvanced service that can be used with\nalmost every service on the platform now\nthere's quite a bit to cover here so\nwith that being said let's dive in now\ncloud functions as i said before are a\nserverless execution environment and\nwhat i mean by this is like app engine\nthere is no need to provision any\nservers or updating vms as the\ninfrastructure is all handled by google\nbut unlike app engine you will never see\nthe servers so the provisioning of\nresources happens when the code is\nexecuted now cloud functions are a\nfunction as a service offering and this\nis where you upload code that is\npurposefully written in a supported\nprogramming language and when your code\nis triggered it is executed in a fully\nmanaged environment and your billed for\nwhen that code is executed cloud\nfunctions run in a runtime environment\nand support many different runtimes like\npython java node.js go and net core\ncloud functions are event driven so when\nsomething happens in your environment\nyou can choose whether or not you'd like\nto respond to this event if you do then\nyour code can be executed in response to\nthe event these triggers can be one of a\nfew different types such as http\npub sub cloud storage and now firestore\nand firebase which are in beta and have\nyet to be seen in the exam cloud\nfunctions are priced according to how\nlong your function runs and how many\nresources you provision for your\nfunction if your function makes an\noutbound network request there are also\nadditional data transfer fees cloud\nfunctions also include a perpetual free\ntier which allows you 2 million\ninvocations or executions of your\nfunction now cloud functions themselves\nare very simple but have a few steps to\nexecute before actually running so i\nwanted to give you a walkthrough on\nexactly how cloud functions work now\nafter selecting the name and region you\nwant your function to live in you would\nthen select the trigger you wish to use\nand you can choose from the many i\nlisted earlier being http cloud storage\npub sub cloud firestore and firebase a\ntrigger is a declaration that you are\ninterested in a certain event or set of\nevents binding a function to a trigger\nallows you to capture and act on these\nevents authentication configuration is\nthe next step and can be selected with\npublic access\nor configured through iam now there are\nsome optional settings that can be\nconfigured where you would provide the\namount of memory the function will need\nto run\nnetworking preferences and even\nselection for a service account now once\nall the settings have been solidified\nyour written code can then be put into\nthe function now the functions code\nsupports a variety of languages as\nstated before like python java node.js\nor go now when writing your code there\nare two distinct types of cloud\nfunctions that you could use http\nfunctions and background functions with\nhttp functions you invoke them from\nstandard http requests these http\nrequests wait for the response and\nsupport handling of common http request\nmethods like get put\npost delete and options when you use\ncloud functions a tls certificate is\nautomatically provisioned for you so all\nhttp functions can be invoked via a\nsecure connection now when it comes to\nbackground functions\nthese are used to handle events from\nyour gcp infrastructure such as messages\non a pub sub topic or changes in a cloud\nstorage bucket now once you have put all\nthis together you are ready to deploy\nyour code now there are two things that\nwill happen when deploying your code the\nfirst one is the binding of your trigger\nto your function once you bind a trigger\nyou cannot bind another one to the same\nfunction\nonly one trigger can be bound to a\nfunction at a time now the second thing\nthat will happen when you deploy your\nfunction's source code to cloud\nfunctions is that source code is stored\nin a cloud storage bucket as a zip file\ncloud build then automatically builds\nyour code into a container image that\npushes that image to container registry\ncloud functions accesses this image when\nit needs to run the container to execute\nyour function the process of building\nthe image is entirely automatic and\nrequires no manual intervention and so\nat this point of the process the\nbuilding of your function is now\ncomplete now that the function has been\ncreated we now wait for an event to\nhappen and events are things that happen\nwithin your cloud environment that you\nmight want to take action on these might\nbe changes to data in cloud sql files\nadded to cloud storage or a new vm being\ncreated currently cloud functions\nsupports\nevents from the same services used for\ntriggers that i have just mentioned\nincluding other google services like\nbigquery cloud sql and cloud spanner now\nwhen an event triggers the execution of\nyour cloud function\ndata associated with the event is passed\nvia the functions parameters the type of\nevent determines the parameters that are\npassed to your function cloud functions\nhandles incoming requests by assigning\nthem to instances of your function now\ndepending on the volume of requests\nas well as the number of existing\nfunction instances cloud functions may\nassign a request to an existing instance\nor create a new one so the cloud\nfunction will grab the image from cloud\nregistry and hand off the image along\nwith the event data to the instance for\nprocessing now each instance of a\nfunction handles only one concurrent\nrequest at a time this means that while\nyour code is processing one request\nthere is no possibility of a second\nrequest being routed to the same\ninstance thus the original request can\nuse the full amount of resources that\nyou requested and this is the memory\nthat you assign to your cloud function\nwhen deploying it now to allow google to\nautomatically manage and scale the\nfunctions they must be stateless\nfunctions are not meant to be persistent\nnor is the data that is passed on to the\nfunction and so once the function has\nrun and all data has been processed by\nthe server it is then passed on to\neither a vpc or to the internet now by\ndefault functions have public internet\naccess unless configured otherwise\nfunctions can also be private and used\nwithin your vpc but must be configured\nbefore deployment now there are so many\nuse cases for cloud functions and there\nare many that have already been created\nby google for you to try out\nand can be located in the documentation\nthat i've supplied in the lesson text\nbelow now the exam doesn't go into too\nmuch depth on cloud functions but i did\nwant to give you some exposure to this\nfantastic serverless product from google\nas it is so commonly used in many\nproduction environments in a simple and\neasy way to take in data process it and\nreturn a result from any event you are\ngiven and i have no doubt that once you\nget the hang of deploying them that you\nwill be a huge fan of them as well and\nso that's pretty much all i had to cover\nwhen it comes to cloud functions so you\ncan now mark this lesson as complete and\nwhenever you're ready join me in the\nnext one where we go hands-on in the\nconsole creating and deploying your very\nfirst function\nwelcome back and in this demo we will be\ndiving into creating and deploying our\nvery first cloud function we're going to\ntake a tour of all the options in the\nconsole but we're going to do most of\nthe work in cloud shell to get a good\nfeel for doing it in the command line so\nwith that being said let's dive in and\nso i'm logged in here as tony bowties\ngmail.com\nand i'm in the project of bowtie inc and\nso the first thing i want to do is head\non over to cloud functions in the\nconsole so i'm going to go up to the top\nleft to the navigation menu and i'm\ngoing to scroll down to cloud functions\nand as you can see here cloud functions\nis getting ready and this is because\nwe've never used it before and the api\nis being enabled okay and the api has\nbeen enabled and we can go ahead and\nstart creating our function so you can\ngo ahead and click create function and\nyou will be prompted with some fields to\nfill out for the configuration of your\ncloud function and so under basics for\nfunction name i'm going to name this\nhello underscore world for region i'm\ngoing to select us east one and under\ntrigger for trigger type we're gonna\nkeep this as http although if i click on\nthe drop down menu you can see that i\nwill have options for cloud pub sub\ncloud storage and the ones that i\nmentioned before that are in beta so\nwe're going to keep things as http and\nhere under url is the url for the actual\ncloud function under authentication i\nhave the option of choosing require\nauthentication or allow unauthenticated\ninvocations and as you can see this is\nclearly marked saying that check this if\nyou are creating a public api or website\nwhich we are and so this is the\nauthentication method that you want to\nselect and so now that we have all the\nfields filled out for the basic\nconfiguration i'm going to go ahead and\nclick on save and just to give you a\nquick run through of what else is\navailable i'm going to click on the drop\ndown here and this will give me access\nto variables networking and advanced\nsettings the first field here memory\nallocated i can actually add more memory\ndepending what i am doing with my cloud\nfunction but i'm going to keep it as the\ndefault if you have a cloud function\nthat runs a little bit longer and you\nneed more time to run the cloud function\nyou can add additional time for the\ntimeout and as well i have the option of\nchoosing a different service account for\nthis cloud function and so moving on\nunder environment variables you will see\nthe options to add build environment\nvariables along with runtime environment\nvariables and the last option being\nconnections here you can change the\ndifferent networking settings for\ningress and egress traffic under ingress\nsettings i can allow all traffic which\nis the default i can allow internal\ntraffic only as well i can allow\ninternal traffic and traffic from cloud\nlow balancing now as well when it comes\nto the egress settings as i said before\nby default your cloud function is able\nto send requests to the internet but not\nto resources in your vpc network and so\nthis is where you would create a vpc\nconnector to send requests from your\ncloud function to resources in your vpc\nso if i click on create a connector\nit'll open up a new tab and bring me to\nvpc network to add serverless vpc access\nand so i don't want to do that right now\nso i'm going to close down this tab and\ni'm going to go ahead and leave\neverything else as is and click on next\nand so now that the configuration is\ndone i can dive right into the code and\nso google cloud gives you a inline\neditor right here along with the\ndifferent runtime environments so if i\nclick on the drop down menu you can see\ni have the options\nof net core go java node.js and python\n3.7 and 3.8 and so for this demo i'm\ngoing to keep it as node.js 10. the\nentry point will be hello world and i'm\ngoing to keep the code exactly as is and\nthis is a default cloud function that is\npackaged with any runtime whenever you\ncreate a function from the console and\nso if i had any different code i can\nchange it here but i'm not going to do\nthat i'm going to leave everything else\nas is and click on deploy and it'll take\na couple minutes here to create my cloud\nfunction and so i'm going to pause the\nvideo here for just a quick sec and i'll\nbe back in a flash okay and my cloud\nfunction has been deployed and i got a\ngreen check mark which means that i'm\nall good and so i want to dive right\ninto it for just a second so i can get\nsome more details here i have the\nmetrics for my cloud function the\ninvocations per second execution time\nmemory utilization and active instances\ni have my versions up here at the top\nbut since i only have one version only\none version shows up if i click on\ndetails it'll show me the general\ninformation along with the networking\nsettings the source will show me the\ncode for this cloud function as well as\nthe variables the trigger permissions\nlogs and testing and here i can write in\nsome code and test the function and so\nin order for me to invoke this function\ni can simply go to trigger and it'll\nshow me the url but a quick way to do\nthis through the command line is to\nsimply open up cloud shell and make this\na little bigger for better viewing and\ni'm going to paste in the command gcloud\nfunctions describe along with the\nfunction name which is hello underscore\nworld along with the region flag dash\ndash region with the region that my\ncloud function has been deployed in\nwhich is us east one and i'm going to\nhit enter\nit's going to ask me to authorize my api\ncall yes i want to authorize it and this\ncommand should output some information\non your screen and so what we're looking\nfor here is the http trigger which you\nwill find here under https trigger and\nit is the same as what you see here in\nthe console and so just know if you want\nto grab the http url trigger you can\nalso do it from the command line and so\ni'm going to now trigger it by going to\nthis url and you should see in the top\nleft hand side of your screen hello\nworld not as exciting as spinning bow\nties but this example gives you an idea\nof what an http function can do and so\ni'm going to close down this tab and so\nnow what i want to do is i want to\ndeploy another function but i want to do\nit now through the command line and so\ni'm going to now quickly clear my screen\nand so since i've already uploaded the\ncode to the repo i'm going to simply\nclone that repo and run it from here so\ni'm going to simply do a cd tilde to\nmake sure i'm in my home directory for\nthose of you who haven't deleted the\ndirectory you can simply cd into it so\ni'm going to run cd google cloud\nassociate cloud engineer hit enter and\ni'm going to run a get pull command\nand it pull down all the files that i\nneeded i'm going to quickly clear my\nscreen and so i'm going to change\ndirectories into the directory that has\nmy code and so you're going to find it\nunder 11 serverless services under zero\nto you called hit enter and again i will\nhave a link in the lesson text for the\nfull instructions on this demo and it\nwill list the directory where you can\nfind this code okay so moving forward\ni'm going to run ls and you should see\nthree files here\nmain.py\nrequirements.txt and the text file with\nthe instructions and so now that i have\neverything in place in order to deploy\nmy code i'm going to paste in the\ncommand to actually deploy my function\nwhich is gcloud functions deploy the\nname of the function which is you\nunderscore called the flag for the\nruntime dash dash runtime and the\nruntime is going to be python 3.8 the\nflag for the trigger which is going to\nbe http and because i'm a nice guy and i\nwant everyone to have access to this i'm\ngoing to tag it with the flag dash dash\nallow unauthenticated so i'm going to\nhit enter okay and this function should\ntake a couple minutes to deploy so i'm\ngoing to sit here and let it cook and\ni'll be back before you can say cat in\nthe hat okay and our function has been\ndeployed i'm going to do a quick refresh\nhere in the console and it deployed\nsuccessfully as you can see the green\ncheck mark is here okay and so now that\nit's been deployed we want to trigger\nour function and so because i just\ndeployed this function the url trigger\nis conveniently located here in my\nscreen so you can go ahead and click on\nit and hello lover of bow ties you\ncalled now although this may be similar\nto the hello world demo but i did add a\nsmall feature that might spice things up\nand so if you go up to the url and you\ntype in question mark name equals and\nyour name and since my name is anthony\ni'm going to type in anthony\nhit enter and hello anthony you called\nand so this is a perfect example of the\nmany different ways you can use\nfunctions and although i've only\nhighlighted some very simple\ndemonstrations there are many different\nways that you can use functions such as\nrunning pipelines running batch jobs and\neven event driven security now although\nthe exam doesn't go into too much depth\non cloud functions it's always good to\nknow its use cases and where its\nstrengths lie for when you do decide to\nuse it in your role as a cloud engineer\nnow before you go be sure to delete all\nthe resources you've created by deleting\nthe functions and the storage buckets\nthat house the code for the cloud\nfunctions and i will walk you through\nthe steps right now okay so first i'm\ngoing to close down this tab and next\nyou're going to select all the functions\nand you're going to simply click on\ndelete you're going to get a prompt to\ndelete the functions you're going to\nclick on delete and it's going to take a\nminute or two and the functions are\ndeleted i'm going to close down my cloud\nshell and i'm going to head over to\ncloud storage\nand as you can see here both these\nbuckets that start with gcf standing for\ngoogle cloud functions can be safely\ndeleted as inside them are the files\nthat were used for the cloud function so\ni'm going to go back out i'm going to\nselect both of these and i'm going to\nclick on delete you get a prompt to\ndelete two buckets you can simply type\nin delete and click on delete and the\nbuckets have now been deleted and you've\npretty much finished your cleanup and so\njust as a recap you created a default\ncloud function that was available from\nthe console and then verified it by\ntriggering the http url you then\ndeployed another function from the\ncommand line by pulling the code from\nthe repo and using it for deployment and\nthen you verified that function by\ntriggering it using the http url as well\nand then you modify the url for a\ndifferent output great job on another\nsuccessful demo so you can now mark this\nas complete and let's move on to the\nnext one\n[Music]\nwelcome back in this lesson we're going\nto dive into cloud storage the go to\nstorage service from google cloud if\nyou're an engineer working in google\ncloud you've probably used this many\ntimes as a storage solution and if you\nhaven't this is definitely a service\nthat you will need to know for both the\nexam and your day-to-day role as a cloud\nengineer now there's quite a bit to\ncover here so with that being said let's\ndive in now cloud storage is a\nconsistent scalable large capacity\nhighly durable object storage and this\nis unlimited storage for objects with no\nminimum object size but please remember\nthat this is object storage and is not\ndesigned to store an operating system on\nbut to store whole objects like pictures\nor videos cloud storage has worldwide\naccessibility and worldwide storage\nlocations so anywhere that there is a\nregion or zone cloud storage is\navailable from there and can be accessed\nat any time through an internet\nconnection cloud storage is great for\nstoring data from data analytics jobs\ntext files with code pictures of the\nlatest fashion from paris and videos of\nyour favorite house dj at the shelter\ncloud storage excels for content\ndelivery big data sets and backups and\nare all stored as objects in buckets and\nthis is the heart of cloud storage that\ni will be diving into so starting with\nbuckets these are the basic containers\nor construct that holds your data\neverything that you store in cloud\nstorage must be contained in a bucket\nyou can use buckets to organize your\ndata and control access to your data but\nunlike directories and folders you\ncannot nest buckets and i'll get into\nthat in just a minute now when you\ncreate a bucket you must specify a\nglobally unique name as every bucket\nresides in a single cloud storage\nnamespace as well as a name you must\nspecify a geographic location where the\nbucket and its contents are stored and\nyou have three available geography\nchoices to choose from from region dual\nregion and multi-region and so just as a\nnote choosing dual region and\nmulti-region is considered geo-redundant\nfor dual region geo-redundancy is\nachieved using a specific pair of\nregions for multi-region geo-redundancy\nis achieved using a continent that\ncontains two or more geographic places\nbasically the more regions your data is\navailable in the greater your\navailability for that data after you've\nchosen a geographic location a default\nstorage class must be chosen and this\napplies to objects added to the bucket\nthat don't have a storage class\nexplicitly specified and i'll be diving\ninto storage classes in just a bit and\nso after you create a bucket you can\nstill change its default storage class\nto any class supported in the buckets\nlocation with some stipulations\nyou can only change the bucket name\nand location by deleting and recreating\nthe bucket as well once dual region is\nselected it cannot be changed to\nmulti-region and when selecting\nmulti-region you will not be able to\nchange the bucket to be dual region and\nlastly you will need to choose what\nlevel of access you want others to have\non your bucket whether you want to apply\npermissions using uniform or fine\ngrained access uniform bucket level\naccess allows you to use iam alone to\nmanage permissions iam applies\npermissions to all the objects contained\ninside the bucket or groups of objects\nwith common name prefixes the find green\noption enables you to use iam and access\ncontrol lists or acls\ntogether to manage permissions acls are\na legacy access control system for cloud\nstorage designed for interoperability\nwith amazon s3 for those of you who use\naws you can specify access and apply\npermissions at both the bucket level and\nper individual object and i will also be\ndiving more into depth with access\ncontrol\nin just a bit and just as a note labels\nare an optional item for bucket creation\nlike every other resource creation\nprocess in gcp now that we've covered\nbuckets i wanted to cover what is stored\nin those buckets which is objects and\nobjects are the individual pieces of\ndata or data chunks that you store in a\ncloud storage bucket and there is no\nlimit on the number of objects that you\ncan create in a bucket so you can think\nof objects kind of like files objects\nhave two components object data and\nobject metadata\nobject data is typically a file that you\nwant to store in cloud storage and in\nthis case it is the picture of the plaid\nbow tie and object metadata is a\ncollection of name value pairs that\ndescribe the various properties of that\nobject an object's name is treated as a\npiece of object metadata in cloud\nstorage and must be unique within the\nbucket cloud storage uses a flat\nnamespace to store objects which means\nthat cloud storage isn't a file system\nhierarchy but sees all objects in a\ngiven bucket as independent with no\nrelationship towards each other for\nconvenience\ntools such as the console and gsutil\nwork with objects that use the slash\ncharacter as if they were stored in a\nvirtual hierarchy for example you can\nname one object slash bow ties slash\nspring 2021 slash plaid bowtie.jpg when\nusing the cloud console you can then\nnavigate to these objects as if they\nwere in a hierarchical directory\nstructure under the folders bow ties and\nspring 2021 now i mentioned before that\nthe part of the bucket creation is the\nselection of a storage class the storage\nclass you set for an object affects the\nobject's availability and pricing model\nso when you create a bucket you can\nspecify a default storage class for the\nbucket when you add objects to the\nbucket they inherit this storage class\nunless explicitly set otherwise now i\nwanted to touch on these four storage\nclasses now to give you a better\nunderstanding of the differences between\nthem the first one is standard storage\nand is considered best for hot data or\nfrequently accessed data and is best for\nshort-term use as it does not have any\nspecified storage duration and this is\nexcellent for use in analytical\nworkloads and transcoding and the price\nfor this storage class comes in at two\ncents per gigabyte per month next up is\nnear line storage and this is considered\nhot data as well and is a low-cost\nstorage class for storing in frequently\naccessed data nearline storage has a\nslightly lower availability a 30-day\nminimum storage duration and comes with\nthe cost for data access nearline\nstorage is ideal if you're looking to\ncontinuously add files but only plan to\naccess them once a month and is perfect\nfor data backup and data archiving the\nprice for this storage class comes in at\na penny per gigabyte per month now cold\nline storage is considered cold data as\nit enters into more of the longer term\nstorage classes and is a very low cost\nstorage class for storing and frequently\naccessed data it comes with slightly\nlower availability than nearline storage\na 90-day minimum storage duration and\ncomes with the cost for data access that\nis higher than the retrieval cost for\nnearline storage coldline storage is\nideal for data you plan to read or\nmodify at most once a quarter and is\nperfect for data backup and data\narchiving the price for this storage\nclass comes in at less than half of a\npenny per gigabyte per month and finally\narchive storage is the lowest cost\nhighly durable storage service for data\narchiving online backup and disaster\nrecovery and even coming in at a lowest\ncost the data access is still available\nwithin milliseconds archive storage\ncomes in at a higher cost for data\nretrieval as well as a\nday minimum storage duration and is the\nbest choice for data that you plan to\naccess less than once a year archive\nstorage also comes with the highest\nprice for data retrieval and it is ideal\nfor archive data storage that's used for\nregulatory purposes or disaster recovery\ndata in the event that there is an\noopsies in your environment the price of\nthe storage class comes in at a\nridiculously low price per gigabyte per\nmonth at a fraction of a penny per\ngigabyte per month now when it comes to\nchoosing your geographic location this\nwill determine the availability of your\ndata here as you can see the highest\navailability is the standard\nmulti-region whereas archive has the\nlowest availability when stored in a\nregional setting now when it comes to\nthe durability of your data meaning the\nmeasurement of how healthy and resilient\nyour data is from data loss or data\ncorruption google cloud boasts 11 9's\ndurability annually on all data stored\nin any storage class on cloud storage so\nknow that your data is stored safely and\nwill be there holding the same integrity\nfrom the day you stored it now when it\ncomes to granting permissions to your\ncloud storage buckets and the objects\nwithin them there are four different\noptions to choose from the first is iam\npermissions and these are the standard\npermissions that control all your other\nresources in google cloud and follow the\nsame top-down hierarchy that we\ndiscussed earlier the next available\noption are access control list or acls\nand these define who has access to your\nbuckets and objects as well as what type\nof access they have and these can work\nin tandem with im permissions moving on\nto sign urls these are time limited\nreader write access urls that can be\ncreated by you to give access to the\nobject in question for the duration that\nyou specify and lastly is sign policy\ndocuments and these are documents to\nspecify what can be uploaded to a bucket\nand i will be going into each one of\nthese in a bit of detail now cloud\nstorage offers two systems for granting\nusers permission to access your buckets\nand objects iam and access control lists\nthese systems act in parallel in order\nfor a user to access a cloud storage\nresource only one of the systems needs\nto grant the user permission im is\nalways the recommended method when it\ncomes to giving access to buckets and\nthe objects within those buckets\ngranting roles at the bucket level does\nnot affect any existing roles that you\ngranted at the project level and vice\nversa giving you two levels of\ngranularity to customize your\npermissions so for instance you can give\na user permission to read objects in any\nbucket but permissions to create objects\nonly in one specific bucket the roles\nthat are available through iam are the\nprimitive standard storage roles or the\nlegacy roles which are equivalent to\nacls now acls are there if you need to\ncustomize access and really get granular\nwith individual objects within a bucket\nand are used to define who has access to\nyour buckets and objects as well as what\nlevel of access they have each acl\nconsists of one or more entries and\ngives a specific user or group the\nability to perform specific actions each\nentry consists of two pieces of\ninformation a permission which defines\nwhat actions can be performed and a\nscope which defines who can perform the\nspecified actions now acls should be\nused with caution as iam roles and acls\noverlap cloud storage will grant a\nbroader permission so if you allow\nspecific users access to an object in a\nbucket and then an acl is applied to\nthat object to make it public then it\nwill be publicly accessible so please be\naware now a signed url is a url that\nprovides limited permission and time to\nmake a request sign urls contain\nauthentication information allowing\nusers without credentials to perform\nspecific actions on a resource when you\ngenerate a signed url you specify a user\nor service account which must have\nsufficient permission to make the\nrequest that the sign url will make\nafter you generate a signed url anyone\nwho possesses it can use the sign url to\nperform specified actions such as\nreading an object within a specified\nperiod of time now if you want to\nprovide public access to a user who\ndoesn't have an account you can provide\na signed url to that user which gives\nthe user read write or delete access to\nthat resource for a limited time you\nspecify an expiration date when you\ncreate the sign url so anyone who knows\nthe url can access the resource until\nthe expiration time for the url is\nreached or the key used to sign the url\nis rotated and the command to create the\nsign url is shown here and as you can\nsee has been assigned for a limited time\nof 10 minutes so as you've seen when it\ncomes to cloud storage there are so many\nconfiguration options to choose from and\nlots of different ways to store and give\naccess and this makes this resource from\ngoogle cloud such a flexible option and\nfull of great potential for many\ndifferent types of workloads this is\nalso a service that comes up a lot in\nthe exam as one of the many different\nstorage options to choose from and so\nknowing the features storage classes\npricing and access options will\ndefinitely give you a leg up when you\nare presented with questions regarding\nstorage and so that's pretty much all i\nwanted to cover when it comes to this\noverview on cloud storage so you can now\nmark this lesson as complete and let's\nmove on to the next one\n[Music]\nwelcome back and in this lesson i will\nbe covering object versioning and life\ncycle management a feature within cloud\nstorage that is used to manage and sort\nthrough older files that need to be\ndeleted along with files that are not in\nhigh need of regular access knowing the\ncapabilities of these two features\ncan really help organize accumulated\nobjects in storage buckets and cut down\non costs so without further ado let's\ndive in now to understand a bit more\nabout objects i wanted to dive into\nimmutability and versioning now objects\nare immutable which means that an\nuploaded object cannot change throughout\nits storage lifetime an object's storage\nlifetime is the time between a\nsuccessful object creation or upload and\nsuccessful object deletion this means\nthat you cannot edit objects in place\ninstead objects are always replaced with\na new version so after the upload of the\nnew object completes the new version of\nthe object is served to readers this\nreplacement marks the end of one\nobject's life cycle and the beginning of\na new one now to support the retrieval\nof objects that are deleted or replaced\ncloud storage offers the object\nversioning feature object versioning\nretains a non-current object version\nwhen the live object version gets\nreplaced or deleted enabling object\nversioning increases storage costs which\ncan be partially mitigated by\nconfiguring object lifecycle management\nto delete older object versions but more\non that in just a bit cloud storage uses\ntwo properties that together identify\nthe version of an object the generation\nwhich identifies the version of the\nobject's data\nand the meta generation which identifies\nthe version of the object's metadata\nthese properties are always present with\nevery version of the object even if\nobject versioning is not enabled these\nproperties can be used to enforce\nordering of updates so in order to\nenable object versioning you would do\nthat by enabling it on a bucket once\nenabled older versions remain in your\nbucket when a replacement or deletion\noccurs so by default when you replace an\nobject cloud storage deletes the old\nversion and adds a new version these\nolder versions retain the name of the\nobject but are uniquely identified by\ntheir generation number when object\nversioning has created an older version\nof an object you can use the generation\nnumber to refer to the older version\nthis allows you to restore a replaced\nobject in your bucket or permanently\ndelete older object versions that you no\nlonger need and so touching back on cost\nfor just a minute these versions can\nreally add up and start costing you some\nserious money if you have thousands of\nfiles with hundreds of versions and this\nis where life cycle management comes\ninto play now cloud storage offers the\nobject lifecycle management feature in\norder to support some common use cases\nlike setting a time to live or ttl for\nobjects\nretaining non-current versions of\nobjects or downgrading storage classes\nof objects to help manage costs now in\norder to apply this feature to your\nobjects you would assign a lifecycle\nmanagement configuration to a bucket the\nconfiguration contains a set of rules\nwhich apply to current and feature\nobjects in the bucket when an object\nmeets the criteria of one of the rules\ncloud storage automatically performs the\nspecified action on the object and so\nsome example use cases are shown here so\nif you're looking to downgrade the\nstorage class\nof objects older than 365 days to cold\nline storage for compliance purposes\nalong with saving money life cycle\nmanagement is perfect for this another\nuse case is when you want to delete\nobjects created before january 1st of\n2020 and this is another great use case\nto save money as well with keeping only\nthe three most recent versions of each\nobject in a bucket with versioning\nenabled to keep from version objects\nbuilding up object lifecycle management\nhas so many other use cases across a\nmyriad of industries and when used\ncorrectly is a great way to achieve\nobject management along with saving\nmoney now i wanted to take a moment to\ndive into the lifecycle management\nconfiguration each lifecycle management\nconfiguration contains a set of\ncomponents these are a set of rules\nconditions and the action when the\nconditions are met rules are any set of\nconditions for any action conditions is\nsomething an object must meet before the\naction defined in the rule occurs on the\nobject and there are various conditions\nto choose from that allows you to get\npretty granular and finally the action\nwhich is where you would have the option\nto delete or set storage class now when\nyou delete current versions this will\nmove the current version into a\nnon-current state and when you delete a\nnon-current version you will permanently\ndelete the version and cannot get it\nback and so when you set the storage\nclass it will transition the object to a\ndifferent storage class so when defining\na rule you can specify any set of\nconditions for any action if you specify\nmultiple conditions in a rule an object\nhas to match all of the conditions for\nthe action to be taken so if you have\nthree conditions and one of those\nconditions have not been met then the\naction will not take place if you\nspecify multiple rules that contain the\nsame action the action is taken when an\nobject matches the conditions in any of\nthese rules now if multiple rules have\ntheir conditions satisfied\nsimultaneously for a single object cloud\nstorage will either perform the delete\naction as it takes precedence over the\nset storage class action or the set\nstorage class action that switches the\nobject to the storage class with the\nlowest at rest storage pricing takes\nprecedence so for example if you have\none rule that deletes an object and\nanother rule that changes the object\nstorage class but both rules use the\nexact same condition the delete action\nalways occurs when the condition is met\nor if you have one rule that changes the\nobject storage class to near line\nstorage and another rule that changes\nthe object storage class to cold line\nstorage but both rules use the exact\nsame condition the object storage class\nalways changes to cold line storage when\nthe condition is met and so some\nconsiderations that i wanted to point\nout when it comes to cloud storage is\nthat when it comes to object life cycle\nmanagement\nchanges are in accordance to object\ncreation date as well once an object is\ndeleted it cannot be undeleted so please\nbe careful when permanently deleting a\nversion as well life cycle rules can\ntake up to 24 hours to take effect so be\naware when setting them and always be\nsure to test these life cycle rules in\ndevelopment first before rolling them\nout into production and so that's pretty\nmuch all i had to cover when it comes to\nversioning and object life cycle\nmanagement and so you can now mark this\nlesson as complete and whenever you're\nready join me in the console where we go\nhands-on with versioning object life\ncycle management and cloud storage as a\nwhole\n[Music]\nwelcome back in this demo we're going to\ncement the knowledge that we learned\nfrom the past couple lessons on cloud\nstorage and really dive into the nitty\ngritty when it comes to the features and\nconfiguration you're first going to\ncreate a cloud storage bucket and upload\nsome files to it and then interact with\nthe bucket and the files using the\nconsole as well you're going to get your\nhands dirty using the gsutil command\nline tool and this is the tool for\nmanaging cloud storage from the command\nline now there's quite a bit of work to\ndo here so with that being said let's\ndive in and so i am logged in here as\ntony bowties at gmail.com along with\nbeing in project bowtie inc and so the\nfirst thing i want to do is i want to\ncreate a cloud storage bucket so in\norder for me to do that i'm going to\nhead over to the navigation menu and i'm\ngoing to scroll down to storage\nand here i already have a couple of\nbuckets that i created from earlier\nlessons and you may have a couple\nbuckets as well but you're going to go\nahead and create a new bucket by going\nup to the top here and click on create\nbucket now i know that we've gone\nthrough this before in previous lessons\nbut this time i wanted to go through all\nthe configuration options that are\navailable and so the first thing that\nyou're prompted to do here is to name\nyour bucket as explained in an earlier\nlesson it needs to be a globally unique\nname and so you can pick any name you\nchoose and so for me i'm going to call\nthis bucket bowtie inc dash 2021 i'm\ngoing to hit continue and if it wasn't a\nglobally unique name it would error out\nand you would have to enter in a new\nname but since this bucket name is\nglobally unique i'm able to move forward\nfor location type you can select from\nregion dual region and multi region with\nmulti region under location you can\nselect from either the americas europe\nor asia pacific and under dual region\nyou have the options of again choosing\nfrom america's europe and asia pacific\nand you will be given the regions for\neach and so for this demo we're going to\ngo ahead and choose region and we're\ngoing to keep the location as u.s east\none and once you've selected that you\ncan go ahead and hit continue and you're\ngoing to be prompted to choose a default\nstorage class and here you have the\noption of selecting from the four\nstorage classes that we discussed in an\nearlier lesson and so for this demo you\ncan keep it as standard and simply click\non continue and so here you're prompted\nto choose access control and because\nwe're going to be diving into acls you\ncan keep this as the default fine grain\naccess control you can go ahead and\nclick continue and under encryption you\ncan keep it as the default google manage\nkey but know that you always have the\noption of choosing a customer manage key\nand once you've uploaded your customer\nmanage key you can select it from here\nand because i have no customer managed\nkeys no other keys show up so i'm going\nto click on google manage keys and here\nunder retention policy i know i haven't\ntouched into that but just to give you\nsome context when placing a retention\npolicy on a bucket it ensures that all\ncurrent and future objects in the bucket\ncan't be deleted or replaced until they\nreach the age that you define in the\nretention policy so if you try to delete\nor replace objects where the age is less\nthan the retention period it will\nobviously fail and this is great for\ncompliance purposes in areas where logs\nneed to be audited by regulators every\nyear or where government required\nretention periods apply as well with the\nretention policy you have the option of\nlocking that retention policy and when\nyou lock a retention policy on a bucket\nyou prevent the policy from ever being\nremoved or the retention period from\never being reduced and this feature is\nirreversible so please be aware if\nyou're ever experimenting with lock\nretention policies so if i set a\nretention policy here i can retain\nobjects for a certain amount of seconds\ndays months and years and for this demo\nwe're not going to set any retention\npolicies so i'm going to check that off\nand i'm going to go ahead and add a\nlabel with the key being environment and\nthe value being test and just as a note\nbefore you go ahead and click on create\nover on the right hand side you will see\na monthly cost estimate and you will be\ngiven an estimate with storage and\nretrieval as well as how much it costs\nfor operations your sla and your\nestimated monthly cost and so before\ncreating any buckets you can always do a\nprice check to see how much it'll cost\nfor storage size retrieval to get a good\nidea of how much it'll cost you monthly\nokay so once you're all done here you\ncan simply click on create\nand it'll go ahead and create your\nbucket and so now that your bucket is\ncreated we want to add some files and so\nwe first want to go into copying files\nfrom an instance to your cloud storage\nbucket and so in order to do that we\nneed to create an instance and so we're\ngonna go back over to the navigation\nmenu we're gonna scroll down to compute\nengine and we're gonna create our\ninstance and for those who do not have\nyour default vpc set up please be sure\nto create one before going ahead and\ncreating your instance i'm going to go\nahead and click on create i'm going to\nname this instance\nbowtie instance going to give it a label\nof environment test click on save\nthe region is going to be\neast one and you can keep the default\nzone as us east 1b the machine type\nwe're going to change it to e2micro and\nyou're going to scroll down to access\nscopes and here your instance is going\nto need access to your cloud storage\nbucket and so it's going to need cloud\nstorage access so you're going to click\non set access for each api scroll down\nto storage and for this demo we'll\nselect full gonna leave everything else\nas the default and simply click on\ncreate and so we'll give it a couple\nminutes here for instance to create okay\nand my instance has been created and so\nnow i want to create some files and copy\nthem over to cloud storage so i'm going\nto first navigate over to cloud storage\nand into my bucket and this way you can\nsee the files that you upload and so\nnext you're going to open up cloud shell\nand make this a little bigger for better\nviewing and so now you're going to ssh\ninto your instance by using the command\ngcloud compute ssh along with your\ninstance name the zone flag dash dash\nzone with the zone of us east 1b i'm\ngoing to go ahead and hit enter and you\nmay be prompted with a message asking to\nauthorize this api call and you want to\nhit authorize and you're going to be\nprompted to enter a passphrase for your\nkey pair enter it in again\nand one more time\nand success we're logged into the\ninstance i'm going to quickly clear my\nscreen and so i know i could have sshed\ninto the instance from the compute\nengine console but i wanted to display\nboth the console and the shell on the\nsame screen to make viewing a bit easier\nas i add and remove files to and from\nthe bucket okay and so now that you're\nlogged in you want to create your first\nfile that you can copy over to your\nbucket so you can enter in the command\nsudo nano file a bow ties dot text hit\nenter and this will allow you to open up\nthe nano editor to edit the file of\nbowties.txt and here you can enter in\nany message that you'd like for me i'm\ngoing to enter in learning to tie a bow\ntie takes time okay and i'm going to hit\nctrl o to save hit enter to verify the\nfile name to right and ctrl x to exit\nand so now i want to copy this file up\nto my bucket and so here is where i'm\ngoing to use the gsutil command so i'm\ngoing to type in gsutil cp for copy the\nname of the file which is file of\nbowties\ntext along with gs colon forward slash\nforward slash and the name of your\nbucket which in my case is bow tie ink\ndash 2021 and this should copy my file\nfile a bowties.txt up to my bucket of\nbow tie inc\n2021 i'm gonna hit enter\nokay and it's finished copying over and\nif i go up here to the top right and\nclick on refresh i can see that my file\nsuccessfully uploaded and this is a\ngreat and easy method to upload any\nfiles that you may have to cloud storage\nokay and so now that you've copied files\nfrom your instance to your bucket you're\ngoing to now copy some files from the\nrepo to be uploaded to cloud storage for\nour next step so you're gonna go ahead\nand exit out of the instance by just\nsimply typing in exit i'm gonna quickly\nclear the screen and so here i need to\nclone my repo if you already have clone\nthe repo then you can skip this step i'm\ngoing to cd tilde to make sure i'm in my\nhome directory i'm going to do an ls and\nso i can see here that i've already\ncloned my repo so i'm going to cd into\nthat directory and i'm going to run the\ncommand git pull to get the latest files\nfantastic i'm going to now clear my\nscreen and i'm going to cd back to my\nhome directory and so now i want to copy\nup the files that i want to work with to\nmy cloud storage bucket and they are two\njpegs by the name of pink\nelephant-bowtie as well as plaid bowtie\nand these files can be found in the repo\nmarked 12 storage services under zero\none cloud storage management and i will\nbe providing this in the lesson text as\nwell as can be found in the instructions\nand so i'm going to simply cd into that\ndirectory by typing in cd google cloud\nassociate cloud engineer 12 storage\nservices and 0 1 cloud storage\nmanagement i'm going to list all the\nfiles in the directory and as you can\nsee here pink elephant dash bow tie and\nplaid bow tie are both here and so i'm\ngoing to quickly clear my screen and so\nnow for me to copy these files i'm going\nto use the command gsutil\ncp for copy star.jpg which is all the\njpegs that are available along with gs\ncolon forward slash forward slash and\nthe bucket name which is bow tie inc\ndash 2021 i'm going to hit enter and it\nsays that it's successfully copied the\nfiles i'm going to simply go up to the\ntop right hand corner and do another\nrefresh and success the files have been\nsuccessfully uploaded another perfect\nexample of copying files from another\nsource to your bucket using the gsutil\ncommand line tool and so this is the end\nof part one of this demo it was getting\na bit long so i decided to break it up\nand this would be a great opportunity\nfor you to get up and have a stretch get\nyourself a coffee or tea and whenever\nyou're ready part two will be starting\nimmediately from the end of part one so\nyou can complete this video and i will\nsee you in part two\n[Music]\nthis is part two of the managing cloud\nstorage access demo and we'll be\nstarting exactly where we left off in\npart 1. so with that being said let's\ndive in and so now that we've uploaded\nall these files we next want to make\nthis bucket publicly available now\nplease know that leaving a bucket public\nis not common practice and should only\nbe used on the rare occasion that you\nare hosting a static website from your\nbucket and should always be kept private\nwhenever possible especially in a\nproduction environment so please note\nthat this is only for the purposes of\nthis demo and so i'm going to quickly\nshow this to you in the console so i'm\ngoing to shut down the cloud shell for\njust a minute and i'm going to go to the\ntop menu and click on permissions and\nunder permissions i'm going to click on\nadd here you can add new members and\nbecause you want to make it publicly\navailable you want to use the all users\nmember so you type in all and you should\nget a pop-up bringing up all users and\nall authenticated users you want to\nclick on all users and the role that you\nwant to select for this demo is going to\nbe storage object viewer so i'm going to\ntype in storage object viewer and here\nit should pop up and select that and\nthen you can click on save you're going\nto be prompted to make sure that this is\nwhat you want to do that you want to\nmake this bucket public and so yes we do\nso you can simply click on allow public\naccess and you will get a banner up here\nat the top saying that this bucket is\npublic to internet and is a great fail\nsafe to have in case you were to ever\nmistakenly make your bucket public and\nif i head back over to objects you can\nsee that public access is available to\nall the files in the bucket and so just\nto verify this i'm going to copy the\npublic url for pink elephant dash bowtie\ni'm going to open up a new tab paste in\nthe url hit enter and as you can see i\nhave public access to this picture and\nclose this tab and so now that we've\ndone our demo to make the bucket\npublicly accessible we should go ahead\nand remove public access so in order to\nremove public permissions i can simply\ngo up to permissions and simply click on\nremove public permissions i'm going to\nget a prompt to make sure this is\nexactly what i want to do and yes it is\nso you can click on remove public\npermissions a very simple and elegant\nsolution in order to remove public\naccess from your bucket and if you go\nback to objects you'll see that all the\npublic access has been removed from all\nthe files and so now that you've\nexperienced how to add public access to\na bucket i wanted to get a little bit\nmore granular and so we're going to go\nahead and apply acl permissions for one\nspecific object and because i like pink\nelephants let's go ahead and select pink\nelephant dash bow tie and so here i can\ngo up to the top menu and click on edit\npermissions and i'll be prompted with a\nnew window for permissions that are\ncurrently available for this object you\ncan click on add entry click on the drop\ndown and select public from the\ndrop-down and it will automatically auto\npopulate the name which is all users and\nthe access which will be reader i'm\ngoing to go ahead and click on save and\na public url will be generated and so\njust to verify this i'm going to click\non the public url and success i now have\npublic access to this picture yet once\nagain i'm going to close down this tab\nand so now that you've configured this\nobject for public access i want to show\nyou how to remove public access using\nthe command line this time so you're\ngoing to go up to the top right hand\ncorner and open up cloud shell i'm going\nto quickly clear my screen and i'm going\nto paste in the command here which is\ngsutil acl ch for change minus d which\nis delete the name of the user which is\nall users and if this was a regular user\nyou could enter in their email address\nalong with gs colon forward slash\nforward slash the bucket name which in\nmy case is bow tie ink dash 2021 and the\nname of the file which is pink elephant\nbow tie dot jpeg i'm going to hit enter\nand it says that it's been successfully\nupdated and so if i go back up here to\nthe console and i back out and go back\ninto the file i can see here that the\npublic url has been removed okay and now\nthere's one last step that we need to do\nbefore ending this demo and this is to\ncreate a signed url for the file so in\norder to create a signed url we first\nneed to create a private key and so\nwe're gonna do this using a service\naccount and so i'm gonna head on over to\niam so i'm going to go up to the\nnavigation menu i'm going to go to i am\nan admin and here with the menu on the\nleft i'm going to click on service\naccounts here up at the top menu you're\ngoing to click on create service account\nand under service account name you can\nenter in any name\nbut for me i'm going to enter in signed\nurl i'm going to leave everything else\nas is i'm going to simply click on\ncreate i'm going to close down cloud\nshell because i don't really need it\nright now just select a role and i'm\ngoing to give it the role of storage\nobject viewer\ni'm going to click on continue and i'm\ngoing to leave the rest blank and simply\nclick on done and you should see a\nservice account with the name of signed\nurl and so in order to create a key i'm\ngoing to simply go over to actions and\ni'm going to click on the three dots and\ni'm going to select create key from the\ndrop down menu and here i'm going to be\nprompted with what type of key that i\nwant to create and you want to make sure\nthat json is selected and simply click\non create and this is where your key\nwill be automatically downloaded to your\ndownloads folder i'm going to click on\nclose and so once you have your key\ndownloaded you're able to start the\nprocess of generating a signed url and\nso i'm going to go ahead and use cloud\nshell in order to generate this signed\nurl so i'm going to go ahead back up to\nthe top and open up cloud shell again\nand then you can open up the cloud shell\neditor going to go up to the top menu in\neditor and click on file and you're\ngoing to select upload files and here's\nwhere you upload your key from your\ndownloads folder and i can see my key\nhas been uploaded right here and you can\nrename your key file to something a\nlittle bit more human readable so i'm\ngoing to right click i'm going to click\non rename and you can rename this file\nas privatekey.json hit ok and so once\nyou have your key uploaded and renamed\nyou can now go back into the terminal to\ngenerate a signed url i'm going to\nquickly clear the screen i'm going to\nmake sure that the private key is in my\npath by typing in ls and as you can see\nhere privatekey.json\nis indeed in my path and so before i\ngenerate this key i'm going to head back\non over to cloud storage i'm going to\ndrill down into my bucket and as you can\nsee here pink elephant dash bow tie does\nnot have a public url and so when the\nsign url is generated you will get a\npublic url that will not be shown here\nin the console and will be private to\nonly the user that generated it and the\nusers that the url has been distributed\nto okay and once you have everything in\nplace you can then go ahead and paste in\nthe command gsutil sign url minus d the\nallotted time which is 10 minutes the\nprivate key which is private key dot\njson along with gs colon forward slash\nforward slash your bucket name which in\nmy case is bow tie ink dash 2021 along\nwith the file name of\npinkelephant-bowtie.jpg i'm going to hit\nenter and so i purposely left this error\nhere so you can see that when you\ngenerate a signed url you need pi open\nssl in order to generate it and so the\ncaveat here is that because python 2 is\nbeing deprecated the command pip install\npi openssl will not work pi open ssl\nneeds to be installed with python3 and\nso to install it you're going to run the\ncommand pip3 install pi open ssl and hit\nenter and so once it's finished\ninstalling you can now generate your\nsigned url i'm going to quickly clear my\nscreen paste in the command again hit\nenter and success you've now generated a\nsign url for the object pink elephant\nbowtie.jpg and because this is a signed\nurl you will see under public url there\nis no url there available even though it\nis publicly accessible and so just to\nverify this i'm going to highlight the\nlink here i'm going to copy it i'm going\nto open up a new tab i'm going to paste\nin this url hit enter and success this\nsign url is working and anyone who has\naccess to it has viewing permissions of\nthe file for 10 minutes and so again\nthis is a great method for giving\nsomeone access to an object who doesn't\nhave an account and will give them a\nlimited time to view or edit this object\nand so i wanted to congratulate you on\nmaking it through this demo and hope\nthat it has been extremely useful in\nexcelling your knowledge on managing\nbuckets files and access to the buckets\nand files in cloud storage and so just\nas a recap you created a cloud storage\nbucket you then created an instance and\ncopied a file from that instance to the\nbucket you then clone your repo to cloud\nshell and copy two jpeg files to your\ncloud storage bucket you then assigned\nand then removed public access to your\nbucket and then applied an acl to a file\nin the bucket making it public as well\nas removing public access right after\nyou then created a service account\nprivate key and generated a signed url\nto an object in that bucket\ncongratulations again on a job well done\nand so that's pretty much all i wanted\nto cover in this demo on managing cloud\nstorage access so you can now mark this\nas complete and let's move on to the\nnext one\n[Music]\nwelcome back in this demo we're going to\nbe getting into the weeds with object\nversioning and life cycle management\nusing both the console and the command\nline we're going to go through how\nversioning works and what happens when\nobjects get promoted along with creation\nconfiguration and editing these life\ncycle policies and so with that being\nsaid let's dive in so we're going to be\nstarting off from where we left off in\nthe last demo with all the resources\nintact that we created before and we're\ngoing to go ahead and dive right into\nversioning and so the first thing that\nyou want to do is turn on versioning for\nyour current bucket so in my case for\nbow tie ink dash 2021 and we're going to\ndo this through the command line so i'm\ngoing to first go up to the top right\nhand corner and open up cloud shell and\nso you first want to see if versioning\nis turned on for your bucket and you can\ndo this by using the command gsutil\nversioning get along with gs colon\nforward slash forward slash with your\nbucket name and hit enter and you may be\nprompted with a message asking you to\nauthorize this api call you definitely\nwant to authorize and as expected\nversioning is not turned on on this\nbucket hence the return of suspended and\nso in order to turn versioning on we're\ngoing to use a similar command gsutil\nversioning and instead of get we're\ngoing to use set on gs colon forward\nslash forward slash and the bucket name\nand hit enter and versioning has been\nenabled and so if i run the command\ngsutil version in get again i'll get a\nresponse of enabled okay great now that\nwe have versioning enabled we can go\nahead with the next step which is to\ndelete one of the files in the bucket\nand so you can go ahead and select plaid\nbowtie.jpg\nand simply click on delete you can\nconfirm the deletion and the file has\nbeen deleted now technically the file\nhas not been deleted it is merely been\nconverted to a non-current version and\nso in order to check the current and\nnon-current versions i'm going to use\nthe command\ngsutil\nls minus a along with the bucket name of\ng s colon forward slash forward slash\nbow tie inc dash 2021 i'm gonna hit\nenter\nand as you can see here plaid bow tie\nstill shows up the ls minus a command is\na linux command to show all files\nincluding the hidden files and so what's\ndifferent about these files is right\nafter the dot text or dot jpg you will\nsee a hashtag number and this is the\ngeneration number and this determines\nthe version of each object and so what i\nwant to do now is bring back the\nnon-current version and make it current\nso i'm going to promote the non-current\nversion of plaid bowtie.jpg\nto the current version and so in order\nto do this i'm going to run the command\ngsutil and v for move along with the\nbucket of gs colon forward slash forward\nslash bowtie inc hyphen 2021 and the\nname of the file of plaid bow tie dot\njpeg along with the generation number\nand i'm going to copy it from the\ncurrently listed i'm going to paste it\nin and so now we need to put in the\ntarget which is going to be the same\nwithout the generation number and paste\nthat in then hit enter\nokay operation completed and so if i go\nup to the top right hand corner and\nclick on refresh i can see that now\nthere is a current version for plaid bow\ntie now just know that using the move\ncommand actually deletes the non-current\nversion and gives the new current\nversion a new generation number and so\nin order to verify this i'm going to\nquickly clear my screen and i'm going to\nrun the command gsutil ls minus a along\nwith the bucket name a bow tie inc dash\n2021\nand the generation number here is\ndifferent than that of the last now if i\nuse the cp or copy command it would\nleave the non-current version and create\na new version on top of that leaving two\nobjects with two different generation\nnumbers okay so with that step being\ndone you now want to log into your linux\ninstance and we're going to be doing\nsome versioning for file of bowties.text\nso i'm going to go ahead and clear my\nscreen again and i'm going to run the\ncommand gcloud compute ssh bowtie\ninstance which is the name of my\ninstance along with the zone flag dash\ndash zone of the zone us east 1b i'm\ngoing to hit enter\nand you should be prompted for the\npassphrase of your key\nand i'm in and so here you want to edit\nfile a bowties.txt to a different\nversion so you can go ahead and run the\ncommand sudo nano file a bow ties dot\ntext and hit enter and you should have\nlearning to tie a bow tie takes time and\nwhat you want to do is append version 2\nright at the end ctrl o to save enter to\nverify the file name to right and\ncontrol x to exit and so now we want to\ncopy file a bow ties dot text to your\ncurrent bucket mine being bow tie ink\ndash 2021 so i'm going to go ahead and\nrun the command gsutil cp the name of\nthe file which is file of bowties dot\ntext and the target which is going to be\nbowtie inc\n2021 and hit enter\nand it's copied the file to the bucket\nand so if i hit refresh in the console\nyou can see that there is only one\nversion of file of bowties.text and so\nto check on all the versions that i have\ni'm going to go back to my cloud shell\ni'm going to quickly clear my screen and\ni'm going to run the command gsutil ls\nminus a along with the target bucket\nhit enter and as you can see here there\nare now two versions of file of\nbowties.text and if i quickly open this\nup\ni'm gonna click on the url you can see\nhere that this is version two and so\nthis should be the latest generation of\nfile of bowties.txt that you edited over\nin your instance i'm going to close this\ntab now and so what i want to do now is\ni want to promote the non-current\nversion to be the current version in\nessence making version 2 the non-current\nversion and so i'm going to run the\ncommand gsutil cp and i'm going to take\nthe older generation number and i'm\ngoing to copy it and paste it here and\nthe target is going to be the same\nwithout the generation number and paste\nit and hit enter okay and the file has\nbeen copied over so i'm going to do a\nquick refresh in the console i'm going\nto drill down into file a bowties.txt\nand when i click on the url link it\nshould come up as version 1. and so this\nis a way to promote non-current versions\nto current versions using the gsutil\ncopy command or the gsutil move command\ni'm going to close on this tab now i'm\ngoing to quickly clear my screen and if\ni run the command gsutil ls minus a\nagain you can see that i have even more\nfiles and so these files and versions of\nfiles will eventually accumulate and\ncontinuously take up space along with\ncosting you money and so in order to\nmitigate this a good idea would be to\nput life cycle policies into place and\nso you're gonna go ahead now and add a\nlife cycle policy to the bucket and this\nwill help manage the ever-growing\naccumulation of files as more files are\nbeing added to the bucket and more\nversions are being produced something\nthat is very common that is seen in many\ndifferent environments and so we're\ngoing to go ahead and get this done in\nthe console so i'm going to close down\ncloud shell and i'm going to go back to\nthe main page of the bucket and under\nthe menu you can click on lifecycle and\nhere you'll be able to add the lifecycle\nrules and so here you're going to click\non add a rule and the first thing that\nyou're prompted to do is to select an\naction and so the first rule you're\ngoing to apply is to delete non-current\nobjects after seven days so you're gonna\nclick on delete object you're gonna be\nprompted with a warning gonna hit\ncontinue and you'll be prompted to\nselect object conditions and as\ndiscussed in an earlier lesson there are\nmany conditions to choose from and\nmultiple conditions can be selected so\nhere you're going to select days since\nbecoming non-current and in the empty\nfield you're going to type in 7. you can\nclick on continue and before you click\non create i wanted just to note that any\nlife cycle rule can take up to 24 hours\nto take effect so i'm going to click on\ncreate and here you can see the rule has\nbeen applied to delete objects after\nseven days when object becomes\nnon-current and so now that we added a\ndelete rule we're going to go ahead and\nadd another rule to move current files\nthat are not being used to a storage\nclass that can save the company money\nand so let's go ahead and create another\nlifecycle rule but this time to use this\nset storage class action and so the\nfiles that accumulate that have been\nthere for over 90 days you want to set\nthe storage class the cold line so this\nway it'll save you some money and so\nyou're going to click on add a rule\nyou're going to select set storage class\nto cold line and as a note here it says\narchive objects will not be changed to\ncold line so you can move forward with\nthe storage class but you can't move\nbackwards in other words i can't move\nfrom cold line to near line or archive\nthe cold line i can only move from near\nline to cold line or cold line to\narchive so i'm going to go ahead and\nclick continue for the object conditions\nyou want to select age and in the field\nyou want to enter 90 days and here you\nwant to hit continue and finally click\non create and so in order to actually\nsee these rules take effect like i said\nbefore it'll take up to 24 hours and so\nbefore we end this demo i wanted to show\nyou another way to edit a life cycle\npolicy by editing the json file itself\nso you can head on up to the top right\nand open up cloud shell i'm going to\nbring this down a little bit and you're\ngoing to run the command gsutil\nlifecycle get along with the bucket name\nand output it to a file called\nlifecycle.json and hit enter\nand no errors so that's a good sign next\ni'm going to run the command ls and as\nyou can see here the lifecycle.json file\nhas been written and so i'd like to edit\nthis file where it changes the set to\ncold line rule from 90 days to 120 days\nas tony bowtie's manager thinks that\nthey should keep the files a little bit\nlonger before sending it to coldline and\nso in order to edit this file you're\ngoing to run the command sudo nano\nalong with the name of the file of\nlifecycle.js you hit enter and it's\ngoing to be a long string but if you use\nyour arrow keys and move down and then\nback you'll see the set to cold line\nrule with the age of 90 days so i'm\ngoing to move over here and i'm going to\nedit this to 120 and i'm going to hit\nctrl o to save enter to verify file name\nto write and ctrl x to exit and just\nknow that you can also edit this file in\ncloud shell editor and so in order for\nme to put this lifecycle policy in place\ni need to set this as the new lifecycle\npolicy and so in order for me to do that\ni'm going to run the command gsutil\nlifecycle set along with the name of the\njson file which is\nlifecycle.json along with the bucket\nname and hit enter and it looks like it\nsaid it and i'm going to do quick\nrefresh in the console just to verify\nand success the rule has been changed\nfrom 90 days to 120 days congratulations\non completing this demo now a lot of\nwhat you've experienced here is more of\nwhat you will see in the architect exam\nas the cloud engineer exam focuses on\nmore of the high level theory of these\ncloud storage features\nbut i wanted to show you some real life\nscenarios and how to apply the theory\nthat was shown in previous lessons into\npractice and so just as a recap you set\nversioning on the current bucket that\nyou are working in and you deleted a\nfile and made it non-current you then\nbrought it back to be current again you\nthen edited a file on your instance and\ncopied it over to replace the current\nversion of that file in your bucket you\nthen promoted the non-current version as\nthe new one and moved into lifecycle\nrules where you created two separate\nrules you created a rule to delete files\nalong with the rule to set storage class\nafter a certain age of the file and the\nlast step you took was to copy the\nlifecycle policy to your cloud shell and\nedited that policy and set it to a newer\nedited version and so that pretty much\ncovers this demo on object versioning\nand lifecycle management congratulations\nagain on a job well done and so before\nyou go\nmake sure you delete all the resources\nyou've created for the past couple of\ndemos as you want to make sure that\nyou're not accumulating any unnecessary\ncosts and so i'm going to do a quick run\nthrough on deleting these resources and\nso i'm going to quickly close down cloud\nshell and i'm going to head on over to\nthe navigation menu go to compute engine\ni'm going to delete my instance and i'm\ngoing to head back on over to cloud\nstorage and delete the bucket there i'm\ngoing to confirm the deletion i'm going\nto click on delete and so that covers\nthe deletion of all the resources so you\ncan now mark this as complete and i'll\nsee you in the next one\nwelcome back and in this lesson i'm\ngoing to be covering cloud sql one of\ngoogle cloud's many database offerings\nthat offers reliable secure and scalable\nsql databases without having to worry\nabout the complexity to set it all up\nnow there's quite a bit to cover here so\nwith that being said let's dive in now\ncloud sql is a fully managed cloud\nnative relational database service that\noffers mysql postgres and sql server\nengines with built-in support for\nreplication cloud sql is a database as a\nservice offering from google where\ngoogle takes care of all the underlying\ninfrastructure for the database along\nwith the operating system and the\ndatabase software now because there are\na few different types of database\nofferings from google cloud sql was\ndesigned for low latency transactional\nand relational database workloads it's\nalso available in three different\nflavors of databases mysql postgres and\nthe newest edition is sql server and all\nof them support standard apis for\nconnectivity cloud sql offers\nreplication using different types of\nread replicas which i will get into a\nlittle bit later and offers capabilities\nfor high availability for continuous\naccess to your data cloud sql also\noffers backups in two different flavors\nand allows you to restore your database\nfrom these backups with the same amount\nof ease now along with your backups\ncomes point in time recovery for when\nyou want to restore a database from a\nspecific point in time cloud sql storage\nrelies on connected persistent disks in\nthe same zone that are available in\nregular hard disk drives or ssds that\ncurrently give you up to 30 terabytes of\nstorage capacity and because the same\ntechnologies lie in the background for\npersistent disks\nautomatic storage increase is available\nto resize your disks for more storage\ncloud sql also offers encryption at rest\nand in transit for securing data\nentering and leaving your instance and\nwhen it comes to costs you are billed\nfor cpu memory and storage of the\ninstance along with egress traffic as\nwell please be aware that there is a\nlicensing cost when it comes to windows\ninstances now cloud sql instances are\nnot available in the same instance types\nas compute engine and are only available\nin the shared core\nstandard and high memory cpu types and\nwhen you see them they will be clearly\nmarked with a db on the beginning of the\ncpu type you cannot customize these\ninstances like you can with compute\nengine and so memory will be pre-defined\nwhen choosing the instance type now\nstorage types for cloud sql are only\navailable in hard disk drives and ssds\nyou are able to size them according to\nyour needs and as stated earlier can be\nsized up to 30 terabytes in size and\nwhen entering the danger zone of having\na full disk you do have the option of\nenabling automatic storage increase so\nyou never have to worry about filling up\nyour disk before that 30 terabyte limit\nnow when it comes to connecting to your\ncloud sql instance you can configure it\nwith a public or private ip but know\nthat after configuring the instance with\na private ip it cannot be changed\nalthough connecting with the private ip\nis preferred when connecting from a\nclient on a resource with access to a\nvpc as well it is always best practice\nto use private i p addresses for any\ndatabase in your environment whenever\nyou can now moving on to authentication\noptions the recommended method to\nconnecting to your cloud sql instance is\nusing cloud sql proxy the cloud sql\nproxy allows you to authorize and secure\nyour connections using iam permissions\nunless using the cloud sql proxy\nconnections to an instance's public ip\naddress are only allowed if the\nconnection comes from an authorized\nnetwork authorized networks are ip\naddresses or ranges that the user has\nspecified as having permission to\nconnect once you are authorized you can\nconnect to your instance through\nexternal clients or applications and\neven other google cloud services like\ncompute engine gke app engine cloud\nfunctions and cloud run now i wanted to\nfocus a moment here on the recommended\nmethod for connecting to your instance\nwhich is cloud sql proxy now as\nmentioned before the cloud sql proxy\nallows you to authorize and secure your\nconnections using iam permissions the\nproxy validates connections using\ncredentials for a user or service\naccount and wrapping the connection in\nan ssl tls layer that is authorized for\na cloud sql instance using the cloud sql\nproxy is the recommended method for\nauthenticating connections to a cloud\nsql instance as it is the most secure\nthe client proxy is an open source\nlibrary distributed as an executable\nbinary and is available for linux macos\nand windows the client proxy acts as an\nintermediary server that listens for\nincoming connections wraps them in ssl\nor tls and then passes them to a cloud\nsql instance the cloud sql proxy handles\nauthentication with cloud sql providing\nsecure access to cloud sql instances\nwithout the need to manage allowed ip\naddresses or configure ssl connections\nas well this is also the best solution\nfor applications that hold ephemeral\neyepiece and while the proxy can listen\non any port\nit only creates outgoing connections to\nyour cloud sql instance on port 3307 now\nwhen it comes to database replication\nit's more than just copying your data\nfrom one database to another the primary\nreason for using replication is to scale\nthe use of data in a database without\ndegrading performance other reasons\ninclude migrating data between regions\nand platforms and from an on-premises\ndatabase to cloud sql you could also\npromote a replica if the original\ninstance becomes corrupted and i'll be\ngetting into promoting replicas a little\nbit later now when it comes to a cloud\nsql instance the instance that is\nreplicated is called a primary instance\nand the copies are called read replicas\nthe primary instance and read replicas\nall reside in cloud sql read replicas\nare read-only and you cannot write to\nthem the read replica processes queries\nread requests and analytics traffics\nthus reducing the load on the primary\ninstance read replicas can have more\ncpus in memory than the primary instance\nbut they cannot have any less and you\ncan have up to 10 read replicas per\nprimary instance and you can connect to\na replica directly using its connection\nname and ip address cloud sql supports\nthe following types of replicas\nread replicas cross region read replicas\nexternal read replicas and cloud sql\nreplicas when replicating from an\nexternal server now when it comes to\nread replicas you would use it to\noffload work from a cloud sql instance\nthe read replica is an exact copy of the\nprimary instance and data and other\nchanges on the primary instance are\nupdated in almost real time on the read\nreplica a read replica is created in a\ndifferent region from the primary\ninstance and you can create a cross\nregion read replica the same way as you\nwould create an in-region replica this\nimproves read performance by making\nreplicas available closer to your\napplication's region it also provides\nadditional disaster recovery capability\nto guard you against a regional failure\nit also lets you migrate data from one\nregion to another with minimum downtime\nand lastly when it comes to external\nread replicas these are external mysql\ninstances that replicate from a cloud\nsql primary instance\nfor example a mysql instance running on\ncompute engine is considered an external\ninstance and so just as a quick note\nhere before you can create a read\nreplica of a primary cloud sql instance\nthe instance must meet the following\nrequirements automated backups must be\nenabled binary logging must be enabled\nwhich requires point-in-time recovery to\nbe enabled and at least one backup must\nhave been created after binary logging\nwas enabled and so when you have read\nreplicas in your environment it gives\nyou the flexibility of promoting those\nreplicas if needed now promoting\nreplicas is a feature that can be used\nfor when your primary database becomes\ncorrupted or unreachable now you can\npromote an in-region read replica or\ncross-region re-replica depending on\nwhere you have your read replicas hosted\nso when you promote a read replica the\ninstance stops replication and converts\nthe instance to a standalone cloud sql\nprimary instance with read and write\ncapabilities please note that this\ncannot be undone and also note that when\nyour new primary instance has started\nyour other read replicas are not\ntransferred over from the old primary\ninstance you will need to reconnect your\nother read replicas to your new primary\ninstance and as you can see here\npromoting a replica is done manually and\nintentionally whereas high availability\nhas a standby instance that\nautomatically becomes the primary in\ncase of a failure horizontal outage now\nwhen it comes to promoting cross-region\nreplicas there are two common scenarios\nfor promotion\nregional migration which performs a\nplanned migration of a database to a\ndifferent region and disaster recovery\nand this is where you would fail over a\ndatabase to another region in the event\nthat the primary instances region\nbecomes unavailable both use cases\ninvolve setting up cross-region\nreplication and then promoting the\nreplica the main difference between them\nis whether the promotion of the replica\nis planned or unplanned now if you're\npromoting your replicas for a regional\nmigration you can use a cross region\nreplica to migrate your database to\nanother region with minimal downtime and\nthis is so you can create a replica in\nanother region wait until the\nreplication catches up promote it and\nthen direct your applications to the\nnewly promoted instance the steps\ninvolved in promotion are the same as\nfor promoting an in-region replica and\nso when you're promoting replicas for\ndisaster recovery cross-region replicas\ncan be used as part of this disaster\nrecovery procedure you can promote a\ncross-region replica to fail over to\nanother region should the primary\ninstances region become unavailable for\nan extended period of time so in this\nexample the entire u.s east 1 region has\ngone down yet the reed replica in the\neurope region is still up and running\nand although there may be a little bit\nmore latency for your customers in north\namerica i'm able to promote this read\nreplica connect it to the needed\nresources and get back to business now\nmoving along to high availability cloud\nsql offers aha capabilities out of the\nbox the aha configuration sometimes\ncalled a cluster provides data\nredundancy so a cloud sql instance\nconfigured for ha is also called a\nregional instance and is located in a\nprimary and secondary zone within the\nconfigured region within a regional\ninstance the configuration is made up of\na primary instance and a standby\ninstance and through synchronous\nreplication to each zone's persistent\ndisk all rights made to the primary\ninstance are also made to the standby\ninstance each second the primary\ninstance writes to a system database as\na heartbeat signal if multiple\nheartbeats aren't detected\nfailover is initiated and so if an\nha-configured instance becomes\nunresponsive cloud sql automatically\nswitches to serving data from the\nstandby instance and this is called a\nfailover in this example the primary\ninstance or zone fails and failover is\ninitiated so if the primary instance is\nunresponsive for approximately 60\nseconds or the zone containing the\nprimary instance experiences an outage\nfailover will initiate the standby\ninstance immediately starts serving data\nupon reconnection through a shared\nstatic ip address with the primary\ninstance and the standby instance now\nserves data from the secondary zone and\nnow when the primary instance is\navailable again a fail back will happen\nand this is when traffic will be\nredirected back to the primary instance\nand the standby instance will go back\ninto standby mode as well the regional\npersistent disk will pick up replication\nto the persistent disk in that same zone\nand with regards to billing an ha\nconfigured instance is charged at double\nthe price of a standalone instance\nand this includes cpu ram and storage\nalso note that the standby instance\ncannot be used for read queries and this\nis where it differs from read replicas\nas well a very important note here is\nthat automatic backups and point in time\nrecovery must be enabled for high\navailability and so the last topic that\ni wanted to touch on is backups\nand backups help you restore lost data\nto your cloud sql instance you can also\nrestore an instance that is having\nproblems from a backup you enable\nbackups for any instance that contains\nnecessary data backups protect your data\nfrom loss or damage enabling automated\nbackups along with binary logging is\nalso required for some operations such\nas clone and replica creation by default\ncloud sql stores backup data in two\nregions for redundancy one region can be\nthe same region that the instance is in\nand the other is a different region if\nthere are two regions in a continent the\nbackup data remains on the same\ncontinent cloud sql also lets you select\na custom location for your backup data\nand this is great if you need to comply\nwith data residency regulations for your\nbusiness now cloud sql performs two\ntypes of backups on-demand backups and\nautomated backups now with on-demand\nbackups you can create a backup at any\ntime and this is useful for when you're\nmaking risky changes that may go\nsideways you can always create on-demand\nbackups for any instance whether the\ninstance has automatic backups enabled\nor not and these backups persist until\nyou delete them or until their instance\nis deleted now when it comes to\nautomated backups these use a four hour\nbackup window these backups start during\nthe backup window and just as a note\nwhen possible you should schedule your\nbackups when your instance has the least\nactivity automated backups occur every\nday when your instance is running at any\ntime in the 36 hour window and by\ndefault up to seven most recent backups\nare retained you can also configure how\nmany automated backups to retain from 1\nto\n365. now i've touched on this topic many\ntimes in this lesson and i wanted to\nhighlight it for just a second and this\nis point-in-time recovery so\npoint-in-time recovery helps you recover\nan instance to a specific point in time\nfor example if an error causes a loss of\ndata you can recover a database to its\nstate before the error happened a point\nin time recovery always creates a new\ninstance and you cannot perform a point\nin time recovery to an existing instance\nand point in time recovery is enabled by\ndefault when you create a new cloud sql\ninstance and so when it comes to billing\nby default cloud sql retains seven days\nof automated backups plus all on-demand\nbackups for an instance and so i know\nthere is a lot to retain in this lesson\non cloud sql but be sure that these\nconcepts and knowing the difference\nbetween them as well as when to use each\nfeature will be a sure help in the exam\nalong with giving you the knowledge you\nneed to use cloud sql in your role as a\ncloud engineer and so that's pretty much\nall i had to cover when it comes to\ncloud sql so you can now mark this\nlesson as complete and let's move on to\nthe next one\nwelcome back and in this lesson i wanted\nto touch on google cloud's global\nrelational database called cloud spanner\nnow cloud spanner is the same in some\nways as cloud sql when it comes to asset\ntransactions sql querying and strong\nconsistency but differs in the way that\ndata is handled under the hood than\ncloud sql and so knowing this database\nonly at a high level is needed for the\nexam but i'll be going into a bit more\ndetail just to give you a better\nunderstanding on how it works so with\nthat being said let's dive in now cloud\nspanner is a fully managed relational\ndatabase service that is both strongly\nconsistent and horizontally scalable\ncloud spanner is another database as a\nservice offering from google and so it\nstrips away all the headaches of setting\nup and maintaining the infrastructure\nand software needed to run your database\nin the cloud now being strongly\nconsistent in this context is when data\nwill get passed on to all the replicas\nas soon as a write request comes to one\nof the replicas of the database cloud\nspanner uses truetime a highly available\ndistributed atomic clock system that is\nprovided to applications on all google\nservers it applies a time stamp to every\ntransaction on commit and so\ntransactions in other regions are always\nexecuted sequentially cloud spanner can\ndistribute and manage data at a global\nscale and support globally consistent\nreads along with strongly consistent\ndistributed transactions now being fully\nmanaged cloud spanner handles any\nreplicas that are needed for\navailability of your data and optimizes\nperformance by automatically sharding\nthe data based on request load and size\nof the data part of why cloud spanner's\nhigh availability is due to its\nautomatic synchronous data replication\nbetween all replicas in independent\nzones cloud spanner scales horizontally\nautomatically within regions but it can\nalso scale across regions for workloads\nthat have higher availability\nrequirements making data available\nfaster to users at a global scale along\nwith node redundancy quietly added for\nevery node deployed in the instance and\nwhen you quickly add up all these\nfeatures of cloud spanner it's no wonder\nthat it's available to achieve five\nnines availability on a multi-regional\ninstance and four nines availability on\na regional instance cloud spanner is\nhighly secure and offers data layer\nencryption audit logging and iam\nintegration cloud spanner was designed\nto fit the needs of specific industries\nsuch as financial services\nad tech retail and global supply chain\nalong with gaming and pricing for cloud\nspanner comes in at 90 cents per node\nper hour with the cost of storage coming\nin at 30 cents per gigabyte per month\ndefinitely not cheap but the features\nare plentiful now this isn't in the exam\nbut i did want to take a moment to dive\ninto the architecture for a bit more\ncontext as to why this database is of a\ndifferent breed than the typical sql\ndatabase now to use cloud spanner you\nmust first create a cloud spanner\ninstance this instance is an allocation\nof resources that is used by cloud\nspanner databases created in that\ninstance instance creation includes two\nimportant choices the instance\nconfiguration and the node count and\nthese choices determine the location and\nthe amount of the instances cpu and\nmemory along with its storage resources\nyour configuration choice is permanent\nfor an instance and only the node count\ncan be changed later if needed an\ninstance configuration defines the\ngeographic placement and replication of\nthe database in that instance either\nregional or multi-region and please note\nthat when you choose a multi-zone\nconfiguration it allows you to replicate\nthe databases data not just in multiple\nzones but in multiple zones across\nmultiple regions and when it comes to\nthe node count this determines the\nnumber of nodes to allocate to that\ninstance these nodes allocate the amount\nof cpu memory and storage needed for\nyour instance to either increase\nthroughput or storage capacity there is\nno instance types to choose from like\ncloud sql and so when you need more\npower you simply add another node now\nfor any regional configuration cloud\nspanner maintains exactly three read\nwrite replicas each within a different\nzone in that region each read write\nreplica contains a full copy of your\noperational database that is able to\nserve rewrite and read only requests\ncloud spanner uses replicas in different\nzones so that if a single zone failure\noccurs your database remains available\nin a multi-region instance configuration\nthe instance is allotted a combination\nof four read write and read only\nreplicas and just as a note a three node\nconfiguration minimum is what is\nrecommended for production by google and\nas cloud spanner gets populated with\ndata\nsharding happens which is also known as\na split and cloud spanner creates\nreplicas of each database split to\nimprove performance and availability all\nof the data in a split is physically\nstored together in a replica and cloud\nspanner serves each replica out of an\nindependent failure zone and within each\nreplica set\none replica is elected to act as the\nleader leader replicas are responsible\nfor handling rights while any read write\nor read only replica can serve a read\nrequest without communicating with the\nleader and so this is the inner workings\nof cloud spanner at a high level and not\nmeant to confuse you but to give you a\nbetter context of how cloud spanner\nalthough it is a relational sql database\nis so different than its cloud sql\ncousin now before ending this lesson i\nwanted to touch on node performance for\na quick moment and so each cloud spanner\nnode can provide up to 10 000 queries\nper second or qps of reads or 2000 qps\nof writes each node provides up to two\nterabytes of storage and so if you need\nto scale up the serving and storage\nresources in your instance you add more\nnodes to that instance\nand remember as noted earlier that\nadding a node does not increase the\nnumber of replicas but rather increases\nthe resources each replica has in the\ninstance adding nodes gives each replica\nmore cpu and ram which increases the\nreplicas throughput and so if you're\nlooking to scale up automatically you\ncan scale the numbers of nodes in your\ninstance based on the cloud monitoring\nmetrics on cpu or storage utilization\nin conjunction with using cloud\nfunctions to trigger and so when you are\ndeciding on a relational database that\nprovides global distribution and\nhorizontally scalable that handles\ntransactional workloads in google cloud\ncloud spanner will always be the obvious\nchoice over cloud sql and so that's\npretty much all i have to cover when it\ncomes to this overview on cloud spanner\nso you can now mark this lesson as\ncomplete and let's move on to the next\none\n[Music]\nwelcome back and in this lesson we will\nbe going over the available nosql\ndatabases available in google cloud this\nlesson is meant to be another overview\njust to familiarize you with the nosql\ndatabase options as they show up in the\nexam this lesson is not meant to go in\ndepth on databases but an overview and\nwill give you a good understanding on\nwhat features are available for each\nand their use cases so with that being\nsaid let's dive in now there are four\nmanaged nosql databases available in\ngoogle cloud and i will be briefly going\nover them and i'll be starting this off\nby discussing bigtable\nnow cloud bigtable is a fully managed\nwide column nosql database designed for\nterabyte and petabyte scale workloads\nthat offers low latency and high\nthroughput bigtable is built for\nreal-time application serving workloads\nas well as large-scale analytical\nworkloads cloud bigtable is a regional\nservice and if using replication a copy\nis stored in a different zone or region\nfor durability cloud bigtable is\ndesigned for storing very large amounts\nof single keyed data while still being\nable to provide very low latency and\nbecause throughput scales linearly you\ncan increase the queries per second by\nadding more bigtable nodes when you need\nthem bigtable throughput can be\ndynamically adjusted by adding or\nremoving cluster nodes without\nrestarting meaning you can increase the\nsize of a bigtable cluster for just a\nfew hours to handle a large load and\nthen reduce the cluster size again and\ndo it all without any downtime bigtable\nis an ideal source\nfor map reduce operations and integrates\neasily with all the existing big data\ntools such as hadoop dataproc and\ndataflow along with apache hbase and\nwhen it comes to price bigtable is\ndefinitely no joke pricing for bigtable\nstarts at 65 cents per hour per node\nor over 450 dollars a month for a one\nnode configuration with no data now you\ncan use bigtable to store and query all\nof the following types of data such as\ncpu and memory usage over time for\nmultiple servers marketing data such as\npurchase histories and customer\npreferences financial data such as\ntransaction histories stock prices and\ncurrency exchange rates iot data or\ninternet of things such as usage reports\nfrom energy meters and home appliances\nand lastly graph data such as\ninformation about how users are\nconnected to one another cloud bigtable\nexcels as a storage engine as it can\nbatch mapreduce operations\nstream processing or analytics as well\nas being used for storage for machine\nlearning applications now moving on to\nthe next nosql database is cloud\ndatastore and cloud datastore is a\nhighly scalable nosql document database\nbuilt for automatic scaling high\nperformance and ease of application\ndevelopment datastore is redundant\nwithin your location\nto minimize impact from points of\nfailures and therefore can offer high\navailability of reads and rights cloud\ndatastore can execute atomic\ntransactions where a set of operations\neither all succeed or none occur cloud\ndatastore uses a distributed\narchitecture to automatically manage\nscaling so you never have to worry about\nscaling manually as well what's very\nunique about cloud datastore is that it\nhas a sql-like query language that's\navailable called gql also known as gql\ngql maps roughly to sql however a sql\nrole column lookup is limited to a\nsingle value whereas in gql a property\ncan be a multiple value property this\nconsistency model allows an application\nto handle large amounts of data and\nusers while still being able to deliver\na great user experience data is\nautomatically encrypted before it is\nwritten to disk and automatically\ndecrypted when read by an authorized\nuser now this does not reflect in the\nexam as of yet and i will be updating\nthis lesson if and when it happens but\nfirestore is the newest version of\ndatastore and introduces several\nimprovements over datastore existing\ndatastore users can access these\nimprovements by creating a new firestore\ndatabase instance in datastore mode and\nin the near future all existing\ndatastore databases will be\nautomatically upgraded to firestore in\ndatastore mode now moving right along\ncloud datastore holds a really cool\nfeature for developers that's called\ndatastore emulator and this provides\nlocal emulation of the production\ndatastore environment so that you can\nuse to develop and test your application\nlocally this is a component of the\ngoogle cloud sdks gcloud tool and can be\ninstalled by using the gcloud components\ninstall command that we discussed\nearlier on in the course and so moving\non to use cases for datastore\nit is ideal for applications that rely\non highly available structured data at\nscale you can use datastore for things\nlike product catalogs that provide\nreal-time inventory and product details\nfor a retailer user profiles that\ndeliver a customized experience based on\nthe user's past activities and\npreferences\nas well as transactions based on asset\nproperties for example transferring\nfunds from one bank account to another\nnext up we have firestore for firebase\nand so this is a flexible scalable nosql\ncloud database to store and sync data\nfor client and server side development\nand is available for native c plus unity\nnode.js java go and python sdks\nin addition to rest and rpc apis pretty\nmuch covering the gamut of most major\nprogramming languages now with cloud\nfirestore you store data in documents\nthat contain fields mapping to values\nthese documents are stored in\ncollections which are containers for\nyour documents that you can use to\norganize your data and build queries\ndocuments support many different data\ntypes as well you can also create sub\ncollections within documents and build\nhierarchical data structures cloud\nfirestore is serverless with absolutely\nno servers to manage update or maintain\nand with automatic multi-region\nreplication and strong consistency\ngoogle is able to hold\na five nines availability guarantee and\nso when it comes to querying in cloud\nfirestore it is expressive efficient and\nflexible you can create shallow queries\nto retrieve data at the document level\nwithout needing to retrieve the entire\ncollection or any nested subcollections\ncloud firestore uses data\nsynchronization to update data in real\ntime for any connected device as well it\nalso caches data that your application\nis actively using so that the\napplication can write read listen to and\nquery data even if the device is offline\nwhen the device comes back online cloud\nfirestore synchronizes any local changes\nback to cloud firestore you can also\nsecure your data in cloud firestore with\nfirebase authentication and cloud\nfirestore security rules for android ios\nand javascript or you can use iam for\nserver side languages and when it comes\nto costs firestore falls into the always\navailable free tier where you can use\none database holding five gigabytes or\nif you need more you can move into their\npaid option now firebase also has\nanother database sharing similar\nfeatures like having no servers to\ndeploy and maintain real-time updates\nalong with the free tier in this\ndatabase is called real time database\nand is used for more basic querying\nsimple data structure and keeping things\nto one database\nit's something i like to call firestore\nlite real time database does not show up\nin the exam but i wanted to bring it to\nlight as it is part of the firebase\nfamily just know that you can use both\ndatabases within the same firebase\napplication or project as both can store\nthe same types of data client libraries\nwork in a similar manner and both hold\nreal-time updates now although firebase\nis a development platform and not a\ndatabase service i wanted to give it a\nquick mention for those of you who are\nunfamiliar with the tie-in to firestore\nwith firebase firebase is a mobile\napplication development platform that\nprovides tools and cloud services to\nhelp enable developers to develop\napplications faster and more easily and\nsince it ties in nicely with firestore\nit becomes the perfect platform for\nmobile application development okay so\nmoving on to our last nosql database is\nmemorystore and memorystore is a fully\nmanaged service from google cloud for\neither redis or memcached in memory\ndatastore to build application caches\nand this is a common service used in\nmany production environments\nspecifically when the need for caching\narises memory store automates the\nadministration tasks for redis and\nmemcached like enabling high\navailability failover patching and\nmonitoring so you don't have to and when\nit comes to memory store for redis\ninstances in the standard tier these are\nreplicated across zones\nmonitored for health and have fast\nautomatic failover standard tier\ninstances also provide an sla of three\nnines availability memory store for\nredis also provides the ability to scale\ninstant sizes seamlessly so that you can\nstart small and increase the size of the\ninstance as needed memory store is\nprotected from the internet using vpc\nnetworks and private ip and also comes\nwith iam integration systems are\nmonitored around the clock ensuring that\nyour data is protected at all times and\nknow that the versions are always kept\nup to date with the latest critical\npatches ensuring your instances are\nsecure now when it comes to use cases of\ncourse the first thing you will see is\ncaching and this is the main reason to\nuse memory store as it provides low\nlatency access and high throughput for\nheavily accessed data compared to\naccessing the data from a disk common\nexamples of caching is session\nmanagement frequently accessed queries\nscripts or pages so when using memory\nstore for leaderboards and gaming this\nis a common use case in the gaming\nindustry as well as using it for player\nprofiles memory store is also a perfect\nsolution for stream processing combined\nwith data flow memory store for redis\nprovides a scalable fast in memory store\nfor storing intermediate data that\nthousands of clients can access with\nvery low latency and so when it comes to\nnosql databases these are all the\navailable options on google cloud and as\ni said before it will only show up on\nthe exam at merely a high level and so\nknowing what each of these databases are\nused for\nwill be a huge benefit along with being\nan entry to diving deeper into possibly\nusing these services within your\nday-to-day job as a cloud engineer and\nso that's pretty much all i wanted to\ncover when it comes to nosql databases\navailable in google cloud so you can now\nmark this lesson as complete and let's\nmove on to the next one\n[Music]\nwelcome back and in this lesson we'll be\ngoing over the big data ecosystem in an\noverview just to familiarize you with\nthe services that are available in\ngoogle cloud and are the services that\nwill show up in the exam this lesson is\nnot meant to go in depth but is an\noverview and will give you a good\nunderstanding on what these services can\ndo and how they all work together to\nmake sense of big data as a whole\nso getting right into it i wanted to\nfirst ask the question what is big data\ni mean many people talk about it but\nwhat is it really well big data refers\nto massive amounts of data that would\ntypically be too expensive to store\nmanage and analyze using traditional\ndatabase systems either relational or\nmonolithic as the amount of data that we\nhave been seeing over the past few years\nhas started to increase these systems\nhave become very inefficient because of\ntheir lack of flexibility for storing\nunstructured data such as images text or\nvideo as well as accommodating high\nvelocity or real-time data or scaling to\nsupport very large\npetabyte scale data volumes for this\nreason the past few years has seen the\nmainstream adoption of new approaches to\nmanaging and processing big data\nincluding apache hadoop and nosql\ndatabase systems however those options\noften prove to be complex to deploy\nmanage and use in an on-premises\nsituation\nnow the ability to consistently get\nbusiness value from data\nfast and efficiently is now becoming the\nde facto of successful organizations\nacross every industry the more data a\ncompany has access to the more business\ninsights and business value they're able\nto achieve\nlike gain useful insights increase\nrevenue\nget or retain customers and even improve\noperations and because machine learning\nmodels get more efficient as they are\ntrained with more data machine learning\nand big data are highly complementary\nall in all big data brings some really\ngreat value to the table that is\nimpossible for any organization to turn\ndown and so now that we've gone through\nthat overview of what big data is i\nwanted to dive into some shorter\noverviews of the services available for\nthe big data ecosystem on google cloud\nand so the first service that i'd like\nto start with is bigquery now bigquery\nis a fully managed serverless data\nwarehouse that enables scalable analysis\nover petabytes of data this service\nsupports querying using sql and holds\nbuilt-in machine learning capabilities\nyou start by ingesting data into\nbigquery and then you are able to take\nadvantage of all the power it provides\nso big data would ingest that data by\ndoing a batch upload or by streaming it\nin real time and you can use any of the\ncurrently available google cloud\nservices to load data into bigquery you\ncan take a manual batch ingestion\napproach\nor stream using pub sub etl data and\nwith bigquery data transfer service you\ncan automatically transfer data from\nexternal google data sources and partner\nsas applications to bigquery on a\nscheduled and fully managed basis and\nthe best part is batch and export is\nfree bigquery's high-speed streaming api\nprovides an incredible foundation for\nreal-time analytics making business data\nimmediately available for analysis and\nyou can also leverage pub sub and data\nflow to stream data into bigquery\nbigquery transparently and automatically\nprovides highly durable replicated\nstorage in multiple locations for high\navailability as well as being able to\nachieve easy resource bigquery keeps a\nseven day history of changes in case\nsomething were to go wrong bigquery\nsupports standard sql querying which\nreduces the need for code rewrites you\ncan simply use it as you would for\nquerying any other sql compliant\ndatabase and with dataproc and dataflow\nbigquery provides integration with the\napache big data ecosystem allowing\nexisting hadoop spark and beam workloads\nto read or write data directly from\nbigquery using the storage api bigquery\nalso makes it very easy to access this\ndata by using the cloud console using\nthe bq command line tool or making calls\nto the bigquery rest api using a variety\nof client libraries such as java.net or\npython there are also a variety of\nthird-party tools that you can use to\ninteract with bigquery when visualizing\nthe data or loading the data bigquery\nprovides strong security and governance\ncontrols with fine-grained controls\nthrough integration with identity and\naccess management bigquery gives you the\noption of geographic data control\nwithout the headaches of setting up and\nmanaging clusters and other computing\nresources in different zones and regions\nbigquery also provides fine grain\nidentity and access management and rest\nassured that your data is always\nencrypted at rest and in transit now the\nway that bigquery calculates billing\ncharges is by queries and by storage\nstoring data in bigquery is comparable\nin price with storing data in cloud\nstorage which makes it an easy decision\nfor storing data in bigquery there is no\nupper limit to the amount of data that\ncan be stored in bigquery so if tables\nare not edited for 90 days the price of\nstorage for that table drops by 50\npercent query costs are also available\nas on-demand and flat rate pricing and\nwhen it comes to on-demand pricing you\nare only charged for bytes read not\nbytes returned in the end bigquery\nscales seamlessly to store and analyze\npetabytes to exabytes of data with ease\nnow there are so many more features to\nlist but if you are interested feel free\nto dive into the other features with the\nsupplied link in the lesson text now\nmoving on to the next service is pub sub\nand pub sub is a fully managed real-time\nmessaging service that allows you to\nsend and receive messages between\nindependent applications it acts as\nmessaging oriented middleware or event\ningestion and delivery for streaming\nanalytics pipelines and so a publisher\napplication creates and send messages to\na topic subscriber applications create a\nsubscription to a topic and receives\nmessages from it and so i wanted to take\na moment to show you exactly how it\nworks\nso first the publisher creates messages\nand sends them to the messaging service\non a specified topic a topic is a named\nentity that represents a feed of\nmessages a publisher application creates\na topic in the pub sub service and sends\nmessages to that topic a message\ncontains a payload and optional\nattributes that describe the content the\nservice as a whole ensures that\npublished messages are retained on\nbehalf of subscriptions and so a\npublished message is retained for a\nsubscription in a message queue shown\nhere as message storage until it is\nacknowledged by any subscriber consuming\nmessages from that subscription pub sub\nthen forwards messages from a topic to\nall of its subscriptions individually a\nsubscriber then receives messages either\nby pub sub pushing them to the\nsubscriber's chosen endpoint or by the\nsubscriber pulling them from the service\nthe subscriber then sends an\nacknowledgement to the pub sub service\nfor each received message the service\nthen removes acknowledged messages from\nthe subscriptions message queue and some\nof the use cases for pub sub is\nbalancing large task queues distributing\nevent notifications and real-time data\nstreaming from various sources and so\nthe next service that i wanted to get\ninto is composer now composer is a\nmanaged workflow orchestration service\nthat is built on apache airflow this is\na workflow automation tool for\ndevelopers that's based on the open\nsource apache airflow project similar to\nan on-premises deployment cloud composer\ndeploys multiple components to run\nairflow in the cloud airflow is a\nplatform\ncreated by the community to\nprogrammatically author schedule and\nmonitor workflows the airflow scheduler\nas you see here executes the tasks on an\narray of workers while following the\nspecified dependencies and storing the\ndata in a database and having a ui\ncomponent for easy management now\nbreaking down these workflows for just a\nsec in data analytics a workflow\nrepresents a series of tasks for\ningesting transforming analyzing or\nutilizing data in airflow workflows are\ncreated using dags which are a\ncollection of tasks that you want to\nschedule and run\nand organizes these tasks to ensure that\neach task is executed at the right time\nin the right order or with the right\nissue handling now in order to run the\nspecialized workflows\nprovision environments are needed and so\ncomposer deploys these self-contained\nenvironments on google kubernetes engine\nthat work with other google cloud\nservices using connectors built into\nairflow the beauty of composer is that\nyou can create one or more of these\nenvironments in a single google cloud\nproject using any supported region\nwithout having to do all the heavy\nlifting of creating a full-blown apache\nairflow environment now when it comes to\ndata flow dataflow is a serverless fully\nmanaged processing service for executing\napache beam pipelines for batch and\nreal-time data streaming the apache beam\nsdk is an open source programming model\nthat enables you to develop both batch\nand streaming pipelines using one of the\napache beam sdks you build a program\nthat defines the pipeline then one of\napache beam's supported distributed\nprocessing back-ends such as data flow\nexecutes that pipeline the data flow\nservice then takes care of all the\nlow-level details like coordinating\nindividual workers sharding data sets\nauto scaling and exactly once processing\nnow in its simplest form google cloud\ndata flow reads the data from a source\ntransforms it and then writes the data\nback to a sink now getting a bit more\ngranular with how this pipeline works\ndata flow reads the data presented from\na data source\nonce the data has been read it is put\ntogether into a collection of data sets\ncalled a p collection and this allows\nthe data to be read distributed and\nprocessed across multiple machines now\nat each step in which the data is\ntransformed a new p collection is\ncreated and once the final collection\nhas been created it is written to async\nand this is the full pipeline of how\ndata goes from source to sync this\npipeline within data flow is called a\njob and finally here is a high-level\noverview of what a data flow job would\nlook like when you involve other\nservices within google cloud and put\ntogether in an end-to-end solution from\nretrieving the data to visualizing it\nand finally when it comes to pricing\ndata flow jobs are billed in per second\nincrements so you're only charged for\nwhen you are processing your data now\nmoving on to data proc this is a fast\nand easy way to run spark hadoop hive or\npig on google cloud in an on-premises\nenvironment it takes 5 to 30 minutes to\ncreate spark and hadoop clusters data\nproc clusters take 90 seconds or less on\naverage to be built in google cloud\ndataproc has built-in integration with\nother google cloud platform services and\nuse spark and hadoop clusters without\nany admin assistance so when you're done\nwith the cluster you can simply turn it\noff so you don't spend money on an idle\ncluster as well there's no need to worry\nabout data loss because data proc is\nintegrated with cloud storage bigquery\nand cloud bigtable the great thing about\ndataproc is you don't need to learn new\ntools or apis to use it\nspark hadoop pig and hive are all\nsupported and frequently updated and\nwhen it comes to pricing you are billed\nat one cent per vcpu in your cluster per\nhour on top of the other resources you\nuse you also have the flexibility of\nusing preemptable instances for even\nlower compute cost now although cloud\ndata proc and cloud data flow can both\nbe used to implement etl data\nwarehousing solutions they each have\ntheir strengths and weaknesses and so i\nwanted to take a quick moment to point\nthem out now with dataproc you can\neasily spin up clusters through the\nconsole the sdk or the api and turn it\noff when you don't need it with dataflow\nit is serverless and fully managed so\nthere are never any servers to worry\nabout and when it comes to having any\ndependencies to tools in the hadoop or\nspark ecosystem data proc would be the\nway to go but if you're looking to make\nyour jobs more portable across different\nexecution engines apache beam allows you\nto do this and is only available on data\nflow moving on to the next service is\ncloud data lab now cloud data lab is an\ninteractive developer tool created to\nexplore analyze transform and visualize\ndata and build machine learning models\nfrom your data data lab uses open\nsourced jupyter notebooks a well-known\nformat used in the world of data science\nit runs on compute engine and connects\nto multiple cloud services easily so you\ncan focus on your data science tasks it\nalso integrates with all of the google\nservices that help you simplify data\nprocessing like bigquery and cloud\nstorage cloud data lab is packaged as a\ncontainer and run in a vm instance cloud\ndata lab uses notebooks instead of text\nfiles containing code notebooks bring\ntogether code documentation written as\nmarkdown and the results of code\nexecution whether it's text image or\nhtml or javascript like a code editor or\nide notebooks help you write code and\nthey allow you to execute code in an\ninteractive and iterative manner\nrendering the results alongside the code\ncloud data lab notebooks can be stored\nin google cloud source repository this\ngit repository is cloned onto persistent\ndisk when attached to the vm now when it\ncomes to prepping your data before\nconsumption whether it be data cleansing\ncleaning prepping or alteration this is\nwhere data prep hits it out of the park\ndataprep is a serverless intelligent\ndata service for visually exploring\ncleaning and preparing structured and\nunstructured data for analysis reporting\nand machine learning it automatically\ndetects schemas data types possible\njoins and anomalies such as missing\nvalues outliers and duplicates so you\ndon't have to the architecture that i'm\nabout to show you is how data prep\nshines the raw data that's available\nfrom various different sources is\ningested into cloud data prep to clean\nand prepare the data data prep then\nsends the data off to cloud data flow to\nrefine that data and then sent off to\ncloud storage or bigquery for storage\nbefore being analyzed by one of the many\navailable bi tools now these big data\nservices are used by many data analysts\nin the field and it's great to know what\nservices that can be used to help\nprocess the data needed for their\nspecific job as well for the exam you\nonly need to know these services at a\nhigh level and not to know them in depth\nbut if you seem interested in diving\ninto any of these services to know more\nabout them i highly encourage you to\ndive in after the course and really take\na look at them and that's pretty much\nall i have to cover in this lesson on\nthe services that are available for the\nbig data ecosystem in google cloud so\nyou can now mark this lesson as complete\nand let's move on to the next one\n[Music]\nwelcome back\nthis lesson is going to be based on the\nfoundation of machine learning i'm going\nto go over what machine learning is what\nit can do for us the machine learning\necosystem on google cloud\nand hopefully answer any questions along\nthe way this lesson will be a high level\noverview of the services available on\ngoogle cloud yet these services that are\navailable are a need to know as they\ncome up in the exam and hopefully will\ngive you some really cool ideas on the\npossibilities of building something\ntruly fantastic on google cloud so what\nis machine learning\nwell machine learning is functionality\nthat helps enable software to perform\ntasks without any explicit programming\nor rules traditionally considered a\nsubcategory of artificial intelligence\nmachine learning involves statistical\ntechniques such as deep learning also\nknown as neural networks that are\ninspired by theories about how the human\nbrain processes information it is\ntrained to recognize patterns in\ncollected data using algorithmic models\nand this collected data includes video\nimages speech or text and because\nmachine learning is very expensive to\nrun on-premises\nis an efficient place\nfor machine learning due to the use of\nmassive computation at scale\nand as explained before machine learning\nis always better with big data so now i\nwanted to touch on what can machine\nlearning do for us\nwell it can categorize images such as\nphotos faces or satellite imagery\nit can look for keywords in text\ndocuments or emails\nit can flag potentially fraudulent\ntransactions when it comes to credit\ncards or debit cards it can enable\nsoftware to respond accurately to voice\ncommands it can also translate languages\nin text or audio and these are just some\nof the common functions that machine\nlearning can do for us so getting into\ngoogle's machine learning platform\nitself machine learning has been a\ncornerstone of google's internal systems\nfor years primarily because their need\nto automate data-driven systems on a\nmassive scale\nand doing this has provided unique\ninsight into the right techniques\ninfrastructure and frameworks that help\ntheir customers get optimal value out of\nmachine learning the originally\ndeveloped open source framework for use\ninside of google\ncalled tensorflow\nis now the standard in the data science\ncommunity in addition to heavily\ncontributing to the academic and open\nsource communities\ngoogle's machine learning researchers\nhelped bring that functionality into\ngoogle products such as g suite search\nand photos in addition to google's\ninternal operations when it comes to\ndata center automation\nnow here is an overview of all the\nmachine learning services that we will\nbe covering and that you will need to\nknow\nonly at a high level for the exam and\nwe'll start off with the site api\nservices\nstarting with the vision api\nthe vision api offers powerful\npre-trained machine learning models\nthat allow you to assign labels to\nimages\nand quickly classify them into millions\nof pre-defined categories\nvision api\ncan read printed and handwritten text it\ncan detect objects and faces\nand build metadata into an image catalog\nof your choice now when it comes to\nvideo intelligence\nit has pre-trained machine learning\nmodels that automatically recognizes\nmore than 20 000 objects\nplaces and actions in stored and\nstreaming video you can gain insights\nfrom video in near real time using the\nvideo intelligence streaming video apis\nand trigger events based on objects\ndetected you can easily search a video\ncatalog the same way you search text\ndocuments and extract metadata that can\nbe used to index organize and search\nvideo content\nnow moving on to the language apis\nwe start off with the natural language\napi and this uses machine learning to\nreveal the structure and meaning of text\nyou can extract information about people\nplaces and events\nand better understand social media\nsentiment and customer conversations\nnatural language enables you to analyze\ntext and also integrate it with your\ndocument storage on cloud storage now\nwith the translation api it enables you\nto dynamically translate between\nlanguages using google's pre-trained or\ncustom machine learning models\ntranslation api\ninstantly translates text into more than\n100 languages for your website and apps\nwith optional customization features\nfollowing another grouping of machine\nlearning is the conversation apis first\nup we have dialog flow dialog flow is a\nnatural language understanding platform\nthat makes it easy to design and\nintegrate a conversational user\ninterface into your application or\ndevice it could be a mobile app a web\napplication a bot or an interactive\nvoice response system using dialogflow\nyou can provide new and engaging ways\nfor users to interact with your product\ndialogflow can analyze multiple types of\ninput from your customers\nincluding text or audio inputs\nlike from a phone or voice recording and\nit can also respond to your customers in\na couple of ways either through text or\nwith synthetic speech now with the\nspeech-to-text api this api accurately\nconverts speech into text it can\ntranscribe content with accurate\ncaptions and deliver better user\nexperience in products through voice\ncommands going the other way from text\nto speech this api enables developers to\nsynthesize natural sounding speech with\nover a hundred different voices\navailable in multiple languages and\nvariants text to speech\nallows you to create lifelike\ninteractions with their users across\nmany applications and devices and to\nfinish off our machine learning segment\ni wanted to touch on auto ml automl is a\nsuite of machine learning products that\nenables developers with very limited\nmachine learning expertise\nto train high quality models specific to\ntheir business needs in other words\nusing automl allows making deep learning\neasier to use and relies on google's\nstate-of-the-art transfer learning and\nneural architecture search technology so\nyou can now generate high quality\ntraining data and be able to deploy new\nmodels based on your data in minutes\nautoml is available for vision\nvideo intelligence translation\nnatural language tables\ninference and recommendation apis\nnow i know this has been a lot to cover\nfor this machine learning lesson and the\necosystem around it but is a necessity\nfor the exam and will also help you\nbuild really cool products when it comes\nto your role as an engineer again all\nthe services that i have discussed in\nthis lesson should be known at a high\nlevel only although my recommendation\nwould be to dive deeper into these\nservices by checking out the links in\nthe lesson text below and having some\nfun with these products getting to know\nthese services will really help up your\ngame when it comes to getting to know\nthese services a little bit more in\ndepth and will really help you gain more\nmomentum when it comes to building any\napplications or applying them to any\ncurrently running applications i\npersonally found it extremely valuable\nand really cemented my knowledge when it\ncame to machine learning i also had a\nton of fun doing it and so that's all i\nhave for this lesson on machine learning\nso you can now mark this lesson as\ncomplete and let's move on to the next\none\n[Music]\nwelcome back and in this lesson we'll be\ndiving into a suite of tools used on the\ngoogle cloud platform that allow you to\noperate monitor and troubleshoot your\nenvironment known as operation suite and\npreviously known as stackdriver this\nlesson will be mostly conceptual and\ngear more towards what the suite of\ntools do as it plays a big part not only\nin the exam but for the needs of gaining\ninsight from all the resources that\nexist in your environment now there are\na few tools to cover here so with that\nbeing said let's dive in\nnow the operation suite is a suite of\ntools for logging monitoring and\napplication diagnostics\noperation suite ingests this data and\ngenerates insights using dashboards\ncharts and alerts this suite of tools\nare available for both gcp and aws you\ncan connect to aws using an aws role and\na gcp service account you can also\nmonitor vms with specific agents that\nagain both run on gcp for compute engine\nand aws ec2 operation suite also allows\nthe added functionality of monitoring\nany applications that's running on those\nvms operation suite is also available\nfor any on-premises infrastructure or\nhybrid cloud environments operation\nsuite has a native integration within\ngcp out of the box so there's no real\nconfigurations that you need to do and\nintegrates with almost all the resources\non google cloud such as the previously\nmentioned compute engine gke app engine\nand bigquery and you can find and fix\nissues faster due to the many different\ntools an operation suite can reduce\ndowntime with real-time alerting you can\nalso find support from a growing partner\necosystem of technology integration\ntools to expand your operations security\nand compliance capabilities now the\noperation suite comprises of six\navailable products that covers the gamut\nof all the available tools you will need\nthat allows you to monitor troubleshoot\nand improve application performance on\nyour google cloud environment and i will\nbe going over these products in a bit of\ndetail starting with monitoring now\ncloud monitoring collects measurements\nor metrics to help you understand how\nyour applications and system services\nare performing giving you the\ninformation about the source of the\nmeasurements time stamped values and\ninformation of those values that can be\nbroken down through time series data\ncloud monitoring can then take the data\nprovided and use pre-defined dashboards\nthat require no setup or configuration\neffort cloud monitoring also gives you\nthe flexibility to create custom\ndashboards that display the content you\nselect you can use the widgets available\nor you can install a dashboard\nconfiguration that is stored in github\nnow in order for you to start using\ncloud monitoring you need to configure a\nworkspace\nnow workspaces organize monitoring\ninformation in cloud monitoring this is\na single pane of glass where you can\nview everything that you're monitoring\nin your environment it is also best\npractice to use a multi-project\nworkspace so you can monitor multiple\nprojects from a single pane of glass now\nas i mentioned earlier cloud monitoring\nhas an agent and this gathers system and\napplication metrics from your vm and\nsends them to cloud monitoring you can\nmonitor your vms without the agent but\nyou will only get specific metrics such\nas cpu\ndisk traffic network traffic and uptime\nusing the agent is optional but is\nrecommended by google and with the agent\nit allows you to monitor many\nthird-party applications and just as a\nnote cloud logging has an agent as well\nand works well together with cloud\nmonitoring to create visualize and alert\non metrics based on log data but more on\nthat a little bit later cloud monitoring\nis also available for gke and this will\nallow you to monitor your clusters as it\nmanages the monitoring and logging\ntogether and this will monitor clusters\ninfrastructure its workloads and\nservices as well as your nodes pods and\ncontainers so when it comes to alerting\nthis is defined by policies and\nconditions so an a learning policy\ndefines the conditions under which a\nservice is considered unhealthy when\nthese conditions are met the policy is\ntriggered and it opens a new incident\nand sends off a notification a policy\nbelongs to an individual workspace and\neach workspace can contain up to 500\npolicies now conditions determine when\nan alerting policy is triggered so all\nconditions watch for three separate\nthings the first one is a metric the\nsecond one is a behavior in some way and\nthe third one is for a period of time\ndescribing a condition includes a metric\nto be measured and a test for\ndetermining when the metric reaches a\nstate that you want to know about so\nwhen an alert is triggered you could be\nnotified using notification channels\nsuch as email\nsms\nas well as third party tools such as\npagerduty and slack now moving on to\ncloud logging cloud logging is a central\nrepository for log data from multiple\nsources and as described earlier logging\ncan come not just from google but with\naws as well as on-premises environments\ncloud logging handles real-time log\nmanagement and analysis and has tight\nintegration with cloud monitoring it\ncollects platform system and application\nlogs and you also have the option of\nexporting logs to other sources such as\nlong-term storage like cloud storage or\nfor analysis like bigquery you can also\nexport to third-party tools as well now\ndiving into the concepts of cloud\nlogging these are associated primarily\nwith gcp projects so logs viewer only\nshows logs from one specific project now\nwhen it comes to log entries log entry\nrecords a status or an event a project\nreceives log entries when services being\nused produce log entries and to get down\nto the basics\nlogs are a named collection of log\nentries within a google cloud resource\nand just as a note each log entry\nincludes the name of its log logs only\nexist if they have log entries and the\nretention period is the length of time\nfor which your logs are kept so digging\ninto the types of logs that cloud\nlogging handles there are three\ndifferent types of logs there are audit\nlogs transparency logs and agent logs\nnow with audit logs these are logs that\ndefine who did what where and when they\nalso show admin activity and data access\nas well as system events continuing on\nto access transparency logs these are\nlogs for actions taken by google so when\ngoogle staff is accessing your data due\nto a support ticket the actions that are\ntaken by the google staff are logged\nwithin cloud logging now when it comes\nto agent logs these are the logs that\ncome from agents that are installed on\nvms\nthe logging agent sends system and\nthird-party logs on the vm instance to\ncloud logging moving on to error\nreporting this looks at real-time error\nmonitoring and alerting it counts\nanalyzes and aggregates the errors that\nhappen in your gcp environment and then\nalerts you when a new application error\noccurs details of the error can be sent\nthrough the api and notifications are\nstill in beta error reporting is\nintegrated into cloud functions and\ngoogle app engine standard which is\nenabled automatically error reporting is\nin beta for compute engine kubernetes\nengine and app engine flexible as well\nas aws ec2 air reporting can be\ninstalled in a variety of languages such\nas go java.net\nnode.js python php and ruby now moving\ninto debugger this tool debugs a running\napplication without slowing it down it\ncaptures and inspects the call stack and\nlocal variables in your application this\ntool debugs a running application\nwithout slowing it down it captures and\ninspects the call stack and local\nvariables in your application this is\nalso known as taking a snapshot once the\nsnapshot has been taken\na log point can be injected to allow you\nto start debugging debugger can be used\nwith or without access to your\napplication source code and if your repo\nis not local it can be hooked into a\nremote git repo such as github git lab\nor bitbucket debugger is integrated with\ngoogle app engine automatically and can\nbe installed on google compute engine\ngke\nand google app engine debugger is\nintegrated with google app engine\nautomatically and can be installed on\ngke debugger is integrated with google\napp engine automatically and can be\ninstalled on google compute engine\ngoogle kubernetes engine google app\nengine and cloud run and just as a note\ninstallation on these products is all\ndependent on the library and again\ndebugger can be installed like trace on\nnon-gcp environments and is available to\nbe installed using a variety of\ndifferent languages next up is trace and\ntrace helps you understand how long it\ntakes your application to handle\nincoming requests from users and\napplications trace collects latency data\nfrom app engine https load balancers and\napplications using the trace api this is\nalso integrated with google app engine\nstandard and is applied automatically so\nyou would use trace for something like a\nwebsite that is taking forever to load\nto troubleshoot that specific issue\ntrace can be installed on google compute\nengine google kubernetes engine and\ngoogle app engine as well it can also be\ninstalled on non-gcp environments and it\ncan be installed using a variety of\ndifferent languages as shown here and\ncoming up on the last tool of the bunch\nis profiler now profiler gathers cpu\nusage and memory allocation information\nfrom your applications continuously and\nthis helps you discover patterns of\nresource consumption to help you better\ntroubleshoot profiler is low profile and\ntherefore won't take up a lot of memory\nor cpu on your system as well in order\nto use profiler an agent needs to be\ninstalled profiler can be installed on\ncompute engine kubernetes engine and app\nengine as well and of course it can be\ninstalled on non-gcp environments and\nprofiler can be installed using the\nfollowing languages just go\njava node.js and python and so just as a\nnote for the exam only a high level\noverview of these tools are needed and\nso this concludes this lesson on a high\nlevel overview of operation suite so you\ncan now mark this lesson as complete and\nlet's move on to the next one\n",
  "words": [
    "hey",
    "anthony",
    "tavelos",
    "cloud",
    "instructor",
    "exam",
    "pro",
    "bringing",
    "complete",
    "study",
    "course",
    "google",
    "cloud",
    "associate",
    "cloud",
    "engineer",
    "made",
    "available",
    "free",
    "code",
    "camp",
    "course",
    "designed",
    "help",
    "pass",
    "achieve",
    "google",
    "issued",
    "certification",
    "way",
    "going",
    "go",
    "lots",
    "lecture",
    "content",
    "follow",
    "alongs",
    "using",
    "cheat",
    "sheets",
    "day",
    "exam",
    "pass",
    "take",
    "certification",
    "put",
    "resume",
    "linkedin",
    "get",
    "cloud",
    "job",
    "promotion",
    "looking",
    "bit",
    "18",
    "years",
    "industry",
    "experience",
    "seven",
    "specializing",
    "cloud",
    "four",
    "years",
    "cloud",
    "trainer",
    "previously",
    "cloud",
    "devops",
    "engineer",
    "also",
    "published",
    "multiple",
    "cloud",
    "courses",
    "huge",
    "fan",
    "cartoon",
    "looney",
    "tunes",
    "well",
    "coffee",
    "connoisseur",
    "wanted",
    "take",
    "moment",
    "thank",
    "viewers",
    "like",
    "make",
    "free",
    "courses",
    "possible",
    "looking",
    "ways",
    "supporting",
    "free",
    "courses",
    "like",
    "one",
    "best",
    "way",
    "buy",
    "extra",
    "study",
    "material",
    "co",
    "particular",
    "certification",
    "find",
    "gcp",
    "hyphen",
    "ace",
    "get",
    "study",
    "notes",
    "flash",
    "cards",
    "quizlets",
    "downloadable",
    "lectures",
    "slides",
    "lecture",
    "videos",
    "downloadable",
    "cheat",
    "sheets",
    "way",
    "free",
    "go",
    "sign",
    "practice",
    "exams",
    "also",
    "ask",
    "questions",
    "get",
    "learning",
    "support",
    "want",
    "keep",
    "date",
    "new",
    "courses",
    "working",
    "best",
    "way",
    "follow",
    "twitter",
    "antony",
    "cloud",
    "love",
    "hear",
    "passed",
    "exam",
    "also",
    "love",
    "hear",
    "like",
    "see",
    "next",
    "music",
    "welcome",
    "back",
    "lesson",
    "wanted",
    "quickly",
    "go",
    "access",
    "course",
    "resources",
    "resources",
    "course",
    "designed",
    "accompany",
    "lessons",
    "help",
    "understand",
    "theory",
    "help",
    "demo",
    "lessons",
    "really",
    "drive",
    "home",
    "component",
    "learning",
    "include",
    "study",
    "notes",
    "lesson",
    "files",
    "scripts",
    "well",
    "resources",
    "used",
    "demo",
    "lessons",
    "files",
    "found",
    "github",
    "repository",
    "including",
    "always",
    "kept",
    "files",
    "able",
    "follow",
    "along",
    "complete",
    "demos",
    "really",
    "cement",
    "knowledge",
    "learned",
    "fairly",
    "simple",
    "process",
    "varies",
    "different",
    "operating",
    "systems",
    "going",
    "demo",
    "show",
    "obtain",
    "access",
    "three",
    "major",
    "operating",
    "systems",
    "windows",
    "mac",
    "os",
    "ubuntu",
    "linux",
    "first",
    "going",
    "begin",
    "windows",
    "first",
    "step",
    "would",
    "open",
    "web",
    "browser",
    "browse",
    "url",
    "include",
    "notes",
    "course",
    "github",
    "repository",
    "house",
    "course",
    "files",
    "mentioned",
    "keeping",
    "course",
    "date",
    "mean",
    "files",
    "may",
    "need",
    "changed",
    "update",
    "always",
    "reflected",
    "uploaded",
    "repo",
    "getting",
    "back",
    "two",
    "ways",
    "access",
    "repository",
    "easiest",
    "way",
    "obtain",
    "copy",
    "files",
    "click",
    "clone",
    "download",
    "button",
    "click",
    "download",
    "zip",
    "file",
    "downloaded",
    "open",
    "clicking",
    "files",
    "downloads",
    "give",
    "snapshot",
    "files",
    "folders",
    "see",
    "repository",
    "although",
    "may",
    "seem",
    "like",
    "simple",
    "way",
    "go",
    "recommended",
    "method",
    "download",
    "files",
    "changed",
    "date",
    "latest",
    "files",
    "current",
    "date",
    "downloaded",
    "way",
    "recommended",
    "using",
    "source",
    "control",
    "system",
    "called",
    "git",
    "easiest",
    "way",
    "install",
    "would",
    "go",
    "url",
    "https",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "git",
    "dash",
    "bring",
    "git",
    "website",
    "download",
    "necessary",
    "software",
    "windows",
    "supported",
    "operating",
    "system",
    "going",
    "download",
    "download",
    "latest",
    "version",
    "git",
    "windows",
    "took",
    "seconds",
    "done",
    "need",
    "worry",
    "whether",
    "got",
    "proper",
    "version",
    "usually",
    "click",
    "download",
    "button",
    "download",
    "latest",
    "version",
    "operating",
    "system",
    "going",
    "go",
    "open",
    "get",
    "prompt",
    "would",
    "say",
    "yes",
    "going",
    "go",
    "ahead",
    "accept",
    "defaults",
    "going",
    "install",
    "let",
    "hit",
    "next",
    "components",
    "going",
    "installed",
    "let",
    "click",
    "next",
    "going",
    "go",
    "everything",
    "defaults",
    "reached",
    "installing",
    "defaults",
    "gon",
    "na",
    "take",
    "couple",
    "minutes",
    "install",
    "took",
    "minute",
    "going",
    "click",
    "next",
    "going",
    "ask",
    "want",
    "view",
    "release",
    "notes",
    "really",
    "need",
    "click",
    "ok",
    "simply",
    "close",
    "going",
    "go",
    "see",
    "git",
    "installed",
    "going",
    "run",
    "command",
    "prompt",
    "going",
    "zoom",
    "see",
    "little",
    "better",
    "go",
    "going",
    "type",
    "git",
    "see",
    "installed",
    "installed",
    "git",
    "want",
    "able",
    "pull",
    "folders",
    "files",
    "within",
    "repository",
    "local",
    "system",
    "going",
    "clear",
    "screen",
    "going",
    "cd",
    "make",
    "sure",
    "home",
    "directory",
    "going",
    "make",
    "directory",
    "called",
    "repos",
    "order",
    "going",
    "mkdir",
    "space",
    "repos",
    "going",
    "move",
    "directory",
    "cd",
    "space",
    "repos",
    "want",
    "clone",
    "files",
    "repository",
    "local",
    "system",
    "order",
    "going",
    "use",
    "command",
    "git",
    "clone",
    "get",
    "space",
    "clone",
    "going",
    "need",
    "location",
    "git",
    "repository",
    "let",
    "go",
    "back",
    "browser",
    "going",
    "go",
    "clone",
    "download",
    "see",
    "clone",
    "https",
    "make",
    "sure",
    "says",
    "https",
    "simply",
    "click",
    "button",
    "copy",
    "clipboard",
    "move",
    "back",
    "command",
    "prompt",
    "paste",
    "pasted",
    "hit",
    "enter",
    "clone",
    "repository",
    "repos",
    "directory",
    "verify",
    "cloned",
    "necessary",
    "files",
    "going",
    "cd",
    "master",
    "directory",
    "cloned",
    "going",
    "dir",
    "files",
    "cloned",
    "exactly",
    "repository",
    "note",
    "order",
    "keep",
    "files",
    "date",
    "need",
    "run",
    "different",
    "command",
    "would",
    "git",
    "pull",
    "run",
    "time",
    "order",
    "pull",
    "files",
    "folders",
    "updated",
    "since",
    "first",
    "pull",
    "case",
    "would",
    "cloning",
    "repository",
    "provide",
    "latest",
    "files",
    "given",
    "moment",
    "time",
    "case",
    "since",
    "nothing",
    "changed",
    "prompted",
    "message",
    "stating",
    "date",
    "nothing",
    "changed",
    "always",
    "prompted",
    "message",
    "pull",
    "changes",
    "synced",
    "local",
    "copy",
    "process",
    "windows",
    "completed",
    "similar",
    "mac",
    "os",
    "move",
    "mac",
    "os",
    "virtual",
    "machine",
    "log",
    "logged",
    "going",
    "go",
    "terminal",
    "going",
    "cd",
    "make",
    "sure",
    "home",
    "directory",
    "going",
    "exactly",
    "windows",
    "going",
    "run",
    "command",
    "mk",
    "dir",
    "space",
    "repos",
    "create",
    "repos",
    "directory",
    "going",
    "move",
    "repos",
    "directory",
    "going",
    "run",
    "git",
    "get",
    "installed",
    "prompted",
    "message",
    "install",
    "go",
    "ahead",
    "install",
    "prompted",
    "license",
    "agreement",
    "hit",
    "agree",
    "depending",
    "internet",
    "connection",
    "take",
    "minutes",
    "download",
    "install",
    "going",
    "take",
    "minutes",
    "going",
    "pause",
    "video",
    "come",
    "back",
    "finished",
    "installing",
    "okay",
    "software",
    "successfully",
    "installed",
    "double",
    "check",
    "going",
    "run",
    "git",
    "see",
    "installed",
    "git",
    "installed",
    "want",
    "clone",
    "directories",
    "files",
    "github",
    "repository",
    "local",
    "repos",
    "folder",
    "going",
    "open",
    "browser",
    "going",
    "paste",
    "github",
    "repository",
    "url",
    "right",
    "see",
    "clone",
    "button",
    "going",
    "click",
    "button",
    "download",
    "zip",
    "like",
    "said",
    "going",
    "going",
    "go",
    "copy",
    "url",
    "github",
    "repository",
    "make",
    "sure",
    "says",
    "https",
    "going",
    "copy",
    "clipboard",
    "going",
    "go",
    "back",
    "terminal",
    "going",
    "run",
    "command",
    "git",
    "space",
    "clone",
    "going",
    "paste",
    "url",
    "see",
    "cloned",
    "repository",
    "files",
    "folders",
    "within",
    "best",
    "practice",
    "always",
    "like",
    "verify",
    "files",
    "properly",
    "cloned",
    "going",
    "run",
    "command",
    "ls",
    "make",
    "sure",
    "go",
    "master",
    "directory",
    "double",
    "check",
    "see",
    "clone",
    "successful",
    "files",
    "folders",
    "download",
    "updates",
    "files",
    "directories",
    "simply",
    "run",
    "command",
    "git",
    "space",
    "poll",
    "already",
    "cloned",
    "already",
    "date",
    "process",
    "going",
    "extremely",
    "similar",
    "linux",
    "going",
    "simply",
    "move",
    "linux",
    "machine",
    "log",
    "going",
    "open",
    "terminal",
    "going",
    "make",
    "terminal",
    "little",
    "bit",
    "bigger",
    "better",
    "viewing",
    "like",
    "operating",
    "systems",
    "want",
    "clone",
    "files",
    "directories",
    "github",
    "repository",
    "machine",
    "going",
    "cd",
    "make",
    "sure",
    "home",
    "directory",
    "like",
    "want",
    "create",
    "directory",
    "called",
    "repos",
    "going",
    "run",
    "command",
    "mkdir",
    "space",
    "repos",
    "going",
    "create",
    "repos",
    "directory",
    "going",
    "move",
    "repos",
    "directory",
    "going",
    "run",
    "git",
    "command",
    "git",
    "installed",
    "machine",
    "prompted",
    "command",
    "order",
    "install",
    "going",
    "run",
    "command",
    "sudo",
    "space",
    "apt",
    "space",
    "install",
    "space",
    "get",
    "going",
    "enter",
    "password",
    "install",
    "verify",
    "going",
    "run",
    "command",
    "git",
    "see",
    "installed",
    "going",
    "go",
    "browser",
    "going",
    "paste",
    "url",
    "repository",
    "clone",
    "button",
    "click",
    "get",
    "url",
    "github",
    "repository",
    "order",
    "clone",
    "make",
    "sure",
    "clone",
    "says",
    "https",
    "say",
    "https",
    "option",
    "clicking",
    "button",
    "allow",
    "says",
    "https",
    "simply",
    "copy",
    "url",
    "clipboard",
    "clicking",
    "button",
    "move",
    "back",
    "terminal",
    "going",
    "clone",
    "repository",
    "typing",
    "get",
    "space",
    "clone",
    "command",
    "along",
    "url",
    "repository",
    "hit",
    "enter",
    "clone",
    "right",
    "directory",
    "going",
    "move",
    "master",
    "directory",
    "verify",
    "files",
    "looking",
    "update",
    "repository",
    "new",
    "updated",
    "changes",
    "simply",
    "run",
    "get",
    "space",
    "pull",
    "command",
    "update",
    "files",
    "linux",
    "setup",
    "local",
    "copy",
    "lesson",
    "files",
    "one",
    "thing",
    "highly",
    "recommend",
    "demonstrate",
    "going",
    "move",
    "back",
    "windows",
    "virtual",
    "machine",
    "going",
    "open",
    "web",
    "browser",
    "open",
    "new",
    "tab",
    "going",
    "browse",
    "url",
    "https",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "music",
    "make",
    "sure",
    "url",
    "text",
    "version",
    "code",
    "editor",
    "available",
    "windows",
    "mac",
    "os",
    "linux",
    "simply",
    "click",
    "drop",
    "find",
    "link",
    "download",
    "operating",
    "system",
    "cases",
    "automatically",
    "show",
    "correct",
    "version",
    "go",
    "ahead",
    "click",
    "download",
    "start",
    "downloading",
    "automatically",
    "able",
    "run",
    "right",
    "away",
    "reason",
    "behind",
    "asking",
    "install",
    "utility",
    "editing",
    "code",
    "different",
    "sorts",
    "whether",
    "adjusting",
    "yaml",
    "python",
    "documents",
    "deployment",
    "manager",
    "even",
    "managing",
    "scripts",
    "code",
    "editor",
    "give",
    "ease",
    "use",
    "comes",
    "managing",
    "editing",
    "even",
    "syntactical",
    "highlighting",
    "code",
    "shown",
    "highlight",
    "code",
    "make",
    "easier",
    "understand",
    "editor",
    "would",
    "prefer",
    "use",
    "go",
    "ahead",
    "use",
    "recommendation",
    "use",
    "visual",
    "studio",
    "code",
    "install",
    "visual",
    "studio",
    "code",
    "going",
    "accept",
    "license",
    "agreement",
    "going",
    "click",
    "next",
    "going",
    "follow",
    "defaults",
    "install",
    "going",
    "take",
    "minute",
    "two",
    "running",
    "windows",
    "want",
    "make",
    "sure",
    "box",
    "checked",
    "launch",
    "right",
    "away",
    "let",
    "hit",
    "finish",
    "another",
    "recommendation",
    "would",
    "go",
    "task",
    "bar",
    "pin",
    "place",
    "easier",
    "find",
    "access",
    "resources",
    "needed",
    "course",
    "everything",
    "wanted",
    "cover",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "wanted",
    "discuss",
    "various",
    "certifications",
    "available",
    "google",
    "cloud",
    "number",
    "keeps",
    "growing",
    "looking",
    "keep",
    "lesson",
    "date",
    "possible",
    "said",
    "let",
    "dive",
    "google",
    "cloud",
    "released",
    "slew",
    "certifications",
    "many",
    "different",
    "areas",
    "expertise",
    "well",
    "different",
    "experience",
    "levels",
    "two",
    "levels",
    "difficulty",
    "comes",
    "google",
    "cloud",
    "certifications",
    "starting",
    "associate",
    "level",
    "see",
    "one",
    "certification",
    "cloud",
    "engineer",
    "associate",
    "level",
    "certification",
    "focused",
    "fundamental",
    "skills",
    "deploying",
    "monitoring",
    "maintaining",
    "projects",
    "google",
    "cloud",
    "great",
    "starting",
    "point",
    "completely",
    "new",
    "cloud",
    "google",
    "recommends",
    "associate",
    "cloud",
    "engineer",
    "starting",
    "point",
    "undergoing",
    "certification",
    "journey",
    "google",
    "cloud",
    "first",
    "certification",
    "entry",
    "point",
    "wanting",
    "learn",
    "engineer",
    "cloud",
    "personal",
    "opinion",
    "matter",
    "role",
    "certification",
    "cover",
    "general",
    "knowledge",
    "needed",
    "know",
    "starting",
    "google",
    "cloud",
    "services",
    "within",
    "labeled",
    "foundational",
    "level",
    "course",
    "also",
    "consider",
    "stepping",
    "stone",
    "professional",
    "level",
    "certifications",
    "also",
    "happens",
    "recommended",
    "path",
    "google",
    "great",
    "course",
    "dedication",
    "truly",
    "believe",
    "anyone",
    "even",
    "basic",
    "skill",
    "level",
    "able",
    "achieve",
    "associate",
    "level",
    "certification",
    "recommended",
    "google",
    "prior",
    "taking",
    "exam",
    "six",
    "months",
    "experience",
    "building",
    "google",
    "cloud",
    "advanced",
    "background",
    "google",
    "cloud",
    "even",
    "public",
    "clouds",
    "certification",
    "easy",
    "pass",
    "covers",
    "basics",
    "familiar",
    "adding",
    "google",
    "twist",
    "time",
    "lesson",
    "exam",
    "two",
    "hours",
    "long",
    "cost",
    "125",
    "us",
    "dollars",
    "exam",
    "total",
    "50",
    "questions",
    "consists",
    "multiple",
    "choice",
    "multiple",
    "answer",
    "questions",
    "questions",
    "contain",
    "three",
    "four",
    "line",
    "questions",
    "single",
    "line",
    "answers",
    "time",
    "finish",
    "course",
    "confidence",
    "identify",
    "incorrect",
    "answers",
    "able",
    "select",
    "right",
    "answers",
    "without",
    "hitch",
    "moving",
    "professional",
    "level",
    "certifications",
    "seven",
    "certifications",
    "cover",
    "variety",
    "areas",
    "specialty",
    "depending",
    "role",
    "might",
    "want",
    "take",
    "one",
    "maybe",
    "several",
    "certifications",
    "help",
    "gain",
    "knowledge",
    "google",
    "cloud",
    "love",
    "educating",
    "really",
    "loving",
    "journey",
    "gcp",
    "probably",
    "want",
    "consider",
    "pursuing",
    "personal",
    "opinion",
    "best",
    "entry",
    "point",
    "professional",
    "level",
    "would",
    "cloud",
    "architect",
    "natural",
    "step",
    "associate",
    "cloud",
    "engineer",
    "builds",
    "top",
    "learned",
    "certification",
    "detailed",
    "thorough",
    "understanding",
    "cloud",
    "architecture",
    "needed",
    "certification",
    "overlap",
    "cloud",
    "engineer",
    "opinion",
    "certification",
    "right",
    "makes",
    "sense",
    "also",
    "brings",
    "ability",
    "design",
    "develop",
    "manage",
    "secure",
    "scalable",
    "highly",
    "available",
    "dynamic",
    "solutions",
    "much",
    "harder",
    "exam",
    "goes",
    "great",
    "depth",
    "services",
    "available",
    "professional",
    "cloud",
    "architect",
    "great",
    "primer",
    "professional",
    "level",
    "certification",
    "really",
    "helpful",
    "solidify",
    "learning",
    "needed",
    "technical",
    "role",
    "find",
    "common",
    "path",
    "many",
    "take",
    "look",
    "learn",
    "google",
    "cloud",
    "personally",
    "recommend",
    "time",
    "lesson",
    "also",
    "holds",
    "highest",
    "return",
    "investment",
    "due",
    "highest",
    "average",
    "wage",
    "current",
    "cloud",
    "certification",
    "market",
    "google",
    "recommends",
    "three",
    "years",
    "industry",
    "experience",
    "including",
    "one",
    "year",
    "google",
    "cloud",
    "attempting",
    "exams",
    "regards",
    "exams",
    "professional",
    "tier",
    "much",
    "harder",
    "associate",
    "level",
    "time",
    "course",
    "two",
    "hours",
    "long",
    "cost",
    "200",
    "us",
    "dollars",
    "exams",
    "total",
    "50",
    "questions",
    "consists",
    "multiple",
    "choice",
    "multiple",
    "answer",
    "questions",
    "amount",
    "questions",
    "amount",
    "time",
    "feel",
    "much",
    "harder",
    "questions",
    "contain",
    "four",
    "five",
    "line",
    "questions",
    "one",
    "three",
    "line",
    "answers",
    "definitely",
    "walk",
    "park",
    "take",
    "good",
    "concentration",
    "detailed",
    "knowledge",
    "google",
    "cloud",
    "solidify",
    "pass",
    "completing",
    "cloud",
    "architect",
    "certification",
    "depending",
    "role",
    "suggestion",
    "would",
    "pursue",
    "areas",
    "interest",
    "make",
    "journey",
    "enjoyable",
    "time",
    "took",
    "security",
    "engineer",
    "big",
    "fan",
    "security",
    "knew",
    "would",
    "really",
    "enjoy",
    "learning",
    "make",
    "fun",
    "also",
    "great",
    "certification",
    "looking",
    "excel",
    "cloud",
    "security",
    "knowledge",
    "top",
    "security",
    "certifications",
    "security",
    "plus",
    "cissp",
    "others",
    "may",
    "huge",
    "fans",
    "networking",
    "hold",
    "networking",
    "certifications",
    "ccna",
    "obtaining",
    "network",
    "engineer",
    "certification",
    "might",
    "alley",
    "give",
    "better",
    "understanding",
    "cloud",
    "networking",
    "data",
    "space",
    "might",
    "want",
    "move",
    "data",
    "engineer",
    "exam",
    "well",
    "taking",
    "machine",
    "learning",
    "engineer",
    "exam",
    "really",
    "get",
    "deeper",
    "knowledge",
    "areas",
    "big",
    "data",
    "machine",
    "learning",
    "artificial",
    "intelligence",
    "google",
    "cloud",
    "know",
    "many",
    "love",
    "devops",
    "one",
    "really",
    "want",
    "dig",
    "deeper",
    "understand",
    "sre",
    "end",
    "tackling",
    "cloud",
    "developer",
    "cloud",
    "devops",
    "engineer",
    "certifications",
    "bottom",
    "line",
    "whatever",
    "brings",
    "joy",
    "area",
    "choosing",
    "start",
    "move",
    "rest",
    "professional",
    "certifications",
    "valuable",
    "remember",
    "hard",
    "need",
    "preparation",
    "study",
    "last",
    "least",
    "collaboration",
    "engineer",
    "certification",
    "certification",
    "focuses",
    "google",
    "core",
    "collaboration",
    "tools",
    "available",
    "g",
    "suite",
    "known",
    "google",
    "workspaces",
    "gmail",
    "drive",
    "hangouts",
    "docs",
    "sheets",
    "professional",
    "level",
    "collaboration",
    "engineers",
    "certification",
    "dives",
    "advanced",
    "areas",
    "g",
    "suite",
    "mail",
    "routing",
    "identity",
    "management",
    "automation",
    "using",
    "tools",
    "scripting",
    "apis",
    "certification",
    "great",
    "looking",
    "build",
    "skill",
    "set",
    "administrator",
    "tools",
    "gives",
    "little",
    "knowledge",
    "google",
    "cloud",
    "move",
    "one",
    "certification",
    "wanted",
    "cover",
    "fall",
    "associate",
    "professional",
    "certification",
    "levels",
    "google",
    "cloud",
    "certified",
    "fellow",
    "program",
    "far",
    "one",
    "hardest",
    "certifications",
    "obtain",
    "certified",
    "fellows",
    "time",
    "recording",
    "lesson",
    "even",
    "harder",
    "professional",
    "level",
    "certifications",
    "due",
    "sheer",
    "level",
    "competency",
    "hybrid",
    "architectures",
    "using",
    "google",
    "cloud",
    "anthos",
    "google",
    "recommended",
    "experience",
    "10",
    "years",
    "year",
    "designing",
    "enterprise",
    "solutions",
    "anthos",
    "process",
    "begins",
    "first",
    "step",
    "receive",
    "certified",
    "fellow",
    "invitation",
    "google",
    "received",
    "invitation",
    "need",
    "submit",
    "application",
    "work",
    "samples",
    "done",
    "showing",
    "google",
    "competency",
    "hybrid",
    "done",
    "third",
    "step",
    "series",
    "technical",
    "labs",
    "must",
    "completed",
    "qualifying",
    "assessment",
    "must",
    "passed",
    "order",
    "continue",
    "last",
    "step",
    "panel",
    "interview",
    "done",
    "google",
    "experts",
    "order",
    "assess",
    "competency",
    "designing",
    "hybrid",
    "solutions",
    "anthos",
    "see",
    "difficult",
    "highly",
    "involved",
    "certification",
    "process",
    "achieve",
    "title",
    "certified",
    "fellow",
    "definitely",
    "faint",
    "heart",
    "distinguish",
    "technical",
    "leader",
    "anthos",
    "hybrid",
    "expert",
    "industry",
    "get",
    "asked",
    "many",
    "times",
    "whether",
    "certifications",
    "hold",
    "value",
    "easy",
    "get",
    "worth",
    "paperwork",
    "printed",
    "show",
    "people",
    "really",
    "know",
    "use",
    "google",
    "cloud",
    "answer",
    "always",
    "yes",
    "certifications",
    "hold",
    "benefits",
    "beyond",
    "certification",
    "targeting",
    "certification",
    "gives",
    "milestone",
    "learning",
    "something",
    "new",
    "new",
    "milestone",
    "allows",
    "put",
    "together",
    "study",
    "plan",
    "order",
    "achieve",
    "necessary",
    "knowledge",
    "needed",
    "pass",
    "exam",
    "skills",
    "needed",
    "progress",
    "everyday",
    "technical",
    "role",
    "new",
    "knowledge",
    "helps",
    "keep",
    "skills",
    "date",
    "therefore",
    "making",
    "current",
    "instead",
    "becoming",
    "relic",
    "skills",
    "also",
    "help",
    "advance",
    "career",
    "throughout",
    "career",
    "cloud",
    "always",
    "managed",
    "get",
    "foot",
    "door",
    "various",
    "interviews",
    "due",
    "certifications",
    "gave",
    "opportunity",
    "shine",
    "front",
    "interviewer",
    "able",
    "confidently",
    "display",
    "skills",
    "cloud",
    "also",
    "allowed",
    "land",
    "jobs",
    "sought",
    "well",
    "carve",
    "career",
    "path",
    "truly",
    "wanted",
    "top",
    "landing",
    "jobs",
    "wanted",
    "able",
    "achieve",
    "higher",
    "salary",
    "due",
    "certifications",
    "doubled",
    "tripled",
    "salary",
    "since",
    "first",
    "started",
    "cloud",
    "due",
    "certifications",
    "known",
    "others",
    "obtained",
    "five",
    "times",
    "salary",
    "certifications",
    "achieving",
    "certification",
    "put",
    "resume",
    "social",
    "media",
    "knowledge",
    "gained",
    "process",
    "course",
    "personally",
    "feel",
    "skills",
    "constantly",
    "date",
    "advancing",
    "career",
    "getting",
    "salary",
    "want",
    "keeps",
    "motivated",
    "get",
    "certifications",
    "continue",
    "learning",
    "process",
    "always",
    "huge",
    "proponent",
    "lifelong",
    "learning",
    "always",
    "say",
    "continue",
    "learning",
    "continue",
    "grow",
    "short",
    "google",
    "cloud",
    "certifications",
    "great",
    "way",
    "grow",
    "covers",
    "everything",
    "wanted",
    "discuss",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "see",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "talking",
    "fictitious",
    "organization",
    "called",
    "bow",
    "tie",
    "inc",
    "using",
    "throughout",
    "course",
    "going",
    "architectures",
    "demos",
    "course",
    "together",
    "wanted",
    "tie",
    "real",
    "world",
    "situation",
    "theory",
    "practical",
    "examples",
    "easy",
    "understand",
    "tying",
    "scenario",
    "easy",
    "way",
    "well",
    "makes",
    "things",
    "lot",
    "fun",
    "scenario",
    "using",
    "based",
    "bow",
    "tie",
    "ink",
    "get",
    "started",
    "course",
    "like",
    "quickly",
    "run",
    "scenario",
    "worry",
    "going",
    "high",
    "level",
    "keep",
    "brief",
    "bow",
    "tie",
    "ink",
    "bow",
    "tie",
    "manufacturing",
    "company",
    "designs",
    "manufactures",
    "bow",
    "ties",
    "within",
    "factories",
    "also",
    "hold",
    "retail",
    "locations",
    "sell",
    "bow",
    "ties",
    "well",
    "wholesale",
    "thai",
    "men",
    "fashion",
    "boutiques",
    "department",
    "stores",
    "across",
    "globe",
    "fashion",
    "business",
    "mainly",
    "deal",
    "commerce",
    "security",
    "big",
    "data",
    "sets",
    "bow",
    "tie",
    "inc",
    "global",
    "company",
    "headquartered",
    "montreal",
    "canada",
    "employ",
    "300",
    "people",
    "globally",
    "hundred",
    "sales",
    "alone",
    "support",
    "brick",
    "mortar",
    "stores",
    "wholesale",
    "branches",
    "many",
    "different",
    "departments",
    "company",
    "make",
    "work",
    "staff",
    "marketing",
    "online",
    "sales",
    "manufacturing",
    "finance",
    "types",
    "employees",
    "work",
    "bow",
    "tie",
    "inc",
    "vary",
    "greatly",
    "due",
    "various",
    "departments",
    "consists",
    "many",
    "people",
    "sales",
    "wholesale",
    "managers",
    "run",
    "stores",
    "sewers",
    "work",
    "manufacturing",
    "plant",
    "many",
    "work",
    "various",
    "departments",
    "business",
    "offices",
    "brick",
    "mortar",
    "stores",
    "montreal",
    "london",
    "los",
    "angeles",
    "due",
    "thrifty",
    "mindset",
    "management",
    "concentrating",
    "efforts",
    "commerce",
    "almost",
    "none",
    "technical",
    "infrastructure",
    "caused",
    "years",
    "technical",
    "debt",
    "complete",
    "disaster",
    "within",
    "brick",
    "mortar",
    "location",
    "contains",
    "two",
    "racks",
    "servers",
    "networking",
    "equipment",
    "global",
    "inventory",
    "bow",
    "ties",
    "updated",
    "upon",
    "sales",
    "stores",
    "wholesale",
    "well",
    "new",
    "stock",
    "manufactured",
    "factory",
    "systems",
    "store",
    "office",
    "location",
    "systems",
    "connected",
    "vpn",
    "connection",
    "order",
    "keep",
    "updates",
    "inventory",
    "fresh",
    "office",
    "store",
    "infrastructure",
    "connected",
    "montreal",
    "headquarters",
    "point",
    "sale",
    "systems",
    "kiosk",
    "systems",
    "backed",
    "tape",
    "montreal",
    "headquarters",
    "well",
    "like",
    "said",
    "management",
    "extremely",
    "thrifty",
    "finally",
    "come",
    "realization",
    "need",
    "start",
    "spending",
    "money",
    "technical",
    "infrastructure",
    "order",
    "scale",
    "diving",
    "quick",
    "overview",
    "exactly",
    "architecture",
    "looks",
    "like",
    "head",
    "office",
    "located",
    "montreal",
    "canada",
    "main",
    "database",
    "crm",
    "systems",
    "well",
    "holding",
    "responsibility",
    "housing",
    "equipment",
    "tape",
    "backups",
    "tapes",
    "taken",
    "site",
    "within",
    "montreal",
    "company",
    "storage",
    "company",
    "two",
    "major",
    "offices",
    "one",
    "london",
    "covering",
    "eu",
    "west",
    "coast",
    "us",
    "los",
    "angeles",
    "major",
    "offices",
    "also",
    "retail",
    "locations",
    "consume",
    "services",
    "headquarters",
    "montreal",
    "fashion",
    "business",
    "bowtie",
    "inc",
    "employs",
    "large",
    "amount",
    "sales",
    "people",
    "managers",
    "support",
    "employees",
    "operate",
    "systems",
    "constantly",
    "looking",
    "website",
    "sales",
    "inventory",
    "updated",
    "times",
    "salesperson",
    "access",
    "email",
    "files",
    "updated",
    "forecasts",
    "various",
    "new",
    "bowtie",
    "designs",
    "sales",
    "people",
    "communicate",
    "voice",
    "ip",
    "phone",
    "chat",
    "programs",
    "mobile",
    "phone",
    "managers",
    "also",
    "manually",
    "look",
    "inventory",
    "sold",
    "versus",
    "stock",
    "predict",
    "sales",
    "stores",
    "upcoming",
    "weeks",
    "give",
    "manufacturing",
    "head",
    "start",
    "making",
    "bow",
    "ties",
    "future",
    "sales",
    "whatever",
    "implementations",
    "discuss",
    "throughout",
    "course",
    "need",
    "support",
    "operations",
    "sales",
    "people",
    "managers",
    "different",
    "time",
    "zones",
    "play",
    "infrastructure",
    "needs",
    "available",
    "24",
    "hours",
    "day",
    "seven",
    "days",
    "week",
    "downtime",
    "impact",
    "updated",
    "inventory",
    "online",
    "sales",
    "well",
    "store",
    "sales",
    "given",
    "time",
    "let",
    "talk",
    "current",
    "problems",
    "business",
    "facing",
    "locations",
    "hold",
    "premise",
    "hardware",
    "date",
    "also",
    "warranty",
    "business",
    "looked",
    "extending",
    "warranty",
    "became",
    "costly",
    "well",
    "management",
    "fence",
    "whether",
    "buy",
    "new",
    "hardware",
    "move",
    "cloud",
    "told",
    "google",
    "cloud",
    "way",
    "go",
    "comes",
    "retail",
    "space",
    "open",
    "suggestions",
    "yet",
    "still",
    "weary",
    "comes",
    "performance",
    "seems",
    "major",
    "lag",
    "vpn",
    "connecting",
    "store",
    "store",
    "well",
    "head",
    "office",
    "responsible",
    "proper",
    "inventory",
    "thus",
    "slowing",
    "point",
    "sale",
    "systems",
    "top",
    "backups",
    "taking",
    "exorbitant",
    "amount",
    "time",
    "consuming",
    "lot",
    "bandwidth",
    "current",
    "vpn",
    "connection",
    "bowtie",
    "inc",
    "always",
    "struggled",
    "lack",
    "highly",
    "available",
    "systems",
    "scalability",
    "due",
    "cost",
    "new",
    "hardware",
    "causing",
    "extreme",
    "stress",
    "online",
    "whenever",
    "new",
    "marketing",
    "campaign",
    "launched",
    "systems",
    "unable",
    "keep",
    "demand",
    "looking",
    "forecast",
    "next",
    "two",
    "quarters",
    "business",
    "looking",
    "open",
    "stores",
    "eu",
    "well",
    "us",
    "current",
    "database",
    "place",
    "providing",
    "inefficient",
    "high",
    "availability",
    "scalability",
    "major",
    "threat",
    "main",
    "database",
    "going",
    "comes",
    "assessing",
    "backups",
    "tape",
    "backups",
    "become",
    "slow",
    "especially",
    "backing",
    "london",
    "storage",
    "costs",
    "continuously",
    "go",
    "every",
    "year",
    "backups",
    "consuming",
    "lot",
    "bandwidth",
    "starting",
    "become",
    "major",
    "pain",
    "point",
    "connection",
    "issues",
    "locations",
    "top",
    "issues",
    "small",
    "staff",
    "employed",
    "outdated",
    "skills",
    "lot",
    "manual",
    "intervention",
    "needs",
    "done",
    "top",
    "running",
    "around",
    "necessary",
    "keep",
    "outdated",
    "infrastructure",
    "alive",
    "management",
    "also",
    "pushing",
    "open",
    "new",
    "stores",
    "supply",
    "bow",
    "ties",
    "globally",
    "given",
    "demand",
    "well",
    "able",
    "supply",
    "demand",
    "bow",
    "ties",
    "online",
    "store",
    "realistic",
    "yet",
    "common",
    "scenarios",
    "come",
    "reality",
    "lot",
    "businesses",
    "using",
    "cloud",
    "computing",
    "throughout",
    "course",
    "dive",
    "google",
    "cloud",
    "help",
    "ease",
    "pain",
    "current",
    "ongoing",
    "issues",
    "high",
    "level",
    "business",
    "wants",
    "achieve",
    "favorable",
    "results",
    "interrelated",
    "issues",
    "bowtie",
    "inc",
    "requires",
    "reliable",
    "stable",
    "connection",
    "locations",
    "stores",
    "offices",
    "sales",
    "inventory",
    "systems",
    "quick",
    "times",
    "also",
    "allow",
    "staff",
    "locations",
    "work",
    "lot",
    "efficiently",
    "stable",
    "reliable",
    "connection",
    "place",
    "backups",
    "able",
    "run",
    "smoothly",
    "also",
    "eliminate",
    "cost",
    "backup",
    "mention",
    "manpower",
    "infrastructure",
    "involved",
    "get",
    "job",
    "done",
    "scaling",
    "offices",
    "stores",
    "due",
    "increase",
    "demand",
    "business",
    "able",
    "deploy",
    "stores",
    "new",
    "regions",
    "using",
    "pay",
    "go",
    "billing",
    "also",
    "meeting",
    "requirements",
    "regulations",
    "comes",
    "gpdr",
    "pci",
    "would",
    "also",
    "give",
    "business",
    "flexibility",
    "disaster",
    "recovery",
    "strategy",
    "place",
    "case",
    "failure",
    "main",
    "database",
    "montreal",
    "mentioned",
    "business",
    "extremely",
    "thrifty",
    "especially",
    "comes",
    "spend",
    "infrastructure",
    "goal",
    "costs",
    "low",
    "possible",
    "yet",
    "flexibility",
    "scaling",
    "needed",
    "especially",
    "new",
    "marketing",
    "campaigns",
    "launched",
    "high",
    "demand",
    "sales",
    "periods",
    "would",
    "also",
    "give",
    "bowtie",
    "inc",
    "flexibility",
    "analyzing",
    "sales",
    "ahead",
    "time",
    "using",
    "analytics",
    "catering",
    "exactly",
    "customer",
    "demanding",
    "thus",
    "making",
    "inventory",
    "lot",
    "accurate",
    "reducing",
    "costs",
    "manufacturing",
    "items",
    "end",
    "going",
    "sale",
    "costing",
    "company",
    "money",
    "end",
    "finally",
    "comes",
    "people",
    "supporting",
    "infrastructure",
    "automation",
    "key",
    "removing",
    "manual",
    "steps",
    "lot",
    "processes",
    "reduce",
    "amount",
    "manpower",
    "needed",
    "keep",
    "infrastructure",
    "alive",
    "especially",
    "reduce",
    "downtime",
    "disaster",
    "arises",
    "putting",
    "automation",
    "place",
    "also",
    "reduce",
    "amount",
    "tedious",
    "tasks",
    "departments",
    "plate",
    "focus",
    "important",
    "business",
    "needs",
    "scenario",
    "high",
    "level",
    "wanted",
    "really",
    "emphasize",
    "typical",
    "type",
    "scenario",
    "face",
    "cloud",
    "engineer",
    "cloud",
    "architect",
    "key",
    "scenario",
    "fact",
    "areas",
    "lacking",
    "detail",
    "areas",
    "fully",
    "comprehensible",
    "trigger",
    "knowing",
    "ask",
    "relevant",
    "questions",
    "especially",
    "role",
    "engineer",
    "allow",
    "fill",
    "gaps",
    "able",
    "figure",
    "services",
    "need",
    "type",
    "architecture",
    "use",
    "also",
    "extremely",
    "helpful",
    "comes",
    "exam",
    "exam",
    "faced",
    "questions",
    "pertain",
    "real",
    "life",
    "scenarios",
    "test",
    "similar",
    "manner",
    "knowing",
    "services",
    "architecture",
    "use",
    "based",
    "information",
    "given",
    "always",
    "give",
    "keys",
    "door",
    "right",
    "answer",
    "lastly",
    "comes",
    "demos",
    "scenario",
    "used",
    "throughout",
    "course",
    "help",
    "put",
    "things",
    "perspective",
    "come",
    "resolve",
    "lot",
    "common",
    "issues",
    "real",
    "world",
    "scenarios",
    "give",
    "better",
    "perspective",
    "learning",
    "tied",
    "something",
    "makes",
    "easy",
    "comprehend",
    "bow",
    "tie",
    "inc",
    "scenario",
    "using",
    "throughout",
    "course",
    "help",
    "grasp",
    "concepts",
    "cover",
    "scenario",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "hey",
    "anthony",
    "cevallos",
    "wanted",
    "show",
    "access",
    "practice",
    "exam",
    "exam",
    "pro",
    "platform",
    "signed",
    "account",
    "head",
    "course",
    "scroll",
    "bottom",
    "curriculum",
    "list",
    "see",
    "practice",
    "exams",
    "bottom",
    "quick",
    "note",
    "generally",
    "attempt",
    "practice",
    "exam",
    "unless",
    "completed",
    "lecture",
    "content",
    "including",
    "follow",
    "alongs",
    "start",
    "see",
    "questions",
    "get",
    "urge",
    "start",
    "remembering",
    "questions",
    "always",
    "recommend",
    "use",
    "practice",
    "exam",
    "serious",
    "attempt",
    "way",
    "get",
    "final",
    "exam",
    "faster",
    "pace",
    "taking",
    "time",
    "course",
    "allow",
    "really",
    "prevail",
    "practice",
    "exams",
    "allow",
    "way",
    "better",
    "pass",
    "rate",
    "final",
    "exam",
    "looking",
    "see",
    "two",
    "practice",
    "exams",
    "50",
    "questions",
    "wanted",
    "take",
    "moment",
    "dive",
    "practice",
    "exam",
    "show",
    "questions",
    "look",
    "like",
    "clicking",
    "one",
    "exams",
    "get",
    "right",
    "see",
    "already",
    "started",
    "practice",
    "exam",
    "one",
    "going",
    "click",
    "right",
    "see",
    "exam",
    "always",
    "timed",
    "case",
    "120",
    "minutes",
    "specific",
    "exam",
    "50",
    "questions",
    "practice",
    "exam",
    "see",
    "breakdown",
    "beginning",
    "types",
    "questions",
    "asked",
    "google",
    "cloud",
    "exams",
    "associate",
    "level",
    "usually",
    "structured",
    "common",
    "format",
    "generally",
    "start",
    "one",
    "two",
    "lines",
    "sentences",
    "typically",
    "represent",
    "scenario",
    "followed",
    "question",
    "question",
    "tends",
    "brief",
    "point",
    "immediately",
    "following",
    "presented",
    "number",
    "answers",
    "usually",
    "four",
    "five",
    "nature",
    "sometimes",
    "technical",
    "designed",
    "engineers",
    "like",
    "asking",
    "gcloud",
    "commands",
    "use",
    "execute",
    "given",
    "scenario",
    "well",
    "theoretical",
    "questions",
    "deal",
    "let",
    "say",
    "best",
    "practices",
    "questions",
    "specific",
    "services",
    "answers",
    "come",
    "two",
    "different",
    "styles",
    "either",
    "usually",
    "identifying",
    "correct",
    "answer",
    "group",
    "incorrect",
    "less",
    "correct",
    "answers",
    "whereas",
    "choosing",
    "multiple",
    "correct",
    "solutions",
    "identify",
    "answer",
    "well",
    "associate",
    "exam",
    "overall",
    "structure",
    "pretty",
    "simple",
    "nature",
    "typically",
    "either",
    "right",
    "wrong",
    "sometimes",
    "questions",
    "get",
    "tricky",
    "multiple",
    "possible",
    "answers",
    "select",
    "suitable",
    "ones",
    "although",
    "types",
    "questions",
    "usually",
    "show",
    "professional",
    "exam",
    "sometimes",
    "peek",
    "heads",
    "associate",
    "great",
    "tactic",
    "always",
    "like",
    "use",
    "immediately",
    "identify",
    "matters",
    "question",
    "start",
    "ruling",
    "answers",
    "wrong",
    "allow",
    "answer",
    "question",
    "lot",
    "quickly",
    "efficiently",
    "bring",
    "correct",
    "answer",
    "surface",
    "well",
    "making",
    "answer",
    "lot",
    "obvious",
    "making",
    "entire",
    "question",
    "less",
    "complex",
    "instance",
    "question",
    "immediately",
    "asked",
    "google",
    "recommended",
    "practices",
    "comes",
    "using",
    "cloud",
    "storage",
    "backup",
    "disaster",
    "recovery",
    "would",
    "specific",
    "storage",
    "type",
    "quickly",
    "looking",
    "answers",
    "see",
    "standard",
    "storage",
    "near",
    "line",
    "storage",
    "part",
    "answer",
    "leave",
    "cold",
    "line",
    "storage",
    "archive",
    "storage",
    "two",
    "possible",
    "choices",
    "answer",
    "question",
    "typical",
    "techniques",
    "always",
    "like",
    "use",
    "exams",
    "provided",
    "gone",
    "course",
    "content",
    "able",
    "answer",
    "technical",
    "questions",
    "ease",
    "following",
    "techniques",
    "given",
    "applying",
    "question",
    "really",
    "help",
    "practice",
    "exam",
    "final",
    "exam",
    "landing",
    "passing",
    "grade",
    "getting",
    "certified",
    "music",
    "welcome",
    "back",
    "section",
    "wanted",
    "really",
    "hone",
    "basics",
    "cloud",
    "computing",
    "characteristics",
    "make",
    "different",
    "types",
    "computing",
    "differ",
    "well",
    "types",
    "service",
    "models",
    "lesson",
    "wanted",
    "dive",
    "definition",
    "cloud",
    "computing",
    "essential",
    "characteristics",
    "define",
    "advanced",
    "folk",
    "watching",
    "may",
    "review",
    "others",
    "may",
    "fulfill",
    "better",
    "understanding",
    "cloud",
    "cloud",
    "term",
    "thrown",
    "around",
    "lot",
    "days",
    "yet",
    "holds",
    "different",
    "definition",
    "understanding",
    "every",
    "individual",
    "could",
    "probably",
    "ask",
    "10",
    "people",
    "definition",
    "cloud",
    "chances",
    "everyone",
    "would",
    "take",
    "many",
    "see",
    "cloud",
    "abstract",
    "thing",
    "sky",
    "files",
    "emails",
    "stored",
    "much",
    "true",
    "definition",
    "put",
    "simple",
    "terms",
    "applied",
    "public",
    "cloud",
    "google",
    "cloud",
    "aws",
    "azure",
    "moving",
    "definition",
    "cloud",
    "computing",
    "delivery",
    "shared",
    "pool",
    "computing",
    "services",
    "public",
    "internet",
    "rapidly",
    "provisioned",
    "released",
    "minimal",
    "management",
    "effort",
    "service",
    "provider",
    "interaction",
    "computing",
    "services",
    "consist",
    "things",
    "like",
    "servers",
    "storage",
    "networking",
    "databases",
    "quickly",
    "provisioned",
    "accessed",
    "local",
    "computer",
    "internet",
    "connection",
    "coupled",
    "definition",
    "five",
    "essential",
    "characteristics",
    "define",
    "cloud",
    "model",
    "would",
    "like",
    "go",
    "believe",
    "would",
    "hold",
    "massive",
    "benefits",
    "understanding",
    "speaking",
    "cloud",
    "information",
    "found",
    "white",
    "paper",
    "published",
    "national",
    "institute",
    "standards",
    "technology",
    "include",
    "link",
    "publication",
    "lesson",
    "notes",
    "review",
    "essential",
    "characteristics",
    "follows",
    "first",
    "one",
    "defined",
    "able",
    "provision",
    "resources",
    "automatically",
    "without",
    "requiring",
    "human",
    "interaction",
    "provider",
    "end",
    "end",
    "never",
    "need",
    "call",
    "interact",
    "service",
    "provider",
    "order",
    "get",
    "resources",
    "provisioned",
    "well",
    "flexibility",
    "able",
    "provision",
    "resources",
    "whenever",
    "need",
    "given",
    "time",
    "day",
    "second",
    "characteristic",
    "broad",
    "network",
    "access",
    "simply",
    "means",
    "cloud",
    "computing",
    "resources",
    "available",
    "network",
    "accessed",
    "many",
    "different",
    "customer",
    "platforms",
    "mobile",
    "phones",
    "tablets",
    "computers",
    "words",
    "cloud",
    "services",
    "available",
    "network",
    "moving",
    "third",
    "resource",
    "pooling",
    "provider",
    "computing",
    "resources",
    "pooled",
    "together",
    "support",
    "model",
    "allows",
    "multiple",
    "customers",
    "share",
    "applications",
    "physical",
    "infrastructure",
    "retaining",
    "privacy",
    "security",
    "information",
    "includes",
    "things",
    "like",
    "processing",
    "power",
    "memory",
    "storage",
    "networking",
    "similar",
    "people",
    "living",
    "apartment",
    "building",
    "sharing",
    "building",
    "infrastructure",
    "like",
    "power",
    "water",
    "yet",
    "still",
    "apartments",
    "privacy",
    "within",
    "infrastructure",
    "also",
    "creates",
    "sense",
    "location",
    "independence",
    "customer",
    "generally",
    "control",
    "knowledge",
    "exact",
    "location",
    "provided",
    "resources",
    "may",
    "able",
    "specify",
    "location",
    "higher",
    "level",
    "abstraction",
    "end",
    "customer",
    "really",
    "option",
    "choosing",
    "exactly",
    "server",
    "server",
    "rack",
    "data",
    "center",
    "matter",
    "provided",
    "resources",
    "coming",
    "able",
    "option",
    "choose",
    "things",
    "like",
    "regions",
    "sections",
    "within",
    "region",
    "fourth",
    "essential",
    "characteristic",
    "rapid",
    "elasticity",
    "key",
    "factor",
    "makes",
    "cloud",
    "computing",
    "great",
    "agile",
    "capabilities",
    "elastically",
    "provisioned",
    "released",
    "cases",
    "automatically",
    "scale",
    "rapidly",
    "outwards",
    "inwards",
    "response",
    "demand",
    "consumer",
    "capabilities",
    "available",
    "provisioning",
    "often",
    "appear",
    "unlimited",
    "provisioned",
    "quantity",
    "time",
    "touching",
    "fifth",
    "last",
    "characteristic",
    "cloud",
    "systems",
    "automatically",
    "control",
    "optimize",
    "resource",
    "usage",
    "leveraging",
    "metering",
    "capability",
    "resource",
    "usage",
    "monitored",
    "controlled",
    "reported",
    "providing",
    "transparency",
    "provider",
    "consumer",
    "service",
    "means",
    "cloud",
    "computing",
    "resource",
    "usage",
    "metered",
    "pay",
    "accordingly",
    "used",
    "resource",
    "utilization",
    "optimized",
    "leveraging",
    "capabilities",
    "means",
    "cloud",
    "resource",
    "usage",
    "whether",
    "instances",
    "running",
    "cloud",
    "storage",
    "bandwidth",
    "gets",
    "monitored",
    "measured",
    "reported",
    "cloud",
    "service",
    "provider",
    "cost",
    "model",
    "based",
    "pay",
    "use",
    "payment",
    "based",
    "actual",
    "consumption",
    "customer",
    "knowing",
    "key",
    "characteristics",
    "cloud",
    "computing",
    "along",
    "benefits",
    "personally",
    "find",
    "really",
    "give",
    "leg",
    "exam",
    "well",
    "speaking",
    "others",
    "role",
    "companies",
    "start",
    "moving",
    "cloud",
    "hope",
    "lesson",
    "explained",
    "cloud",
    "computing",
    "benefits",
    "provides",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "wanted",
    "go",
    "four",
    "common",
    "cloud",
    "deployment",
    "models",
    "distinguish",
    "differences",
    "public",
    "cloud",
    "private",
    "cloud",
    "hybrid",
    "cloud",
    "deployment",
    "models",
    "common",
    "subject",
    "comes",
    "fair",
    "amount",
    "exam",
    "well",
    "common",
    "theme",
    "organization",
    "moving",
    "cloud",
    "knowing",
    "distinctions",
    "critical",
    "types",
    "architecture",
    "services",
    "would",
    "use",
    "specific",
    "scenario",
    "given",
    "well",
    "able",
    "speak",
    "different",
    "types",
    "deployment",
    "models",
    "engineer",
    "field",
    "getting",
    "back",
    "deployment",
    "models",
    "let",
    "start",
    "public",
    "cloud",
    "model",
    "touched",
    "bit",
    "last",
    "lesson",
    "public",
    "cloud",
    "defined",
    "computing",
    "services",
    "offered",
    "providers",
    "public",
    "internet",
    "making",
    "available",
    "anyone",
    "wants",
    "use",
    "purchase",
    "means",
    "google",
    "cloud",
    "fall",
    "category",
    "public",
    "cloud",
    "also",
    "vendors",
    "fall",
    "category",
    "aws",
    "azure",
    "public",
    "cloud",
    "cloud",
    "offered",
    "public",
    "internet",
    "public",
    "clouds",
    "also",
    "connected",
    "used",
    "together",
    "within",
    "single",
    "environment",
    "various",
    "use",
    "cases",
    "cloud",
    "deployment",
    "model",
    "called",
    "implementation",
    "extremely",
    "effective",
    "architected",
    "right",
    "way",
    "one",
    "implementation",
    "effective",
    "use",
    "used",
    "disaster",
    "recovery",
    "architecture",
    "would",
    "replicated",
    "across",
    "different",
    "public",
    "clouds",
    "case",
    "one",
    "go",
    "another",
    "could",
    "pick",
    "slack",
    "drives",
    "many",
    "cases",
    "deployment",
    "prevent",
    "vendor",
    "locked",
    "particular",
    "cloud",
    "provider",
    "infrastructure",
    "unable",
    "move",
    "due",
    "feature",
    "set",
    "main",
    "downfall",
    "type",
    "architecture",
    "infrastructure",
    "public",
    "cloud",
    "using",
    "fully",
    "utilized",
    "cloud",
    "vendor",
    "proprietary",
    "resources",
    "work",
    "specific",
    "infrastructure",
    "words",
    "order",
    "replicate",
    "environment",
    "needs",
    "within",
    "cloud",
    "removes",
    "cloud",
    "unique",
    "features",
    "makes",
    "special",
    "resources",
    "compelling",
    "sometimes",
    "finding",
    "right",
    "strategy",
    "tricky",
    "depending",
    "scenario",
    "next",
    "deployment",
    "model",
    "wanted",
    "touch",
    "private",
    "cloud",
    "private",
    "cloud",
    "refers",
    "architecture",
    "exists",
    "premise",
    "restricted",
    "business",
    "public",
    "access",
    "yet",
    "still",
    "carries",
    "five",
    "characteristics",
    "discussed",
    "regards",
    "defines",
    "cloud",
    "major",
    "cloud",
    "providers",
    "shown",
    "flavor",
    "private",
    "cloud",
    "implemented",
    "site",
    "google",
    "cloud",
    "anthos",
    "aws",
    "aws",
    "outposts",
    "azures",
    "azure",
    "stack",
    "show",
    "characteristic",
    "leverage",
    "similar",
    "technologies",
    "found",
    "vendor",
    "public",
    "cloud",
    "yet",
    "installed",
    "infrastructure",
    "please",
    "aware",
    "organizations",
    "may",
    "vmware",
    "implementation",
    "holds",
    "features",
    "yet",
    "considered",
    "private",
    "cloud",
    "true",
    "private",
    "cloud",
    "always",
    "meet",
    "characteristics",
    "make",
    "cloud",
    "possible",
    "use",
    "private",
    "cloud",
    "public",
    "cloud",
    "implementation",
    "called",
    "hybrid",
    "cloud",
    "hybrid",
    "cloud",
    "using",
    "public",
    "cloud",
    "conjunction",
    "private",
    "cloud",
    "single",
    "system",
    "common",
    "architecture",
    "used",
    "due",
    "compliance",
    "one",
    "cloud",
    "could",
    "help",
    "organizations",
    "achieve",
    "specific",
    "governance",
    "risk",
    "management",
    "compliance",
    "regulations",
    "cloud",
    "could",
    "take",
    "rest",
    "really",
    "like",
    "make",
    "important",
    "distinction",
    "infrastructure",
    "connected",
    "public",
    "cloud",
    "considered",
    "hybrid",
    "cloud",
    "known",
    "hybrid",
    "environment",
    "hybrid",
    "network",
    "infrastructure",
    "holds",
    "private",
    "cloud",
    "characteristics",
    "true",
    "hybrid",
    "cloud",
    "allows",
    "use",
    "exact",
    "interface",
    "tooling",
    "available",
    "public",
    "cloud",
    "aware",
    "avoid",
    "lot",
    "confusion",
    "road",
    "sum",
    "everything",
    "discussed",
    "comes",
    "public",
    "cloud",
    "one",
    "cloud",
    "provided",
    "one",
    "vendor",
    "available",
    "public",
    "internet",
    "two",
    "public",
    "clouds",
    "connected",
    "together",
    "used",
    "single",
    "system",
    "private",
    "cloud",
    "considered",
    "cloud",
    "follows",
    "five",
    "characteristics",
    "cloud",
    "restricted",
    "one",
    "organization",
    "accessibility",
    "public",
    "finally",
    "hybrid",
    "cloud",
    "private",
    "cloud",
    "connected",
    "public",
    "cloud",
    "used",
    "single",
    "environment",
    "note",
    "architecture",
    "connected",
    "public",
    "cloud",
    "considered",
    "hybrid",
    "environment",
    "hybrid",
    "cloud",
    "distinction",
    "two",
    "different",
    "observed",
    "carefully",
    "gotchas",
    "may",
    "come",
    "exam",
    "role",
    "engineer",
    "different",
    "cloud",
    "deployment",
    "models",
    "help",
    "distinguish",
    "type",
    "architecture",
    "using",
    "scenario",
    "given",
    "wanted",
    "cover",
    "comes",
    "cloud",
    "deployment",
    "models",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "finish",
    "nist",
    "definition",
    "cloud",
    "computing",
    "wanted",
    "touch",
    "cloud",
    "service",
    "models",
    "commonly",
    "referred",
    "zas",
    "model",
    "usually",
    "called",
    "zas",
    "xaas",
    "standing",
    "anything",
    "service",
    "includes",
    "services",
    "cloud",
    "customers",
    "consume",
    "x",
    "changed",
    "associate",
    "specific",
    "service",
    "order",
    "describe",
    "cloud",
    "service",
    "models",
    "needed",
    "touch",
    "concepts",
    "may",
    "may",
    "familiar",
    "make",
    "understanding",
    "service",
    "models",
    "little",
    "bit",
    "easier",
    "go",
    "course",
    "describe",
    "services",
    "available",
    "relate",
    "model",
    "lesson",
    "make",
    "much",
    "sense",
    "end",
    "make",
    "services",
    "cloud",
    "easier",
    "describe",
    "define",
    "comes",
    "deploying",
    "application",
    "deployed",
    "infrastructure",
    "stack",
    "like",
    "one",
    "see",
    "stack",
    "collection",
    "needed",
    "infrastructure",
    "application",
    "needs",
    "run",
    "layered",
    "layer",
    "builds",
    "top",
    "one",
    "previous",
    "create",
    "see",
    "see",
    "top",
    "traditional",
    "infrastructure",
    "stack",
    "typically",
    "used",
    "traditional",
    "model",
    "components",
    "managed",
    "customer",
    "purchasing",
    "data",
    "center",
    "network",
    "storage",
    "involved",
    "physical",
    "servers",
    "virtualization",
    "licensing",
    "operating",
    "systems",
    "staff",
    "needed",
    "put",
    "together",
    "including",
    "racking",
    "stacking",
    "cabling",
    "physical",
    "security",
    "also",
    "something",
    "needed",
    "taken",
    "consideration",
    "words",
    "organization",
    "put",
    "together",
    "looking",
    "huge",
    "costs",
    "advantages",
    "allowed",
    "major",
    "flexibility",
    "organization",
    "able",
    "tune",
    "way",
    "want",
    "satisfy",
    "application",
    "compliance",
    "standards",
    "basically",
    "anything",
    "wanted",
    "talking",
    "cloud",
    "service",
    "model",
    "concepts",
    "parts",
    "always",
    "managed",
    "parts",
    "managed",
    "vendor",
    "another",
    "concept",
    "wanted",
    "touch",
    "unit",
    "consumption",
    "vendor",
    "prices",
    "serving",
    "customer",
    "cloud",
    "became",
    "big",
    "market",
    "model",
    "data",
    "center",
    "hosted",
    "vendor",
    "would",
    "come",
    "along",
    "would",
    "take",
    "care",
    "everything",
    "regards",
    "data",
    "center",
    "racks",
    "power",
    "racks",
    "air",
    "conditioning",
    "networking",
    "cables",
    "building",
    "even",
    "physical",
    "security",
    "unit",
    "consumption",
    "rack",
    "space",
    "within",
    "data",
    "center",
    "vendor",
    "would",
    "charge",
    "rack",
    "space",
    "turn",
    "would",
    "take",
    "care",
    "necessities",
    "within",
    "data",
    "center",
    "less",
    "flexible",
    "traditional",
    "model",
    "data",
    "center",
    "abstracted",
    "throughout",
    "lesson",
    "wanted",
    "introduce",
    "concept",
    "might",
    "make",
    "things",
    "easier",
    "grasp",
    "pizza",
    "service",
    "traditional",
    "model",
    "would",
    "buy",
    "everything",
    "make",
    "pizza",
    "home",
    "go",
    "lesson",
    "less",
    "flexibility",
    "available",
    "layers",
    "abstracted",
    "next",
    "service",
    "model",
    "wanted",
    "introduce",
    "infrastructure",
    "service",
    "short",
    "layers",
    "data",
    "center",
    "virtualization",
    "taken",
    "care",
    "vendor",
    "basic",
    "model",
    "essentially",
    "virtual",
    "machines",
    "cloud",
    "data",
    "center",
    "set",
    "configure",
    "manage",
    "instances",
    "run",
    "data",
    "center",
    "infrastructure",
    "put",
    "whatever",
    "want",
    "google",
    "cloud",
    "google",
    "compute",
    "engine",
    "would",
    "satisfy",
    "model",
    "unit",
    "consumption",
    "would",
    "operating",
    "system",
    "would",
    "manage",
    "operating",
    "system",
    "updates",
    "everything",
    "decide",
    "put",
    "instance",
    "see",
    "still",
    "responsible",
    "container",
    "run",
    "time",
    "data",
    "application",
    "layers",
    "bringing",
    "pizza",
    "service",
    "model",
    "would",
    "picking",
    "pizza",
    "cooking",
    "home",
    "moving",
    "platform",
    "service",
    "paz",
    "short",
    "model",
    "geared",
    "towards",
    "developers",
    "pass",
    "cloud",
    "provider",
    "provides",
    "computing",
    "platform",
    "typically",
    "including",
    "operating",
    "system",
    "programming",
    "language",
    "execution",
    "environment",
    "database",
    "web",
    "server",
    "typically",
    "pass",
    "never",
    "worry",
    "operating",
    "system",
    "updates",
    "managing",
    "runtime",
    "middleware",
    "unit",
    "consumption",
    "would",
    "runtime",
    "runtime",
    "layer",
    "would",
    "layer",
    "would",
    "consume",
    "would",
    "running",
    "code",
    "supplied",
    "runtime",
    "environment",
    "cloud",
    "vendor",
    "provides",
    "provider",
    "manages",
    "hardware",
    "software",
    "infrastructure",
    "use",
    "service",
    "usually",
    "layer",
    "top",
    "layers",
    "data",
    "center",
    "runtime",
    "taken",
    "care",
    "vendor",
    "great",
    "example",
    "google",
    "cloud",
    "google",
    "app",
    "engine",
    "diving",
    "little",
    "bit",
    "later",
    "getting",
    "back",
    "pizza",
    "service",
    "model",
    "pass",
    "would",
    "fall",
    "pizza",
    "delivered",
    "right",
    "door",
    "past",
    "model",
    "explained",
    "want",
    "move",
    "last",
    "model",
    "sas",
    "stands",
    "software",
    "service",
    "sas",
    "layers",
    "taken",
    "care",
    "vendor",
    "users",
    "provided",
    "access",
    "application",
    "software",
    "cloud",
    "providers",
    "manage",
    "infrastructure",
    "platforms",
    "run",
    "applications",
    "g",
    "suite",
    "microsoft",
    "office",
    "365",
    "great",
    "examples",
    "model",
    "sas",
    "offer",
    "much",
    "flexibility",
    "vendor",
    "actually",
    "takes",
    "care",
    "layers",
    "unit",
    "consumption",
    "application",
    "course",
    "getting",
    "pizza",
    "service",
    "model",
    "sas",
    "pretty",
    "much",
    "dining",
    "restaurant",
    "enjoying",
    "pizza",
    "summarize",
    "data",
    "center",
    "site",
    "manage",
    "everything",
    "infrastructure",
    "service",
    "part",
    "stack",
    "abstracted",
    "cloud",
    "vendor",
    "platform",
    "service",
    "responsible",
    "application",
    "data",
    "everything",
    "else",
    "abstracted",
    "vendor",
    "software",
    "service",
    "using",
    "pizza",
    "service",
    "analogy",
    "premise",
    "buy",
    "everything",
    "make",
    "pizza",
    "home",
    "infrastructure",
    "service",
    "pick",
    "pizza",
    "cook",
    "home",
    "comes",
    "platform",
    "service",
    "pizza",
    "delivered",
    "course",
    "software",
    "service",
    "dining",
    "restaurant",
    "service",
    "models",
    "coming",
    "course",
    "function",
    "service",
    "containers",
    "service",
    "worry",
    "getting",
    "later",
    "wanted",
    "give",
    "heads",
    "may",
    "lot",
    "information",
    "take",
    "trust",
    "knowing",
    "models",
    "give",
    "better",
    "understanding",
    "services",
    "provided",
    "google",
    "cloud",
    "well",
    "cloud",
    "vendor",
    "wanted",
    "cover",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "wanted",
    "discuss",
    "google",
    "cloud",
    "global",
    "infrastructure",
    "data",
    "centers",
    "connected",
    "traffic",
    "flows",
    "request",
    "done",
    "along",
    "overall",
    "structure",
    "google",
    "cloud",
    "geographic",
    "locations",
    "divided",
    "better",
    "availability",
    "durability",
    "latency",
    "google",
    "holds",
    "highly",
    "provisioned",
    "low",
    "latency",
    "network",
    "traffic",
    "stays",
    "google",
    "private",
    "backbone",
    "journey",
    "ensuring",
    "high",
    "performance",
    "user",
    "experience",
    "always",
    "norm",
    "google",
    "cloud",
    "designed",
    "serve",
    "users",
    "around",
    "world",
    "designing",
    "infrastructure",
    "redundant",
    "cloud",
    "regions",
    "connected",
    "high",
    "bandwidth",
    "fiber",
    "cables",
    "well",
    "subsea",
    "cables",
    "connecting",
    "different",
    "continents",
    "currently",
    "google",
    "invested",
    "13",
    "subsea",
    "cables",
    "connecting",
    "continents",
    "points",
    "presence",
    "see",
    "diagram",
    "hundreds",
    "thousands",
    "miles",
    "fiber",
    "cables",
    "also",
    "laid",
    "connect",
    "points",
    "presence",
    "direct",
    "connectivity",
    "privacy",
    "reduced",
    "latency",
    "give",
    "idea",
    "subsea",
    "cable",
    "run",
    "might",
    "look",
    "like",
    "included",
    "diagram",
    "dedicated",
    "google",
    "customers",
    "much",
    "goes",
    "running",
    "cables",
    "connect",
    "continents",
    "see",
    "north",
    "virginia",
    "region",
    "connected",
    "belgium",
    "region",
    "europe",
    "cable",
    "run",
    "north",
    "virginia",
    "data",
    "center",
    "well",
    "point",
    "presence",
    "place",
    "going",
    "landing",
    "station",
    "going",
    "deep",
    "sea",
    "side",
    "landing",
    "station",
    "french",
    "west",
    "coast",
    "picks",
    "side",
    "cable",
    "brings",
    "data",
    "center",
    "belgium",
    "region",
    "typical",
    "subsea",
    "cable",
    "run",
    "google",
    "continents",
    "connected",
    "maximum",
    "global",
    "connectivity",
    "time",
    "recording",
    "video",
    "google",
    "cloud",
    "footprint",
    "spans",
    "24",
    "regions",
    "73",
    "zones",
    "144",
    "points",
    "presence",
    "across",
    "200",
    "countries",
    "territories",
    "worldwide",
    "see",
    "white",
    "dots",
    "map",
    "regions",
    "currently",
    "built",
    "expand",
    "network",
    "wider",
    "connectivity",
    "show",
    "request",
    "routed",
    "google",
    "network",
    "thought",
    "would",
    "demonstrate",
    "using",
    "tony",
    "bowtie",
    "tony",
    "makes",
    "request",
    "database",
    "google",
    "cloud",
    "google",
    "responds",
    "tony",
    "request",
    "pop",
    "edge",
    "network",
    "location",
    "provide",
    "lowest",
    "latency",
    "point",
    "presence",
    "isps",
    "connect",
    "google",
    "network",
    "google",
    "edge",
    "network",
    "receives",
    "tony",
    "request",
    "passes",
    "nearest",
    "google",
    "data",
    "center",
    "private",
    "fiber",
    "network",
    "data",
    "center",
    "generates",
    "response",
    "optimized",
    "provide",
    "best",
    "experience",
    "tony",
    "given",
    "moment",
    "time",
    "app",
    "browser",
    "tony",
    "using",
    "retrieves",
    "requested",
    "content",
    "response",
    "back",
    "various",
    "google",
    "locations",
    "including",
    "google",
    "data",
    "centers",
    "edge",
    "pops",
    "edge",
    "nodes",
    "whichever",
    "providing",
    "lowest",
    "latency",
    "data",
    "path",
    "happens",
    "matter",
    "seconds",
    "due",
    "google",
    "global",
    "infrastructure",
    "travels",
    "securely",
    "least",
    "amount",
    "latency",
    "possible",
    "matter",
    "geographic",
    "location",
    "request",
    "coming",
    "wanted",
    "take",
    "moment",
    "break",
    "geographic",
    "areas",
    "broken",
    "organized",
    "google",
    "cloud",
    "start",
    "geographic",
    "location",
    "united",
    "states",
    "america",
    "broken",
    "regions",
    "finally",
    "zones",
    "start",
    "wanted",
    "talk",
    "zones",
    "zone",
    "deployment",
    "area",
    "google",
    "cloud",
    "resources",
    "within",
    "region",
    "zone",
    "smallest",
    "entity",
    "google",
    "global",
    "network",
    "think",
    "single",
    "failure",
    "domain",
    "within",
    "region",
    "best",
    "practice",
    "resources",
    "always",
    "deployed",
    "zones",
    "closest",
    "users",
    "optimal",
    "latency",
    "next",
    "region",
    "regions",
    "independent",
    "geographic",
    "areas",
    "subdivided",
    "zones",
    "think",
    "region",
    "collection",
    "zones",
    "region",
    "multiple",
    "zones",
    "designed",
    "fault",
    "tolerance",
    "high",
    "availability",
    "intercommunication",
    "zones",
    "within",
    "region",
    "five",
    "milliseconds",
    "rest",
    "assured",
    "data",
    "always",
    "traveling",
    "optimal",
    "speeds",
    "moving",
    "large",
    "geographic",
    "areas",
    "contain",
    "two",
    "regions",
    "allows",
    "google",
    "services",
    "maximize",
    "redundancy",
    "distribution",
    "within",
    "across",
    "regions",
    "google",
    "redundancy",
    "high",
    "availability",
    "data",
    "spread",
    "across",
    "multiple",
    "regions",
    "always",
    "reassures",
    "data",
    "constantly",
    "available",
    "covers",
    "concepts",
    "wanted",
    "go",
    "comes",
    "geography",
    "regions",
    "within",
    "google",
    "cloud",
    "note",
    "geography",
    "regions",
    "concepts",
    "fundamental",
    "exam",
    "role",
    "google",
    "cloud",
    "recap",
    "zone",
    "deployment",
    "area",
    "google",
    "cloud",
    "resources",
    "within",
    "region",
    "zone",
    "smallest",
    "entity",
    "google",
    "global",
    "infrastructure",
    "region",
    "independent",
    "geographic",
    "area",
    "subdivided",
    "zones",
    "finally",
    "comes",
    "large",
    "geographic",
    "areas",
    "contains",
    "two",
    "regions",
    "fundamental",
    "concepts",
    "know",
    "exam",
    "role",
    "google",
    "cloud",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "overview",
    "compute",
    "service",
    "options",
    "available",
    "google",
    "cloud",
    "differ",
    "fall",
    "cloud",
    "service",
    "model",
    "lesson",
    "overview",
    "compute",
    "options",
    "diving",
    "deeper",
    "compute",
    "option",
    "later",
    "course",
    "google",
    "cloud",
    "gives",
    "many",
    "options",
    "comes",
    "compute",
    "services",
    "ones",
    "offer",
    "complete",
    "control",
    "flexibility",
    "others",
    "offer",
    "flexible",
    "container",
    "technology",
    "managed",
    "application",
    "platform",
    "serverless",
    "environments",
    "take",
    "compute",
    "options",
    "look",
    "service",
    "model",
    "perspective",
    "see",
    "much",
    "flexibility",
    "starting",
    "left",
    "infrastructure",
    "service",
    "giving",
    "optimal",
    "flexibility",
    "moving",
    "way",
    "right",
    "function",
    "service",
    "offering",
    "less",
    "flexibility",
    "upside",
    "less",
    "manage",
    "going",
    "compute",
    "options",
    "starting",
    "left",
    "infrastructure",
    "service",
    "compute",
    "engine",
    "compute",
    "engine",
    "google",
    "staple",
    "infrastructure",
    "service",
    "product",
    "offers",
    "virtual",
    "machines",
    "vms",
    "called",
    "instances",
    "instances",
    "deployed",
    "region",
    "zone",
    "choose",
    "also",
    "option",
    "deciding",
    "operating",
    "system",
    "want",
    "well",
    "software",
    "option",
    "installing",
    "different",
    "types",
    "flavors",
    "linux",
    "windows",
    "software",
    "go",
    "google",
    "also",
    "gives",
    "options",
    "creating",
    "instances",
    "using",
    "public",
    "private",
    "images",
    "company",
    "private",
    "image",
    "like",
    "use",
    "use",
    "create",
    "instances",
    "google",
    "also",
    "gives",
    "option",
    "use",
    "public",
    "images",
    "create",
    "instances",
    "available",
    "launch",
    "compute",
    "engine",
    "well",
    "also",
    "images",
    "software",
    "packages",
    "available",
    "google",
    "cloud",
    "marketplace",
    "diving",
    "little",
    "bit",
    "deeper",
    "google",
    "cloud",
    "marketplace",
    "another",
    "lesson",
    "know",
    "slew",
    "images",
    "available",
    "create",
    "instances",
    "giving",
    "ease",
    "deploy",
    "comes",
    "compute",
    "engine",
    "managing",
    "multiple",
    "instances",
    "done",
    "using",
    "instance",
    "groups",
    "looking",
    "adding",
    "removing",
    "capacity",
    "compute",
    "engine",
    "instances",
    "automatically",
    "would",
    "use",
    "auto",
    "scaling",
    "conjunction",
    "instance",
    "groups",
    "compute",
    "engine",
    "also",
    "gives",
    "option",
    "attaching",
    "detaching",
    "disks",
    "need",
    "well",
    "google",
    "cloud",
    "storage",
    "used",
    "conjunction",
    "compute",
    "engine",
    "another",
    "storage",
    "option",
    "connecting",
    "directly",
    "compute",
    "engine",
    "google",
    "gives",
    "option",
    "using",
    "ssh",
    "securely",
    "connect",
    "moving",
    "next",
    "compute",
    "service",
    "option",
    "google",
    "kubernetes",
    "engine",
    "also",
    "known",
    "gke",
    "gke",
    "google",
    "flagship",
    "container",
    "orchestration",
    "system",
    "automating",
    "deploying",
    "scaling",
    "managing",
    "containers",
    "gke",
    "also",
    "built",
    "open",
    "source",
    "kubernetes",
    "project",
    "introduced",
    "google",
    "public",
    "back",
    "2014",
    "google",
    "made",
    "kubernetes",
    "managed",
    "service",
    "many",
    "decided",
    "build",
    "kubernetes",
    "premise",
    "data",
    "centers",
    "built",
    "platform",
    "gke",
    "offers",
    "flexibility",
    "integrating",
    "kubernetes",
    "deployments",
    "hood",
    "gke",
    "uses",
    "compute",
    "engine",
    "instances",
    "nodes",
    "cluster",
    "quick",
    "note",
    "cluster",
    "group",
    "nodes",
    "compute",
    "engine",
    "instances",
    "going",
    "much",
    "greater",
    "detail",
    "different",
    "lesson",
    "already",
    "figured",
    "google",
    "kubernetes",
    "engine",
    "considered",
    "container",
    "service",
    "next",
    "compute",
    "service",
    "option",
    "wanted",
    "go",
    "falls",
    "platform",
    "service",
    "app",
    "engine",
    "app",
    "engine",
    "fully",
    "managed",
    "serverless",
    "platform",
    "developing",
    "hosting",
    "web",
    "applications",
    "scale",
    "app",
    "engine",
    "google",
    "handles",
    "management",
    "resources",
    "example",
    "application",
    "requires",
    "computing",
    "resources",
    "traffic",
    "website",
    "increases",
    "google",
    "automatically",
    "scales",
    "system",
    "provide",
    "resources",
    "system",
    "software",
    "needs",
    "security",
    "update",
    "well",
    "handled",
    "need",
    "really",
    "take",
    "care",
    "application",
    "build",
    "application",
    "favorite",
    "language",
    "go",
    "many",
    "others",
    "use",
    "runtimes",
    "use",
    "custom",
    "runtimes",
    "allow",
    "write",
    "code",
    "language",
    "app",
    "engine",
    "also",
    "allows",
    "connect",
    "google",
    "cloud",
    "storage",
    "products",
    "databases",
    "seamlessly",
    "app",
    "engine",
    "also",
    "offers",
    "flexibility",
    "connecting",
    "databases",
    "well",
    "cloud",
    "providers",
    "vendors",
    "app",
    "engine",
    "also",
    "integrates",
    "security",
    "product",
    "google",
    "cloud",
    "called",
    "web",
    "security",
    "scanner",
    "identify",
    "security",
    "vulnerabilities",
    "covers",
    "app",
    "engine",
    "nutshell",
    "moving",
    "next",
    "compute",
    "service",
    "option",
    "cloud",
    "functions",
    "cloud",
    "functions",
    "fall",
    "function",
    "service",
    "serverless",
    "execution",
    "environment",
    "building",
    "connecting",
    "cloud",
    "services",
    "cloud",
    "functions",
    "write",
    "simple",
    "single",
    "purpose",
    "functions",
    "attached",
    "events",
    "produced",
    "infrastructure",
    "services",
    "google",
    "cloud",
    "function",
    "triggered",
    "event",
    "watched",
    "fired",
    "code",
    "executes",
    "fully",
    "managed",
    "environment",
    "need",
    "provision",
    "infrastructure",
    "worry",
    "managing",
    "servers",
    "cloud",
    "functions",
    "written",
    "using",
    "javascript",
    "python",
    "3",
    "go",
    "java",
    "runtimes",
    "take",
    "function",
    "run",
    "standard",
    "environments",
    "makes",
    "extremely",
    "portable",
    "cloud",
    "functions",
    "good",
    "choice",
    "use",
    "cases",
    "include",
    "following",
    "data",
    "processing",
    "etl",
    "operations",
    "video",
    "transcoding",
    "iot",
    "streaming",
    "data",
    "web",
    "hooks",
    "respond",
    "http",
    "triggers",
    "lightweight",
    "apis",
    "compose",
    "loosely",
    "coupled",
    "logic",
    "applications",
    "well",
    "mobile",
    "functions",
    "cloud",
    "functions",
    "considered",
    "function",
    "service",
    "covers",
    "cloud",
    "functions",
    "moving",
    "far",
    "right",
    "screen",
    "side",
    "arrow",
    "last",
    "compute",
    "service",
    "option",
    "cloud",
    "run",
    "cloud",
    "run",
    "fully",
    "managed",
    "compute",
    "platform",
    "deploying",
    "scaling",
    "containerized",
    "applications",
    "quickly",
    "securely",
    "cloudrun",
    "built",
    "open",
    "standard",
    "called",
    "k",
    "native",
    "enabled",
    "portability",
    "applications",
    "built",
    "cloudrun",
    "also",
    "abstracts",
    "away",
    "infrastructure",
    "management",
    "automatically",
    "scaling",
    "almost",
    "instantaneously",
    "depending",
    "traffic",
    "cloud",
    "run",
    "google",
    "response",
    "abstracting",
    "infrastructure",
    "designed",
    "run",
    "containers",
    "known",
    "serverless",
    "containers",
    "cloudrun",
    "massive",
    "flexibility",
    "write",
    "language",
    "library",
    "using",
    "binary",
    "compute",
    "service",
    "considered",
    "function",
    "service",
    "time",
    "recording",
    "video",
    "heard",
    "cloud",
    "cloudrun",
    "exam",
    "since",
    "compute",
    "service",
    "option",
    "felt",
    "need",
    "cloudrun",
    "honorable",
    "mention",
    "compute",
    "service",
    "options",
    "available",
    "google",
    "cloud",
    "diving",
    "deeper",
    "one",
    "later",
    "course",
    "overview",
    "compute",
    "service",
    "options",
    "available",
    "google",
    "cloud",
    "platform",
    "wanted",
    "cover",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "last",
    "lesson",
    "covered",
    "different",
    "options",
    "compute",
    "services",
    "lesson",
    "going",
    "cover",
    "options",
    "available",
    "couple",
    "well",
    "compute",
    "services",
    "diving",
    "deeper",
    "different",
    "storage",
    "types",
    "different",
    "databases",
    "available",
    "google",
    "cloud",
    "strictly",
    "overview",
    "diving",
    "deeper",
    "services",
    "later",
    "course",
    "comes",
    "storage",
    "options",
    "three",
    "services",
    "readily",
    "available",
    "google",
    "cloud",
    "specific",
    "use",
    "case",
    "diving",
    "second",
    "first",
    "one",
    "wanted",
    "go",
    "cloud",
    "storage",
    "cloud",
    "storage",
    "google",
    "consistent",
    "scalable",
    "large",
    "capacity",
    "highly",
    "durable",
    "object",
    "storage",
    "refer",
    "object",
    "storage",
    "type",
    "storage",
    "would",
    "attach",
    "instance",
    "store",
    "operating",
    "system",
    "talking",
    "managing",
    "data",
    "objects",
    "documents",
    "pictures",
    "confused",
    "block",
    "storage",
    "manages",
    "data",
    "granular",
    "level",
    "operating",
    "system",
    "worry",
    "fully",
    "grasp",
    "concept",
    "object",
    "storage",
    "going",
    "detail",
    "later",
    "cloud",
    "storage",
    "lesson",
    "cloud",
    "storage",
    "11",
    "9",
    "durability",
    "mean",
    "durability",
    "basically",
    "loss",
    "files",
    "give",
    "better",
    "picture",
    "cloud",
    "storage",
    "durability",
    "store",
    "1",
    "million",
    "files",
    "statistically",
    "google",
    "would",
    "lose",
    "one",
    "file",
    "every",
    "659",
    "000",
    "years",
    "400",
    "times",
    "likely",
    "get",
    "hit",
    "meteor",
    "actually",
    "lose",
    "file",
    "see",
    "cloud",
    "storage",
    "good",
    "place",
    "storing",
    "files",
    "another",
    "great",
    "feature",
    "cloud",
    "storage",
    "unlimited",
    "storage",
    "minimum",
    "object",
    "size",
    "feel",
    "free",
    "continuously",
    "put",
    "files",
    "cloud",
    "storage",
    "comes",
    "use",
    "cases",
    "cloud",
    "storage",
    "fantastic",
    "content",
    "delivery",
    "data",
    "lakes",
    "backups",
    "make",
    "cloud",
    "storage",
    "even",
    "flexible",
    "available",
    "different",
    "storage",
    "classes",
    "availability",
    "going",
    "second",
    "comes",
    "different",
    "storage",
    "classes",
    "four",
    "different",
    "classes",
    "choose",
    "first",
    "one",
    "standard",
    "storage",
    "class",
    "storage",
    "class",
    "offers",
    "maximum",
    "availability",
    "data",
    "absolutely",
    "limitations",
    "great",
    "storage",
    "access",
    "time",
    "next",
    "storage",
    "class",
    "near",
    "line",
    "archival",
    "storage",
    "storage",
    "class",
    "cheaper",
    "standard",
    "designed",
    "storage",
    "needs",
    "accessed",
    "less",
    "month",
    "looking",
    "even",
    "cost",
    "effective",
    "solution",
    "cloud",
    "storage",
    "cold",
    "line",
    "storage",
    "class",
    "even",
    "lower",
    "cost",
    "archival",
    "storage",
    "solution",
    "storage",
    "class",
    "designed",
    "storage",
    "needs",
    "accessed",
    "less",
    "every",
    "quarter",
    "thought",
    "prices",
    "could",
    "get",
    "lower",
    "cold",
    "line",
    "cloud",
    "storage",
    "offered",
    "another",
    "storage",
    "class",
    "called",
    "archive",
    "lowest",
    "cost",
    "archival",
    "storage",
    "offers",
    "storage",
    "fraction",
    "penny",
    "per",
    "gigabyte",
    "designed",
    "archival",
    "backup",
    "use",
    "accessed",
    "less",
    "year",
    "comes",
    "cloud",
    "storage",
    "availability",
    "three",
    "options",
    "available",
    "region",
    "dual",
    "region",
    "region",
    "designed",
    "store",
    "data",
    "one",
    "single",
    "region",
    "dual",
    "region",
    "exactly",
    "sounds",
    "pair",
    "regions",
    "multiregion",
    "cloud",
    "storage",
    "stores",
    "data",
    "large",
    "geographic",
    "area",
    "consisting",
    "many",
    "different",
    "regions",
    "across",
    "selected",
    "geographic",
    "area",
    "covers",
    "cloud",
    "storage",
    "storage",
    "option",
    "next",
    "storage",
    "option",
    "wanted",
    "talk",
    "file",
    "store",
    "file",
    "store",
    "fully",
    "managed",
    "nfs",
    "file",
    "server",
    "google",
    "cloud",
    "nfs",
    "version",
    "3",
    "compliant",
    "store",
    "data",
    "running",
    "applications",
    "multiple",
    "vm",
    "instances",
    "kubernetes",
    "clusters",
    "accessing",
    "data",
    "time",
    "file",
    "store",
    "great",
    "option",
    "thinking",
    "accessing",
    "data",
    "let",
    "say",
    "instance",
    "group",
    "need",
    "multiple",
    "instances",
    "access",
    "data",
    "moving",
    "last",
    "storage",
    "option",
    "persistent",
    "disks",
    "persistent",
    "disks",
    "durable",
    "block",
    "storage",
    "instances",
    "explained",
    "block",
    "storage",
    "different",
    "object",
    "storage",
    "remember",
    "previously",
    "explained",
    "object",
    "storage",
    "designed",
    "store",
    "objects",
    "data",
    "photos",
    "videos",
    "whereas",
    "block",
    "storage",
    "raw",
    "storage",
    "capacity",
    "used",
    "drives",
    "connected",
    "operating",
    "system",
    "case",
    "persistent",
    "disks",
    "persistent",
    "disks",
    "come",
    "two",
    "options",
    "first",
    "one",
    "standard",
    "option",
    "gives",
    "regular",
    "standard",
    "storage",
    "reasonable",
    "price",
    "option",
    "solid",
    "state",
    "ssd",
    "gives",
    "lower",
    "latency",
    "higher",
    "iops",
    "around",
    "faster",
    "standard",
    "persistent",
    "disk",
    "options",
    "available",
    "zonal",
    "regional",
    "options",
    "depending",
    "need",
    "specific",
    "workload",
    "covered",
    "three",
    "storage",
    "options",
    "wanted",
    "touch",
    "database",
    "options",
    "available",
    "google",
    "cloud",
    "database",
    "options",
    "come",
    "sql",
    "nosql",
    "flavors",
    "depending",
    "use",
    "case",
    "getting",
    "options",
    "wanted",
    "start",
    "going",
    "little",
    "bit",
    "detail",
    "sql",
    "relational",
    "options",
    "first",
    "option",
    "cloud",
    "sql",
    "cloud",
    "sql",
    "fully",
    "managed",
    "database",
    "service",
    "offered",
    "postgres",
    "mysql",
    "sql",
    "server",
    "flavors",
    "cloud",
    "sql",
    "also",
    "option",
    "highly",
    "available",
    "across",
    "zones",
    "moving",
    "cloud",
    "spanner",
    "scalable",
    "relational",
    "database",
    "service",
    "highly",
    "available",
    "across",
    "zones",
    "across",
    "regions",
    "need",
    "available",
    "globally",
    "cloud",
    "spanner",
    "designed",
    "support",
    "transactions",
    "strong",
    "consistency",
    "synchronous",
    "replication",
    "moving",
    "nosql",
    "options",
    "four",
    "available",
    "services",
    "google",
    "cloud",
    "offers",
    "moving",
    "first",
    "one",
    "bigtable",
    "bigtable",
    "fully",
    "managed",
    "scalable",
    "nosql",
    "database",
    "high",
    "throughput",
    "low",
    "latency",
    "bigtable",
    "also",
    "comes",
    "flexibility",
    "cluster",
    "resizing",
    "without",
    "downtime",
    "next",
    "nosql",
    "option",
    "available",
    "datastore",
    "google",
    "cloud",
    "fast",
    "fully",
    "managed",
    "serverless",
    "nosql",
    "document",
    "database",
    "datastore",
    "designed",
    "mobile",
    "web",
    "internet",
    "things",
    "applications",
    "datastore",
    "capabilities",
    "replication",
    "well",
    "acid",
    "transactions",
    "know",
    "covering",
    "acid",
    "transactions",
    "later",
    "lesson",
    "next",
    "nosql",
    "options",
    "firestore",
    "nosql",
    "database",
    "optimized",
    "offline",
    "use",
    "looking",
    "store",
    "data",
    "database",
    "real",
    "time",
    "firestore",
    "option",
    "like",
    "bigtable",
    "resize",
    "cluster",
    "firestore",
    "without",
    "downtime",
    "last",
    "nosql",
    "option",
    "memorystore",
    "google",
    "cloud",
    "highly",
    "available",
    "memory",
    "service",
    "redis",
    "memcached",
    "fully",
    "managed",
    "service",
    "google",
    "cloud",
    "takes",
    "care",
    "everything",
    "know",
    "short",
    "lesson",
    "storage",
    "database",
    "options",
    "necessary",
    "overview",
    "nonetheless",
    "come",
    "wanted",
    "cover",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "services",
    "gcp",
    "take",
    "care",
    "networking",
    "still",
    "others",
    "like",
    "compute",
    "engine",
    "give",
    "bit",
    "flexibility",
    "type",
    "networking",
    "like",
    "establish",
    "lesson",
    "go",
    "networking",
    "services",
    "high",
    "level",
    "provide",
    "strictly",
    "overview",
    "give",
    "idea",
    "available",
    "particular",
    "type",
    "scenario",
    "comes",
    "connecting",
    "scaling",
    "network",
    "traffic",
    "going",
    "details",
    "networking",
    "services",
    "later",
    "lessons",
    "wanted",
    "start",
    "core",
    "networking",
    "features",
    "resources",
    "govern",
    "specific",
    "traffic",
    "traveling",
    "network",
    "networks",
    "firewalls",
    "routes",
    "come",
    "play",
    "first",
    "wanted",
    "start",
    "virtual",
    "private",
    "cloud",
    "also",
    "known",
    "vpc",
    "vpc",
    "manages",
    "networking",
    "functionality",
    "google",
    "cloud",
    "resources",
    "virtualized",
    "network",
    "within",
    "google",
    "cloud",
    "picture",
    "virtualized",
    "data",
    "center",
    "vpc",
    "core",
    "networking",
    "service",
    "also",
    "global",
    "resource",
    "spans",
    "throughout",
    "different",
    "regions",
    "available",
    "google",
    "cloud",
    "vpc",
    "contains",
    "default",
    "network",
    "well",
    "additional",
    "networks",
    "created",
    "project",
    "networks",
    "shared",
    "projects",
    "going",
    "depth",
    "vpc",
    "later",
    "lesson",
    "covered",
    "vpc",
    "wanted",
    "get",
    "firewall",
    "rules",
    "routes",
    "firewall",
    "rules",
    "segment",
    "networks",
    "global",
    "distributive",
    "firewall",
    "restrict",
    "access",
    "resources",
    "governs",
    "traffic",
    "coming",
    "instances",
    "network",
    "default",
    "network",
    "default",
    "set",
    "firewall",
    "rules",
    "already",
    "established",
    "fret",
    "create",
    "rules",
    "set",
    "accordingly",
    "depending",
    "workload",
    "comes",
    "routes",
    "specifies",
    "traffic",
    "routed",
    "within",
    "vpc",
    "get",
    "little",
    "bit",
    "granular",
    "routes",
    "specify",
    "packets",
    "leaving",
    "instance",
    "directed",
    "basic",
    "way",
    "defining",
    "way",
    "traffic",
    "going",
    "travel",
    "moving",
    "next",
    "concept",
    "wanted",
    "cover",
    "little",
    "bit",
    "low",
    "balancing",
    "distributes",
    "workloads",
    "across",
    "multiple",
    "instances",
    "two",
    "different",
    "types",
    "load",
    "balancing",
    "types",
    "load",
    "balancing",
    "broken",
    "even",
    "granular",
    "level",
    "comes",
    "http",
    "https",
    "low",
    "balancing",
    "type",
    "load",
    "balancing",
    "covers",
    "worldwide",
    "auto",
    "scaling",
    "load",
    "balancing",
    "multiple",
    "regions",
    "even",
    "single",
    "region",
    "single",
    "global",
    "ip",
    "https",
    "load",
    "balancing",
    "distributes",
    "traffic",
    "across",
    "various",
    "regions",
    "make",
    "sure",
    "traffic",
    "routed",
    "closest",
    "region",
    "case",
    "failures",
    "amongst",
    "instances",
    "instances",
    "bombarded",
    "traffic",
    "http",
    "https",
    "load",
    "balancing",
    "route",
    "traffic",
    "healthy",
    "instance",
    "next",
    "closest",
    "region",
    "another",
    "great",
    "feature",
    "load",
    "balancing",
    "distribute",
    "traffic",
    "based",
    "content",
    "type",
    "comes",
    "network",
    "load",
    "balancing",
    "regional",
    "load",
    "balancer",
    "supports",
    "ports",
    "distributes",
    "traffic",
    "among",
    "server",
    "instances",
    "region",
    "based",
    "incoming",
    "ip",
    "protocol",
    "data",
    "address",
    "port",
    "protocol",
    "comes",
    "networking",
    "dns",
    "plays",
    "big",
    "part",
    "dns",
    "plays",
    "big",
    "part",
    "networking",
    "google",
    "made",
    "service",
    "100",
    "available",
    "top",
    "giving",
    "dns",
    "queries",
    "absolute",
    "lowest",
    "latency",
    "google",
    "cloud",
    "dns",
    "publish",
    "maintain",
    "dns",
    "records",
    "using",
    "infrastructure",
    "google",
    "uses",
    "work",
    "managed",
    "zones",
    "dns",
    "records",
    "mx",
    "records",
    "tax",
    "records",
    "cname",
    "records",
    "records",
    "cli",
    "api",
    "sdk",
    "advanced",
    "connectivity",
    "options",
    "available",
    "google",
    "cloud",
    "cloudvpn",
    "direct",
    "interconnect",
    "cloudvpn",
    "connects",
    "existing",
    "network",
    "whether",
    "another",
    "location",
    "vbc",
    "network",
    "ipsec",
    "connection",
    "traffic",
    "encrypted",
    "travels",
    "two",
    "networks",
    "public",
    "internet",
    "comes",
    "direct",
    "interconnect",
    "connectivity",
    "option",
    "allows",
    "connect",
    "existing",
    "network",
    "vpc",
    "network",
    "using",
    "highly",
    "available",
    "low",
    "latency",
    "connection",
    "connectivity",
    "option",
    "traverse",
    "public",
    "internet",
    "merely",
    "connects",
    "google",
    "backbone",
    "gives",
    "highly",
    "available",
    "low",
    "latency",
    "connection",
    "couple",
    "advanced",
    "connectivity",
    "options",
    "direct",
    "carrier",
    "peering",
    "connections",
    "allow",
    "traffic",
    "flow",
    "google",
    "edge",
    "network",
    "locations",
    "pairing",
    "done",
    "directly",
    "done",
    "carrier",
    "although",
    "short",
    "lesson",
    "going",
    "greater",
    "depth",
    "concepts",
    "later",
    "lessons",
    "course",
    "cover",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "going",
    "learn",
    "resources",
    "entities",
    "organized",
    "within",
    "google",
    "cloud",
    "permissions",
    "inherited",
    "approach",
    "knowing",
    "structure",
    "fundamental",
    "concept",
    "know",
    "working",
    "gcp",
    "capacity",
    "defining",
    "resource",
    "hierarchy",
    "like",
    "take",
    "little",
    "bit",
    "time",
    "define",
    "resource",
    "context",
    "google",
    "cloud",
    "resource",
    "refer",
    "service",
    "level",
    "resources",
    "used",
    "process",
    "workloads",
    "compute",
    "instance",
    "vms",
    "cloud",
    "storage",
    "buckets",
    "even",
    "cloud",
    "sql",
    "databases",
    "well",
    "account",
    "level",
    "resources",
    "sit",
    "services",
    "organization",
    "folders",
    "projects",
    "course",
    "getting",
    "little",
    "bit",
    "deeper",
    "minute",
    "resource",
    "hierarchy",
    "google",
    "way",
    "configure",
    "grant",
    "access",
    "various",
    "cloud",
    "resources",
    "company",
    "within",
    "google",
    "cloud",
    "service",
    "level",
    "account",
    "level",
    "resource",
    "hierarchy",
    "google",
    "cloud",
    "truly",
    "define",
    "granular",
    "permissions",
    "needed",
    "need",
    "configure",
    "permissions",
    "everyone",
    "organization",
    "actually",
    "makes",
    "sense",
    "covered",
    "resource",
    "wanted",
    "start",
    "digging",
    "resource",
    "hierarchy",
    "structure",
    "google",
    "cloud",
    "resources",
    "organized",
    "hierarchically",
    "using",
    "relationship",
    "hierarchy",
    "designed",
    "map",
    "organization",
    "operational",
    "structure",
    "google",
    "cloud",
    "manage",
    "access",
    "control",
    "permissions",
    "groups",
    "related",
    "resources",
    "overall",
    "resource",
    "hierarchy",
    "give",
    "organizations",
    "better",
    "management",
    "permissions",
    "access",
    "control",
    "accessibility",
    "resources",
    "policies",
    "controlled",
    "identity",
    "access",
    "management",
    "also",
    "known",
    "iam",
    "big",
    "component",
    "gcp",
    "digging",
    "little",
    "bit",
    "later",
    "course",
    "iam",
    "policy",
    "set",
    "parent",
    "child",
    "inherit",
    "policy",
    "respectively",
    "access",
    "control",
    "policies",
    "configuration",
    "settings",
    "parent",
    "resource",
    "always",
    "inherited",
    "child",
    "also",
    "please",
    "note",
    "child",
    "object",
    "exactly",
    "one",
    "parent",
    "policies",
    "controlled",
    "iam",
    "understand",
    "little",
    "bit",
    "gcp",
    "resource",
    "hierarchy",
    "works",
    "wanted",
    "dig",
    "layers",
    "support",
    "hierarchy",
    "diagram",
    "exactly",
    "resource",
    "hierarchy",
    "looks",
    "like",
    "awesomeness",
    "including",
    "billing",
    "account",
    "along",
    "payments",
    "profile",
    "going",
    "get",
    "right",
    "actually",
    "covering",
    "later",
    "lesson",
    "later",
    "building",
    "structure",
    "top",
    "start",
    "domain",
    "cloud",
    "level",
    "see",
    "domain",
    "top",
    "primary",
    "identity",
    "organization",
    "domain",
    "level",
    "manage",
    "users",
    "organizations",
    "users",
    "policies",
    "linked",
    "g",
    "suite",
    "cloud",
    "identity",
    "accounts",
    "underneath",
    "domain",
    "level",
    "organization",
    "level",
    "integrated",
    "closely",
    "domain",
    "organization",
    "level",
    "represents",
    "organization",
    "root",
    "node",
    "gcp",
    "resource",
    "hierarchy",
    "associated",
    "exactly",
    "one",
    "domain",
    "domain",
    "set",
    "bowtie",
    "inc",
    "entities",
    "resources",
    "belong",
    "grouped",
    "organization",
    "controlled",
    "policies",
    "applied",
    "organization",
    "inherited",
    "entities",
    "resources",
    "underneath",
    "folders",
    "projects",
    "resources",
    "get",
    "policies",
    "applied",
    "organization",
    "layer",
    "know",
    "dug",
    "roles",
    "yet",
    "one",
    "thing",
    "want",
    "point",
    "organization",
    "created",
    "organization",
    "admin",
    "role",
    "created",
    "allow",
    "full",
    "access",
    "edit",
    "resources",
    "moving",
    "folders",
    "layer",
    "additional",
    "grouping",
    "mechanism",
    "isolation",
    "boundary",
    "project",
    "essence",
    "grouping",
    "folders",
    "projects",
    "resources",
    "different",
    "departments",
    "teams",
    "within",
    "company",
    "great",
    "way",
    "organize",
    "couple",
    "caveats",
    "comes",
    "folders",
    "first",
    "one",
    "must",
    "organization",
    "node",
    "second",
    "one",
    "folder",
    "contain",
    "multiple",
    "folders",
    "resources",
    "folder",
    "resource",
    "exactly",
    "one",
    "parent",
    "moving",
    "projects",
    "layer",
    "core",
    "organizational",
    "component",
    "google",
    "cloud",
    "projects",
    "required",
    "use",
    "service",
    "level",
    "resources",
    "projects",
    "base",
    "level",
    "organizing",
    "entity",
    "gcp",
    "parent",
    "service",
    "level",
    "resources",
    "note",
    "given",
    "resource",
    "exist",
    "one",
    "project",
    "multiple",
    "projects",
    "time",
    "moving",
    "last",
    "layer",
    "resources",
    "layer",
    "service",
    "level",
    "resource",
    "created",
    "google",
    "cloud",
    "everything",
    "compute",
    "engine",
    "instances",
    "cloud",
    "storage",
    "buckets",
    "cloud",
    "sql",
    "databases",
    "apis",
    "users",
    "service",
    "level",
    "resources",
    "create",
    "google",
    "cloud",
    "fall",
    "layer",
    "giving",
    "hierarchy",
    "little",
    "bit",
    "context",
    "want",
    "touch",
    "labels",
    "second",
    "labels",
    "help",
    "categorize",
    "resources",
    "using",
    "key",
    "value",
    "pair",
    "attach",
    "resource",
    "labels",
    "help",
    "break",
    "organize",
    "costs",
    "comes",
    "billing",
    "give",
    "structure",
    "regards",
    "hierarchy",
    "domain",
    "level",
    "everything",
    "underneath",
    "considered",
    "resource",
    "break",
    "even",
    "everything",
    "see",
    "organization",
    "layer",
    "projects",
    "layer",
    "considered",
    "account",
    "level",
    "resource",
    "everything",
    "resource",
    "layer",
    "considered",
    "service",
    "level",
    "resource",
    "google",
    "cloud",
    "resource",
    "hierarchy",
    "split",
    "organized",
    "finish",
    "lesson",
    "wanted",
    "give",
    "quick",
    "policies",
    "applied",
    "hierarchical",
    "level",
    "thought",
    "bring",
    "tony",
    "bowtie",
    "quick",
    "demo",
    "give",
    "example",
    "tony",
    "bowtie",
    "part",
    "department",
    "b",
    "tony",
    "manager",
    "lark",
    "decides",
    "set",
    "policy",
    "department",
    "b",
    "folder",
    "policy",
    "grants",
    "project",
    "owner",
    "role",
    "tony",
    "tony",
    "project",
    "owner",
    "role",
    "project",
    "x",
    "project",
    "time",
    "lark",
    "assigns",
    "laura",
    "cloud",
    "storage",
    "admin",
    "role",
    "project",
    "x",
    "thus",
    "able",
    "manage",
    "cloud",
    "storage",
    "buckets",
    "project",
    "hierarchy",
    "permission",
    "inheritance",
    "comes",
    "quite",
    "bit",
    "exam",
    "something",
    "carefully",
    "examined",
    "applying",
    "permissions",
    "anywhere",
    "within",
    "hierarchy",
    "role",
    "engineer",
    "applying",
    "permissions",
    "policies",
    "resources",
    "existing",
    "policies",
    "may",
    "end",
    "getting",
    "desired",
    "results",
    "looking",
    "may",
    "chance",
    "overlooked",
    "hope",
    "diagrams",
    "given",
    "good",
    "contacts",
    "regards",
    "resource",
    "hierarchy",
    "structure",
    "permissions",
    "applied",
    "chain",
    "lesson",
    "resource",
    "hierarchy",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "covering",
    "different",
    "topics",
    "touch",
    "creating",
    "new",
    "google",
    "cloud",
    "account",
    "covering",
    "going",
    "free",
    "tier",
    "always",
    "free",
    "options",
    "differences",
    "demo",
    "showing",
    "create",
    "free",
    "tier",
    "account",
    "well",
    "also",
    "going",
    "need",
    "order",
    "fulfill",
    "demo",
    "remainder",
    "course",
    "demos",
    "run",
    "free",
    "tier",
    "built",
    "course",
    "built",
    "budget",
    "mind",
    "viewed",
    "ways",
    "keep",
    "price",
    "minimum",
    "still",
    "keeping",
    "demos",
    "extremely",
    "useful",
    "free",
    "tier",
    "falls",
    "within",
    "guidelines",
    "help",
    "learn",
    "without",
    "high",
    "ticket",
    "price",
    "getting",
    "quick",
    "overview",
    "differences",
    "free",
    "tier",
    "always",
    "free",
    "option",
    "broken",
    "significant",
    "differences",
    "free",
    "tier",
    "google",
    "cloud",
    "offers",
    "12",
    "month",
    "free",
    "trial",
    "300",
    "credit",
    "type",
    "account",
    "ends",
    "credit",
    "used",
    "12",
    "months",
    "whichever",
    "happens",
    "first",
    "looking",
    "taking",
    "advantage",
    "business",
    "level",
    "unfortunately",
    "free",
    "tier",
    "applies",
    "personal",
    "account",
    "attached",
    "business",
    "account",
    "moving",
    "always",
    "free",
    "option",
    "always",
    "free",
    "option",
    "special",
    "program",
    "regular",
    "part",
    "google",
    "cloud",
    "account",
    "provides",
    "limited",
    "access",
    "many",
    "google",
    "cloud",
    "resources",
    "free",
    "charge",
    "limits",
    "hit",
    "charged",
    "regular",
    "per",
    "second",
    "billing",
    "rate",
    "show",
    "little",
    "bit",
    "later",
    "monitor",
    "credits",
    "go",
    "using",
    "conjunction",
    "free",
    "tier",
    "account",
    "possible",
    "upgraded",
    "billing",
    "account",
    "also",
    "include",
    "business",
    "account",
    "bunch",
    "stipulations",
    "program",
    "include",
    "link",
    "lesson",
    "text",
    "later",
    "viewing",
    "convenience",
    "lastly",
    "get",
    "demo",
    "wanted",
    "go",
    "quick",
    "exactly",
    "needed",
    "open",
    "free",
    "tier",
    "account",
    "going",
    "start",
    "fresh",
    "new",
    "gmail",
    "address",
    "conflict",
    "current",
    "gmail",
    "address",
    "may",
    "gon",
    "na",
    "need",
    "credit",
    "card",
    "verification",
    "google",
    "make",
    "sure",
    "actual",
    "human",
    "robot",
    "wo",
    "charged",
    "unless",
    "go",
    "300",
    "credit",
    "limit",
    "well",
    "highly",
    "recommend",
    "going",
    "private",
    "browsing",
    "session",
    "whether",
    "using",
    "chrome",
    "would",
    "use",
    "incognito",
    "session",
    "using",
    "firefox",
    "would",
    "use",
    "private",
    "browsing",
    "microsoft",
    "edge",
    "would",
    "using",
    "private",
    "mode",
    "order",
    "start",
    "free",
    "trial",
    "head",
    "url",
    "listed",
    "also",
    "include",
    "lesson",
    "text",
    "head",
    "url",
    "see",
    "second",
    "okay",
    "free",
    "trial",
    "url",
    "google",
    "chrome",
    "incognito",
    "session",
    "going",
    "sign",
    "going",
    "go",
    "create",
    "account",
    "click",
    "create",
    "account",
    "mentioned",
    "earlier",
    "able",
    "create",
    "free",
    "trial",
    "account",
    "business",
    "going",
    "click",
    "going",
    "bring",
    "page",
    "says",
    "create",
    "google",
    "account",
    "going",
    "go",
    "create",
    "new",
    "gmail",
    "address",
    "instead",
    "going",
    "fill",
    "necessary",
    "information",
    "needed",
    "order",
    "open",
    "new",
    "gmail",
    "account",
    "finished",
    "typing",
    "password",
    "hit",
    "next",
    "got",
    "prompted",
    "six",
    "digit",
    "verification",
    "code",
    "plug",
    "order",
    "google",
    "needs",
    "telephone",
    "number",
    "gon",
    "na",
    "type",
    "let",
    "know",
    "verification",
    "done",
    "let",
    "google",
    "know",
    "bot",
    "real",
    "human",
    "google",
    "sent",
    "verification",
    "code",
    "verification",
    "code",
    "going",
    "plug",
    "going",
    "hit",
    "verify",
    "plug",
    "necessary",
    "information",
    "recovery",
    "email",
    "address",
    "birthday",
    "gender",
    "google",
    "authenticate",
    "case",
    "accidentally",
    "misplace",
    "password",
    "hit",
    "next",
    "google",
    "gives",
    "little",
    "bit",
    "information",
    "number",
    "used",
    "going",
    "go",
    "ahead",
    "skip",
    "course",
    "going",
    "read",
    "terms",
    "service",
    "privacy",
    "policy",
    "click",
    "agree",
    "see",
    "almost",
    "shows",
    "signing",
    "free",
    "trial",
    "canada",
    "depending",
    "country",
    "may",
    "change",
    "course",
    "read",
    "terms",
    "service",
    "going",
    "agree",
    "really",
    "want",
    "updates",
    "probably",
    "skip",
    "hit",
    "continue",
    "necessary",
    "information",
    "needs",
    "filled",
    "billing",
    "account",
    "type",
    "sure",
    "click",
    "individual",
    "opposed",
    "business",
    "fill",
    "necessary",
    "information",
    "regards",
    "address",
    "credit",
    "card",
    "details",
    "fill",
    "click",
    "start",
    "free",
    "trial",
    "entered",
    "information",
    "brought",
    "page",
    "prompt",
    "asking",
    "exactly",
    "need",
    "regards",
    "google",
    "cloud",
    "hit",
    "skip",
    "going",
    "zoom",
    "see",
    "little",
    "better",
    "left",
    "checklist",
    "go",
    "different",
    "resources",
    "even",
    "gives",
    "checklist",
    "go",
    "verify",
    "signed",
    "free",
    "tier",
    "account",
    "going",
    "go",
    "billing",
    "going",
    "see",
    "free",
    "trial",
    "credit",
    "says",
    "411",
    "dollars",
    "due",
    "fact",
    "currency",
    "canadian",
    "dollars",
    "converted",
    "us",
    "dollars",
    "going",
    "billing",
    "later",
    "lesson",
    "right",
    "actually",
    "logged",
    "wanted",
    "cover",
    "lesson",
    "sign",
    "free",
    "trial",
    "account",
    "mark",
    "lesson",
    "complete",
    "join",
    "next",
    "one",
    "secure",
    "account",
    "using",
    "method",
    "called",
    "verification",
    "music",
    "welcome",
    "back",
    "last",
    "lesson",
    "went",
    "ahead",
    "created",
    "brand",
    "new",
    "gcp",
    "account",
    "lesson",
    "discussing",
    "secure",
    "gcp",
    "account",
    "following",
    "best",
    "practices",
    "whenever",
    "account",
    "created",
    "google",
    "cloud",
    "applied",
    "regards",
    "personal",
    "accounts",
    "well",
    "super",
    "admin",
    "account",
    "always",
    "good",
    "keep",
    "safety",
    "priority",
    "lesson",
    "may",
    "refresher",
    "bit",
    "advanced",
    "everyone",
    "else",
    "steps",
    "could",
    "help",
    "attack",
    "account",
    "first",
    "like",
    "run",
    "scenario",
    "outcome",
    "secure",
    "accounts",
    "well",
    "different",
    "options",
    "reside",
    "google",
    "cloud",
    "comes",
    "locking",
    "account",
    "run",
    "demo",
    "console",
    "show",
    "apply",
    "specific",
    "scenario",
    "username",
    "password",
    "used",
    "secure",
    "account",
    "lark",
    "trouble",
    "causing",
    "manager",
    "looks",
    "shoulder",
    "tony",
    "bowtie",
    "plugs",
    "username",
    "password",
    "later",
    "access",
    "account",
    "wreak",
    "havoc",
    "tony",
    "reputation",
    "tony",
    "leaves",
    "coffee",
    "lark",
    "decides",
    "log",
    "send",
    "email",
    "tony",
    "account",
    "change",
    "already",
    "made",
    "decision",
    "next",
    "season",
    "store",
    "opening",
    "rome",
    "italy",
    "would",
    "look",
    "good",
    "tony",
    "easy",
    "lark",
    "steal",
    "tony",
    "password",
    "real",
    "life",
    "scenario",
    "would",
    "easy",
    "someone",
    "steal",
    "password",
    "someone",
    "steals",
    "password",
    "could",
    "even",
    "devious",
    "things",
    "lark",
    "sending",
    "harmful",
    "emails",
    "could",
    "lock",
    "account",
    "even",
    "delete",
    "emails",
    "documents",
    "verification",
    "comes",
    "help",
    "keep",
    "bad",
    "people",
    "even",
    "password",
    "verification",
    "extra",
    "layer",
    "security",
    "people",
    "one",
    "layer",
    "protect",
    "account",
    "password",
    "verification",
    "bad",
    "person",
    "hacks",
    "password",
    "still",
    "need",
    "phone",
    "security",
    "key",
    "get",
    "account",
    "verification",
    "works",
    "require",
    "something",
    "know",
    "something",
    "first",
    "one",
    "protect",
    "account",
    "something",
    "know",
    "password",
    "second",
    "something",
    "phone",
    "security",
    "key",
    "whenever",
    "sign",
    "google",
    "enter",
    "password",
    "usual",
    "code",
    "sent",
    "phone",
    "via",
    "text",
    "voice",
    "call",
    "google",
    "mobile",
    "app",
    "security",
    "key",
    "insert",
    "computer",
    "usb",
    "port",
    "codes",
    "sent",
    "text",
    "message",
    "voice",
    "call",
    "depending",
    "setting",
    "choose",
    "set",
    "google",
    "authenticator",
    "another",
    "app",
    "creates",
    "verification",
    "code",
    "great",
    "offline",
    "would",
    "enter",
    "verification",
    "code",
    "sign",
    "screen",
    "help",
    "verify",
    "another",
    "way",
    "verification",
    "using",
    "google",
    "prompts",
    "help",
    "protect",
    "sim",
    "swap",
    "phone",
    "number",
    "based",
    "hacks",
    "google",
    "prompts",
    "push",
    "notifications",
    "receive",
    "android",
    "phones",
    "signed",
    "google",
    "account",
    "iphones",
    "gmail",
    "app",
    "google",
    "app",
    "signed",
    "google",
    "account",
    "actually",
    "skip",
    "second",
    "step",
    "trusted",
    "devices",
    "want",
    "provide",
    "second",
    "verification",
    "step",
    "time",
    "sign",
    "computer",
    "phone",
    "check",
    "box",
    "next",
    "ask",
    "computer",
    "great",
    "added",
    "feature",
    "user",
    "device",
    "feature",
    "recommended",
    "device",
    "used",
    "multiple",
    "users",
    "security",
    "keys",
    "another",
    "way",
    "help",
    "protect",
    "google",
    "account",
    "phishing",
    "attacks",
    "hacker",
    "tries",
    "trick",
    "giving",
    "password",
    "personal",
    "information",
    "physical",
    "security",
    "key",
    "small",
    "device",
    "buy",
    "help",
    "prove",
    "signing",
    "google",
    "needs",
    "make",
    "sure",
    "simply",
    "connect",
    "key",
    "computer",
    "verify",
    "way",
    "verify",
    "account",
    "option",
    "using",
    "backup",
    "codes",
    "use",
    "codes",
    "print",
    "download",
    "multiple",
    "sets",
    "codes",
    "keep",
    "safe",
    "place",
    "case",
    "options",
    "verification",
    "personally",
    "found",
    "use",
    "using",
    "backup",
    "codes",
    "used",
    "past",
    "phone",
    "died",
    "ever",
    "since",
    "lark",
    "last",
    "email",
    "tony",
    "changed",
    "password",
    "added",
    "verification",
    "account",
    "would",
    "access",
    "would",
    "never",
    "worry",
    "others",
    "looking",
    "shoulder",
    "gain",
    "access",
    "account",
    "tony",
    "leaves",
    "coffee",
    "lark",
    "tries",
    "log",
    "unsuccessful",
    "due",
    "verification",
    "place",
    "tony",
    "clearly",
    "outsmarted",
    "bad",
    "man",
    "scenario",
    "lark",
    "look",
    "another",
    "way",
    "foil",
    "tony",
    "plan",
    "bring",
    "greatness",
    "bow",
    "ties",
    "across",
    "globe",
    "sure",
    "difference",
    "secure",
    "account",
    "secure",
    "account",
    "gone",
    "theory",
    "verification",
    "process",
    "going",
    "dive",
    "console",
    "implement",
    "demo",
    "aware",
    "also",
    "gmail",
    "console",
    "going",
    "go",
    "ahead",
    "google",
    "cloud",
    "console",
    "using",
    "url",
    "see",
    "whenever",
    "ready",
    "feel",
    "free",
    "join",
    "console",
    "back",
    "console",
    "top",
    "right",
    "hand",
    "corner",
    "find",
    "user",
    "icon",
    "simply",
    "click",
    "click",
    "google",
    "account",
    "going",
    "zoom",
    "better",
    "viewing",
    "order",
    "enable",
    "verification",
    "gon",
    "na",
    "go",
    "menu",
    "left",
    "click",
    "security",
    "signing",
    "google",
    "find",
    "verification",
    "currently",
    "well",
    "using",
    "phone",
    "sign",
    "going",
    "click",
    "bar",
    "verification",
    "definitely",
    "want",
    "add",
    "extra",
    "layer",
    "security",
    "definitely",
    "want",
    "keep",
    "bad",
    "guys",
    "going",
    "go",
    "ahead",
    "click",
    "get",
    "started",
    "button",
    "ask",
    "password",
    "entered",
    "phone",
    "number",
    "first",
    "signed",
    "account",
    "actually",
    "shows",
    "antony",
    "iphone",
    "get",
    "verification",
    "iphone",
    "going",
    "google",
    "prompt",
    "shows",
    "wanted",
    "change",
    "something",
    "else",
    "simply",
    "click",
    "show",
    "options",
    "security",
    "key",
    "well",
    "text",
    "message",
    "voice",
    "call",
    "highly",
    "recommend",
    "google",
    "prompt",
    "super",
    "easy",
    "use",
    "absolutely",
    "fuss",
    "always",
    "like",
    "verify",
    "done",
    "going",
    "click",
    "try",
    "button",
    "wanted",
    "show",
    "exactly",
    "live",
    "google",
    "prompt",
    "looks",
    "like",
    "going",
    "bring",
    "phone",
    "screen",
    "take",
    "look",
    "actually",
    "sent",
    "google",
    "prompt",
    "phone",
    "going",
    "go",
    "ahead",
    "open",
    "gmail",
    "app",
    "verify",
    "indeed",
    "wants",
    "log",
    "accept",
    "accepted",
    "google",
    "prompt",
    "another",
    "window",
    "pop",
    "asking",
    "backup",
    "option",
    "simply",
    "need",
    "phone",
    "number",
    "either",
    "get",
    "text",
    "message",
    "phone",
    "call",
    "options",
    "well",
    "use",
    "backup",
    "codes",
    "discussed",
    "earlier",
    "print",
    "download",
    "usually",
    "like",
    "use",
    "text",
    "message",
    "going",
    "use",
    "going",
    "send",
    "phone",
    "verify",
    "gon",
    "na",
    "plug",
    "code",
    "sent",
    "hit",
    "next",
    "second",
    "step",
    "google",
    "prompt",
    "default",
    "backup",
    "options",
    "ca",
    "get",
    "google",
    "prompt",
    "voice",
    "text",
    "message",
    "account",
    "antony",
    "gcloud",
    "ace",
    "sending",
    "antony",
    "device",
    "turn",
    "verification",
    "absolutely",
    "verification",
    "enabled",
    "wanted",
    "change",
    "available",
    "steps",
    "also",
    "edit",
    "edit",
    "phone",
    "number",
    "also",
    "set",
    "backup",
    "codes",
    "case",
    "need",
    "personal",
    "opinion",
    "verification",
    "account",
    "best",
    "practice",
    "always",
    "super",
    "admin",
    "account",
    "would",
    "gmail",
    "account",
    "currently",
    "signed",
    "find",
    "necessity",
    "users",
    "always",
    "make",
    "policy",
    "people",
    "add",
    "verification",
    "accounts",
    "highly",
    "recommend",
    "make",
    "best",
    "practice",
    "role",
    "engineer",
    "environment",
    "organization",
    "verification",
    "allow",
    "keep",
    "safe",
    "users",
    "safe",
    "environment",
    "safe",
    "malicious",
    "activities",
    "could",
    "happen",
    "time",
    "lesson",
    "verification",
    "securing",
    "account",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "many",
    "different",
    "ways",
    "interact",
    "google",
    "cloud",
    "services",
    "resources",
    "lesson",
    "overview",
    "gcp",
    "console",
    "interact",
    "using",
    "graphical",
    "user",
    "interface",
    "demo",
    "diving",
    "navigate",
    "gcp",
    "console",
    "point",
    "functions",
    "features",
    "may",
    "find",
    "helpful",
    "said",
    "let",
    "dive",
    "back",
    "console",
    "see",
    "free",
    "trial",
    "status",
    "still",
    "410",
    "credit",
    "canadian",
    "dollars",
    "guess",
    "consider",
    "lucky",
    "going",
    "go",
    "ahead",
    "dismiss",
    "activate",
    "otherwise",
    "kill",
    "free",
    "trial",
    "status",
    "want",
    "going",
    "hit",
    "dismiss",
    "main",
    "page",
    "bunch",
    "cards",
    "give",
    "status",
    "environment",
    "well",
    "status",
    "happening",
    "within",
    "google",
    "cloud",
    "cards",
    "customize",
    "hitting",
    "button",
    "customize",
    "turn",
    "go",
    "ahead",
    "move",
    "around",
    "like",
    "going",
    "put",
    "well",
    "going",
    "turn",
    "billing",
    "keep",
    "track",
    "exactly",
    "spend",
    "really",
    "need",
    "get",
    "starting",
    "card",
    "going",
    "turn",
    "well",
    "documentation",
    "going",
    "turn",
    "well",
    "apis",
    "always",
    "nice",
    "well",
    "project",
    "info",
    "reflects",
    "current",
    "project",
    "first",
    "project",
    "project",
    "name",
    "project",
    "id",
    "showing",
    "project",
    "number",
    "going",
    "dive",
    "deeper",
    "another",
    "lesson",
    "also",
    "note",
    "cards",
    "reflect",
    "exactly",
    "interacting",
    "resources",
    "dive",
    "cards",
    "end",
    "showing",
    "add",
    "turn",
    "going",
    "go",
    "click",
    "done",
    "satisfied",
    "way",
    "things",
    "look",
    "home",
    "page",
    "left",
    "wanted",
    "focus",
    "services",
    "available",
    "specific",
    "topics",
    "instance",
    "compute",
    "find",
    "app",
    "engine",
    "compute",
    "engine",
    "kubernetes",
    "note",
    "anything",
    "compute",
    "related",
    "find",
    "grouped",
    "together",
    "also",
    "another",
    "great",
    "feature",
    "pin",
    "exactly",
    "use",
    "often",
    "big",
    "user",
    "app",
    "engine",
    "pin",
    "move",
    "way",
    "top",
    "way",
    "saves",
    "time",
    "go",
    "look",
    "every",
    "time",
    "need",
    "using",
    "constantly",
    "great",
    "shortcut",
    "unpin",
    "simply",
    "go",
    "back",
    "pin",
    "click",
    "well",
    "like",
    "move",
    "menu",
    "way",
    "get",
    "screen",
    "real",
    "estate",
    "simply",
    "click",
    "hamburger",
    "button",
    "make",
    "disappear",
    "bring",
    "back",
    "click",
    "bring",
    "back",
    "know",
    "lot",
    "resources",
    "go",
    "looking",
    "something",
    "specific",
    "always",
    "go",
    "search",
    "bar",
    "right",
    "simply",
    "type",
    "looking",
    "let",
    "say",
    "cloud",
    "sql",
    "simply",
    "type",
    "sql",
    "find",
    "right",
    "find",
    "api",
    "anything",
    "associated",
    "word",
    "sql",
    "looking",
    "cloud",
    "sql",
    "specifically",
    "simply",
    "type",
    "cloud",
    "sql",
    "another",
    "thing",
    "note",
    "want",
    "go",
    "back",
    "homepage",
    "simply",
    "go",
    "left",
    "hand",
    "corner",
    "click",
    "google",
    "cloud",
    "platform",
    "logo",
    "bring",
    "right",
    "back",
    "right",
    "google",
    "cloud",
    "platform",
    "logo",
    "see",
    "another",
    "set",
    "tabs",
    "dashboard",
    "also",
    "activity",
    "show",
    "latest",
    "activity",
    "done",
    "brand",
    "new",
    "account",
    "much",
    "first",
    "time",
    "activity",
    "going",
    "take",
    "time",
    "index",
    "meantime",
    "wanted",
    "show",
    "filters",
    "long",
    "list",
    "go",
    "activity",
    "happening",
    "months",
    "filter",
    "activities",
    "either",
    "user",
    "categories",
    "resource",
    "type",
    "well",
    "date",
    "also",
    "combine",
    "search",
    "something",
    "really",
    "granular",
    "beside",
    "activity",
    "tab",
    "recommendations",
    "based",
    "recommender",
    "service",
    "service",
    "provides",
    "recommendations",
    "insights",
    "using",
    "resources",
    "google",
    "cloud",
    "recommendations",
    "insights",
    "per",
    "product",
    "per",
    "service",
    "basis",
    "based",
    "machine",
    "learning",
    "current",
    "resource",
    "usage",
    "great",
    "example",
    "recommendation",
    "vm",
    "instance",
    "right",
    "sizing",
    "recommender",
    "service",
    "detects",
    "vm",
    "instance",
    "underutilized",
    "recommend",
    "changing",
    "machine",
    "size",
    "save",
    "money",
    "fresh",
    "new",
    "account",
    "used",
    "resources",
    "recommendations",
    "going",
    "back",
    "home",
    "page",
    "want",
    "touch",
    "projects",
    "menu",
    "second",
    "see",
    "select",
    "project",
    "many",
    "different",
    "projects",
    "simply",
    "search",
    "different",
    "one",
    "cover",
    "last",
    "part",
    "console",
    "wanted",
    "touch",
    "menu",
    "top",
    "right",
    "hand",
    "corner",
    "clicking",
    "present",
    "icon",
    "reveal",
    "free",
    "trial",
    "status",
    "dismissed",
    "earlier",
    "next",
    "present",
    "cloud",
    "shell",
    "icon",
    "activate",
    "bring",
    "cloud",
    "shell",
    "diving",
    "deeper",
    "later",
    "lesson",
    "right",
    "next",
    "help",
    "button",
    "case",
    "need",
    "shortcut",
    "documentations",
    "tutorials",
    "well",
    "keyboard",
    "shortcuts",
    "may",
    "help",
    "little",
    "bit",
    "efficient",
    "always",
    "click",
    "show",
    "exactly",
    "need",
    "know",
    "going",
    "close",
    "move",
    "next",
    "part",
    "menu",
    "notifications",
    "activities",
    "happen",
    "notified",
    "simply",
    "click",
    "bell",
    "show",
    "bunch",
    "different",
    "notifications",
    "either",
    "resources",
    "created",
    "activities",
    "may",
    "happened",
    "moving",
    "three",
    "buttons",
    "settings",
    "utilities",
    "button",
    "find",
    "preferences",
    "communication",
    "find",
    "product",
    "notifications",
    "updates",
    "offers",
    "turn",
    "depending",
    "whether",
    "want",
    "receive",
    "notifications",
    "well",
    "language",
    "region",
    "personalize",
    "cloud",
    "console",
    "whether",
    "want",
    "allow",
    "google",
    "track",
    "activity",
    "great",
    "want",
    "recommendations",
    "going",
    "keep",
    "checked",
    "getting",
    "back",
    "options",
    "find",
    "link",
    "downloads",
    "well",
    "cloud",
    "partners",
    "terms",
    "service",
    "privacy",
    "project",
    "settings",
    "cover",
    "last",
    "topic",
    "wanted",
    "touch",
    "actual",
    "google",
    "account",
    "button",
    "add",
    "user",
    "accounts",
    "log",
    "console",
    "different",
    "user",
    "well",
    "go",
    "straight",
    "google",
    "account",
    "course",
    "using",
    "computer",
    "used",
    "multiple",
    "users",
    "sign",
    "well",
    "quick",
    "console",
    "feel",
    "free",
    "poke",
    "around",
    "get",
    "familiar",
    "exactly",
    "available",
    "console",
    "lot",
    "easier",
    "use",
    "allow",
    "become",
    "efficient",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "going",
    "going",
    "breakdown",
    "cloud",
    "billing",
    "overview",
    "various",
    "resources",
    "involved",
    "billing",
    "billing",
    "important",
    "know",
    "diving",
    "concepts",
    "around",
    "billing",
    "billing",
    "interaction",
    "next",
    "lessons",
    "well",
    "getting",
    "another",
    "demo",
    "going",
    "details",
    "create",
    "edit",
    "delete",
    "cloud",
    "billing",
    "account",
    "earlier",
    "course",
    "went",
    "resource",
    "hierarchy",
    "google",
    "cloud",
    "resources",
    "broken",
    "starting",
    "domain",
    "level",
    "resource",
    "level",
    "lesson",
    "focus",
    "strictly",
    "billing",
    "account",
    "payments",
    "profile",
    "breakdown",
    "concepts",
    "comprised",
    "within",
    "getting",
    "right",
    "let",
    "start",
    "cloud",
    "billing",
    "account",
    "cloud",
    "billing",
    "account",
    "cloud",
    "level",
    "resource",
    "managed",
    "cloud",
    "console",
    "defines",
    "pays",
    "given",
    "set",
    "google",
    "cloud",
    "resources",
    "billing",
    "tracks",
    "costs",
    "incurred",
    "google",
    "cloud",
    "usage",
    "well",
    "connected",
    "google",
    "payments",
    "profile",
    "includes",
    "payment",
    "method",
    "defining",
    "pay",
    "charges",
    "cloud",
    "billing",
    "account",
    "linked",
    "one",
    "projects",
    "one",
    "project",
    "specifically",
    "cloud",
    "billing",
    "also",
    "billing",
    "specific",
    "roles",
    "permissions",
    "control",
    "accessing",
    "modifying",
    "billing",
    "related",
    "functions",
    "established",
    "identity",
    "access",
    "management",
    "cloud",
    "billing",
    "offered",
    "two",
    "different",
    "account",
    "types",
    "online",
    "account",
    "also",
    "choose",
    "invoiced",
    "offline",
    "payments",
    "comes",
    "option",
    "payment",
    "method",
    "usually",
    "credit",
    "debit",
    "card",
    "costs",
    "charged",
    "automatically",
    "specific",
    "payment",
    "method",
    "connected",
    "cloud",
    "billing",
    "account",
    "need",
    "access",
    "invoices",
    "simply",
    "go",
    "cloud",
    "console",
    "view",
    "online",
    "comes",
    "invoice",
    "account",
    "first",
    "must",
    "eligible",
    "invoice",
    "billing",
    "made",
    "eligible",
    "payment",
    "method",
    "used",
    "check",
    "wire",
    "transfer",
    "invoices",
    "sent",
    "mail",
    "electronically",
    "well",
    "also",
    "available",
    "cloud",
    "console",
    "well",
    "payment",
    "receipts",
    "another",
    "cool",
    "feature",
    "billing",
    "account",
    "intended",
    "resellers",
    "reseller",
    "use",
    "subaccounts",
    "represent",
    "customers",
    "make",
    "easy",
    "chargebacks",
    "cloud",
    "billing",
    "subaccounts",
    "allow",
    "group",
    "charges",
    "projects",
    "together",
    "separate",
    "section",
    "invoice",
    "linked",
    "back",
    "master",
    "cloud",
    "billing",
    "account",
    "charges",
    "appear",
    "designed",
    "allow",
    "customer",
    "separation",
    "management",
    "comes",
    "ownership",
    "cloud",
    "billing",
    "account",
    "limited",
    "single",
    "organization",
    "possible",
    "though",
    "cloud",
    "billing",
    "account",
    "pay",
    "projects",
    "belong",
    "organization",
    "different",
    "organization",
    "owns",
    "cloud",
    "billing",
    "account",
    "one",
    "thing",
    "note",
    "project",
    "linked",
    "billing",
    "account",
    "limited",
    "use",
    "products",
    "services",
    "available",
    "project",
    "projects",
    "linked",
    "billing",
    "account",
    "use",
    "google",
    "cloud",
    "services",
    "free",
    "gone",
    "overview",
    "billing",
    "account",
    "let",
    "take",
    "quick",
    "step",
    "payments",
    "profile",
    "payments",
    "profile",
    "google",
    "level",
    "resource",
    "managed",
    "payments",
    "profile",
    "processes",
    "payments",
    "google",
    "services",
    "google",
    "cloud",
    "connects",
    "google",
    "services",
    "google",
    "ads",
    "well",
    "google",
    "cloud",
    "stores",
    "information",
    "like",
    "name",
    "address",
    "responsible",
    "profile",
    "stores",
    "various",
    "payment",
    "methods",
    "like",
    "credit",
    "cards",
    "debit",
    "cards",
    "bank",
    "accounts",
    "payments",
    "profile",
    "functions",
    "single",
    "pane",
    "glass",
    "view",
    "invoices",
    "payment",
    "history",
    "also",
    "controls",
    "view",
    "receive",
    "invoices",
    "various",
    "cloud",
    "billing",
    "accounts",
    "products",
    "one",
    "thing",
    "note",
    "payments",
    "profile",
    "two",
    "different",
    "types",
    "payment",
    "profiles",
    "first",
    "one",
    "individual",
    "using",
    "account",
    "personal",
    "payments",
    "register",
    "payments",
    "profile",
    "individual",
    "manage",
    "profile",
    "wo",
    "able",
    "add",
    "remove",
    "users",
    "change",
    "permissions",
    "profile",
    "choose",
    "business",
    "profile",
    "type",
    "paying",
    "behalf",
    "business",
    "organization",
    "business",
    "profile",
    "gives",
    "flexibility",
    "add",
    "users",
    "google",
    "payments",
    "profile",
    "manage",
    "one",
    "person",
    "access",
    "manage",
    "payments",
    "profile",
    "users",
    "added",
    "business",
    "profile",
    "see",
    "payment",
    "information",
    "profile",
    "another",
    "thing",
    "note",
    "profile",
    "type",
    "selected",
    "changed",
    "afterwards",
    "quickly",
    "gone",
    "overview",
    "concepts",
    "comes",
    "billing",
    "going",
    "run",
    "short",
    "demo",
    "create",
    "new",
    "billing",
    "account",
    "edit",
    "billing",
    "account",
    "show",
    "close",
    "billing",
    "account",
    "whenever",
    "ready",
    "join",
    "console",
    "back",
    "console",
    "first",
    "thing",
    "want",
    "want",
    "make",
    "sure",
    "proper",
    "permissions",
    "order",
    "create",
    "edit",
    "new",
    "billing",
    "account",
    "going",
    "go",
    "hamburger",
    "menu",
    "top",
    "left",
    "hand",
    "corner",
    "click",
    "go",
    "admin",
    "iam",
    "worry",
    "going",
    "get",
    "really",
    "deep",
    "going",
    "later",
    "section",
    "go",
    "iam",
    "roles",
    "wanted",
    "give",
    "sense",
    "exactly",
    "need",
    "regards",
    "permissions",
    "going",
    "looking",
    "role",
    "billing",
    "simply",
    "going",
    "go",
    "left",
    "hand",
    "menu",
    "click",
    "roles",
    "slew",
    "roles",
    "coming",
    "filter",
    "simply",
    "typing",
    "billing",
    "filter",
    "table",
    "top",
    "see",
    "billing",
    "account",
    "administrator",
    "billing",
    "account",
    "creator",
    "forth",
    "give",
    "quick",
    "overview",
    "roles",
    "billing",
    "account",
    "administrator",
    "role",
    "lets",
    "manage",
    "billing",
    "accounts",
    "create",
    "need",
    "set",
    "budget",
    "alerts",
    "manage",
    "payment",
    "methods",
    "use",
    "role",
    "billing",
    "account",
    "creator",
    "allows",
    "create",
    "new",
    "online",
    "billing",
    "accounts",
    "billing",
    "account",
    "user",
    "allows",
    "link",
    "projects",
    "billing",
    "accounts",
    "billing",
    "account",
    "viewer",
    "allows",
    "view",
    "billing",
    "account",
    "cost",
    "information",
    "transactions",
    "lastly",
    "project",
    "billing",
    "manager",
    "allows",
    "link",
    "unlink",
    "project",
    "billing",
    "account",
    "see",
    "roles",
    "allow",
    "get",
    "pretty",
    "granular",
    "comes",
    "billing",
    "going",
    "go",
    "back",
    "left",
    "hand",
    "menu",
    "iam",
    "click",
    "want",
    "able",
    "check",
    "specific",
    "role",
    "permissions",
    "need",
    "order",
    "create",
    "new",
    "billing",
    "account",
    "click",
    "pencil",
    "show",
    "exactly",
    "role",
    "says",
    "full",
    "access",
    "resources",
    "means",
    "pretty",
    "much",
    "good",
    "go",
    "going",
    "cancel",
    "going",
    "exit",
    "admin",
    "going",
    "click",
    "navigation",
    "menu",
    "go",
    "billing",
    "billing",
    "account",
    "tied",
    "current",
    "project",
    "billing",
    "account",
    "one",
    "shows",
    "want",
    "want",
    "find",
    "little",
    "bit",
    "information",
    "regards",
    "billing",
    "account",
    "going",
    "move",
    "menu",
    "click",
    "account",
    "management",
    "see",
    "billing",
    "account",
    "billing",
    "account",
    "rename",
    "like",
    "also",
    "see",
    "projects",
    "linked",
    "billing",
    "account",
    "viewed",
    "information",
    "regards",
    "billing",
    "account",
    "going",
    "simply",
    "click",
    "menu",
    "click",
    "arrow",
    "go",
    "manage",
    "billing",
    "accounts",
    "bring",
    "billing",
    "accounts",
    "one",
    "shown",
    "billing",
    "account",
    "one",
    "would",
    "show",
    "order",
    "create",
    "new",
    "billing",
    "account",
    "going",
    "simply",
    "click",
    "create",
    "account",
    "prompted",
    "name",
    "country",
    "currency",
    "new",
    "billing",
    "account",
    "actually",
    "going",
    "rename",
    "billing",
    "account",
    "going",
    "rename",
    "gcloud",
    "ace",
    "dash",
    "billing",
    "going",
    "leave",
    "country",
    "canada",
    "currency",
    "canadian",
    "dollars",
    "going",
    "simply",
    "hit",
    "continue",
    "giving",
    "choice",
    "payments",
    "profile",
    "want",
    "use",
    "payments",
    "profile",
    "going",
    "simply",
    "leave",
    "everything",
    "demonstration",
    "purposes",
    "click",
    "payments",
    "profile",
    "little",
    "arrow",
    "right",
    "beside",
    "current",
    "profile",
    "give",
    "option",
    "create",
    "new",
    "payments",
    "profile",
    "going",
    "leave",
    "customer",
    "info",
    "option",
    "changing",
    "address",
    "click",
    "pencil",
    "icon",
    "change",
    "well",
    "go",
    "payment",
    "methods",
    "click",
    "current",
    "payment",
    "method",
    "little",
    "arrow",
    "add",
    "new",
    "credit",
    "debit",
    "card",
    "said",
    "going",
    "keep",
    "things",
    "way",
    "hit",
    "submit",
    "enable",
    "billing",
    "see",
    "got",
    "prompt",
    "saying",
    "confirmation",
    "email",
    "sent",
    "within",
    "48",
    "hours",
    "usually",
    "setting",
    "brand",
    "new",
    "billing",
    "profile",
    "already",
    "created",
    "payments",
    "profile",
    "definitely",
    "get",
    "confirmation",
    "email",
    "less",
    "48",
    "hours",
    "order",
    "finish",
    "demo",
    "gon",
    "na",
    "wait",
    "new",
    "billing",
    "account",
    "shows",
    "continue",
    "demo",
    "back",
    "billing",
    "console",
    "took",
    "20",
    "minutes",
    "gcloud",
    "ace",
    "billing",
    "account",
    "shown",
    "part",
    "demo",
    "wanted",
    "show",
    "take",
    "project",
    "attach",
    "different",
    "billing",
    "account",
    "currently",
    "project",
    "attached",
    "billing",
    "account",
    "wanted",
    "change",
    "first",
    "project",
    "gcloud",
    "ace",
    "dash",
    "billing",
    "account",
    "simply",
    "go",
    "actions",
    "click",
    "hamburger",
    "menu",
    "go",
    "change",
    "billing",
    "prompted",
    "choose",
    "billing",
    "account",
    "choose",
    "g",
    "cloud",
    "stash",
    "billing",
    "click",
    "set",
    "account",
    "first",
    "project",
    "linked",
    "g",
    "cloud",
    "stash",
    "billing",
    "go",
    "back",
    "billing",
    "accounts",
    "see",
    "billing",
    "account",
    "currently",
    "zero",
    "projects",
    "g",
    "cloud",
    "stash",
    "billing",
    "one",
    "project",
    "quick",
    "note",
    "really",
    "want",
    "emphasize",
    "changing",
    "billing",
    "account",
    "project",
    "regular",
    "user",
    "need",
    "role",
    "billing",
    "account",
    "administrator",
    "well",
    "project",
    "owner",
    "role",
    "two",
    "together",
    "allow",
    "regular",
    "user",
    "change",
    "billing",
    "account",
    "project",
    "want",
    "want",
    "take",
    "gcloud",
    "stash",
    "billing",
    "want",
    "close",
    "account",
    "need",
    "unlink",
    "project",
    "bring",
    "back",
    "another",
    "billing",
    "account",
    "case",
    "would",
    "billing",
    "account",
    "going",
    "go",
    "back",
    "menu",
    "click",
    "projects",
    "going",
    "exact",
    "thing",
    "actions",
    "going",
    "click",
    "hamburger",
    "menu",
    "change",
    "billing",
    "going",
    "get",
    "prompt",
    "billing",
    "account",
    "going",
    "choose",
    "billing",
    "account",
    "click",
    "set",
    "account",
    "see",
    "project",
    "moved",
    "different",
    "billing",
    "account",
    "going",
    "go",
    "back",
    "billing",
    "accounts",
    "see",
    "project",
    "back",
    "billing",
    "account",
    "project",
    "unlinked",
    "gcloud",
    "stash",
    "billing",
    "account",
    "go",
    "ahead",
    "close",
    "account",
    "order",
    "going",
    "click",
    "gcloud",
    "stash",
    "billing",
    "going",
    "go",
    "hand",
    "menu",
    "way",
    "bottom",
    "account",
    "management",
    "click",
    "top",
    "see",
    "close",
    "billing",
    "account",
    "going",
    "simply",
    "click",
    "get",
    "prompt",
    "spent",
    "zero",
    "dollars",
    "linked",
    "zero",
    "projects",
    "project",
    "linked",
    "billing",
    "account",
    "would",
    "unlink",
    "project",
    "able",
    "close",
    "billing",
    "account",
    "failsafe",
    "asked",
    "type",
    "close",
    "order",
    "close",
    "billing",
    "account",
    "going",
    "go",
    "ahead",
    "click",
    "close",
    "billing",
    "account",
    "note",
    "google",
    "gives",
    "option",
    "reopen",
    "billing",
    "account",
    "case",
    "mistake",
    "really",
    "needed",
    "reopen",
    "billing",
    "account",
    "moving",
    "back",
    "billing",
    "see",
    "left",
    "single",
    "billing",
    "account",
    "called",
    "billing",
    "account",
    "one",
    "project",
    "linked",
    "covers",
    "demo",
    "creating",
    "editing",
    "closing",
    "new",
    "billing",
    "account",
    "well",
    "linking",
    "unlinking",
    "project",
    "different",
    "billing",
    "account",
    "hope",
    "found",
    "useful",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "going",
    "controlling",
    "costs",
    "google",
    "cloud",
    "along",
    "budget",
    "alerts",
    "touching",
    "available",
    "discounts",
    "number",
    "ways",
    "control",
    "costs",
    "go",
    "budget",
    "alerts",
    "get",
    "granular",
    "programmatic",
    "approach",
    "starting",
    "wanted",
    "touch",
    "committed",
    "use",
    "discounts",
    "committed",
    "use",
    "discounts",
    "provide",
    "discounted",
    "prices",
    "exchange",
    "commitment",
    "use",
    "minimum",
    "level",
    "resources",
    "specified",
    "term",
    "discounts",
    "flexible",
    "cover",
    "wide",
    "range",
    "resources",
    "ideal",
    "workloads",
    "predictable",
    "resource",
    "needs",
    "purchase",
    "google",
    "cloud",
    "committed",
    "use",
    "discounts",
    "commit",
    "consistent",
    "amount",
    "usage",
    "one",
    "three",
    "year",
    "period",
    "two",
    "commitment",
    "types",
    "available",
    "see",
    "spend",
    "based",
    "resource",
    "based",
    "commitment",
    "types",
    "unlike",
    "providers",
    "commitment",
    "fee",
    "billed",
    "monthly",
    "going",
    "specific",
    "commitment",
    "types",
    "wanted",
    "start",
    "spend",
    "based",
    "commitment",
    "spend",
    "based",
    "commitment",
    "commit",
    "consistent",
    "amount",
    "usage",
    "measured",
    "dollars",
    "per",
    "hour",
    "equivalent",
    "spend",
    "one",
    "three",
    "year",
    "term",
    "exchange",
    "receive",
    "discounted",
    "rate",
    "applicable",
    "usage",
    "commitment",
    "covers",
    "purchase",
    "committed",
    "use",
    "discounts",
    "cloud",
    "billing",
    "account",
    "discount",
    "applies",
    "eligible",
    "usage",
    "projects",
    "paid",
    "cloud",
    "billing",
    "account",
    "overage",
    "charged",
    "rate",
    "spend",
    "based",
    "commitments",
    "give",
    "25",
    "discount",
    "pricing",
    "commitment",
    "52",
    "discount",
    "pricing",
    "commitment",
    "commitments",
    "restricted",
    "specific",
    "resources",
    "cloud",
    "sql",
    "database",
    "instances",
    "google",
    "cloud",
    "vmware",
    "engine",
    "commitment",
    "applies",
    "cpu",
    "memory",
    "usage",
    "available",
    "resources",
    "committed",
    "use",
    "discount",
    "commitment",
    "discount",
    "commitment",
    "spend",
    "minimum",
    "amount",
    "compute",
    "engine",
    "resources",
    "particular",
    "region",
    "commitments",
    "ideal",
    "predictable",
    "workloads",
    "comes",
    "vms",
    "purchase",
    "committed",
    "use",
    "contract",
    "purchase",
    "compute",
    "resources",
    "vcpus",
    "memory",
    "gpus",
    "local",
    "ssds",
    "purchase",
    "discounted",
    "price",
    "return",
    "committing",
    "paying",
    "resources",
    "one",
    "three",
    "years",
    "discount",
    "57",
    "percent",
    "resources",
    "like",
    "machine",
    "types",
    "gpus",
    "discount",
    "70",
    "percent",
    "memory",
    "optimized",
    "machine",
    "types",
    "purchase",
    "committed",
    "use",
    "contract",
    "single",
    "project",
    "purchase",
    "multiple",
    "contracts",
    "share",
    "across",
    "many",
    "project",
    "enabling",
    "shared",
    "discounts",
    "sharing",
    "committed",
    "use",
    "discounts",
    "across",
    "projects",
    "reduces",
    "overhead",
    "managing",
    "discounts",
    "per",
    "project",
    "basis",
    "maximizes",
    "savings",
    "pooling",
    "discounts",
    "across",
    "project",
    "resource",
    "usage",
    "multiple",
    "projects",
    "share",
    "cloud",
    "billing",
    "account",
    "enable",
    "committed",
    "use",
    "discount",
    "sharing",
    "projects",
    "within",
    "cloud",
    "billing",
    "account",
    "share",
    "committed",
    "use",
    "discount",
    "contracts",
    "sustained",
    "use",
    "discounts",
    "also",
    "pooled",
    "time",
    "touching",
    "sustained",
    "use",
    "discounts",
    "automatic",
    "discounts",
    "running",
    "specific",
    "compute",
    "engine",
    "resources",
    "significant",
    "portion",
    "billing",
    "month",
    "sustained",
    "use",
    "discounts",
    "apply",
    "general",
    "purpose",
    "compute",
    "memory",
    "optimize",
    "machine",
    "types",
    "well",
    "sole",
    "tenant",
    "nodes",
    "gpus",
    "sustained",
    "use",
    "discounts",
    "applied",
    "automatically",
    "usage",
    "within",
    "project",
    "separately",
    "region",
    "action",
    "required",
    "part",
    "enable",
    "discounts",
    "example",
    "running",
    "one",
    "resources",
    "let",
    "say",
    "25",
    "percent",
    "month",
    "compute",
    "engine",
    "automatically",
    "gives",
    "discount",
    "every",
    "incremental",
    "minute",
    "use",
    "instance",
    "sustained",
    "use",
    "discounts",
    "automatically",
    "apply",
    "vms",
    "created",
    "google",
    "kubernetes",
    "engine",
    "compute",
    "engine",
    "unfortunately",
    "apply",
    "vms",
    "created",
    "using",
    "app",
    "engine",
    "flexible",
    "environment",
    "well",
    "data",
    "flow",
    "e2",
    "machine",
    "types",
    "take",
    "advantage",
    "full",
    "discount",
    "would",
    "create",
    "vm",
    "instances",
    "first",
    "day",
    "month",
    "discounts",
    "reset",
    "beginning",
    "month",
    "following",
    "table",
    "shows",
    "discount",
    "get",
    "usage",
    "level",
    "vm",
    "instance",
    "discounts",
    "apply",
    "machine",
    "types",
    "apply",
    "preemptable",
    "instances",
    "sustained",
    "use",
    "discounts",
    "save",
    "maximum",
    "30",
    "percent",
    "discount",
    "another",
    "great",
    "way",
    "calculate",
    "savings",
    "google",
    "cloud",
    "using",
    "gcp",
    "pricing",
    "calculator",
    "quick",
    "way",
    "get",
    "estimate",
    "usage",
    "cost",
    "google",
    "cloud",
    "gcp",
    "pricing",
    "calculator",
    "help",
    "identify",
    "pricing",
    "resources",
    "plan",
    "use",
    "future",
    "architecture",
    "able",
    "calculate",
    "much",
    "architecture",
    "cost",
    "calculator",
    "holds",
    "pricing",
    "almost",
    "resources",
    "encapsulated",
    "within",
    "gcp",
    "get",
    "pretty",
    "good",
    "idea",
    "architecture",
    "cost",
    "without",
    "find",
    "hard",
    "way",
    "calculator",
    "found",
    "url",
    "shown",
    "include",
    "lesson",
    "text",
    "moving",
    "right",
    "along",
    "cloud",
    "billing",
    "budgets",
    "budgets",
    "enable",
    "track",
    "actual",
    "spend",
    "plan",
    "spend",
    "set",
    "budget",
    "amount",
    "set",
    "budget",
    "alert",
    "threshold",
    "rules",
    "used",
    "trigger",
    "email",
    "notifications",
    "budget",
    "alert",
    "emails",
    "help",
    "stay",
    "informed",
    "spend",
    "tracking",
    "budget",
    "example",
    "diagram",
    "budget",
    "alert",
    "notification",
    "default",
    "functionality",
    "budget",
    "alert",
    "notifications",
    "get",
    "little",
    "bit",
    "granular",
    "define",
    "scope",
    "budget",
    "example",
    "scope",
    "budget",
    "apply",
    "spend",
    "entire",
    "cloud",
    "billing",
    "account",
    "get",
    "granular",
    "one",
    "projects",
    "even",
    "specific",
    "product",
    "set",
    "budget",
    "amount",
    "total",
    "specify",
    "base",
    "budget",
    "amount",
    "previous",
    "month",
    "spend",
    "costs",
    "exceed",
    "percentage",
    "budget",
    "based",
    "rules",
    "set",
    "default",
    "alert",
    "emails",
    "sent",
    "billing",
    "account",
    "administrators",
    "billing",
    "account",
    "users",
    "target",
    "cloud",
    "billing",
    "account",
    "default",
    "behavior",
    "budget",
    "email",
    "notification",
    "said",
    "default",
    "behavior",
    "budget",
    "send",
    "alert",
    "emails",
    "billing",
    "account",
    "administrators",
    "billing",
    "account",
    "users",
    "target",
    "cloud",
    "billing",
    "account",
    "budget",
    "alert",
    "threshold",
    "rules",
    "trigger",
    "email",
    "notification",
    "email",
    "recipients",
    "customized",
    "using",
    "cloud",
    "monitoring",
    "specify",
    "people",
    "organization",
    "receive",
    "budget",
    "alert",
    "emails",
    "great",
    "example",
    "would",
    "project",
    "manager",
    "director",
    "knowing",
    "much",
    "spend",
    "used",
    "budget",
    "last",
    "concept",
    "wanted",
    "touch",
    "comes",
    "cloud",
    "billing",
    "budgets",
    "also",
    "use",
    "pub",
    "sub",
    "programmatic",
    "notifications",
    "automate",
    "cost",
    "control",
    "response",
    "based",
    "budget",
    "notification",
    "also",
    "use",
    "pub",
    "sub",
    "conjunction",
    "billing",
    "budgets",
    "automate",
    "cost",
    "management",
    "tasks",
    "provide",
    "status",
    "cloud",
    "billing",
    "budget",
    "allow",
    "things",
    "like",
    "send",
    "notifications",
    "slack",
    "disable",
    "billing",
    "stop",
    "usage",
    "well",
    "selectively",
    "control",
    "usage",
    "budget",
    "met",
    "concepts",
    "wanted",
    "cover",
    "came",
    "cloud",
    "billing",
    "budgets",
    "know",
    "lesson",
    "may",
    "bit",
    "dry",
    "exciting",
    "service",
    "dive",
    "important",
    "know",
    "exam",
    "role",
    "engineer",
    "comes",
    "cutting",
    "costs",
    "environments",
    "business",
    "owners",
    "deem",
    "necessary",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "please",
    "join",
    "next",
    "one",
    "dive",
    "console",
    "demos",
    "comes",
    "committed",
    "use",
    "discounts",
    "budget",
    "alerts",
    "editing",
    "budget",
    "alerts",
    "well",
    "adding",
    "little",
    "bit",
    "automation",
    "budgeting",
    "alerts",
    "music",
    "welcome",
    "back",
    "last",
    "lesson",
    "went",
    "ways",
    "cost",
    "management",
    "behaviors",
    "budget",
    "alerts",
    "lesson",
    "demo",
    "show",
    "committed",
    "use",
    "discounts",
    "reservations",
    "along",
    "create",
    "budget",
    "alerts",
    "well",
    "edit",
    "said",
    "let",
    "dive",
    "going",
    "start",
    "committed",
    "use",
    "discounts",
    "order",
    "get",
    "going",
    "find",
    "compute",
    "engine",
    "going",
    "simply",
    "go",
    "top",
    "left",
    "hand",
    "corner",
    "back",
    "navigation",
    "menu",
    "going",
    "go",
    "compute",
    "engine",
    "going",
    "go",
    "committed",
    "use",
    "discounts",
    "discussed",
    "earlier",
    "commitments",
    "compute",
    "engine",
    "resource",
    "based",
    "see",
    "hardware",
    "commitments",
    "reservations",
    "reservations",
    "get",
    "little",
    "bit",
    "later",
    "regards",
    "hardware",
    "commitments",
    "going",
    "get",
    "right",
    "expected",
    "current",
    "commitments",
    "going",
    "go",
    "purchase",
    "commitment",
    "need",
    "start",
    "finding",
    "name",
    "commitment",
    "going",
    "name",
    "commitment",
    "demo",
    "dash",
    "commitment",
    "going",
    "ask",
    "region",
    "going",
    "keep",
    "us",
    "central",
    "one",
    "commitment",
    "type",
    "select",
    "type",
    "machine",
    "looking",
    "go",
    "general",
    "purpose",
    "1",
    "2",
    "2d",
    "e2",
    "well",
    "memory",
    "optimize",
    "compute",
    "optimized",
    "going",
    "keep",
    "general",
    "purpose",
    "one",
    "duration",
    "one",
    "three",
    "years",
    "get",
    "cores",
    "many",
    "vcpus",
    "like",
    "needed",
    "10",
    "get",
    "right",
    "showing",
    "estimated",
    "monthly",
    "total",
    "well",
    "hourly",
    "rate",
    "specific",
    "vm",
    "10",
    "cores",
    "also",
    "select",
    "duration",
    "three",
    "years",
    "expected",
    "get",
    "higher",
    "savings",
    "giving",
    "bigger",
    "commitment",
    "bring",
    "back",
    "one",
    "year",
    "let",
    "put",
    "memory",
    "64",
    "gigabytes",
    "add",
    "gpus",
    "quite",
    "choose",
    "well",
    "local",
    "ssds",
    "local",
    "ssds",
    "choose",
    "many",
    "disks",
    "like",
    "long",
    "within",
    "quota",
    "disk",
    "size",
    "going",
    "375",
    "gigabytes",
    "looking",
    "committed",
    "use",
    "discounts",
    "using",
    "local",
    "ssds",
    "please",
    "keep",
    "mind",
    "reservation",
    "added",
    "getting",
    "second",
    "want",
    "actually",
    "purchase",
    "want",
    "show",
    "exactly",
    "committed",
    "use",
    "discount",
    "would",
    "look",
    "like",
    "would",
    "apply",
    "right",
    "hand",
    "side",
    "shows",
    "details",
    "estimated",
    "monthly",
    "total",
    "hourly",
    "rate",
    "going",
    "go",
    "hit",
    "cancel",
    "applied",
    "commitment",
    "would",
    "show",
    "table",
    "give",
    "specified",
    "configurations",
    "instance",
    "right",
    "touching",
    "reservations",
    "reservations",
    "reserve",
    "vm",
    "instances",
    "need",
    "reservation",
    "placed",
    "reservation",
    "ensures",
    "resources",
    "always",
    "available",
    "might",
    "know",
    "go",
    "spin",
    "new",
    "compute",
    "engine",
    "vm",
    "especially",
    "comes",
    "auto",
    "scaling",
    "instance",
    "groups",
    "instances",
    "sometimes",
    "delayed",
    "unavailable",
    "thing",
    "reservations",
    "vm",
    "instance",
    "use",
    "reservation",
    "properties",
    "exactly",
    "match",
    "properties",
    "reservation",
    "great",
    "pairing",
    "committed",
    "use",
    "discounts",
    "looking",
    "make",
    "commitment",
    "always",
    "want",
    "instance",
    "available",
    "simply",
    "create",
    "reservation",
    "attach",
    "commitment",
    "never",
    "worry",
    "resources",
    "satisfy",
    "workload",
    "always",
    "going",
    "create",
    "reservation",
    "show",
    "name",
    "description",
    "choose",
    "use",
    "reservation",
    "automatically",
    "select",
    "specific",
    "reservation",
    "region",
    "zone",
    "number",
    "instances",
    "specify",
    "machine",
    "type",
    "specify",
    "instance",
    "template",
    "another",
    "use",
    "case",
    "need",
    "compute",
    "engine",
    "instances",
    "spun",
    "due",
    "auto",
    "scaling",
    "reservations",
    "would",
    "apply",
    "getting",
    "back",
    "machine",
    "type",
    "choose",
    "vcpus",
    "well",
    "memory",
    "customize",
    "add",
    "many",
    "local",
    "ssds",
    "quotas",
    "allow",
    "select",
    "interface",
    "type",
    "going",
    "cancel",
    "comes",
    "committed",
    "use",
    "discounts",
    "reservations",
    "pertains",
    "exam",
    "seen",
    "since",
    "option",
    "save",
    "money",
    "wanted",
    "make",
    "sure",
    "included",
    "lesson",
    "could",
    "great",
    "option",
    "use",
    "environment",
    "covered",
    "committed",
    "use",
    "discounts",
    "wanted",
    "move",
    "spend",
    "based",
    "commitments",
    "would",
    "find",
    "would",
    "billing",
    "going",
    "go",
    "navigation",
    "menu",
    "top",
    "left",
    "hand",
    "corner",
    "go",
    "billing",
    "think",
    "would",
    "find",
    "commitments",
    "purchased",
    "commitment",
    "actually",
    "show",
    "see",
    "prompting",
    "us",
    "go",
    "billing",
    "overview",
    "page",
    "going",
    "back",
    "overview",
    "page",
    "find",
    "right",
    "purchase",
    "commitment",
    "discussed",
    "spend",
    "based",
    "commitment",
    "used",
    "either",
    "cloud",
    "sql",
    "vmware",
    "engine",
    "select",
    "billing",
    "account",
    "commitment",
    "name",
    "period",
    "either",
    "one",
    "year",
    "three",
    "years",
    "also",
    "shows",
    "discount",
    "could",
    "help",
    "sway",
    "decision",
    "well",
    "region",
    "well",
    "hourly",
    "commitment",
    "probably",
    "wondering",
    "explained",
    "commitment",
    "based",
    "price",
    "filled",
    "commitment",
    "summary",
    "populated",
    "agree",
    "terms",
    "services",
    "simply",
    "hit",
    "purchase",
    "going",
    "cancel",
    "overview",
    "spend",
    "based",
    "commitment",
    "committed",
    "use",
    "discounts",
    "seen",
    "exam",
    "think",
    "good",
    "know",
    "environment",
    "looking",
    "save",
    "money",
    "really",
    "break",
    "costs",
    "covered",
    "committed",
    "use",
    "discounts",
    "reservations",
    "wanted",
    "move",
    "budgets",
    "budget",
    "alerts",
    "already",
    "billing",
    "page",
    "need",
    "go",
    "left",
    "hand",
    "menu",
    "click",
    "budgets",
    "alerts",
    "setting",
    "budget",
    "course",
    "would",
    "great",
    "idea",
    "especially",
    "cost",
    "conscious",
    "much",
    "spending",
    "regards",
    "cloud",
    "usage",
    "go",
    "ahead",
    "create",
    "new",
    "budget",
    "right",
    "let",
    "go",
    "top",
    "create",
    "budget",
    "going",
    "brought",
    "new",
    "window",
    "put",
    "name",
    "budget",
    "going",
    "call",
    "ace",
    "dash",
    "budget",
    "want",
    "monitor",
    "projects",
    "products",
    "going",
    "leave",
    "multiple",
    "projects",
    "could",
    "get",
    "little",
    "bit",
    "granular",
    "thing",
    "products",
    "going",
    "go",
    "ahead",
    "leave",
    "click",
    "next",
    "budget",
    "type",
    "select",
    "either",
    "specified",
    "amount",
    "last",
    "month",
    "spend",
    "demo",
    "going",
    "keep",
    "specified",
    "amount",
    "want",
    "really",
    "conscious",
    "much",
    "spend",
    "course",
    "going",
    "put",
    "10",
    "target",
    "amount",
    "going",
    "include",
    "credits",
    "cost",
    "going",
    "click",
    "next",
    "threshold",
    "rules",
    "billing",
    "administrators",
    "emailed",
    "certain",
    "percent",
    "budget",
    "hit",
    "spend",
    "happens",
    "hit",
    "five",
    "dollars",
    "billing",
    "administrator",
    "sent",
    "email",
    "telling",
    "spend",
    "hit",
    "five",
    "dollars",
    "also",
    "option",
    "changing",
    "percentages",
    "decided",
    "change",
    "forty",
    "percent",
    "amount",
    "goes",
    "four",
    "dollars",
    "done",
    "automatically",
    "need",
    "calculations",
    "going",
    "keep",
    "50",
    "percent",
    "vice",
    "versa",
    "wanted",
    "change",
    "amount",
    "percentage",
    "budget",
    "actually",
    "change",
    "trigger",
    "actually",
    "option",
    "selecting",
    "forecasted",
    "actual",
    "going",
    "keep",
    "actual",
    "want",
    "add",
    "threshold",
    "rules",
    "going",
    "leave",
    "everything",
    "click",
    "finish",
    "see",
    "budget",
    "name",
    "ace",
    "budget",
    "budget",
    "name",
    "globally",
    "unique",
    "environment",
    "name",
    "budget",
    "exactly",
    "give",
    "specific",
    "configurations",
    "filled",
    "shows",
    "much",
    "credits",
    "used",
    "would",
    "create",
    "budget",
    "alert",
    "needed",
    "edit",
    "always",
    "go",
    "back",
    "ace",
    "budget",
    "edit",
    "going",
    "touch",
    "going",
    "hit",
    "cancel",
    "last",
    "thing",
    "wanted",
    "show",
    "end",
    "lesson",
    "create",
    "another",
    "budget",
    "able",
    "send",
    "trigger",
    "alert",
    "emails",
    "different",
    "users",
    "order",
    "going",
    "go",
    "back",
    "create",
    "budget",
    "going",
    "name",
    "ace",
    "dash",
    "budget",
    "dash",
    "users",
    "going",
    "leave",
    "rest",
    "going",
    "click",
    "next",
    "going",
    "leave",
    "budget",
    "type",
    "way",
    "target",
    "amount",
    "going",
    "put",
    "ten",
    "dollars",
    "leave",
    "include",
    "credits",
    "cost",
    "click",
    "next",
    "going",
    "leave",
    "threshold",
    "rules",
    "way",
    "right",
    "manage",
    "notifications",
    "going",
    "click",
    "link",
    "monitoring",
    "email",
    "notification",
    "channels",
    "budget",
    "email",
    "notification",
    "channel",
    "needs",
    "cloud",
    "monitoring",
    "order",
    "work",
    "prompted",
    "select",
    "workspace",
    "needed",
    "cloud",
    "monitoring",
    "none",
    "going",
    "go",
    "ahead",
    "create",
    "one",
    "clicking",
    "managing",
    "monitoring",
    "workspaces",
    "bring",
    "documentation",
    "order",
    "get",
    "workspace",
    "created",
    "need",
    "go",
    "cloud",
    "monitoring",
    "workspace",
    "top",
    "level",
    "container",
    "used",
    "organize",
    "control",
    "access",
    "monitoring",
    "notification",
    "channels",
    "order",
    "notification",
    "channels",
    "work",
    "must",
    "belong",
    "monitoring",
    "workspace",
    "need",
    "create",
    "least",
    "one",
    "workspace",
    "adding",
    "monitoring",
    "notification",
    "channels",
    "worry",
    "getting",
    "greater",
    "depth",
    "regards",
    "monitoring",
    "later",
    "section",
    "course",
    "going",
    "go",
    "ahead",
    "cancel",
    "going",
    "go",
    "navigation",
    "menu",
    "click",
    "scroll",
    "monitoring",
    "overview",
    "may",
    "take",
    "minute",
    "start",
    "apis",
    "enabled",
    "default",
    "workspace",
    "cloud",
    "monitoring",
    "built",
    "okay",
    "monitoring",
    "api",
    "enabled",
    "monitoring",
    "workspace",
    "created",
    "first",
    "project",
    "monitoring",
    "workspace",
    "created",
    "need",
    "add",
    "emails",
    "users",
    "want",
    "alerts",
    "sent",
    "added",
    "notification",
    "channel",
    "order",
    "going",
    "go",
    "alerting",
    "top",
    "going",
    "click",
    "edit",
    "notification",
    "channels",
    "see",
    "many",
    "notification",
    "channels",
    "enable",
    "simply",
    "clicking",
    "add",
    "new",
    "right",
    "looking",
    "email",
    "going",
    "click",
    "add",
    "new",
    "add",
    "new",
    "email",
    "address",
    "going",
    "add",
    "antony",
    "add",
    "whatever",
    "email",
    "address",
    "like",
    "display",
    "name",
    "going",
    "add",
    "billing",
    "admin",
    "notification",
    "click",
    "save",
    "see",
    "email",
    "added",
    "notification",
    "channel",
    "needed",
    "order",
    "move",
    "next",
    "step",
    "covered",
    "creating",
    "monitoring",
    "workspace",
    "well",
    "adding",
    "another",
    "email",
    "email",
    "notification",
    "channels",
    "go",
    "back",
    "billing",
    "finish",
    "budget",
    "alert",
    "let",
    "go",
    "budgets",
    "alerts",
    "create",
    "budget",
    "gon",
    "na",
    "go",
    "steps",
    "call",
    "billing",
    "alert",
    "users",
    "leave",
    "everything",
    "else",
    "click",
    "next",
    "going",
    "change",
    "target",
    "amount",
    "10",
    "click",
    "next",
    "going",
    "leave",
    "everything",
    "going",
    "go",
    "back",
    "click",
    "link",
    "monitoring",
    "email",
    "notification",
    "channels",
    "budget",
    "notice",
    "click",
    "select",
    "workspace",
    "first",
    "project",
    "shows",
    "ask",
    "notification",
    "channels",
    "already",
    "set",
    "simply",
    "click",
    "see",
    "billing",
    "admin",
    "notification",
    "channel",
    "set",
    "always",
    "go",
    "manage",
    "notification",
    "channels",
    "bring",
    "back",
    "screen",
    "saw",
    "earlier",
    "set",
    "simply",
    "click",
    "finish",
    "regular",
    "budget",
    "alert",
    "also",
    "another",
    "budget",
    "alert",
    "go",
    "different",
    "email",
    "project",
    "manager",
    "director",
    "want",
    "send",
    "budget",
    "alerts",
    "would",
    "covers",
    "demo",
    "committed",
    "use",
    "discounts",
    "reservations",
    "budgets",
    "budget",
    "alerts",
    "wanted",
    "cover",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "short",
    "lesson",
    "covering",
    "exporting",
    "billing",
    "data",
    "able",
    "analyze",
    "data",
    "understand",
    "spend",
    "granular",
    "level",
    "also",
    "going",
    "short",
    "demo",
    "show",
    "enable",
    "export",
    "billing",
    "feature",
    "bring",
    "bigquery",
    "analyzed",
    "cloud",
    "billing",
    "export",
    "bigquery",
    "enables",
    "export",
    "granular",
    "google",
    "cloud",
    "billing",
    "data",
    "usage",
    "cost",
    "details",
    "pricing",
    "data",
    "automatically",
    "bigquery",
    "data",
    "set",
    "specify",
    "access",
    "cloud",
    "billing",
    "data",
    "bigquery",
    "detailed",
    "analysis",
    "use",
    "tool",
    "like",
    "data",
    "studio",
    "visualize",
    "data",
    "quick",
    "note",
    "billing",
    "export",
    "retroactive",
    "taken",
    "consideration",
    "planning",
    "analysis",
    "data",
    "two",
    "types",
    "cloud",
    "billing",
    "data",
    "export",
    "daily",
    "cost",
    "detail",
    "data",
    "pricing",
    "data",
    "selected",
    "right",
    "within",
    "console",
    "depending",
    "use",
    "case",
    "gone",
    "exactly",
    "billing",
    "export",
    "wanted",
    "get",
    "demo",
    "show",
    "export",
    "cloud",
    "billing",
    "data",
    "bigquery",
    "go",
    "necessary",
    "steps",
    "get",
    "enabled",
    "ready",
    "join",
    "console",
    "back",
    "console",
    "order",
    "enable",
    "billing",
    "export",
    "going",
    "going",
    "billing",
    "page",
    "going",
    "move",
    "top",
    "left",
    "hand",
    "corner",
    "navigation",
    "menu",
    "click",
    "billing",
    "left",
    "hand",
    "menu",
    "see",
    "billing",
    "export",
    "click",
    "coming",
    "billing",
    "export",
    "first",
    "time",
    "quick",
    "summary",
    "exactly",
    "bigquery",
    "export",
    "used",
    "discussed",
    "earlier",
    "option",
    "daily",
    "cost",
    "detail",
    "pricing",
    "going",
    "use",
    "daily",
    "cost",
    "detail",
    "demo",
    "export",
    "data",
    "bigquery",
    "first",
    "step",
    "going",
    "click",
    "edit",
    "settings",
    "going",
    "bring",
    "new",
    "page",
    "ask",
    "project",
    "billing",
    "data",
    "going",
    "stored",
    "see",
    "getting",
    "prompt",
    "says",
    "need",
    "create",
    "bigquery",
    "data",
    "set",
    "first",
    "bigquery",
    "data",
    "set",
    "asking",
    "billing",
    "data",
    "going",
    "stored",
    "order",
    "move",
    "forward",
    "billing",
    "export",
    "need",
    "go",
    "bigquery",
    "set",
    "data",
    "set",
    "going",
    "simply",
    "click",
    "button",
    "says",
    "go",
    "bigquery",
    "going",
    "bring",
    "bigquery",
    "page",
    "prompted",
    "big",
    "welcome",
    "note",
    "click",
    "done",
    "right",
    "hand",
    "side",
    "says",
    "create",
    "data",
    "set",
    "going",
    "click",
    "going",
    "create",
    "new",
    "data",
    "set",
    "data",
    "set",
    "id",
    "going",
    "call",
    "billing",
    "export",
    "note",
    "data",
    "set",
    "id",
    "ca",
    "use",
    "characters",
    "like",
    "hyphens",
    "commas",
    "periods",
    "therefore",
    "capitalize",
    "b",
    "e",
    "data",
    "location",
    "default",
    "location",
    "us",
    "multi",
    "region",
    "simply",
    "click",
    "drop",
    "option",
    "store",
    "data",
    "different",
    "location",
    "going",
    "keep",
    "default",
    "option",
    "expiring",
    "table",
    "either",
    "certain",
    "amount",
    "days",
    "never",
    "expire",
    "well",
    "comes",
    "encryption",
    "going",
    "leave",
    "google",
    "manage",
    "key",
    "opposed",
    "customer",
    "manage",
    "key",
    "get",
    "encryption",
    "key",
    "management",
    "little",
    "later",
    "course",
    "going",
    "go",
    "ahead",
    "move",
    "right",
    "bottom",
    "click",
    "create",
    "data",
    "set",
    "data",
    "set",
    "created",
    "see",
    "left",
    "hand",
    "side",
    "menu",
    "subtle",
    "poet",
    "28400",
    "id",
    "project",
    "simply",
    "click",
    "arrow",
    "beside",
    "show",
    "billing",
    "export",
    "data",
    "set",
    "nothing",
    "nothing",
    "showing",
    "data",
    "set",
    "set",
    "go",
    "back",
    "billing",
    "export",
    "page",
    "finish",
    "setting",
    "billing",
    "export",
    "said",
    "going",
    "go",
    "back",
    "navigation",
    "menu",
    "head",
    "billing",
    "go",
    "billing",
    "export",
    "daily",
    "cost",
    "detail",
    "going",
    "click",
    "edit",
    "settings",
    "data",
    "set",
    "already",
    "set",
    "since",
    "one",
    "propagated",
    "billing",
    "export",
    "data",
    "set",
    "field",
    "data",
    "sets",
    "would",
    "able",
    "select",
    "well",
    "going",
    "leave",
    "data",
    "set",
    "billing",
    "export",
    "simply",
    "click",
    "save",
    "billing",
    "export",
    "enabled",
    "able",
    "check",
    "billing",
    "updated",
    "day",
    "says",
    "go",
    "right",
    "data",
    "set",
    "simply",
    "click",
    "hot",
    "link",
    "bring",
    "right",
    "bigquery",
    "one",
    "last",
    "step",
    "still",
    "needs",
    "done",
    "enable",
    "billing",
    "export",
    "work",
    "enable",
    "bigquery",
    "data",
    "transfer",
    "service",
    "api",
    "order",
    "need",
    "go",
    "back",
    "navigation",
    "menu",
    "go",
    "apis",
    "services",
    "dashboard",
    "going",
    "search",
    "bigquery",
    "data",
    "transfer",
    "service",
    "going",
    "simply",
    "go",
    "top",
    "search",
    "bar",
    "simply",
    "type",
    "bigquery",
    "bigquery",
    "data",
    "transfer",
    "api",
    "going",
    "simply",
    "click",
    "hit",
    "enable",
    "might",
    "take",
    "minute",
    "may",
    "asked",
    "create",
    "credentials",
    "top",
    "right",
    "simply",
    "ignore",
    "currently",
    "needed",
    "bigquery",
    "data",
    "transfer",
    "service",
    "api",
    "enabled",
    "able",
    "go",
    "bigquery",
    "take",
    "look",
    "billing",
    "export",
    "data",
    "without",
    "issues",
    "going",
    "take",
    "time",
    "propagate",
    "time",
    "come",
    "tomorrow",
    "data",
    "fully",
    "propagated",
    "able",
    "query",
    "data",
    "see",
    "fit",
    "although",
    "short",
    "demo",
    "necessary",
    "know",
    "exam",
    "well",
    "engineer",
    "looking",
    "query",
    "billing",
    "data",
    "knowledge",
    "order",
    "take",
    "steps",
    "necessary",
    "allow",
    "lesson",
    "demo",
    "export",
    "billing",
    "data",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "demo",
    "going",
    "go",
    "apis",
    "google",
    "cloud",
    "google",
    "cloud",
    "platform",
    "pretty",
    "much",
    "run",
    "apis",
    "whether",
    "console",
    "sdk",
    "hood",
    "hitting",
    "apis",
    "may",
    "wondering",
    "api",
    "well",
    "acronym",
    "standing",
    "application",
    "programming",
    "interface",
    "standard",
    "used",
    "amongst",
    "programming",
    "community",
    "specific",
    "context",
    "programming",
    "interface",
    "google",
    "cloud",
    "services",
    "said",
    "cloud",
    "sdk",
    "console",
    "using",
    "apis",
    "hood",
    "provides",
    "similar",
    "functionality",
    "using",
    "apis",
    "directly",
    "allows",
    "enable",
    "automation",
    "workflow",
    "using",
    "software",
    "libraries",
    "use",
    "favorite",
    "programming",
    "language",
    "seen",
    "previous",
    "lessons",
    "use",
    "cloud",
    "api",
    "must",
    "enable",
    "first",
    "went",
    "compute",
    "engine",
    "enabling",
    "monitoring",
    "enable",
    "api",
    "matter",
    "service",
    "requesting",
    "google",
    "cloud",
    "may",
    "even",
    "linked",
    "together",
    "always",
    "enabled",
    "order",
    "use",
    "getting",
    "little",
    "bit",
    "granular",
    "using",
    "api",
    "need",
    "project",
    "enable",
    "api",
    "enable",
    "project",
    "using",
    "permissions",
    "project",
    "permissions",
    "api",
    "enable",
    "since",
    "demo",
    "want",
    "go",
    "navigation",
    "menu",
    "go",
    "straight",
    "apis",
    "services",
    "dashboard",
    "apis",
    "services",
    "see",
    "traffic",
    "errors",
    "latency",
    "regards",
    "apis",
    "well",
    "time",
    "frame",
    "median",
    "latency",
    "select",
    "granular",
    "search",
    "comes",
    "enabled",
    "already",
    "see",
    "list",
    "apis",
    "enabled",
    "since",
    "done",
    "much",
    "apis",
    "enabled",
    "demo",
    "meant",
    "go",
    "depth",
    "apis",
    "merely",
    "overview",
    "understand",
    "apis",
    "used",
    "context",
    "google",
    "cloud",
    "like",
    "go",
    "depth",
    "regards",
    "apis",
    "possibly",
    "get",
    "certified",
    "apogee",
    "certification",
    "corresponding",
    "lessons",
    "would",
    "great",
    "way",
    "get",
    "little",
    "bit",
    "understanding",
    "demo",
    "going",
    "stick",
    "overview",
    "order",
    "search",
    "apis",
    "need",
    "enabled",
    "looking",
    "something",
    "specific",
    "come",
    "enable",
    "apis",
    "services",
    "quick",
    "search",
    "search",
    "bar",
    "top",
    "page",
    "quick",
    "glance",
    "going",
    "go",
    "enable",
    "apis",
    "services",
    "brought",
    "new",
    "page",
    "see",
    "api",
    "library",
    "left",
    "see",
    "menu",
    "apis",
    "categorized",
    "apis",
    "available",
    "comes",
    "google",
    "cloud",
    "google",
    "services",
    "saw",
    "needed",
    "enable",
    "api",
    "bigquery",
    "would",
    "simply",
    "type",
    "bigquery",
    "go",
    "api",
    "since",
    "api",
    "enabled",
    "nothing",
    "needed",
    "enable",
    "could",
    "right",
    "quick",
    "note",
    "going",
    "service",
    "available",
    "console",
    "api",
    "automatically",
    "gets",
    "enabled",
    "go",
    "use",
    "first",
    "time",
    "quick",
    "overview",
    "apis",
    "api",
    "library",
    "regards",
    "google",
    "cloud",
    "short",
    "yet",
    "important",
    "demo",
    "understand",
    "workings",
    "cloud",
    "sdk",
    "console",
    "remember",
    "using",
    "service",
    "google",
    "cloud",
    "must",
    "enable",
    "api",
    "order",
    "start",
    "using",
    "wraps",
    "demo",
    "cloud",
    "apis",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "demo",
    "creating",
    "setting",
    "new",
    "gmail",
    "user",
    "admin",
    "user",
    "use",
    "moving",
    "ahead",
    "course",
    "well",
    "following",
    "google",
    "best",
    "practices",
    "need",
    "user",
    "lesser",
    "privileges",
    "user",
    "account",
    "set",
    "previously",
    "going",
    "full",
    "demo",
    "show",
    "configure",
    "google",
    "cloud",
    "setup",
    "uses",
    "g",
    "suite",
    "cloud",
    "identity",
    "account",
    "super",
    "administrator",
    "account",
    "created",
    "administer",
    "domain",
    "super",
    "admin",
    "account",
    "irrevocable",
    "administrative",
    "permissions",
    "used",
    "administration",
    "means",
    "permissions",
    "taken",
    "away",
    "account",
    "power",
    "grant",
    "organization",
    "admin",
    "role",
    "role",
    "matter",
    "recover",
    "accounts",
    "domain",
    "level",
    "makes",
    "account",
    "extremely",
    "powerful",
    "since",
    "domain",
    "setup",
    "using",
    "g",
    "suite",
    "cloud",
    "identity",
    "account",
    "need",
    "worry",
    "super",
    "admin",
    "account",
    "specific",
    "environment",
    "gmail",
    "accounts",
    "standalone",
    "accounts",
    "meant",
    "personal",
    "hold",
    "organization",
    "usually",
    "start",
    "project",
    "level",
    "explain",
    "bit",
    "detail",
    "diagram",
    "showing",
    "two",
    "different",
    "accounts",
    "using",
    "structure",
    "behind",
    "discussed",
    "billing",
    "accounts",
    "option",
    "paying",
    "projects",
    "different",
    "organization",
    "creating",
    "new",
    "projects",
    "using",
    "two",
    "different",
    "gmail",
    "accounts",
    "created",
    "without",
    "organization",
    "account",
    "standalone",
    "create",
    "projects",
    "makes",
    "different",
    "antony",
    "gcloud",
    "ace",
    "account",
    "owns",
    "billing",
    "account",
    "set",
    "billing",
    "account",
    "administrator",
    "tony",
    "bowtie",
    "ace",
    "account",
    "billing",
    "account",
    "user",
    "able",
    "link",
    "projects",
    "billing",
    "account",
    "hold",
    "full",
    "access",
    "billing",
    "spirit",
    "sticking",
    "principle",
    "lease",
    "privilege",
    "using",
    "tony",
    "bowtie",
    "ace",
    "account",
    "created",
    "earlier",
    "lesser",
    "privileges",
    "billing",
    "still",
    "give",
    "permissions",
    "need",
    "create",
    "edit",
    "delete",
    "resources",
    "without",
    "powerful",
    "permissions",
    "needed",
    "billing",
    "assigning",
    "new",
    "gmail",
    "user",
    "billing",
    "account",
    "user",
    "role",
    "allow",
    "achieve",
    "everything",
    "need",
    "build",
    "remainder",
    "course",
    "review",
    "using",
    "new",
    "google",
    "account",
    "created",
    "like",
    "use",
    "google",
    "account",
    "always",
    "recommend",
    "enabling",
    "verification",
    "account",
    "user",
    "hold",
    "powerful",
    "permissions",
    "access",
    "ton",
    "different",
    "resources",
    "google",
    "cloud",
    "gone",
    "details",
    "setting",
    "second",
    "account",
    "let",
    "head",
    "demo",
    "get",
    "things",
    "started",
    "whenever",
    "ready",
    "join",
    "console",
    "back",
    "console",
    "switching",
    "new",
    "user",
    "need",
    "assign",
    "specific",
    "roles",
    "need",
    "user",
    "billing",
    "account",
    "user",
    "role",
    "assign",
    "role",
    "new",
    "user",
    "need",
    "head",
    "billing",
    "going",
    "go",
    "back",
    "corner",
    "click",
    "navigation",
    "menu",
    "go",
    "billing",
    "menu",
    "going",
    "move",
    "account",
    "management",
    "click",
    "billing",
    "account",
    "see",
    "permissions",
    "assigned",
    "one",
    "member",
    "billing",
    "account",
    "administrator",
    "expected",
    "seeing",
    "anthony",
    "g",
    "cloud",
    "ace",
    "want",
    "add",
    "another",
    "member",
    "billing",
    "account",
    "going",
    "simply",
    "click",
    "add",
    "members",
    "enter",
    "new",
    "second",
    "user",
    "tony",
    "bowtie",
    "ace",
    "select",
    "role",
    "going",
    "move",
    "billing",
    "billing",
    "account",
    "user",
    "see",
    "role",
    "billing",
    "account",
    "user",
    "allow",
    "permissions",
    "associate",
    "projects",
    "billing",
    "accounts",
    "exactly",
    "want",
    "going",
    "simply",
    "click",
    "simply",
    "click",
    "save",
    "assigned",
    "second",
    "user",
    "proper",
    "permissions",
    "needed",
    "going",
    "log",
    "log",
    "new",
    "user",
    "simply",
    "going",
    "right",
    "hand",
    "corner",
    "icon",
    "clicking",
    "icon",
    "going",
    "add",
    "account",
    "adding",
    "account",
    "able",
    "switch",
    "back",
    "forth",
    "different",
    "users",
    "would",
    "recommend",
    "sole",
    "user",
    "computer",
    "computer",
    "multiple",
    "users",
    "simply",
    "sign",
    "sign",
    "back",
    "different",
    "user",
    "asked",
    "email",
    "would",
    "tony",
    "bowtie",
    "ace",
    "gon",
    "na",
    "plug",
    "password",
    "going",
    "ask",
    "verification",
    "going",
    "click",
    "yes",
    "first",
    "time",
    "logging",
    "google",
    "cloud",
    "user",
    "get",
    "prompt",
    "asking",
    "agree",
    "terms",
    "service",
    "going",
    "agree",
    "simply",
    "click",
    "agree",
    "continue",
    "going",
    "move",
    "back",
    "overview",
    "see",
    "permissions",
    "view",
    "costs",
    "billing",
    "account",
    "permissions",
    "assigned",
    "billing",
    "account",
    "administrator",
    "antony",
    "g",
    "cloud",
    "ace",
    "applied",
    "tony",
    "bowtie",
    "ace",
    "therefore",
    "things",
    "like",
    "budgets",
    "alerts",
    "even",
    "billing",
    "exports",
    "access",
    "moving",
    "forward",
    "course",
    "need",
    "access",
    "anything",
    "billing",
    "currently",
    "access",
    "like",
    "budgets",
    "alerts",
    "simply",
    "switch",
    "account",
    "take",
    "care",
    "necessary",
    "changes",
    "access",
    "go",
    "billing",
    "account",
    "click",
    "drop",
    "menu",
    "click",
    "manage",
    "billing",
    "accounts",
    "see",
    "access",
    "view",
    "billing",
    "accounts",
    "along",
    "projects",
    "linked",
    "gmail",
    "accounts",
    "standalone",
    "accounts",
    "project",
    "owned",
    "antony",
    "gcloud",
    "ace",
    "access",
    "order",
    "access",
    "project",
    "would",
    "permissions",
    "assigned",
    "directly",
    "order",
    "actually",
    "view",
    "project",
    "possibly",
    "creating",
    "resources",
    "within",
    "project",
    "go",
    "back",
    "home",
    "page",
    "see",
    "projects",
    "available",
    "therefore",
    "resources",
    "within",
    "environment",
    "kick",
    "going",
    "create",
    "new",
    "project",
    "project",
    "name",
    "going",
    "call",
    "project",
    "tony",
    "name",
    "project",
    "whatever",
    "like",
    "location",
    "organization",
    "therefore",
    "going",
    "click",
    "create",
    "may",
    "take",
    "minute",
    "create",
    "first",
    "project",
    "named",
    "project",
    "tony",
    "well",
    "notification",
    "came",
    "saying",
    "project",
    "created",
    "project",
    "created",
    "linked",
    "billing",
    "account",
    "order",
    "verify",
    "going",
    "go",
    "billing",
    "drop",
    "going",
    "click",
    "manage",
    "billing",
    "accounts",
    "see",
    "number",
    "projects",
    "gone",
    "one",
    "two",
    "click",
    "menu",
    "projects",
    "see",
    "project",
    "tony",
    "project",
    "linked",
    "billing",
    "account",
    "also",
    "permissions",
    "either",
    "disable",
    "billing",
    "change",
    "billing",
    "specific",
    "project",
    "yet",
    "order",
    "change",
    "billing",
    "another",
    "billing",
    "account",
    "billing",
    "accounts",
    "available",
    "moving",
    "forward",
    "one",
    "billing",
    "account",
    "projects",
    "decide",
    "create",
    "linked",
    "billing",
    "account",
    "great",
    "example",
    "trimming",
    "permissions",
    "needed",
    "different",
    "users",
    "even",
    "though",
    "domain",
    "owned",
    "account",
    "personal",
    "account",
    "always",
    "recommended",
    "practice",
    "principle",
    "lease",
    "privilege",
    "whenever",
    "come",
    "across",
    "assigning",
    "permissions",
    "user",
    "said",
    "billing",
    "related",
    "tasks",
    "decide",
    "moving",
    "forward",
    "simply",
    "switch",
    "user",
    "necessary",
    "changes",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "short",
    "lesson",
    "going",
    "covering",
    "overview",
    "cloud",
    "sdk",
    "command",
    "line",
    "interface",
    "essential",
    "component",
    "interacting",
    "google",
    "cloud",
    "exam",
    "need",
    "get",
    "familiar",
    "command",
    "line",
    "commands",
    "needed",
    "order",
    "create",
    "modify",
    "delete",
    "resources",
    "also",
    "extremely",
    "valuable",
    "tool",
    "tool",
    "belt",
    "world",
    "cloud",
    "engineer",
    "found",
    "common",
    "easy",
    "way",
    "implement",
    "small",
    "operations",
    "within",
    "google",
    "cloud",
    "well",
    "automating",
    "complex",
    "ones",
    "exactly",
    "cloud",
    "sdk",
    "well",
    "cloud",
    "sdk",
    "set",
    "command",
    "line",
    "tools",
    "allows",
    "manage",
    "resources",
    "terminal",
    "google",
    "cloud",
    "includes",
    "commands",
    "gcloud",
    "gsutil",
    "bq",
    "cubectl",
    "using",
    "commands",
    "allow",
    "manage",
    "resources",
    "compute",
    "engine",
    "cloud",
    "storage",
    "bigquery",
    "kubernetes",
    "many",
    "resources",
    "tools",
    "run",
    "interactively",
    "automated",
    "scripts",
    "giving",
    "power",
    "flexibility",
    "need",
    "get",
    "job",
    "done",
    "cloud",
    "sdk",
    "powerful",
    "everything",
    "console",
    "yet",
    "options",
    "console",
    "use",
    "infrastructure",
    "code",
    "autocompletion",
    "helps",
    "finish",
    "command",
    "line",
    "statements",
    "run",
    "windows",
    "cloud",
    "sdk",
    "got",
    "covered",
    "availability",
    "powershell",
    "order",
    "access",
    "google",
    "cloud",
    "platform",
    "usually",
    "authorize",
    "google",
    "cloud",
    "sdk",
    "tools",
    "grant",
    "authorization",
    "cloud",
    "sdk",
    "tools",
    "either",
    "use",
    "user",
    "account",
    "service",
    "account",
    "user",
    "account",
    "google",
    "account",
    "allows",
    "end",
    "users",
    "authenticate",
    "directly",
    "application",
    "common",
    "use",
    "cases",
    "single",
    "machine",
    "using",
    "user",
    "account",
    "best",
    "practice",
    "going",
    "route",
    "service",
    "account",
    "google",
    "account",
    "associated",
    "gcp",
    "project",
    "specific",
    "user",
    "service",
    "account",
    "used",
    "providing",
    "service",
    "account",
    "key",
    "application",
    "recommended",
    "script",
    "cloud",
    "sdk",
    "tools",
    "use",
    "multiple",
    "machines",
    "installed",
    "cloud",
    "sdk",
    "comes",
    "commands",
    "allow",
    "configure",
    "different",
    "options",
    "using",
    "gcloud",
    "init",
    "initializes",
    "authorizes",
    "access",
    "performs",
    "common",
    "cloud",
    "sdk",
    "setup",
    "steps",
    "using",
    "optional",
    "commands",
    "gcloud",
    "auth",
    "login",
    "authorizes",
    "access",
    "gcloud",
    "google",
    "user",
    "credentials",
    "sets",
    "current",
    "account",
    "active",
    "gcloud",
    "config",
    "another",
    "optional",
    "configuration",
    "allows",
    "configure",
    "accounts",
    "projects",
    "well",
    "gcloud",
    "components",
    "allow",
    "install",
    "update",
    "delete",
    "optional",
    "components",
    "sdk",
    "give",
    "flexibility",
    "different",
    "resources",
    "installed",
    "cloud",
    "sdk",
    "almost",
    "gcloud",
    "commands",
    "follow",
    "specific",
    "format",
    "shown",
    "example",
    "format",
    "broken",
    "component",
    "entity",
    "operation",
    "positional",
    "arguments",
    "flags",
    "going",
    "specific",
    "examples",
    "demonstration",
    "little",
    "bit",
    "later",
    "wanted",
    "cover",
    "overview",
    "cloud",
    "sdk",
    "cli",
    "mark",
    "lesson",
    "complete",
    "join",
    "next",
    "one",
    "go",
    "ahead",
    "demonstrate",
    "installing",
    "cloud",
    "sdk",
    "music",
    "back",
    "demonstration",
    "show",
    "download",
    "install",
    "configure",
    "cloud",
    "sdk",
    "using",
    "quick",
    "start",
    "guide",
    "lies",
    "cloud",
    "sdk",
    "documentation",
    "holds",
    "steps",
    "installing",
    "cloud",
    "sdk",
    "different",
    "operating",
    "systems",
    "make",
    "sure",
    "include",
    "lesson",
    "text",
    "demo",
    "show",
    "install",
    "cloud",
    "sdk",
    "common",
    "operating",
    "systems",
    "windows",
    "mac",
    "os",
    "ubuntu",
    "linux",
    "need",
    "follow",
    "process",
    "pages",
    "well",
    "way",
    "said",
    "let",
    "get",
    "demo",
    "started",
    "bring",
    "cloud",
    "sdk",
    "life",
    "getting",
    "installed",
    "configured",
    "specific",
    "operating",
    "system",
    "explained",
    "gon",
    "na",
    "go",
    "ahead",
    "install",
    "cloud",
    "sdk",
    "three",
    "different",
    "operating",
    "systems",
    "windows",
    "mac",
    "os",
    "ubuntu",
    "linux",
    "installing",
    "help",
    "quick",
    "start",
    "guide",
    "see",
    "said",
    "including",
    "link",
    "lesson",
    "text",
    "kick",
    "demo",
    "wanted",
    "start",
    "installing",
    "cloud",
    "sdk",
    "windows",
    "going",
    "move",
    "windows",
    "virtual",
    "machine",
    "going",
    "open",
    "browser",
    "going",
    "paste",
    "link",
    "quick",
    "start",
    "guide",
    "click",
    "either",
    "link",
    "quick",
    "start",
    "windows",
    "quick",
    "start",
    "page",
    "give",
    "instructions",
    "exactly",
    "need",
    "operating",
    "system",
    "says",
    "need",
    "project",
    "created",
    "last",
    "lesson",
    "project",
    "tony",
    "next",
    "going",
    "download",
    "cloud",
    "sdk",
    "installer",
    "going",
    "click",
    "see",
    "prompt",
    "bottom",
    "left",
    "hand",
    "corner",
    "installer",
    "downloaded",
    "going",
    "click",
    "open",
    "file",
    "going",
    "prompted",
    "go",
    "wizard",
    "going",
    "click",
    "next",
    "going",
    "agree",
    "terms",
    "agreement",
    "going",
    "anthony",
    "destination",
    "folder",
    "keep",
    "components",
    "going",
    "install",
    "going",
    "keep",
    "beta",
    "commands",
    "unchecked",
    "really",
    "need",
    "need",
    "later",
    "install",
    "component",
    "experienced",
    "even",
    "bit",
    "curious",
    "could",
    "click",
    "beta",
    "commands",
    "take",
    "test",
    "drive",
    "going",
    "keep",
    "going",
    "click",
    "install",
    "depending",
    "power",
    "machine",
    "take",
    "anywhere",
    "two",
    "five",
    "minutes",
    "install",
    "google",
    "cloud",
    "sdk",
    "installed",
    "going",
    "click",
    "next",
    "shown",
    "documentation",
    "want",
    "make",
    "sure",
    "options",
    "checked",
    "create",
    "start",
    "menu",
    "shortcut",
    "desktop",
    "shortcut",
    "want",
    "start",
    "google",
    "cloud",
    "sdk",
    "shell",
    "lastly",
    "want",
    "run",
    "gcloud",
    "init",
    "order",
    "initialize",
    "configure",
    "cloud",
    "sdk",
    "going",
    "click",
    "finish",
    "exit",
    "setup",
    "going",
    "get",
    "command",
    "shell",
    "pops",
    "going",
    "zoom",
    "better",
    "viewing",
    "says",
    "current",
    "configuration",
    "set",
    "default",
    "comes",
    "configuration",
    "selecting",
    "active",
    "account",
    "current",
    "active",
    "account",
    "going",
    "set",
    "default",
    "account",
    "also",
    "needed",
    "diagnostic",
    "check",
    "make",
    "sure",
    "connect",
    "internet",
    "able",
    "verify",
    "account",
    "prompt",
    "saying",
    "must",
    "log",
    "continue",
    "would",
    "like",
    "log",
    "yes",
    "click",
    "enter",
    "going",
    "prompt",
    "new",
    "browser",
    "window",
    "need",
    "log",
    "using",
    "current",
    "account",
    "authorize",
    "cloud",
    "sdk",
    "going",
    "log",
    "tony",
    "bowtie",
    "ace",
    "account",
    "click",
    "next",
    "type",
    "password",
    "going",
    "ask",
    "verification",
    "going",
    "get",
    "prompt",
    "saying",
    "google",
    "sdk",
    "wants",
    "access",
    "google",
    "account",
    "going",
    "click",
    "allow",
    "success",
    "authenticated",
    "google",
    "cloud",
    "sdk",
    "go",
    "back",
    "terminal",
    "prompted",
    "enter",
    "values",
    "properly",
    "configure",
    "google",
    "cloud",
    "sdk",
    "going",
    "pick",
    "cloud",
    "project",
    "use",
    "going",
    "use",
    "project",
    "tony",
    "created",
    "earlier",
    "going",
    "enter",
    "1",
    "hit",
    "enter",
    "whatever",
    "project",
    "created",
    "use",
    "one",
    "default",
    "configuration",
    "states",
    "current",
    "project",
    "set",
    "project",
    "tony",
    "configuration",
    "called",
    "default",
    "second",
    "configuration",
    "wanted",
    "use",
    "call",
    "different",
    "configuration",
    "google",
    "cloud",
    "sdk",
    "configured",
    "ready",
    "use",
    "make",
    "sure",
    "working",
    "going",
    "run",
    "couple",
    "commands",
    "going",
    "run",
    "gcloud",
    "help",
    "command",
    "see",
    "given",
    "list",
    "bunch",
    "different",
    "commands",
    "run",
    "exit",
    "hit",
    "ctrl",
    "c",
    "going",
    "run",
    "gcloud",
    "config",
    "list",
    "give",
    "properties",
    "active",
    "configuration",
    "account",
    "tony",
    "bowtie",
    "ace",
    "disabled",
    "usage",
    "reporting",
    "project",
    "project",
    "tony",
    "active",
    "configuration",
    "set",
    "default",
    "worry",
    "going",
    "covering",
    "commands",
    "next",
    "lesson",
    "going",
    "going",
    "detail",
    "configure",
    "add",
    "users",
    "within",
    "cloud",
    "sdk",
    "configuration",
    "go",
    "deeper",
    "course",
    "going",
    "using",
    "lot",
    "command",
    "line",
    "get",
    "familiar",
    "syntax",
    "become",
    "bit",
    "comfortable",
    "installed",
    "cloud",
    "sdk",
    "windows",
    "process",
    "little",
    "bit",
    "different",
    "comes",
    "installation",
    "operating",
    "systems",
    "similar",
    "comes",
    "configuration",
    "let",
    "head",
    "mac",
    "os",
    "install",
    "cloud",
    "sdk",
    "mac",
    "os",
    "first",
    "thing",
    "want",
    "want",
    "open",
    "web",
    "browser",
    "want",
    "go",
    "cloud",
    "sdk",
    "quick",
    "start",
    "page",
    "going",
    "paste",
    "url",
    "looking",
    "quick",
    "start",
    "mac",
    "os",
    "either",
    "click",
    "menu",
    "left",
    "hand",
    "side",
    "menu",
    "main",
    "page",
    "like",
    "said",
    "installation",
    "going",
    "little",
    "bit",
    "different",
    "windows",
    "steps",
    "follow",
    "first",
    "step",
    "asks",
    "us",
    "project",
    "already",
    "created",
    "already",
    "done",
    "project",
    "tony",
    "next",
    "step",
    "tells",
    "us",
    "cloud",
    "sdk",
    "requires",
    "python",
    "want",
    "check",
    "system",
    "see",
    "supported",
    "version",
    "order",
    "check",
    "version",
    "going",
    "use",
    "command",
    "python",
    "minus",
    "v",
    "going",
    "copy",
    "clipboard",
    "open",
    "terminal",
    "going",
    "zoom",
    "better",
    "viewing",
    "going",
    "paste",
    "command",
    "simply",
    "click",
    "enter",
    "see",
    "running",
    "python",
    "starred",
    "note",
    "says",
    "cloud",
    "sdk",
    "soon",
    "move",
    "python",
    "3",
    "order",
    "avoid",
    "upgrade",
    "later",
    "want",
    "check",
    "version",
    "python",
    "3",
    "use",
    "similar",
    "command",
    "typing",
    "python",
    "3",
    "space",
    "minus",
    "capital",
    "v",
    "see",
    "running",
    "version",
    "moving",
    "back",
    "guide",
    "see",
    "supportive",
    "version",
    "supportive",
    "version",
    "include",
    "link",
    "upgrade",
    "version",
    "lesson",
    "text",
    "finished",
    "step",
    "let",
    "move",
    "next",
    "one",
    "download",
    "archive",
    "file",
    "google",
    "cloud",
    "sdk",
    "machines",
    "run",
    "package",
    "latest",
    "operating",
    "system",
    "mac",
    "os",
    "good",
    "go",
    "going",
    "click",
    "package",
    "start",
    "downloading",
    "finished",
    "click",
    "downloads",
    "click",
    "file",
    "extract",
    "folder",
    "files",
    "folders",
    "within",
    "another",
    "quick",
    "note",
    "google",
    "prefers",
    "keep",
    "google",
    "cloud",
    "sdk",
    "home",
    "directory",
    "following",
    "guide",
    "going",
    "exactly",
    "easiest",
    "way",
    "move",
    "folder",
    "home",
    "directory",
    "simply",
    "drag",
    "drop",
    "home",
    "folder",
    "left",
    "hand",
    "menu",
    "marked",
    "little",
    "house",
    "icon",
    "nested",
    "favorites",
    "move",
    "home",
    "folder",
    "confirm",
    "indeed",
    "moving",
    "last",
    "step",
    "shows",
    "optional",
    "guide",
    "asks",
    "us",
    "install",
    "script",
    "add",
    "cloud",
    "sdk",
    "tools",
    "path",
    "highly",
    "recommend",
    "install",
    "script",
    "add",
    "tools",
    "command",
    "completion",
    "get",
    "command",
    "completion",
    "little",
    "bit",
    "later",
    "next",
    "couple",
    "lessons",
    "command",
    "need",
    "run",
    "going",
    "copy",
    "clipboard",
    "going",
    "move",
    "back",
    "terminal",
    "going",
    "clear",
    "screen",
    "make",
    "sure",
    "home",
    "directory",
    "cloud",
    "sdk",
    "folder",
    "going",
    "simply",
    "type",
    "ls",
    "know",
    "ls",
    "linux",
    "command",
    "list",
    "files",
    "folders",
    "current",
    "path",
    "see",
    "google",
    "cloud",
    "sdk",
    "path",
    "therefore",
    "run",
    "script",
    "going",
    "paste",
    "going",
    "hit",
    "enter",
    "prompt",
    "comes",
    "asking",
    "whether",
    "want",
    "disable",
    "usage",
    "reporting",
    "want",
    "help",
    "improve",
    "google",
    "cloud",
    "sdk",
    "going",
    "type",
    "yes",
    "hit",
    "enter",
    "explaining",
    "cloud",
    "sdk",
    "tools",
    "installed",
    "path",
    "step",
    "takes",
    "care",
    "going",
    "type",
    "enter",
    "yes",
    "continue",
    "usually",
    "path",
    "comes",
    "right",
    "one",
    "unless",
    "changed",
    "otherwise",
    "going",
    "leave",
    "blank",
    "hit",
    "enter",
    "installed",
    "tools",
    "order",
    "run",
    "gcloud",
    "init",
    "start",
    "new",
    "shell",
    "says",
    "changes",
    "take",
    "effect",
    "going",
    "go",
    "top",
    "left",
    "hand",
    "menu",
    "click",
    "terminal",
    "quit",
    "terminal",
    "restart",
    "terminal",
    "going",
    "zoom",
    "better",
    "viewing",
    "able",
    "run",
    "gcloud",
    "init",
    "order",
    "initialize",
    "installation",
    "prompt",
    "diagnostic",
    "tests",
    "see",
    "network",
    "issues",
    "shows",
    "login",
    "continue",
    "would",
    "like",
    "log",
    "going",
    "type",
    "yes",
    "hit",
    "enter",
    "new",
    "browser",
    "popped",
    "open",
    "prompting",
    "enter",
    "email",
    "password",
    "going",
    "going",
    "authorize",
    "account",
    "verification",
    "going",
    "save",
    "password",
    "yes",
    "want",
    "allow",
    "google",
    "cloud",
    "sdk",
    "access",
    "google",
    "account",
    "going",
    "click",
    "allow",
    "shows",
    "authenticated",
    "going",
    "move",
    "back",
    "terminal",
    "note",
    "move",
    "forward",
    "case",
    "get",
    "browser",
    "log",
    "google",
    "account",
    "simply",
    "highlight",
    "url",
    "copy",
    "browser",
    "prompt",
    "moving",
    "right",
    "ahead",
    "shows",
    "logged",
    "tonybowtieace",
    "exactly",
    "wanted",
    "asking",
    "pick",
    "cloud",
    "project",
    "use",
    "want",
    "use",
    "project",
    "tony",
    "going",
    "type",
    "1",
    "enter",
    "cloud",
    "sdk",
    "configured",
    "double",
    "check",
    "going",
    "run",
    "gcloud",
    "config",
    "list",
    "command",
    "show",
    "configuration",
    "see",
    "account",
    "tonybowties",
    "disable",
    "usage",
    "reporting",
    "equal",
    "false",
    "project",
    "project",
    "tony",
    "active",
    "configuration",
    "set",
    "default",
    "covers",
    "cloud",
    "sdk",
    "install",
    "mac",
    "os",
    "finally",
    "going",
    "move",
    "ubuntu",
    "linux",
    "configure",
    "cloud",
    "sdk",
    "ubuntu",
    "like",
    "operating",
    "systems",
    "going",
    "open",
    "browser",
    "going",
    "paste",
    "url",
    "quick",
    "start",
    "guide",
    "want",
    "click",
    "quick",
    "start",
    "debian",
    "ubuntu",
    "choice",
    "either",
    "clicking",
    "link",
    "left",
    "hand",
    "menu",
    "one",
    "main",
    "menu",
    "following",
    "guide",
    "telling",
    "us",
    "comes",
    "ubuntu",
    "release",
    "recommended",
    "sdk",
    "installed",
    "ubuntu",
    "release",
    "reached",
    "end",
    "life",
    "guide",
    "also",
    "asks",
    "create",
    "project",
    "one",
    "already",
    "already",
    "done",
    "continue",
    "steps",
    "since",
    "installing",
    "inside",
    "docker",
    "image",
    "gon",
    "na",
    "go",
    "ahead",
    "use",
    "commands",
    "right",
    "copy",
    "commands",
    "copying",
    "clipboard",
    "recommendation",
    "install",
    "one",
    "one",
    "one",
    "going",
    "copy",
    "going",
    "open",
    "terminal",
    "going",
    "zoom",
    "better",
    "viewing",
    "going",
    "paste",
    "command",
    "click",
    "enter",
    "going",
    "prompt",
    "password",
    "come",
    "errors",
    "means",
    "successfully",
    "executed",
    "going",
    "move",
    "next",
    "command",
    "going",
    "copy",
    "go",
    "back",
    "terminal",
    "paste",
    "curl",
    "installed",
    "prompted",
    "install",
    "given",
    "command",
    "run",
    "going",
    "copy",
    "paste",
    "command",
    "click",
    "enter",
    "going",
    "type",
    "yes",
    "continue",
    "going",
    "install",
    "couple",
    "minutes",
    "okay",
    "curl",
    "installed",
    "able",
    "run",
    "command",
    "going",
    "clear",
    "screen",
    "first",
    "executed",
    "errors",
    "well",
    "moving",
    "last",
    "command",
    "command",
    "download",
    "install",
    "google",
    "cloud",
    "sdk",
    "prompted",
    "install",
    "packages",
    "going",
    "type",
    "yes",
    "continue",
    "going",
    "download",
    "install",
    "necessary",
    "packages",
    "needed",
    "google",
    "cloud",
    "sdk",
    "depending",
    "speed",
    "internet",
    "speed",
    "machine",
    "could",
    "take",
    "anywhere",
    "two",
    "five",
    "minutes",
    "okay",
    "google",
    "cloud",
    "sdk",
    "installed",
    "cloud",
    "sdk",
    "installed",
    "initialize",
    "configuration",
    "going",
    "type",
    "gcloud",
    "init",
    "prompt",
    "network",
    "diagnostics",
    "going",
    "type",
    "yes",
    "log",
    "going",
    "get",
    "prompt",
    "email",
    "password",
    "going",
    "take",
    "care",
    "verification",
    "going",
    "allow",
    "google",
    "cloud",
    "sdk",
    "access",
    "google",
    "account",
    "success",
    "authenticated",
    "moving",
    "back",
    "terminal",
    "verify",
    "going",
    "pick",
    "project",
    "tony",
    "cloud",
    "project",
    "use",
    "cloud",
    "sdk",
    "configured",
    "always",
    "going",
    "double",
    "check",
    "running",
    "gcloud",
    "config",
    "list",
    "expected",
    "details",
    "come",
    "quick",
    "run",
    "three",
    "operating",
    "systems",
    "windows",
    "mac",
    "os",
    "ubuntu",
    "linux",
    "install",
    "google",
    "cloud",
    "sdk",
    "help",
    "get",
    "started",
    "becoming",
    "familiar",
    "comfortable",
    "using",
    "command",
    "line",
    "interface",
    "wraps",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "last",
    "demo",
    "went",
    "complete",
    "install",
    "cloud",
    "sdk",
    "configured",
    "admin",
    "account",
    "used",
    "within",
    "demonstration",
    "walking",
    "manage",
    "cloud",
    "sdk",
    "involve",
    "utilize",
    "customize",
    "environment",
    "well",
    "configuring",
    "user",
    "account",
    "able",
    "apply",
    "switching",
    "configurations",
    "one",
    "user",
    "another",
    "going",
    "initializing",
    "authorization",
    "configurations",
    "properties",
    "installing",
    "removing",
    "components",
    "well",
    "full",
    "run",
    "gcloud",
    "interactive",
    "shell",
    "let",
    "kick",
    "demo",
    "diving",
    "terminal",
    "sdk",
    "installed",
    "configured",
    "second",
    "user",
    "tony",
    "bowtie",
    "ace",
    "mac",
    "os",
    "terminal",
    "aware",
    "matter",
    "operating",
    "system",
    "running",
    "long",
    "sdk",
    "installed",
    "user",
    "configured",
    "saw",
    "last",
    "lesson",
    "install",
    "cloud",
    "sdk",
    "next",
    "step",
    "typically",
    "initialize",
    "cloud",
    "sdk",
    "running",
    "gcloud",
    "init",
    "command",
    "perform",
    "initial",
    "setup",
    "tasks",
    "well",
    "authorizing",
    "cloud",
    "sdk",
    "use",
    "user",
    "account",
    "credentials",
    "access",
    "google",
    "cloud",
    "short",
    "sets",
    "cloud",
    "sdk",
    "configuration",
    "sets",
    "base",
    "set",
    "properties",
    "usually",
    "covers",
    "active",
    "account",
    "current",
    "project",
    "api",
    "enabled",
    "default",
    "google",
    "compute",
    "engine",
    "region",
    "zone",
    "note",
    "remote",
    "terminal",
    "session",
    "access",
    "browser",
    "still",
    "run",
    "gcloud",
    "init",
    "command",
    "adding",
    "flag",
    "dash",
    "dash",
    "console",
    "dash",
    "prevent",
    "command",
    "launching",
    "authorization",
    "like",
    "saw",
    "setting",
    "last",
    "user",
    "even",
    "though",
    "user",
    "already",
    "set",
    "still",
    "run",
    "gcloud",
    "init",
    "give",
    "couple",
    "different",
    "options",
    "choose",
    "configuration",
    "new",
    "settings",
    "create",
    "new",
    "configuration",
    "demo",
    "since",
    "already",
    "two",
    "users",
    "demonstrate",
    "switch",
    "different",
    "users",
    "want",
    "create",
    "new",
    "configuration",
    "first",
    "user",
    "going",
    "type",
    "2",
    "hit",
    "enter",
    "going",
    "ask",
    "configuration",
    "name",
    "asks",
    "configuration",
    "name",
    "setting",
    "first",
    "configuration",
    "set",
    "default",
    "know",
    "user",
    "account",
    "full",
    "access",
    "billing",
    "well",
    "administration",
    "privileges",
    "going",
    "call",
    "configuration",
    "master",
    "going",
    "hit",
    "enter",
    "necessary",
    "network",
    "checks",
    "asking",
    "account",
    "want",
    "use",
    "configuration",
    "tony",
    "bowtie",
    "ace",
    "access",
    "two",
    "different",
    "google",
    "cloud",
    "accounts",
    "would",
    "able",
    "add",
    "different",
    "configuration",
    "going",
    "log",
    "new",
    "account",
    "going",
    "put",
    "two",
    "hit",
    "enter",
    "brought",
    "browser",
    "window",
    "going",
    "log",
    "using",
    "another",
    "account",
    "type",
    "first",
    "account",
    "created",
    "antony",
    "gcloud",
    "ace",
    "hit",
    "next",
    "going",
    "enter",
    "password",
    "going",
    "ask",
    "verification",
    "want",
    "save",
    "password",
    "going",
    "allow",
    "google",
    "cloud",
    "sdk",
    "access",
    "google",
    "account",
    "authenticated",
    "moving",
    "back",
    "console",
    "see",
    "currently",
    "logged",
    "asking",
    "pick",
    "cloud",
    "project",
    "use",
    "since",
    "one",
    "project",
    "google",
    "cloud",
    "account",
    "subtle",
    "poet",
    "going",
    "choose",
    "one",
    "since",
    "compute",
    "engine",
    "api",
    "enabled",
    "able",
    "configure",
    "default",
    "compute",
    "region",
    "zone",
    "going",
    "hit",
    "yes",
    "configure",
    "see",
    "74",
    "different",
    "options",
    "choose",
    "scroll",
    "little",
    "bit",
    "able",
    "find",
    "zone",
    "looking",
    "course",
    "going",
    "using",
    "us",
    "central",
    "one",
    "dash",
    "number",
    "eight",
    "going",
    "scroll",
    "back",
    "type",
    "eight",
    "master",
    "configuration",
    "configured",
    "antony",
    "g",
    "cloud",
    "ace",
    "account",
    "using",
    "us",
    "central",
    "1a",
    "compute",
    "engine",
    "zone",
    "touching",
    "back",
    "authorization",
    "want",
    "set",
    "whole",
    "configuration",
    "simply",
    "type",
    "gcloud",
    "auth",
    "login",
    "allow",
    "authorize",
    "user",
    "account",
    "gcloud",
    "init",
    "would",
    "authorize",
    "access",
    "perform",
    "cloud",
    "sdk",
    "setup",
    "steps",
    "gcloud",
    "auth",
    "login",
    "authorize",
    "access",
    "mentioned",
    "previous",
    "lesson",
    "use",
    "service",
    "account",
    "authorization",
    "cloud",
    "sdk",
    "tools",
    "would",
    "great",
    "compute",
    "instance",
    "application",
    "would",
    "need",
    "service",
    "account",
    "key",
    "file",
    "order",
    "authorize",
    "moving",
    "back",
    "user",
    "accounts",
    "running",
    "cloud",
    "sdk",
    "one",
    "active",
    "account",
    "given",
    "time",
    "check",
    "active",
    "account",
    "type",
    "command",
    "gcloud",
    "auth",
    "list",
    "give",
    "list",
    "accounts",
    "authorized",
    "whenever",
    "run",
    "gcloud",
    "init",
    "use",
    "account",
    "active",
    "account",
    "see",
    "antony",
    "gcloud",
    "ace",
    "star",
    "beside",
    "marked",
    "active",
    "account",
    "essence",
    "account",
    "star",
    "beside",
    "active",
    "account",
    "looking",
    "change",
    "active",
    "account",
    "back",
    "tony",
    "bowtie",
    "ace",
    "order",
    "command",
    "conveniently",
    "shown",
    "going",
    "go",
    "ahead",
    "run",
    "account",
    "would",
    "user",
    "shown",
    "gcloud",
    "auth",
    "list",
    "see",
    "active",
    "account",
    "back",
    "tony",
    "bowtie",
    "bowtieace",
    "wanted",
    "switch",
    "account",
    "per",
    "command",
    "basis",
    "always",
    "using",
    "flag",
    "dash",
    "dash",
    "account",
    "command",
    "put",
    "user",
    "account",
    "want",
    "use",
    "let",
    "say",
    "wanted",
    "revoke",
    "credentials",
    "account",
    "need",
    "anymore",
    "simply",
    "use",
    "command",
    "gcloud",
    "auth",
    "revoke",
    "followed",
    "username",
    "revoke",
    "credentials",
    "account",
    "would",
    "remove",
    "credentials",
    "access",
    "tokens",
    "specific",
    "account",
    "choose",
    "currently",
    "computer",
    "looking",
    "specific",
    "account",
    "always",
    "use",
    "gcloud",
    "info",
    "command",
    "give",
    "us",
    "path",
    "user",
    "config",
    "directory",
    "directory",
    "holds",
    "encrypted",
    "credentials",
    "access",
    "tokens",
    "alongside",
    "active",
    "configurations",
    "configurations",
    "well",
    "see",
    "running",
    "gcloud",
    "info",
    "command",
    "also",
    "give",
    "information",
    "everything",
    "account",
    "project",
    "current",
    "properties",
    "logs",
    "found",
    "moving",
    "configurations",
    "configuration",
    "named",
    "set",
    "gcloud",
    "cli",
    "properties",
    "works",
    "kind",
    "like",
    "profile",
    "earlier",
    "demonstrated",
    "set",
    "another",
    "configuration",
    "gcloud",
    "init",
    "run",
    "gcloud",
    "config",
    "list",
    "command",
    "would",
    "give",
    "information",
    "active",
    "configuration",
    "see",
    "user",
    "changed",
    "configuration",
    "stayed",
    "seen",
    "previously",
    "different",
    "lesson",
    "tony",
    "bow",
    "tie",
    "ace",
    "access",
    "project",
    "subtle",
    "poet",
    "project",
    "belongs",
    "antony",
    "g",
    "cloud",
    "ace",
    "configuration",
    "set",
    "account",
    "tony",
    "bowtie",
    "ace",
    "access",
    "subtle",
    "poet",
    "project",
    "could",
    "use",
    "configuration",
    "want",
    "switch",
    "back",
    "configuration",
    "would",
    "type",
    "command",
    "gcloud",
    "config",
    "configurations",
    "activate",
    "configuration",
    "set",
    "tony",
    "bowtie",
    "ace",
    "default",
    "configuration",
    "activated",
    "run",
    "gcloud",
    "config",
    "list",
    "see",
    "configuration",
    "back",
    "default",
    "setup",
    "initialization",
    "process",
    "tony",
    "bowtie",
    "ace",
    "wanted",
    "create",
    "multiple",
    "configurations",
    "user",
    "account",
    "simply",
    "type",
    "command",
    "gcloud",
    "config",
    "configurations",
    "create",
    "wanted",
    "view",
    "configuration",
    "properties",
    "always",
    "type",
    "command",
    "gcloud",
    "config",
    "configurations",
    "describe",
    "see",
    "describe",
    "needed",
    "configuration",
    "name",
    "complete",
    "command",
    "going",
    "given",
    "properties",
    "configuration",
    "another",
    "thing",
    "wanted",
    "share",
    "comes",
    "properties",
    "change",
    "project",
    "compute",
    "region",
    "zone",
    "simply",
    "typing",
    "command",
    "gcloud",
    "config",
    "set",
    "wanted",
    "change",
    "project",
    "simply",
    "type",
    "project",
    "project",
    "name",
    "compute",
    "instance",
    "simply",
    "type",
    "compute",
    "forward",
    "slash",
    "zone",
    "specific",
    "zone",
    "note",
    "properties",
    "core",
    "property",
    "section",
    "ones",
    "set",
    "well",
    "setting",
    "properties",
    "applies",
    "active",
    "configuration",
    "want",
    "change",
    "configuration",
    "one",
    "active",
    "switch",
    "run",
    "gcloud",
    "config",
    "set",
    "command",
    "moving",
    "wanted",
    "touch",
    "components",
    "installable",
    "parts",
    "sdk",
    "install",
    "sdk",
    "components",
    "gcloud",
    "bq",
    "gsutil",
    "core",
    "libraries",
    "installed",
    "default",
    "probably",
    "saw",
    "list",
    "components",
    "ran",
    "gcloud",
    "init",
    "command",
    "see",
    "components",
    "simply",
    "type",
    "gcloud",
    "components",
    "list",
    "command",
    "scroll",
    "able",
    "see",
    "components",
    "available",
    "install",
    "convenience",
    "wanted",
    "install",
    "cubectl",
    "component",
    "type",
    "command",
    "gcloud",
    "components",
    "install",
    "cubectl",
    "prompt",
    "come",
    "asking",
    "want",
    "continue",
    "want",
    "say",
    "yes",
    "go",
    "process",
    "installing",
    "components",
    "verify",
    "run",
    "command",
    "gcloud",
    "components",
    "list",
    "see",
    "cube",
    "ctl",
    "component",
    "installed",
    "wanted",
    "remove",
    "component",
    "simply",
    "type",
    "gcloud",
    "components",
    "remove",
    "component",
    "want",
    "remove",
    "cubectl",
    "going",
    "prompted",
    "want",
    "going",
    "say",
    "yes",
    "going",
    "go",
    "stages",
    "removing",
    "component",
    "successfully",
    "uninstalled",
    "working",
    "resource",
    "need",
    "component",
    "simply",
    "install",
    "uninstall",
    "using",
    "gcloud",
    "components",
    "command",
    "one",
    "last",
    "thing",
    "components",
    "move",
    "update",
    "components",
    "make",
    "sure",
    "latest",
    "version",
    "order",
    "update",
    "installed",
    "components",
    "would",
    "simply",
    "run",
    "command",
    "gcloud",
    "components",
    "update",
    "go",
    "ahead",
    "finish",
    "demonstration",
    "wanted",
    "touch",
    "gcloud",
    "interactive",
    "shell",
    "gcloud",
    "interactive",
    "shell",
    "provides",
    "richer",
    "shell",
    "experience",
    "simplifying",
    "commands",
    "documentation",
    "discovery",
    "type",
    "autocompletion",
    "help",
    "text",
    "snippets",
    "produces",
    "suggestions",
    "autocompletion",
    "gcloud",
    "bq",
    "gsutil",
    "cubectl",
    "command",
    "line",
    "tools",
    "well",
    "command",
    "man",
    "page",
    "sub",
    "commands",
    "flags",
    "completed",
    "along",
    "online",
    "help",
    "type",
    "command",
    "part",
    "beta",
    "component",
    "need",
    "install",
    "going",
    "run",
    "command",
    "gcloud",
    "components",
    "install",
    "beta",
    "want",
    "hit",
    "yes",
    "continue",
    "go",
    "ahead",
    "kick",
    "installation",
    "gcloud",
    "beta",
    "commands",
    "installed",
    "going",
    "simply",
    "clear",
    "screen",
    "order",
    "run",
    "gcloud",
    "interactive",
    "shell",
    "need",
    "run",
    "command",
    "gcloud",
    "beta",
    "interactive",
    "every",
    "command",
    "type",
    "get",
    "auto",
    "suggestions",
    "help",
    "commands",
    "see",
    "glory",
    "going",
    "start",
    "typing",
    "see",
    "giving",
    "option",
    "g",
    "cloud",
    "gsutil",
    "use",
    "arrow",
    "choose",
    "either",
    "one",
    "also",
    "show",
    "different",
    "flags",
    "use",
    "specific",
    "commands",
    "structure",
    "going",
    "run",
    "gsutil",
    "version",
    "minus",
    "l",
    "see",
    "giving",
    "information",
    "command",
    "going",
    "hit",
    "enter",
    "see",
    "gsutil",
    "version",
    "along",
    "version",
    "number",
    "also",
    "given",
    "specific",
    "information",
    "regards",
    "gsutil",
    "version",
    "used",
    "absolutely",
    "command",
    "used",
    "google",
    "cloud",
    "platform",
    "going",
    "go",
    "ahead",
    "running",
    "different",
    "command",
    "going",
    "first",
    "clear",
    "screen",
    "going",
    "type",
    "gcloud",
    "compute",
    "instances",
    "see",
    "snippet",
    "bottom",
    "screen",
    "showing",
    "command",
    "structured",
    "also",
    "url",
    "documentation",
    "continuing",
    "gcloud",
    "compute",
    "instances",
    "going",
    "list",
    "going",
    "filter",
    "using",
    "flag",
    "dash",
    "dash",
    "filter",
    "going",
    "filter",
    "us",
    "east",
    "one",
    "zone",
    "going",
    "hit",
    "enter",
    "expected",
    "instances",
    "us",
    "east",
    "1a",
    "experienced",
    "great",
    "tool",
    "highly",
    "recommend",
    "use",
    "whenever",
    "know",
    "lot",
    "take",
    "lot",
    "commands",
    "show",
    "exam",
    "getting",
    "comfortable",
    "command",
    "line",
    "sdk",
    "help",
    "path",
    "becoming",
    "cloud",
    "engineer",
    "well",
    "help",
    "get",
    "really",
    "comfortable",
    "command",
    "line",
    "know",
    "running",
    "commands",
    "command",
    "line",
    "prefer",
    "using",
    "console",
    "demo",
    "managing",
    "cloud",
    "sdk",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "demonstration",
    "going",
    "talking",
    "always",
    "available",
    "shell",
    "called",
    "cloud",
    "shell",
    "cloud",
    "shell",
    "virtual",
    "machine",
    "loaded",
    "development",
    "tools",
    "offers",
    "persistent",
    "five",
    "gigabyte",
    "home",
    "directory",
    "runs",
    "google",
    "cloud",
    "cloud",
    "shell",
    "provides",
    "command",
    "line",
    "access",
    "google",
    "cloud",
    "resources",
    "within",
    "console",
    "cloud",
    "shell",
    "also",
    "comes",
    "code",
    "editor",
    "diving",
    "allows",
    "browse",
    "file",
    "directories",
    "well",
    "view",
    "edit",
    "files",
    "still",
    "accessing",
    "cloud",
    "shell",
    "code",
    "editor",
    "available",
    "default",
    "every",
    "cloud",
    "shell",
    "instance",
    "based",
    "open",
    "source",
    "editor",
    "thea",
    "cloud",
    "shell",
    "available",
    "anywhere",
    "console",
    "merely",
    "clicking",
    "icon",
    "showed",
    "picture",
    "positioned",
    "top",
    "right",
    "hand",
    "corner",
    "console",
    "blue",
    "toolbar",
    "let",
    "get",
    "started",
    "cloud",
    "shell",
    "getting",
    "hands",
    "dirty",
    "jumping",
    "right",
    "back",
    "console",
    "logged",
    "tony",
    "bowtie",
    "ace",
    "see",
    "right",
    "hand",
    "corner",
    "mentioned",
    "earlier",
    "find",
    "cloud",
    "shell",
    "logo",
    "open",
    "simply",
    "click",
    "activate",
    "cloud",
    "shell",
    "bottom",
    "first",
    "time",
    "using",
    "cloud",
    "shell",
    "get",
    "prompt",
    "quickly",
    "explaining",
    "overview",
    "cloud",
    "shell",
    "going",
    "simply",
    "hit",
    "continue",
    "going",
    "make",
    "terminal",
    "little",
    "bit",
    "bigger",
    "dragging",
    "line",
    "middle",
    "screen",
    "start",
    "cloud",
    "shell",
    "provisions",
    "e2",
    "small",
    "google",
    "compute",
    "engine",
    "instance",
    "running",
    "linux",
    "operating",
    "system",
    "ephemeral",
    "vm",
    "environment",
    "work",
    "docker",
    "container",
    "running",
    "vm",
    "cloud",
    "shell",
    "instances",
    "provisioned",
    "per",
    "user",
    "per",
    "session",
    "basis",
    "instance",
    "persists",
    "cloud",
    "shell",
    "session",
    "active",
    "hour",
    "inactivity",
    "session",
    "terminates",
    "vm",
    "discarded",
    "also",
    "customize",
    "environment",
    "automatically",
    "boot",
    "time",
    "allow",
    "preferred",
    "tools",
    "cloud",
    "shell",
    "boots",
    "cloud",
    "shell",
    "instance",
    "provision",
    "provisioned",
    "5",
    "gigabytes",
    "free",
    "persistent",
    "disk",
    "storage",
    "mounted",
    "home",
    "directory",
    "virtual",
    "machine",
    "instance",
    "check",
    "disk",
    "storage",
    "simply",
    "typing",
    "command",
    "df",
    "minus",
    "h",
    "shows",
    "dev",
    "disk",
    "id",
    "google",
    "home",
    "part",
    "one",
    "shows",
    "size",
    "gigabytes",
    "would",
    "persistent",
    "disk",
    "storage",
    "mounted",
    "home",
    "directory",
    "noticed",
    "shows",
    "logged",
    "tony",
    "bowtie",
    "ace",
    "cloud",
    "shell",
    "project",
    "id",
    "set",
    "project",
    "tony",
    "great",
    "thing",
    "cloud",
    "shell",
    "automatically",
    "authenticated",
    "google",
    "account",
    "logged",
    "see",
    "logged",
    "tony",
    "bowtie",
    "ace",
    "picture",
    "like",
    "running",
    "gcloud",
    "auth",
    "login",
    "specifying",
    "google",
    "account",
    "without",
    "actually",
    "cloud",
    "shell",
    "started",
    "active",
    "project",
    "console",
    "propagated",
    "gcloud",
    "configuration",
    "inside",
    "cloud",
    "shell",
    "see",
    "project",
    "set",
    "project",
    "tony",
    "wanted",
    "change",
    "different",
    "project",
    "could",
    "simply",
    "use",
    "command",
    "stated",
    "gcloud",
    "config",
    "set",
    "project",
    "along",
    "project",
    "id",
    "change",
    "different",
    "project",
    "behind",
    "scenes",
    "cloud",
    "shell",
    "globally",
    "distributed",
    "across",
    "multiple",
    "regions",
    "first",
    "connect",
    "cloud",
    "shell",
    "automatically",
    "assigned",
    "closest",
    "available",
    "region",
    "thus",
    "avoiding",
    "unnecessary",
    "latency",
    "option",
    "choose",
    "region",
    "cloud",
    "shell",
    "optimizing",
    "migrate",
    "closer",
    "region",
    "whenever",
    "ever",
    "curious",
    "cloud",
    "shell",
    "session",
    "currently",
    "active",
    "simply",
    "type",
    "command",
    "curl",
    "metadata",
    "slash",
    "compute",
    "metadata",
    "slash",
    "version",
    "one",
    "slash",
    "instance",
    "slash",
    "zone",
    "give",
    "zone",
    "instance",
    "located",
    "shown",
    "us",
    "east",
    "1b",
    "probably",
    "seeing",
    "every",
    "time",
    "highlight",
    "something",
    "picture",
    "scissors",
    "coming",
    "cloud",
    "shell",
    "automated",
    "available",
    "tools",
    "built",
    "one",
    "available",
    "tools",
    "whenever",
    "highlight",
    "something",
    "automatically",
    "copy",
    "clipboard",
    "cloud",
    "shell",
    "also",
    "bunch",
    "powerful",
    "tools",
    "come",
    "cloud",
    "sdk",
    "bash",
    "vim",
    "helm",
    "git",
    "docker",
    "well",
    "cloud",
    "shell",
    "support",
    "lot",
    "major",
    "different",
    "programming",
    "languages",
    "like",
    "java",
    "go",
    "python",
    "ruby",
    "net",
    "core",
    "run",
    "windows",
    "looking",
    "available",
    "tool",
    "actually",
    "customize",
    "environment",
    "instance",
    "boots",
    "automatically",
    "run",
    "script",
    "install",
    "tool",
    "choice",
    "script",
    "runs",
    "root",
    "install",
    "package",
    "please",
    "order",
    "environment",
    "customization",
    "work",
    "needs",
    "file",
    "labeled",
    "dot",
    "customize",
    "underscore",
    "environment",
    "ls",
    "see",
    "readme",
    "dash",
    "cloud",
    "shell",
    "text",
    "file",
    "ls",
    "space",
    "minus",
    "al",
    "show",
    "hidden",
    "files",
    "well",
    "see",
    "dot",
    "customize",
    "underscore",
    "environment",
    "file",
    "exist",
    "need",
    "create",
    "example",
    "want",
    "terraform",
    "installed",
    "available",
    "tool",
    "instance",
    "boots",
    "create",
    "file",
    "going",
    "using",
    "touch",
    "command",
    "name",
    "file",
    "dot",
    "customize",
    "underscore",
    "environment",
    "hit",
    "enter",
    "clear",
    "screen",
    "another",
    "ls",
    "space",
    "minus",
    "al",
    "see",
    "dot",
    "customize",
    "underscore",
    "environment",
    "file",
    "created",
    "going",
    "need",
    "script",
    "install",
    "terraform",
    "means",
    "would",
    "edit",
    "another",
    "great",
    "feature",
    "cloud",
    "shell",
    "comes",
    "code",
    "editor",
    "one",
    "two",
    "ways",
    "either",
    "come",
    "click",
    "open",
    "editor",
    "button",
    "open",
    "new",
    "tab",
    "simply",
    "use",
    "edit",
    "command",
    "file",
    "name",
    "going",
    "edit",
    "dot",
    "customize",
    "underscore",
    "environment",
    "going",
    "hit",
    "enter",
    "see",
    "got",
    "prompt",
    "saying",
    "unable",
    "load",
    "code",
    "editor",
    "using",
    "code",
    "editor",
    "need",
    "cookies",
    "enabled",
    "browser",
    "using",
    "private",
    "browser",
    "session",
    "cookies",
    "disabled",
    "cloud",
    "shell",
    "environment",
    "persists",
    "going",
    "open",
    "regular",
    "browser",
    "window",
    "going",
    "continue",
    "left",
    "back",
    "new",
    "browser",
    "window",
    "logged",
    "tony",
    "bowtie",
    "ace",
    "show",
    "persistence",
    "happens",
    "cloud",
    "shell",
    "going",
    "run",
    "command",
    "ls",
    "space",
    "minus",
    "al",
    "see",
    "customize",
    "environment",
    "still",
    "wanted",
    "install",
    "terraform",
    "extra",
    "tool",
    "environment",
    "going",
    "open",
    "editor",
    "typing",
    "edit",
    "dot",
    "customize",
    "underscore",
    "environment",
    "going",
    "hit",
    "enter",
    "editor",
    "popped",
    "see",
    "built",
    "eclipse",
    "thea",
    "open",
    "source",
    "code",
    "editor",
    "download",
    "eclipse",
    "editor",
    "built",
    "menu",
    "left",
    "make",
    "little",
    "bit",
    "bigger",
    "viewable",
    "file",
    "persistent",
    "disk",
    "readme",
    "cloud",
    "shell",
    "dot",
    "text",
    "file",
    "able",
    "see",
    "dot",
    "customize",
    "underscore",
    "environment",
    "order",
    "open",
    "edit",
    "going",
    "go",
    "menu",
    "top",
    "editor",
    "click",
    "file",
    "open",
    "able",
    "select",
    "file",
    "need",
    "going",
    "select",
    "customize",
    "environment",
    "click",
    "open",
    "going",
    "paste",
    "script",
    "install",
    "terraform",
    "going",
    "paste",
    "script",
    "clipboard",
    "including",
    "script",
    "github",
    "repo",
    "use",
    "terraform",
    "going",
    "move",
    "menu",
    "left",
    "click",
    "file",
    "hit",
    "save",
    "order",
    "allow",
    "work",
    "customize",
    "environment",
    "needs",
    "loaded",
    "cloud",
    "shell",
    "going",
    "restart",
    "order",
    "accomplish",
    "going",
    "move",
    "menu",
    "right",
    "going",
    "click",
    "icon",
    "three",
    "dots",
    "click",
    "restart",
    "presented",
    "prompt",
    "saying",
    "immediately",
    "terminate",
    "session",
    "new",
    "vm",
    "provisioned",
    "also",
    "presented",
    "optional",
    "response",
    "google",
    "telling",
    "restarting",
    "vm",
    "merely",
    "statistical",
    "purposes",
    "going",
    "click",
    "restart",
    "going",
    "wait",
    "till",
    "new",
    "cloud",
    "shell",
    "provisioned",
    "new",
    "cloud",
    "shell",
    "provisioned",
    "running",
    "want",
    "double",
    "check",
    "see",
    "terraform",
    "installed",
    "going",
    "go",
    "open",
    "terminal",
    "button",
    "right",
    "hand",
    "side",
    "toolbar",
    "going",
    "move",
    "back",
    "terminal",
    "going",
    "simply",
    "run",
    "command",
    "terraform",
    "dash",
    "dash",
    "version",
    "looks",
    "like",
    "terraform",
    "installed",
    "see",
    "running",
    "says",
    "terraform",
    "version",
    "date",
    "latest",
    "version",
    "dot",
    "really",
    "want",
    "date",
    "terraform",
    "want",
    "able",
    "go",
    "customize",
    "environment",
    "file",
    "edit",
    "version",
    "terraform",
    "cloud",
    "shell",
    "initiated",
    "installed",
    "going",
    "simply",
    "type",
    "command",
    "edit",
    "dot",
    "customize",
    "underscore",
    "environment",
    "back",
    "editor",
    "going",
    "change",
    "terraform",
    "version",
    "dot",
    "12",
    "dot",
    "13",
    "go",
    "menu",
    "click",
    "file",
    "save",
    "going",
    "restart",
    "machine",
    "come",
    "back",
    "fully",
    "provisioned",
    "back",
    "machine",
    "provisioned",
    "going",
    "go",
    "back",
    "terminal",
    "clicking",
    "open",
    "terminal",
    "button",
    "going",
    "type",
    "command",
    "terraform",
    "dash",
    "dash",
    "version",
    "see",
    "version",
    "dot",
    "13",
    "going",
    "run",
    "simple",
    "terraform",
    "command",
    "see",
    "working",
    "see",
    "successful",
    "running",
    "terraform",
    "cloud",
    "shell",
    "customizing",
    "environment",
    "exam",
    "amazing",
    "feature",
    "wanted",
    "highlight",
    "real",
    "world",
    "example",
    "like",
    "terraform",
    "case",
    "away",
    "computer",
    "logged",
    "browser",
    "need",
    "special",
    "tools",
    "use",
    "cloud",
    "shell",
    "best",
    "way",
    "mentioned",
    "cloud",
    "sdk",
    "everything",
    "showed",
    "last",
    "lesson",
    "regards",
    "cloud",
    "sdk",
    "done",
    "cloud",
    "shell",
    "well",
    "run",
    "command",
    "gcloud",
    "beta",
    "interactive",
    "able",
    "bring",
    "interactive",
    "cloud",
    "shell",
    "able",
    "run",
    "commands",
    "go",
    "ahead",
    "run",
    "command",
    "gcloud",
    "components",
    "list",
    "able",
    "see",
    "components",
    "installed",
    "see",
    "cloud",
    "shell",
    "components",
    "installed",
    "installed",
    "default",
    "installation",
    "sdk",
    "also",
    "run",
    "gcloud",
    "config",
    "list",
    "command",
    "see",
    "properties",
    "active",
    "configuration",
    "goes",
    "show",
    "sdk",
    "installation",
    "cloud",
    "shell",
    "capable",
    "one",
    "installed",
    "computer",
    "difference",
    "sdk",
    "along",
    "tools",
    "come",
    "installed",
    "cloud",
    "shell",
    "updated",
    "every",
    "week",
    "always",
    "depend",
    "date",
    "moving",
    "features",
    "cloud",
    "shell",
    "wanted",
    "point",
    "obvious",
    "ones",
    "cloud",
    "shell",
    "toolbar",
    "right",
    "beside",
    "open",
    "terminal",
    "open",
    "brand",
    "new",
    "tabs",
    "opening",
    "different",
    "projects",
    "even",
    "project",
    "different",
    "terminal",
    "moving",
    "right",
    "hand",
    "menu",
    "cloud",
    "shell",
    "keyboard",
    "icon",
    "send",
    "key",
    "combinations",
    "would",
    "normally",
    "access",
    "moving",
    "gear",
    "icon",
    "able",
    "change",
    "preferences",
    "looking",
    "first",
    "item",
    "list",
    "comes",
    "color",
    "themes",
    "go",
    "dark",
    "theme",
    "light",
    "theme",
    "prefer",
    "different",
    "color",
    "case",
    "prefer",
    "dark",
    "theme",
    "well",
    "options",
    "changing",
    "text",
    "size",
    "go",
    "largest",
    "think",
    "keep",
    "things",
    "back",
    "medium",
    "well",
    "different",
    "fonts",
    "copy",
    "settings",
    "showed",
    "earlier",
    "well",
    "keyboard",
    "preferences",
    "also",
    "option",
    "showing",
    "scroll",
    "bar",
    "moving",
    "icon",
    "right",
    "beside",
    "gear",
    "web",
    "preview",
    "button",
    "web",
    "preview",
    "button",
    "designed",
    "run",
    "web",
    "application",
    "listens",
    "http",
    "requests",
    "cloud",
    "shell",
    "able",
    "view",
    "new",
    "web",
    "browser",
    "tab",
    "running",
    "web",
    "applications",
    "web",
    "preview",
    "also",
    "supports",
    "applications",
    "run",
    "app",
    "engine",
    "mind",
    "ports",
    "available",
    "secure",
    "cloud",
    "shell",
    "proxy",
    "service",
    "restricts",
    "access",
    "https",
    "user",
    "account",
    "demonstrate",
    "feature",
    "going",
    "run",
    "simple",
    "http",
    "server",
    "running",
    "hello",
    "world",
    "page",
    "first",
    "going",
    "clear",
    "screen",
    "going",
    "exit",
    "interactive",
    "shell",
    "going",
    "paste",
    "clipboard",
    "simple",
    "script",
    "run",
    "simple",
    "http",
    "server",
    "see",
    "running",
    "port",
    "8080",
    "able",
    "click",
    "web",
    "preview",
    "button",
    "able",
    "preview",
    "port",
    "8080",
    "new",
    "web",
    "browser",
    "tab",
    "open",
    "see",
    "hello",
    "world",
    "page",
    "simple",
    "example",
    "sure",
    "many",
    "find",
    "great",
    "use",
    "going",
    "stop",
    "http",
    "server",
    "hitting",
    "ctrl",
    "c",
    "quick",
    "note",
    "web",
    "preview",
    "also",
    "run",
    "different",
    "port",
    "anywhere",
    "port",
    "2000",
    "way",
    "65",
    "moving",
    "rest",
    "features",
    "hitting",
    "button",
    "three",
    "dots",
    "starting",
    "top",
    "covered",
    "restart",
    "earlier",
    "restart",
    "cloud",
    "shell",
    "able",
    "upload",
    "download",
    "file",
    "within",
    "cloud",
    "shell",
    "demands",
    "needed",
    "well",
    "misconfigured",
    "configuration",
    "boot",
    "safe",
    "mode",
    "fix",
    "issue",
    "instead",
    "start",
    "scratch",
    "moving",
    "boost",
    "cloud",
    "shell",
    "also",
    "known",
    "boost",
    "mode",
    "feature",
    "increases",
    "cloud",
    "shell",
    "vm",
    "default",
    "e2",
    "small",
    "e2",
    "medium",
    "essence",
    "memory",
    "bump",
    "2",
    "gigabytes",
    "4",
    "gigabytes",
    "activated",
    "sessions",
    "boosted",
    "next",
    "24",
    "hours",
    "quick",
    "note",
    "enabling",
    "boost",
    "mode",
    "restarts",
    "cloud",
    "shell",
    "immediately",
    "terminates",
    "session",
    "worry",
    "data",
    "home",
    "directory",
    "persist",
    "processes",
    "running",
    "lost",
    "comes",
    "usage",
    "quota",
    "cloud",
    "shell",
    "50",
    "hour",
    "weekly",
    "usage",
    "limit",
    "reach",
    "usage",
    "limit",
    "need",
    "wait",
    "quota",
    "reset",
    "use",
    "cloud",
    "shell",
    "always",
    "good",
    "keep",
    "eyes",
    "case",
    "heavy",
    "user",
    "cloud",
    "shell",
    "moving",
    "back",
    "menu",
    "usage",
    "statistics",
    "collects",
    "statistics",
    "commands",
    "come",
    "vm",
    "turn",
    "well",
    "help",
    "cloud",
    "shell",
    "available",
    "well",
    "wanted",
    "give",
    "feedback",
    "google",
    "cloud",
    "team",
    "regards",
    "cloud",
    "shell",
    "place",
    "one",
    "last",
    "thing",
    "cloud",
    "shell",
    "end",
    "demo",
    "access",
    "cloud",
    "shell",
    "120",
    "days",
    "home",
    "disk",
    "deleted",
    "worry",
    "receive",
    "email",
    "notification",
    "deletion",
    "log",
    "start",
    "session",
    "prevent",
    "removed",
    "moving",
    "ahead",
    "course",
    "using",
    "cloud",
    "shell",
    "quite",
    "bit",
    "feel",
    "free",
    "use",
    "either",
    "cloud",
    "shell",
    "cloud",
    "sdk",
    "installed",
    "computer",
    "feel",
    "free",
    "follow",
    "along",
    "cloud",
    "shell",
    "within",
    "google",
    "cloud",
    "environment",
    "following",
    "along",
    "please",
    "make",
    "sure",
    "keep",
    "eye",
    "quota",
    "hope",
    "demonstration",
    "given",
    "really",
    "good",
    "insight",
    "cloud",
    "shell",
    "limitations",
    "pretty",
    "much",
    "wanted",
    "cover",
    "demonstration",
    "cloud",
    "shell",
    "mark",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "demonstration",
    "going",
    "go",
    "limits",
    "quotas",
    "affect",
    "cloud",
    "usage",
    "within",
    "google",
    "cloud",
    "going",
    "quickly",
    "go",
    "theory",
    "followed",
    "demonstration",
    "find",
    "quotas",
    "edit",
    "accordingly",
    "google",
    "cloud",
    "enforces",
    "quotas",
    "resource",
    "usage",
    "project",
    "owners",
    "setting",
    "hard",
    "limit",
    "much",
    "particular",
    "google",
    "cloud",
    "resource",
    "project",
    "use",
    "two",
    "types",
    "resource",
    "usage",
    "google",
    "limits",
    "quota",
    "first",
    "one",
    "rate",
    "quota",
    "api",
    "requests",
    "per",
    "day",
    "quota",
    "resets",
    "specified",
    "time",
    "minute",
    "day",
    "second",
    "one",
    "allocation",
    "quota",
    "example",
    "number",
    "virtual",
    "machines",
    "load",
    "balancers",
    "used",
    "project",
    "quota",
    "reset",
    "time",
    "must",
    "explicitly",
    "released",
    "longer",
    "want",
    "use",
    "resource",
    "example",
    "deleting",
    "gke",
    "cluster",
    "quotas",
    "enforced",
    "variety",
    "reasons",
    "example",
    "protect",
    "google",
    "cloud",
    "users",
    "preventing",
    "unforeseen",
    "usage",
    "spikes",
    "quotas",
    "also",
    "help",
    "resource",
    "management",
    "set",
    "limits",
    "service",
    "usage",
    "within",
    "quota",
    "developing",
    "testing",
    "applications",
    "quota",
    "limit",
    "expressed",
    "terms",
    "particular",
    "countable",
    "resource",
    "requests",
    "per",
    "day",
    "api",
    "number",
    "load",
    "balancers",
    "used",
    "application",
    "projects",
    "quotas",
    "services",
    "using",
    "free",
    "trial",
    "account",
    "may",
    "limited",
    "quota",
    "compared",
    "higher",
    "quota",
    "regular",
    "account",
    "well",
    "use",
    "google",
    "cloud",
    "time",
    "quotas",
    "may",
    "increase",
    "accordingly",
    "also",
    "request",
    "quota",
    "need",
    "set",
    "monitoring",
    "alerts",
    "cloud",
    "monitoring",
    "warn",
    "unusual",
    "quota",
    "usage",
    "behavior",
    "actually",
    "running",
    "quota",
    "addition",
    "viewing",
    "basic",
    "quota",
    "information",
    "console",
    "google",
    "cloud",
    "lets",
    "monitor",
    "quota",
    "usage",
    "limits",
    "errors",
    "greater",
    "depth",
    "using",
    "cloud",
    "monitoring",
    "api",
    "ui",
    "along",
    "quota",
    "metrics",
    "appearing",
    "metrics",
    "explorer",
    "use",
    "metrics",
    "create",
    "custom",
    "dashboards",
    "alerts",
    "letting",
    "monitor",
    "quota",
    "usage",
    "time",
    "receive",
    "alerts",
    "example",
    "near",
    "quota",
    "limit",
    "services",
    "support",
    "quota",
    "metrics",
    "displayed",
    "popular",
    "supported",
    "services",
    "include",
    "compute",
    "engine",
    "data",
    "flow",
    "cloud",
    "spanner",
    "cloud",
    "monitoring",
    "cloud",
    "logging",
    "common",
    "services",
    "supported",
    "include",
    "app",
    "engine",
    "cloud",
    "storage",
    "cloud",
    "sql",
    "note",
    "aware",
    "quota",
    "limits",
    "updated",
    "day",
    "hence",
    "new",
    "limits",
    "may",
    "take",
    "24",
    "hours",
    "reflected",
    "google",
    "cloud",
    "console",
    "project",
    "exceeds",
    "particular",
    "quota",
    "using",
    "service",
    "platform",
    "return",
    "error",
    "general",
    "google",
    "cloud",
    "return",
    "http",
    "429",
    "error",
    "code",
    "using",
    "http",
    "rest",
    "access",
    "service",
    "resource",
    "exhausted",
    "using",
    "grpc",
    "using",
    "cloud",
    "monitoring",
    "use",
    "identify",
    "quota",
    "associated",
    "error",
    "create",
    "custom",
    "alerts",
    "upon",
    "getting",
    "quota",
    "error",
    "going",
    "greater",
    "depth",
    "regards",
    "monitoring",
    "later",
    "course",
    "two",
    "ways",
    "view",
    "current",
    "quota",
    "limits",
    "google",
    "cloud",
    "console",
    "first",
    "using",
    "quotas",
    "page",
    "gives",
    "list",
    "project",
    "quota",
    "usage",
    "limits",
    "second",
    "using",
    "api",
    "dashboard",
    "gives",
    "quota",
    "information",
    "particular",
    "api",
    "including",
    "resource",
    "usage",
    "time",
    "quota",
    "limits",
    "also",
    "accessible",
    "programmatically",
    "service",
    "usage",
    "api",
    "let",
    "head",
    "console",
    "provide",
    "demonstration",
    "look",
    "quotas",
    "increase",
    "need",
    "back",
    "console",
    "explained",
    "two",
    "main",
    "ways",
    "view",
    "current",
    "quota",
    "limits",
    "console",
    "first",
    "one",
    "using",
    "quotas",
    "page",
    "order",
    "get",
    "quotas",
    "page",
    "need",
    "go",
    "iam",
    "going",
    "going",
    "navigation",
    "menu",
    "top",
    "left",
    "hand",
    "corner",
    "going",
    "go",
    "admin",
    "quotas",
    "shown",
    "quotas",
    "current",
    "apis",
    "enabled",
    "see",
    "shows",
    "service",
    "limit",
    "name",
    "quota",
    "status",
    "details",
    "panel",
    "right",
    "hand",
    "side",
    "shows",
    "little",
    "bit",
    "information",
    "regards",
    "service",
    "quota",
    "let",
    "say",
    "wanted",
    "increase",
    "quota",
    "compute",
    "engine",
    "api",
    "within",
    "networks",
    "going",
    "select",
    "service",
    "right",
    "hand",
    "panel",
    "going",
    "tick",
    "box",
    "says",
    "global",
    "going",
    "go",
    "back",
    "top",
    "left",
    "click",
    "edit",
    "quotas",
    "button",
    "panel",
    "pop",
    "prompted",
    "enter",
    "new",
    "quota",
    "limit",
    "along",
    "description",
    "explaining",
    "google",
    "need",
    "quota",
    "limit",
    "increase",
    "completed",
    "request",
    "click",
    "done",
    "submit",
    "request",
    "like",
    "said",
    "request",
    "submitted",
    "go",
    "somebody",
    "google",
    "evaluate",
    "requests",
    "approval",
    "worry",
    "quota",
    "limit",
    "increases",
    "usually",
    "approved",
    "within",
    "two",
    "business",
    "days",
    "often",
    "times",
    "sooner",
    "also",
    "great",
    "way",
    "enter",
    "multiple",
    "quota",
    "changes",
    "click",
    "selected",
    "apis",
    "let",
    "bigquery",
    "api",
    "cloud",
    "data",
    "store",
    "api",
    "clicked",
    "three",
    "go",
    "back",
    "top",
    "click",
    "edit",
    "quotas",
    "button",
    "see",
    "panel",
    "three",
    "apis",
    "want",
    "increase",
    "quotas",
    "enter",
    "new",
    "limit",
    "requests",
    "api",
    "submit",
    "bulk",
    "request",
    "new",
    "quota",
    "limit",
    "changes",
    "way",
    "would",
    "increase",
    "efficiency",
    "instead",
    "increasing",
    "quotas",
    "service",
    "one",
    "one",
    "going",
    "submit",
    "quota",
    "changes",
    "going",
    "close",
    "panel",
    "using",
    "quotas",
    "page",
    "give",
    "list",
    "project",
    "quota",
    "usage",
    "limits",
    "allow",
    "request",
    "changes",
    "accordingly",
    "moving",
    "second",
    "way",
    "view",
    "current",
    "quota",
    "limits",
    "going",
    "go",
    "api",
    "dashboard",
    "give",
    "granular",
    "view",
    "including",
    "resource",
    "usage",
    "time",
    "get",
    "going",
    "go",
    "back",
    "left",
    "hand",
    "side",
    "navigation",
    "menu",
    "going",
    "go",
    "apis",
    "services",
    "click",
    "dashboard",
    "see",
    "names",
    "apis",
    "going",
    "click",
    "compute",
    "engine",
    "api",
    "demonstration",
    "left",
    "hand",
    "menu",
    "see",
    "quotas",
    "said",
    "get",
    "really",
    "granular",
    "data",
    "regards",
    "queries",
    "read",
    "requests",
    "list",
    "requests",
    "whole",
    "bunch",
    "requests",
    "going",
    "drill",
    "queries",
    "see",
    "queries",
    "per",
    "day",
    "per",
    "100",
    "seconds",
    "per",
    "user",
    "per",
    "100",
    "seconds",
    "see",
    "queries",
    "per",
    "100",
    "seconds",
    "limit",
    "2",
    "000",
    "wanted",
    "increase",
    "limit",
    "simply",
    "click",
    "pencil",
    "icon",
    "panel",
    "right",
    "hand",
    "side",
    "prompt",
    "enter",
    "new",
    "quota",
    "limit",
    "currently",
    "see",
    "quota",
    "limit",
    "maximum",
    "need",
    "apply",
    "higher",
    "quota",
    "click",
    "link",
    "bring",
    "back",
    "iam",
    "page",
    "services",
    "filtered",
    "easily",
    "find",
    "service",
    "looking",
    "raise",
    "quota",
    "limit",
    "increase",
    "quota",
    "checking",
    "box",
    "clicking",
    "edit",
    "quotas",
    "button",
    "top",
    "page",
    "see",
    "quotas",
    "page",
    "well",
    "api",
    "dashboard",
    "work",
    "tandem",
    "get",
    "information",
    "need",
    "regards",
    "quotas",
    "limits",
    "edit",
    "accordingly",
    "hope",
    "gave",
    "good",
    "idea",
    "great",
    "insight",
    "view",
    "edit",
    "quotas",
    "quota",
    "limits",
    "according",
    "resources",
    "use",
    "wraps",
    "brief",
    "yet",
    "important",
    "demo",
    "limits",
    "quotas",
    "mark",
    "complete",
    "let",
    "move",
    "next",
    "section",
    "music",
    "welcome",
    "back",
    "section",
    "going",
    "going",
    "opinion",
    "one",
    "important",
    "services",
    "google",
    "cloud",
    "identity",
    "access",
    "management",
    "also",
    "known",
    "iam",
    "short",
    "diving",
    "identities",
    "roles",
    "architecture",
    "policies",
    "give",
    "good",
    "understanding",
    "permissions",
    "granted",
    "policies",
    "inherited",
    "jump",
    "wanted",
    "touch",
    "principle",
    "least",
    "privilege",
    "second",
    "principle",
    "least",
    "privilege",
    "states",
    "user",
    "program",
    "process",
    "access",
    "bare",
    "minimum",
    "privileges",
    "necessary",
    "exact",
    "resources",
    "needs",
    "order",
    "perform",
    "function",
    "example",
    "lisa",
    "performing",
    "create",
    "function",
    "cloud",
    "storage",
    "bucket",
    "lisa",
    "restricted",
    "create",
    "permissions",
    "exactly",
    "one",
    "cloud",
    "storage",
    "bucket",
    "need",
    "read",
    "edit",
    "even",
    "delete",
    "permissions",
    "cloud",
    "storage",
    "bucket",
    "perform",
    "job",
    "great",
    "illustration",
    "principle",
    "works",
    "something",
    "happens",
    "google",
    "cloud",
    "every",
    "cloud",
    "environment",
    "well",
    "environment",
    "note",
    "principle",
    "least",
    "privilege",
    "something",
    "previously",
    "continue",
    "talking",
    "lot",
    "course",
    "key",
    "term",
    "comes",
    "quite",
    "bit",
    "major",
    "exam",
    "rule",
    "apply",
    "working",
    "environment",
    "avoid",
    "unnecessary",
    "granted",
    "permissions",
    "unsaid",
    "rule",
    "comes",
    "security",
    "hence",
    "wanting",
    "touch",
    "brief",
    "moment",
    "way",
    "like",
    "move",
    "identity",
    "access",
    "management",
    "short",
    "really",
    "well",
    "iam",
    "manage",
    "access",
    "control",
    "defining",
    "identity",
    "access",
    "role",
    "resource",
    "also",
    "includes",
    "organizations",
    "folders",
    "projects",
    "iam",
    "permission",
    "access",
    "resource",
    "granted",
    "directly",
    "end",
    "user",
    "instead",
    "permissions",
    "grouped",
    "roles",
    "roles",
    "granted",
    "authenticated",
    "members",
    "iam",
    "policy",
    "defines",
    "enforces",
    "roles",
    "granted",
    "members",
    "policy",
    "attached",
    "resource",
    "authenticated",
    "member",
    "attempts",
    "access",
    "resource",
    "iam",
    "checks",
    "resources",
    "policy",
    "determine",
    "whether",
    "action",
    "permitted",
    "said",
    "want",
    "dive",
    "policy",
    "architecture",
    "breaking",
    "means",
    "components",
    "policy",
    "architecture",
    "give",
    "better",
    "understanding",
    "policies",
    "put",
    "together",
    "policy",
    "policy",
    "collection",
    "bindings",
    "audit",
    "configuration",
    "metadata",
    "binding",
    "specifies",
    "access",
    "granted",
    "resources",
    "binds",
    "one",
    "members",
    "single",
    "role",
    "contact",
    "specific",
    "conditions",
    "change",
    "role",
    "granted",
    "metadata",
    "includes",
    "additional",
    "information",
    "policy",
    "etag",
    "version",
    "facilitate",
    "policy",
    "management",
    "finally",
    "audit",
    "config",
    "field",
    "specifies",
    "configuration",
    "data",
    "access",
    "attempts",
    "audited",
    "wanted",
    "take",
    "moment",
    "dive",
    "deeper",
    "component",
    "starting",
    "member",
    "comes",
    "members",
    "identity",
    "access",
    "resource",
    "identity",
    "member",
    "email",
    "address",
    "associated",
    "user",
    "service",
    "account",
    "google",
    "group",
    "even",
    "domain",
    "name",
    "associated",
    "g",
    "suite",
    "cloud",
    "identity",
    "domains",
    "comes",
    "google",
    "account",
    "represents",
    "person",
    "interacts",
    "google",
    "cloud",
    "email",
    "address",
    "associated",
    "google",
    "account",
    "identity",
    "including",
    "domains",
    "service",
    "account",
    "account",
    "belongs",
    "application",
    "instead",
    "individual",
    "end",
    "user",
    "run",
    "code",
    "hosted",
    "gcp",
    "identity",
    "would",
    "specify",
    "run",
    "code",
    "google",
    "group",
    "named",
    "collection",
    "google",
    "accounts",
    "also",
    "include",
    "service",
    "accounts",
    "advantages",
    "using",
    "google",
    "groups",
    "grant",
    "change",
    "permissions",
    "collection",
    "accounts",
    "instead",
    "changing",
    "access",
    "one",
    "one",
    "google",
    "groups",
    "help",
    "manage",
    "users",
    "scale",
    "member",
    "google",
    "group",
    "inherits",
    "iam",
    "roles",
    "granted",
    "group",
    "inheritance",
    "means",
    "use",
    "group",
    "membership",
    "manage",
    "users",
    "roles",
    "instead",
    "granting",
    "iam",
    "roles",
    "individual",
    "users",
    "moving",
    "g",
    "suite",
    "domains",
    "represents",
    "organization",
    "internet",
    "domain",
    "name",
    "add",
    "user",
    "g",
    "suite",
    "domain",
    "new",
    "google",
    "account",
    "created",
    "user",
    "inside",
    "virtual",
    "group",
    "antony",
    "g",
    "suite",
    "domain",
    "actuality",
    "represents",
    "virtual",
    "group",
    "google",
    "accounts",
    "created",
    "like",
    "google",
    "groups",
    "g",
    "suite",
    "domains",
    "used",
    "establish",
    "identity",
    "simply",
    "enable",
    "permission",
    "management",
    "cloud",
    "identity",
    "domain",
    "like",
    "g",
    "suite",
    "domain",
    "difference",
    "domain",
    "users",
    "access",
    "g",
    "suite",
    "applications",
    "features",
    "couple",
    "members",
    "wanted",
    "address",
    "authenticated",
    "users",
    "users",
    "members",
    "authenticated",
    "users",
    "special",
    "identifier",
    "represents",
    "anyone",
    "authenticated",
    "google",
    "account",
    "service",
    "account",
    "users",
    "authenticated",
    "anonymous",
    "visitors",
    "included",
    "finally",
    "users",
    "member",
    "special",
    "identifier",
    "represents",
    "anyone",
    "everyone",
    "user",
    "internet",
    "including",
    "authenticated",
    "unauthenticated",
    "users",
    "covers",
    "slew",
    "different",
    "types",
    "members",
    "touching",
    "next",
    "component",
    "policies",
    "roles",
    "diving",
    "roles",
    "named",
    "collection",
    "permissions",
    "grant",
    "access",
    "perform",
    "actions",
    "google",
    "cloud",
    "resources",
    "heart",
    "permissions",
    "determines",
    "operations",
    "allowed",
    "resource",
    "usually",
    "always",
    "correspond",
    "rest",
    "methods",
    "google",
    "cloud",
    "service",
    "associated",
    "permission",
    "rest",
    "method",
    "call",
    "method",
    "caller",
    "needs",
    "permission",
    "permissions",
    "granted",
    "users",
    "directly",
    "grouped",
    "together",
    "within",
    "role",
    "would",
    "grant",
    "roles",
    "contain",
    "one",
    "permissions",
    "also",
    "create",
    "custom",
    "role",
    "combining",
    "one",
    "available",
    "iam",
    "permissions",
    "permissions",
    "allow",
    "users",
    "perform",
    "specific",
    "actions",
    "google",
    "cloud",
    "resources",
    "typically",
    "see",
    "permission",
    "one",
    "see",
    "within",
    "google",
    "cloud",
    "iam",
    "permissions",
    "represented",
    "form",
    "recap",
    "roles",
    "collection",
    "permissions",
    "grant",
    "permission",
    "directly",
    "user",
    "grant",
    "role",
    "user",
    "permissions",
    "role",
    "contains",
    "example",
    "shown",
    "compute",
    "instances",
    "permissions",
    "grouped",
    "together",
    "role",
    "grant",
    "permissions",
    "granting",
    "roles",
    "user",
    "group",
    "service",
    "account",
    "moving",
    "broader",
    "level",
    "three",
    "types",
    "roles",
    "iam",
    "primitive",
    "roles",
    "predefined",
    "roles",
    "custom",
    "roles",
    "primitive",
    "roles",
    "roles",
    "existed",
    "prior",
    "introduction",
    "iam",
    "consist",
    "three",
    "specific",
    "roles",
    "owner",
    "editor",
    "viewer",
    "roles",
    "concentric",
    "means",
    "owner",
    "role",
    "includes",
    "permissions",
    "editor",
    "role",
    "editor",
    "role",
    "includes",
    "permissions",
    "viewer",
    "role",
    "apply",
    "primitive",
    "roles",
    "project",
    "service",
    "resource",
    "levels",
    "using",
    "console",
    "api",
    "gcloud",
    "tool",
    "note",
    "grant",
    "owner",
    "role",
    "member",
    "project",
    "using",
    "iam",
    "api",
    "gcloud",
    "command",
    "line",
    "tool",
    "add",
    "owners",
    "project",
    "using",
    "cloud",
    "console",
    "well",
    "google",
    "recommends",
    "avoiding",
    "roles",
    "possible",
    "due",
    "nature",
    "much",
    "access",
    "permissions",
    "given",
    "specific",
    "roles",
    "google",
    "recommends",
    "use",
    "roles",
    "primitive",
    "roles",
    "moving",
    "predefined",
    "roles",
    "roles",
    "give",
    "granular",
    "access",
    "control",
    "primitive",
    "roles",
    "specific",
    "google",
    "cloud",
    "resources",
    "prevent",
    "unwanted",
    "access",
    "resources",
    "predefined",
    "roles",
    "created",
    "maintained",
    "google",
    "permissions",
    "automatically",
    "updated",
    "necessary",
    "new",
    "features",
    "services",
    "added",
    "google",
    "cloud",
    "comes",
    "custom",
    "roles",
    "user",
    "defined",
    "allow",
    "bundle",
    "one",
    "supported",
    "permissions",
    "meet",
    "specific",
    "needs",
    "unlike",
    "predefined",
    "roles",
    "custom",
    "roles",
    "maintained",
    "google",
    "new",
    "permissions",
    "features",
    "services",
    "added",
    "google",
    "cloud",
    "custom",
    "roles",
    "updated",
    "automatically",
    "create",
    "custom",
    "role",
    "must",
    "choose",
    "organization",
    "project",
    "create",
    "grant",
    "custom",
    "role",
    "organization",
    "project",
    "well",
    "resources",
    "within",
    "organization",
    "project",
    "note",
    "create",
    "custom",
    "roles",
    "folder",
    "level",
    "need",
    "use",
    "custom",
    "role",
    "within",
    "folder",
    "define",
    "custom",
    "role",
    "parent",
    "folder",
    "well",
    "custom",
    "roles",
    "user",
    "interface",
    "available",
    "users",
    "permissions",
    "create",
    "manage",
    "custom",
    "roles",
    "default",
    "project",
    "owners",
    "create",
    "new",
    "roles",
    "one",
    "limitation",
    "wanted",
    "point",
    "predefined",
    "roles",
    "contain",
    "permissions",
    "permitted",
    "custom",
    "roles",
    "highly",
    "recommend",
    "check",
    "whether",
    "use",
    "specific",
    "permission",
    "making",
    "custom",
    "role",
    "custom",
    "roles",
    "also",
    "really",
    "cool",
    "feature",
    "includes",
    "launch",
    "stage",
    "stored",
    "stage",
    "property",
    "role",
    "stage",
    "informational",
    "helps",
    "keep",
    "track",
    "close",
    "role",
    "generally",
    "available",
    "launch",
    "stages",
    "available",
    "stages",
    "shown",
    "alpha",
    "testing",
    "beta",
    "tested",
    "awaiting",
    "approval",
    "course",
    "ga",
    "generally",
    "available",
    "getting",
    "later",
    "roles",
    "upcoming",
    "demonstration",
    "moving",
    "next",
    "component",
    "conditions",
    "condition",
    "logic",
    "expression",
    "used",
    "define",
    "enforce",
    "conditional",
    "access",
    "control",
    "google",
    "cloud",
    "resources",
    "conditions",
    "allow",
    "choose",
    "granting",
    "resource",
    "access",
    "identities",
    "also",
    "known",
    "members",
    "configured",
    "conditions",
    "met",
    "example",
    "could",
    "done",
    "configure",
    "temporary",
    "access",
    "users",
    "contractors",
    "given",
    "specific",
    "access",
    "certain",
    "amount",
    "time",
    "condition",
    "could",
    "put",
    "place",
    "remove",
    "access",
    "needed",
    "contract",
    "ended",
    "conditions",
    "specified",
    "role",
    "bindings",
    "resources",
    "im",
    "policy",
    "condition",
    "exists",
    "access",
    "request",
    "granted",
    "condition",
    "expression",
    "true",
    "moving",
    "metadata",
    "component",
    "carries",
    "e",
    "tags",
    "version",
    "first",
    "touching",
    "e",
    "multiple",
    "systems",
    "try",
    "write",
    "im",
    "policy",
    "time",
    "risk",
    "systems",
    "might",
    "overwrite",
    "changes",
    "risk",
    "exists",
    "updating",
    "im",
    "policy",
    "involves",
    "multiple",
    "operations",
    "order",
    "help",
    "prevent",
    "issue",
    "iam",
    "supports",
    "concurrency",
    "control",
    "use",
    "etag",
    "field",
    "policy",
    "value",
    "field",
    "changes",
    "time",
    "policy",
    "updated",
    "comes",
    "version",
    "version",
    "number",
    "added",
    "determine",
    "features",
    "condition",
    "future",
    "releases",
    "new",
    "features",
    "also",
    "used",
    "avoid",
    "breaking",
    "existing",
    "integrations",
    "new",
    "feature",
    "releases",
    "rely",
    "consistency",
    "policy",
    "structure",
    "also",
    "new",
    "policy",
    "schema",
    "versions",
    "introduced",
    "lastly",
    "auditconfig",
    "component",
    "used",
    "order",
    "configure",
    "audit",
    "logging",
    "policy",
    "determines",
    "permission",
    "types",
    "logged",
    "identities",
    "exempted",
    "logging",
    "sum",
    "policy",
    "entirety",
    "component",
    "see",
    "plays",
    "different",
    "part",
    "going",
    "policies",
    "assembled",
    "statements",
    "later",
    "lesson",
    "one",
    "thing",
    "wanted",
    "touch",
    "ending",
    "lesson",
    "policy",
    "inheritance",
    "comes",
    "resource",
    "hierarchy",
    "explained",
    "earlier",
    "lesson",
    "set",
    "im",
    "policy",
    "level",
    "resource",
    "hierarchy",
    "organization",
    "level",
    "folder",
    "level",
    "project",
    "level",
    "resource",
    "level",
    "resources",
    "inherit",
    "policies",
    "parent",
    "resources",
    "effective",
    "policy",
    "resource",
    "union",
    "policy",
    "set",
    "resource",
    "policies",
    "inherited",
    "higher",
    "hierarchy",
    "wanted",
    "reiterate",
    "policy",
    "inheritance",
    "transitive",
    "words",
    "resources",
    "inherit",
    "policies",
    "project",
    "inherit",
    "policies",
    "folders",
    "inherit",
    "policies",
    "organization",
    "therefore",
    "organization",
    "level",
    "policies",
    "also",
    "apply",
    "resource",
    "level",
    "quick",
    "example",
    "apply",
    "policy",
    "project",
    "x",
    "resources",
    "within",
    "project",
    "effective",
    "policy",
    "going",
    "union",
    "policies",
    "resources",
    "inherit",
    "policy",
    "granted",
    "project",
    "x",
    "hope",
    "gave",
    "better",
    "understanding",
    "policies",
    "granted",
    "well",
    "course",
    "structure",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "wanted",
    "build",
    "last",
    "lesson",
    "went",
    "iam",
    "policy",
    "architecture",
    "dive",
    "deeper",
    "policies",
    "conditions",
    "comes",
    "putting",
    "together",
    "policy",
    "statements",
    "cloud",
    "engineers",
    "able",
    "read",
    "decipher",
    "policy",
    "statements",
    "understand",
    "put",
    "together",
    "using",
    "components",
    "discussed",
    "earlier",
    "refresher",
    "wanted",
    "go",
    "policy",
    "architecture",
    "discussed",
    "previously",
    "policy",
    "collection",
    "statements",
    "define",
    "type",
    "access",
    "attached",
    "resource",
    "used",
    "enforce",
    "access",
    "control",
    "whenever",
    "resource",
    "accessed",
    "binding",
    "within",
    "policy",
    "binds",
    "one",
    "members",
    "single",
    "role",
    "context",
    "specific",
    "conditions",
    "words",
    "member",
    "roles",
    "conditions",
    "bound",
    "together",
    "using",
    "binding",
    "combined",
    "metadata",
    "audit",
    "config",
    "policy",
    "taking",
    "putting",
    "together",
    "policy",
    "statement",
    "shown",
    "see",
    "bindings",
    "role",
    "members",
    "conditions",
    "first",
    "member",
    "tony",
    "beauties",
    "holding",
    "role",
    "storage",
    "admin",
    "second",
    "member",
    "larkfetterlogin",
    "holding",
    "role",
    "storage",
    "object",
    "viewer",
    "lark",
    "needs",
    "view",
    "files",
    "project",
    "cloud",
    "storage",
    "till",
    "new",
    "year",
    "condition",
    "applied",
    "grant",
    "access",
    "lark",
    "view",
    "files",
    "january",
    "1st",
    "e",
    "tag",
    "put",
    "version",
    "numbered",
    "3",
    "due",
    "condition",
    "get",
    "little",
    "bit",
    "later",
    "policy",
    "statement",
    "structured",
    "json",
    "format",
    "common",
    "format",
    "used",
    "policy",
    "statements",
    "moving",
    "exact",
    "policy",
    "statement",
    "formatted",
    "yaml",
    "see",
    "members",
    "roles",
    "conditions",
    "bindings",
    "exactly",
    "well",
    "etag",
    "version",
    "due",
    "formatting",
    "much",
    "condensed",
    "see",
    "policy",
    "statements",
    "written",
    "json",
    "yaml",
    "depending",
    "preference",
    "personal",
    "preference",
    "write",
    "policy",
    "statements",
    "yaml",
    "due",
    "shorter",
    "cleaner",
    "format",
    "moving",
    "ahead",
    "course",
    "statements",
    "written",
    "yaml",
    "looking",
    "query",
    "projects",
    "granted",
    "policies",
    "easy",
    "way",
    "would",
    "query",
    "command",
    "line",
    "shown",
    "taken",
    "screenshot",
    "tony",
    "bowtie",
    "ace",
    "cloud",
    "shell",
    "used",
    "command",
    "gcloud",
    "projects",
    "get",
    "dash",
    "iam",
    "policy",
    "project",
    "id",
    "brought",
    "members",
    "roles",
    "within",
    "bindings",
    "well",
    "etag",
    "version",
    "policy",
    "attached",
    "project",
    "see",
    "conditions",
    "place",
    "bindings",
    "using",
    "command",
    "gcloud",
    "projects",
    "get",
    "dash",
    "iam",
    "dash",
    "policy",
    "along",
    "project",
    "id",
    "bring",
    "policies",
    "attached",
    "resource",
    "resource",
    "project",
    "id",
    "resource",
    "folder",
    "id",
    "could",
    "use",
    "command",
    "gcloud",
    "resource",
    "dash",
    "manager",
    "folders",
    "get",
    "dash",
    "folder",
    "id",
    "organizations",
    "command",
    "would",
    "gcloud",
    "organizations",
    "get",
    "dash",
    "along",
    "organization",
    "id",
    "folders",
    "organizations",
    "environment",
    "typing",
    "commands",
    "would",
    "bring",
    "anything",
    "note",
    "using",
    "commands",
    "cloud",
    "shell",
    "sdk",
    "bring",
    "policy",
    "statement",
    "formatted",
    "yaml",
    "wanted",
    "take",
    "second",
    "dive",
    "policy",
    "versions",
    "covered",
    "versions",
    "detail",
    "wanted",
    "quickly",
    "go",
    "reasons",
    "numbered",
    "version",
    "version",
    "one",
    "syntax",
    "schema",
    "policies",
    "supports",
    "binding",
    "one",
    "role",
    "one",
    "members",
    "support",
    "conditional",
    "role",
    "bindings",
    "usually",
    "version",
    "1",
    "see",
    "conditions",
    "version",
    "2",
    "used",
    "google",
    "internal",
    "use",
    "querying",
    "policies",
    "usually",
    "see",
    "version",
    "finally",
    "version",
    "3",
    "introduces",
    "condition",
    "field",
    "role",
    "binding",
    "constrains",
    "role",
    "binding",
    "via",
    "contact",
    "space",
    "attributes",
    "based",
    "rules",
    "note",
    "request",
    "specify",
    "policy",
    "version",
    "iam",
    "assume",
    "want",
    "version",
    "1",
    "policy",
    "policy",
    "contain",
    "conditions",
    "iam",
    "always",
    "returns",
    "version",
    "one",
    "policy",
    "regardless",
    "version",
    "number",
    "request",
    "moving",
    "policy",
    "limitations",
    "resource",
    "one",
    "policy",
    "includes",
    "organizations",
    "folders",
    "projects",
    "another",
    "limitation",
    "iam",
    "policy",
    "contain",
    "1500",
    "members",
    "250",
    "members",
    "google",
    "groups",
    "making",
    "policy",
    "changes",
    "take",
    "seven",
    "minutes",
    "fully",
    "propagate",
    "across",
    "google",
    "cloud",
    "platform",
    "happen",
    "instantaneously",
    "iam",
    "global",
    "well",
    "limit",
    "100",
    "conditional",
    "role",
    "bindings",
    "per",
    "policy",
    "getting",
    "little",
    "bit",
    "deeper",
    "conditions",
    "attributes",
    "either",
    "based",
    "resource",
    "based",
    "details",
    "request",
    "could",
    "vary",
    "time",
    "stamp",
    "originating",
    "destination",
    "ip",
    "address",
    "probably",
    "heard",
    "use",
    "term",
    "earlier",
    "conditional",
    "role",
    "bindings",
    "another",
    "name",
    "policy",
    "holds",
    "condition",
    "within",
    "binding",
    "conditional",
    "role",
    "bindings",
    "added",
    "new",
    "existing",
    "iam",
    "policies",
    "control",
    "access",
    "google",
    "cloud",
    "resources",
    "comes",
    "resource",
    "attributes",
    "would",
    "enable",
    "create",
    "conditions",
    "evaluate",
    "resource",
    "access",
    "request",
    "including",
    "resource",
    "type",
    "resource",
    "name",
    "google",
    "cloud",
    "service",
    "used",
    "request",
    "attributes",
    "allow",
    "manage",
    "access",
    "based",
    "days",
    "hours",
    "week",
    "conditional",
    "role",
    "binding",
    "used",
    "grant",
    "time",
    "bounded",
    "access",
    "resource",
    "ensuring",
    "user",
    "longer",
    "access",
    "resource",
    "specified",
    "expiry",
    "date",
    "time",
    "sets",
    "temporary",
    "access",
    "google",
    "cloud",
    "resources",
    "using",
    "conditional",
    "role",
    "bindings",
    "iam",
    "policies",
    "using",
    "date",
    "time",
    "attributes",
    "shown",
    "enforce",
    "controls",
    "accessing",
    "given",
    "resource",
    "showing",
    "another",
    "example",
    "condition",
    "possible",
    "get",
    "even",
    "granular",
    "scope",
    "geographic",
    "region",
    "along",
    "day",
    "time",
    "access",
    "policy",
    "lark",
    "access",
    "business",
    "hours",
    "view",
    "objects",
    "within",
    "cloud",
    "storage",
    "lark",
    "access",
    "objects",
    "monday",
    "friday",
    "nine",
    "five",
    "policy",
    "also",
    "used",
    "great",
    "example",
    "contractors",
    "coming",
    "business",
    "yet",
    "needing",
    "access",
    "business",
    "hours",
    "example",
    "condition",
    "shown",
    "group",
    "member",
    "condition",
    "tied",
    "dev",
    "access",
    "implemented",
    "developers",
    "part",
    "group",
    "access",
    "vm",
    "resources",
    "within",
    "project",
    "cat",
    "bowties",
    "tied",
    "resources",
    "name",
    "starts",
    "word",
    "development",
    "limitations",
    "comes",
    "conditions",
    "conditions",
    "limited",
    "specific",
    "services",
    "primitive",
    "roles",
    "unsupported",
    "members",
    "users",
    "authenticated",
    "users",
    "members",
    "conditions",
    "also",
    "hold",
    "limit",
    "100",
    "conditional",
    "role",
    "bindings",
    "per",
    "policy",
    "well",
    "20",
    "role",
    "bindings",
    "role",
    "member",
    "last",
    "part",
    "policy",
    "statements",
    "wanted",
    "touch",
    "audit",
    "config",
    "logs",
    "specifies",
    "audit",
    "configuration",
    "service",
    "configuration",
    "determines",
    "permission",
    "types",
    "logged",
    "identities",
    "exempted",
    "logging",
    "specifying",
    "audit",
    "configs",
    "must",
    "one",
    "audit",
    "log",
    "configs",
    "shown",
    "policy",
    "enables",
    "data",
    "read",
    "data",
    "write",
    "admin",
    "read",
    "logging",
    "services",
    "exempting",
    "tony",
    "bowtie",
    "ace",
    "admin",
    "read",
    "logging",
    "cloud",
    "storage",
    "pretty",
    "much",
    "wanted",
    "cover",
    "lesson",
    "policies",
    "policy",
    "statements",
    "conditions",
    "highly",
    "recommend",
    "come",
    "across",
    "policy",
    "statements",
    "take",
    "time",
    "read",
    "get",
    "know",
    "exactly",
    "statement",
    "referring",
    "type",
    "permissions",
    "given",
    "help",
    "exam",
    "also",
    "help",
    "reading",
    "writing",
    "policy",
    "statements",
    "future",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "demonstration",
    "going",
    "tour",
    "working",
    "iam",
    "google",
    "cloud",
    "console",
    "going",
    "go",
    "available",
    "services",
    "iam",
    "console",
    "well",
    "touching",
    "command",
    "line",
    "cloud",
    "shell",
    "show",
    "policies",
    "added",
    "edited",
    "also",
    "going",
    "bringing",
    "another",
    "new",
    "user",
    "really",
    "bring",
    "demo",
    "life",
    "show",
    "edit",
    "existing",
    "policies",
    "said",
    "let",
    "dive",
    "go",
    "user",
    "icon",
    "top",
    "right",
    "hand",
    "corner",
    "see",
    "logged",
    "tony",
    "bowtie",
    "ace",
    "see",
    "top",
    "project",
    "tony",
    "get",
    "iam",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "go",
    "admin",
    "iam",
    "moving",
    "menu",
    "left",
    "wanted",
    "go",
    "different",
    "options",
    "iam",
    "iam",
    "would",
    "add",
    "edit",
    "permissions",
    "regards",
    "members",
    "roles",
    "policy",
    "added",
    "given",
    "project",
    "case",
    "project",
    "tony",
    "coming",
    "back",
    "bit",
    "go",
    "greater",
    "depth",
    "regards",
    "adding",
    "editing",
    "policy",
    "permissions",
    "moving",
    "identity",
    "organization",
    "although",
    "touched",
    "cloud",
    "identity",
    "yet",
    "covering",
    "high",
    "level",
    "detail",
    "different",
    "lesson",
    "know",
    "cloud",
    "identity",
    "google",
    "cloud",
    "identity",
    "service",
    "solution",
    "allows",
    "create",
    "manage",
    "users",
    "groups",
    "within",
    "google",
    "cloud",
    "signed",
    "cloud",
    "identity",
    "would",
    "whole",
    "bunch",
    "options",
    "since",
    "personal",
    "account",
    "create",
    "manage",
    "users",
    "well",
    "domain",
    "tied",
    "cloud",
    "identity",
    "account",
    "well",
    "g",
    "suite",
    "account",
    "know",
    "cloud",
    "identity",
    "g",
    "suite",
    "set",
    "would",
    "bunch",
    "different",
    "options",
    "choose",
    "order",
    "help",
    "manage",
    "users",
    "groups",
    "organization",
    "policies",
    "able",
    "manage",
    "organization",
    "policies",
    "since",
    "organization",
    "policy",
    "administrator",
    "organization",
    "much",
    "know",
    "organization",
    "set",
    "able",
    "come",
    "order",
    "manage",
    "edit",
    "organization",
    "policies",
    "moving",
    "quotas",
    "went",
    "little",
    "bit",
    "detail",
    "previous",
    "lesson",
    "edit",
    "quotas",
    "services",
    "case",
    "need",
    "limit",
    "increase",
    "moving",
    "service",
    "accounts",
    "covering",
    "topic",
    "great",
    "depth",
    "later",
    "lesson",
    "going",
    "demonstration",
    "well",
    "know",
    "touched",
    "much",
    "labels",
    "yet",
    "know",
    "labels",
    "key",
    "value",
    "pair",
    "helps",
    "organize",
    "filter",
    "resources",
    "based",
    "labels",
    "labels",
    "also",
    "forwarded",
    "billing",
    "system",
    "break",
    "billing",
    "charges",
    "label",
    "also",
    "use",
    "labels",
    "based",
    "teams",
    "cost",
    "centers",
    "components",
    "even",
    "environments",
    "example",
    "wanted",
    "label",
    "virtual",
    "machines",
    "environment",
    "simply",
    "use",
    "environment",
    "key",
    "value",
    "use",
    "anything",
    "development",
    "qa",
    "testing",
    "production",
    "could",
    "simply",
    "add",
    "label",
    "add",
    "different",
    "environments",
    "later",
    "able",
    "query",
    "based",
    "specific",
    "labels",
    "good",
    "rule",
    "thumb",
    "label",
    "resources",
    "way",
    "able",
    "find",
    "lot",
    "easier",
    "able",
    "query",
    "lot",
    "easier",
    "moving",
    "forward",
    "resources",
    "creating",
    "sure",
    "add",
    "labels",
    "give",
    "maximum",
    "flexibility",
    "going",
    "discard",
    "changes",
    "going",
    "move",
    "settings",
    "touched",
    "settings",
    "earlier",
    "lesson",
    "regards",
    "projects",
    "could",
    "change",
    "project",
    "name",
    "give",
    "project",
    "id",
    "project",
    "number",
    "able",
    "migrate",
    "shut",
    "project",
    "comes",
    "access",
    "transparency",
    "provides",
    "logs",
    "capture",
    "actions",
    "google",
    "personnel",
    "take",
    "accessing",
    "content",
    "troubleshooting",
    "like",
    "cloud",
    "audit",
    "logs",
    "google",
    "support",
    "order",
    "enable",
    "access",
    "transparency",
    "google",
    "cloud",
    "organization",
    "google",
    "cloud",
    "account",
    "must",
    "premium",
    "support",
    "plan",
    "minimum",
    "level",
    "400",
    "month",
    "support",
    "plan",
    "would",
    "able",
    "enable",
    "access",
    "transparency",
    "although",
    "access",
    "transparency",
    "exam",
    "great",
    "feature",
    "know",
    "case",
    "working",
    "bigger",
    "environments",
    "support",
    "plans",
    "compliance",
    "utmost",
    "importance",
    "moving",
    "privacy",
    "security",
    "google",
    "supplies",
    "clients",
    "google",
    "cloud",
    "compliance",
    "need",
    "order",
    "meet",
    "regulations",
    "across",
    "world",
    "across",
    "various",
    "industries",
    "health",
    "care",
    "education",
    "google",
    "broad",
    "base",
    "europe",
    "google",
    "provides",
    "capabilities",
    "contractual",
    "commitments",
    "created",
    "meet",
    "data",
    "protection",
    "recommendations",
    "see",
    "eu",
    "model",
    "contract",
    "clauses",
    "eu",
    "representative",
    "contacts",
    "well",
    "transparency",
    "control",
    "able",
    "disable",
    "usage",
    "data",
    "google",
    "collects",
    "order",
    "provide",
    "better",
    "data",
    "insights",
    "recommendations",
    "done",
    "project",
    "level",
    "well",
    "option",
    "going",
    "billing",
    "account",
    "could",
    "select",
    "different",
    "billing",
    "account",
    "linked",
    "projects",
    "get",
    "recommendations",
    "continuing",
    "forward",
    "identity",
    "aware",
    "proxy",
    "something",
    "covering",
    "later",
    "lesson",
    "wo",
    "getting",
    "detail",
    "right",
    "really",
    "wanted",
    "dig",
    "roles",
    "may",
    "look",
    "familiar",
    "touched",
    "briefly",
    "previous",
    "lesson",
    "create",
    "roles",
    "create",
    "custom",
    "roles",
    "different",
    "selections",
    "access",
    "permissions",
    "wanted",
    "filter",
    "different",
    "types",
    "names",
    "permissions",
    "even",
    "status",
    "let",
    "say",
    "looking",
    "specific",
    "permission",
    "looking",
    "permissions",
    "projects",
    "could",
    "help",
    "find",
    "exactly",
    "looking",
    "filters",
    "allow",
    "get",
    "really",
    "granular",
    "find",
    "exact",
    "permission",
    "get",
    "really",
    "granular",
    "regards",
    "permissions",
    "create",
    "roles",
    "custom",
    "environment",
    "moving",
    "audit",
    "logs",
    "enable",
    "auto",
    "logs",
    "without",
    "use",
    "specific",
    "policy",
    "simply",
    "clicking",
    "default",
    "autoconfig",
    "turn",
    "selected",
    "logging",
    "well",
    "add",
    "exempted",
    "users",
    "recommend",
    "turn",
    "audit",
    "logging",
    "create",
    "extremely",
    "large",
    "amount",
    "data",
    "quickly",
    "blow",
    "300",
    "credit",
    "going",
    "keep",
    "move",
    "back",
    "main",
    "screen",
    "audit",
    "logs",
    "well",
    "able",
    "get",
    "really",
    "granular",
    "want",
    "log",
    "quickly",
    "touching",
    "audit",
    "logs",
    "command",
    "line",
    "wanted",
    "quickly",
    "open",
    "cloud",
    "shell",
    "show",
    "example",
    "edit",
    "policy",
    "order",
    "enable",
    "audit",
    "logging",
    "going",
    "make",
    "little",
    "bit",
    "bigger",
    "going",
    "paste",
    "command",
    "gcloud",
    "projects",
    "get",
    "dash",
    "iam",
    "dash",
    "policy",
    "project",
    "id",
    "project",
    "tony",
    "286016",
    "gon",
    "na",
    "hit",
    "enter",
    "see",
    "current",
    "policy",
    "well",
    "expected",
    "audit",
    "logs",
    "enabled",
    "due",
    "fact",
    "audit",
    "config",
    "field",
    "present",
    "order",
    "enable",
    "audit",
    "config",
    "logs",
    "going",
    "edit",
    "policy",
    "easiest",
    "way",
    "run",
    "command",
    "output",
    "file",
    "edit",
    "going",
    "call",
    "new",
    "dash",
    "policy",
    "dot",
    "yaml",
    "policy",
    "outputted",
    "file",
    "going",
    "go",
    "editor",
    "see",
    "new",
    "right",
    "enable",
    "autoconfig",
    "logs",
    "going",
    "simply",
    "append",
    "file",
    "going",
    "go",
    "top",
    "menu",
    "click",
    "file",
    "save",
    "apply",
    "new",
    "policy",
    "going",
    "go",
    "back",
    "terminal",
    "going",
    "paste",
    "command",
    "gcloud",
    "projects",
    "set",
    "dash",
    "project",
    "id",
    "file",
    "name",
    "new",
    "dash",
    "policy",
    "dot",
    "yaml",
    "going",
    "hit",
    "enter",
    "see",
    "audit",
    "log",
    "configs",
    "enabled",
    "services",
    "may",
    "take",
    "time",
    "reflect",
    "console",
    "show",
    "right",
    "away",
    "either",
    "way",
    "audit",
    "logs",
    "usually",
    "take",
    "lot",
    "data",
    "want",
    "blow",
    "300",
    "credit",
    "going",
    "disable",
    "easiest",
    "way",
    "output",
    "policy",
    "another",
    "file",
    "edit",
    "set",
    "going",
    "go",
    "ahead",
    "going",
    "first",
    "clear",
    "screen",
    "going",
    "paste",
    "command",
    "outputting",
    "new",
    "file",
    "called",
    "updated",
    "dash",
    "policy",
    "dot",
    "yaml",
    "gon",
    "na",
    "hit",
    "enter",
    "gon",
    "na",
    "go",
    "editor",
    "edit",
    "file",
    "one",
    "thing",
    "wanted",
    "point",
    "could",
    "overwritten",
    "file",
    "new",
    "dash",
    "policy",
    "look",
    "updated",
    "policy",
    "different",
    "old",
    "policy",
    "allowed",
    "highlight",
    "comes",
    "editing",
    "creating",
    "new",
    "policies",
    "editing",
    "policies",
    "make",
    "sure",
    "etag",
    "correct",
    "otherwise",
    "receive",
    "error",
    "able",
    "set",
    "new",
    "policy",
    "going",
    "back",
    "updated",
    "policy",
    "file",
    "going",
    "take",
    "audit",
    "log",
    "configs",
    "going",
    "leave",
    "auto",
    "configs",
    "field",
    "going",
    "go",
    "menu",
    "click",
    "file",
    "save",
    "going",
    "go",
    "back",
    "terminal",
    "going",
    "paste",
    "new",
    "command",
    "update",
    "policy",
    "see",
    "audit",
    "config",
    "logs",
    "disabled",
    "policy",
    "updated",
    "process",
    "use",
    "want",
    "update",
    "parts",
    "policy",
    "comes",
    "members",
    "roles",
    "even",
    "adding",
    "conditions",
    "moving",
    "last",
    "item",
    "menu",
    "groups",
    "see",
    "organization",
    "able",
    "view",
    "groups",
    "organization",
    "could",
    "manage",
    "groups",
    "right",
    "page",
    "moving",
    "back",
    "iam",
    "wanted",
    "dig",
    "policies",
    "little",
    "bit",
    "detail",
    "see",
    "permissions",
    "roles",
    "granted",
    "selected",
    "members",
    "specific",
    "project",
    "project",
    "tony",
    "remember",
    "im",
    "policy",
    "total",
    "collection",
    "members",
    "roles",
    "granted",
    "known",
    "binding",
    "binding",
    "applied",
    "layer",
    "layers",
    "underneath",
    "since",
    "project",
    "layer",
    "policy",
    "inherited",
    "resources",
    "underneath",
    "verify",
    "command",
    "line",
    "going",
    "open",
    "cloud",
    "shell",
    "going",
    "paste",
    "command",
    "gcloud",
    "projects",
    "get",
    "dash",
    "project",
    "id",
    "going",
    "hit",
    "enter",
    "see",
    "policy",
    "reflection",
    "exactly",
    "see",
    "console",
    "see",
    "service",
    "agent",
    "find",
    "two",
    "service",
    "accounts",
    "find",
    "well",
    "tony",
    "bowtie",
    "ace",
    "roles",
    "accompany",
    "members",
    "mentioned",
    "earlier",
    "gone",
    "ahead",
    "created",
    "new",
    "user",
    "following",
    "along",
    "go",
    "ahead",
    "feel",
    "free",
    "create",
    "new",
    "gmail",
    "user",
    "going",
    "ahead",
    "demonstration",
    "user",
    "created",
    "named",
    "laura",
    "delightful",
    "tony",
    "needed",
    "extra",
    "hand",
    "decided",
    "bring",
    "onto",
    "team",
    "another",
    "department",
    "unfortunately",
    "order",
    "laura",
    "help",
    "tony",
    "project",
    "needs",
    "access",
    "project",
    "see",
    "access",
    "going",
    "go",
    "ahead",
    "change",
    "give",
    "access",
    "project",
    "going",
    "go",
    "back",
    "open",
    "tab",
    "tony",
    "bowtie",
    "ace",
    "gon",
    "na",
    "go",
    "ahead",
    "give",
    "laura",
    "permissions",
    "gon",
    "na",
    "go",
    "ahead",
    "click",
    "add",
    "button",
    "top",
    "page",
    "prompt",
    "ask",
    "add",
    "new",
    "member",
    "gon",
    "na",
    "add",
    "laura",
    "going",
    "select",
    "role",
    "project",
    "viewer",
    "going",
    "add",
    "conditions",
    "simply",
    "going",
    "click",
    "save",
    "policy",
    "updated",
    "see",
    "laura",
    "granted",
    "role",
    "project",
    "viewer",
    "going",
    "move",
    "open",
    "tab",
    "laura",
    "console",
    "open",
    "going",
    "simply",
    "refresh",
    "laura",
    "access",
    "view",
    "resources",
    "within",
    "project",
    "tony",
    "laura",
    "able",
    "view",
    "everything",
    "project",
    "laura",
    "actually",
    "able",
    "anything",
    "order",
    "laura",
    "get",
    "things",
    "done",
    "big",
    "part",
    "job",
    "going",
    "creating",
    "files",
    "new",
    "ideas",
    "fall",
    "winter",
    "line",
    "bow",
    "ties",
    "2021",
    "laura",
    "holds",
    "project",
    "viewer",
    "role",
    "able",
    "see",
    "everything",
    "cloud",
    "storage",
    "unable",
    "create",
    "buckets",
    "upload",
    "edit",
    "delete",
    "files",
    "even",
    "folders",
    "see",
    "folder",
    "marked",
    "bowtie",
    "inc",
    "fallwinter",
    "2021",
    "ideas",
    "laura",
    "create",
    "new",
    "buckets",
    "required",
    "permissions",
    "well",
    "drilling",
    "bucket",
    "laura",
    "unable",
    "create",
    "folders",
    "explained",
    "earlier",
    "stands",
    "uploading",
    "files",
    "going",
    "cancel",
    "order",
    "give",
    "laura",
    "proper",
    "permissions",
    "job",
    "going",
    "give",
    "laura",
    "storage",
    "admin",
    "role",
    "moving",
    "back",
    "open",
    "console",
    "tony",
    "bowtie",
    "going",
    "give",
    "laura",
    "access",
    "using",
    "command",
    "line",
    "going",
    "go",
    "top",
    "right",
    "open",
    "cloud",
    "shell",
    "command",
    "need",
    "run",
    "give",
    "laura",
    "role",
    "storage",
    "admin",
    "would",
    "following",
    "gcloud",
    "projects",
    "add",
    "dash",
    "iam",
    "dash",
    "policy",
    "dash",
    "binding",
    "project",
    "id",
    "dash",
    "dash",
    "member",
    "user",
    "followed",
    "colon",
    "user",
    "name",
    "laura",
    "delightful",
    "dash",
    "dash",
    "role",
    "role",
    "storage",
    "admin",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "see",
    "executed",
    "successfully",
    "refresh",
    "web",
    "page",
    "going",
    "able",
    "see",
    "changes",
    "reflected",
    "console",
    "refresh",
    "see",
    "storage",
    "admin",
    "added",
    "role",
    "laura",
    "delightful",
    "go",
    "open",
    "tab",
    "laura",
    "console",
    "open",
    "simply",
    "refresh",
    "go",
    "back",
    "home",
    "page",
    "cloud",
    "storage",
    "see",
    "laura",
    "permissions",
    "create",
    "bucket",
    "laura",
    "also",
    "permissions",
    "create",
    "new",
    "folders",
    "create",
    "edit",
    "delete",
    "new",
    "files",
    "top",
    "able",
    "create",
    "new",
    "storage",
    "buckets",
    "wraps",
    "demonstration",
    "getting",
    "iam",
    "console",
    "command",
    "line",
    "also",
    "hope",
    "demo",
    "given",
    "bit",
    "confidence",
    "working",
    "shell",
    "running",
    "commands",
    "needed",
    "order",
    "create",
    "new",
    "bindings",
    "along",
    "editing",
    "existing",
    "policies",
    "get",
    "comfortable",
    "need",
    "assign",
    "roles",
    "new",
    "existing",
    "users",
    "added",
    "gcp",
    "environment",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "going",
    "take",
    "deep",
    "dive",
    "service",
    "accounts",
    "service",
    "accounts",
    "play",
    "powerful",
    "part",
    "google",
    "cloud",
    "allow",
    "different",
    "approach",
    "application",
    "interaction",
    "resources",
    "google",
    "cloud",
    "service",
    "accounts",
    "identity",
    "resource",
    "cause",
    "confusion",
    "really",
    "wanted",
    "spend",
    "time",
    "breaking",
    "better",
    "understanding",
    "first",
    "going",
    "start",
    "explaining",
    "exactly",
    "service",
    "account",
    "service",
    "account",
    "special",
    "kind",
    "account",
    "used",
    "application",
    "virtual",
    "machine",
    "instance",
    "person",
    "application",
    "uses",
    "service",
    "account",
    "authenticate",
    "application",
    "gcp",
    "services",
    "users",
    "directly",
    "involved",
    "short",
    "special",
    "type",
    "google",
    "account",
    "intended",
    "represent",
    "user",
    "needs",
    "authenticate",
    "authorized",
    "access",
    "data",
    "google",
    "apis",
    "way",
    "service",
    "account",
    "identity",
    "service",
    "service",
    "accounts",
    "permissions",
    "control",
    "resources",
    "service",
    "access",
    "note",
    "service",
    "account",
    "identified",
    "email",
    "address",
    "unique",
    "account",
    "different",
    "service",
    "account",
    "types",
    "come",
    "three",
    "different",
    "flavors",
    "user",
    "managed",
    "default",
    "google",
    "managed",
    "service",
    "accounts",
    "comes",
    "user",
    "managed",
    "service",
    "accounts",
    "service",
    "accounts",
    "create",
    "responsible",
    "managing",
    "securing",
    "accounts",
    "default",
    "create",
    "100",
    "user",
    "managed",
    "service",
    "accounts",
    "project",
    "also",
    "request",
    "quota",
    "increase",
    "case",
    "need",
    "create",
    "user",
    "managed",
    "service",
    "account",
    "project",
    "chooses",
    "name",
    "service",
    "account",
    "name",
    "appears",
    "email",
    "address",
    "identifies",
    "service",
    "account",
    "uses",
    "following",
    "format",
    "seen",
    "service",
    "account",
    "name",
    "project",
    "id",
    "dot",
    "moving",
    "default",
    "service",
    "accounts",
    "use",
    "google",
    "cloud",
    "services",
    "create",
    "user",
    "managed",
    "service",
    "accounts",
    "enable",
    "service",
    "deploy",
    "jobs",
    "access",
    "google",
    "cloud",
    "resources",
    "accounts",
    "known",
    "default",
    "service",
    "accounts",
    "comes",
    "production",
    "workloads",
    "google",
    "strongly",
    "recommends",
    "create",
    "user",
    "managed",
    "service",
    "accounts",
    "grant",
    "appropriate",
    "roles",
    "service",
    "account",
    "default",
    "service",
    "account",
    "created",
    "automatically",
    "granted",
    "editor",
    "role",
    "project",
    "following",
    "principle",
    "lease",
    "privilege",
    "google",
    "strongly",
    "recommends",
    "disable",
    "automatic",
    "role",
    "grant",
    "adding",
    "constraint",
    "organization",
    "policy",
    "revoking",
    "editor",
    "role",
    "manually",
    "default",
    "service",
    "account",
    "assigned",
    "email",
    "address",
    "following",
    "format",
    "see",
    "project",
    "id",
    "service",
    "accounts",
    "created",
    "app",
    "engine",
    "project",
    "number",
    "dash",
    "compute",
    "compute",
    "engine",
    "lastly",
    "comes",
    "google",
    "managed",
    "service",
    "accounts",
    "created",
    "managed",
    "google",
    "used",
    "google",
    "services",
    "display",
    "name",
    "google",
    "managed",
    "service",
    "accounts",
    "ends",
    "address",
    "service",
    "accounts",
    "visible",
    "others",
    "hidden",
    "example",
    "google",
    "api",
    "service",
    "agent",
    "service",
    "account",
    "named",
    "email",
    "address",
    "uses",
    "following",
    "format",
    "project",
    "number",
    "runs",
    "internal",
    "google",
    "processes",
    "behalf",
    "one",
    "example",
    "many",
    "google",
    "managed",
    "services",
    "run",
    "environment",
    "warning",
    "recommended",
    "change",
    "revoke",
    "roles",
    "granted",
    "google",
    "api",
    "service",
    "agent",
    "google",
    "managed",
    "service",
    "accounts",
    "matter",
    "change",
    "revoke",
    "roles",
    "google",
    "cloud",
    "services",
    "longer",
    "work",
    "comes",
    "authentication",
    "service",
    "accounts",
    "authenticate",
    "using",
    "service",
    "account",
    "keys",
    "service",
    "account",
    "associated",
    "two",
    "sets",
    "public",
    "private",
    "rsa",
    "key",
    "pairs",
    "used",
    "authenticate",
    "google",
    "google",
    "manage",
    "keys",
    "user",
    "manage",
    "keys",
    "google",
    "manage",
    "keys",
    "google",
    "stores",
    "public",
    "private",
    "portion",
    "key",
    "rotates",
    "regularly",
    "private",
    "key",
    "always",
    "held",
    "escrow",
    "never",
    "directly",
    "accessible",
    "iam",
    "provides",
    "apis",
    "use",
    "keys",
    "sign",
    "behalf",
    "service",
    "account",
    "using",
    "user",
    "managed",
    "key",
    "pairs",
    "implies",
    "public",
    "private",
    "portions",
    "key",
    "pair",
    "create",
    "one",
    "user",
    "managed",
    "key",
    "pairs",
    "also",
    "known",
    "external",
    "keys",
    "used",
    "outside",
    "google",
    "cloud",
    "google",
    "stores",
    "public",
    "portion",
    "user",
    "managed",
    "key",
    "responsible",
    "security",
    "private",
    "key",
    "well",
    "key",
    "rotation",
    "private",
    "keys",
    "retrieved",
    "google",
    "using",
    "user",
    "manage",
    "key",
    "please",
    "aware",
    "lose",
    "key",
    "service",
    "account",
    "effectively",
    "stop",
    "working",
    "google",
    "recommends",
    "storing",
    "keys",
    "cloud",
    "kms",
    "better",
    "security",
    "better",
    "management",
    "user",
    "managed",
    "keys",
    "extremely",
    "powerful",
    "credentials",
    "represent",
    "security",
    "risk",
    "managed",
    "correctly",
    "see",
    "user",
    "managed",
    "key",
    "many",
    "different",
    "areas",
    "need",
    "addressed",
    "comes",
    "key",
    "management",
    "comes",
    "service",
    "account",
    "permissions",
    "addition",
    "identity",
    "service",
    "account",
    "resource",
    "im",
    "policies",
    "attached",
    "policies",
    "determine",
    "use",
    "service",
    "account",
    "instance",
    "lark",
    "editor",
    "role",
    "service",
    "account",
    "laura",
    "viewer",
    "role",
    "service",
    "account",
    "like",
    "granting",
    "roles",
    "google",
    "cloud",
    "resource",
    "note",
    "default",
    "compute",
    "engine",
    "app",
    "engine",
    "service",
    "accounts",
    "granted",
    "editor",
    "roles",
    "project",
    "created",
    "code",
    "executing",
    "app",
    "vm",
    "instance",
    "necessary",
    "permissions",
    "grant",
    "service",
    "account",
    "user",
    "role",
    "project",
    "level",
    "service",
    "accounts",
    "project",
    "service",
    "account",
    "level",
    "granting",
    "service",
    "account",
    "user",
    "role",
    "user",
    "project",
    "gives",
    "user",
    "access",
    "service",
    "accounts",
    "project",
    "including",
    "service",
    "accounts",
    "may",
    "created",
    "future",
    "granting",
    "service",
    "account",
    "user",
    "role",
    "user",
    "specific",
    "service",
    "account",
    "gives",
    "user",
    "access",
    "service",
    "account",
    "please",
    "aware",
    "granting",
    "service",
    "account",
    "user",
    "role",
    "member",
    "users",
    "granted",
    "service",
    "account",
    "user",
    "role",
    "service",
    "account",
    "use",
    "indirectly",
    "access",
    "resources",
    "service",
    "account",
    "access",
    "happens",
    "user",
    "impersonates",
    "service",
    "account",
    "perform",
    "tasks",
    "using",
    "granted",
    "roles",
    "permissions",
    "known",
    "service",
    "account",
    "impersonation",
    "comes",
    "service",
    "account",
    "permissions",
    "also",
    "another",
    "method",
    "use",
    "called",
    "access",
    "scopes",
    "service",
    "account",
    "scopes",
    "legacy",
    "method",
    "specifying",
    "permissions",
    "instance",
    "used",
    "substitution",
    "iam",
    "roles",
    "used",
    "specifically",
    "default",
    "automatically",
    "created",
    "service",
    "accounts",
    "based",
    "enabled",
    "apis",
    "existence",
    "iam",
    "roles",
    "access",
    "scopes",
    "way",
    "granting",
    "permissions",
    "service",
    "accounts",
    "although",
    "primary",
    "way",
    "granting",
    "permissions",
    "must",
    "still",
    "set",
    "service",
    "account",
    "scopes",
    "configuring",
    "instance",
    "run",
    "service",
    "account",
    "however",
    "using",
    "custom",
    "service",
    "account",
    "using",
    "scopes",
    "rather",
    "using",
    "iam",
    "roles",
    "using",
    "default",
    "service",
    "account",
    "compute",
    "instance",
    "default",
    "using",
    "scopes",
    "instead",
    "iam",
    "roles",
    "wanted",
    "quickly",
    "touch",
    "service",
    "accounts",
    "used",
    "one",
    "way",
    "using",
    "service",
    "account",
    "attach",
    "service",
    "account",
    "resource",
    "want",
    "start",
    "job",
    "authenticates",
    "service",
    "account",
    "need",
    "attach",
    "service",
    "account",
    "resource",
    "run",
    "job",
    "bind",
    "service",
    "account",
    "resource",
    "way",
    "using",
    "service",
    "account",
    "directly",
    "impersonating",
    "service",
    "account",
    "explained",
    "little",
    "bit",
    "earlier",
    "granted",
    "require",
    "permissions",
    "user",
    "service",
    "directly",
    "impersonate",
    "identity",
    "service",
    "account",
    "common",
    "scenarios",
    "impersonate",
    "service",
    "account",
    "without",
    "requiring",
    "use",
    "downloaded",
    "external",
    "service",
    "account",
    "key",
    "well",
    "user",
    "may",
    "get",
    "artifacts",
    "signed",
    "google",
    "managed",
    "private",
    "key",
    "service",
    "account",
    "without",
    "ever",
    "actually",
    "retrieving",
    "credential",
    "service",
    "account",
    "advanced",
    "use",
    "case",
    "supported",
    "programmatic",
    "access",
    "although",
    "going",
    "covering",
    "best",
    "practices",
    "end",
    "section",
    "wanted",
    "go",
    "best",
    "practices",
    "service",
    "accounts",
    "specifically",
    "always",
    "look",
    "auditing",
    "service",
    "accounts",
    "keys",
    "using",
    "either",
    "service",
    "account",
    "dot",
    "keys",
    "dot",
    "list",
    "method",
    "logs",
    "viewer",
    "page",
    "console",
    "service",
    "accounts",
    "need",
    "external",
    "keys",
    "definitely",
    "delete",
    "always",
    "grant",
    "service",
    "account",
    "minimum",
    "set",
    "permissions",
    "required",
    "achieve",
    "goal",
    "service",
    "accounts",
    "also",
    "created",
    "specific",
    "service",
    "permissions",
    "required",
    "service",
    "finally",
    "comes",
    "implementing",
    "key",
    "rotation",
    "take",
    "advantage",
    "iam",
    "service",
    "account",
    "api",
    "get",
    "job",
    "done",
    "lesson",
    "service",
    "accounts",
    "mark",
    "lesson",
    "complete",
    "please",
    "join",
    "next",
    "one",
    "go",
    "console",
    "music",
    "welcome",
    "back",
    "demonstration",
    "going",
    "take",
    "tour",
    "diving",
    "various",
    "aspects",
    "working",
    "default",
    "service",
    "accounts",
    "going",
    "start",
    "fresh",
    "observing",
    "new",
    "service",
    "account",
    "automatically",
    "created",
    "along",
    "viewing",
    "scopes",
    "observing",
    "edit",
    "creating",
    "custom",
    "service",
    "accounts",
    "get",
    "little",
    "bit",
    "granular",
    "permissions",
    "assigned",
    "said",
    "let",
    "dive",
    "see",
    "top",
    "right",
    "hand",
    "corner",
    "logged",
    "tony",
    "bowtie",
    "ace",
    "looking",
    "top",
    "drop",
    "menu",
    "see",
    "project",
    "cat",
    "bow",
    "ties",
    "fall",
    "2021",
    "brand",
    "new",
    "project",
    "created",
    "specifically",
    "demo",
    "currently",
    "resources",
    "created",
    "along",
    "apis",
    "enabled",
    "want",
    "navigate",
    "iam",
    "going",
    "go",
    "left",
    "hand",
    "corner",
    "navigation",
    "menu",
    "going",
    "go",
    "admin",
    "iam",
    "expected",
    "members",
    "tony",
    "bowtie",
    "ace",
    "members",
    "go",
    "left",
    "hand",
    "menu",
    "service",
    "accounts",
    "see",
    "service",
    "accounts",
    "created",
    "order",
    "demonstrate",
    "default",
    "service",
    "account",
    "going",
    "go",
    "navigation",
    "menu",
    "go",
    "compute",
    "engine",
    "see",
    "compute",
    "engine",
    "api",
    "starting",
    "may",
    "take",
    "couple",
    "minutes",
    "get",
    "ready",
    "okay",
    "compute",
    "engine",
    "api",
    "enabled",
    "go",
    "back",
    "iam",
    "take",
    "look",
    "service",
    "accounts",
    "expected",
    "compute",
    "engine",
    "default",
    "service",
    "account",
    "create",
    "manually",
    "service",
    "account",
    "automatically",
    "created",
    "enabled",
    "compute",
    "engine",
    "api",
    "along",
    "api",
    "service",
    "agent",
    "compute",
    "engine",
    "service",
    "agent",
    "would",
    "happen",
    "various",
    "apis",
    "enabled",
    "well",
    "default",
    "service",
    "account",
    "want",
    "go",
    "back",
    "compute",
    "engine",
    "going",
    "go",
    "ahead",
    "create",
    "vm",
    "instance",
    "going",
    "click",
    "create",
    "going",
    "keep",
    "everything",
    "default",
    "except",
    "going",
    "change",
    "machine",
    "type",
    "e2",
    "medium",
    "e2",
    "micro",
    "going",
    "scroll",
    "says",
    "identity",
    "api",
    "access",
    "service",
    "account",
    "see",
    "compute",
    "engine",
    "default",
    "service",
    "account",
    "highlighted",
    "service",
    "accounts",
    "able",
    "select",
    "default",
    "service",
    "account",
    "service",
    "account",
    "access",
    "access",
    "scopes",
    "permissions",
    "available",
    "select",
    "remember",
    "access",
    "scopes",
    "legacy",
    "method",
    "specifying",
    "permissions",
    "google",
    "cloud",
    "access",
    "scopes",
    "select",
    "allow",
    "default",
    "access",
    "allow",
    "full",
    "access",
    "cloud",
    "apis",
    "set",
    "access",
    "api",
    "want",
    "click",
    "set",
    "access",
    "api",
    "second",
    "see",
    "access",
    "set",
    "permissions",
    "api",
    "difference",
    "access",
    "primitive",
    "roles",
    "looking",
    "grant",
    "access",
    "service",
    "account",
    "going",
    "grant",
    "access",
    "cloud",
    "storage",
    "capacity",
    "granted",
    "permissions",
    "service",
    "account",
    "going",
    "create",
    "instance",
    "simply",
    "clicking",
    "create",
    "button",
    "instance",
    "created",
    "want",
    "head",
    "cloud",
    "storage",
    "see",
    "exactly",
    "service",
    "account",
    "access",
    "going",
    "go",
    "navigation",
    "menu",
    "scroll",
    "click",
    "storage",
    "see",
    "created",
    "bucket",
    "advance",
    "called",
    "bow",
    "tie",
    "ink",
    "fall",
    "winter",
    "2012",
    "designs",
    "due",
    "bow",
    "tie",
    "ink",
    "bringing",
    "back",
    "old",
    "designs",
    "2012",
    "making",
    "relevant",
    "today",
    "within",
    "bucket",
    "files",
    "different",
    "design",
    "ideas",
    "best",
    "sellers",
    "back",
    "2012",
    "tony",
    "bowtie",
    "wanted",
    "fall",
    "winter",
    "2012",
    "collection",
    "new",
    "granted",
    "access",
    "default",
    "service",
    "account",
    "access",
    "view",
    "files",
    "order",
    "test",
    "going",
    "go",
    "back",
    "navigation",
    "menu",
    "go",
    "back",
    "compute",
    "engine",
    "going",
    "ssh",
    "instance",
    "sshed",
    "virtual",
    "machine",
    "wanted",
    "first",
    "check",
    "see",
    "running",
    "commands",
    "user",
    "account",
    "service",
    "account",
    "able",
    "easily",
    "checking",
    "configuration",
    "running",
    "command",
    "gcloud",
    "config",
    "list",
    "see",
    "current",
    "configuration",
    "showing",
    "service",
    "account",
    "member",
    "used",
    "run",
    "command",
    "project",
    "cat",
    "bow",
    "ties",
    "fall",
    "2021",
    "wanted",
    "run",
    "commands",
    "using",
    "tony",
    "bowtie",
    "ace",
    "user",
    "account",
    "simply",
    "run",
    "command",
    "gcloud",
    "auth",
    "login",
    "bring",
    "login",
    "process",
    "seen",
    "earlier",
    "course",
    "tony",
    "bowtie",
    "ace",
    "account",
    "since",
    "running",
    "commands",
    "using",
    "service",
    "account",
    "compute",
    "engine",
    "instance",
    "using",
    "permissions",
    "granted",
    "service",
    "account",
    "saw",
    "earlier",
    "since",
    "set",
    "storage",
    "scope",
    "service",
    "account",
    "read",
    "able",
    "see",
    "cloud",
    "storage",
    "bucket",
    "files",
    "within",
    "simply",
    "running",
    "gsutil",
    "command",
    "list",
    "contents",
    "bucket",
    "going",
    "type",
    "command",
    "gsutil",
    "ls",
    "list",
    "name",
    "bucket",
    "syntax",
    "would",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "followed",
    "name",
    "bucket",
    "would",
    "bowtie",
    "inc",
    "fw2012",
    "designs",
    "see",
    "able",
    "view",
    "files",
    "bucket",
    "working",
    "expected",
    "granted",
    "viewing",
    "permissions",
    "service",
    "account",
    "create",
    "files",
    "due",
    "lack",
    "permissions",
    "instance",
    "create",
    "file",
    "using",
    "command",
    "touch",
    "file",
    "one",
    "created",
    "file",
    "instance",
    "want",
    "copy",
    "file",
    "bucket",
    "going",
    "run",
    "gsutil",
    "command",
    "cp",
    "copy",
    "file",
    "1",
    "name",
    "file",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "along",
    "name",
    "bucket",
    "bow",
    "tie",
    "inc",
    "fw",
    "2012",
    "designs",
    "expected",
    "getting",
    "access",
    "denied",
    "exception",
    "prompt",
    "telling",
    "insufficient",
    "permissions",
    "shown",
    "create",
    "default",
    "service",
    "account",
    "give",
    "permissions",
    "using",
    "access",
    "scopes",
    "let",
    "create",
    "custom",
    "service",
    "account",
    "assign",
    "proper",
    "permissions",
    "read",
    "files",
    "cloud",
    "storage",
    "able",
    "write",
    "files",
    "cloud",
    "storage",
    "well",
    "going",
    "close",
    "tab",
    "going",
    "go",
    "back",
    "navigation",
    "menu",
    "go",
    "back",
    "iam",
    "go",
    "create",
    "new",
    "service",
    "account",
    "service",
    "accounts",
    "see",
    "default",
    "service",
    "account",
    "since",
    "want",
    "create",
    "custom",
    "one",
    "going",
    "go",
    "ahead",
    "go",
    "top",
    "click",
    "button",
    "says",
    "create",
    "service",
    "account",
    "prompted",
    "enter",
    "information",
    "regards",
    "details",
    "service",
    "account",
    "including",
    "service",
    "account",
    "name",
    "account",
    "id",
    "along",
    "description",
    "going",
    "call",
    "service",
    "account",
    "sa",
    "hyphen",
    "bowtie",
    "hyphen",
    "demo",
    "see",
    "automatically",
    "propagated",
    "service",
    "account",
    "id",
    "going",
    "give",
    "service",
    "account",
    "description",
    "storage",
    "read",
    "write",
    "access",
    "going",
    "click",
    "button",
    "create",
    "prompted",
    "grant",
    "permissions",
    "service",
    "account",
    "simply",
    "clicking",
    "drop",
    "selecting",
    "roll",
    "looking",
    "get",
    "little",
    "bit",
    "granular",
    "going",
    "simply",
    "type",
    "storage",
    "see",
    "coming",
    "granular",
    "roles",
    "opposed",
    "primitive",
    "roles",
    "access",
    "prior",
    "search",
    "going",
    "click",
    "storage",
    "object",
    "viewer",
    "read",
    "access",
    "cloud",
    "storage",
    "going",
    "add",
    "conditions",
    "going",
    "add",
    "another",
    "role",
    "time",
    "going",
    "add",
    "storage",
    "object",
    "creator",
    "permissions",
    "need",
    "read",
    "write",
    "access",
    "cloud",
    "storage",
    "simply",
    "click",
    "continue",
    "prompted",
    "add",
    "another",
    "user",
    "act",
    "service",
    "account",
    "discussed",
    "last",
    "lesson",
    "service",
    "accounts",
    "member",
    "resource",
    "notice",
    "option",
    "service",
    "account",
    "users",
    "role",
    "service",
    "account",
    "admins",
    "role",
    "discussed",
    "earlier",
    "service",
    "account",
    "men",
    "role",
    "ability",
    "grant",
    "users",
    "role",
    "service",
    "account",
    "user",
    "want",
    "going",
    "leave",
    "fields",
    "blank",
    "simply",
    "click",
    "done",
    "know",
    "last",
    "lesson",
    "talked",
    "creating",
    "custom",
    "keys",
    "authentication",
    "case",
    "hosting",
    "code",
    "premise",
    "another",
    "cloud",
    "wanted",
    "simply",
    "go",
    "actions",
    "menu",
    "click",
    "create",
    "key",
    "give",
    "option",
    "creating",
    "private",
    "key",
    "either",
    "using",
    "json",
    "p12",
    "format",
    "creating",
    "keys",
    "going",
    "simply",
    "click",
    "cancel",
    "order",
    "apply",
    "service",
    "account",
    "vm",
    "instance",
    "going",
    "go",
    "back",
    "navigation",
    "menu",
    "go",
    "back",
    "compute",
    "engine",
    "order",
    "change",
    "service",
    "account",
    "currently",
    "assigned",
    "instance",
    "going",
    "go",
    "ahead",
    "check",
    "instance",
    "click",
    "stop",
    "please",
    "note",
    "order",
    "change",
    "service",
    "accounts",
    "instance",
    "must",
    "stop",
    "first",
    "edit",
    "service",
    "account",
    "instance",
    "stopped",
    "going",
    "drill",
    "instance",
    "one",
    "going",
    "click",
    "edit",
    "going",
    "scroll",
    "bottom",
    "bottom",
    "find",
    "service",
    "account",
    "field",
    "clicking",
    "drop",
    "find",
    "custom",
    "service",
    "account",
    "bow",
    "tie",
    "demo",
    "want",
    "select",
    "simply",
    "click",
    "save",
    "selected",
    "new",
    "service",
    "account",
    "used",
    "vm",
    "instance",
    "start",
    "instance",
    "test",
    "permissions",
    "granted",
    "quick",
    "note",
    "wanted",
    "bring",
    "attention",
    "external",
    "ip",
    "whenever",
    "stopping",
    "starting",
    "instance",
    "ephemeral",
    "ip",
    "words",
    "assigned",
    "static",
    "ip",
    "vm",
    "instance",
    "receive",
    "new",
    "ip",
    "address",
    "getting",
    "lot",
    "deeper",
    "detail",
    "compute",
    "engine",
    "section",
    "course",
    "going",
    "ssh",
    "instance",
    "going",
    "run",
    "gsutil",
    "command",
    "previously",
    "list",
    "files",
    "bucket",
    "going",
    "run",
    "command",
    "gsutil",
    "ls",
    "list",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "bow",
    "tie",
    "inc",
    "fw",
    "2012",
    "designs",
    "see",
    "able",
    "read",
    "files",
    "bucket",
    "difference",
    "permissions",
    "granted",
    "service",
    "account",
    "able",
    "write",
    "files",
    "cloud",
    "storage",
    "order",
    "test",
    "going",
    "use",
    "touch",
    "command",
    "going",
    "name",
    "file",
    "file2",
    "going",
    "copy",
    "file",
    "cloud",
    "storage",
    "bucket",
    "using",
    "command",
    "gsutil",
    "cp",
    "file2",
    "bucket",
    "name",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "bow",
    "tie",
    "inc",
    "fw",
    "2012",
    "designs",
    "expected",
    "file",
    "copied",
    "successfully",
    "permissions",
    "write",
    "cloud",
    "storage",
    "end",
    "demonstration",
    "wanted",
    "quickly",
    "go",
    "exactly",
    "create",
    "service",
    "accounts",
    "using",
    "command",
    "line",
    "going",
    "close",
    "tab",
    "going",
    "head",
    "top",
    "right",
    "hand",
    "corner",
    "activate",
    "cloud",
    "shell",
    "going",
    "make",
    "window",
    "little",
    "bit",
    "bigger",
    "order",
    "view",
    "service",
    "accounts",
    "currently",
    "going",
    "run",
    "command",
    "gcloud",
    "iam",
    "service",
    "dash",
    "accounts",
    "list",
    "expected",
    "compute",
    "engine",
    "default",
    "service",
    "account",
    "along",
    "custom",
    "service",
    "account",
    "created",
    "earlier",
    "called",
    "sa",
    "bowtie",
    "demo",
    "displaying",
    "order",
    "verify",
    "going",
    "go",
    "iam",
    "service",
    "accounts",
    "see",
    "reflecting",
    "exactly",
    "console",
    "order",
    "create",
    "new",
    "service",
    "account",
    "using",
    "command",
    "line",
    "going",
    "run",
    "command",
    "gcloud",
    "iam",
    "service",
    "accounts",
    "create",
    "name",
    "service",
    "account",
    "going",
    "call",
    "bowtie",
    "along",
    "display",
    "name",
    "essay",
    "tony",
    "bowtie",
    "well",
    "going",
    "hit",
    "enter",
    "service",
    "account",
    "created",
    "run",
    "command",
    "gcloud",
    "service",
    "accounts",
    "list",
    "see",
    "new",
    "service",
    "account",
    "well",
    "refresh",
    "console",
    "see",
    "reflecting",
    "created",
    "new",
    "service",
    "account",
    "need",
    "assign",
    "permissions",
    "order",
    "us",
    "able",
    "use",
    "go",
    "iam",
    "console",
    "see",
    "service",
    "account",
    "assigned",
    "permissions",
    "order",
    "going",
    "simply",
    "run",
    "command",
    "gcloud",
    "projects",
    "add",
    "dash",
    "adding",
    "policy",
    "binding",
    "name",
    "project",
    "catbow",
    "ties",
    "fall",
    "2021",
    "need",
    "add",
    "member",
    "new",
    "service",
    "account",
    "email",
    "address",
    "along",
    "role",
    "storage",
    "object",
    "viewer",
    "going",
    "hit",
    "enter",
    "see",
    "member",
    "sa",
    "tony",
    "bowtie",
    "assigned",
    "storage",
    "object",
    "viewer",
    "role",
    "wanted",
    "grant",
    "roles",
    "service",
    "account",
    "well",
    "refresh",
    "see",
    "console",
    "reflects",
    "exactly",
    "order",
    "use",
    "account",
    "instance",
    "going",
    "first",
    "stop",
    "instance",
    "attach",
    "service",
    "account",
    "start",
    "instance",
    "going",
    "go",
    "cloud",
    "shell",
    "going",
    "clear",
    "screen",
    "going",
    "paste",
    "command",
    "gcloud",
    "compute",
    "instances",
    "stop",
    "name",
    "instance",
    "along",
    "zone",
    "instance",
    "stopped",
    "add",
    "surface",
    "account",
    "instance",
    "going",
    "use",
    "command",
    "gcloud",
    "compute",
    "instances",
    "set",
    "service",
    "account",
    "instance",
    "1",
    "along",
    "zone",
    "service",
    "account",
    "email",
    "address",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "successfully",
    "added",
    "done",
    "start",
    "instance",
    "using",
    "command",
    "gcloud",
    "compute",
    "instances",
    "start",
    "along",
    "instance",
    "name",
    "zone",
    "go",
    "navigation",
    "menu",
    "go",
    "compute",
    "engine",
    "drill",
    "instance",
    "scroll",
    "bottom",
    "able",
    "see",
    "new",
    "service",
    "account",
    "added",
    "great",
    "demonstration",
    "want",
    "add",
    "different",
    "service",
    "accounts",
    "different",
    "applications",
    "different",
    "instances",
    "even",
    "different",
    "resources",
    "pretty",
    "much",
    "wanted",
    "cover",
    "demonstration",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "going",
    "dive",
    "cloud",
    "identity",
    "google",
    "identity",
    "service",
    "offering",
    "google",
    "cloud",
    "maximizes",
    "end",
    "user",
    "efficiency",
    "protect",
    "company",
    "data",
    "much",
    "cloud",
    "identity",
    "said",
    "identity",
    "service",
    "solution",
    "centrally",
    "manages",
    "users",
    "groups",
    "would",
    "sole",
    "system",
    "authentication",
    "provides",
    "single",
    "experience",
    "employees",
    "organization",
    "used",
    "internal",
    "external",
    "applications",
    "cloud",
    "identity",
    "also",
    "gives",
    "control",
    "accounts",
    "used",
    "organization",
    "example",
    "developers",
    "organization",
    "use",
    "personal",
    "accounts",
    "gmail",
    "accounts",
    "accounts",
    "outside",
    "control",
    "adopt",
    "cloud",
    "identity",
    "manage",
    "access",
    "compliance",
    "across",
    "users",
    "domain",
    "adopt",
    "cloud",
    "identity",
    "create",
    "cloud",
    "identity",
    "account",
    "users",
    "groups",
    "use",
    "iam",
    "manage",
    "access",
    "google",
    "cloud",
    "resources",
    "cloud",
    "identity",
    "account",
    "also",
    "configure",
    "cloud",
    "identity",
    "federate",
    "identities",
    "google",
    "identity",
    "providers",
    "active",
    "directory",
    "azure",
    "active",
    "directory",
    "getting",
    "little",
    "bit",
    "later",
    "comes",
    "cloud",
    "identity",
    "gives",
    "much",
    "user",
    "group",
    "management",
    "provides",
    "slew",
    "features",
    "device",
    "management",
    "security",
    "single",
    "reporting",
    "directory",
    "management",
    "diving",
    "deeper",
    "one",
    "features",
    "cloud",
    "identity",
    "starting",
    "device",
    "management",
    "lets",
    "people",
    "organization",
    "access",
    "work",
    "accounts",
    "mobile",
    "devices",
    "keeping",
    "organization",
    "data",
    "secure",
    "today",
    "world",
    "employees",
    "want",
    "access",
    "business",
    "applications",
    "wherever",
    "whether",
    "home",
    "work",
    "even",
    "traveling",
    "many",
    "even",
    "want",
    "use",
    "devices",
    "also",
    "known",
    "bring",
    "device",
    "byod",
    "short",
    "using",
    "mobile",
    "device",
    "management",
    "several",
    "ways",
    "provide",
    "business",
    "applications",
    "employees",
    "need",
    "personal",
    "devices",
    "implementing",
    "policies",
    "keep",
    "corporate",
    "data",
    "safe",
    "create",
    "white",
    "list",
    "approved",
    "applications",
    "users",
    "access",
    "corporate",
    "data",
    "securely",
    "applications",
    "enforce",
    "work",
    "profiles",
    "android",
    "devices",
    "requiring",
    "managed",
    "applications",
    "ios",
    "devices",
    "policies",
    "also",
    "pushed",
    "devices",
    "protect",
    "corporate",
    "data",
    "identities",
    "well",
    "keeping",
    "inventory",
    "devices",
    "corporate",
    "data",
    "present",
    "devices",
    "either",
    "longer",
    "used",
    "corporate",
    "use",
    "stolen",
    "device",
    "wiped",
    "corporate",
    "data",
    "device",
    "management",
    "also",
    "gives",
    "organizations",
    "power",
    "enforce",
    "passcodes",
    "well",
    "auditing",
    "moving",
    "security",
    "component",
    "cloud",
    "identity",
    "verification",
    "steps",
    "explained",
    "earlier",
    "verification",
    "sv",
    "security",
    "feature",
    "requires",
    "users",
    "verify",
    "identity",
    "something",
    "know",
    "password",
    "plus",
    "something",
    "physical",
    "key",
    "access",
    "code",
    "anything",
    "security",
    "keys",
    "google",
    "prompt",
    "authenticator",
    "app",
    "backup",
    "codes",
    "cloud",
    "identity",
    "helps",
    "applying",
    "security",
    "best",
    "practices",
    "along",
    "able",
    "deploy",
    "verification",
    "whole",
    "company",
    "along",
    "enforcement",
    "controls",
    "also",
    "manage",
    "passwords",
    "make",
    "sure",
    "meeting",
    "enforced",
    "password",
    "requirements",
    "automatically",
    "single",
    "users",
    "access",
    "many",
    "applications",
    "without",
    "enter",
    "username",
    "password",
    "application",
    "single",
    "also",
    "known",
    "sso",
    "provide",
    "single",
    "point",
    "authentication",
    "identity",
    "provider",
    "also",
    "known",
    "idp",
    "short",
    "set",
    "sso",
    "using",
    "google",
    "identity",
    "provider",
    "access",
    "slew",
    "applications",
    "well",
    "custom",
    "applications",
    "also",
    "access",
    "centralized",
    "dashboard",
    "conveniently",
    "accessing",
    "applications",
    "lisa",
    "logs",
    "employee",
    "credentials",
    "access",
    "many",
    "cloud",
    "applications",
    "bowtie",
    "inc",
    "department",
    "approved",
    "catalog",
    "sso",
    "applications",
    "increase",
    "security",
    "productivity",
    "lisa",
    "bowtie",
    "inc",
    "lisa",
    "wo",
    "enter",
    "separate",
    "username",
    "password",
    "separate",
    "applications",
    "getting",
    "reporting",
    "covers",
    "audit",
    "logs",
    "logins",
    "groups",
    "devices",
    "even",
    "tokens",
    "even",
    "able",
    "export",
    "logs",
    "bigquery",
    "analysis",
    "create",
    "reports",
    "logs",
    "cover",
    "security",
    "applications",
    "activity",
    "moving",
    "last",
    "component",
    "cloud",
    "identity",
    "directory",
    "management",
    "provides",
    "profile",
    "information",
    "users",
    "organization",
    "email",
    "group",
    "addresses",
    "shared",
    "external",
    "contacts",
    "directory",
    "using",
    "google",
    "cloud",
    "directory",
    "sync",
    "gcds",
    "synchronize",
    "data",
    "google",
    "account",
    "microsoft",
    "active",
    "directory",
    "ldap",
    "server",
    "gcds",
    "migrate",
    "content",
    "email",
    "calendar",
    "events",
    "files",
    "google",
    "account",
    "gcds",
    "used",
    "synchronize",
    "users",
    "groups",
    "shared",
    "contacts",
    "match",
    "information",
    "ldap",
    "server",
    "could",
    "active",
    "directory",
    "server",
    "azure",
    "active",
    "directory",
    "domain",
    "getting",
    "deeper",
    "google",
    "cloud",
    "directory",
    "sync",
    "like",
    "touch",
    "active",
    "directory",
    "minute",
    "active",
    "directory",
    "common",
    "directory",
    "service",
    "developed",
    "microsoft",
    "cornerstone",
    "big",
    "corporate",
    "environments",
    "authenticates",
    "authorizes",
    "users",
    "computers",
    "windows",
    "domain",
    "type",
    "network",
    "signing",
    "enforcing",
    "security",
    "policies",
    "computers",
    "installing",
    "updating",
    "software",
    "necessary",
    "see",
    "diagram",
    "active",
    "directory",
    "forest",
    "contains",
    "active",
    "directory",
    "domain",
    "active",
    "directory",
    "federation",
    "services",
    "active",
    "directory",
    "forest",
    "hierarchical",
    "structure",
    "active",
    "directory",
    "active",
    "directory",
    "domain",
    "responsible",
    "storing",
    "information",
    "members",
    "domain",
    "including",
    "devices",
    "users",
    "verifies",
    "credentials",
    "defines",
    "access",
    "rights",
    "active",
    "directory",
    "federation",
    "services",
    "adfs",
    "single",
    "service",
    "federation",
    "means",
    "linking",
    "person",
    "electronic",
    "identity",
    "attributes",
    "stored",
    "across",
    "multiple",
    "distinct",
    "identity",
    "management",
    "systems",
    "think",
    "subset",
    "sso",
    "relates",
    "authentication",
    "technologies",
    "used",
    "federated",
    "identity",
    "include",
    "common",
    "terms",
    "may",
    "hear",
    "others",
    "industry",
    "use",
    "time",
    "time",
    "saml",
    "stands",
    "security",
    "assertion",
    "markup",
    "language",
    "oauth",
    "open",
    "id",
    "even",
    "security",
    "tokens",
    "simple",
    "web",
    "tokens",
    "json",
    "web",
    "tokens",
    "saml",
    "assertions",
    "identities",
    "already",
    "environment",
    "live",
    "active",
    "directory",
    "need",
    "way",
    "tie",
    "identities",
    "cloud",
    "would",
    "use",
    "google",
    "cloud",
    "directory",
    "sync",
    "automatically",
    "provision",
    "users",
    "groups",
    "active",
    "directory",
    "cloud",
    "identity",
    "g",
    "suite",
    "google",
    "cloud",
    "directory",
    "sync",
    "free",
    "google",
    "provided",
    "tool",
    "implements",
    "synchronization",
    "process",
    "run",
    "google",
    "cloud",
    "environment",
    "synchronization",
    "one",
    "way",
    "active",
    "directory",
    "remains",
    "source",
    "truth",
    "cloud",
    "identity",
    "g",
    "suite",
    "uses",
    "active",
    "directory",
    "federation",
    "services",
    "adfs",
    "single",
    "existing",
    "corporate",
    "applications",
    "sas",
    "services",
    "continue",
    "use",
    "adfs",
    "identity",
    "provider",
    "know",
    "may",
    "review",
    "advanced",
    "topic",
    "important",
    "topic",
    "know",
    "google",
    "cloud",
    "directory",
    "sync",
    "big",
    "part",
    "cloud",
    "identity",
    "common",
    "way",
    "used",
    "many",
    "corporate",
    "environments",
    "sync",
    "active",
    "directory",
    "ldap",
    "server",
    "google",
    "cloud",
    "especially",
    "want",
    "keep",
    "active",
    "directory",
    "single",
    "source",
    "truth",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "cloud",
    "identity",
    "google",
    "cloud",
    "directory",
    "sync",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "wanted",
    "close",
    "section",
    "briefly",
    "going",
    "best",
    "practices",
    "follow",
    "working",
    "identity",
    "access",
    "management",
    "phrase",
    "discussed",
    "beginning",
    "lesson",
    "continuously",
    "come",
    "exam",
    "principle",
    "least",
    "privilege",
    "would",
    "apply",
    "minimal",
    "access",
    "level",
    "required",
    "needed",
    "done",
    "done",
    "using",
    "predefined",
    "roles",
    "granular",
    "level",
    "role",
    "using",
    "primitive",
    "roles",
    "wide",
    "scoped",
    "roles",
    "applied",
    "whole",
    "project",
    "roles",
    "also",
    "granted",
    "smallest",
    "scope",
    "necessary",
    "instance",
    "assigning",
    "somebody",
    "permissions",
    "needed",
    "managing",
    "compute",
    "instances",
    "assigning",
    "compute",
    "instance",
    "admin",
    "role",
    "might",
    "sufficient",
    "need",
    "opposed",
    "assigning",
    "compute",
    "instance",
    "role",
    "full",
    "control",
    "compute",
    "engine",
    "instance",
    "resources",
    "comes",
    "child",
    "resources",
    "restrict",
    "access",
    "granted",
    "parent",
    "always",
    "remember",
    "check",
    "policy",
    "granted",
    "every",
    "resource",
    "make",
    "sure",
    "understand",
    "hierarchical",
    "inheritance",
    "also",
    "want",
    "make",
    "sure",
    "restrict",
    "access",
    "members",
    "abilities",
    "create",
    "manage",
    "service",
    "accounts",
    "users",
    "granted",
    "service",
    "account",
    "actor",
    "role",
    "service",
    "account",
    "access",
    "resources",
    "service",
    "account",
    "access",
    "granting",
    "someone",
    "owner",
    "role",
    "used",
    "caution",
    "access",
    "modify",
    "almost",
    "resources",
    "including",
    "iam",
    "policies",
    "billing",
    "granting",
    "editor",
    "role",
    "might",
    "sufficient",
    "needs",
    "using",
    "primitive",
    "roles",
    "dealing",
    "resource",
    "hierarchy",
    "make",
    "easy",
    "structure",
    "environment",
    "look",
    "mirroring",
    "google",
    "cloud",
    "resource",
    "hierarchy",
    "structure",
    "organizational",
    "structure",
    "words",
    "google",
    "cloud",
    "resource",
    "hierarchy",
    "reflect",
    "company",
    "organized",
    "also",
    "use",
    "projects",
    "group",
    "resources",
    "share",
    "trust",
    "boundary",
    "well",
    "setting",
    "policies",
    "organization",
    "level",
    "project",
    "level",
    "rather",
    "resource",
    "level",
    "going",
    "back",
    "discussed",
    "earlier",
    "principle",
    "least",
    "privilege",
    "use",
    "guideline",
    "grant",
    "iam",
    "roles",
    "give",
    "least",
    "amount",
    "access",
    "necessary",
    "resources",
    "granting",
    "roles",
    "across",
    "multiple",
    "projects",
    "recommended",
    "grant",
    "folder",
    "level",
    "instead",
    "project",
    "level",
    "diving",
    "back",
    "service",
    "accounts",
    "separate",
    "trust",
    "boundary",
    "always",
    "applied",
    "given",
    "application",
    "words",
    "create",
    "new",
    "service",
    "account",
    "multiple",
    "components",
    "involved",
    "application",
    "also",
    "want",
    "make",
    "sure",
    "delete",
    "service",
    "accounts",
    "use",
    "running",
    "instances",
    "application",
    "likely",
    "fail",
    "want",
    "schedule",
    "plan",
    "time",
    "avoid",
    "outages",
    "earlier",
    "section",
    "discussed",
    "service",
    "account",
    "keys",
    "interact",
    "google",
    "cloud",
    "main",
    "authentication",
    "mechanism",
    "used",
    "keys",
    "want",
    "make",
    "sure",
    "user",
    "managed",
    "keys",
    "rotated",
    "periodically",
    "avoid",
    "compromised",
    "rotate",
    "key",
    "creating",
    "new",
    "key",
    "switching",
    "applications",
    "use",
    "new",
    "key",
    "deleting",
    "old",
    "key",
    "sure",
    "create",
    "new",
    "key",
    "first",
    "deleting",
    "old",
    "one",
    "result",
    "parts",
    "even",
    "entire",
    "application",
    "failing",
    "also",
    "working",
    "service",
    "account",
    "keys",
    "always",
    "good",
    "practice",
    "name",
    "service",
    "keys",
    "reflect",
    "use",
    "keys",
    "permissions",
    "keys",
    "know",
    "used",
    "looking",
    "giving",
    "access",
    "service",
    "accounts",
    "want",
    "make",
    "sure",
    "truly",
    "need",
    "access",
    "ones",
    "others",
    "environment",
    "restricted",
    "avoid",
    "misuse",
    "comes",
    "keeping",
    "service",
    "account",
    "keys",
    "safe",
    "ca",
    "stress",
    "enough",
    "never",
    "want",
    "check",
    "keys",
    "source",
    "code",
    "leave",
    "downloads",
    "directory",
    "prime",
    "way",
    "getting",
    "keys",
    "compromised",
    "compromising",
    "entire",
    "environment",
    "accessed",
    "publicly",
    "touched",
    "bit",
    "auditing",
    "really",
    "gone",
    "detail",
    "going",
    "later",
    "course",
    "touching",
    "best",
    "practices",
    "want",
    "sure",
    "check",
    "cloud",
    "audit",
    "logs",
    "regularly",
    "audit",
    "policy",
    "changes",
    "whenever",
    "edit",
    "iam",
    "policies",
    "log",
    "generated",
    "records",
    "change",
    "always",
    "want",
    "periodically",
    "check",
    "logs",
    "make",
    "sure",
    "changes",
    "security",
    "scope",
    "also",
    "want",
    "check",
    "see",
    "editing",
    "permissions",
    "iam",
    "policies",
    "make",
    "sure",
    "hold",
    "rights",
    "point",
    "want",
    "restrict",
    "ability",
    "edit",
    "policies",
    "audit",
    "logs",
    "generated",
    "want",
    "export",
    "cloud",
    "storage",
    "able",
    "store",
    "long",
    "term",
    "retention",
    "logs",
    "typically",
    "held",
    "weeks",
    "years",
    "getting",
    "back",
    "service",
    "account",
    "keys",
    "service",
    "account",
    "key",
    "access",
    "periodically",
    "audited",
    "viewing",
    "misuse",
    "unauthorized",
    "access",
    "lastly",
    "audit",
    "logs",
    "also",
    "restricted",
    "need",
    "access",
    "others",
    "permissions",
    "view",
    "done",
    "adding",
    "role",
    "able",
    "view",
    "logs",
    "touching",
    "policy",
    "management",
    "want",
    "grant",
    "access",
    "projects",
    "organization",
    "using",
    "organization",
    "level",
    "policy",
    "also",
    "want",
    "grant",
    "roles",
    "google",
    "group",
    "instead",
    "individual",
    "users",
    "easier",
    "add",
    "remove",
    "members",
    "google",
    "group",
    "instead",
    "updating",
    "im",
    "policy",
    "finally",
    "need",
    "grant",
    "multiple",
    "roles",
    "task",
    "create",
    "google",
    "group",
    "lot",
    "easier",
    "grant",
    "roles",
    "group",
    "add",
    "users",
    "group",
    "opposed",
    "adding",
    "roles",
    "individual",
    "user",
    "wanted",
    "cover",
    "short",
    "yet",
    "important",
    "lesson",
    "best",
    "practices",
    "comes",
    "iam",
    "know",
    "exciting",
    "topic",
    "become",
    "extremely",
    "necessary",
    "dealing",
    "managing",
    "users",
    "groups",
    "policies",
    "environments",
    "require",
    "use",
    "iam",
    "securely",
    "please",
    "keep",
    "mind",
    "whenever",
    "working",
    "environment",
    "help",
    "grant",
    "proper",
    "permissions",
    "comes",
    "different",
    "topics",
    "highly",
    "recommend",
    "take",
    "break",
    "grab",
    "tea",
    "coffee",
    "moving",
    "next",
    "section",
    "mark",
    "lesson",
    "complete",
    "whenever",
    "ready",
    "please",
    "join",
    "next",
    "section",
    "music",
    "welcome",
    "back",
    "wanted",
    "make",
    "easy",
    "possible",
    "students",
    "background",
    "networking",
    "networking",
    "knowledge",
    "general",
    "wanted",
    "add",
    "quick",
    "networking",
    "refresher",
    "kick",
    "networking",
    "section",
    "course",
    "said",
    "let",
    "dive",
    "internet",
    "computers",
    "standalone",
    "capabilities",
    "send",
    "emails",
    "transfer",
    "files",
    "share",
    "information",
    "fast",
    "forward",
    "time",
    "people",
    "started",
    "connect",
    "computers",
    "together",
    "share",
    "able",
    "things",
    "modern",
    "networks",
    "today",
    "part",
    "network",
    "able",
    "identify",
    "computer",
    "know",
    "send",
    "receive",
    "files",
    "problem",
    "solved",
    "using",
    "address",
    "identify",
    "computer",
    "network",
    "like",
    "humans",
    "use",
    "street",
    "address",
    "identify",
    "live",
    "mail",
    "packages",
    "delivered",
    "ip",
    "address",
    "used",
    "identify",
    "computer",
    "device",
    "network",
    "communication",
    "machines",
    "done",
    "use",
    "ip",
    "address",
    "numerical",
    "label",
    "assigned",
    "device",
    "connected",
    "computer",
    "network",
    "uses",
    "internet",
    "protocol",
    "communication",
    "also",
    "known",
    "ip",
    "short",
    "system",
    "work",
    "communication",
    "system",
    "put",
    "place",
    "defined",
    "network",
    "would",
    "function",
    "system",
    "put",
    "together",
    "consistent",
    "model",
    "protocol",
    "layers",
    "defining",
    "interoperability",
    "network",
    "devices",
    "software",
    "layers",
    "standardize",
    "different",
    "protocols",
    "would",
    "communicate",
    "stack",
    "stack",
    "referred",
    "open",
    "systems",
    "interconnection",
    "model",
    "may",
    "hear",
    "many",
    "refer",
    "seven",
    "layer",
    "osi",
    "model",
    "deep",
    "dive",
    "networking",
    "course",
    "feel",
    "need",
    "cover",
    "necessary",
    "understanding",
    "elements",
    "taught",
    "course",
    "wanting",
    "learn",
    "osi",
    "model",
    "layers",
    "within",
    "please",
    "check",
    "links",
    "included",
    "lesson",
    "text",
    "lesson",
    "next",
    "covering",
    "specific",
    "layers",
    "protocols",
    "highlighted",
    "help",
    "understand",
    "networking",
    "concepts",
    "course",
    "bit",
    "better",
    "clarity",
    "covering",
    "layer",
    "3",
    "network",
    "layer",
    "layer",
    "4",
    "transport",
    "layer",
    "layer",
    "7",
    "application",
    "layer",
    "first",
    "covering",
    "layer",
    "3",
    "networking",
    "layer",
    "along",
    "internet",
    "protocol",
    "two",
    "versions",
    "internet",
    "protocol",
    "managed",
    "globally",
    "regional",
    "internet",
    "registries",
    "also",
    "known",
    "rir",
    "first",
    "one",
    "ipv4",
    "original",
    "version",
    "internet",
    "protocol",
    "first",
    "came",
    "scene",
    "1981",
    "second",
    "version",
    "ipv6",
    "newer",
    "version",
    "designed",
    "2017",
    "deal",
    "problem",
    "ipv4",
    "address",
    "exhaustion",
    "meaning",
    "amount",
    "usable",
    "ips",
    "slowly",
    "used",
    "covering",
    "versions",
    "internet",
    "protocol",
    "little",
    "bit",
    "depth",
    "let",
    "first",
    "dive",
    "ipv",
    "version",
    "ipv4",
    "read",
    "human",
    "readable",
    "notation",
    "represented",
    "dotted",
    "decimal",
    "notation",
    "consisting",
    "four",
    "numbers",
    "ranging",
    "0",
    "255",
    "separated",
    "dots",
    "part",
    "dots",
    "represents",
    "group",
    "8",
    "bits",
    "also",
    "known",
    "octet",
    "valid",
    "range",
    "ip",
    "address",
    "starts",
    "ends",
    "would",
    "give",
    "total",
    "number",
    "billion",
    "ip",
    "addresses",
    "range",
    "viewed",
    "extremely",
    "large",
    "back",
    "number",
    "ip",
    "addresses",
    "available",
    "quickly",
    "dwindling",
    "due",
    "many",
    "ipconnected",
    "devices",
    "today",
    "new",
    "addressing",
    "architecture",
    "introduced",
    "called",
    "classful",
    "addressing",
    "address",
    "split",
    "smaller",
    "ranges",
    "originally",
    "assigned",
    "needed",
    "ip",
    "address",
    "one",
    "registries",
    "noted",
    "given",
    "ip",
    "address",
    "typically",
    "made",
    "two",
    "separate",
    "components",
    "first",
    "part",
    "address",
    "used",
    "identify",
    "network",
    "address",
    "part",
    "part",
    "comes",
    "afterwards",
    "used",
    "specify",
    "specific",
    "host",
    "within",
    "network",
    "first",
    "part",
    "assigned",
    "business",
    "registries",
    "second",
    "part",
    "like",
    "ip",
    "addresses",
    "assigned",
    "smaller",
    "ranges",
    "explained",
    "earlier",
    "called",
    "classes",
    "first",
    "range",
    "classes",
    "class",
    "started",
    "ended",
    "would",
    "give",
    "total",
    "number",
    "billion",
    "addresses",
    "128",
    "different",
    "networks",
    "class",
    "ip",
    "addresses",
    "support",
    "16",
    "million",
    "hosts",
    "per",
    "network",
    "assigned",
    "addresses",
    "class",
    "fixed",
    "value",
    "first",
    "octet",
    "second",
    "third",
    "fourth",
    "octet",
    "free",
    "business",
    "assign",
    "choose",
    "class",
    "ip",
    "addresses",
    "used",
    "huge",
    "networks",
    "like",
    "deployed",
    "internet",
    "service",
    "providers",
    "ips",
    "started",
    "dwindle",
    "many",
    "companies",
    "return",
    "class",
    "network",
    "blocks",
    "back",
    "registries",
    "assist",
    "extending",
    "addressing",
    "capacity",
    "next",
    "range",
    "class",
    "b",
    "half",
    "size",
    "class",
    "network",
    "class",
    "b",
    "network",
    "range",
    "started",
    "one",
    "end",
    "carries",
    "total",
    "number",
    "1",
    "billion",
    "ip",
    "addresses",
    "16",
    "000",
    "networks",
    "fixed",
    "value",
    "class",
    "first",
    "second",
    "octet",
    "third",
    "fourth",
    "octet",
    "done",
    "like",
    "ip",
    "addresses",
    "class",
    "used",
    "medium",
    "large",
    "size",
    "networks",
    "enterprises",
    "organizations",
    "next",
    "range",
    "class",
    "c",
    "half",
    "size",
    "class",
    "b",
    "network",
    "class",
    "c",
    "network",
    "range",
    "starts",
    "192",
    "ends",
    "carries",
    "total",
    "half",
    "billion",
    "addresses",
    "two",
    "million",
    "networks",
    "support",
    "256",
    "hosts",
    "fixed",
    "value",
    "class",
    "first",
    "second",
    "third",
    "octet",
    "fourth",
    "done",
    "like",
    "ip",
    "addresses",
    "class",
    "common",
    "class",
    "used",
    "small",
    "business",
    "home",
    "networks",
    "couple",
    "classes",
    "commonly",
    "used",
    "called",
    "class",
    "class",
    "e",
    "beyond",
    "scope",
    "course",
    "wo",
    "discussing",
    "way",
    "used",
    "assign",
    "public",
    "ip",
    "addresses",
    "devices",
    "internet",
    "allowed",
    "communication",
    "devices",
    "problem",
    "classful",
    "addressing",
    "businesses",
    "needed",
    "larger",
    "address",
    "blocks",
    "class",
    "c",
    "network",
    "provided",
    "received",
    "class",
    "b",
    "block",
    "cases",
    "much",
    "larger",
    "required",
    "thing",
    "happened",
    "requiring",
    "ips",
    "class",
    "b",
    "getting",
    "class",
    "network",
    "block",
    "problem",
    "introduced",
    "lot",
    "wasted",
    "ips",
    "real",
    "middle",
    "ground",
    "way",
    "address",
    "publicly",
    "routable",
    "ips",
    "certain",
    "ranges",
    "allocated",
    "private",
    "use",
    "designed",
    "used",
    "private",
    "networks",
    "whether",
    "cloud",
    "designed",
    "public",
    "use",
    "also",
    "need",
    "communicate",
    "public",
    "internet",
    "private",
    "ip",
    "address",
    "spaces",
    "standardized",
    "using",
    "rfc",
    "standard",
    "1918",
    "ip",
    "addresses",
    "designed",
    "private",
    "use",
    "used",
    "anywhere",
    "like",
    "long",
    "still",
    "kept",
    "private",
    "chances",
    "network",
    "come",
    "across",
    "whether",
    "cloud",
    "provider",
    "home",
    "network",
    "public",
    "use",
    "one",
    "classes",
    "define",
    "network",
    "split",
    "three",
    "ranges",
    "first",
    "one",
    "single",
    "class",
    "ending",
    "class",
    "b",
    "range",
    "ranging",
    "dot",
    "lastly",
    "class",
    "c",
    "ranging",
    "networks",
    "use",
    "private",
    "ips",
    "public",
    "internet",
    "process",
    "would",
    "use",
    "process",
    "called",
    "network",
    "address",
    "translation",
    "nat",
    "short",
    "covering",
    "different",
    "lesson",
    "later",
    "section",
    "method",
    "classful",
    "addressing",
    "replaced",
    "something",
    "bit",
    "efficient",
    "network",
    "blocks",
    "defined",
    "granularly",
    "done",
    "due",
    "internet",
    "running",
    "ipv4",
    "addresses",
    "needed",
    "allocate",
    "ips",
    "efficiently",
    "method",
    "called",
    "classless",
    "inter",
    "domain",
    "routing",
    "cider",
    "short",
    "cider",
    "based",
    "networks",
    "limited",
    "three",
    "classes",
    "networks",
    "class",
    "b",
    "c",
    "removed",
    "something",
    "efficient",
    "allow",
    "create",
    "networks",
    "one",
    "ranges",
    "cider",
    "ranges",
    "represented",
    "starting",
    "ip",
    "address",
    "called",
    "network",
    "address",
    "followed",
    "called",
    "prefix",
    "slash",
    "number",
    "slash",
    "number",
    "represents",
    "size",
    "network",
    "bigger",
    "number",
    "smaller",
    "network",
    "smaller",
    "number",
    "bigger",
    "network",
    "given",
    "example",
    "network",
    "address",
    "prefix",
    "slash",
    "high",
    "level",
    "necessary",
    "understand",
    "math",
    "behind",
    "include",
    "link",
    "lesson",
    "text",
    "interested",
    "learning",
    "need",
    "keep",
    "mind",
    "said",
    "bigger",
    "prefix",
    "number",
    "smaller",
    "network",
    "smaller",
    "prefix",
    "number",
    "bigger",
    "network",
    "example",
    "size",
    "slash",
    "16",
    "network",
    "represented",
    "circle",
    "ip",
    "range",
    "ending",
    "understand",
    "math",
    "able",
    "tell",
    "slash",
    "16",
    "range",
    "means",
    "network",
    "fixed",
    "value",
    "first",
    "second",
    "octet",
    "hosts",
    "network",
    "range",
    "values",
    "anything",
    "third",
    "fourth",
    "octets",
    "network",
    "total",
    "provide",
    "us",
    "65",
    "536",
    "ip",
    "addresses",
    "let",
    "say",
    "decided",
    "create",
    "large",
    "network",
    "wanted",
    "allocate",
    "part",
    "another",
    "part",
    "business",
    "simply",
    "splitting",
    "two",
    "left",
    "two",
    "slash",
    "17",
    "networks",
    "instead",
    "one",
    "slash",
    "16",
    "network",
    "2",
    "17",
    "networks",
    "network",
    "assigned",
    "32",
    "768",
    "ip",
    "addresses",
    "break",
    "previous",
    "network",
    "forward",
    "slash",
    "16",
    "first",
    "two",
    "octets",
    "network",
    "leaves",
    "third",
    "fourth",
    "octet",
    "distribute",
    "like",
    "third",
    "fourth",
    "octets",
    "create",
    "two",
    "networks",
    "looking",
    "blue",
    "half",
    "address",
    "range",
    "start",
    "end",
    "green",
    "half",
    "start",
    "halfway",
    "slash",
    "16",
    "network",
    "end",
    "looking",
    "break",
    "network",
    "even",
    "break",
    "four",
    "networks",
    "well",
    "using",
    "cider",
    "ranges",
    "makes",
    "things",
    "fairly",
    "easy",
    "shown",
    "would",
    "split",
    "two",
    "slash",
    "17",
    "networks",
    "create",
    "four",
    "slash",
    "18",
    "networks",
    "took",
    "blue",
    "half",
    "circle",
    "split",
    "two",
    "splitting",
    "green",
    "half",
    "circle",
    "would",
    "leave",
    "four",
    "slash",
    "18",
    "networks",
    "seen",
    "blue",
    "quarter",
    "would",
    "start",
    "ending",
    "last",
    "two",
    "octets",
    "red",
    "quarter",
    "starts",
    "blue",
    "left",
    "starting",
    "last",
    "two",
    "octets",
    "ending",
    "green",
    "quarter",
    "starting",
    "previously",
    "defined",
    "network",
    "red",
    "quarter",
    "left",
    "ending",
    "last",
    "two",
    "octets",
    "lastly",
    "yellow",
    "quarter",
    "starting",
    "green",
    "quarter",
    "left",
    "last",
    "two",
    "octets",
    "ending",
    "would",
    "leave",
    "us",
    "four",
    "smaller",
    "slash",
    "18",
    "networks",
    "broken",
    "previous",
    "two",
    "17",
    "networks",
    "networks",
    "consisting",
    "16",
    "384",
    "ip",
    "addresses",
    "continue",
    "process",
    "continuously",
    "networks",
    "breaking",
    "smaller",
    "networks",
    "process",
    "dividing",
    "network",
    "two",
    "smaller",
    "networks",
    "known",
    "subnetting",
    "time",
    "subnet",
    "network",
    "create",
    "two",
    "smaller",
    "networks",
    "number",
    "prefix",
    "increase",
    "know",
    "already",
    "lot",
    "take",
    "would",
    "perfect",
    "time",
    "grab",
    "coffee",
    "tea",
    "ending",
    "part",
    "one",
    "part",
    "two",
    "continuing",
    "immediately",
    "part",
    "one",
    "mark",
    "lesson",
    "complete",
    "see",
    "next",
    "one",
    "part",
    "two",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "covering",
    "second",
    "part",
    "networking",
    "refresher",
    "part",
    "two",
    "lesson",
    "starting",
    "immediately",
    "end",
    "part",
    "one",
    "said",
    "let",
    "dive",
    "know",
    "network",
    "refresher",
    "filled",
    "ton",
    "numbers",
    "underlying",
    "current",
    "math",
    "wanted",
    "focus",
    "things",
    "make",
    "sense",
    "later",
    "wanted",
    "introduce",
    "hard",
    "stuff",
    "first",
    "length",
    "course",
    "able",
    "digest",
    "information",
    "understand",
    "fits",
    "discussing",
    "different",
    "network",
    "parts",
    "google",
    "cloud",
    "also",
    "help",
    "immensely",
    "real",
    "world",
    "well",
    "exam",
    "configuring",
    "networks",
    "knowing",
    "job",
    "engineer",
    "getting",
    "right",
    "wanted",
    "quick",
    "review",
    "classless",
    "routing",
    "cider",
    "discussed",
    "first",
    "refresher",
    "ipv4",
    "address",
    "referenced",
    "dotted",
    "decimal",
    "notation",
    "alongside",
    "slash",
    "16",
    "prefix",
    "defines",
    "large",
    "network",
    "move",
    "wanted",
    "give",
    "references",
    "found",
    "helpful",
    "order",
    "determine",
    "size",
    "network",
    "referenced",
    "three",
    "common",
    "prefixes",
    "continuously",
    "run",
    "think",
    "would",
    "extremely",
    "helpful",
    "reference",
    "look",
    "first",
    "p",
    "address",
    "slash",
    "8",
    "prefix",
    "slash",
    "8",
    "would",
    "fall",
    "class",
    "network",
    "192",
    "first",
    "octet",
    "well",
    "network",
    "part",
    "address",
    "would",
    "fixed",
    "host",
    "part",
    "would",
    "anything",
    "address",
    "could",
    "192",
    "dot",
    "anything",
    "cider",
    "range",
    "would",
    "give",
    "16",
    "million",
    "ip",
    "addresses",
    "second",
    "common",
    "network",
    "see",
    "slash",
    "16",
    "network",
    "would",
    "make",
    "ip",
    "fall",
    "class",
    "b",
    "network",
    "making",
    "first",
    "two",
    "octets",
    "fixed",
    "network",
    "part",
    "meaning",
    "anything",
    "would",
    "host",
    "part",
    "meaning",
    "address",
    "could",
    "would",
    "give",
    "65536",
    "ip",
    "addresses",
    "third",
    "ip",
    "address",
    "probably",
    "common",
    "one",
    "see",
    "slash",
    "24",
    "network",
    "falls",
    "class",
    "c",
    "network",
    "meaning",
    "first",
    "three",
    "octets",
    "fixed",
    "fourth",
    "octet",
    "could",
    "anything",
    "zero",
    "two",
    "five",
    "five",
    "would",
    "give",
    "256",
    "ip",
    "addresses",
    "another",
    "common",
    "one",
    "smallest",
    "see",
    "slash",
    "32",
    "prefix",
    "one",
    "use",
    "constantly",
    "white",
    "listing",
    "ip",
    "address",
    "slash",
    "32",
    "one",
    "ip",
    "address",
    "good",
    "one",
    "know",
    "configuring",
    "vpn",
    "whitelisting",
    "ip",
    "address",
    "home",
    "work",
    "last",
    "reference",
    "well",
    "biggest",
    "network",
    "ip",
    "address",
    "forward",
    "slash",
    "0",
    "covers",
    "ip",
    "addresses",
    "see",
    "commonly",
    "used",
    "internet",
    "gateway",
    "cloud",
    "environment",
    "common",
    "prefixes",
    "come",
    "frequently",
    "hope",
    "reference",
    "help",
    "moving",
    "back",
    "osi",
    "model",
    "covered",
    "ipv4",
    "network",
    "layer",
    "time",
    "discuss",
    "ipv6",
    "noted",
    "earlier",
    "ipv4",
    "notation",
    "called",
    "dotted",
    "decimal",
    "number",
    "dots",
    "octet",
    "value",
    "0",
    "underneath",
    "octet",
    "made",
    "value",
    "four",
    "numbers",
    "ip",
    "address",
    "would",
    "make",
    "value",
    "ipv6",
    "much",
    "longer",
    "value",
    "represented",
    "hexadecimal",
    "grouping",
    "two",
    "octets",
    "16",
    "bits",
    "often",
    "referred",
    "hextet",
    "addresses",
    "long",
    "see",
    "able",
    "abbreviate",
    "removing",
    "redundant",
    "zeros",
    "example",
    "shown",
    "address",
    "one",
    "sequence",
    "zeros",
    "simply",
    "replace",
    "one",
    "zero",
    "address",
    "grouping",
    "four",
    "zeros",
    "represented",
    "one",
    "zero",
    "multiple",
    "groups",
    "zeros",
    "one",
    "address",
    "remove",
    "replace",
    "double",
    "colons",
    "ipv6",
    "addresses",
    "see",
    "exactly",
    "ipv6",
    "address",
    "128",
    "bits",
    "long",
    "represented",
    "similar",
    "way",
    "ipv4",
    "starting",
    "network",
    "address",
    "ending",
    "prefix",
    "hextet",
    "16",
    "bits",
    "prefix",
    "number",
    "number",
    "bits",
    "represent",
    "network",
    "example",
    "slash",
    "64",
    "refers",
    "network",
    "address",
    "underlined",
    "green",
    "2001",
    "colon",
    "de3",
    "hextet",
    "16",
    "bits",
    "prefix",
    "four",
    "groups",
    "16",
    "know",
    "part",
    "network",
    "part",
    "address",
    "host",
    "part",
    "address",
    "notice",
    "double",
    "colon",
    "explained",
    "previously",
    "unneeded",
    "zeros",
    "replaced",
    "double",
    "colon",
    "address",
    "would",
    "represent",
    "slew",
    "zeros",
    "adding",
    "zeros",
    "ipv6",
    "starting",
    "network",
    "address",
    "would",
    "look",
    "like",
    "network",
    "address",
    "starts",
    "2001",
    "colon",
    "de3",
    "another",
    "two",
    "hextets",
    "zeros",
    "network",
    "address",
    "determined",
    "slash",
    "64",
    "prefix",
    "four",
    "hextets",
    "means",
    "network",
    "finishes",
    "network",
    "address",
    "followed",
    "fs",
    "process",
    "determine",
    "start",
    "end",
    "every",
    "ipv6",
    "network",
    "shown",
    "ipv4",
    "addresses",
    "represented",
    "ipv6",
    "addresses",
    "represented",
    "network",
    "address",
    "prefix",
    "represent",
    "ipv6",
    "addresses",
    "double",
    "colon",
    "slash",
    "zero",
    "see",
    "frequently",
    "using",
    "ipv6",
    "know",
    "really",
    "complicated",
    "wanted",
    "give",
    "exposure",
    "ipv6",
    "expect",
    "understand",
    "right",
    "away",
    "end",
    "become",
    "lot",
    "clearer",
    "go",
    "course",
    "promise",
    "become",
    "lot",
    "easier",
    "hard",
    "time",
    "trying",
    "understand",
    "network",
    "concept",
    "days",
    "able",
    "digest",
    "went",
    "back",
    "practice",
    "started",
    "make",
    "lot",
    "sense",
    "know",
    "move",
    "along",
    "course",
    "start",
    "making",
    "sense",
    "well",
    "discussed",
    "layer",
    "3",
    "osi",
    "model",
    "wanted",
    "get",
    "layer",
    "4",
    "transport",
    "layer",
    "ip",
    "packets",
    "discussing",
    "tcp",
    "udp",
    "simplest",
    "form",
    "packet",
    "basic",
    "unit",
    "information",
    "network",
    "transmission",
    "networks",
    "use",
    "tcpip",
    "network",
    "protocol",
    "set",
    "rules",
    "communication",
    "devices",
    "rules",
    "tcpip",
    "require",
    "information",
    "split",
    "packets",
    "contain",
    "segment",
    "data",
    "transferred",
    "along",
    "protocol",
    "port",
    "number",
    "originating",
    "address",
    "address",
    "data",
    "sent",
    "udp",
    "another",
    "protocol",
    "sent",
    "ip",
    "used",
    "specific",
    "applications",
    "mostly",
    "course",
    "referring",
    "tcpip",
    "see",
    "diagram",
    "ip",
    "packet",
    "basic",
    "datagram",
    "packet",
    "would",
    "look",
    "like",
    "source",
    "destination",
    "ip",
    "address",
    "protocol",
    "port",
    "number",
    "data",
    "mainly",
    "give",
    "high",
    "level",
    "understanding",
    "tcpip",
    "udpip",
    "deep",
    "dive",
    "networking",
    "moving",
    "layer",
    "7",
    "osi",
    "model",
    "layer",
    "used",
    "networked",
    "applications",
    "applications",
    "use",
    "internet",
    "many",
    "protocols",
    "fall",
    "layer",
    "applications",
    "reside",
    "layer",
    "use",
    "protocols",
    "layer",
    "function",
    "application",
    "layer",
    "provides",
    "services",
    "networked",
    "applications",
    "help",
    "protocols",
    "perform",
    "user",
    "activities",
    "see",
    "many",
    "protocols",
    "addressed",
    "go",
    "course",
    "resources",
    "google",
    "cloud",
    "like",
    "http",
    "https",
    "load",
    "balancing",
    "dns",
    "uses",
    "udp",
    "port",
    "53",
    "ssh",
    "port",
    "22",
    "logging",
    "hosts",
    "many",
    "scenarios",
    "layer",
    "7",
    "protocols",
    "reside",
    "layer",
    "come",
    "course",
    "diving",
    "many",
    "lessons",
    "come",
    "wraps",
    "networking",
    "refresher",
    "lesson",
    "worry",
    "like",
    "said",
    "expecting",
    "pick",
    "things",
    "first",
    "go",
    "things",
    "start",
    "make",
    "sense",
    "go",
    "course",
    "start",
    "putting",
    "networking",
    "concepts",
    "practice",
    "also",
    "feel",
    "free",
    "go",
    "back",
    "review",
    "last",
    "couple",
    "lessons",
    "things",
    "make",
    "sense",
    "first",
    "time",
    "come",
    "across",
    "networking",
    "challenges",
    "future",
    "lessons",
    "everything",
    "wanted",
    "cover",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "discussing",
    "core",
    "networking",
    "service",
    "gcp",
    "virtual",
    "private",
    "cloud",
    "vpc",
    "short",
    "service",
    "allows",
    "create",
    "networks",
    "inside",
    "google",
    "cloud",
    "private",
    "public",
    "connectivity",
    "options",
    "deployments",
    "hybrid",
    "cloud",
    "deployments",
    "service",
    "must",
    "know",
    "well",
    "many",
    "questions",
    "come",
    "exam",
    "regards",
    "vpcs",
    "said",
    "let",
    "dive",
    "vpcs",
    "manages",
    "networking",
    "functionality",
    "google",
    "cloud",
    "resources",
    "software",
    "defined",
    "network",
    "confined",
    "physical",
    "limitations",
    "networking",
    "data",
    "center",
    "abstracted",
    "vpc",
    "networks",
    "including",
    "associated",
    "routes",
    "firewall",
    "rules",
    "global",
    "resources",
    "associated",
    "particular",
    "region",
    "zone",
    "global",
    "resources",
    "span",
    "available",
    "regions",
    "across",
    "globe",
    "explained",
    "earlier",
    "vpcs",
    "also",
    "encapsulated",
    "within",
    "projects",
    "projects",
    "logical",
    "container",
    "vpcs",
    "live",
    "vpcs",
    "ip",
    "ranges",
    "simply",
    "construct",
    "individual",
    "ip",
    "addresses",
    "services",
    "within",
    "network",
    "ip",
    "addresses",
    "ranges",
    "defined",
    "within",
    "subnetworks",
    "diving",
    "bit",
    "later",
    "well",
    "traffic",
    "instances",
    "controlled",
    "network",
    "firewall",
    "rules",
    "rules",
    "implemented",
    "vms",
    "traffic",
    "controlled",
    "logged",
    "leaves",
    "arrives",
    "vm",
    "resources",
    "within",
    "vpc",
    "network",
    "communicate",
    "one",
    "another",
    "using",
    "internal",
    "private",
    "ipv4",
    "addresses",
    "subject",
    "applicable",
    "network",
    "firewall",
    "rules",
    "resources",
    "must",
    "vpc",
    "communication",
    "otherwise",
    "must",
    "traverse",
    "public",
    "internet",
    "assigned",
    "public",
    "ip",
    "use",
    "vpc",
    "peering",
    "connection",
    "establish",
    "vpn",
    "connection",
    "another",
    "important",
    "thing",
    "note",
    "vpc",
    "networks",
    "support",
    "ipv4",
    "unicast",
    "traffic",
    "support",
    "ipv6",
    "traffic",
    "within",
    "network",
    "vms",
    "vpc",
    "network",
    "send",
    "ipv4",
    "destinations",
    "receive",
    "traffic",
    "ipv4",
    "sources",
    "however",
    "possible",
    "create",
    "ipv6",
    "address",
    "global",
    "load",
    "balancer",
    "unless",
    "choose",
    "disable",
    "new",
    "project",
    "starts",
    "default",
    "network",
    "vpc",
    "default",
    "network",
    "auto",
    "mode",
    "vpc",
    "network",
    "predefined",
    "subnets",
    "subnet",
    "allocated",
    "region",
    "cider",
    "blocks",
    "also",
    "default",
    "network",
    "default",
    "firewall",
    "rule",
    "rules",
    "configured",
    "allow",
    "ingress",
    "traffic",
    "icmp",
    "rdp",
    "ssh",
    "traffic",
    "anywhere",
    "well",
    "ingress",
    "traffic",
    "within",
    "default",
    "network",
    "protocols",
    "ports",
    "two",
    "different",
    "types",
    "vpc",
    "networks",
    "auto",
    "mode",
    "custom",
    "mode",
    "auto",
    "mode",
    "network",
    "also",
    "one",
    "subnet",
    "per",
    "region",
    "default",
    "network",
    "actually",
    "auto",
    "mode",
    "network",
    "explained",
    "earlier",
    "automatically",
    "created",
    "subnets",
    "use",
    "set",
    "predefined",
    "ip",
    "ranges",
    "slash",
    "20",
    "cider",
    "block",
    "expanded",
    "slash",
    "16",
    "cider",
    "block",
    "subnets",
    "fit",
    "within",
    "default",
    "ford",
    "slash",
    "9",
    "cider",
    "block",
    "new",
    "gcp",
    "regions",
    "become",
    "available",
    "new",
    "subnets",
    "regions",
    "automatically",
    "added",
    "auto",
    "mode",
    "networks",
    "using",
    "ip",
    "range",
    "block",
    "custom",
    "owned",
    "network",
    "automatically",
    "create",
    "subnets",
    "type",
    "network",
    "provides",
    "complete",
    "control",
    "subnets",
    "ip",
    "ranges",
    "well",
    "another",
    "note",
    "auto",
    "mode",
    "network",
    "converted",
    "custom",
    "mode",
    "network",
    "gain",
    "control",
    "please",
    "aware",
    "conversion",
    "one",
    "way",
    "meaning",
    "custom",
    "networks",
    "changed",
    "auto",
    "mode",
    "networks",
    "deciding",
    "different",
    "types",
    "networks",
    "want",
    "use",
    "make",
    "sure",
    "review",
    "considerations",
    "custom",
    "mode",
    "vpc",
    "networks",
    "flexible",
    "better",
    "suited",
    "production",
    "google",
    "recommends",
    "use",
    "custom",
    "mode",
    "vpc",
    "networks",
    "production",
    "example",
    "project",
    "contains",
    "three",
    "networks",
    "networks",
    "span",
    "multiple",
    "regions",
    "across",
    "globe",
    "see",
    "right",
    "hand",
    "side",
    "network",
    "contains",
    "separate",
    "vms",
    "diagram",
    "demonstrate",
    "vms",
    "network",
    "vpc",
    "communicate",
    "privately",
    "even",
    "placed",
    "separate",
    "regions",
    "vms",
    "network",
    "network",
    "communicate",
    "internal",
    "ip",
    "addresses",
    "even",
    "though",
    "different",
    "regions",
    "essentially",
    "vms",
    "communicate",
    "even",
    "exist",
    "different",
    "locations",
    "across",
    "globe",
    "long",
    "within",
    "network",
    "vms",
    "network",
    "b",
    "network",
    "c",
    "network",
    "therefore",
    "default",
    "vms",
    "must",
    "communicate",
    "external",
    "ips",
    "even",
    "though",
    "region",
    "internal",
    "ip",
    "communication",
    "allowed",
    "networks",
    "unless",
    "set",
    "vpc",
    "network",
    "peering",
    "use",
    "vpn",
    "connection",
    "wanted",
    "bring",
    "back",
    "focus",
    "default",
    "vpc",
    "minute",
    "unless",
    "create",
    "organizational",
    "policy",
    "prohibits",
    "new",
    "projects",
    "always",
    "start",
    "default",
    "network",
    "one",
    "subnet",
    "region",
    "auto",
    "mode",
    "vpc",
    "network",
    "particular",
    "example",
    "showing",
    "default",
    "vpc",
    "seven",
    "default",
    "regions",
    "displayed",
    "along",
    "ip",
    "ranges",
    "want",
    "stress",
    "vpc",
    "networks",
    "along",
    "associated",
    "routes",
    "firewall",
    "rules",
    "global",
    "resources",
    "associated",
    "particular",
    "region",
    "zone",
    "subnets",
    "within",
    "regional",
    "auto",
    "mode",
    "vpc",
    "network",
    "created",
    "one",
    "subnet",
    "region",
    "automatically",
    "created",
    "within",
    "automatically",
    "created",
    "subnets",
    "use",
    "set",
    "predefined",
    "ip",
    "ranges",
    "fit",
    "within",
    "cider",
    "block",
    "see",
    "new",
    "google",
    "cloud",
    "regions",
    "become",
    "available",
    "new",
    "subnets",
    "regions",
    "automatically",
    "added",
    "auto",
    "mode",
    "vpc",
    "networks",
    "using",
    "ip",
    "range",
    "block",
    "addition",
    "automatically",
    "created",
    "subnets",
    "add",
    "subnets",
    "manually",
    "auto",
    "mode",
    "vpc",
    "networks",
    "regions",
    "choose",
    "using",
    "ip",
    "ranges",
    "outside",
    "using",
    "default",
    "vbc",
    "already",
    "created",
    "auto",
    "mode",
    "vpc",
    "switch",
    "vpc",
    "network",
    "auto",
    "mode",
    "custom",
    "mode",
    "conversion",
    "custom",
    "mode",
    "vpc",
    "networks",
    "changed",
    "auto",
    "mode",
    "vpc",
    "networks",
    "bringing",
    "theory",
    "practice",
    "regards",
    "default",
    "vpc",
    "wanted",
    "take",
    "time",
    "short",
    "demo",
    "whenever",
    "ready",
    "join",
    "console",
    "back",
    "console",
    "go",
    "top",
    "right",
    "hand",
    "corner",
    "logged",
    "tony",
    "bowties",
    "top",
    "drop",
    "project",
    "menu",
    "logged",
    "project",
    "tony",
    "demo",
    "geared",
    "around",
    "default",
    "vpc",
    "want",
    "navigate",
    "vpc",
    "networks",
    "going",
    "go",
    "top",
    "left",
    "hand",
    "corner",
    "navigation",
    "menu",
    "going",
    "click",
    "scroll",
    "vpc",
    "network",
    "networking",
    "see",
    "left",
    "hand",
    "menu",
    "bunch",
    "different",
    "options",
    "choose",
    "wo",
    "touching",
    "topics",
    "lessons",
    "deep",
    "dive",
    "topics",
    "demo",
    "like",
    "strictly",
    "touch",
    "default",
    "vpc",
    "see",
    "project",
    "tony",
    "created",
    "default",
    "vpc",
    "one",
    "subnet",
    "every",
    "region",
    "ip",
    "address",
    "range",
    "reminder",
    "whenever",
    "create",
    "new",
    "project",
    "default",
    "vpc",
    "automatically",
    "created",
    "subnets",
    "created",
    "route",
    "public",
    "internet",
    "internet",
    "gateway",
    "listed",
    "corresponding",
    "firewall",
    "rules",
    "along",
    "global",
    "dynamic",
    "routing",
    "flow",
    "logs",
    "turned",
    "getting",
    "deeper",
    "routing",
    "flow",
    "logs",
    "later",
    "lessons",
    "section",
    "earlier",
    "pointed",
    "auto",
    "mode",
    "vpc",
    "converted",
    "custom",
    "vpc",
    "simple",
    "clicking",
    "button",
    "want",
    "yet",
    "like",
    "drill",
    "default",
    "vbc",
    "show",
    "different",
    "options",
    "see",
    "dns",
    "api",
    "enabled",
    "good",
    "idea",
    "would",
    "enable",
    "going",
    "go",
    "ahead",
    "well",
    "see",
    "make",
    "adjustments",
    "different",
    "subnets",
    "change",
    "configuration",
    "vpc",
    "click",
    "edit",
    "button",
    "top",
    "able",
    "change",
    "subnet",
    "creation",
    "mode",
    "along",
    "dynamic",
    "routing",
    "mode",
    "get",
    "later",
    "lesson",
    "thing",
    "dns",
    "server",
    "policy",
    "make",
    "demo",
    "little",
    "bit",
    "exciting",
    "want",
    "show",
    "process",
    "expand",
    "subnet",
    "going",
    "go",
    "us",
    "central",
    "one",
    "going",
    "drill",
    "configuration",
    "settings",
    "default",
    "subnet",
    "us",
    "central",
    "one",
    "region",
    "edit",
    "subnet",
    "simply",
    "click",
    "edit",
    "button",
    "top",
    "right",
    "ip",
    "address",
    "range",
    "prompted",
    "note",
    "saying",
    "ip",
    "ranges",
    "must",
    "unique",
    "stated",
    "important",
    "point",
    "know",
    "architecting",
    "vpcs",
    "corresponding",
    "sub",
    "networks",
    "going",
    "go",
    "ahead",
    "change",
    "subnet",
    "cider",
    "range",
    "20",
    "going",
    "change",
    "going",
    "add",
    "secondary",
    "ip",
    "ranges",
    "going",
    "leave",
    "private",
    "google",
    "access",
    "going",
    "leave",
    "everything",
    "else",
    "simply",
    "click",
    "save",
    "completed",
    "able",
    "see",
    "subnet",
    "range",
    "go",
    "slash",
    "20",
    "slash",
    "see",
    "ip",
    "address",
    "range",
    "changed",
    "slash",
    "go",
    "back",
    "main",
    "page",
    "vpc",
    "network",
    "see",
    "ip",
    "address",
    "range",
    "different",
    "ones",
    "probably",
    "asking",
    "ca",
    "change",
    "ip",
    "address",
    "range",
    "subnets",
    "even",
    "though",
    "love",
    "unfortunately",
    "google",
    "give",
    "option",
    "subnet",
    "must",
    "configured",
    "one",
    "one",
    "change",
    "ipa",
    "address",
    "range",
    "wanted",
    "quickly",
    "jump",
    "default",
    "firewall",
    "rules",
    "discussed",
    "earlier",
    "rules",
    "incoming",
    "ssh",
    "rdp",
    "icmp",
    "along",
    "default",
    "rule",
    "allows",
    "incoming",
    "connections",
    "protocols",
    "ports",
    "among",
    "instances",
    "within",
    "network",
    "comes",
    "routes",
    "regards",
    "vpc",
    "network",
    "one",
    "really",
    "wanted",
    "touch",
    "default",
    "route",
    "internet",
    "without",
    "route",
    "subnets",
    "vpc",
    "would",
    "access",
    "route",
    "traffic",
    "internet",
    "default",
    "vpc",
    "created",
    "default",
    "internet",
    "gateway",
    "also",
    "created",
    "going",
    "back",
    "main",
    "page",
    "vpc",
    "network",
    "wanted",
    "go",
    "process",
    "making",
    "ip",
    "address",
    "range",
    "bigger",
    "command",
    "line",
    "going",
    "go",
    "right",
    "hand",
    "corner",
    "open",
    "cloud",
    "shell",
    "going",
    "make",
    "little",
    "bit",
    "bigger",
    "demo",
    "going",
    "increase",
    "address",
    "range",
    "subnet",
    "us",
    "west",
    "one",
    "slash",
    "20",
    "slash",
    "16",
    "going",
    "paste",
    "command",
    "gcloud",
    "compute",
    "networks",
    "subnets",
    "expand",
    "ip",
    "dash",
    "range",
    "name",
    "network",
    "default",
    "well",
    "region",
    "going",
    "uswest1",
    "along",
    "prefix",
    "length",
    "going",
    "going",
    "hit",
    "enter",
    "prompted",
    "make",
    "sure",
    "want",
    "yes",
    "want",
    "continue",
    "going",
    "type",
    "yes",
    "hit",
    "enter",
    "within",
    "seconds",
    "get",
    "confirmation",
    "expected",
    "subnet",
    "updated",
    "like",
    "verify",
    "everything",
    "going",
    "clear",
    "screen",
    "going",
    "paste",
    "command",
    "gcloud",
    "compute",
    "networks",
    "subnets",
    "describe",
    "subnet",
    "name",
    "default",
    "along",
    "region",
    "would",
    "uswest1",
    "going",
    "click",
    "enter",
    "see",
    "ipsider",
    "range",
    "consistent",
    "changed",
    "quick",
    "refresh",
    "browser",
    "able",
    "see",
    "console",
    "reflected",
    "thing",
    "expected",
    "ip",
    "address",
    "range",
    "us",
    "west",
    "one",
    "console",
    "reflects",
    "see",
    "cloud",
    "shell",
    "end",
    "demo",
    "wanted",
    "quickly",
    "show",
    "delete",
    "default",
    "vpc",
    "recreate",
    "need",
    "drill",
    "settings",
    "click",
    "delete",
    "vpc",
    "network",
    "right",
    "top",
    "going",
    "get",
    "prompt",
    "ask",
    "sure",
    "going",
    "simply",
    "click",
    "delete",
    "note",
    "resources",
    "vpc",
    "networks",
    "able",
    "delete",
    "vpc",
    "would",
    "delete",
    "resources",
    "first",
    "delete",
    "vpc",
    "afterwards",
    "okay",
    "successfully",
    "deleted",
    "see",
    "local",
    "vpc",
    "networks",
    "current",
    "project",
    "want",
    "go",
    "ahead",
    "recreate",
    "default",
    "vpc",
    "going",
    "simply",
    "click",
    "create",
    "vpc",
    "network",
    "prompted",
    "enter",
    "bunch",
    "information",
    "creating",
    "new",
    "vpc",
    "network",
    "keeping",
    "spirit",
    "default",
    "vpcs",
    "going",
    "name",
    "vpc",
    "default",
    "going",
    "put",
    "default",
    "description",
    "subnet",
    "creation",
    "mode",
    "going",
    "click",
    "automatic",
    "see",
    "prompt",
    "came",
    "telling",
    "ip",
    "address",
    "ranges",
    "assigned",
    "region",
    "vpc",
    "network",
    "able",
    "review",
    "ip",
    "address",
    "ranges",
    "region",
    "stated",
    "ip",
    "address",
    "ranges",
    "region",
    "always",
    "every",
    "time",
    "create",
    "default",
    "vpc",
    "create",
    "vpc",
    "automatic",
    "subnet",
    "creation",
    "mode",
    "note",
    "firewall",
    "rules",
    "select",
    "firewall",
    "rules",
    "none",
    "actually",
    "created",
    "creating",
    "new",
    "default",
    "vpc",
    "sure",
    "check",
    "going",
    "leave",
    "everything",
    "else",
    "going",
    "simply",
    "go",
    "bottom",
    "click",
    "create",
    "button",
    "within",
    "minute",
    "new",
    "default",
    "vpc",
    "created",
    "okay",
    "back",
    "business",
    "default",
    "vpc",
    "recreated",
    "subnets",
    "corresponding",
    "regions",
    "ip",
    "address",
    "ranges",
    "firewall",
    "rules",
    "everything",
    "saw",
    "earlier",
    "default",
    "vpc",
    "pretty",
    "much",
    "wanted",
    "cover",
    "demo",
    "default",
    "vpc",
    "network",
    "along",
    "lesson",
    "vpcs",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "going",
    "discussing",
    "vpc",
    "network",
    "subnets",
    "terms",
    "subnet",
    "sub",
    "network",
    "synonymous",
    "used",
    "interchangeably",
    "google",
    "cloud",
    "hear",
    "using",
    "either",
    "one",
    "lesson",
    "yet",
    "referring",
    "thing",
    "create",
    "resource",
    "google",
    "cloud",
    "choose",
    "network",
    "subnet",
    "subnet",
    "needed",
    "creating",
    "resources",
    "good",
    "knowledge",
    "behind",
    "necessary",
    "building",
    "google",
    "cloud",
    "well",
    "exam",
    "lesson",
    "covering",
    "subnets",
    "deeper",
    "level",
    "features",
    "functionality",
    "said",
    "let",
    "dive",
    "vpc",
    "network",
    "consists",
    "one",
    "useful",
    "ip",
    "range",
    "partitions",
    "called",
    "subnets",
    "also",
    "known",
    "google",
    "cloud",
    "sub",
    "networks",
    "subnet",
    "associated",
    "region",
    "vpc",
    "networks",
    "ip",
    "address",
    "ranges",
    "associated",
    "ip",
    "ranges",
    "defined",
    "subnets",
    "network",
    "must",
    "least",
    "one",
    "subnet",
    "use",
    "mentioned",
    "earlier",
    "create",
    "project",
    "create",
    "default",
    "vpc",
    "network",
    "subnets",
    "region",
    "automatically",
    "auto",
    "mode",
    "run",
    "functionality",
    "custom",
    "vpc",
    "networks",
    "hand",
    "start",
    "subnets",
    "giving",
    "full",
    "control",
    "subnet",
    "creation",
    "create",
    "one",
    "subnet",
    "per",
    "region",
    "change",
    "name",
    "region",
    "subnet",
    "created",
    "would",
    "delete",
    "subnet",
    "replace",
    "long",
    "resources",
    "using",
    "primary",
    "secondary",
    "ranges",
    "subnets",
    "overlap",
    "allocated",
    "range",
    "primary",
    "secondary",
    "range",
    "another",
    "subnet",
    "network",
    "ip",
    "ranges",
    "subnets",
    "peered",
    "networks",
    "words",
    "must",
    "unique",
    "valid",
    "cider",
    "block",
    "comes",
    "ip",
    "addresses",
    "subnet",
    "google",
    "cloud",
    "vpc",
    "amazing",
    "feature",
    "lets",
    "increase",
    "ip",
    "space",
    "subnets",
    "without",
    "workload",
    "shutdown",
    "downtime",
    "demonstrated",
    "earlier",
    "previous",
    "lesson",
    "gives",
    "flexibility",
    "growth",
    "options",
    "meet",
    "needs",
    "unfortunately",
    "caveats",
    "new",
    "subnet",
    "must",
    "overlap",
    "subnets",
    "vpc",
    "network",
    "region",
    "also",
    "new",
    "subnets",
    "must",
    "stay",
    "inside",
    "rfc",
    "1918",
    "address",
    "space",
    "new",
    "network",
    "range",
    "must",
    "larger",
    "original",
    "means",
    "prefix",
    "length",
    "must",
    "smaller",
    "number",
    "subnet",
    "expanded",
    "undo",
    "expansion",
    "auto",
    "mode",
    "network",
    "starts",
    "slash",
    "20",
    "range",
    "expanded",
    "16",
    "ip",
    "range",
    "larger",
    "also",
    "convert",
    "auto",
    "mode",
    "network",
    "custom",
    "mode",
    "network",
    "increase",
    "ip",
    "range",
    "even",
    "conversion",
    "custom",
    "mode",
    "vpc",
    "networks",
    "changed",
    "auto",
    "mode",
    "vpc",
    "networks",
    "network",
    "created",
    "google",
    "cloud",
    "always",
    "ip",
    "addresses",
    "able",
    "use",
    "reserved",
    "google",
    "every",
    "subnet",
    "four",
    "reserved",
    "ip",
    "addresses",
    "primary",
    "ip",
    "range",
    "note",
    "reserved",
    "ip",
    "addresses",
    "secondary",
    "ip",
    "ranges",
    "reserved",
    "ips",
    "looked",
    "first",
    "two",
    "last",
    "two",
    "ip",
    "addresses",
    "cider",
    "range",
    "first",
    "address",
    "primary",
    "ip",
    "range",
    "subnet",
    "reserved",
    "network",
    "second",
    "address",
    "primary",
    "ip",
    "range",
    "subnet",
    "reserved",
    "default",
    "gateway",
    "allows",
    "access",
    "internet",
    "second",
    "last",
    "address",
    "primary",
    "ip",
    "range",
    "subnet",
    "reserved",
    "google",
    "cloud",
    "potential",
    "future",
    "use",
    "last",
    "address",
    "ip",
    "range",
    "subnet",
    "broadcast",
    "covers",
    "short",
    "yet",
    "important",
    "lesson",
    "vpc",
    "network",
    "subnets",
    "features",
    "functionalities",
    "subnets",
    "presented",
    "help",
    "make",
    "better",
    "design",
    "decisions",
    "give",
    "bit",
    "knowledge",
    "flexibility",
    "comes",
    "assigning",
    "ipspace",
    "within",
    "vpc",
    "networks",
    "cover",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "going",
    "routing",
    "private",
    "google",
    "access",
    "although",
    "routing",
    "really",
    "show",
    "exam",
    "wanted",
    "give",
    "inside",
    "look",
    "traffic",
    "routed",
    "building",
    "google",
    "cloud",
    "know",
    "exactly",
    "need",
    "need",
    "edit",
    "routes",
    "way",
    "need",
    "build",
    "new",
    "ones",
    "satisfy",
    "particular",
    "need",
    "private",
    "google",
    "access",
    "pop",
    "head",
    "exam",
    "high",
    "level",
    "wanted",
    "get",
    "bit",
    "deeper",
    "service",
    "get",
    "data",
    "flow",
    "service",
    "enabled",
    "said",
    "let",
    "dive",
    "google",
    "cloud",
    "routes",
    "define",
    "paths",
    "network",
    "traffic",
    "takes",
    "vm",
    "instance",
    "destinations",
    "destinations",
    "inside",
    "google",
    "cloud",
    "vpc",
    "network",
    "example",
    "another",
    "vm",
    "outside",
    "vpc",
    "network",
    "route",
    "consists",
    "single",
    "destination",
    "single",
    "next",
    "hop",
    "instance",
    "vpc",
    "network",
    "sends",
    "packet",
    "google",
    "cloud",
    "delivers",
    "packet",
    "route",
    "next",
    "hop",
    "packet",
    "destination",
    "address",
    "within",
    "route",
    "destination",
    "range",
    "routes",
    "stored",
    "routing",
    "table",
    "vpc",
    "familiar",
    "routing",
    "table",
    "computer",
    "networking",
    "routing",
    "table",
    "data",
    "table",
    "stored",
    "router",
    "network",
    "host",
    "lists",
    "routes",
    "particular",
    "network",
    "destinations",
    "case",
    "vpc",
    "responsible",
    "storing",
    "routing",
    "table",
    "well",
    "vm",
    "instance",
    "controller",
    "kept",
    "informed",
    "applicable",
    "routes",
    "network",
    "routing",
    "table",
    "packet",
    "leaving",
    "vm",
    "delivered",
    "appropriate",
    "next",
    "hop",
    "applicable",
    "route",
    "based",
    "routing",
    "order",
    "wanted",
    "take",
    "couple",
    "minutes",
    "go",
    "different",
    "routing",
    "types",
    "available",
    "google",
    "cloud",
    "google",
    "cloud",
    "two",
    "types",
    "routing",
    "system",
    "generated",
    "offers",
    "default",
    "subnet",
    "route",
    "custom",
    "routes",
    "support",
    "static",
    "routes",
    "dynamic",
    "routes",
    "first",
    "wanted",
    "cover",
    "system",
    "generated",
    "routes",
    "little",
    "bit",
    "depth",
    "every",
    "new",
    "network",
    "whether",
    "automatic",
    "vpc",
    "custom",
    "vpc",
    "two",
    "types",
    "system",
    "generated",
    "routes",
    "default",
    "route",
    "remove",
    "replace",
    "one",
    "subnet",
    "route",
    "subnets",
    "create",
    "vpc",
    "network",
    "google",
    "cloud",
    "creates",
    "system",
    "generated",
    "default",
    "route",
    "route",
    "serves",
    "two",
    "purposes",
    "defines",
    "path",
    "vpc",
    "network",
    "including",
    "path",
    "internet",
    "addition",
    "route",
    "instances",
    "must",
    "meet",
    "additional",
    "requirements",
    "need",
    "internet",
    "access",
    "default",
    "route",
    "also",
    "provides",
    "standard",
    "path",
    "private",
    "google",
    "access",
    "want",
    "completely",
    "isolate",
    "network",
    "internet",
    "need",
    "replace",
    "default",
    "route",
    "custom",
    "route",
    "delete",
    "default",
    "route",
    "remove",
    "default",
    "route",
    "replace",
    "packets",
    "destined",
    "ip",
    "ranges",
    "covered",
    "routes",
    "dropped",
    "lastly",
    "system",
    "generated",
    "default",
    "route",
    "priority",
    "1000",
    "destination",
    "broadest",
    "possible",
    "covers",
    "ip",
    "addresses",
    "range",
    "google",
    "cloud",
    "uses",
    "route",
    "specific",
    "destination",
    "apply",
    "packet",
    "getting",
    "priorities",
    "little",
    "bit",
    "covered",
    "default",
    "route",
    "wanted",
    "get",
    "subnet",
    "route",
    "subnet",
    "routes",
    "system",
    "generated",
    "routes",
    "define",
    "paths",
    "subnet",
    "vpc",
    "network",
    "subnet",
    "least",
    "one",
    "subnet",
    "route",
    "whose",
    "destination",
    "matches",
    "primary",
    "ip",
    "range",
    "subnet",
    "subnet",
    "secondary",
    "ip",
    "ranges",
    "google",
    "cloud",
    "creates",
    "subnet",
    "route",
    "corresponding",
    "destination",
    "secondary",
    "range",
    "route",
    "destination",
    "matches",
    "specific",
    "destination",
    "subnet",
    "route",
    "create",
    "custom",
    "route",
    "broader",
    "destination",
    "range",
    "contains",
    "subnet",
    "route",
    "destination",
    "range",
    "subnet",
    "created",
    "corresponding",
    "subnet",
    "route",
    "subnet",
    "primary",
    "secondary",
    "ip",
    "range",
    "also",
    "created",
    "auto",
    "mode",
    "vpc",
    "networks",
    "create",
    "subnet",
    "route",
    "primary",
    "ip",
    "ranges",
    "automatically",
    "created",
    "subnets",
    "delete",
    "subnets",
    "convert",
    "auto",
    "mode",
    "vpc",
    "network",
    "custom",
    "mode",
    "delete",
    "subnet",
    "route",
    "unless",
    "modify",
    "delete",
    "subnet",
    "delete",
    "subnet",
    "subnet",
    "routes",
    "primary",
    "secondary",
    "ranges",
    "deleted",
    "automatically",
    "delete",
    "subnet",
    "route",
    "subnet",
    "primary",
    "range",
    "way",
    "note",
    "networks",
    "connected",
    "using",
    "vpc",
    "network",
    "peering",
    "get",
    "little",
    "bit",
    "later",
    "subnet",
    "routes",
    "one",
    "network",
    "imported",
    "network",
    "vice",
    "versa",
    "removed",
    "unless",
    "break",
    "peering",
    "relationship",
    "break",
    "peering",
    "relationship",
    "imported",
    "subnet",
    "routes",
    "network",
    "automatically",
    "removed",
    "covered",
    "system",
    "generated",
    "routes",
    "wanted",
    "get",
    "custom",
    "routes",
    "custom",
    "routes",
    "either",
    "static",
    "routes",
    "create",
    "manually",
    "dynamic",
    "routes",
    "maintained",
    "automatically",
    "one",
    "cloud",
    "routers",
    "created",
    "top",
    "already",
    "created",
    "system",
    "generated",
    "routes",
    "destinations",
    "custom",
    "routes",
    "match",
    "specific",
    "subnet",
    "route",
    "network",
    "static",
    "routes",
    "use",
    "static",
    "route",
    "next",
    "hops",
    "created",
    "manually",
    "use",
    "google",
    "cloud",
    "console",
    "create",
    "cloud",
    "vpn",
    "tunnel",
    "uses",
    "routing",
    "one",
    "route",
    "based",
    "vpn",
    "static",
    "routes",
    "remote",
    "traffic",
    "selectors",
    "created",
    "give",
    "little",
    "bit",
    "clarity",
    "little",
    "bit",
    "context",
    "included",
    "screenshot",
    "different",
    "routes",
    "available",
    "next",
    "hop",
    "default",
    "internet",
    "gateway",
    "define",
    "path",
    "external",
    "ip",
    "addresses",
    "specify",
    "instance",
    "traffic",
    "directed",
    "primary",
    "internal",
    "ip",
    "address",
    "vm",
    "network",
    "interface",
    "vpc",
    "network",
    "define",
    "route",
    "specify",
    "ip",
    "address",
    "provide",
    "internal",
    "ip",
    "address",
    "assigned",
    "google",
    "cloud",
    "vm",
    "next",
    "hop",
    "cloud",
    "vpn",
    "tunnels",
    "use",
    "policy",
    "based",
    "routing",
    "vpns",
    "direct",
    "traffic",
    "vpn",
    "tunnel",
    "creating",
    "routes",
    "whose",
    "next",
    "hops",
    "refer",
    "tunnel",
    "name",
    "region",
    "note",
    "google",
    "cloud",
    "ignores",
    "routes",
    "whose",
    "next",
    "hops",
    "cloud",
    "vpn",
    "tunnels",
    "lastly",
    "internal",
    "tcp",
    "udp",
    "low",
    "balancing",
    "use",
    "load",
    "balancer",
    "ip",
    "address",
    "next",
    "hop",
    "distributes",
    "traffic",
    "among",
    "healthy",
    "instances",
    "custom",
    "static",
    "routes",
    "use",
    "next",
    "hop",
    "scoped",
    "specific",
    "instances",
    "network",
    "tags",
    "creating",
    "static",
    "routes",
    "always",
    "asked",
    "different",
    "parameters",
    "needed",
    "order",
    "create",
    "route",
    "taken",
    "screenshot",
    "console",
    "give",
    "bit",
    "context",
    "regards",
    "information",
    "needed",
    "first",
    "name",
    "description",
    "fields",
    "identify",
    "route",
    "name",
    "required",
    "description",
    "optional",
    "every",
    "route",
    "project",
    "must",
    "unique",
    "name",
    "next",
    "network",
    "route",
    "must",
    "associated",
    "exactly",
    "one",
    "vpc",
    "network",
    "case",
    "happens",
    "default",
    "network",
    "networks",
    "available",
    "able",
    "click",
    "drop",
    "arrow",
    "choose",
    "different",
    "network",
    "destination",
    "range",
    "single",
    "ipv4",
    "cider",
    "block",
    "contains",
    "ip",
    "addresses",
    "systems",
    "receive",
    "incoming",
    "packets",
    "ip",
    "range",
    "must",
    "entered",
    "valid",
    "ipv4",
    "cider",
    "block",
    "shown",
    "example",
    "field",
    "multiple",
    "routes",
    "identical",
    "destinations",
    "priority",
    "used",
    "determine",
    "route",
    "used",
    "lower",
    "number",
    "would",
    "indicate",
    "higher",
    "priority",
    "example",
    "route",
    "priority",
    "value",
    "100",
    "higher",
    "priority",
    "one",
    "priority",
    "value",
    "200",
    "highest",
    "route",
    "priority",
    "means",
    "smallest",
    "possible",
    "number",
    "well",
    "another",
    "great",
    "example",
    "look",
    "back",
    "default",
    "routes",
    "subnet",
    "routes",
    "priority",
    "zero",
    "default",
    "internet",
    "gateway",
    "priority",
    "1000",
    "therefore",
    "subnet",
    "routes",
    "take",
    "priority",
    "default",
    "internet",
    "gateway",
    "due",
    "smaller",
    "number",
    "remember",
    "good",
    "rule",
    "thumb",
    "lower",
    "number",
    "higher",
    "priority",
    "higher",
    "number",
    "lower",
    "priority",
    "get",
    "little",
    "bit",
    "granular",
    "specify",
    "list",
    "network",
    "tags",
    "route",
    "applies",
    "instances",
    "least",
    "one",
    "listed",
    "tags",
    "specify",
    "tags",
    "google",
    "cloud",
    "applies",
    "route",
    "instances",
    "network",
    "finally",
    "next",
    "hop",
    "shown",
    "previously",
    "dedicated",
    "static",
    "routes",
    "next",
    "hops",
    "point",
    "options",
    "shown",
    "earlier",
    "covered",
    "static",
    "routes",
    "bit",
    "detail",
    "want",
    "get",
    "dynamic",
    "routes",
    "dynamic",
    "routes",
    "managed",
    "one",
    "cloud",
    "routers",
    "allows",
    "dynamically",
    "exchange",
    "routes",
    "vpc",
    "network",
    "network",
    "dynamic",
    "routes",
    "destinations",
    "always",
    "represent",
    "ip",
    "ranges",
    "outside",
    "vpc",
    "network",
    "next",
    "hops",
    "always",
    "bgp",
    "peer",
    "addresses",
    "cloud",
    "router",
    "manage",
    "dynamic",
    "routes",
    "cloud",
    "vpn",
    "tunnels",
    "use",
    "dynamic",
    "routing",
    "well",
    "cloud",
    "interconnect",
    "worry",
    "getting",
    "cloud",
    "routers",
    "bit",
    "detail",
    "later",
    "lesson",
    "wanted",
    "take",
    "minute",
    "go",
    "routing",
    "order",
    "routing",
    "order",
    "deals",
    "priorities",
    "touched",
    "little",
    "bit",
    "earlier",
    "subnet",
    "routes",
    "always",
    "considered",
    "first",
    "google",
    "cloud",
    "requires",
    "subnet",
    "routes",
    "specific",
    "destinations",
    "matching",
    "ip",
    "address",
    "ranges",
    "respective",
    "subnets",
    "applicable",
    "destination",
    "found",
    "google",
    "cloud",
    "drops",
    "packet",
    "replies",
    "network",
    "unreachable",
    "error",
    "system",
    "generated",
    "routes",
    "apply",
    "instances",
    "vpc",
    "network",
    "scope",
    "instances",
    "subnet",
    "routes",
    "apply",
    "altered",
    "although",
    "replace",
    "default",
    "route",
    "note",
    "custom",
    "static",
    "routes",
    "apply",
    "instances",
    "specific",
    "instances",
    "route",
    "network",
    "tag",
    "route",
    "applies",
    "instances",
    "network",
    "vpc",
    "networks",
    "special",
    "routes",
    "used",
    "certain",
    "services",
    "referred",
    "special",
    "return",
    "paths",
    "google",
    "cloud",
    "routes",
    "defined",
    "outside",
    "vpc",
    "network",
    "google",
    "production",
    "network",
    "appear",
    "vpc",
    "network",
    "routing",
    "table",
    "remove",
    "override",
    "delete",
    "replace",
    "default",
    "route",
    "vpc",
    "network",
    "although",
    "control",
    "traffic",
    "services",
    "using",
    "firewall",
    "rules",
    "services",
    "covered",
    "load",
    "balancers",
    "internet",
    "aware",
    "proxy",
    "iap",
    "well",
    "cloud",
    "dns",
    "end",
    "lesson",
    "wanted",
    "touch",
    "private",
    "google",
    "access",
    "vm",
    "instances",
    "internal",
    "ip",
    "addresses",
    "use",
    "private",
    "google",
    "access",
    "allows",
    "reach",
    "external",
    "ip",
    "addresses",
    "google",
    "apis",
    "services",
    "source",
    "ip",
    "address",
    "packet",
    "primary",
    "internal",
    "ip",
    "address",
    "network",
    "interface",
    "address",
    "alias",
    "ip",
    "range",
    "assigned",
    "interface",
    "disable",
    "private",
    "google",
    "access",
    "vm",
    "instances",
    "longer",
    "reach",
    "google",
    "apis",
    "services",
    "able",
    "send",
    "traffic",
    "within",
    "vpc",
    "network",
    "private",
    "google",
    "access",
    "effect",
    "instances",
    "external",
    "ip",
    "addresses",
    "still",
    "access",
    "internet",
    "need",
    "special",
    "configuration",
    "send",
    "requests",
    "external",
    "ip",
    "addresses",
    "google",
    "apis",
    "services",
    "enable",
    "private",
    "google",
    "access",
    "subnet",
    "subnet",
    "basis",
    "setting",
    "subnets",
    "vpc",
    "network",
    "showing",
    "upcoming",
    "demo",
    "building",
    "custom",
    "vpc",
    "network",
    "even",
    "though",
    "next",
    "hop",
    "required",
    "routes",
    "called",
    "default",
    "internet",
    "gateway",
    "ip",
    "addresses",
    "google",
    "apis",
    "services",
    "external",
    "requests",
    "google",
    "apis",
    "services",
    "vms",
    "hold",
    "internal",
    "ip",
    "addresses",
    "subnet",
    "1",
    "private",
    "google",
    "access",
    "enabled",
    "sent",
    "public",
    "internet",
    "requests",
    "stay",
    "within",
    "google",
    "network",
    "well",
    "vms",
    "internal",
    "ip",
    "addresses",
    "meet",
    "internet",
    "access",
    "requirements",
    "access",
    "external",
    "ip",
    "addresses",
    "beyond",
    "google",
    "apis",
    "services",
    "touching",
    "diagram",
    "firewall",
    "rules",
    "vpc",
    "network",
    "configured",
    "allow",
    "internet",
    "access",
    "vm1",
    "access",
    "google",
    "apis",
    "services",
    "including",
    "cloud",
    "storage",
    "network",
    "interface",
    "located",
    "subnet",
    "1",
    "private",
    "google",
    "access",
    "enabled",
    "instance",
    "internal",
    "ip",
    "address",
    "private",
    "google",
    "access",
    "applies",
    "instance",
    "vm2",
    "also",
    "access",
    "google",
    "apis",
    "services",
    "including",
    "cloud",
    "storage",
    "external",
    "ip",
    "address",
    "private",
    "google",
    "access",
    "effect",
    "instance",
    "external",
    "ip",
    "address",
    "private",
    "google",
    "access",
    "enabled",
    "subnet",
    "instances",
    "network",
    "still",
    "able",
    "communicate",
    "internal",
    "subnet",
    "route",
    "one",
    "way",
    "private",
    "google",
    "access",
    "applied",
    "options",
    "private",
    "access",
    "well",
    "use",
    "private",
    "google",
    "access",
    "connect",
    "google",
    "apis",
    "services",
    "network",
    "cloud",
    "vpn",
    "tunnel",
    "cloud",
    "interconnect",
    "without",
    "external",
    "ip",
    "addresses",
    "also",
    "option",
    "using",
    "private",
    "google",
    "access",
    "vpc",
    "network",
    "peering",
    "connection",
    "known",
    "private",
    "services",
    "access",
    "finally",
    "last",
    "option",
    "available",
    "private",
    "google",
    "access",
    "connecting",
    "directly",
    "serverless",
    "google",
    "services",
    "internal",
    "vpc",
    "connection",
    "know",
    "lot",
    "theory",
    "take",
    "promise",
    "become",
    "lot",
    "easier",
    "concepts",
    "become",
    "less",
    "complicated",
    "start",
    "putting",
    "practice",
    "coming",
    "soon",
    "demo",
    "building",
    "custom",
    "vpc",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "routing",
    "private",
    "google",
    "access",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "discussing",
    "ip",
    "addressing",
    "network",
    "refresher",
    "lesson",
    "went",
    "bit",
    "depth",
    "p",
    "addresses",
    "broken",
    "used",
    "communication",
    "computer",
    "networks",
    "lesson",
    "getting",
    "available",
    "types",
    "ip",
    "addressing",
    "google",
    "cloud",
    "used",
    "different",
    "scenario",
    "please",
    "note",
    "exam",
    "high",
    "level",
    "overview",
    "needed",
    "know",
    "comes",
    "ip",
    "addressing",
    "details",
    "behind",
    "give",
    "better",
    "understanding",
    "use",
    "type",
    "ip",
    "address",
    "said",
    "let",
    "dive",
    "ip",
    "addressing",
    "google",
    "cloud",
    "holds",
    "quite",
    "categories",
    "really",
    "start",
    "determining",
    "whether",
    "planning",
    "communication",
    "internally",
    "within",
    "vpc",
    "external",
    "use",
    "communicate",
    "outside",
    "world",
    "internet",
    "determine",
    "type",
    "communication",
    "looking",
    "apply",
    "resources",
    "decisions",
    "need",
    "made",
    "regards",
    "options",
    "going",
    "options",
    "sec",
    "order",
    "make",
    "options",
    "little",
    "bit",
    "digestible",
    "wanted",
    "start",
    "options",
    "available",
    "internal",
    "ip",
    "addresses",
    "internal",
    "ip",
    "addresses",
    "publicly",
    "advertised",
    "used",
    "within",
    "network",
    "every",
    "vpc",
    "network",
    "network",
    "least",
    "one",
    "internal",
    "ip",
    "address",
    "range",
    "resources",
    "internal",
    "ip",
    "addresses",
    "communicate",
    "resources",
    "private",
    "network",
    "every",
    "vm",
    "instance",
    "one",
    "primary",
    "internal",
    "ip",
    "address",
    "unique",
    "vpc",
    "network",
    "assign",
    "specific",
    "internal",
    "ip",
    "address",
    "create",
    "vm",
    "instance",
    "reserve",
    "static",
    "internal",
    "ip",
    "address",
    "project",
    "assign",
    "address",
    "resources",
    "specify",
    "address",
    "one",
    "automatically",
    "assigned",
    "vm",
    "either",
    "case",
    "address",
    "must",
    "belong",
    "ip",
    "range",
    "subnet",
    "network",
    "auto",
    "mode",
    "vpc",
    "network",
    "address",
    "comes",
    "region",
    "subnet",
    "network",
    "custom",
    "mode",
    "vpc",
    "network",
    "must",
    "specify",
    "subnet",
    "ip",
    "address",
    "comes",
    "subnets",
    "primary",
    "sider",
    "range",
    "range",
    "internal",
    "ip",
    "addresses",
    "define",
    "subnet",
    "vm",
    "instance",
    "gets",
    "primary",
    "internal",
    "ip",
    "address",
    "range",
    "also",
    "allocate",
    "alias",
    "ip",
    "ranges",
    "primary",
    "range",
    "add",
    "secondary",
    "range",
    "subnet",
    "allocate",
    "alias",
    "ip",
    "ranges",
    "secondary",
    "range",
    "use",
    "alias",
    "ip",
    "ranges",
    "require",
    "secondary",
    "subnet",
    "ranges",
    "secondary",
    "subnet",
    "ranges",
    "merely",
    "provide",
    "organizational",
    "tool",
    "using",
    "ip",
    "aliasing",
    "configure",
    "multiple",
    "internal",
    "ip",
    "addresses",
    "representing",
    "containers",
    "applications",
    "hosted",
    "vm",
    "without",
    "define",
    "separate",
    "network",
    "interface",
    "assign",
    "vm",
    "alias",
    "ip",
    "ranges",
    "either",
    "subnet",
    "primary",
    "secondary",
    "ranges",
    "alias",
    "ip",
    "ranges",
    "configured",
    "google",
    "cloud",
    "automatically",
    "installs",
    "vpc",
    "network",
    "routes",
    "primary",
    "alias",
    "ip",
    "ranges",
    "subnet",
    "primary",
    "network",
    "interface",
    "container",
    "orchestrator",
    "gke",
    "need",
    "specify",
    "vpc",
    "network",
    "connectivity",
    "routes",
    "simplifies",
    "routing",
    "traffic",
    "managing",
    "containers",
    "choosing",
    "either",
    "auto",
    "mode",
    "vpc",
    "custom",
    "vpc",
    "option",
    "choose",
    "either",
    "ephemeral",
    "ip",
    "static",
    "ip",
    "ephemeral",
    "ip",
    "address",
    "ip",
    "address",
    "persist",
    "beyond",
    "life",
    "resource",
    "example",
    "create",
    "instance",
    "forwarding",
    "rule",
    "without",
    "specifying",
    "ip",
    "address",
    "google",
    "cloud",
    "automatically",
    "assign",
    "resource",
    "ephemeral",
    "ip",
    "address",
    "ephemeral",
    "ip",
    "address",
    "released",
    "delete",
    "resource",
    "ip",
    "address",
    "released",
    "free",
    "eventually",
    "assigned",
    "another",
    "resource",
    "never",
    "great",
    "option",
    "depend",
    "ip",
    "remain",
    "ephemeral",
    "ip",
    "address",
    "automatically",
    "assigned",
    "assigned",
    "selected",
    "region",
    "subnet",
    "well",
    "ephemeral",
    "ip",
    "addresses",
    "currently",
    "use",
    "promote",
    "addresses",
    "static",
    "internal",
    "ip",
    "addresses",
    "remain",
    "project",
    "actively",
    "remove",
    "note",
    "reserve",
    "existing",
    "ip",
    "address",
    "need",
    "value",
    "ip",
    "address",
    "want",
    "promote",
    "reserving",
    "static",
    "ip",
    "address",
    "assigns",
    "address",
    "project",
    "explicitly",
    "release",
    "useful",
    "dependent",
    "specific",
    "ip",
    "address",
    "specific",
    "service",
    "need",
    "prevent",
    "another",
    "resource",
    "able",
    "use",
    "address",
    "static",
    "addresses",
    "also",
    "useful",
    "need",
    "move",
    "ip",
    "address",
    "one",
    "google",
    "cloud",
    "resource",
    "another",
    "also",
    "options",
    "creating",
    "internal",
    "load",
    "balancer",
    "vm",
    "instances",
    "covered",
    "options",
    "internal",
    "ip",
    "addresses",
    "would",
    "like",
    "move",
    "cover",
    "available",
    "options",
    "external",
    "ip",
    "addresses",
    "assign",
    "external",
    "ip",
    "address",
    "instance",
    "forwarding",
    "rule",
    "need",
    "communicate",
    "internet",
    "resources",
    "another",
    "network",
    "need",
    "communicate",
    "public",
    "google",
    "cloud",
    "service",
    "sources",
    "outside",
    "google",
    "cloud",
    "vpc",
    "network",
    "address",
    "specific",
    "resource",
    "external",
    "ip",
    "address",
    "long",
    "firewall",
    "rules",
    "enable",
    "connection",
    "resources",
    "external",
    "ip",
    "address",
    "send",
    "receive",
    "traffic",
    "directly",
    "outside",
    "network",
    "like",
    "internal",
    "ip",
    "addresses",
    "external",
    "ip",
    "addresses",
    "option",
    "choosing",
    "ephemeral",
    "static",
    "ip",
    "address",
    "ephemeral",
    "external",
    "ip",
    "address",
    "ip",
    "address",
    "persist",
    "beyond",
    "life",
    "resource",
    "follows",
    "rules",
    "ephemeral",
    "internal",
    "ip",
    "addresses",
    "create",
    "instance",
    "forwarding",
    "rule",
    "without",
    "specifying",
    "ip",
    "address",
    "resource",
    "automatically",
    "assigned",
    "ephemeral",
    "external",
    "ip",
    "address",
    "something",
    "see",
    "quite",
    "often",
    "ephemeral",
    "external",
    "ip",
    "addresses",
    "released",
    "resource",
    "delete",
    "resource",
    "vm",
    "instances",
    "ephemeral",
    "external",
    "ip",
    "address",
    "also",
    "released",
    "stop",
    "instance",
    "restart",
    "instance",
    "assigned",
    "new",
    "ephemeral",
    "external",
    "ip",
    "address",
    "existing",
    "vm",
    "external",
    "ip",
    "address",
    "assign",
    "one",
    "forwarding",
    "rules",
    "always",
    "ip",
    "address",
    "whether",
    "external",
    "internal",
    "need",
    "assign",
    "ip",
    "address",
    "forwarding",
    "rule",
    "created",
    "instance",
    "ephemeral",
    "external",
    "ip",
    "address",
    "want",
    "permanently",
    "assign",
    "ip",
    "project",
    "like",
    "ephemeral",
    "internal",
    "ip",
    "addresses",
    "option",
    "promote",
    "ip",
    "address",
    "ephemeral",
    "static",
    "case",
    "promoting",
    "ephemeral",
    "external",
    "ip",
    "address",
    "static",
    "external",
    "ip",
    "address",
    "assigning",
    "static",
    "ip",
    "address",
    "assigned",
    "project",
    "long",
    "term",
    "explicitly",
    "released",
    "assignment",
    "remain",
    "attached",
    "resource",
    "explicitly",
    "detached",
    "vm",
    "instances",
    "static",
    "external",
    "ip",
    "addresses",
    "remain",
    "attached",
    "stopped",
    "instances",
    "removed",
    "useful",
    "dependent",
    "specific",
    "ip",
    "address",
    "specific",
    "service",
    "like",
    "web",
    "server",
    "global",
    "load",
    "balancer",
    "needs",
    "access",
    "internet",
    "static",
    "external",
    "ip",
    "addresses",
    "either",
    "regional",
    "global",
    "resource",
    "regional",
    "static",
    "ip",
    "address",
    "allows",
    "resources",
    "region",
    "resources",
    "zones",
    "within",
    "region",
    "use",
    "ip",
    "address",
    "note",
    "use",
    "publicly",
    "routable",
    "ip",
    "address",
    "prefixes",
    "google",
    "cloud",
    "external",
    "ip",
    "addresses",
    "advertise",
    "internet",
    "caveat",
    "must",
    "bring",
    "minimum",
    "24",
    "cider",
    "block",
    "discussed",
    "internal",
    "external",
    "ip",
    "addressing",
    "options",
    "wanted",
    "move",
    "internal",
    "ip",
    "address",
    "reservations",
    "static",
    "internal",
    "ips",
    "provide",
    "ability",
    "reserve",
    "internal",
    "ip",
    "addresses",
    "ip",
    "range",
    "configured",
    "subnet",
    "assign",
    "reserved",
    "internal",
    "addresses",
    "resources",
    "needed",
    "reserving",
    "internal",
    "ip",
    "address",
    "takes",
    "address",
    "dynamic",
    "allocation",
    "pool",
    "prevents",
    "used",
    "automatic",
    "allocations",
    "ability",
    "reserve",
    "static",
    "internal",
    "ip",
    "addresses",
    "always",
    "use",
    "ip",
    "address",
    "resource",
    "even",
    "delete",
    "recreate",
    "resource",
    "comes",
    "internal",
    "ip",
    "address",
    "reservation",
    "either",
    "reserve",
    "static",
    "internal",
    "ip",
    "address",
    "creating",
    "associated",
    "resource",
    "create",
    "resource",
    "ephemeral",
    "internal",
    "ip",
    "address",
    "promote",
    "ephemeral",
    "ip",
    "address",
    "static",
    "internal",
    "ip",
    "address",
    "give",
    "bit",
    "context",
    "diagram",
    "run",
    "first",
    "example",
    "would",
    "create",
    "subnet",
    "vpc",
    "network",
    "would",
    "reserve",
    "internal",
    "ip",
    "address",
    "subnet",
    "primary",
    "ip",
    "range",
    "diagram",
    "marked",
    "held",
    "reserved",
    "later",
    "use",
    "resource",
    "decide",
    "create",
    "vm",
    "instance",
    "internal",
    "load",
    "balancer",
    "use",
    "reserved",
    "ip",
    "address",
    "created",
    "previous",
    "step",
    "p",
    "address",
    "becomes",
    "marked",
    "reserved",
    "use",
    "touching",
    "second",
    "example",
    "would",
    "first",
    "create",
    "subnet",
    "vpc",
    "network",
    "would",
    "create",
    "vm",
    "instance",
    "internal",
    "load",
    "balancer",
    "either",
    "automatically",
    "allocated",
    "ephemeral",
    "ip",
    "address",
    "specific",
    "ip",
    "address",
    "chosen",
    "within",
    "specific",
    "subnet",
    "ephemeral",
    "ip",
    "address",
    "use",
    "promote",
    "ephemeral",
    "ip",
    "address",
    "static",
    "internal",
    "ip",
    "address",
    "would",
    "become",
    "reserved",
    "use",
    "comes",
    "external",
    "ip",
    "address",
    "reservation",
    "able",
    "obtain",
    "static",
    "external",
    "ip",
    "address",
    "using",
    "one",
    "following",
    "two",
    "options",
    "either",
    "reserve",
    "new",
    "static",
    "external",
    "ip",
    "address",
    "assign",
    "address",
    "new",
    "vm",
    "instance",
    "promote",
    "existing",
    "ephemeral",
    "external",
    "ip",
    "address",
    "become",
    "static",
    "external",
    "ip",
    "address",
    "case",
    "external",
    "ip",
    "addresses",
    "reserve",
    "two",
    "different",
    "types",
    "regional",
    "ip",
    "address",
    "used",
    "vm",
    "instances",
    "one",
    "network",
    "interfaces",
    "network",
    "load",
    "balancers",
    "ip",
    "addresses",
    "created",
    "either",
    "console",
    "command",
    "line",
    "limitation",
    "allowed",
    "create",
    "ipv4",
    "ip",
    "addresses",
    "type",
    "global",
    "ip",
    "address",
    "used",
    "global",
    "load",
    "balancers",
    "created",
    "either",
    "console",
    "command",
    "line",
    "shown",
    "limitation",
    "must",
    "choose",
    "premium",
    "network",
    "service",
    "tier",
    "order",
    "create",
    "global",
    "ip",
    "address",
    "reserving",
    "address",
    "finally",
    "assign",
    "instance",
    "instance",
    "creation",
    "existing",
    "instance",
    "see",
    "lot",
    "take",
    "comes",
    "understanding",
    "ip",
    "addressing",
    "hope",
    "lesson",
    "given",
    "better",
    "insight",
    "type",
    "ips",
    "used",
    "specific",
    "scenario",
    "worry",
    "options",
    "may",
    "seem",
    "overwhelming",
    "start",
    "working",
    "ip",
    "addresses",
    "often",
    "options",
    "become",
    "much",
    "clearer",
    "use",
    "said",
    "beginning",
    "high",
    "level",
    "concepts",
    "needed",
    "know",
    "exam",
    "knowing",
    "options",
    "allow",
    "make",
    "better",
    "decisions",
    "daily",
    "role",
    "cloud",
    "engineer",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "ip",
    "addressing",
    "google",
    "cloud",
    "covered",
    "theory",
    "behind",
    "ip",
    "addressing",
    "google",
    "cloud",
    "wanted",
    "bring",
    "console",
    "demo",
    "get",
    "creating",
    "internal",
    "external",
    "static",
    "ip",
    "addresses",
    "explained",
    "lot",
    "take",
    "lesson",
    "would",
    "perfect",
    "opportunity",
    "get",
    "stretch",
    "grab",
    "tea",
    "coffee",
    "whenever",
    "ready",
    "join",
    "back",
    "console",
    "mark",
    "lesson",
    "complete",
    "see",
    "next",
    "music",
    "welcome",
    "back",
    "demonstration",
    "going",
    "going",
    "create",
    "apply",
    "internal",
    "external",
    "static",
    "ip",
    "addresses",
    "going",
    "show",
    "create",
    "console",
    "command",
    "line",
    "well",
    "promote",
    "ip",
    "addresses",
    "ephemeral",
    "ips",
    "static",
    "ips",
    "done",
    "creating",
    "ip",
    "addresses",
    "going",
    "show",
    "steps",
    "delete",
    "lot",
    "get",
    "done",
    "let",
    "dive",
    "demonstration",
    "going",
    "using",
    "project",
    "default",
    "vpc",
    "created",
    "case",
    "using",
    "project",
    "bowtieinc",
    "dev",
    "start",
    "make",
    "sure",
    "default",
    "vpc",
    "created",
    "project",
    "selected",
    "order",
    "going",
    "head",
    "navigation",
    "menu",
    "going",
    "scroll",
    "vpc",
    "network",
    "going",
    "see",
    "default",
    "vpc",
    "created",
    "go",
    "ahead",
    "start",
    "demonstration",
    "first",
    "thing",
    "wanted",
    "demonstrate",
    "create",
    "static",
    "internal",
    "ip",
    "address",
    "order",
    "demonstrate",
    "going",
    "using",
    "vm",
    "instance",
    "going",
    "head",
    "navigation",
    "menu",
    "going",
    "scroll",
    "compute",
    "engine",
    "going",
    "create",
    "new",
    "instance",
    "simply",
    "clicking",
    "create",
    "instance",
    "name",
    "going",
    "keep",
    "instance",
    "region",
    "want",
    "select",
    "us",
    "east",
    "one",
    "going",
    "keep",
    "zone",
    "default",
    "selected",
    "machine",
    "type",
    "going",
    "select",
    "drop",
    "select",
    "e2",
    "micro",
    "going",
    "leave",
    "everything",
    "else",
    "default",
    "going",
    "scroll",
    "management",
    "security",
    "disks",
    "networking",
    "soul",
    "tenancy",
    "going",
    "select",
    "networking",
    "tab",
    "going",
    "select",
    "network",
    "interfaces",
    "default",
    "network",
    "interface",
    "create",
    "static",
    "internal",
    "ip",
    "clicking",
    "drop",
    "primary",
    "internal",
    "ip",
    "see",
    "ephemeral",
    "automatic",
    "ephemeral",
    "custom",
    "reserve",
    "static",
    "internal",
    "ip",
    "address",
    "going",
    "select",
    "reserve",
    "static",
    "internal",
    "ip",
    "address",
    "get",
    "prompting",
    "fields",
    "fill",
    "reserve",
    "static",
    "internal",
    "ip",
    "address",
    "name",
    "going",
    "call",
    "static",
    "dash",
    "internal",
    "purposes",
    "demo",
    "going",
    "leave",
    "subnet",
    "static",
    "ip",
    "address",
    "currently",
    "selected",
    "wanted",
    "select",
    "specific",
    "ip",
    "address",
    "click",
    "drop",
    "select",
    "let",
    "choose",
    "give",
    "option",
    "enter",
    "custom",
    "ip",
    "address",
    "subnet",
    "range",
    "selected",
    "specific",
    "sub",
    "network",
    "going",
    "going",
    "select",
    "assign",
    "automatically",
    "going",
    "leave",
    "purpose",
    "going",
    "simply",
    "click",
    "reserve",
    "going",
    "reserve",
    "specific",
    "ip",
    "address",
    "see",
    "primary",
    "internal",
    "ip",
    "marked",
    "static",
    "internal",
    "going",
    "first",
    "static",
    "internal",
    "ip",
    "address",
    "done",
    "steps",
    "simply",
    "click",
    "done",
    "head",
    "bottom",
    "simply",
    "click",
    "create",
    "create",
    "instance",
    "instance",
    "finishes",
    "creating",
    "see",
    "internal",
    "static",
    "ip",
    "address",
    "see",
    "static",
    "internal",
    "ip",
    "address",
    "assigned",
    "default",
    "network",
    "interface",
    "instance",
    "order",
    "view",
    "static",
    "internal",
    "ip",
    "address",
    "console",
    "view",
    "vpc",
    "networks",
    "drill",
    "specific",
    "vpc",
    "find",
    "static",
    "internal",
    "ip",
    "addresses",
    "wanted",
    "show",
    "view",
    "querying",
    "command",
    "line",
    "order",
    "going",
    "simply",
    "go",
    "menu",
    "bar",
    "right",
    "hand",
    "side",
    "open",
    "cloud",
    "shell",
    "cloud",
    "shell",
    "come",
    "going",
    "simply",
    "paste",
    "command",
    "gcloud",
    "compute",
    "addresses",
    "list",
    "give",
    "list",
    "internal",
    "ip",
    "addresses",
    "available",
    "going",
    "prompted",
    "authorize",
    "api",
    "call",
    "using",
    "credentials",
    "definitely",
    "going",
    "click",
    "authorize",
    "expected",
    "static",
    "internal",
    "ip",
    "address",
    "created",
    "earlier",
    "shown",
    "marked",
    "internal",
    "region",
    "us",
    "east",
    "one",
    "default",
    "subnet",
    "status",
    "use",
    "discussed",
    "last",
    "lesson",
    "static",
    "ip",
    "addresses",
    "persist",
    "even",
    "resource",
    "deleted",
    "demonstrate",
    "going",
    "delete",
    "instance",
    "going",
    "simply",
    "check",
    "instance",
    "go",
    "top",
    "click",
    "delete",
    "going",
    "prompted",
    "make",
    "sure",
    "want",
    "delete",
    "yes",
    "going",
    "click",
    "delete",
    "instance",
    "deleted",
    "going",
    "query",
    "ip",
    "addresses",
    "using",
    "command",
    "gcloud",
    "compute",
    "addresses",
    "list",
    "going",
    "hit",
    "enter",
    "see",
    "ip",
    "address",
    "static",
    "dash",
    "internal",
    "still",
    "persists",
    "status",
    "marked",
    "reserved",
    "wanted",
    "use",
    "ip",
    "address",
    "another",
    "instance",
    "simply",
    "clicking",
    "create",
    "instance",
    "top",
    "menu",
    "select",
    "static",
    "dash",
    "internal",
    "ip",
    "address",
    "going",
    "quickly",
    "close",
    "cloud",
    "shell",
    "going",
    "leave",
    "name",
    "instance",
    "one",
    "region",
    "select",
    "us",
    "east",
    "one",
    "going",
    "keep",
    "zone",
    "default",
    "selected",
    "machine",
    "type",
    "going",
    "select",
    "e2",
    "micro",
    "machine",
    "type",
    "going",
    "scroll",
    "management",
    "security",
    "disks",
    "networking",
    "soul",
    "tenancy",
    "going",
    "select",
    "networking",
    "tab",
    "network",
    "interfaces",
    "going",
    "select",
    "default",
    "network",
    "interface",
    "primary",
    "internal",
    "ip",
    "click",
    "drop",
    "option",
    "selecting",
    "static",
    "dash",
    "internal",
    "static",
    "ip",
    "address",
    "wanted",
    "move",
    "demonstrate",
    "promote",
    "internal",
    "ephemeral",
    "ip",
    "address",
    "internal",
    "static",
    "ip",
    "address",
    "order",
    "going",
    "select",
    "ephemeral",
    "automatic",
    "going",
    "scroll",
    "click",
    "done",
    "going",
    "go",
    "ahead",
    "create",
    "instance",
    "instance",
    "ready",
    "able",
    "go",
    "edit",
    "network",
    "interface",
    "instance",
    "ready",
    "going",
    "drill",
    "instance",
    "going",
    "go",
    "top",
    "click",
    "edit",
    "going",
    "scroll",
    "network",
    "interfaces",
    "going",
    "edit",
    "default",
    "network",
    "interface",
    "going",
    "scroll",
    "little",
    "bit",
    "internal",
    "iptype",
    "going",
    "click",
    "drop",
    "going",
    "select",
    "static",
    "taking",
    "current",
    "ip",
    "address",
    "promoting",
    "static",
    "internal",
    "ip",
    "address",
    "going",
    "prompted",
    "confirming",
    "reservation",
    "static",
    "internal",
    "ip",
    "address",
    "notice",
    "options",
    "going",
    "type",
    "name",
    "going",
    "call",
    "promoted",
    "static",
    "going",
    "click",
    "reserve",
    "promote",
    "internal",
    "ip",
    "address",
    "ephemeral",
    "ip",
    "address",
    "static",
    "ip",
    "address",
    "going",
    "click",
    "done",
    "going",
    "scroll",
    "click",
    "save",
    "want",
    "verify",
    "ip",
    "address",
    "going",
    "go",
    "ahead",
    "open",
    "cloud",
    "shell",
    "going",
    "use",
    "command",
    "used",
    "earlier",
    "gcloud",
    "compute",
    "addresses",
    "list",
    "going",
    "hit",
    "enter",
    "expected",
    "promoted",
    "static",
    "ip",
    "address",
    "showing",
    "internal",
    "ip",
    "address",
    "region",
    "us",
    "east",
    "1",
    "default",
    "subnet",
    "status",
    "use",
    "recap",
    "created",
    "static",
    "internal",
    "ip",
    "address",
    "first",
    "instance",
    "second",
    "instance",
    "promoted",
    "ephemeral",
    "internal",
    "ip",
    "address",
    "static",
    "internal",
    "ip",
    "address",
    "able",
    "verify",
    "cloud",
    "shell",
    "using",
    "gcloud",
    "compute",
    "addresses",
    "list",
    "command",
    "end",
    "part",
    "one",
    "demo",
    "getting",
    "bit",
    "long",
    "decided",
    "break",
    "would",
    "great",
    "opportunity",
    "get",
    "stretch",
    "get",
    "coffee",
    "tea",
    "whenever",
    "ready",
    "join",
    "part",
    "two",
    "starting",
    "immediately",
    "end",
    "part",
    "one",
    "mark",
    "complete",
    "see",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "part",
    "two",
    "creating",
    "internal",
    "external",
    "ip",
    "addresses",
    "demo",
    "starting",
    "immediately",
    "end",
    "part",
    "one",
    "said",
    "let",
    "dive",
    "gone",
    "create",
    "static",
    "ip",
    "addresses",
    "promote",
    "ephemeral",
    "ip",
    "addresses",
    "static",
    "ip",
    "addresses",
    "internal",
    "ips",
    "want",
    "go",
    "ahead",
    "go",
    "external",
    "ips",
    "going",
    "first",
    "start",
    "deleting",
    "instance",
    "going",
    "go",
    "ahead",
    "click",
    "delete",
    "instead",
    "compute",
    "engine",
    "interface",
    "want",
    "go",
    "external",
    "ip",
    "address",
    "interface",
    "found",
    "vpc",
    "network",
    "menu",
    "going",
    "go",
    "ahead",
    "left",
    "hand",
    "corner",
    "click",
    "navigation",
    "menu",
    "going",
    "scroll",
    "vpc",
    "network",
    "menu",
    "left",
    "hand",
    "side",
    "simply",
    "click",
    "external",
    "ip",
    "addresses",
    "see",
    "console",
    "create",
    "static",
    "external",
    "ip",
    "address",
    "start",
    "process",
    "simply",
    "click",
    "reserve",
    "static",
    "address",
    "prompted",
    "bunch",
    "fields",
    "fill",
    "create",
    "new",
    "external",
    "static",
    "ip",
    "address",
    "name",
    "static",
    "ip",
    "address",
    "simply",
    "call",
    "external",
    "dash",
    "static",
    "going",
    "use",
    "description",
    "network",
    "service",
    "tier",
    "choose",
    "either",
    "premium",
    "standard",
    "see",
    "currently",
    "using",
    "premium",
    "network",
    "service",
    "tier",
    "hover",
    "question",
    "mark",
    "tells",
    "little",
    "bit",
    "network",
    "service",
    "tier",
    "see",
    "premium",
    "tier",
    "allows",
    "higher",
    "performance",
    "well",
    "lower",
    "latency",
    "routing",
    "premium",
    "routing",
    "comes",
    "cost",
    "whereas",
    "standard",
    "network",
    "service",
    "tier",
    "offers",
    "lower",
    "performance",
    "compared",
    "premium",
    "network",
    "service",
    "tier",
    "little",
    "bit",
    "cost",
    "effective",
    "still",
    "delivering",
    "performance",
    "comparable",
    "cloud",
    "providers",
    "going",
    "leave",
    "default",
    "selected",
    "discussed",
    "previous",
    "lesson",
    "ipv6",
    "external",
    "static",
    "ip",
    "addresses",
    "used",
    "global",
    "load",
    "balancers",
    "since",
    "using",
    "instance",
    "ipv4",
    "address",
    "suffice",
    "note",
    "network",
    "service",
    "tier",
    "click",
    "standard",
    "ipv6",
    "grayed",
    "well",
    "global",
    "selection",
    "order",
    "use",
    "global",
    "load",
    "balancing",
    "need",
    "using",
    "premium",
    "network",
    "service",
    "tier",
    "whenever",
    "creating",
    "global",
    "load",
    "balancer",
    "please",
    "keep",
    "mind",
    "cost",
    "may",
    "increase",
    "going",
    "switch",
    "back",
    "premium",
    "type",
    "going",
    "keep",
    "regional",
    "region",
    "going",
    "select",
    "region",
    "instance",
    "going",
    "us",
    "east",
    "1",
    "created",
    "instance",
    "yet",
    "nothing",
    "attach",
    "going",
    "click",
    "drop",
    "click",
    "none",
    "another",
    "note",
    "wanted",
    "quickly",
    "highlight",
    "caution",
    "point",
    "static",
    "ip",
    "addresses",
    "attached",
    "instance",
    "low",
    "balancer",
    "still",
    "billed",
    "hourly",
    "rate",
    "using",
    "static",
    "ip",
    "addresses",
    "please",
    "remember",
    "delete",
    "otherwise",
    "charged",
    "everything",
    "looks",
    "good",
    "create",
    "external",
    "static",
    "ip",
    "address",
    "going",
    "simply",
    "click",
    "reserve",
    "create",
    "external",
    "static",
    "ip",
    "address",
    "put",
    "status",
    "reserved",
    "see",
    "external",
    "static",
    "ip",
    "address",
    "created",
    "find",
    "external",
    "static",
    "ip",
    "addresses",
    "create",
    "future",
    "right",
    "menu",
    "still",
    "able",
    "query",
    "external",
    "ip",
    "addresses",
    "command",
    "line",
    "order",
    "assign",
    "ip",
    "address",
    "network",
    "interface",
    "going",
    "go",
    "back",
    "navigation",
    "menu",
    "scroll",
    "compute",
    "engine",
    "create",
    "new",
    "instance",
    "go",
    "ahead",
    "click",
    "create",
    "instance",
    "going",
    "go",
    "ahead",
    "keep",
    "name",
    "instance",
    "instance",
    "one",
    "region",
    "going",
    "select",
    "us",
    "east",
    "one",
    "going",
    "keep",
    "zone",
    "selected",
    "default",
    "machine",
    "type",
    "going",
    "select",
    "e2",
    "micro",
    "machine",
    "type",
    "going",
    "scroll",
    "management",
    "security",
    "disks",
    "networking",
    "soul",
    "tenancy",
    "going",
    "select",
    "networking",
    "tab",
    "network",
    "interfaces",
    "going",
    "select",
    "default",
    "network",
    "interface",
    "going",
    "scroll",
    "little",
    "bit",
    "external",
    "ip",
    "ephemeral",
    "selected",
    "click",
    "drop",
    "option",
    "select",
    "ip",
    "created",
    "external",
    "dash",
    "static",
    "ip",
    "going",
    "select",
    "going",
    "click",
    "done",
    "go",
    "click",
    "create",
    "instance",
    "created",
    "see",
    "external",
    "ip",
    "address",
    "external",
    "static",
    "assigned",
    "external",
    "ip",
    "expected",
    "always",
    "like",
    "verify",
    "work",
    "going",
    "go",
    "ahead",
    "open",
    "cloud",
    "shell",
    "verify",
    "command",
    "line",
    "going",
    "query",
    "available",
    "static",
    "ip",
    "addresses",
    "using",
    "command",
    "gcloud",
    "compute",
    "addresses",
    "list",
    "going",
    "hit",
    "enter",
    "see",
    "external",
    "static",
    "ip",
    "address",
    "us",
    "east",
    "one",
    "region",
    "use",
    "assigned",
    "network",
    "interface",
    "instance",
    "one",
    "go",
    "ahead",
    "complete",
    "demo",
    "one",
    "step",
    "wanted",
    "go",
    "promote",
    "ephemeral",
    "external",
    "ip",
    "address",
    "static",
    "external",
    "ip",
    "address",
    "going",
    "go",
    "top",
    "menu",
    "create",
    "new",
    "instance",
    "going",
    "leave",
    "name",
    "instance",
    "two",
    "region",
    "going",
    "select",
    "us",
    "east",
    "one",
    "going",
    "keep",
    "zone",
    "selected",
    "default",
    "machine",
    "type",
    "going",
    "select",
    "e2",
    "micro",
    "machine",
    "type",
    "going",
    "leave",
    "everything",
    "else",
    "default",
    "going",
    "scroll",
    "management",
    "security",
    "disks",
    "networking",
    "soul",
    "tenancy",
    "select",
    "networking",
    "tab",
    "going",
    "verify",
    "going",
    "using",
    "ephemeral",
    "external",
    "ip",
    "upon",
    "creation",
    "instance",
    "scroll",
    "little",
    "bit",
    "see",
    "external",
    "ephemeral",
    "ip",
    "address",
    "used",
    "upon",
    "creation",
    "ip",
    "address",
    "promoting",
    "static",
    "ip",
    "command",
    "line",
    "going",
    "go",
    "ahead",
    "scroll",
    "click",
    "done",
    "going",
    "scroll",
    "click",
    "create",
    "instance",
    "created",
    "go",
    "ahead",
    "promote",
    "ephemeral",
    "external",
    "ip",
    "address",
    "okay",
    "instance",
    "created",
    "along",
    "external",
    "ephemeral",
    "ip",
    "address",
    "go",
    "ahead",
    "promote",
    "ephemeral",
    "ip",
    "address",
    "order",
    "going",
    "move",
    "back",
    "cloud",
    "shell",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "use",
    "command",
    "gcloud",
    "compute",
    "addresses",
    "create",
    "name",
    "want",
    "use",
    "static",
    "external",
    "ip",
    "address",
    "going",
    "call",
    "promoted",
    "external",
    "going",
    "use",
    "flag",
    "dash",
    "dash",
    "addresses",
    "need",
    "external",
    "ip",
    "address",
    "promoting",
    "going",
    "going",
    "copy",
    "clipboard",
    "going",
    "paste",
    "command",
    "line",
    "going",
    "add",
    "region",
    "flag",
    "along",
    "region",
    "us",
    "east",
    "one",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "success",
    "ephemeral",
    "external",
    "ip",
    "address",
    "promoted",
    "static",
    "external",
    "ip",
    "address",
    "course",
    "verify",
    "going",
    "simply",
    "type",
    "gcloud",
    "compute",
    "addresses",
    "list",
    "command",
    "going",
    "hit",
    "enter",
    "expected",
    "promoted",
    "external",
    "ip",
    "marked",
    "external",
    "east",
    "one",
    "region",
    "status",
    "marked",
    "use",
    "wanted",
    "take",
    "moment",
    "congratulate",
    "making",
    "demonstration",
    "creating",
    "internal",
    "external",
    "ip",
    "addresses",
    "well",
    "promoting",
    "recap",
    "created",
    "static",
    "internal",
    "ip",
    "address",
    "conjunction",
    "creating",
    "new",
    "instance",
    "assigning",
    "instance",
    "created",
    "another",
    "instance",
    "used",
    "ephemeral",
    "ip",
    "promoted",
    "static",
    "internal",
    "ip",
    "address",
    "created",
    "external",
    "static",
    "ip",
    "address",
    "using",
    "console",
    "assigned",
    "brand",
    "new",
    "instance",
    "created",
    "another",
    "instance",
    "using",
    "external",
    "ephemeral",
    "ip",
    "address",
    "promoted",
    "static",
    "external",
    "ip",
    "address",
    "using",
    "console",
    "command",
    "line",
    "wanted",
    "congratulate",
    "great",
    "job",
    "end",
    "demonstration",
    "wanted",
    "go",
    "steps",
    "cleaning",
    "leftover",
    "resources",
    "first",
    "thing",
    "want",
    "delete",
    "instances",
    "select",
    "go",
    "top",
    "click",
    "delete",
    "going",
    "ask",
    "want",
    "delete",
    "two",
    "instances",
    "yes",
    "click",
    "delete",
    "delete",
    "instances",
    "free",
    "external",
    "ip",
    "addresses",
    "able",
    "delete",
    "instances",
    "deleted",
    "going",
    "go",
    "vpc",
    "network",
    "menu",
    "going",
    "head",
    "external",
    "ip",
    "address",
    "console",
    "able",
    "delete",
    "external",
    "ip",
    "addresses",
    "going",
    "select",
    "going",
    "go",
    "top",
    "menu",
    "click",
    "release",
    "static",
    "address",
    "get",
    "prompt",
    "asking",
    "want",
    "delete",
    "addresses",
    "answer",
    "yes",
    "click",
    "delete",
    "within",
    "seconds",
    "external",
    "ip",
    "addresses",
    "deleted",
    "left",
    "delete",
    "two",
    "static",
    "internal",
    "ip",
    "addresses",
    "said",
    "console",
    "able",
    "view",
    "static",
    "internal",
    "ip",
    "addresses",
    "command",
    "line",
    "going",
    "go",
    "back",
    "cloud",
    "shell",
    "going",
    "clear",
    "screen",
    "going",
    "list",
    "ip",
    "addresses",
    "currently",
    "network",
    "promoted",
    "static",
    "static",
    "internal",
    "command",
    "delete",
    "static",
    "ip",
    "addresses",
    "follows",
    "gcloud",
    "compute",
    "addresses",
    "delete",
    "name",
    "ip",
    "address",
    "want",
    "delete",
    "promoted",
    "static",
    "need",
    "region",
    "flag",
    "region",
    "us",
    "east",
    "one",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "going",
    "prompt",
    "want",
    "continue",
    "going",
    "type",
    "yes",
    "hit",
    "enter",
    "success",
    "deleted",
    "double",
    "check",
    "going",
    "quick",
    "verification",
    "yes",
    "deleted",
    "left",
    "delete",
    "static",
    "internal",
    "ip",
    "address",
    "going",
    "paste",
    "command",
    "gcloud",
    "compute",
    "addresses",
    "delete",
    "name",
    "ip",
    "address",
    "want",
    "delete",
    "static",
    "dash",
    "internal",
    "along",
    "region",
    "flag",
    "us",
    "east",
    "one",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "yes",
    "continue",
    "success",
    "one",
    "last",
    "verification",
    "make",
    "sure",
    "cleared",
    "see",
    "static",
    "p",
    "addresses",
    "concludes",
    "demonstration",
    "creating",
    "assigning",
    "deleting",
    "static",
    "internal",
    "static",
    "external",
    "ip",
    "addresses",
    "wanted",
    "congratulate",
    "great",
    "job",
    "pretty",
    "much",
    "wanted",
    "cover",
    "demo",
    "creating",
    "internal",
    "external",
    "static",
    "ip",
    "addresses",
    "mark",
    "complete",
    "see",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "diving",
    "network",
    "security",
    "introducing",
    "vpc",
    "firewall",
    "rules",
    "service",
    "used",
    "filter",
    "incoming",
    "outgoing",
    "network",
    "traffic",
    "based",
    "set",
    "rules",
    "concept",
    "fairly",
    "familiar",
    "exam",
    "comes",
    "extremely",
    "often",
    "working",
    "engineer",
    "google",
    "cloud",
    "definitely",
    "essential",
    "security",
    "layer",
    "prevents",
    "unwanted",
    "access",
    "cloud",
    "infrastructure",
    "vpc",
    "firewall",
    "rules",
    "apply",
    "given",
    "project",
    "network",
    "like",
    "also",
    "apply",
    "firewall",
    "rules",
    "across",
    "organization",
    "sticking",
    "strictly",
    "vpc",
    "firewall",
    "rules",
    "lesson",
    "vpc",
    "firewall",
    "rules",
    "let",
    "allow",
    "deny",
    "connections",
    "vm",
    "instances",
    "based",
    "configuration",
    "specify",
    "rules",
    "apply",
    "either",
    "incoming",
    "connections",
    "outgoing",
    "connections",
    "never",
    "time",
    "enabled",
    "vpc",
    "firewall",
    "rules",
    "always",
    "enforced",
    "regardless",
    "configuration",
    "operating",
    "system",
    "even",
    "started",
    "every",
    "vpc",
    "network",
    "functions",
    "distributed",
    "firewall",
    "firewall",
    "rules",
    "defined",
    "network",
    "level",
    "connections",
    "allowed",
    "denied",
    "per",
    "instance",
    "basis",
    "think",
    "vpc",
    "firewall",
    "rules",
    "existing",
    "instances",
    "networks",
    "also",
    "individual",
    "instances",
    "within",
    "network",
    "create",
    "vpc",
    "firewall",
    "rule",
    "specify",
    "vpc",
    "network",
    "set",
    "components",
    "define",
    "rule",
    "components",
    "enable",
    "target",
    "certain",
    "types",
    "traffic",
    "based",
    "traffic",
    "protocol",
    "ports",
    "sources",
    "destinations",
    "create",
    "modify",
    "firewall",
    "rule",
    "specify",
    "instances",
    "intended",
    "apply",
    "using",
    "target",
    "component",
    "rule",
    "addition",
    "firewall",
    "rules",
    "create",
    "google",
    "cloud",
    "rules",
    "affect",
    "incoming",
    "outgoing",
    "connections",
    "instance",
    "google",
    "cloud",
    "allow",
    "certain",
    "ip",
    "protocols",
    "egress",
    "traffic",
    "tcp",
    "port",
    "25",
    "within",
    "vpc",
    "network",
    "protocols",
    "tcp",
    "udp",
    "icmp",
    "gre",
    "external",
    "ip",
    "addresses",
    "google",
    "cloud",
    "resources",
    "blocked",
    "google",
    "cloud",
    "always",
    "allows",
    "communication",
    "vm",
    "instance",
    "corresponding",
    "metadata",
    "server",
    "server",
    "essential",
    "operation",
    "instance",
    "instance",
    "access",
    "regardless",
    "firewall",
    "rules",
    "configure",
    "metadata",
    "server",
    "provides",
    "basic",
    "services",
    "instance",
    "like",
    "dhcp",
    "dns",
    "resolution",
    "instance",
    "metadata",
    "network",
    "time",
    "protocol",
    "ntp",
    "note",
    "every",
    "network",
    "two",
    "implied",
    "firewall",
    "rules",
    "permit",
    "outgoing",
    "connections",
    "block",
    "incoming",
    "connections",
    "firewall",
    "rules",
    "create",
    "override",
    "implied",
    "rules",
    "first",
    "implied",
    "rule",
    "allow",
    "egress",
    "rule",
    "egress",
    "rule",
    "whose",
    "action",
    "allow",
    "destination",
    "ips",
    "priority",
    "lowest",
    "possible",
    "lets",
    "instance",
    "send",
    "traffic",
    "destination",
    "except",
    "traffic",
    "blocked",
    "google",
    "cloud",
    "second",
    "implied",
    "firewall",
    "rule",
    "deny",
    "ingress",
    "rule",
    "ingress",
    "rule",
    "whose",
    "action",
    "deny",
    "source",
    "ips",
    "priority",
    "lowest",
    "possible",
    "protects",
    "instances",
    "blocking",
    "incoming",
    "connections",
    "know",
    "touched",
    "earlier",
    "previous",
    "lesson",
    "felt",
    "need",
    "bring",
    "rules",
    "rules",
    "referring",
    "regards",
    "default",
    "vpc",
    "network",
    "explained",
    "earlier",
    "rules",
    "deleted",
    "modified",
    "necessary",
    "rules",
    "see",
    "table",
    "allow",
    "ingress",
    "connections",
    "source",
    "instance",
    "network",
    "comes",
    "icmp",
    "rdp",
    "port",
    "3389",
    "windows",
    "remote",
    "desktop",
    "protocol",
    "ssh",
    "port",
    "well",
    "last",
    "rule",
    "allows",
    "ingress",
    "connections",
    "protocols",
    "ports",
    "among",
    "instances",
    "network",
    "permits",
    "incoming",
    "connections",
    "vm",
    "instances",
    "others",
    "network",
    "rule",
    "priority",
    "six",
    "five",
    "five",
    "four",
    "second",
    "lowest",
    "priority",
    "breaking",
    "firewall",
    "rules",
    "characteristics",
    "google",
    "put",
    "place",
    "help",
    "define",
    "rules",
    "characteristics",
    "follows",
    "firewall",
    "rule",
    "applies",
    "incoming",
    "outgoing",
    "connections",
    "firewall",
    "rules",
    "support",
    "ipv4",
    "connections",
    "specifying",
    "source",
    "ingress",
    "rule",
    "destination",
    "egress",
    "rule",
    "address",
    "use",
    "ipv4",
    "address",
    "ipv4",
    "block",
    "insider",
    "notation",
    "well",
    "firewall",
    "rules",
    "action",
    "either",
    "allow",
    "deny",
    "time",
    "rule",
    "applies",
    "connections",
    "long",
    "enforced",
    "example",
    "disable",
    "rule",
    "troubleshooting",
    "purposes",
    "enable",
    "back",
    "create",
    "firewall",
    "rule",
    "must",
    "select",
    "vpc",
    "network",
    "rule",
    "enforced",
    "instance",
    "level",
    "configuration",
    "associated",
    "vpc",
    "network",
    "means",
    "share",
    "firewall",
    "rules",
    "among",
    "vpc",
    "networks",
    "including",
    "networks",
    "connected",
    "vpc",
    "network",
    "peering",
    "using",
    "cloud",
    "vpn",
    "tunnels",
    "another",
    "major",
    "thing",
    "note",
    "firewall",
    "rules",
    "stateful",
    "means",
    "connection",
    "allowed",
    "firewall",
    "either",
    "direction",
    "return",
    "traffic",
    "matching",
    "connection",
    "also",
    "allowed",
    "configure",
    "firewall",
    "rule",
    "deny",
    "associated",
    "response",
    "traffic",
    "return",
    "traffic",
    "must",
    "match",
    "five",
    "tuple",
    "accepted",
    "request",
    "traffic",
    "source",
    "destination",
    "addresses",
    "ports",
    "reversed",
    "note",
    "may",
    "wondering",
    "five",
    "tuple",
    "referring",
    "set",
    "five",
    "different",
    "values",
    "comprise",
    "tcpip",
    "connection",
    "would",
    "source",
    "ip",
    "destination",
    "ip",
    "source",
    "port",
    "destination",
    "port",
    "protocol",
    "google",
    "cloud",
    "associates",
    "incoming",
    "packets",
    "corresponding",
    "outbound",
    "packets",
    "using",
    "connection",
    "tracking",
    "table",
    "google",
    "cloud",
    "implements",
    "connection",
    "tracking",
    "regardless",
    "whether",
    "protocol",
    "supports",
    "connections",
    "connection",
    "allowed",
    "source",
    "target",
    "target",
    "destination",
    "response",
    "traffic",
    "allowed",
    "long",
    "firewalls",
    "connections",
    "tracking",
    "state",
    "active",
    "well",
    "note",
    "firewall",
    "rules",
    "tracking",
    "state",
    "considered",
    "active",
    "least",
    "one",
    "packet",
    "sent",
    "every",
    "10",
    "minutes",
    "along",
    "multiple",
    "characteristics",
    "make",
    "firewall",
    "rule",
    "also",
    "firewall",
    "rule",
    "components",
    "go",
    "along",
    "screenshot",
    "console",
    "configuration",
    "components",
    "firewall",
    "rule",
    "wanted",
    "take",
    "moment",
    "highlight",
    "components",
    "better",
    "clarity",
    "first",
    "component",
    "network",
    "vpc",
    "network",
    "want",
    "firewall",
    "rule",
    "apply",
    "next",
    "one",
    "priority",
    "discussed",
    "earlier",
    "numerical",
    "priority",
    "determines",
    "whether",
    "rule",
    "applied",
    "highest",
    "priority",
    "rule",
    "whose",
    "components",
    "match",
    "traffic",
    "applied",
    "remember",
    "lower",
    "number",
    "higher",
    "priority",
    "higher",
    "number",
    "lower",
    "priority",
    "next",
    "component",
    "direction",
    "traffic",
    "ingress",
    "rules",
    "apply",
    "incoming",
    "connections",
    "specified",
    "sources",
    "google",
    "cloud",
    "targets",
    "ingress",
    "rules",
    "apply",
    "incoming",
    "connections",
    "specified",
    "sources",
    "google",
    "cloud",
    "targets",
    "egress",
    "rules",
    "apply",
    "connections",
    "going",
    "specify",
    "destinations",
    "targets",
    "next",
    "one",
    "action",
    "match",
    "component",
    "either",
    "allows",
    "denies",
    "determines",
    "whether",
    "rule",
    "permits",
    "blocks",
    "connection",
    "target",
    "defines",
    "instances",
    "rule",
    "applies",
    "specify",
    "target",
    "using",
    "one",
    "following",
    "three",
    "options",
    "first",
    "option",
    "instances",
    "network",
    "firewall",
    "rule",
    "exactly",
    "says",
    "applies",
    "instances",
    "network",
    "second",
    "option",
    "instances",
    "target",
    "tags",
    "firewall",
    "rule",
    "applies",
    "instances",
    "matching",
    "network",
    "tag",
    "know",
    "explained",
    "earlier",
    "network",
    "tag",
    "simply",
    "character",
    "string",
    "added",
    "tags",
    "field",
    "resource",
    "let",
    "say",
    "bunch",
    "instances",
    "considered",
    "development",
    "simply",
    "throw",
    "network",
    "tag",
    "using",
    "network",
    "tag",
    "dev",
    "apply",
    "necessary",
    "firewall",
    "rule",
    "development",
    "servers",
    "holding",
    "network",
    "tag",
    "dev",
    "third",
    "option",
    "instances",
    "target",
    "service",
    "accounts",
    "firewall",
    "rule",
    "applies",
    "instances",
    "use",
    "specific",
    "service",
    "account",
    "next",
    "component",
    "source",
    "filter",
    "source",
    "ingress",
    "rules",
    "destination",
    "egress",
    "rules",
    "source",
    "parameter",
    "applicable",
    "ingress",
    "rules",
    "must",
    "one",
    "following",
    "three",
    "selections",
    "source",
    "ip",
    "ranges",
    "specify",
    "ranges",
    "ip",
    "addresses",
    "sources",
    "packets",
    "either",
    "inside",
    "outside",
    "google",
    "cloud",
    "second",
    "one",
    "source",
    "tags",
    "source",
    "instances",
    "identified",
    "matching",
    "network",
    "tag",
    "source",
    "service",
    "accounts",
    "source",
    "instances",
    "identified",
    "service",
    "accounts",
    "use",
    "also",
    "use",
    "service",
    "accounts",
    "create",
    "firewall",
    "rules",
    "bit",
    "granular",
    "one",
    "last",
    "components",
    "firewall",
    "rule",
    "protocols",
    "ports",
    "specify",
    "protocol",
    "combination",
    "protocols",
    "ports",
    "omit",
    "protocols",
    "ports",
    "firewall",
    "rule",
    "applicable",
    "traffic",
    "protocol",
    "port",
    "comes",
    "enforcement",
    "status",
    "firewall",
    "rule",
    "drop",
    "right",
    "underneath",
    "components",
    "enable",
    "disable",
    "enforcement",
    "said",
    "great",
    "way",
    "enable",
    "disable",
    "firewall",
    "rule",
    "without",
    "delete",
    "great",
    "troubleshooting",
    "grant",
    "temporary",
    "access",
    "instances",
    "unless",
    "specify",
    "otherwise",
    "firewall",
    "rules",
    "enabled",
    "created",
    "also",
    "choose",
    "create",
    "rule",
    "disabled",
    "state",
    "covers",
    "vpc",
    "firewall",
    "rules",
    "entirety",
    "showing",
    "implement",
    "vpc",
    "firewall",
    "rules",
    "along",
    "building",
    "custom",
    "vpc",
    "custom",
    "routes",
    "even",
    "private",
    "google",
    "access",
    "together",
    "demo",
    "following",
    "lesson",
    "give",
    "skills",
    "putting",
    "practice",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "vpc",
    "firewall",
    "rules",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "dive",
    "build",
    "custom",
    "vpc",
    "perfect",
    "time",
    "grab",
    "coffee",
    "tea",
    "whenever",
    "ready",
    "join",
    "console",
    "welcome",
    "back",
    "demonstration",
    "want",
    "take",
    "concepts",
    "learned",
    "far",
    "networking",
    "section",
    "put",
    "practice",
    "diagram",
    "shown",
    "architecture",
    "exactly",
    "building",
    "demo",
    "going",
    "start",
    "creating",
    "custom",
    "vpc",
    "going",
    "create",
    "two",
    "subnets",
    "one",
    "public",
    "one",
    "private",
    "two",
    "separate",
    "regions",
    "going",
    "create",
    "cloud",
    "storage",
    "bucket",
    "objects",
    "create",
    "instances",
    "demonstrate",
    "access",
    "cloud",
    "storage",
    "well",
    "communication",
    "instances",
    "finally",
    "going",
    "create",
    "firewall",
    "rules",
    "routing",
    "traffic",
    "right",
    "places",
    "also",
    "going",
    "implement",
    "private",
    "google",
    "access",
    "demonstrate",
    "accessibility",
    "files",
    "cloud",
    "storage",
    "private",
    "instance",
    "without",
    "external",
    "ip",
    "may",
    "little",
    "bit",
    "comfort",
    "zone",
    "worry",
    "every",
    "step",
    "way",
    "creating",
    "instances",
    "steps",
    "covered",
    "previous",
    "lessons",
    "lot",
    "get",
    "done",
    "whenever",
    "ready",
    "join",
    "console",
    "back",
    "console",
    "see",
    "right",
    "hand",
    "corner",
    "logged",
    "tony",
    "bowtie",
    "ace",
    "currently",
    "logged",
    "project",
    "tony",
    "order",
    "start",
    "clean",
    "slate",
    "going",
    "create",
    "new",
    "project",
    "going",
    "simply",
    "click",
    "project",
    "menu",
    "click",
    "new",
    "project",
    "going",
    "call",
    "project",
    "bowtie",
    "inc",
    "organizations",
    "going",
    "simply",
    "click",
    "create",
    "well",
    "lesson",
    "would",
    "also",
    "recommend",
    "create",
    "brand",
    "new",
    "project",
    "start",
    "anew",
    "going",
    "go",
    "project",
    "drop",
    "going",
    "select",
    "bow",
    "tie",
    "ink",
    "project",
    "fresh",
    "new",
    "project",
    "create",
    "vpc",
    "network",
    "going",
    "go",
    "left",
    "hand",
    "corner",
    "navigation",
    "menu",
    "going",
    "scroll",
    "vpc",
    "network",
    "vpc",
    "networks",
    "tied",
    "compute",
    "engine",
    "api",
    "need",
    "enable",
    "create",
    "vpc",
    "networks",
    "go",
    "ahead",
    "enable",
    "api",
    "api",
    "finished",
    "enabled",
    "able",
    "create",
    "vpc",
    "network",
    "ok",
    "api",
    "enabled",
    "see",
    "default",
    "vpc",
    "network",
    "created",
    "subnet",
    "every",
    "region",
    "along",
    "corresponding",
    "ip",
    "address",
    "ranges",
    "demo",
    "going",
    "create",
    "brand",
    "new",
    "vpc",
    "network",
    "along",
    "custom",
    "subnets",
    "order",
    "going",
    "go",
    "top",
    "going",
    "click",
    "create",
    "vpc",
    "network",
    "prompted",
    "fields",
    "fill",
    "name",
    "going",
    "think",
    "creative",
    "name",
    "call",
    "vpc",
    "network",
    "going",
    "simply",
    "call",
    "custom",
    "description",
    "going",
    "call",
    "custom",
    "vpc",
    "network",
    "going",
    "move",
    "subnets",
    "creating",
    "custom",
    "subnets",
    "going",
    "keep",
    "custom",
    "subnet",
    "creation",
    "mode",
    "going",
    "need",
    "public",
    "subnet",
    "private",
    "subnet",
    "able",
    "get",
    "values",
    "text",
    "file",
    "github",
    "repository",
    "within",
    "sub",
    "networks",
    "folder",
    "networking",
    "services",
    "going",
    "create",
    "public",
    "subnet",
    "first",
    "going",
    "simply",
    "call",
    "public",
    "subnet",
    "public",
    "region",
    "going",
    "use",
    "us",
    "east",
    "one",
    "ip",
    "address",
    "range",
    "forward",
    "slash",
    "24",
    "going",
    "leave",
    "private",
    "google",
    "access",
    "going",
    "simply",
    "click",
    "done",
    "create",
    "private",
    "subnet",
    "underneath",
    "public",
    "subnet",
    "see",
    "add",
    "subnet",
    "simply",
    "click",
    "name",
    "new",
    "subnet",
    "guessed",
    "private",
    "region",
    "going",
    "use",
    "us",
    "east",
    "4",
    "ip",
    "address",
    "range",
    "sure",
    "use",
    "going",
    "leave",
    "private",
    "google",
    "access",
    "turning",
    "little",
    "bit",
    "later",
    "demo",
    "click",
    "done",
    "click",
    "create",
    "want",
    "enable",
    "dns",
    "api",
    "clicking",
    "enable",
    "bring",
    "dns",
    "api",
    "home",
    "page",
    "click",
    "enable",
    "enable",
    "api",
    "okay",
    "network",
    "configured",
    "along",
    "public",
    "private",
    "subnets",
    "well",
    "dns",
    "enabled",
    "simply",
    "click",
    "create",
    "wanted",
    "give",
    "insight",
    "regards",
    "command",
    "line",
    "shared",
    "everything",
    "done",
    "console",
    "done",
    "command",
    "line",
    "ever",
    "wanted",
    "wanted",
    "get",
    "know",
    "command",
    "line",
    "little",
    "bit",
    "better",
    "filling",
    "fields",
    "regards",
    "creating",
    "resources",
    "console",
    "given",
    "option",
    "command",
    "line",
    "link",
    "simply",
    "click",
    "given",
    "commands",
    "create",
    "resources",
    "preferences",
    "command",
    "line",
    "providing",
    "commands",
    "lesson",
    "text",
    "familiarize",
    "commands",
    "use",
    "order",
    "build",
    "networks",
    "using",
    "command",
    "line",
    "great",
    "reference",
    "use",
    "time",
    "going",
    "click",
    "close",
    "going",
    "click",
    "create",
    "within",
    "minute",
    "two",
    "custom",
    "vpc",
    "network",
    "created",
    "ready",
    "use",
    "okay",
    "custom",
    "vpc",
    "network",
    "created",
    "along",
    "public",
    "private",
    "subnet",
    "get",
    "little",
    "bit",
    "insight",
    "custom",
    "vpc",
    "network",
    "going",
    "drill",
    "see",
    "subnets",
    "respectively",
    "labeled",
    "private",
    "public",
    "along",
    "region",
    "ip",
    "address",
    "range",
    "gateway",
    "private",
    "google",
    "access",
    "routes",
    "see",
    "system",
    "generated",
    "routes",
    "discussed",
    "earlier",
    "lesson",
    "subnet",
    "routes",
    "respective",
    "ip",
    "range",
    "along",
    "default",
    "route",
    "path",
    "internet",
    "well",
    "path",
    "private",
    "google",
    "access",
    "firewall",
    "rules",
    "yet",
    "adding",
    "minutes",
    "created",
    "vpc",
    "network",
    "respective",
    "subnets",
    "going",
    "head",
    "cloud",
    "storage",
    "create",
    "bucket",
    "along",
    "uploading",
    "necessary",
    "files",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "scroll",
    "storage",
    "expected",
    "buckets",
    "present",
    "cloud",
    "storage",
    "going",
    "go",
    "ahead",
    "create",
    "first",
    "bucket",
    "going",
    "top",
    "menu",
    "clicking",
    "create",
    "bucket",
    "prompted",
    "name",
    "bucket",
    "first",
    "time",
    "comes",
    "naming",
    "storage",
    "bucket",
    "name",
    "needs",
    "globally",
    "unique",
    "means",
    "name",
    "unique",
    "across",
    "google",
    "cloud",
    "platform",
    "worry",
    "going",
    "get",
    "detail",
    "cloud",
    "storage",
    "lesson",
    "specific",
    "details",
    "comes",
    "names",
    "storage",
    "classes",
    "permissions",
    "meantime",
    "come",
    "name",
    "bucket",
    "something",
    "resonates",
    "going",
    "name",
    "bucket",
    "bowtie",
    "inc",
    "dash",
    "file",
    "dash",
    "access",
    "going",
    "simply",
    "click",
    "continue",
    "note",
    "unable",
    "continue",
    "name",
    "bucket",
    "globally",
    "unique",
    "try",
    "find",
    "one",
    "comes",
    "location",
    "type",
    "going",
    "click",
    "region",
    "keep",
    "default",
    "location",
    "used",
    "one",
    "going",
    "leave",
    "options",
    "default",
    "going",
    "go",
    "bottom",
    "click",
    "create",
    "created",
    "bucket",
    "upload",
    "files",
    "files",
    "found",
    "github",
    "repository",
    "cloud",
    "storage",
    "bucket",
    "folder",
    "networking",
    "services",
    "going",
    "click",
    "upload",
    "files",
    "networking",
    "services",
    "section",
    "cloud",
    "storage",
    "bucket",
    "find",
    "three",
    "jpeg",
    "files",
    "simply",
    "select",
    "click",
    "open",
    "uploaded",
    "bucket",
    "ready",
    "move",
    "next",
    "step",
    "created",
    "vpc",
    "network",
    "private",
    "public",
    "subnet",
    "along",
    "creating",
    "bucket",
    "cloud",
    "storage",
    "uploaded",
    "three",
    "jpeg",
    "files",
    "done",
    "create",
    "instances",
    "access",
    "files",
    "go",
    "navigation",
    "menu",
    "top",
    "left",
    "hand",
    "corner",
    "scroll",
    "compute",
    "engine",
    "click",
    "create",
    "prompted",
    "fields",
    "fill",
    "instance",
    "going",
    "first",
    "create",
    "public",
    "instance",
    "going",
    "get",
    "really",
    "creative",
    "call",
    "public",
    "dash",
    "instance",
    "labels",
    "going",
    "add",
    "label",
    "key",
    "going",
    "type",
    "environment",
    "value",
    "going",
    "type",
    "public",
    "going",
    "go",
    "bottom",
    "click",
    "save",
    "region",
    "going",
    "select",
    "us",
    "east1",
    "leave",
    "zone",
    "us",
    "east",
    "1b",
    "moving",
    "machine",
    "type",
    "going",
    "select",
    "e2",
    "micro",
    "machine",
    "type",
    "cost",
    "conscious",
    "want",
    "keep",
    "cost",
    "going",
    "scroll",
    "identity",
    "api",
    "access",
    "service",
    "account",
    "compute",
    "engine",
    "default",
    "service",
    "account",
    "already",
    "access",
    "scopes",
    "want",
    "able",
    "proper",
    "permissions",
    "able",
    "read",
    "write",
    "cloud",
    "storage",
    "along",
    "read",
    "write",
    "access",
    "compute",
    "engine",
    "click",
    "set",
    "access",
    "api",
    "scroll",
    "compute",
    "engine",
    "click",
    "drop",
    "menu",
    "select",
    "read",
    "write",
    "give",
    "public",
    "instance",
    "specific",
    "access",
    "needs",
    "ssh",
    "private",
    "instance",
    "going",
    "set",
    "access",
    "cloud",
    "storage",
    "going",
    "scroll",
    "storage",
    "going",
    "click",
    "drop",
    "menu",
    "select",
    "read",
    "write",
    "give",
    "instance",
    "read",
    "write",
    "access",
    "cloud",
    "storage",
    "scrolling",
    "little",
    "bit",
    "going",
    "go",
    "management",
    "security",
    "disks",
    "networking",
    "sold",
    "tenancy",
    "going",
    "click",
    "scroll",
    "little",
    "bit",
    "click",
    "networking",
    "tab",
    "prompt",
    "bunch",
    "options",
    "configure",
    "networking",
    "instance",
    "network",
    "tags",
    "want",
    "type",
    "public",
    "click",
    "enter",
    "scroll",
    "says",
    "network",
    "interfaces",
    "click",
    "current",
    "interface",
    "default",
    "open",
    "options",
    "network",
    "want",
    "click",
    "drop",
    "set",
    "default",
    "custom",
    "public",
    "subnet",
    "automatically",
    "propagated",
    "leave",
    "also",
    "want",
    "make",
    "sure",
    "primary",
    "internal",
    "ip",
    "well",
    "external",
    "ip",
    "set",
    "ephemeral",
    "leave",
    "options",
    "default",
    "simply",
    "click",
    "done",
    "clicking",
    "create",
    "click",
    "command",
    "line",
    "link",
    "show",
    "commands",
    "needed",
    "order",
    "create",
    "instance",
    "command",
    "line",
    "going",
    "go",
    "ahead",
    "close",
    "going",
    "leave",
    "options",
    "default",
    "going",
    "click",
    "create",
    "public",
    "instance",
    "created",
    "going",
    "go",
    "ahead",
    "create",
    "private",
    "instance",
    "using",
    "steps",
    "last",
    "instance",
    "going",
    "go",
    "ahead",
    "click",
    "create",
    "instance",
    "top",
    "first",
    "thing",
    "going",
    "prompted",
    "name",
    "instance",
    "going",
    "call",
    "instance",
    "private",
    "dash",
    "instance",
    "going",
    "add",
    "label",
    "key",
    "environment",
    "value",
    "private",
    "going",
    "go",
    "bottom",
    "click",
    "save",
    "region",
    "going",
    "select",
    "us",
    "east",
    "4",
    "keep",
    "zone",
    "default",
    "selected",
    "machine",
    "type",
    "going",
    "select",
    "e2",
    "micro",
    "scrolling",
    "identity",
    "api",
    "access",
    "access",
    "scopes",
    "default",
    "service",
    "account",
    "going",
    "click",
    "set",
    "access",
    "api",
    "going",
    "scroll",
    "storage",
    "going",
    "click",
    "drop",
    "menu",
    "going",
    "select",
    "access",
    "read",
    "write",
    "last",
    "step",
    "going",
    "go",
    "networking",
    "tab",
    "management",
    "security",
    "disks",
    "networking",
    "soul",
    "tenancy",
    "network",
    "tags",
    "going",
    "give",
    "instance",
    "network",
    "tag",
    "private",
    "network",
    "interfaces",
    "want",
    "edit",
    "change",
    "default",
    "custom",
    "network",
    "expected",
    "selected",
    "private",
    "subnet",
    "default",
    "going",
    "private",
    "instance",
    "going",
    "give",
    "external",
    "ip",
    "going",
    "click",
    "drop",
    "select",
    "none",
    "options",
    "set",
    "default",
    "going",
    "simply",
    "click",
    "create",
    "create",
    "private",
    "instance",
    "along",
    "public",
    "instance",
    "recap",
    "created",
    "new",
    "custom",
    "vpc",
    "network",
    "along",
    "private",
    "public",
    "subnet",
    "created",
    "storage",
    "bucket",
    "added",
    "files",
    "accessed",
    "created",
    "private",
    "public",
    "instance",
    "assigning",
    "service",
    "account",
    "public",
    "instance",
    "read",
    "write",
    "access",
    "compute",
    "engine",
    "cloud",
    "storage",
    "along",
    "public",
    "ip",
    "address",
    "assigning",
    "service",
    "account",
    "private",
    "instance",
    "read",
    "write",
    "access",
    "cloud",
    "storage",
    "public",
    "ip",
    "end",
    "part",
    "one",
    "demo",
    "would",
    "great",
    "opportunity",
    "get",
    "stretch",
    "get",
    "coffee",
    "tea",
    "whenever",
    "ready",
    "join",
    "part",
    "two",
    "starting",
    "immediately",
    "end",
    "part",
    "one",
    "go",
    "ahead",
    "complete",
    "video",
    "see",
    "part",
    "two",
    "music",
    "welcome",
    "back",
    "part",
    "two",
    "custom",
    "vpc",
    "demo",
    "starting",
    "exactly",
    "left",
    "part",
    "one",
    "said",
    "let",
    "dive",
    "last",
    "thing",
    "needs",
    "done",
    "simply",
    "create",
    "firewall",
    "rules",
    "firewall",
    "rules",
    "give",
    "ssh",
    "access",
    "public",
    "instance",
    "well",
    "allowing",
    "private",
    "communication",
    "public",
    "instance",
    "private",
    "instance",
    "well",
    "giving",
    "ssh",
    "access",
    "public",
    "instance",
    "private",
    "instance",
    "allow",
    "us",
    "access",
    "files",
    "bucket",
    "private",
    "instance",
    "order",
    "create",
    "firewall",
    "rules",
    "need",
    "go",
    "back",
    "vpc",
    "network",
    "going",
    "go",
    "left",
    "hand",
    "corner",
    "navigation",
    "menu",
    "scroll",
    "vpc",
    "network",
    "left",
    "hand",
    "menu",
    "see",
    "firewall",
    "going",
    "click",
    "see",
    "default",
    "firewall",
    "rules",
    "default",
    "network",
    "us",
    "create",
    "new",
    "ones",
    "custom",
    "vpc",
    "going",
    "go",
    "top",
    "click",
    "create",
    "firewall",
    "first",
    "rule",
    "want",
    "create",
    "public",
    "instance",
    "want",
    "give",
    "public",
    "access",
    "well",
    "ssh",
    "access",
    "going",
    "name",
    "accordingly",
    "public",
    "dash",
    "access",
    "going",
    "give",
    "description",
    "always",
    "good",
    "idea",
    "turn",
    "logs",
    "demonstration",
    "going",
    "keep",
    "network",
    "going",
    "select",
    "custom",
    "network",
    "going",
    "keep",
    "priority",
    "1000",
    "direction",
    "traffic",
    "ingress",
    "action",
    "match",
    "allow",
    "target",
    "tags",
    "come",
    "play",
    "comes",
    "giving",
    "access",
    "network",
    "targets",
    "going",
    "keep",
    "specified",
    "target",
    "tags",
    "target",
    "tags",
    "simply",
    "type",
    "public",
    "source",
    "filter",
    "keep",
    "ip",
    "ranges",
    "source",
    "ip",
    "range",
    "forward",
    "slash",
    "going",
    "add",
    "second",
    "source",
    "filter",
    "moving",
    "protocols",
    "ports",
    "tcp",
    "going",
    "click",
    "add",
    "port",
    "want",
    "able",
    "ping",
    "instance",
    "going",
    "add",
    "another",
    "protocol",
    "icmp",
    "explained",
    "earlier",
    "disable",
    "rule",
    "link",
    "bring",
    "enforcement",
    "see",
    "enabled",
    "wanted",
    "create",
    "firewall",
    "rules",
    "future",
    "disabled",
    "right",
    "gon",
    "na",
    "keep",
    "enabled",
    "gon",
    "na",
    "simply",
    "click",
    "create",
    "create",
    "public",
    "firewall",
    "rule",
    "public",
    "instance",
    "custom",
    "vpc",
    "network",
    "going",
    "go",
    "ahead",
    "create",
    "private",
    "firewall",
    "rule",
    "going",
    "name",
    "private",
    "dash",
    "access",
    "respectively",
    "going",
    "put",
    "description",
    "network",
    "going",
    "select",
    "custom",
    "network",
    "keep",
    "priority",
    "1000",
    "direction",
    "traffic",
    "ingress",
    "action",
    "match",
    "allow",
    "target",
    "tags",
    "type",
    "private",
    "hit",
    "enter",
    "want",
    "able",
    "reach",
    "private",
    "instance",
    "public",
    "instance",
    "source",
    "ip",
    "range",
    "forward",
    "slash",
    "going",
    "add",
    "second",
    "source",
    "filter",
    "protocols",
    "ports",
    "going",
    "simply",
    "add",
    "tcp",
    "port",
    "22",
    "want",
    "add",
    "icmp",
    "able",
    "ping",
    "instance",
    "going",
    "click",
    "create",
    "two",
    "firewall",
    "rules",
    "private",
    "access",
    "public",
    "access",
    "go",
    "custom",
    "vpc",
    "network",
    "drill",
    "able",
    "see",
    "selective",
    "firewall",
    "rules",
    "respective",
    "firewall",
    "rules",
    "tab",
    "created",
    "vpc",
    "network",
    "along",
    "public",
    "private",
    "subnet",
    "created",
    "cloud",
    "storage",
    "bucket",
    "files",
    "need",
    "access",
    "instances",
    "access",
    "files",
    "along",
    "firewall",
    "rules",
    "allow",
    "proper",
    "communication",
    "go",
    "ahead",
    "test",
    "everything",
    "built",
    "make",
    "sure",
    "everything",
    "working",
    "expected",
    "let",
    "kick",
    "things",
    "first",
    "logging",
    "public",
    "instance",
    "head",
    "navigation",
    "menu",
    "scroll",
    "compute",
    "engine",
    "ssh",
    "public",
    "instance",
    "clicking",
    "ssh",
    "connect",
    "open",
    "new",
    "tab",
    "new",
    "window",
    "logging",
    "currently",
    "authenticated",
    "credentials",
    "okay",
    "logged",
    "instance",
    "going",
    "zoom",
    "better",
    "viewing",
    "make",
    "sure",
    "everything",
    "working",
    "expected",
    "know",
    "firewall",
    "rule",
    "correct",
    "able",
    "ssh",
    "instance",
    "want",
    "see",
    "access",
    "files",
    "bucket",
    "order",
    "going",
    "run",
    "gsutil",
    "command",
    "ls",
    "list",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "along",
    "bucket",
    "name",
    "bow",
    "tie",
    "inc",
    "hyphen",
    "file",
    "iphone",
    "access",
    "going",
    "hit",
    "enter",
    "see",
    "access",
    "files",
    "bucket",
    "last",
    "thing",
    "wanted",
    "check",
    "ping",
    "private",
    "instance",
    "going",
    "first",
    "clear",
    "screen",
    "going",
    "head",
    "back",
    "console",
    "going",
    "copy",
    "ip",
    "address",
    "private",
    "instance",
    "clipboard",
    "going",
    "head",
    "back",
    "terminal",
    "going",
    "type",
    "ping",
    "going",
    "paste",
    "ip",
    "address",
    "success",
    "able",
    "successfully",
    "ping",
    "private",
    "instance",
    "public",
    "instance",
    "using",
    "icmp",
    "protocol",
    "hit",
    "control",
    "c",
    "stop",
    "ping",
    "know",
    "public",
    "instance",
    "proper",
    "permissions",
    "reach",
    "cloud",
    "storage",
    "well",
    "able",
    "ping",
    "private",
    "instance",
    "want",
    "able",
    "check",
    "ssh",
    "private",
    "instance",
    "public",
    "instance",
    "going",
    "first",
    "clear",
    "screen",
    "next",
    "going",
    "paste",
    "command",
    "order",
    "ssh",
    "private",
    "instance",
    "g",
    "cloud",
    "compute",
    "ssh",
    "dash",
    "dash",
    "project",
    "project",
    "name",
    "bow",
    "tie",
    "inc",
    "dash",
    "dash",
    "zone",
    "zone",
    "instance",
    "us",
    "east",
    "4c",
    "along",
    "name",
    "instance",
    "private",
    "dash",
    "instance",
    "along",
    "flag",
    "dash",
    "dash",
    "internal",
    "dash",
    "ip",
    "stating",
    "using",
    "internal",
    "ip",
    "order",
    "ssh",
    "instance",
    "going",
    "hit",
    "enter",
    "prompted",
    "passphrase",
    "order",
    "secure",
    "rsa",
    "key",
    "pair",
    "one",
    "generated",
    "log",
    "private",
    "instance",
    "always",
    "good",
    "practice",
    "comes",
    "security",
    "secure",
    "key",
    "pair",
    "passphrase",
    "demo",
    "going",
    "leave",
    "blank",
    "going",
    "hit",
    "enter",
    "going",
    "hit",
    "enter",
    "want",
    "get",
    "deep",
    "want",
    "give",
    "context",
    "happening",
    "log",
    "instance",
    "google",
    "cloud",
    "os",
    "login",
    "disabled",
    "google",
    "manages",
    "authorized",
    "keys",
    "file",
    "new",
    "user",
    "accounts",
    "based",
    "ssh",
    "keys",
    "metadata",
    "keys",
    "generated",
    "used",
    "first",
    "time",
    "currently",
    "stored",
    "within",
    "instance",
    "metadata",
    "logged",
    "private",
    "instance",
    "going",
    "quickly",
    "clear",
    "screen",
    "note",
    "able",
    "know",
    "whether",
    "logged",
    "private",
    "instance",
    "looking",
    "prompt",
    "want",
    "make",
    "sure",
    "ping",
    "public",
    "instance",
    "going",
    "quickly",
    "type",
    "ping",
    "command",
    "going",
    "head",
    "console",
    "going",
    "grab",
    "ip",
    "address",
    "public",
    "instance",
    "going",
    "go",
    "back",
    "terminal",
    "paste",
    "expected",
    "able",
    "ping",
    "public",
    "instance",
    "private",
    "instance",
    "going",
    "go",
    "ahead",
    "hit",
    "control",
    "c",
    "stop",
    "going",
    "clear",
    "screen",
    "like",
    "verify",
    "whether",
    "access",
    "files",
    "cloud",
    "storage",
    "bucket",
    "created",
    "earlier",
    "going",
    "use",
    "command",
    "used",
    "public",
    "instance",
    "list",
    "files",
    "cloud",
    "storage",
    "bucket",
    "going",
    "use",
    "gsutil",
    "command",
    "ls",
    "list",
    "along",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "bucket",
    "name",
    "bow",
    "tie",
    "ink",
    "hyphen",
    "file",
    "access",
    "going",
    "hit",
    "enter",
    "see",
    "getting",
    "response",
    "command",
    "hanging",
    "due",
    "fact",
    "external",
    "access",
    "needed",
    "order",
    "reach",
    "cloud",
    "storage",
    "instance",
    "internal",
    "private",
    "ip",
    "accessing",
    "files",
    "cloud",
    "storage",
    "bucket",
    "possible",
    "order",
    "access",
    "cloud",
    "storage",
    "set",
    "external",
    "ip",
    "addresses",
    "used",
    "google",
    "apis",
    "services",
    "enabling",
    "private",
    "google",
    "access",
    "subnet",
    "used",
    "vms",
    "network",
    "interface",
    "going",
    "go",
    "ahead",
    "right",
    "going",
    "hit",
    "control",
    "c",
    "stop",
    "going",
    "go",
    "back",
    "console",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "scroll",
    "vpc",
    "network",
    "going",
    "drill",
    "private",
    "subnet",
    "going",
    "edit",
    "private",
    "google",
    "access",
    "going",
    "turn",
    "going",
    "go",
    "bottom",
    "click",
    "save",
    "giving",
    "subnet",
    "private",
    "google",
    "access",
    "allow",
    "private",
    "instance",
    "instances",
    "private",
    "ip",
    "addresses",
    "access",
    "public",
    "apis",
    "cloud",
    "storage",
    "go",
    "back",
    "instance",
    "going",
    "clear",
    "screen",
    "going",
    "run",
    "gsutil",
    "command",
    "success",
    "able",
    "access",
    "cloud",
    "storage",
    "due",
    "enabling",
    "private",
    "google",
    "access",
    "respective",
    "private",
    "subnet",
    "first",
    "wanted",
    "congratulate",
    "making",
    "end",
    "demo",
    "hope",
    "demo",
    "extremely",
    "useful",
    "real",
    "life",
    "scenario",
    "come",
    "recap",
    "created",
    "custom",
    "network",
    "two",
    "custom",
    "subnets",
    "created",
    "cloud",
    "storage",
    "bucket",
    "uploaded",
    "files",
    "created",
    "public",
    "instance",
    "private",
    "instance",
    "created",
    "firewall",
    "rules",
    "route",
    "traffic",
    "tested",
    "using",
    "command",
    "line",
    "communication",
    "also",
    "enable",
    "private",
    "google",
    "access",
    "instance",
    "internal",
    "ip",
    "access",
    "google",
    "public",
    "apis",
    "access",
    "cloud",
    "storage",
    "fantastic",
    "job",
    "part",
    "pretty",
    "complex",
    "demo",
    "expect",
    "things",
    "like",
    "experienced",
    "demo",
    "pop",
    "role",
    "cloud",
    "engineer",
    "time",
    "go",
    "sure",
    "delete",
    "resources",
    "created",
    "congrats",
    "great",
    "job",
    "mark",
    "complete",
    "see",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "going",
    "vpc",
    "network",
    "peering",
    "privately",
    "communicate",
    "across",
    "vpcs",
    "different",
    "organization",
    "vpc",
    "network",
    "peering",
    "vpc",
    "peering",
    "used",
    "interchangeably",
    "lesson",
    "used",
    "communicate",
    "thing",
    "instances",
    "one",
    "vpc",
    "communicate",
    "instance",
    "another",
    "vpc",
    "would",
    "route",
    "traffic",
    "via",
    "public",
    "internet",
    "however",
    "communicate",
    "privately",
    "two",
    "vpcs",
    "google",
    "cloud",
    "offers",
    "service",
    "called",
    "vpc",
    "peering",
    "going",
    "theory",
    "concepts",
    "vpc",
    "peering",
    "throughout",
    "lesson",
    "said",
    "let",
    "dive",
    "vpc",
    "peering",
    "enables",
    "peer",
    "vpc",
    "networks",
    "workloads",
    "different",
    "vpc",
    "networks",
    "communicate",
    "private",
    "space",
    "follows",
    "rfc",
    "1918",
    "standard",
    "thus",
    "allowing",
    "private",
    "connectivity",
    "across",
    "two",
    "vpc",
    "networks",
    "traffic",
    "stays",
    "within",
    "google",
    "network",
    "never",
    "traverses",
    "public",
    "internet",
    "vpc",
    "peering",
    "gives",
    "flexibility",
    "peering",
    "networks",
    "different",
    "projects",
    "along",
    "able",
    "peer",
    "networks",
    "different",
    "organizations",
    "vpc",
    "peering",
    "also",
    "gives",
    "several",
    "advantages",
    "using",
    "external",
    "ip",
    "addresses",
    "vpns",
    "connect",
    "first",
    "one",
    "reducing",
    "network",
    "latency",
    "peering",
    "traffic",
    "stays",
    "within",
    "google",
    "network",
    "vpc",
    "peering",
    "also",
    "offers",
    "greater",
    "network",
    "security",
    "need",
    "services",
    "exposed",
    "public",
    "internet",
    "deal",
    "greater",
    "risks",
    "traffic",
    "getting",
    "compromised",
    "trying",
    "achieve",
    "compliance",
    "standards",
    "organization",
    "vpc",
    "peering",
    "allow",
    "achieve",
    "standards",
    "need",
    "finally",
    "vpc",
    "network",
    "peering",
    "reduces",
    "network",
    "costs",
    "save",
    "egress",
    "costs",
    "traffic",
    "leaving",
    "gcp",
    "regular",
    "network",
    "google",
    "charges",
    "traffic",
    "communicating",
    "using",
    "public",
    "ips",
    "even",
    "traffic",
    "within",
    "zone",
    "bypass",
    "save",
    "money",
    "using",
    "internal",
    "ips",
    "communicate",
    "keeping",
    "traffic",
    "within",
    "gcp",
    "network",
    "certain",
    "properties",
    "characteristics",
    "peered",
    "vpcs",
    "follow",
    "wanted",
    "point",
    "better",
    "understanding",
    "first",
    "peer",
    "vpc",
    "networks",
    "remain",
    "administratively",
    "separate",
    "exactly",
    "mean",
    "well",
    "means",
    "routes",
    "firewalls",
    "vpns",
    "traffic",
    "management",
    "tools",
    "administered",
    "applied",
    "separately",
    "vpc",
    "networks",
    "applies",
    "vpc",
    "independently",
    "also",
    "means",
    "side",
    "peering",
    "association",
    "set",
    "independently",
    "well",
    "connect",
    "one",
    "vpc",
    "go",
    "vpc",
    "connecting",
    "initiate",
    "establish",
    "connection",
    "peering",
    "becomes",
    "active",
    "configuration",
    "sides",
    "match",
    "also",
    "means",
    "vpc",
    "delete",
    "peering",
    "association",
    "given",
    "time",
    "vpc",
    "peering",
    "vpc",
    "peers",
    "always",
    "exchange",
    "subnet",
    "routes",
    "also",
    "option",
    "exchanging",
    "custom",
    "routes",
    "subnet",
    "static",
    "routes",
    "global",
    "dynamic",
    "routes",
    "regional",
    "global",
    "given",
    "vpc",
    "network",
    "peer",
    "multiple",
    "vpc",
    "networks",
    "limit",
    "reach",
    "would",
    "reach",
    "google",
    "ask",
    "limit",
    "increased",
    "peering",
    "vpc",
    "networks",
    "certain",
    "restrictions",
    "place",
    "aware",
    "first",
    "subnet",
    "cider",
    "range",
    "one",
    "peered",
    "vpc",
    "network",
    "overlap",
    "static",
    "route",
    "another",
    "peered",
    "network",
    "rule",
    "covers",
    "subnet",
    "routes",
    "static",
    "routes",
    "vpc",
    "subnet",
    "created",
    "subnet",
    "ip",
    "range",
    "expanded",
    "google",
    "cloud",
    "performs",
    "check",
    "make",
    "sure",
    "new",
    "subnet",
    "range",
    "overlap",
    "ip",
    "ranges",
    "subnets",
    "vpc",
    "network",
    "directly",
    "peered",
    "vpc",
    "networks",
    "creation",
    "expansion",
    "fail",
    "google",
    "cloud",
    "also",
    "ensures",
    "overlapping",
    "subnet",
    "ip",
    "ranges",
    "allowed",
    "across",
    "vpc",
    "networks",
    "appeared",
    "network",
    "common",
    "creation",
    "expansion",
    "fail",
    "speaking",
    "routing",
    "create",
    "new",
    "subnet",
    "appeared",
    "vpc",
    "network",
    "vpc",
    "network",
    "peering",
    "provide",
    "granular",
    "route",
    "controls",
    "filter",
    "subnet",
    "cider",
    "ranges",
    "reachable",
    "across",
    "pure",
    "networks",
    "handled",
    "firewall",
    "rules",
    "allow",
    "ingress",
    "traffic",
    "vm",
    "instances",
    "peer",
    "network",
    "must",
    "create",
    "ingress",
    "allow",
    "firewall",
    "rules",
    "default",
    "ingress",
    "traffic",
    "vms",
    "blocked",
    "implied",
    "deny",
    "ingress",
    "rule",
    "another",
    "key",
    "point",
    "note",
    "transitive",
    "peering",
    "supported",
    "directly",
    "peered",
    "networks",
    "communicate",
    "peered",
    "directly",
    "diagram",
    "network",
    "peered",
    "network",
    "b",
    "network",
    "b",
    "peered",
    "network",
    "c",
    "one",
    "instance",
    "trying",
    "communicate",
    "network",
    "network",
    "c",
    "done",
    "unless",
    "network",
    "directly",
    "peered",
    "network",
    "c",
    "extremely",
    "important",
    "point",
    "note",
    "vpc",
    "peering",
    "another",
    "thing",
    "note",
    "use",
    "tag",
    "service",
    "account",
    "one",
    "peered",
    "network",
    "peered",
    "network",
    "must",
    "independently",
    "operated",
    "stated",
    "earlier",
    "last",
    "thing",
    "wanted",
    "cover",
    "internal",
    "dns",
    "accessible",
    "compute",
    "engine",
    "peered",
    "networks",
    "must",
    "use",
    "ip",
    "communicate",
    "covers",
    "short",
    "yet",
    "important",
    "lesson",
    "theory",
    "concepts",
    "vpc",
    "peering",
    "covered",
    "theory",
    "going",
    "taking",
    "concepts",
    "demo",
    "pairing",
    "two",
    "networks",
    "together",
    "verifying",
    "communication",
    "mark",
    "lesson",
    "complete",
    "whenever",
    "ready",
    "join",
    "console",
    "welcome",
    "back",
    "demonstration",
    "going",
    "go",
    "steps",
    "create",
    "peering",
    "connection",
    "two",
    "vpcs",
    "two",
    "separate",
    "projects",
    "shown",
    "diagram",
    "verify",
    "connection",
    "works",
    "going",
    "create",
    "two",
    "instances",
    "one",
    "network",
    "ping",
    "one",
    "instance",
    "instance",
    "demo",
    "similar",
    "custom",
    "vpc",
    "demo",
    "done",
    "earlier",
    "adding",
    "another",
    "layer",
    "complexity",
    "adding",
    "vpc",
    "network",
    "peering",
    "quite",
    "bit",
    "let",
    "go",
    "ahead",
    "dive",
    "okay",
    "back",
    "console",
    "see",
    "top",
    "right",
    "hand",
    "corner",
    "logged",
    "tony",
    "bowties",
    "specific",
    "demo",
    "using",
    "two",
    "projects",
    "project",
    "tony",
    "project",
    "bowtie",
    "inc",
    "currently",
    "two",
    "projects",
    "go",
    "ahead",
    "create",
    "new",
    "project",
    "two",
    "projects",
    "none",
    "going",
    "continue",
    "project",
    "tony",
    "first",
    "thing",
    "want",
    "create",
    "two",
    "networks",
    "two",
    "separate",
    "projects",
    "going",
    "go",
    "navigation",
    "menu",
    "top",
    "left",
    "hand",
    "corner",
    "going",
    "scroll",
    "vpc",
    "network",
    "going",
    "create",
    "first",
    "vpc",
    "network",
    "going",
    "name",
    "bowtie",
    "ink",
    "dash",
    "going",
    "give",
    "description",
    "subnets",
    "going",
    "leave",
    "subnet",
    "creation",
    "mode",
    "custom",
    "subnet",
    "name",
    "call",
    "subnet",
    "dash",
    "going",
    "use",
    "us",
    "east",
    "one",
    "region",
    "ip",
    "address",
    "range",
    "going",
    "use",
    "forward",
    "slash",
    "going",
    "leave",
    "options",
    "default",
    "going",
    "go",
    "bottom",
    "click",
    "create",
    "network",
    "created",
    "going",
    "go",
    "project",
    "bowtie",
    "inc",
    "going",
    "create",
    "vpc",
    "network",
    "name",
    "going",
    "call",
    "bowtie",
    "inc",
    "b",
    "description",
    "going",
    "use",
    "subnets",
    "going",
    "keep",
    "subnet",
    "creation",
    "mode",
    "custom",
    "new",
    "subnet",
    "going",
    "call",
    "subnet",
    "subnet",
    "b",
    "region",
    "used",
    "4",
    "ip",
    "address",
    "range",
    "forward",
    "slash",
    "leave",
    "options",
    "default",
    "scroll",
    "bottom",
    "click",
    "create",
    "network",
    "created",
    "going",
    "go",
    "back",
    "project",
    "tony",
    "going",
    "create",
    "firewall",
    "rule",
    "bow",
    "tie",
    "ink",
    "dash",
    "firewall",
    "rule",
    "explained",
    "last",
    "lesson",
    "allow",
    "communication",
    "one",
    "instance",
    "going",
    "click",
    "create",
    "firewall",
    "name",
    "going",
    "call",
    "project",
    "tony",
    "dash",
    "description",
    "going",
    "use",
    "network",
    "going",
    "choose",
    "source",
    "network",
    "bowtie",
    "inc",
    "dash",
    "priority",
    "going",
    "keep",
    "1000",
    "direction",
    "traffic",
    "ingress",
    "action",
    "match",
    "allow",
    "targets",
    "going",
    "select",
    "instances",
    "network",
    "source",
    "filter",
    "going",
    "keep",
    "ip",
    "ranges",
    "selected",
    "source",
    "ip",
    "range",
    "specifically",
    "demo",
    "going",
    "forward",
    "slash",
    "specifically",
    "used",
    "demo",
    "never",
    "used",
    "environment",
    "production",
    "use",
    "source",
    "ip",
    "ranges",
    "communicating",
    "protocols",
    "ports",
    "need",
    "log",
    "instance",
    "able",
    "ping",
    "instance",
    "going",
    "open",
    "tcp",
    "port",
    "protocols",
    "add",
    "icmp",
    "allow",
    "ping",
    "command",
    "used",
    "going",
    "leave",
    "options",
    "default",
    "going",
    "click",
    "create",
    "firewall",
    "rule",
    "created",
    "need",
    "go",
    "back",
    "project",
    "bowtie",
    "inc",
    "create",
    "firewall",
    "rule",
    "well",
    "going",
    "call",
    "firewall",
    "rule",
    "bowtie",
    "inc",
    "dash",
    "b",
    "going",
    "give",
    "description",
    "network",
    "going",
    "select",
    "bow",
    "tie",
    "ink",
    "dash",
    "b",
    "going",
    "keep",
    "priority",
    "1000",
    "direction",
    "traffic",
    "ingress",
    "well",
    "action",
    "match",
    "allow",
    "scrolling",
    "targets",
    "going",
    "select",
    "instances",
    "network",
    "source",
    "filter",
    "going",
    "keep",
    "ip",
    "ranges",
    "selected",
    "source",
    "ip",
    "ranges",
    "going",
    "enter",
    "forward",
    "slash",
    "protocols",
    "ports",
    "going",
    "select",
    "tcp",
    "port",
    "22",
    "well",
    "protocols",
    "going",
    "type",
    "icmp",
    "going",
    "leave",
    "everything",
    "else",
    "default",
    "going",
    "click",
    "create",
    "created",
    "networks",
    "created",
    "firewall",
    "rules",
    "start",
    "creating",
    "instances",
    "already",
    "project",
    "bowtie",
    "inc",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "scroll",
    "compute",
    "engine",
    "create",
    "instance",
    "going",
    "click",
    "create",
    "keep",
    "naming",
    "convention",
    "going",
    "call",
    "instance",
    "instance",
    "b",
    "going",
    "add",
    "labels",
    "region",
    "going",
    "choose",
    "us",
    "east",
    "4",
    "leave",
    "zone",
    "default",
    "selection",
    "machine",
    "type",
    "going",
    "select",
    "e2",
    "micro",
    "going",
    "scroll",
    "bottom",
    "going",
    "click",
    "management",
    "security",
    "disks",
    "networking",
    "sold",
    "tenancy",
    "able",
    "go",
    "networking",
    "tab",
    "change",
    "network",
    "default",
    "network",
    "interface",
    "going",
    "click",
    "default",
    "network",
    "interface",
    "network",
    "going",
    "select",
    "bowtie",
    "inc",
    "b",
    "subnet",
    "already",
    "selected",
    "going",
    "scroll",
    "click",
    "done",
    "going",
    "leave",
    "options",
    "default",
    "click",
    "create",
    "creating",
    "going",
    "go",
    "project",
    "tony",
    "going",
    "create",
    "instance",
    "going",
    "name",
    "instance",
    "instance",
    "region",
    "going",
    "select",
    "us",
    "east1",
    "leave",
    "zone",
    "default",
    "selected",
    "machine",
    "type",
    "going",
    "select",
    "e2",
    "micro",
    "scrolling",
    "bottom",
    "going",
    "go",
    "networking",
    "tab",
    "management",
    "security",
    "disks",
    "networking",
    "soul",
    "going",
    "edit",
    "network",
    "interface",
    "change",
    "default",
    "network",
    "bow",
    "tie",
    "ink",
    "dash",
    "see",
    "subnet",
    "automatically",
    "selected",
    "simply",
    "click",
    "done",
    "going",
    "leave",
    "options",
    "default",
    "going",
    "click",
    "create",
    "recap",
    "created",
    "two",
    "separate",
    "networks",
    "two",
    "separate",
    "projects",
    "along",
    "corresponding",
    "subnets",
    "firewall",
    "rules",
    "along",
    "creating",
    "instance",
    "network",
    "environments",
    "set",
    "time",
    "create",
    "vbc",
    "peering",
    "connection",
    "project",
    "tony",
    "going",
    "start",
    "project",
    "going",
    "go",
    "navigation",
    "menu",
    "scroll",
    "vpc",
    "network",
    "vpc",
    "network",
    "left",
    "hand",
    "menu",
    "going",
    "click",
    "vpc",
    "network",
    "peering",
    "interface",
    "shown",
    "able",
    "create",
    "vpc",
    "network",
    "peering",
    "going",
    "click",
    "create",
    "connection",
    "prompted",
    "information",
    "need",
    "connecting",
    "another",
    "vpc",
    "another",
    "project",
    "going",
    "need",
    "project",
    "id",
    "well",
    "name",
    "vpc",
    "network",
    "want",
    "peer",
    "explained",
    "earlier",
    "lesson",
    "subnet",
    "ip",
    "ranges",
    "networks",
    "overlap",
    "please",
    "make",
    "sure",
    "using",
    "ip",
    "ranges",
    "outside",
    "ones",
    "given",
    "demonstration",
    "ip",
    "ranges",
    "using",
    "overlap",
    "information",
    "click",
    "continue",
    "prompted",
    "fields",
    "fill",
    "information",
    "asked",
    "collect",
    "previous",
    "screen",
    "since",
    "information",
    "already",
    "go",
    "ahead",
    "start",
    "filling",
    "fields",
    "going",
    "call",
    "peering",
    "connection",
    "peering",
    "b",
    "vpc",
    "network",
    "going",
    "select",
    "bow",
    "tie",
    "ink",
    "dash",
    "peered",
    "vpc",
    "network",
    "going",
    "select",
    "project",
    "bowtie",
    "inc",
    "vpc",
    "network",
    "name",
    "bow",
    "tie",
    "inc",
    "dash",
    "b",
    "going",
    "leave",
    "options",
    "default",
    "vpc",
    "network",
    "name",
    "see",
    "exchange",
    "custom",
    "routes",
    "select",
    "import",
    "export",
    "custom",
    "routes",
    "previously",
    "created",
    "special",
    "routes",
    "created",
    "actual",
    "peering",
    "connection",
    "bring",
    "network",
    "satisfy",
    "requirements",
    "going",
    "right",
    "going",
    "close",
    "going",
    "simply",
    "click",
    "create",
    "finished",
    "creating",
    "marked",
    "inactive",
    "corresponding",
    "peering",
    "connection",
    "project",
    "bowtie",
    "yet",
    "configured",
    "status",
    "change",
    "green",
    "check",
    "mark",
    "networks",
    "marked",
    "active",
    "connected",
    "status",
    "remains",
    "inactive",
    "recheck",
    "configuration",
    "edit",
    "accordingly",
    "going",
    "head",
    "project",
    "bowtie",
    "inc",
    "going",
    "create",
    "corresponding",
    "peering",
    "connection",
    "going",
    "click",
    "create",
    "connection",
    "project",
    "id",
    "vpc",
    "network",
    "click",
    "continue",
    "name",
    "peering",
    "connection",
    "going",
    "call",
    "peering",
    "dash",
    "ba",
    "respectively",
    "vpc",
    "network",
    "going",
    "select",
    "bowtie",
    "inc",
    "b",
    "peered",
    "vpc",
    "network",
    "going",
    "select",
    "another",
    "project",
    "want",
    "type",
    "project",
    "id",
    "going",
    "paste",
    "project",
    "tony",
    "project",
    "id",
    "vpc",
    "network",
    "name",
    "going",
    "type",
    "bowtie",
    "inc",
    "going",
    "leave",
    "options",
    "default",
    "going",
    "click",
    "create",
    "established",
    "connections",
    "peering",
    "connections",
    "vpc",
    "information",
    "entered",
    "correct",
    "receive",
    "green",
    "check",
    "mark",
    "stating",
    "peering",
    "connection",
    "connected",
    "success",
    "status",
    "active",
    "head",
    "project",
    "tony",
    "green",
    "check",
    "mark",
    "status",
    "peering",
    "connection",
    "expected",
    "status",
    "green",
    "check",
    "mark",
    "marked",
    "active",
    "order",
    "pairing",
    "connectivity",
    "test",
    "going",
    "need",
    "grab",
    "internal",
    "ip",
    "instance",
    "network",
    "resides",
    "project",
    "bowtie",
    "matter",
    "instance",
    "log",
    "ssh",
    "ping",
    "access",
    "going",
    "simply",
    "go",
    "navigation",
    "menu",
    "going",
    "head",
    "compute",
    "engine",
    "going",
    "record",
    "internal",
    "ip",
    "instance",
    "going",
    "head",
    "project",
    "bowtie",
    "log",
    "instance",
    "b",
    "ping",
    "instance",
    "order",
    "ssh",
    "instance",
    "going",
    "click",
    "ssh",
    "button",
    "connect",
    "open",
    "new",
    "browser",
    "tab",
    "logging",
    "instance",
    "okay",
    "logged",
    "going",
    "zoom",
    "better",
    "viewing",
    "going",
    "run",
    "ping",
    "command",
    "instance",
    "using",
    "internal",
    "ip",
    "copied",
    "earlier",
    "going",
    "hit",
    "enter",
    "see",
    "ping",
    "working",
    "confirm",
    "vpc",
    "peering",
    "connection",
    "established",
    "two",
    "instances",
    "different",
    "vpc",
    "networks",
    "communicating",
    "private",
    "ips",
    "go",
    "ahead",
    "hit",
    "control",
    "c",
    "stop",
    "ping",
    "recap",
    "created",
    "two",
    "separate",
    "vpc",
    "networks",
    "separate",
    "subnets",
    "two",
    "separate",
    "projects",
    "created",
    "necessary",
    "firewall",
    "rules",
    "networks",
    "along",
    "creating",
    "instances",
    "networks",
    "established",
    "vpc",
    "peering",
    "connection",
    "establishing",
    "configuration",
    "vpc",
    "connectivity",
    "test",
    "logging",
    "one",
    "instances",
    "pinging",
    "instance",
    "hope",
    "helps",
    "cement",
    "theory",
    "vpc",
    "peering",
    "learned",
    "previous",
    "lesson",
    "given",
    "context",
    "comes",
    "configuring",
    "end",
    "peering",
    "connection",
    "wanted",
    "take",
    "moment",
    "congratulate",
    "completing",
    "demo",
    "left",
    "clean",
    "resources",
    "created",
    "throughout",
    "demo",
    "start",
    "selecting",
    "instances",
    "deleting",
    "network",
    "well",
    "firewall",
    "rules",
    "networks",
    "going",
    "go",
    "project",
    "tony",
    "going",
    "thing",
    "exactly",
    "last",
    "instance",
    "select",
    "click",
    "delete",
    "delete",
    "instance",
    "next",
    "going",
    "delete",
    "peering",
    "connection",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "scroll",
    "vpc",
    "network",
    "left",
    "hand",
    "menu",
    "going",
    "scroll",
    "vpc",
    "network",
    "peering",
    "going",
    "select",
    "appearing",
    "connection",
    "going",
    "go",
    "top",
    "click",
    "delete",
    "delete",
    "peering",
    "connection",
    "going",
    "delete",
    "firewall",
    "rule",
    "going",
    "go",
    "firewall",
    "going",
    "select",
    "firewall",
    "rule",
    "top",
    "going",
    "click",
    "delete",
    "delete",
    "firewall",
    "rule",
    "last",
    "least",
    "want",
    "delete",
    "vpc",
    "network",
    "created",
    "going",
    "go",
    "vpc",
    "networks",
    "going",
    "drill",
    "custom",
    "vpc",
    "top",
    "going",
    "click",
    "delete",
    "vpc",
    "network",
    "going",
    "click",
    "delete",
    "deleted",
    "resources",
    "project",
    "tony",
    "going",
    "go",
    "back",
    "second",
    "project",
    "project",
    "bowtie",
    "thing",
    "first",
    "going",
    "start",
    "vpc",
    "peering",
    "connection",
    "going",
    "go",
    "vpc",
    "network",
    "peering",
    "going",
    "select",
    "appearing",
    "connection",
    "gon",
    "na",
    "click",
    "delete",
    "top",
    "delete",
    "peering",
    "connection",
    "next",
    "gon",
    "na",
    "go",
    "firewall",
    "gon",
    "na",
    "select",
    "firewall",
    "rule",
    "go",
    "top",
    "click",
    "delete",
    "delete",
    "firewall",
    "rule",
    "finally",
    "gon",
    "na",
    "go",
    "vpc",
    "networks",
    "going",
    "drill",
    "custom",
    "network",
    "going",
    "click",
    "delete",
    "vpc",
    "network",
    "top",
    "delete",
    "vpc",
    "network",
    "successfully",
    "deleted",
    "resources",
    "mark",
    "lesson",
    "complete",
    "see",
    "next",
    "one",
    "congrats",
    "great",
    "job",
    "completing",
    "demo",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "discussing",
    "concepts",
    "terminology",
    "shared",
    "vpcs",
    "also",
    "going",
    "go",
    "detailed",
    "use",
    "cases",
    "shared",
    "vpcs",
    "would",
    "used",
    "different",
    "scenarios",
    "said",
    "let",
    "dive",
    "vpc",
    "created",
    "usually",
    "tied",
    "specific",
    "project",
    "happens",
    "want",
    "share",
    "resources",
    "across",
    "different",
    "projects",
    "still",
    "separate",
    "billing",
    "access",
    "within",
    "projects",
    "shared",
    "vpcs",
    "come",
    "play",
    "shared",
    "vpcs",
    "allow",
    "organization",
    "connect",
    "resources",
    "multiple",
    "projects",
    "common",
    "vpc",
    "network",
    "way",
    "communicate",
    "securely",
    "efficiently",
    "using",
    "internal",
    "ips",
    "network",
    "use",
    "shared",
    "vpcs",
    "designate",
    "project",
    "host",
    "project",
    "attach",
    "one",
    "service",
    "projects",
    "vpc",
    "networks",
    "host",
    "project",
    "considered",
    "shared",
    "vpc",
    "networks",
    "reminder",
    "project",
    "participates",
    "shared",
    "vpc",
    "either",
    "host",
    "project",
    "service",
    "project",
    "host",
    "project",
    "contain",
    "one",
    "shared",
    "vpc",
    "networks",
    "service",
    "project",
    "project",
    "attached",
    "host",
    "project",
    "shared",
    "vpc",
    "admin",
    "attachment",
    "allows",
    "participate",
    "shared",
    "vpc",
    "note",
    "project",
    "host",
    "service",
    "project",
    "simultaneously",
    "one",
    "create",
    "use",
    "multiple",
    "host",
    "projects",
    "however",
    "service",
    "project",
    "attached",
    "single",
    "host",
    "project",
    "also",
    "common",
    "practice",
    "multiple",
    "service",
    "projects",
    "administered",
    "different",
    "departments",
    "teams",
    "organization",
    "clarity",
    "wondering",
    "project",
    "participate",
    "shared",
    "vpc",
    "called",
    "standalone",
    "project",
    "emphasize",
    "neither",
    "host",
    "project",
    "service",
    "project",
    "comes",
    "administering",
    "shared",
    "vpcs",
    "adhering",
    "principle",
    "least",
    "privilege",
    "assigning",
    "necessary",
    "access",
    "needed",
    "specific",
    "users",
    "broken",
    "roles",
    "needed",
    "enable",
    "administer",
    "shared",
    "vpcs",
    "shared",
    "vpc",
    "admin",
    "permissions",
    "enable",
    "host",
    "projects",
    "attach",
    "service",
    "projects",
    "host",
    "projects",
    "delegate",
    "access",
    "subnets",
    "shared",
    "vpc",
    "networks",
    "service",
    "project",
    "admins",
    "comes",
    "service",
    "project",
    "admin",
    "shared",
    "vpc",
    "admin",
    "given",
    "host",
    "project",
    "typically",
    "project",
    "owner",
    "well",
    "although",
    "defining",
    "service",
    "project",
    "admin",
    "shared",
    "vpc",
    "admin",
    "grant",
    "permission",
    "use",
    "whole",
    "host",
    "project",
    "subnets",
    "comes",
    "service",
    "project",
    "admins",
    "two",
    "separate",
    "levels",
    "permissions",
    "applied",
    "first",
    "project",
    "level",
    "permissions",
    "service",
    "project",
    "admin",
    "defined",
    "permission",
    "use",
    "subnets",
    "host",
    "project",
    "comes",
    "subnet",
    "level",
    "permissions",
    "service",
    "project",
    "admin",
    "granted",
    "restrictive",
    "set",
    "permissions",
    "use",
    "subnets",
    "wanted",
    "move",
    "use",
    "cases",
    "give",
    "bit",
    "context",
    "shared",
    "vpcs",
    "used",
    "specific",
    "environments",
    "illustrated",
    "simple",
    "shared",
    "vpc",
    "scenario",
    "host",
    "project",
    "created",
    "attached",
    "service",
    "projects",
    "service",
    "project",
    "admin",
    "service",
    "project",
    "configured",
    "access",
    "subnets",
    "shared",
    "vpc",
    "network",
    "service",
    "project",
    "admin",
    "least",
    "subnet",
    "level",
    "permissions",
    "24",
    "subnet",
    "created",
    "vm1",
    "zone",
    "located",
    "us",
    "west",
    "one",
    "region",
    "instance",
    "receives",
    "internal",
    "ip",
    "address",
    "24",
    "cider",
    "block",
    "service",
    "project",
    "admins",
    "service",
    "project",
    "b",
    "configured",
    "access",
    "subnets",
    "shared",
    "vpc",
    "network",
    "service",
    "project",
    "admin",
    "least",
    "subnet",
    "level",
    "permissions",
    "forward",
    "slash",
    "24",
    "subnet",
    "created",
    "vm2",
    "zone",
    "located",
    "us",
    "central",
    "1",
    "region",
    "instance",
    "receives",
    "internal",
    "ip",
    "address",
    "forward",
    "slash",
    "24",
    "cider",
    "block",
    "course",
    "standalone",
    "project",
    "participate",
    "shared",
    "vpc",
    "neither",
    "host",
    "service",
    "project",
    "last",
    "thing",
    "note",
    "instances",
    "service",
    "projects",
    "attached",
    "host",
    "project",
    "using",
    "shared",
    "vpc",
    "network",
    "communicate",
    "one",
    "another",
    "using",
    "either",
    "ephemeral",
    "reserve",
    "static",
    "internal",
    "ip",
    "addresses",
    "covering",
    "ephemeral",
    "static",
    "ip",
    "addresses",
    "later",
    "section",
    "compute",
    "engine",
    "external",
    "ip",
    "addresses",
    "defined",
    "host",
    "project",
    "usable",
    "resources",
    "project",
    "available",
    "use",
    "service",
    "projects",
    "moving",
    "next",
    "use",
    "case",
    "multiple",
    "hosts",
    "project",
    "use",
    "case",
    "organization",
    "using",
    "two",
    "separate",
    "host",
    "projects",
    "development",
    "production",
    "host",
    "project",
    "two",
    "service",
    "projects",
    "attached",
    "host",
    "projects",
    "one",
    "shared",
    "vpc",
    "network",
    "subnets",
    "configured",
    "use",
    "cider",
    "ranges",
    "testing",
    "production",
    "networks",
    "purposely",
    "configured",
    "way",
    "way",
    "work",
    "resources",
    "tied",
    "subnet",
    "range",
    "automatically",
    "translate",
    "one",
    "environment",
    "moving",
    "next",
    "use",
    "case",
    "hybrid",
    "environment",
    "use",
    "case",
    "organization",
    "single",
    "host",
    "project",
    "single",
    "shared",
    "vpc",
    "network",
    "shared",
    "vpc",
    "network",
    "connected",
    "via",
    "cloud",
    "vpn",
    "network",
    "services",
    "applications",
    "hosted",
    "gcp",
    "others",
    "kept",
    "premises",
    "way",
    "separate",
    "teams",
    "manage",
    "service",
    "projects",
    "project",
    "permissions",
    "service",
    "projects",
    "well",
    "service",
    "project",
    "also",
    "billed",
    "separately",
    "subnet",
    "level",
    "project",
    "level",
    "permissions",
    "granted",
    "necessary",
    "service",
    "project",
    "admins",
    "create",
    "instances",
    "use",
    "shared",
    "vpc",
    "network",
    "instances",
    "service",
    "projects",
    "configured",
    "communicate",
    "internal",
    "services",
    "database",
    "directory",
    "servers",
    "located",
    "premises",
    "finally",
    "last",
    "use",
    "case",
    "web",
    "service",
    "organization",
    "web",
    "service",
    "separated",
    "two",
    "tiers",
    "different",
    "teams",
    "manage",
    "tier",
    "tier",
    "one",
    "service",
    "project",
    "represents",
    "externally",
    "facing",
    "component",
    "behind",
    "http",
    "https",
    "load",
    "balancer",
    "tier",
    "2",
    "service",
    "project",
    "represents",
    "internal",
    "service",
    "upon",
    "tier",
    "1",
    "relies",
    "balanced",
    "using",
    "internal",
    "tcp",
    "udp",
    "load",
    "balancer",
    "shared",
    "vpc",
    "allows",
    "mapping",
    "tier",
    "web",
    "service",
    "different",
    "projects",
    "managed",
    "different",
    "teams",
    "sharing",
    "common",
    "vpc",
    "network",
    "host",
    "resources",
    "needed",
    "tiers",
    "cover",
    "quite",
    "bit",
    "lesson",
    "comes",
    "concepts",
    "shared",
    "vpcs",
    "covered",
    "host",
    "service",
    "projects",
    "roles",
    "play",
    "limitations",
    "also",
    "went",
    "different",
    "roles",
    "needed",
    "administrate",
    "shared",
    "vpcs",
    "went",
    "different",
    "use",
    "cases",
    "use",
    "shared",
    "vpcs",
    "different",
    "scenarios",
    "covers",
    "everything",
    "wanted",
    "discuss",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "discussing",
    "vpc",
    "flow",
    "logs",
    "flow",
    "logs",
    "essential",
    "tool",
    "monitoring",
    "analyzing",
    "traffic",
    "coming",
    "going",
    "vpcs",
    "vm",
    "instances",
    "flow",
    "logs",
    "essential",
    "know",
    "exam",
    "know",
    "capabilities",
    "use",
    "cases",
    "said",
    "let",
    "dive",
    "vpc",
    "flow",
    "logs",
    "records",
    "sample",
    "network",
    "flows",
    "sent",
    "received",
    "vm",
    "instances",
    "including",
    "instances",
    "used",
    "google",
    "kubernetes",
    "engine",
    "nodes",
    "logs",
    "used",
    "network",
    "monitoring",
    "forensics",
    "security",
    "analysis",
    "expense",
    "optimization",
    "enable",
    "vpc",
    "flow",
    "logs",
    "enable",
    "vms",
    "subnet",
    "basically",
    "would",
    "enabling",
    "vpc",
    "flow",
    "logs",
    "subnet",
    "subnet",
    "basis",
    "flow",
    "logs",
    "aggregated",
    "connection",
    "compute",
    "engine",
    "vms",
    "exported",
    "real",
    "time",
    "logs",
    "exported",
    "cloud",
    "logging",
    "previously",
    "known",
    "stackdriver",
    "30",
    "days",
    "logs",
    "need",
    "stored",
    "longer",
    "30",
    "days",
    "exported",
    "cloud",
    "storage",
    "bucket",
    "longer",
    "term",
    "storage",
    "read",
    "queried",
    "cloud",
    "logging",
    "google",
    "cloud",
    "samples",
    "packets",
    "leave",
    "enter",
    "vm",
    "generate",
    "flow",
    "logs",
    "every",
    "packet",
    "captured",
    "log",
    "record",
    "one",
    "every",
    "10",
    "packets",
    "captured",
    "sampling",
    "rate",
    "might",
    "lower",
    "depending",
    "vm",
    "load",
    "note",
    "adjust",
    "rate",
    "rate",
    "locked",
    "google",
    "cloud",
    "changed",
    "way",
    "vpc",
    "flow",
    "logs",
    "capture",
    "every",
    "packet",
    "compensates",
    "missed",
    "packets",
    "interpolating",
    "captured",
    "packets",
    "many",
    "different",
    "use",
    "cases",
    "vpc",
    "flow",
    "logs",
    "wanted",
    "take",
    "quick",
    "minute",
    "go",
    "first",
    "one",
    "wanted",
    "mention",
    "network",
    "monitoring",
    "vpc",
    "flow",
    "logs",
    "provide",
    "visibility",
    "network",
    "throughput",
    "performance",
    "monitor",
    "vpc",
    "network",
    "perform",
    "network",
    "diagnostics",
    "understand",
    "traffic",
    "changes",
    "help",
    "forecast",
    "capacity",
    "capacity",
    "planning",
    "also",
    "analyze",
    "network",
    "usage",
    "vpc",
    "flow",
    "logs",
    "analyze",
    "network",
    "flows",
    "traffic",
    "regions",
    "zones",
    "traffic",
    "specific",
    "countries",
    "internet",
    "based",
    "analysis",
    "optimize",
    "network",
    "traffic",
    "expenses",
    "great",
    "use",
    "case",
    "vpc",
    "flow",
    "logs",
    "network",
    "forensics",
    "example",
    "incident",
    "occurs",
    "examine",
    "ips",
    "talked",
    "also",
    "look",
    "compromised",
    "ips",
    "analyzing",
    "incoming",
    "outgoing",
    "network",
    "flows",
    "lastly",
    "vpc",
    "flow",
    "logs",
    "used",
    "security",
    "analysis",
    "leverage",
    "streaming",
    "apis",
    "using",
    "pub",
    "sub",
    "integrate",
    "sim",
    "security",
    "information",
    "event",
    "management",
    "system",
    "like",
    "splunk",
    "rapid7",
    "logarithm",
    "common",
    "way",
    "add",
    "extra",
    "layer",
    "security",
    "currently",
    "existing",
    "environment",
    "well",
    "great",
    "way",
    "meet",
    "compliance",
    "standards",
    "needed",
    "organization",
    "vpc",
    "flow",
    "logs",
    "recorded",
    "specific",
    "format",
    "log",
    "records",
    "contain",
    "base",
    "fields",
    "core",
    "fields",
    "every",
    "log",
    "record",
    "meta",
    "data",
    "fields",
    "add",
    "additional",
    "information",
    "metadata",
    "fields",
    "may",
    "omitted",
    "save",
    "storage",
    "costs",
    "base",
    "fields",
    "always",
    "included",
    "omitted",
    "log",
    "fields",
    "format",
    "one",
    "piece",
    "data",
    "given",
    "field",
    "example",
    "connection",
    "field",
    "see",
    "base",
    "ip",
    "details",
    "format",
    "contains",
    "source",
    "destination",
    "ip",
    "address",
    "port",
    "plus",
    "protocol",
    "single",
    "field",
    "flows",
    "endpoint",
    "gke",
    "cluster",
    "annotated",
    "gke",
    "annotations",
    "include",
    "details",
    "cluster",
    "pod",
    "service",
    "endpoint",
    "gke",
    "annotations",
    "available",
    "custom",
    "configuration",
    "metadata",
    "fields",
    "enable",
    "vpc",
    "flow",
    "logs",
    "set",
    "filter",
    "based",
    "base",
    "metadata",
    "fields",
    "preserves",
    "logs",
    "match",
    "filter",
    "logs",
    "discarded",
    "written",
    "logging",
    "saves",
    "money",
    "reduces",
    "time",
    "needed",
    "find",
    "information",
    "looking",
    "shown",
    "sample",
    "console",
    "classic",
    "logs",
    "viewer",
    "well",
    "logs",
    "viewer",
    "preview",
    "classic",
    "logs",
    "viewer",
    "simply",
    "select",
    "sub",
    "network",
    "first",
    "pull",
    "menu",
    "second",
    "pull",
    "menu",
    "select",
    "forward",
    "slash",
    "vpc",
    "underscore",
    "flows",
    "give",
    "information",
    "need",
    "pull",
    "vpc",
    "flow",
    "logs",
    "logs",
    "viewer",
    "preview",
    "done",
    "similar",
    "way",
    "query",
    "shown",
    "query",
    "builder",
    "adjusted",
    "accordingly",
    "pulling",
    "vpc",
    "flow",
    "logs",
    "must",
    "done",
    "within",
    "console",
    "viewing",
    "google",
    "cloud",
    "last",
    "thing",
    "wanted",
    "show",
    "ending",
    "lesson",
    "sample",
    "log",
    "log",
    "shown",
    "sample",
    "vpc",
    "flow",
    "log",
    "looks",
    "like",
    "see",
    "beside",
    "field",
    "see",
    "small",
    "arrow",
    "clicking",
    "arrows",
    "expand",
    "field",
    "reveal",
    "many",
    "subfields",
    "saw",
    "last",
    "slide",
    "give",
    "necessary",
    "information",
    "need",
    "analyze",
    "vpc",
    "flow",
    "logs",
    "example",
    "connection",
    "field",
    "shows",
    "five",
    "tuple",
    "describes",
    "connection",
    "clearly",
    "see",
    "top",
    "go",
    "expand",
    "fields",
    "would",
    "find",
    "information",
    "could",
    "help",
    "better",
    "analyze",
    "logging",
    "info",
    "given",
    "problem",
    "trying",
    "solve",
    "want",
    "go",
    "deep",
    "logging",
    "diving",
    "complete",
    "section",
    "later",
    "section",
    "course",
    "want",
    "get",
    "feel",
    "type",
    "data",
    "vpc",
    "flow",
    "logs",
    "give",
    "help",
    "specific",
    "use",
    "case",
    "well",
    "exam",
    "pretty",
    "much",
    "wanted",
    "cover",
    "regards",
    "vpc",
    "flow",
    "logs",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "cover",
    "overview",
    "basic",
    "foundational",
    "service",
    "supports",
    "backbone",
    "internet",
    "know",
    "today",
    "foundation",
    "called",
    "dns",
    "domain",
    "name",
    "system",
    "dns",
    "used",
    "widely",
    "google",
    "cloud",
    "mostly",
    "infrastructure",
    "perspective",
    "used",
    "pretty",
    "much",
    "cloud",
    "environment",
    "computer",
    "network",
    "planet",
    "quite",
    "bit",
    "cover",
    "lesson",
    "regards",
    "dns",
    "said",
    "let",
    "dive",
    "dns",
    "domain",
    "name",
    "system",
    "global",
    "decentralized",
    "distributed",
    "database",
    "lets",
    "store",
    "ip",
    "addresses",
    "data",
    "look",
    "name",
    "system",
    "uses",
    "human",
    "readable",
    "names",
    "like",
    "translates",
    "language",
    "computers",
    "understand",
    "numeric",
    "ip",
    "addresses",
    "example",
    "humans",
    "access",
    "information",
    "online",
    "domain",
    "name",
    "like",
    "computers",
    "use",
    "ip",
    "addresses",
    "access",
    "information",
    "online",
    "like",
    "whether",
    "type",
    "ip",
    "address",
    "web",
    "browser",
    "connect",
    "dns",
    "translates",
    "domain",
    "name",
    "ip",
    "address",
    "web",
    "browser",
    "knows",
    "connect",
    "know",
    "enter",
    "web",
    "browser",
    "dns",
    "connect",
    "domain",
    "name",
    "web",
    "hosting",
    "mail",
    "services",
    "getting",
    "bit",
    "deeper",
    "ip",
    "addresses",
    "core",
    "communicating",
    "devices",
    "internet",
    "hard",
    "memorize",
    "change",
    "often",
    "even",
    "service",
    "get",
    "around",
    "problems",
    "gave",
    "names",
    "ip",
    "addresses",
    "example",
    "comes",
    "computer",
    "communicating",
    "use",
    "dns",
    "system",
    "dns",
    "database",
    "contains",
    "information",
    "needed",
    "convert",
    "domain",
    "name",
    "ip",
    "address",
    "piece",
    "information",
    "stored",
    "logical",
    "container",
    "called",
    "zone",
    "way",
    "zone",
    "stored",
    "commonly",
    "known",
    "zone",
    "file",
    "within",
    "zone",
    "file",
    "dns",
    "record",
    "links",
    "name",
    "www",
    "ip",
    "address",
    "laptop",
    "needs",
    "communicate",
    "specific",
    "website",
    "zone",
    "file",
    "hosted",
    "known",
    "name",
    "server",
    "ns",
    "server",
    "short",
    "going",
    "detail",
    "minute",
    "short",
    "query",
    "zone",
    "record",
    "computer",
    "communicate",
    "web",
    "server",
    "dns",
    "makes",
    "happen",
    "wanted",
    "go",
    "bit",
    "history",
    "dns",
    "came",
    "early",
    "computer",
    "networks",
    "simple",
    "text",
    "file",
    "called",
    "host",
    "file",
    "created",
    "mapped",
    "hostnames",
    "ip",
    "addresses",
    "enabled",
    "people",
    "refer",
    "computers",
    "name",
    "computers",
    "translated",
    "name",
    "ip",
    "address",
    "needed",
    "communicate",
    "problem",
    "network",
    "sizes",
    "increased",
    "host",
    "file",
    "approach",
    "became",
    "impractical",
    "due",
    "fact",
    "needed",
    "stored",
    "computer",
    "computer",
    "would",
    "resolve",
    "host",
    "names",
    "well",
    "updates",
    "difficult",
    "manage",
    "computers",
    "would",
    "need",
    "given",
    "updated",
    "file",
    "system",
    "scalable",
    "overcome",
    "limitations",
    "dns",
    "system",
    "developed",
    "dns",
    "system",
    "essentially",
    "provided",
    "way",
    "organize",
    "names",
    "using",
    "domain",
    "name",
    "structure",
    "also",
    "provided",
    "dynamic",
    "system",
    "protocols",
    "services",
    "methods",
    "storing",
    "updating",
    "retrieving",
    "ip",
    "addresses",
    "host",
    "computers",
    "covered",
    "dns",
    "use",
    "wanted",
    "dive",
    "structure",
    "dns",
    "system",
    "structure",
    "begins",
    "dot",
    "root",
    "found",
    "every",
    "domain",
    "name",
    "type",
    "browser",
    "almost",
    "never",
    "see",
    "browser",
    "automatically",
    "put",
    "without",
    "knowing",
    "try",
    "domain",
    "browser",
    "almost",
    "always",
    "come",
    "result",
    "dot",
    "put",
    "provide",
    "route",
    "start",
    "break",
    "dns",
    "system",
    "domain",
    "name",
    "space",
    "consists",
    "hierarchical",
    "data",
    "structure",
    "like",
    "one",
    "computer",
    "node",
    "label",
    "zero",
    "resource",
    "records",
    "hold",
    "information",
    "associated",
    "domain",
    "name",
    "domain",
    "name",
    "consists",
    "label",
    "concatenated",
    "name",
    "parent",
    "node",
    "right",
    "separated",
    "dot",
    "comes",
    "dns",
    "domain",
    "name",
    "always",
    "assembled",
    "right",
    "left",
    "hierarchy",
    "tree",
    "subdivided",
    "zones",
    "beginning",
    "root",
    "zone",
    "dns",
    "zone",
    "may",
    "consist",
    "one",
    "domain",
    "may",
    "consist",
    "many",
    "domains",
    "sub",
    "domains",
    "depending",
    "administrative",
    "choices",
    "zone",
    "manager",
    "getting",
    "right",
    "root",
    "server",
    "first",
    "step",
    "translating",
    "human",
    "readable",
    "hostnames",
    "ip",
    "addresses",
    "root",
    "domain",
    "comprised",
    "13",
    "dns",
    "systems",
    "dispersed",
    "around",
    "world",
    "known",
    "collectively",
    "dns",
    "root",
    "servers",
    "indicated",
    "letters",
    "operated",
    "12",
    "organizations",
    "verisign",
    "cogent",
    "nasa",
    "13",
    "ip",
    "addresses",
    "represent",
    "systems",
    "actually",
    "13",
    "servers",
    "ip",
    "addresses",
    "actually",
    "cluster",
    "dns",
    "servers",
    "dns",
    "servers",
    "also",
    "consists",
    "root",
    "zone",
    "file",
    "contains",
    "address",
    "authoritative",
    "name",
    "server",
    "top",
    "level",
    "domain",
    "big",
    "undertaking",
    "keep",
    "updated",
    "iana",
    "internet",
    "assigned",
    "numbers",
    "authority",
    "appointed",
    "authority",
    "manages",
    "administrates",
    "file",
    "include",
    "link",
    "lesson",
    "text",
    "looking",
    "dive",
    "deeper",
    "contents",
    "root",
    "zone",
    "file",
    "well",
    "getting",
    "know",
    "little",
    "bit",
    "iana",
    "organization",
    "dns",
    "root",
    "servers",
    "establish",
    "hierarchy",
    "name",
    "resolution",
    "process",
    "delegated",
    "dns",
    "servers",
    "dns",
    "route",
    "hierarchy",
    "top",
    "level",
    "domain",
    "servers",
    "also",
    "known",
    "tld",
    "short",
    "top",
    "level",
    "domain",
    "takes",
    "tld",
    "provided",
    "user",
    "query",
    "example",
    "provides",
    "details",
    "tld",
    "name",
    "server",
    "companies",
    "administer",
    "domains",
    "named",
    "registries",
    "operate",
    "authoritative",
    "name",
    "servers",
    "top",
    "level",
    "domains",
    "example",
    "verisign",
    "registry",
    "dot",
    "com",
    "top",
    "level",
    "domain",
    "hundred",
    "million",
    "domains",
    "registered",
    "dot",
    "com",
    "top",
    "level",
    "domain",
    "top",
    "level",
    "dns",
    "servers",
    "handle",
    "top",
    "level",
    "domains",
    "com",
    "dot",
    "org",
    "dot",
    "net",
    "dot",
    "io",
    "also",
    "referred",
    "gtld",
    "general",
    "top",
    "level",
    "domains",
    "cctld",
    "country",
    "code",
    "top",
    "level",
    "domain",
    "like",
    "dot",
    "ca",
    "canada",
    "dot",
    "uk",
    "united",
    "kingdom",
    "dot",
    "italy",
    "top",
    "level",
    "dns",
    "servers",
    "delegate",
    "thousands",
    "second",
    "level",
    "dns",
    "servers",
    "second",
    "level",
    "domain",
    "names",
    "sold",
    "companies",
    "organizations",
    "900",
    "accredited",
    "registrars",
    "register",
    "manage",
    "second",
    "level",
    "domains",
    "dot",
    "com",
    "domain",
    "end",
    "users",
    "second",
    "level",
    "structure",
    "comprised",
    "millions",
    "domain",
    "names",
    "second",
    "level",
    "dns",
    "servers",
    "delegate",
    "zone",
    "commonly",
    "store",
    "individual",
    "host",
    "records",
    "domain",
    "name",
    "server",
    "bottom",
    "dns",
    "lookup",
    "chain",
    "would",
    "typically",
    "find",
    "resource",
    "records",
    "resource",
    "records",
    "maps",
    "services",
    "host",
    "names",
    "ip",
    "addresses",
    "respond",
    "queried",
    "resource",
    "record",
    "ultimately",
    "allowing",
    "web",
    "browser",
    "making",
    "request",
    "reach",
    "ip",
    "address",
    "needed",
    "access",
    "website",
    "web",
    "resources",
    "one",
    "concept",
    "wanted",
    "cover",
    "move",
    "sub",
    "domain",
    "noticed",
    "wondered",
    "sub",
    "domain",
    "come",
    "play",
    "regards",
    "dns",
    "structure",
    "well",
    "resource",
    "record",
    "falls",
    "second",
    "level",
    "domain",
    "dns",
    "hierarchy",
    "sub",
    "domain",
    "domain",
    "part",
    "another",
    "main",
    "domain",
    "wanted",
    "put",
    "give",
    "understanding",
    "subdomains",
    "would",
    "fall",
    "understand",
    "dns",
    "structured",
    "wanted",
    "go",
    "breakdown",
    "data",
    "flow",
    "dns",
    "give",
    "better",
    "contacts",
    "eight",
    "steps",
    "dns",
    "lookup",
    "first",
    "start",
    "dns",
    "client",
    "shown",
    "tony",
    "bowtie",
    "laptop",
    "client",
    "device",
    "could",
    "also",
    "phone",
    "tablet",
    "configured",
    "software",
    "send",
    "name",
    "resolution",
    "queries",
    "dns",
    "server",
    "client",
    "needs",
    "resolve",
    "remote",
    "host",
    "name",
    "ip",
    "address",
    "cases",
    "sends",
    "request",
    "dns",
    "recursive",
    "resolver",
    "returns",
    "ip",
    "address",
    "remote",
    "host",
    "client",
    "recursive",
    "resolver",
    "dns",
    "server",
    "configured",
    "query",
    "dns",
    "servers",
    "finds",
    "answer",
    "question",
    "either",
    "return",
    "answer",
    "error",
    "message",
    "client",
    "answer",
    "query",
    "query",
    "eventually",
    "passed",
    "dns",
    "client",
    "recursive",
    "resolver",
    "essence",
    "acts",
    "middle",
    "man",
    "client",
    "dns",
    "name",
    "server",
    "usually",
    "internet",
    "service",
    "provider",
    "service",
    "carrier",
    "corporate",
    "network",
    "make",
    "sure",
    "resolver",
    "able",
    "properly",
    "run",
    "dns",
    "root",
    "hints",
    "file",
    "supplied",
    "almost",
    "every",
    "operating",
    "system",
    "file",
    "holds",
    "ip",
    "addresses",
    "root",
    "name",
    "servers",
    "also",
    "includes",
    "dns",
    "resolver",
    "case",
    "unable",
    "answer",
    "query",
    "client",
    "able",
    "still",
    "make",
    "query",
    "dns",
    "name",
    "servers",
    "receiving",
    "dns",
    "query",
    "client",
    "recursive",
    "resolver",
    "either",
    "respond",
    "cache",
    "data",
    "send",
    "request",
    "root",
    "name",
    "server",
    "case",
    "resolver",
    "queries",
    "dns",
    "root",
    "name",
    "server",
    "root",
    "server",
    "responds",
    "resolver",
    "address",
    "top",
    "level",
    "domain",
    "tld",
    "dns",
    "server",
    "com",
    "dot",
    "net",
    "stores",
    "information",
    "domains",
    "searching",
    "request",
    "pointed",
    "towards",
    "tld",
    "naturally",
    "resolver",
    "makes",
    "request",
    "com",
    "tld",
    "tld",
    "name",
    "server",
    "responds",
    "ip",
    "address",
    "domain",
    "name",
    "server",
    "lastly",
    "resolver",
    "sends",
    "query",
    "domain",
    "name",
    "server",
    "ip",
    "address",
    "returned",
    "resolver",
    "name",
    "server",
    "ip",
    "address",
    "cache",
    "period",
    "time",
    "determined",
    "name",
    "server",
    "process",
    "future",
    "request",
    "hostname",
    "could",
    "resolved",
    "cache",
    "rather",
    "performing",
    "entire",
    "process",
    "beginning",
    "end",
    "unaware",
    "cache",
    "component",
    "stores",
    "data",
    "future",
    "requests",
    "data",
    "served",
    "faster",
    "purpose",
    "caching",
    "temporarily",
    "store",
    "data",
    "location",
    "results",
    "improvements",
    "performance",
    "reliability",
    "data",
    "requests",
    "dns",
    "caching",
    "involves",
    "storing",
    "data",
    "closer",
    "requesting",
    "client",
    "dns",
    "query",
    "resolved",
    "earlier",
    "additional",
    "queries",
    "dns",
    "lookup",
    "chain",
    "avoided",
    "thus",
    "improving",
    "load",
    "times",
    "dns",
    "data",
    "cached",
    "variety",
    "locations",
    "chain",
    "store",
    "dns",
    "records",
    "set",
    "amount",
    "time",
    "determined",
    "time",
    "live",
    "also",
    "known",
    "ttl",
    "short",
    "value",
    "time",
    "live",
    "domain",
    "record",
    "high",
    "ttl",
    "domain",
    "record",
    "means",
    "local",
    "dns",
    "resolvers",
    "cache",
    "responses",
    "longer",
    "give",
    "quicker",
    "responses",
    "however",
    "making",
    "changes",
    "dns",
    "records",
    "take",
    "longer",
    "due",
    "need",
    "wait",
    "cash",
    "records",
    "expire",
    "alternatively",
    "domain",
    "records",
    "low",
    "ttls",
    "change",
    "much",
    "quickly",
    "dns",
    "resolvers",
    "need",
    "refresh",
    "records",
    "often",
    "final",
    "step",
    "dns",
    "resolver",
    "responds",
    "web",
    "browser",
    "ip",
    "address",
    "domain",
    "requested",
    "initially",
    "eight",
    "steps",
    "dns",
    "lookup",
    "returned",
    "ip",
    "address",
    "browser",
    "able",
    "make",
    "request",
    "webpage",
    "browser",
    "reach",
    "ip",
    "address",
    "server",
    "request",
    "web",
    "page",
    "loaded",
    "browser",
    "know",
    "probably",
    "review",
    "bit",
    "advanced",
    "comes",
    "understanding",
    "dns",
    "others",
    "fairly",
    "new",
    "underpinnings",
    "dns",
    "hope",
    "given",
    "basic",
    "understanding",
    "use",
    "works",
    "moving",
    "forward",
    "course",
    "discussing",
    "dns",
    "regards",
    "different",
    "services",
    "needed",
    "resource",
    "records",
    "within",
    "zones",
    "used",
    "given",
    "services",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "fundamentals",
    "dns",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "diving",
    "dns",
    "record",
    "types",
    "dns",
    "resource",
    "records",
    "basic",
    "information",
    "elements",
    "domain",
    "name",
    "system",
    "entries",
    "dns",
    "database",
    "provide",
    "information",
    "hosts",
    "records",
    "physically",
    "stored",
    "zone",
    "files",
    "dns",
    "server",
    "lesson",
    "go",
    "commonly",
    "used",
    "dns",
    "records",
    "coming",
    "across",
    "throughout",
    "course",
    "said",
    "let",
    "dive",
    "first",
    "record",
    "wanted",
    "touch",
    "name",
    "server",
    "records",
    "also",
    "known",
    "ns",
    "records",
    "short",
    "record",
    "identifies",
    "dns",
    "server",
    "contains",
    "current",
    "records",
    "domain",
    "servers",
    "usually",
    "found",
    "registrar",
    "internet",
    "service",
    "provider",
    "hosting",
    "company",
    "ns",
    "records",
    "created",
    "identify",
    "name",
    "server",
    "used",
    "domain",
    "name",
    "within",
    "given",
    "zone",
    "example",
    "dot",
    "co",
    "zone",
    "multiple",
    "name",
    "server",
    "records",
    "name",
    "server",
    "records",
    "dot",
    "co",
    "delegation",
    "happens",
    "point",
    "servers",
    "host",
    "zone",
    "managed",
    "bowtie",
    "inc",
    "flow",
    "shown",
    "query",
    "starts",
    "root",
    "zone",
    "going",
    "dot",
    "co",
    "zone",
    "record",
    "lies",
    "name",
    "servers",
    "flows",
    "contain",
    "necessary",
    "records",
    "next",
    "record",
    "wanted",
    "touch",
    "aaa",
    "records",
    "short",
    "address",
    "records",
    "ipv4",
    "ipv6",
    "ip",
    "addresses",
    "respectively",
    "record",
    "points",
    "domain",
    "name",
    "ip",
    "address",
    "example",
    "type",
    "wwe",
    "web",
    "browser",
    "dns",
    "system",
    "translate",
    "domain",
    "name",
    "ip",
    "address",
    "using",
    "record",
    "information",
    "stored",
    "dns",
    "zone",
    "file",
    "record",
    "links",
    "website",
    "domain",
    "name",
    "ipv4",
    "address",
    "points",
    "server",
    "website",
    "files",
    "live",
    "comes",
    "aaa",
    "record",
    "links",
    "website",
    "domain",
    "ipv6",
    "address",
    "points",
    "server",
    "website",
    "files",
    "live",
    "records",
    "simplest",
    "type",
    "dns",
    "records",
    "one",
    "primary",
    "records",
    "used",
    "dns",
    "servers",
    "lot",
    "records",
    "including",
    "using",
    "multiple",
    "records",
    "domain",
    "order",
    "provide",
    "redundancy",
    "said",
    "aaa",
    "records",
    "additionally",
    "multiple",
    "domains",
    "could",
    "point",
    "address",
    "case",
    "would",
    "aaa",
    "record",
    "pointing",
    "ip",
    "address",
    "moving",
    "cname",
    "records",
    "c",
    "name",
    "record",
    "short",
    "canonical",
    "name",
    "record",
    "type",
    "resource",
    "record",
    "maps",
    "one",
    "domain",
    "name",
    "another",
    "really",
    "convenient",
    "running",
    "multiple",
    "services",
    "like",
    "ftp",
    "server",
    "server",
    "running",
    "different",
    "ports",
    "single",
    "ip",
    "address",
    "example",
    "point",
    "ftp",
    "dns",
    "entry",
    "turn",
    "record",
    "points",
    "ip",
    "address",
    "ip",
    "address",
    "ever",
    "changes",
    "change",
    "record",
    "one",
    "place",
    "dns",
    "record",
    "bow",
    "tie",
    "inc",
    "dot",
    "co",
    "note",
    "cname",
    "records",
    "must",
    "always",
    "point",
    "another",
    "domain",
    "name",
    "never",
    "directly",
    "ip",
    "address",
    "next",
    "txt",
    "records",
    "text",
    "record",
    "txt",
    "short",
    "type",
    "resource",
    "record",
    "provides",
    "text",
    "information",
    "sources",
    "outside",
    "domain",
    "used",
    "number",
    "arbitrary",
    "purposes",
    "records",
    "value",
    "either",
    "human",
    "machine",
    "readable",
    "text",
    "many",
    "cases",
    "text",
    "records",
    "used",
    "verify",
    "domain",
    "ownership",
    "even",
    "provide",
    "human",
    "readable",
    "information",
    "server",
    "network",
    "data",
    "center",
    "also",
    "often",
    "used",
    "structured",
    "fashion",
    "record",
    "small",
    "amounts",
    "machine",
    "readable",
    "data",
    "dns",
    "system",
    "domain",
    "may",
    "multiple",
    "tax",
    "records",
    "associated",
    "provided",
    "dns",
    "server",
    "implementation",
    "supports",
    "record",
    "turn",
    "one",
    "character",
    "strings",
    "example",
    "google",
    "wants",
    "verify",
    "domain",
    "g",
    "suite",
    "set",
    "needs",
    "verification",
    "domain",
    "google",
    "creating",
    "text",
    "record",
    "adding",
    "zone",
    "google",
    "supply",
    "text",
    "verification",
    "record",
    "add",
    "domain",
    "host",
    "dns",
    "records",
    "start",
    "scan",
    "text",
    "record",
    "verify",
    "domain",
    "supplied",
    "text",
    "record",
    "added",
    "domain",
    "administrator",
    "behind",
    "scenes",
    "google",
    "verification",
    "check",
    "timed",
    "intervals",
    "google",
    "finally",
    "sees",
    "record",
    "exists",
    "domain",
    "ownership",
    "confirmed",
    "g",
    "suite",
    "enabled",
    "domain",
    "typical",
    "example",
    "tax",
    "records",
    "used",
    "moving",
    "mx",
    "records",
    "dns",
    "mx",
    "record",
    "also",
    "known",
    "mail",
    "exchange",
    "record",
    "resource",
    "record",
    "directs",
    "email",
    "mail",
    "server",
    "mx",
    "record",
    "indicates",
    "email",
    "messages",
    "routed",
    "server",
    "mail",
    "go",
    "like",
    "cname",
    "records",
    "mx",
    "record",
    "must",
    "always",
    "point",
    "another",
    "domain",
    "mx",
    "records",
    "consist",
    "two",
    "parts",
    "priority",
    "domain",
    "name",
    "priority",
    "numbers",
    "domains",
    "mx",
    "records",
    "indicate",
    "preference",
    "order",
    "mail",
    "server",
    "used",
    "lower",
    "preference",
    "number",
    "higher",
    "priority",
    "example",
    "laura",
    "emailing",
    "tony",
    "bowtie",
    "tony",
    "mx",
    "records",
    "part",
    "process",
    "dns",
    "needs",
    "know",
    "send",
    "mail",
    "look",
    "domain",
    "attached",
    "email",
    "address",
    "dns",
    "client",
    "run",
    "regular",
    "dns",
    "query",
    "first",
    "going",
    "root",
    "cotld",
    "finally",
    "receive",
    "mx",
    "record",
    "example",
    "two",
    "first",
    "one",
    "mail",
    "representing",
    "second",
    "one",
    "different",
    "mail",
    "server",
    "outside",
    "current",
    "domain",
    "case",
    "google",
    "mail",
    "server",
    "fully",
    "qualified",
    "domain",
    "name",
    "dot",
    "right",
    "record",
    "suggests",
    "server",
    "always",
    "try",
    "first",
    "5",
    "lower",
    "give",
    "higher",
    "priority",
    "result",
    "message",
    "send",
    "failure",
    "server",
    "default",
    "values",
    "would",
    "low",
    "balanced",
    "across",
    "servers",
    "whichever",
    "used",
    "server",
    "gets",
    "result",
    "query",
    "back",
    "uses",
    "connect",
    "mail",
    "server",
    "via",
    "smtp",
    "protocol",
    "uses",
    "protocol",
    "deliver",
    "email",
    "mx",
    "records",
    "used",
    "email",
    "next",
    "record",
    "wanted",
    "cover",
    "pointer",
    "records",
    "also",
    "known",
    "ptr",
    "records",
    "short",
    "provides",
    "domain",
    "name",
    "associated",
    "ip",
    "address",
    "dns",
    "pointer",
    "record",
    "exactly",
    "opposite",
    "record",
    "provides",
    "ip",
    "address",
    "associated",
    "domain",
    "name",
    "dns",
    "pointer",
    "records",
    "used",
    "reverse",
    "dns",
    "lookups",
    "discussed",
    "earlier",
    "user",
    "attempts",
    "reach",
    "domain",
    "name",
    "browser",
    "dns",
    "lookup",
    "occurs",
    "matching",
    "domain",
    "name",
    "ip",
    "address",
    "reverse",
    "dns",
    "lookup",
    "opposite",
    "process",
    "query",
    "starts",
    "ip",
    "address",
    "looks",
    "domain",
    "name",
    "dnsa",
    "records",
    "stored",
    "given",
    "domain",
    "name",
    "dns",
    "pointer",
    "records",
    "stored",
    "ip",
    "address",
    "reverse",
    "ending",
    "dot",
    "n",
    "r",
    "dot",
    "arpa",
    "example",
    "pointer",
    "record",
    "iap",
    "address",
    "would",
    "stored",
    "dot",
    "addr",
    "dot",
    "arpa",
    "ipv6",
    "addresses",
    "constructed",
    "differently",
    "ipv4",
    "addresses",
    "ipv6",
    "pointer",
    "records",
    "exist",
    "different",
    "namespace",
    "ipv6",
    "pointer",
    "records",
    "stored",
    "ipv6",
    "address",
    "reversed",
    "converted",
    "sections",
    "opposed",
    "sections",
    "ipv4",
    "well",
    "added",
    "end",
    "pointer",
    "records",
    "used",
    "commonly",
    "reverse",
    "dns",
    "lookups",
    "troubleshooting",
    "email",
    "delivery",
    "issues",
    "logging",
    "last",
    "record",
    "wanted",
    "cover",
    "soa",
    "records",
    "also",
    "known",
    "start",
    "authority",
    "records",
    "resource",
    "record",
    "created",
    "create",
    "managed",
    "zone",
    "specifies",
    "authoritative",
    "information",
    "including",
    "global",
    "parameters",
    "dns",
    "zone",
    "soa",
    "record",
    "stores",
    "important",
    "information",
    "domain",
    "zone",
    "email",
    "address",
    "administrator",
    "domain",
    "last",
    "updated",
    "long",
    "server",
    "wait",
    "refreshes",
    "every",
    "dns",
    "zone",
    "registered",
    "must",
    "soa",
    "record",
    "per",
    "rfc",
    "1035",
    "exactly",
    "one",
    "soa",
    "record",
    "per",
    "zone",
    "soa",
    "record",
    "contains",
    "core",
    "information",
    "zone",
    "possible",
    "zone",
    "work",
    "without",
    "information",
    "include",
    "link",
    "lesson",
    "text",
    "interested",
    "diving",
    "deeper",
    "understanding",
    "information",
    "covered",
    "soa",
    "records",
    "properly",
    "optimized",
    "updated",
    "soa",
    "record",
    "reduce",
    "bandwidth",
    "name",
    "servers",
    "increase",
    "speed",
    "website",
    "access",
    "ensure",
    "site",
    "alive",
    "even",
    "primary",
    "dns",
    "server",
    "covers",
    "everything",
    "wanted",
    "discuss",
    "comes",
    "resource",
    "records",
    "within",
    "dns",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "covering",
    "network",
    "address",
    "translation",
    "also",
    "known",
    "nat",
    "short",
    "common",
    "process",
    "used",
    "home",
    "business",
    "cloud",
    "networks",
    "encounter",
    "knowing",
    "understanding",
    "help",
    "achieve",
    "would",
    "use",
    "makes",
    "necessary",
    "process",
    "quite",
    "bit",
    "cover",
    "said",
    "let",
    "dive",
    "high",
    "level",
    "nat",
    "way",
    "map",
    "multiple",
    "local",
    "private",
    "ip",
    "addresses",
    "public",
    "ip",
    "address",
    "transferring",
    "information",
    "done",
    "altering",
    "network",
    "address",
    "data",
    "ip",
    "header",
    "data",
    "packet",
    "traveling",
    "network",
    "towards",
    "destination",
    "packets",
    "pass",
    "nat",
    "device",
    "either",
    "source",
    "destination",
    "ip",
    "address",
    "changed",
    "packets",
    "returning",
    "direction",
    "translated",
    "back",
    "original",
    "addresses",
    "process",
    "typically",
    "used",
    "home",
    "routers",
    "provided",
    "internet",
    "service",
    "provider",
    "originally",
    "nat",
    "designed",
    "deal",
    "scarcity",
    "free",
    "ipv4",
    "addresses",
    "increasing",
    "number",
    "computers",
    "operate",
    "single",
    "publicly",
    "routable",
    "ip",
    "address",
    "devices",
    "private",
    "ip",
    "space",
    "traverse",
    "public",
    "internet",
    "needed",
    "devices",
    "communicate",
    "public",
    "internet",
    "ipv6",
    "designed",
    "overcome",
    "ipv4",
    "shortage",
    "tons",
    "available",
    "addresses",
    "therefore",
    "real",
    "need",
    "nat",
    "comes",
    "ipv6",
    "nat",
    "additional",
    "benefit",
    "adding",
    "layer",
    "security",
    "privacy",
    "hiding",
    "ip",
    "address",
    "devices",
    "outside",
    "world",
    "allowing",
    "packets",
    "sent",
    "received",
    "originating",
    "private",
    "device",
    "high",
    "level",
    "nat",
    "multiple",
    "types",
    "covering",
    "high",
    "level",
    "thing",
    "translate",
    "private",
    "p",
    "addresses",
    "public",
    "ip",
    "addresses",
    "yet",
    "different",
    "types",
    "nat",
    "handles",
    "process",
    "differently",
    "first",
    "static",
    "nat",
    "maps",
    "single",
    "private",
    "ip",
    "address",
    "public",
    "ip",
    "address",
    "mapping",
    "gives",
    "device",
    "private",
    "ip",
    "address",
    "access",
    "public",
    "internet",
    "directions",
    "commonly",
    "used",
    "one",
    "specific",
    "device",
    "private",
    "address",
    "needs",
    "access",
    "public",
    "internet",
    "next",
    "type",
    "nat",
    "dynamic",
    "nan",
    "similar",
    "static",
    "nat",
    "hold",
    "static",
    "allocation",
    "private",
    "ip",
    "address",
    "space",
    "mapped",
    "pool",
    "public",
    "ip",
    "addresses",
    "allocated",
    "randomly",
    "needed",
    "ip",
    "address",
    "longer",
    "needed",
    "ip",
    "address",
    "returned",
    "back",
    "pool",
    "ready",
    "used",
    "another",
    "device",
    "method",
    "commonly",
    "used",
    "multiple",
    "internal",
    "hosts",
    "private",
    "p",
    "addresses",
    "sharing",
    "equal",
    "fewer",
    "amount",
    "public",
    "p",
    "addresses",
    "designed",
    "efficient",
    "use",
    "public",
    "ips",
    "finally",
    "port",
    "address",
    "translation",
    "pat",
    "multiple",
    "private",
    "ip",
    "addresses",
    "translated",
    "using",
    "single",
    "public",
    "ip",
    "address",
    "specific",
    "port",
    "probably",
    "home",
    "router",
    "using",
    "cover",
    "devices",
    "use",
    "home",
    "network",
    "method",
    "uses",
    "ports",
    "help",
    "distinguish",
    "individual",
    "devices",
    "also",
    "method",
    "used",
    "cloudnat",
    "google",
    "cloud",
    "covering",
    "later",
    "lesson",
    "wanted",
    "get",
    "bit",
    "detail",
    "methods",
    "work",
    "starting",
    "static",
    "set",
    "stage",
    "static",
    "going",
    "start",
    "private",
    "network",
    "left",
    "public",
    "ip",
    "space",
    "right",
    "router",
    "device",
    "middle",
    "example",
    "server",
    "left",
    "needs",
    "access",
    "external",
    "services",
    "example",
    "external",
    "service",
    "using",
    "bowtress",
    "service",
    "image",
    "sharing",
    "site",
    "sorts",
    "awesome",
    "bow",
    "ties",
    "server",
    "left",
    "private",
    "private",
    "ip",
    "address",
    "means",
    "address",
    "ip",
    "version",
    "4",
    "private",
    "address",
    "space",
    "meaning",
    "route",
    "packets",
    "public",
    "internet",
    "private",
    "ip",
    "beautress",
    "service",
    "hand",
    "public",
    "ip",
    "address",
    "issue",
    "run",
    "private",
    "address",
    "ca",
    "routed",
    "public",
    "internet",
    "private",
    "public",
    "address",
    "beau",
    "trust",
    "service",
    "ca",
    "directly",
    "communicate",
    "private",
    "address",
    "public",
    "private",
    "addresses",
    "communicate",
    "public",
    "internet",
    "need",
    "translate",
    "private",
    "address",
    "server",
    "left",
    "public",
    "ip",
    "communicate",
    "service",
    "right",
    "vice",
    "versa",
    "device",
    "map",
    "private",
    "ip",
    "public",
    "ip",
    "using",
    "maintaining",
    "nat",
    "table",
    "case",
    "static",
    "nat",
    "nat",
    "device",
    "mapping",
    "private",
    "ip",
    "address",
    "public",
    "ip",
    "address",
    "allocated",
    "device",
    "specified",
    "case",
    "server",
    "marked",
    "order",
    "server",
    "left",
    "communicate",
    "beautress",
    "service",
    "server",
    "generate",
    "packet",
    "normal",
    "source",
    "ip",
    "packet",
    "server",
    "private",
    "ip",
    "address",
    "destination",
    "ip",
    "packet",
    "ip",
    "bowtrust",
    "service",
    "router",
    "middle",
    "default",
    "gateway",
    "destination",
    "ip",
    "packets",
    "destined",
    "anything",
    "local",
    "network",
    "sent",
    "router",
    "see",
    "entry",
    "table",
    "contain",
    "private",
    "p",
    "address",
    "mapped",
    "public",
    "address",
    "case",
    "statically",
    "mapped",
    "one",
    "another",
    "packet",
    "passes",
    "nat",
    "device",
    "source",
    "address",
    "packet",
    "translated",
    "private",
    "address",
    "mapped",
    "public",
    "address",
    "results",
    "new",
    "packet",
    "new",
    "packet",
    "still",
    "beautrest",
    "destination",
    "valid",
    "public",
    "ip",
    "address",
    "source",
    "translation",
    "happens",
    "nat",
    "process",
    "works",
    "similar",
    "way",
    "direction",
    "beautress",
    "service",
    "receives",
    "packet",
    "sees",
    "source",
    "public",
    "ip",
    "responds",
    "data",
    "packet",
    "ip",
    "address",
    "source",
    "previous",
    "server",
    "public",
    "ip",
    "address",
    "destination",
    "sends",
    "packet",
    "back",
    "public",
    "ip",
    "packet",
    "arrives",
    "nat",
    "device",
    "table",
    "checked",
    "recognizes",
    "ip",
    "server",
    "time",
    "incoming",
    "traffic",
    "destination",
    "ip",
    "address",
    "updated",
    "corresponding",
    "private",
    "ip",
    "address",
    "packet",
    "forwarded",
    "private",
    "server",
    "static",
    "nat",
    "works",
    "source",
    "p",
    "address",
    "translated",
    "mapped",
    "private",
    "ip",
    "public",
    "ip",
    "incoming",
    "traffic",
    "destination",
    "p",
    "address",
    "translated",
    "allocated",
    "public",
    "ip",
    "corresponding",
    "private",
    "ip",
    "without",
    "configure",
    "public",
    "ip",
    "private",
    "device",
    "always",
    "hold",
    "private",
    "ip",
    "addresses",
    "wanted",
    "supply",
    "analogy",
    "nat",
    "common",
    "analogy",
    "used",
    "phone",
    "service",
    "example",
    "laura",
    "new",
    "manager",
    "bow",
    "tie",
    "inc",
    "new",
    "location",
    "montreal",
    "put",
    "new",
    "public",
    "phone",
    "number",
    "although",
    "see",
    "laura",
    "also",
    "private",
    "extension",
    "one",
    "three",
    "three",
    "seven",
    "george",
    "called",
    "laura",
    "public",
    "phone",
    "number",
    "would",
    "reach",
    "laura",
    "without",
    "ever",
    "knowing",
    "private",
    "extension",
    "private",
    "extension",
    "acts",
    "private",
    "ip",
    "address",
    "public",
    "phone",
    "number",
    "would",
    "act",
    "public",
    "ip",
    "address",
    "would",
    "telephone",
    "analogy",
    "static",
    "nat",
    "end",
    "part",
    "one",
    "lesson",
    "getting",
    "bit",
    "long",
    "decided",
    "break",
    "would",
    "great",
    "opportunity",
    "get",
    "stretch",
    "get",
    "coffee",
    "tea",
    "whenever",
    "ready",
    "join",
    "part",
    "two",
    "starting",
    "immediately",
    "end",
    "part",
    "one",
    "go",
    "ahead",
    "complete",
    "video",
    "see",
    "part",
    "two",
    "music",
    "welcome",
    "back",
    "part",
    "two",
    "network",
    "address",
    "translation",
    "lesson",
    "starting",
    "exactly",
    "left",
    "part",
    "said",
    "let",
    "dive",
    "moving",
    "dynamic",
    "nat",
    "method",
    "similar",
    "static",
    "nat",
    "except",
    "devices",
    "allocated",
    "permanent",
    "public",
    "ip",
    "public",
    "ip",
    "address",
    "allocated",
    "pool",
    "ip",
    "addresses",
    "needed",
    "mapping",
    "public",
    "private",
    "allocation",
    "base",
    "example",
    "two",
    "devices",
    "left",
    "according",
    "nat",
    "table",
    "two",
    "public",
    "ip",
    "addresses",
    "available",
    "use",
    "laptop",
    "left",
    "looking",
    "access",
    "beautress",
    "service",
    "generate",
    "packet",
    "source",
    "ip",
    "private",
    "address",
    "destination",
    "ip",
    "sends",
    "packet",
    "router",
    "middle",
    "default",
    "gateway",
    "anything",
    "local",
    "packet",
    "passes",
    "router",
    "nat",
    "device",
    "checks",
    "private",
    "ip",
    "current",
    "allocation",
    "public",
    "addressing",
    "pool",
    "one",
    "available",
    "allocates",
    "one",
    "dynamically",
    "case",
    "allocated",
    "packet",
    "source",
    "p",
    "address",
    "translated",
    "address",
    "packets",
    "sent",
    "beautress",
    "service",
    "process",
    "static",
    "thus",
    "far",
    "dynamic",
    "nat",
    "allocates",
    "ip",
    "addresses",
    "dynamically",
    "multiple",
    "private",
    "devices",
    "share",
    "single",
    "public",
    "ip",
    "long",
    "devices",
    "using",
    "public",
    "ip",
    "time",
    "device",
    "finished",
    "communication",
    "ip",
    "returned",
    "back",
    "pool",
    "ready",
    "use",
    "another",
    "device",
    "note",
    "public",
    "ip",
    "addresses",
    "available",
    "router",
    "rejects",
    "new",
    "connections",
    "clear",
    "nat",
    "mappings",
    "many",
    "public",
    "ip",
    "addresses",
    "hosts",
    "network",
    "wo",
    "encounter",
    "problem",
    "case",
    "since",
    "lower",
    "server",
    "looking",
    "access",
    "fashion",
    "tube",
    "service",
    "available",
    "public",
    "ip",
    "address",
    "pool",
    "thus",
    "giving",
    "access",
    "public",
    "internet",
    "access",
    "fashion",
    "tube",
    "summary",
    "nat",
    "device",
    "maps",
    "private",
    "ip",
    "public",
    "ip",
    "nat",
    "table",
    "public",
    "ips",
    "allocated",
    "randomly",
    "dynamically",
    "pool",
    "type",
    "knot",
    "used",
    "multiple",
    "internal",
    "hosts",
    "private",
    "ip",
    "addresses",
    "sharing",
    "equal",
    "fewer",
    "amount",
    "public",
    "ip",
    "addresses",
    "private",
    "devices",
    "time",
    "need",
    "public",
    "access",
    "example",
    "dynamic",
    "nat",
    "using",
    "telephone",
    "analogy",
    "would",
    "laura",
    "two",
    "bow",
    "tie",
    "inc",
    "employees",
    "lisa",
    "jane",
    "private",
    "phone",
    "numbers",
    "would",
    "represent",
    "private",
    "ips",
    "example",
    "bowtie",
    "inc",
    "three",
    "public",
    "phone",
    "numbers",
    "employee",
    "makes",
    "outbound",
    "call",
    "routed",
    "whichever",
    "public",
    "line",
    "open",
    "time",
    "caller",
    "id",
    "receiver",
    "end",
    "would",
    "show",
    "one",
    "three",
    "public",
    "phone",
    "numbers",
    "depending",
    "one",
    "given",
    "caller",
    "would",
    "represent",
    "public",
    "ips",
    "public",
    "ip",
    "pool",
    "last",
    "type",
    "nat",
    "wanted",
    "talk",
    "one",
    "probably",
    "familiar",
    "port",
    "address",
    "translation",
    "also",
    "known",
    "overload",
    "type",
    "likely",
    "use",
    "home",
    "network",
    "port",
    "address",
    "translation",
    "allows",
    "large",
    "number",
    "private",
    "devices",
    "share",
    "one",
    "public",
    "ip",
    "address",
    "giving",
    "many",
    "one",
    "mapping",
    "architecture",
    "example",
    "using",
    "three",
    "private",
    "devices",
    "left",
    "wanting",
    "access",
    "fashiontube",
    "right",
    "popular",
    "video",
    "sharing",
    "website",
    "latest",
    "men",
    "fashions",
    "shared",
    "millions",
    "across",
    "globe",
    "site",
    "public",
    "ip",
    "accessed",
    "using",
    "tcp",
    "port",
    "443",
    "way",
    "port",
    "address",
    "translation",
    "pat",
    "works",
    "use",
    "ip",
    "addresses",
    "ports",
    "allow",
    "multiple",
    "devices",
    "share",
    "public",
    "ip",
    "every",
    "tcp",
    "connection",
    "addition",
    "source",
    "destination",
    "ip",
    "address",
    "source",
    "destination",
    "port",
    "source",
    "port",
    "randomly",
    "assigned",
    "client",
    "long",
    "source",
    "port",
    "always",
    "unique",
    "many",
    "private",
    "clients",
    "use",
    "public",
    "ip",
    "address",
    "information",
    "recorded",
    "nat",
    "table",
    "nat",
    "device",
    "example",
    "let",
    "assume",
    "public",
    "ip",
    "address",
    "nat",
    "device",
    "laptop",
    "top",
    "left",
    "generates",
    "packet",
    "packet",
    "going",
    "fashion",
    "tube",
    "destination",
    "ip",
    "address",
    "destination",
    "port",
    "source",
    "ip",
    "packet",
    "laptop",
    "private",
    "ip",
    "address",
    "source",
    "port",
    "35535",
    "randomly",
    "assigned",
    "ephemeral",
    "port",
    "packet",
    "routed",
    "nat",
    "device",
    "transit",
    "nat",
    "device",
    "records",
    "source",
    "ip",
    "original",
    "source",
    "private",
    "port",
    "allocates",
    "new",
    "public",
    "ip",
    "address",
    "new",
    "public",
    "source",
    "port",
    "case",
    "8844",
    "records",
    "information",
    "inside",
    "table",
    "shown",
    "adjusts",
    "pocket",
    "source",
    "ip",
    "address",
    "public",
    "ip",
    "address",
    "nat",
    "device",
    "using",
    "source",
    "port",
    "newly",
    "allocated",
    "source",
    "port",
    "newly",
    "adjusted",
    "packet",
    "forwarded",
    "fashiontube",
    "process",
    "similar",
    "return",
    "traffic",
    "packet",
    "verify",
    "recorded",
    "ips",
    "ports",
    "nat",
    "table",
    "forwarding",
    "packet",
    "back",
    "originating",
    "source",
    "middle",
    "laptop",
    "ip",
    "thing",
    "process",
    "would",
    "followed",
    "information",
    "would",
    "recorded",
    "nat",
    "table",
    "new",
    "public",
    "source",
    "port",
    "would",
    "allocated",
    "would",
    "translate",
    "packet",
    "adjusting",
    "packet",
    "source",
    "ip",
    "address",
    "source",
    "port",
    "well",
    "process",
    "would",
    "happen",
    "laptop",
    "bottom",
    "generating",
    "packet",
    "source",
    "destination",
    "ip",
    "addition",
    "source",
    "destination",
    "ports",
    "routed",
    "nat",
    "device",
    "goes",
    "translation",
    "recording",
    "information",
    "nat",
    "table",
    "reaching",
    "destination",
    "return",
    "traffic",
    "verified",
    "recorded",
    "ips",
    "ports",
    "nat",
    "table",
    "forwarding",
    "packet",
    "back",
    "originating",
    "source",
    "summary",
    "comes",
    "port",
    "address",
    "translation",
    "nat",
    "device",
    "records",
    "source",
    "ip",
    "source",
    "port",
    "nat",
    "table",
    "source",
    "ip",
    "replaced",
    "public",
    "ip",
    "public",
    "source",
    "port",
    "allocated",
    "pool",
    "allows",
    "overloading",
    "architecture",
    "telephone",
    "analogy",
    "pat",
    "let",
    "use",
    "phone",
    "operator",
    "example",
    "instance",
    "george",
    "trying",
    "call",
    "laura",
    "george",
    "knows",
    "lark",
    "laura",
    "executive",
    "admin",
    "lark",
    "phone",
    "number",
    "george",
    "laura",
    "private",
    "line",
    "lark",
    "public",
    "phone",
    "number",
    "equivalent",
    "public",
    "ip",
    "address",
    "george",
    "calls",
    "lark",
    "connects",
    "george",
    "laura",
    "caveat",
    "lark",
    "never",
    "gives",
    "laura",
    "phone",
    "number",
    "fact",
    "laura",
    "public",
    "phone",
    "number",
    "called",
    "lark",
    "nat",
    "add",
    "extra",
    "layer",
    "security",
    "allowing",
    "needed",
    "ports",
    "accessed",
    "without",
    "allowing",
    "anyone",
    "connect",
    "port",
    "hope",
    "helped",
    "understand",
    "process",
    "network",
    "address",
    "translation",
    "translation",
    "happens",
    "process",
    "using",
    "nat",
    "table",
    "achieve",
    "packet",
    "translation",
    "along",
    "destination",
    "common",
    "environments",
    "encounter",
    "important",
    "fully",
    "understand",
    "different",
    "types",
    "used",
    "types",
    "environments",
    "pretty",
    "much",
    "wanted",
    "cover",
    "lesson",
    "network",
    "address",
    "translation",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "covered",
    "fundamentals",
    "dns",
    "along",
    "different",
    "record",
    "types",
    "wanted",
    "focus",
    "google",
    "cloud",
    "dns",
    "service",
    "called",
    "cloud",
    "dns",
    "cloud",
    "dns",
    "fully",
    "managed",
    "service",
    "manages",
    "dns",
    "servers",
    "specific",
    "zones",
    "since",
    "cloud",
    "dns",
    "shows",
    "exam",
    "high",
    "level",
    "giving",
    "overview",
    "service",
    "said",
    "let",
    "dive",
    "cloud",
    "dns",
    "acts",
    "authoritative",
    "dns",
    "server",
    "public",
    "zones",
    "visible",
    "internet",
    "private",
    "zones",
    "visible",
    "within",
    "network",
    "commonly",
    "referred",
    "google",
    "dns",
    "service",
    "cloud",
    "dns",
    "servers",
    "span",
    "globe",
    "making",
    "globally",
    "resilient",
    "service",
    "global",
    "service",
    "way",
    "select",
    "specific",
    "regions",
    "deploy",
    "zones",
    "dns",
    "server",
    "policies",
    "simply",
    "add",
    "zones",
    "records",
    "policies",
    "distributed",
    "amongst",
    "google",
    "dns",
    "servers",
    "across",
    "globe",
    "cloud",
    "dns",
    "also",
    "one",
    "google",
    "cloud",
    "services",
    "offers",
    "100",
    "availability",
    "along",
    "low",
    "latency",
    "access",
    "leveraging",
    "google",
    "massive",
    "global",
    "network",
    "backbone",
    "order",
    "use",
    "cloud",
    "dns",
    "specific",
    "publicly",
    "available",
    "domain",
    "domain",
    "name",
    "must",
    "purchased",
    "domain",
    "name",
    "registrar",
    "register",
    "domain",
    "name",
    "google",
    "domains",
    "another",
    "domain",
    "registrar",
    "choice",
    "cloud",
    "dns",
    "provide",
    "service",
    "note",
    "create",
    "private",
    "zones",
    "purchasing",
    "domain",
    "name",
    "necessary",
    "stated",
    "earlier",
    "cloud",
    "dns",
    "offers",
    "flexibility",
    "hosting",
    "public",
    "zones",
    "privately",
    "managed",
    "dns",
    "zones",
    "public",
    "zones",
    "zones",
    "visible",
    "public",
    "internet",
    "cloud",
    "dns",
    "managing",
    "public",
    "domain",
    "public",
    "authoritative",
    "name",
    "servers",
    "respond",
    "public",
    "zone",
    "dns",
    "queries",
    "specific",
    "domain",
    "comes",
    "private",
    "zones",
    "enable",
    "manage",
    "custom",
    "domain",
    "names",
    "google",
    "cloud",
    "resources",
    "without",
    "exposing",
    "dns",
    "data",
    "public",
    "internet",
    "private",
    "zone",
    "queried",
    "resources",
    "project",
    "defined",
    "discussed",
    "earlier",
    "zone",
    "container",
    "dns",
    "records",
    "queried",
    "dns",
    "private",
    "zone",
    "perspective",
    "queried",
    "one",
    "vpc",
    "networks",
    "authorize",
    "note",
    "vpc",
    "networks",
    "authorize",
    "must",
    "located",
    "project",
    "private",
    "zone",
    "query",
    "records",
    "hosted",
    "manage",
    "private",
    "zones",
    "projects",
    "use",
    "dns",
    "peering",
    "needed",
    "want",
    "get",
    "deep",
    "dns",
    "peering",
    "know",
    "vpc",
    "network",
    "peering",
    "required",
    "cloud",
    "dns",
    "peering",
    "zone",
    "operate",
    "peering",
    "zones",
    "depend",
    "vpc",
    "network",
    "peering",
    "managed",
    "zone",
    "create",
    "associated",
    "google",
    "cloud",
    "project",
    "zone",
    "created",
    "hosted",
    "google",
    "managed",
    "name",
    "servers",
    "zones",
    "always",
    "hosted",
    "google",
    "manage",
    "name",
    "servers",
    "within",
    "google",
    "cloud",
    "would",
    "create",
    "records",
    "record",
    "sets",
    "servers",
    "would",
    "become",
    "allocated",
    "specific",
    "zone",
    "hosting",
    "records",
    "record",
    "sets",
    "quick",
    "reminder",
    "record",
    "set",
    "collection",
    "dns",
    "records",
    "zone",
    "name",
    "type",
    "records",
    "contain",
    "single",
    "record",
    "uncommon",
    "see",
    "record",
    "sets",
    "great",
    "example",
    "records",
    "ns",
    "records",
    "discussed",
    "earlier",
    "records",
    "usually",
    "found",
    "pairs",
    "give",
    "practical",
    "example",
    "cloud",
    "dns",
    "wanted",
    "bring",
    "theory",
    "practice",
    "short",
    "demo",
    "creating",
    "managed",
    "private",
    "zone",
    "whenever",
    "ready",
    "join",
    "console",
    "back",
    "console",
    "logged",
    "tonybowties",
    "currently",
    "project",
    "bowtie",
    "inc",
    "get",
    "cloud",
    "dns",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "scroll",
    "network",
    "services",
    "go",
    "cloud",
    "dns",
    "currently",
    "zones",
    "prompted",
    "one",
    "option",
    "create",
    "zone",
    "going",
    "go",
    "ahead",
    "create",
    "zone",
    "prompted",
    "bunch",
    "different",
    "options",
    "order",
    "create",
    "dns",
    "zone",
    "first",
    "option",
    "zone",
    "type",
    "creating",
    "private",
    "zone",
    "going",
    "simply",
    "click",
    "private",
    "need",
    "provide",
    "zone",
    "name",
    "going",
    "call",
    "tony",
    "bowtie",
    "next",
    "going",
    "provide",
    "dns",
    "name",
    "call",
    "tony",
    "bowtie",
    "dot",
    "private",
    "description",
    "going",
    "type",
    "private",
    "zone",
    "tony",
    "bowtie",
    "next",
    "field",
    "given",
    "options",
    "field",
    "currently",
    "marked",
    "default",
    "private",
    "go",
    "right",
    "hand",
    "side",
    "open",
    "drop",
    "menu",
    "given",
    "options",
    "forward",
    "queries",
    "another",
    "server",
    "dns",
    "peering",
    "manage",
    "reverse",
    "lookup",
    "zones",
    "use",
    "service",
    "directory",
    "namespace",
    "depending",
    "type",
    "scenario",
    "one",
    "five",
    "options",
    "cases",
    "suffice",
    "going",
    "keep",
    "default",
    "private",
    "networks",
    "says",
    "private",
    "zone",
    "visible",
    "selected",
    "networks",
    "going",
    "click",
    "drop",
    "giving",
    "option",
    "default",
    "network",
    "network",
    "going",
    "select",
    "going",
    "click",
    "white",
    "space",
    "feel",
    "inclined",
    "simply",
    "click",
    "shortcut",
    "command",
    "line",
    "given",
    "specific",
    "commands",
    "use",
    "command",
    "line",
    "order",
    "create",
    "dns",
    "zone",
    "going",
    "click",
    "close",
    "going",
    "click",
    "create",
    "see",
    "zone",
    "created",
    "along",
    "couple",
    "dns",
    "records",
    "first",
    "one",
    "name",
    "server",
    "records",
    "well",
    "start",
    "authority",
    "records",
    "note",
    "know",
    "exam",
    "creating",
    "zone",
    "two",
    "records",
    "always",
    "created",
    "soa",
    "record",
    "ns",
    "record",
    "moving",
    "options",
    "add",
    "another",
    "record",
    "set",
    "choose",
    "dns",
    "name",
    "record",
    "type",
    "whole",
    "slew",
    "record",
    "types",
    "choose",
    "ttl",
    "ip",
    "address",
    "going",
    "add",
    "records",
    "going",
    "cancel",
    "clicking",
    "use",
    "view",
    "vpc",
    "network",
    "using",
    "zone",
    "expected",
    "default",
    "network",
    "shows",
    "also",
    "choice",
    "adding",
    "another",
    "network",
    "since",
    "networks",
    "ca",
    "add",
    "anything",
    "going",
    "simply",
    "cancel",
    "also",
    "option",
    "removing",
    "networks",
    "click",
    "remove",
    "network",
    "also",
    "remove",
    "network",
    "clicking",
    "hamburger",
    "menu",
    "see",
    "slew",
    "options",
    "choose",
    "creating",
    "zones",
    "record",
    "sets",
    "covers",
    "everything",
    "wanted",
    "show",
    "cloud",
    "dns",
    "go",
    "going",
    "go",
    "ahead",
    "clean",
    "going",
    "click",
    "garbage",
    "right",
    "hand",
    "side",
    "zone",
    "going",
    "prompted",
    "want",
    "delete",
    "zone",
    "yes",
    "going",
    "click",
    "delete",
    "pretty",
    "much",
    "covers",
    "everything",
    "wanted",
    "show",
    "regards",
    "cloud",
    "dns",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "step",
    "compute",
    "engine",
    "section",
    "course",
    "wanted",
    "cover",
    "basic",
    "foundation",
    "makes",
    "vms",
    "possible",
    "basic",
    "understanding",
    "virtualization",
    "comes",
    "play",
    "merely",
    "introductory",
    "lesson",
    "virtualization",
    "wo",
    "getting",
    "deep",
    "underpinnings",
    "serves",
    "basic",
    "foundation",
    "compute",
    "engine",
    "gets",
    "features",
    "hood",
    "possible",
    "use",
    "virtualization",
    "understanding",
    "virtualization",
    "including",
    "links",
    "lesson",
    "text",
    "looking",
    "learn",
    "provide",
    "enough",
    "theory",
    "help",
    "understand",
    "compute",
    "engine",
    "works",
    "said",
    "let",
    "dive",
    "exactly",
    "virtualization",
    "well",
    "virtualization",
    "process",
    "running",
    "multiple",
    "operating",
    "systems",
    "server",
    "simultaneously",
    "virtualization",
    "became",
    "popular",
    "standard",
    "model",
    "used",
    "operating",
    "system",
    "would",
    "installed",
    "server",
    "server",
    "would",
    "consist",
    "typical",
    "hardware",
    "like",
    "cpu",
    "memory",
    "network",
    "cards",
    "devices",
    "video",
    "cards",
    "usb",
    "devices",
    "storage",
    "operating",
    "system",
    "would",
    "run",
    "top",
    "hardware",
    "middle",
    "layer",
    "operating",
    "system",
    "supervisor",
    "responsible",
    "interacting",
    "underlying",
    "hardware",
    "known",
    "kernel",
    "kernel",
    "manages",
    "distribution",
    "hardware",
    "resources",
    "computer",
    "efficiently",
    "fairly",
    "among",
    "various",
    "processes",
    "running",
    "computer",
    "kernel",
    "operates",
    "called",
    "kernel",
    "mode",
    "privilege",
    "mode",
    "runs",
    "privileged",
    "instructions",
    "interacts",
    "hardware",
    "directly",
    "operating",
    "system",
    "allows",
    "software",
    "run",
    "top",
    "like",
    "application",
    "interact",
    "directly",
    "hardware",
    "must",
    "interact",
    "operating",
    "system",
    "user",
    "mode",
    "mode",
    "lark",
    "decides",
    "something",
    "application",
    "needs",
    "use",
    "system",
    "hardware",
    "application",
    "needs",
    "go",
    "operating",
    "system",
    "needs",
    "make",
    "known",
    "system",
    "call",
    "model",
    "running",
    "one",
    "operating",
    "system",
    "single",
    "server",
    "passed",
    "servers",
    "would",
    "traditionally",
    "run",
    "one",
    "application",
    "one",
    "server",
    "one",
    "operating",
    "system",
    "old",
    "system",
    "number",
    "servers",
    "would",
    "continue",
    "mount",
    "since",
    "every",
    "new",
    "application",
    "required",
    "server",
    "operating",
    "system",
    "result",
    "expensive",
    "hardware",
    "resources",
    "purchased",
    "used",
    "server",
    "would",
    "use",
    "approximately",
    "20",
    "resources",
    "average",
    "server",
    "resources",
    "known",
    "underutilized",
    "came",
    "time",
    "multiple",
    "operating",
    "systems",
    "installed",
    "one",
    "computer",
    "isolated",
    "operating",
    "system",
    "running",
    "applications",
    "perfect",
    "model",
    "consolidate",
    "hardware",
    "keep",
    "utilization",
    "high",
    "major",
    "issue",
    "arose",
    "cpu",
    "given",
    "moment",
    "time",
    "could",
    "one",
    "thing",
    "running",
    "privileged",
    "multiple",
    "operating",
    "systems",
    "running",
    "unmodified",
    "state",
    "expecting",
    "running",
    "privileged",
    "state",
    "running",
    "privileged",
    "instructions",
    "causing",
    "instability",
    "systems",
    "causing",
    "application",
    "crashes",
    "system",
    "crashes",
    "hypervisor",
    "solved",
    "problem",
    "small",
    "software",
    "layer",
    "enables",
    "multiple",
    "operating",
    "systems",
    "run",
    "alongside",
    "sharing",
    "physical",
    "computing",
    "resources",
    "operating",
    "systems",
    "come",
    "virtual",
    "machines",
    "vms",
    "files",
    "mimic",
    "entire",
    "computing",
    "hardware",
    "environment",
    "software",
    "hypervisor",
    "also",
    "known",
    "virtual",
    "machine",
    "monitor",
    "vmm",
    "manages",
    "vms",
    "run",
    "alongside",
    "separates",
    "virtual",
    "machines",
    "logically",
    "assigning",
    "slice",
    "underlying",
    "computing",
    "cpu",
    "memory",
    "devices",
    "like",
    "graphics",
    "network",
    "storage",
    "prevents",
    "vms",
    "interfering",
    "example",
    "one",
    "operating",
    "system",
    "suffers",
    "crash",
    "security",
    "compromise",
    "others",
    "survive",
    "continue",
    "running",
    "hypervisor",
    "never",
    "efficient",
    "see",
    "went",
    "major",
    "iterations",
    "gave",
    "structure",
    "know",
    "today",
    "initially",
    "virtualization",
    "done",
    "software",
    "refer",
    "host",
    "machine",
    "operating",
    "system",
    "applications",
    "put",
    "logical",
    "containers",
    "known",
    "virtual",
    "machines",
    "guests",
    "operating",
    "system",
    "would",
    "installed",
    "host",
    "included",
    "additional",
    "capabilities",
    "called",
    "hypervisor",
    "allowed",
    "make",
    "necessary",
    "privileged",
    "calls",
    "hardware",
    "full",
    "access",
    "host",
    "hypervisor",
    "exposed",
    "interface",
    "hardware",
    "device",
    "available",
    "host",
    "allowed",
    "mapped",
    "virtual",
    "machine",
    "emulated",
    "behavior",
    "device",
    "allowed",
    "virtual",
    "machine",
    "using",
    "operating",
    "system",
    "drivers",
    "designed",
    "interact",
    "emulated",
    "device",
    "without",
    "installing",
    "special",
    "drivers",
    "tools",
    "well",
    "keeping",
    "operating",
    "system",
    "unmodified",
    "problem",
    "emulated",
    "every",
    "time",
    "virtual",
    "machines",
    "made",
    "calls",
    "back",
    "host",
    "instruction",
    "needed",
    "translated",
    "hypervisor",
    "using",
    "called",
    "binary",
    "translation",
    "without",
    "translation",
    "emulation",
    "would",
    "work",
    "would",
    "cause",
    "system",
    "crashes",
    "bringing",
    "virtual",
    "machines",
    "process",
    "problem",
    "process",
    "made",
    "system",
    "painfully",
    "slow",
    "performance",
    "penalty",
    "caused",
    "process",
    "widely",
    "adopted",
    "another",
    "type",
    "virtualization",
    "came",
    "scene",
    "called",
    "para",
    "virtualization",
    "model",
    "modified",
    "guest",
    "operating",
    "system",
    "able",
    "speak",
    "directly",
    "hypervisor",
    "involves",
    "operating",
    "system",
    "kernel",
    "modified",
    "recompiled",
    "installation",
    "onto",
    "virtual",
    "machine",
    "would",
    "allow",
    "operating",
    "system",
    "talk",
    "directly",
    "hypervisor",
    "without",
    "performance",
    "hits",
    "translation",
    "going",
    "like",
    "emulation",
    "para",
    "virtualization",
    "replaces",
    "instructions",
    "virtualized",
    "hyper",
    "calls",
    "communicate",
    "directly",
    "hypervisor",
    "hypercall",
    "based",
    "concept",
    "system",
    "call",
    "privileged",
    "instructions",
    "accept",
    "instead",
    "calling",
    "kernel",
    "directly",
    "calls",
    "hypervisor",
    "due",
    "modification",
    "guest",
    "operating",
    "system",
    "performance",
    "enhanced",
    "modified",
    "guest",
    "operating",
    "system",
    "communicates",
    "directly",
    "hypervisor",
    "emulation",
    "overhead",
    "removed",
    "guest",
    "operating",
    "system",
    "becomes",
    "almost",
    "virtualization",
    "aware",
    "yet",
    "still",
    "process",
    "whereby",
    "software",
    "used",
    "speak",
    "hardware",
    "virtual",
    "machines",
    "could",
    "still",
    "access",
    "hardware",
    "directly",
    "although",
    "things",
    "changed",
    "world",
    "virtualization",
    "physical",
    "hardware",
    "host",
    "became",
    "virtualization",
    "aware",
    "hardware",
    "assisted",
    "virtualization",
    "came",
    "play",
    "hardware",
    "assisted",
    "virtualization",
    "approach",
    "enables",
    "efficient",
    "full",
    "virtualization",
    "using",
    "help",
    "hardware",
    "capabilities",
    "host",
    "cpu",
    "using",
    "model",
    "operating",
    "system",
    "direct",
    "access",
    "resources",
    "without",
    "hypervisor",
    "emulation",
    "operating",
    "system",
    "modification",
    "hardware",
    "becomes",
    "virtualization",
    "aware",
    "cpu",
    "contains",
    "specific",
    "instructions",
    "capabilities",
    "hypervisor",
    "directly",
    "control",
    "configure",
    "support",
    "also",
    "provides",
    "improved",
    "performance",
    "privileged",
    "instructions",
    "virtual",
    "machines",
    "trapped",
    "emulated",
    "hardware",
    "directly",
    "means",
    "operating",
    "system",
    "kernels",
    "longer",
    "need",
    "modified",
    "recompiled",
    "like",
    "para",
    "virtualization",
    "run",
    "time",
    "hypervisor",
    "also",
    "need",
    "involved",
    "extremely",
    "slow",
    "process",
    "binary",
    "translation",
    "one",
    "iteration",
    "wanted",
    "discuss",
    "comes",
    "virtualization",
    "kernel",
    "level",
    "virtualization",
    "instead",
    "using",
    "hypervisor",
    "kernel",
    "level",
    "virtualization",
    "runs",
    "separate",
    "version",
    "linux",
    "kernel",
    "sees",
    "associated",
    "virtual",
    "machine",
    "user",
    "space",
    "process",
    "physical",
    "host",
    "makes",
    "easy",
    "run",
    "multiple",
    "virtual",
    "machines",
    "single",
    "host",
    "device",
    "driver",
    "used",
    "communication",
    "main",
    "linux",
    "kernel",
    "virtual",
    "machine",
    "every",
    "vm",
    "implemented",
    "regular",
    "linux",
    "process",
    "scheduled",
    "standard",
    "linux",
    "scheduler",
    "dedicated",
    "virtual",
    "hardware",
    "like",
    "network",
    "card",
    "graphics",
    "adapter",
    "cpu",
    "memory",
    "disk",
    "hardware",
    "support",
    "cpu",
    "required",
    "virtualization",
    "slightly",
    "modified",
    "emulation",
    "process",
    "used",
    "display",
    "execution",
    "containers",
    "virtual",
    "machines",
    "many",
    "ways",
    "kernel",
    "level",
    "virtualization",
    "specialized",
    "form",
    "server",
    "virtualization",
    "type",
    "virtualization",
    "platform",
    "used",
    "google",
    "cloud",
    "type",
    "virtualization",
    "kernel",
    "acting",
    "hypervisor",
    "enables",
    "specific",
    "feature",
    "called",
    "nested",
    "virtualization",
    "nested",
    "virtualization",
    "made",
    "possible",
    "install",
    "hypervisor",
    "top",
    "already",
    "running",
    "virtual",
    "machine",
    "google",
    "cloud",
    "done",
    "probably",
    "wondering",
    "going",
    "complexities",
    "involved",
    "previous",
    "virtualization",
    "models",
    "makes",
    "scenario",
    "worthwhile",
    "well",
    "using",
    "nested",
    "virtualization",
    "makes",
    "easier",
    "users",
    "move",
    "virtualized",
    "workloads",
    "cloud",
    "without",
    "import",
    "convert",
    "vm",
    "images",
    "essence",
    "eases",
    "use",
    "migrating",
    "cloud",
    "great",
    "use",
    "case",
    "many",
    "would",
    "possible",
    "google",
    "cloud",
    "without",
    "benefit",
    "running",
    "kernel",
    "level",
    "virtualization",
    "advanced",
    "concept",
    "show",
    "exam",
    "wanted",
    "understand",
    "virtualization",
    "high",
    "level",
    "understand",
    "nested",
    "virtualization",
    "within",
    "google",
    "cloud",
    "part",
    "feature",
    "set",
    "compute",
    "engine",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "virtualization",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "earlier",
    "course",
    "discussed",
    "compute",
    "engine",
    "high",
    "level",
    "understand",
    "goal",
    "section",
    "dive",
    "deeper",
    "compute",
    "engine",
    "comes",
    "heavily",
    "exam",
    "want",
    "make",
    "sure",
    "expose",
    "nuances",
    "well",
    "service",
    "offering",
    "google",
    "cloud",
    "looking",
    "solve",
    "general",
    "computing",
    "needs",
    "lesson",
    "specifically",
    "going",
    "makes",
    "instance",
    "different",
    "options",
    "available",
    "creating",
    "instance",
    "said",
    "let",
    "dive",
    "compute",
    "engine",
    "lets",
    "create",
    "run",
    "virtual",
    "machines",
    "known",
    "instances",
    "host",
    "google",
    "infrastructure",
    "compute",
    "engine",
    "google",
    "infrastructure",
    "service",
    "virtual",
    "machine",
    "offering",
    "service",
    "google",
    "takes",
    "care",
    "virtualization",
    "platform",
    "physical",
    "servers",
    "network",
    "storage",
    "along",
    "managing",
    "data",
    "center",
    "instances",
    "available",
    "different",
    "sizes",
    "depending",
    "much",
    "cpu",
    "memory",
    "might",
    "need",
    "well",
    "compute",
    "engine",
    "offers",
    "different",
    "family",
    "types",
    "type",
    "workload",
    "need",
    "instance",
    "charged",
    "second",
    "first",
    "minute",
    "consumption",
    "based",
    "model",
    "well",
    "instances",
    "launched",
    "vpc",
    "network",
    "specific",
    "zone",
    "instances",
    "actually",
    "sit",
    "hosts",
    "zones",
    "given",
    "option",
    "using",
    "host",
    "server",
    "hosting",
    "machine",
    "shared",
    "others",
    "please",
    "note",
    "instance",
    "completely",
    "isolated",
    "one",
    "see",
    "instances",
    "also",
    "given",
    "option",
    "running",
    "instance",
    "sole",
    "tenant",
    "node",
    "whereby",
    "instance",
    "dedicated",
    "hosts",
    "reserved",
    "alone",
    "share",
    "anyone",
    "else",
    "strictly",
    "although",
    "option",
    "may",
    "sound",
    "really",
    "great",
    "come",
    "steep",
    "cost",
    "use",
    "case",
    "requires",
    "use",
    "sole",
    "tenant",
    "node",
    "security",
    "compliance",
    "purposes",
    "recommend",
    "stick",
    "host",
    "launching",
    "instances",
    "usually",
    "common",
    "selection",
    "compute",
    "engine",
    "instances",
    "configured",
    "many",
    "different",
    "ways",
    "allow",
    "flexibility",
    "fulfill",
    "requests",
    "specific",
    "scenario",
    "see",
    "four",
    "different",
    "base",
    "options",
    "comes",
    "configuration",
    "instance",
    "preparing",
    "launch",
    "wanted",
    "take",
    "time",
    "go",
    "bit",
    "detail",
    "context",
    "starting",
    "first",
    "machine",
    "type",
    "covers",
    "vcpu",
    "memory",
    "many",
    "different",
    "predefined",
    "machine",
    "types",
    "covering",
    "great",
    "depth",
    "different",
    "lesson",
    "know",
    "available",
    "different",
    "families",
    "depending",
    "needs",
    "chosen",
    "general",
    "compute",
    "optimize",
    "memory",
    "optimize",
    "machine",
    "types",
    "available",
    "intel",
    "amd",
    "flavors",
    "options",
    "fit",
    "need",
    "option",
    "creating",
    "custom",
    "machine",
    "suit",
    "specific",
    "workload",
    "creating",
    "vm",
    "instance",
    "compute",
    "engine",
    "virtual",
    "cpu",
    "vcpu",
    "implemented",
    "single",
    "hardware",
    "hyper",
    "thread",
    "one",
    "available",
    "cpu",
    "processors",
    "live",
    "host",
    "choosing",
    "amount",
    "vcpus",
    "instance",
    "must",
    "take",
    "consideration",
    "desired",
    "network",
    "throughput",
    "amount",
    "vcpus",
    "determine",
    "throughput",
    "bandwidth",
    "determined",
    "per",
    "vm",
    "instance",
    "per",
    "network",
    "interface",
    "per",
    "ip",
    "address",
    "network",
    "throughput",
    "determined",
    "calculating",
    "2",
    "gigabits",
    "per",
    "second",
    "every",
    "vcpu",
    "instance",
    "looking",
    "greater",
    "network",
    "throughput",
    "may",
    "want",
    "select",
    "instance",
    "vcpus",
    "determined",
    "machine",
    "type",
    "compute",
    "engine",
    "instance",
    "need",
    "provide",
    "image",
    "operating",
    "system",
    "boot",
    "creating",
    "vm",
    "instances",
    "must",
    "use",
    "operating",
    "system",
    "image",
    "create",
    "boot",
    "disks",
    "instances",
    "compute",
    "engine",
    "offers",
    "many",
    "public",
    "images",
    "compatible",
    "linux",
    "windows",
    "operating",
    "systems",
    "operating",
    "system",
    "images",
    "used",
    "create",
    "start",
    "instances",
    "compute",
    "engine",
    "uses",
    "selected",
    "image",
    "create",
    "persistent",
    "boot",
    "disk",
    "instance",
    "default",
    "boot",
    "disk",
    "instance",
    "size",
    "image",
    "selected",
    "use",
    "public",
    "images",
    "additional",
    "cost",
    "please",
    "aware",
    "premium",
    "images",
    "add",
    "additional",
    "cost",
    "instances",
    "moving",
    "custom",
    "images",
    "boot",
    "disk",
    "image",
    "control",
    "access",
    "private",
    "image",
    "custom",
    "images",
    "available",
    "cloud",
    "project",
    "unless",
    "specifically",
    "decide",
    "share",
    "another",
    "project",
    "another",
    "organization",
    "create",
    "custom",
    "image",
    "boot",
    "disks",
    "images",
    "use",
    "custom",
    "image",
    "create",
    "instance",
    "custom",
    "images",
    "import",
    "compute",
    "engine",
    "add",
    "cost",
    "instances",
    "incur",
    "image",
    "storage",
    "charge",
    "keep",
    "custom",
    "image",
    "project",
    "third",
    "option",
    "using",
    "marketplace",
    "image",
    "google",
    "cloud",
    "marketplace",
    "lets",
    "quickly",
    "deploy",
    "functional",
    "software",
    "packages",
    "run",
    "google",
    "cloud",
    "start",
    "software",
    "package",
    "without",
    "manually",
    "configure",
    "software",
    "vm",
    "instances",
    "storage",
    "even",
    "network",
    "settings",
    "instance",
    "template",
    "includes",
    "operating",
    "system",
    "software",
    "deploy",
    "software",
    "package",
    "whenever",
    "like",
    "far",
    "easiest",
    "way",
    "launch",
    "software",
    "package",
    "giving",
    "run",
    "marketplace",
    "images",
    "later",
    "demo",
    "decided",
    "machine",
    "type",
    "well",
    "type",
    "image",
    "wanted",
    "use",
    "moving",
    "type",
    "storage",
    "want",
    "would",
    "next",
    "step",
    "configuring",
    "new",
    "instance",
    "need",
    "create",
    "new",
    "boot",
    "disk",
    "performance",
    "versus",
    "cost",
    "comes",
    "play",
    "option",
    "pay",
    "less",
    "slower",
    "disk",
    "speed",
    "lower",
    "iops",
    "choose",
    "fast",
    "disk",
    "speed",
    "higher",
    "iops",
    "pay",
    "higher",
    "cost",
    "slowest",
    "inexpensive",
    "options",
    "standard",
    "persistent",
    "disk",
    "backed",
    "standard",
    "hard",
    "disk",
    "drives",
    "balance",
    "persistent",
    "disks",
    "backed",
    "solid",
    "state",
    "drives",
    "faster",
    "provide",
    "higher",
    "iops",
    "standard",
    "option",
    "lastly",
    "ssd",
    "fastest",
    "option",
    "also",
    "brings",
    "highest",
    "iops",
    "available",
    "persistent",
    "disks",
    "outside",
    "three",
    "options",
    "persistent",
    "disks",
    "also",
    "option",
    "choosing",
    "local",
    "ssd",
    "solid",
    "state",
    "drives",
    "physically",
    "attached",
    "server",
    "hosts",
    "vm",
    "instances",
    "highest",
    "throughput",
    "lowest",
    "latency",
    "available",
    "persistent",
    "disks",
    "note",
    "data",
    "store",
    "local",
    "ssd",
    "persists",
    "instance",
    "stopped",
    "deleted",
    "local",
    "ssds",
    "suited",
    "temporary",
    "storage",
    "caches",
    "swap",
    "disk",
    "lastly",
    "moving",
    "networking",
    "network",
    "interface",
    "compute",
    "engine",
    "instance",
    "associated",
    "subnet",
    "unique",
    "vpc",
    "network",
    "seen",
    "last",
    "section",
    "auto",
    "default",
    "custom",
    "network",
    "network",
    "available",
    "many",
    "different",
    "regions",
    "zones",
    "within",
    "region",
    "also",
    "experienced",
    "routing",
    "traffic",
    "instance",
    "vpc",
    "network",
    "use",
    "firewall",
    "rules",
    "targeting",
    "ip",
    "ranges",
    "specific",
    "network",
    "tags",
    "instances",
    "within",
    "network",
    "load",
    "balancers",
    "responsible",
    "helping",
    "distribute",
    "user",
    "traffic",
    "across",
    "multiple",
    "instances",
    "either",
    "within",
    "network",
    "externally",
    "using",
    "regional",
    "global",
    "load",
    "balancer",
    "getting",
    "low",
    "balancing",
    "another",
    "section",
    "course",
    "wanted",
    "stress",
    "load",
    "balancers",
    "part",
    "instance",
    "networking",
    "help",
    "route",
    "manage",
    "traffic",
    "coming",
    "going",
    "network",
    "high",
    "level",
    "overview",
    "different",
    "configuration",
    "types",
    "go",
    "putting",
    "together",
    "instance",
    "diving",
    "deeper",
    "section",
    "well",
    "putting",
    "approach",
    "creating",
    "instance",
    "next",
    "lesson",
    "focusing",
    "different",
    "available",
    "features",
    "use",
    "specific",
    "use",
    "case",
    "wanted",
    "cover",
    "lesson",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "know",
    "previous",
    "demonstrations",
    "built",
    "quite",
    "compute",
    "engine",
    "instances",
    "configured",
    "accordingly",
    "demonstration",
    "going",
    "go",
    "build",
    "another",
    "instance",
    "wanted",
    "dig",
    "deeper",
    "specific",
    "configurations",
    "available",
    "compute",
    "engine",
    "said",
    "let",
    "dive",
    "logged",
    "tony",
    "bowties",
    "well",
    "logged",
    "bowtie",
    "inc",
    "project",
    "order",
    "kick",
    "demo",
    "going",
    "head",
    "compute",
    "engine",
    "console",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "scroll",
    "compute",
    "engine",
    "prompted",
    "either",
    "create",
    "import",
    "vm",
    "instance",
    "well",
    "taking",
    "quick",
    "start",
    "going",
    "import",
    "take",
    "quick",
    "start",
    "going",
    "simply",
    "click",
    "create",
    "want",
    "take",
    "moment",
    "focus",
    "left",
    "hand",
    "menu",
    "bunch",
    "different",
    "options",
    "create",
    "given",
    "instance",
    "first",
    "default",
    "option",
    "allows",
    "create",
    "instance",
    "scratch",
    "choosing",
    "new",
    "vm",
    "instance",
    "template",
    "option",
    "allows",
    "create",
    "new",
    "instance",
    "instance",
    "template",
    "instance",
    "templates",
    "prompted",
    "option",
    "create",
    "one",
    "unfamiliar",
    "instance",
    "templates",
    "templates",
    "used",
    "managed",
    "instance",
    "groups",
    "define",
    "instance",
    "properties",
    "instances",
    "launched",
    "within",
    "managed",
    "instance",
    "group",
    "worry",
    "covering",
    "instance",
    "groups",
    "instant",
    "templates",
    "later",
    "lesson",
    "next",
    "option",
    "available",
    "new",
    "vm",
    "instance",
    "machine",
    "image",
    "image",
    "clone",
    "copy",
    "instance",
    "covering",
    "separate",
    "lesson",
    "going",
    "details",
    "machine",
    "images",
    "machine",
    "images",
    "would",
    "able",
    "create",
    "instance",
    "since",
    "prompted",
    "option",
    "create",
    "new",
    "machine",
    "image",
    "last",
    "option",
    "wanted",
    "show",
    "marketplace",
    "marketplace",
    "existing",
    "machine",
    "images",
    "proper",
    "operating",
    "system",
    "well",
    "software",
    "accompany",
    "instance",
    "looking",
    "create",
    "vm",
    "wordpress",
    "installation",
    "simply",
    "go",
    "top",
    "search",
    "bar",
    "type",
    "wordpress",
    "presented",
    "many",
    "different",
    "options",
    "going",
    "choose",
    "one",
    "top",
    "presented",
    "49",
    "results",
    "virtual",
    "machines",
    "different",
    "types",
    "wordpress",
    "installations",
    "different",
    "instances",
    "configured",
    "specifically",
    "wordpress",
    "different",
    "companies",
    "like",
    "lightspeed",
    "analog",
    "innovation",
    "cognosis",
    "inc",
    "demonstration",
    "going",
    "choose",
    "wordpress",
    "centos",
    "7",
    "giving",
    "overview",
    "software",
    "also",
    "given",
    "information",
    "company",
    "configured",
    "well",
    "top",
    "given",
    "monthly",
    "estimated",
    "cost",
    "specific",
    "instance",
    "scroll",
    "page",
    "get",
    "little",
    "bit",
    "information",
    "regards",
    "image",
    "shown",
    "right",
    "see",
    "pricing",
    "usage",
    "fee",
    "cost",
    "109",
    "month",
    "along",
    "vm",
    "instance",
    "type",
    "software",
    "configured",
    "amount",
    "disk",
    "space",
    "sustained",
    "use",
    "discount",
    "also",
    "given",
    "links",
    "tutorials",
    "documentation",
    "also",
    "given",
    "instructions",
    "maintenance",
    "support",
    "given",
    "email",
    "link",
    "live",
    "support",
    "course",
    "bottom",
    "terms",
    "service",
    "typical",
    "software",
    "package",
    "amongst",
    "many",
    "others",
    "available",
    "google",
    "cloud",
    "marketplace",
    "go",
    "ahead",
    "launch",
    "choose",
    "going",
    "choose",
    "launch",
    "going",
    "back",
    "give",
    "context",
    "regards",
    "enterprise",
    "software",
    "software",
    "packages",
    "like",
    "f5",
    "jenkins",
    "also",
    "available",
    "google",
    "cloud",
    "marketplace",
    "click",
    "first",
    "option",
    "give",
    "bunch",
    "available",
    "options",
    "jenkins",
    "availability",
    "different",
    "companies",
    "different",
    "platforms",
    "note",
    "update",
    "existing",
    "deployment",
    "software",
    "package",
    "redeploy",
    "software",
    "package",
    "marketplace",
    "order",
    "update",
    "caveat",
    "easiest",
    "way",
    "deploy",
    "software",
    "package",
    "definitely",
    "marketplace",
    "gone",
    "different",
    "options",
    "create",
    "instance",
    "gon",
    "na",
    "go",
    "back",
    "select",
    "new",
    "vm",
    "instance",
    "create",
    "new",
    "vm",
    "scratch",
    "prompted",
    "top",
    "note",
    "telling",
    "draft",
    "saved",
    "started",
    "create",
    "new",
    "instance",
    "navigated",
    "away",
    "option",
    "restore",
    "configuration",
    "working",
    "know",
    "midst",
    "creating",
    "instance",
    "google",
    "cloud",
    "automatically",
    "save",
    "draft",
    "build",
    "able",
    "continue",
    "working",
    "later",
    "really",
    "need",
    "draft",
    "hit",
    "restore",
    "name",
    "going",
    "keep",
    "instance",
    "1",
    "sake",
    "demo",
    "going",
    "add",
    "label",
    "key",
    "going",
    "environment",
    "value",
    "testing",
    "going",
    "go",
    "bottom",
    "click",
    "save",
    "comes",
    "geographic",
    "location",
    "instance",
    "using",
    "regions",
    "simply",
    "click",
    "drop",
    "access",
    "deploy",
    "instance",
    "currently",
    "available",
    "region",
    "regions",
    "added",
    "added",
    "well",
    "going",
    "keep",
    "us",
    "east",
    "one",
    "zone",
    "availability",
    "putting",
    "zone",
    "within",
    "region",
    "going",
    "keep",
    "us",
    "east",
    "1b",
    "another",
    "note",
    "deployed",
    "instance",
    "specific",
    "region",
    "able",
    "move",
    "instance",
    "different",
    "region",
    "recreate",
    "using",
    "snapshot",
    "another",
    "region",
    "going",
    "later",
    "lesson",
    "scrolling",
    "machine",
    "configuration",
    "three",
    "different",
    "types",
    "families",
    "choose",
    "comes",
    "machine",
    "types",
    "general",
    "purpose",
    "compute",
    "optimized",
    "memory",
    "optimized",
    "general",
    "purpose",
    "machine",
    "family",
    "great",
    "available",
    "selection",
    "different",
    "series",
    "types",
    "choose",
    "usually",
    "go",
    "machine",
    "family",
    "unsure",
    "machine",
    "type",
    "select",
    "demo",
    "going",
    "keep",
    "selection",
    "series",
    "type",
    "e2",
    "machine",
    "type",
    "given",
    "large",
    "selection",
    "different",
    "sizes",
    "comes",
    "vcpu",
    "memory",
    "select",
    "shared",
    "core",
    "standard",
    "type",
    "high",
    "memory",
    "type",
    "high",
    "cpu",
    "type",
    "going",
    "greater",
    "detail",
    "another",
    "lesson",
    "machine",
    "types",
    "case",
    "predefined",
    "machine",
    "types",
    "fit",
    "needs",
    "scope",
    "amount",
    "vcpus",
    "memory",
    "need",
    "fall",
    "predefined",
    "machine",
    "types",
    "simply",
    "select",
    "custom",
    "option",
    "bring",
    "set",
    "sliders",
    "able",
    "select",
    "amount",
    "vcpus",
    "amount",
    "memory",
    "need",
    "instance",
    "creating",
    "change",
    "course",
    "slider",
    "either",
    "vcpus",
    "less",
    "core",
    "memory",
    "ratio",
    "series",
    "stay",
    "therefore",
    "memory",
    "adjusted",
    "automatically",
    "also",
    "option",
    "change",
    "memory",
    "see",
    "fit",
    "either",
    "add",
    "memory",
    "remove",
    "great",
    "sizes",
    "looking",
    "something",
    "specific",
    "fits",
    "workload",
    "going",
    "change",
    "back",
    "machine",
    "type",
    "e2",
    "micro",
    "see",
    "top",
    "right",
    "find",
    "monthly",
    "estimate",
    "much",
    "instance",
    "cost",
    "click",
    "drop",
    "give",
    "breakdown",
    "cost",
    "vcpu",
    "memory",
    "cost",
    "disks",
    "well",
    "sustained",
    "use",
    "discount",
    "resources",
    "consuming",
    "like",
    "static",
    "ip",
    "extra",
    "attached",
    "disk",
    "costs",
    "would",
    "show",
    "well",
    "went",
    "compute",
    "optimized",
    "see",
    "price",
    "changed",
    "given",
    "breakdown",
    "know",
    "exactly",
    "paying",
    "going",
    "switch",
    "back",
    "general",
    "purpose",
    "wanted",
    "point",
    "cpu",
    "platform",
    "gpu",
    "add",
    "gpus",
    "specific",
    "machine",
    "configuration",
    "another",
    "note",
    "gpus",
    "added",
    "n1",
    "machine",
    "type",
    "type",
    "show",
    "gpu",
    "selection",
    "grayed",
    "add",
    "gpu",
    "type",
    "well",
    "adding",
    "number",
    "gpus",
    "need",
    "sake",
    "demonstration",
    "going",
    "add",
    "gpus",
    "going",
    "select",
    "e2",
    "series",
    "change",
    "back",
    "e2",
    "micro",
    "scrolling",
    "little",
    "bit",
    "comes",
    "cpu",
    "platform",
    "depending",
    "machine",
    "type",
    "choose",
    "intel",
    "amd",
    "looking",
    "specific",
    "cpu",
    "know",
    "configuration",
    "permanent",
    "moving",
    "little",
    "bit",
    "see",
    "display",
    "device",
    "display",
    "device",
    "feature",
    "compute",
    "engine",
    "allows",
    "add",
    "virtual",
    "display",
    "vm",
    "system",
    "management",
    "tools",
    "remote",
    "desktop",
    "software",
    "application",
    "requires",
    "connect",
    "display",
    "device",
    "remote",
    "server",
    "especially",
    "great",
    "feature",
    "server",
    "stuck",
    "boot",
    "patching",
    "hardware",
    "failure",
    "ca",
    "log",
    "drivers",
    "already",
    "included",
    "windows",
    "linux",
    "vms",
    "feature",
    "works",
    "default",
    "vga",
    "driver",
    "right",
    "box",
    "going",
    "keep",
    "checked",
    "need",
    "going",
    "move",
    "confidential",
    "vm",
    "service",
    "confidential",
    "computing",
    "security",
    "feature",
    "encrypt",
    "sensitive",
    "code",
    "data",
    "memory",
    "even",
    "processed",
    "still",
    "encrypted",
    "great",
    "use",
    "case",
    "dealing",
    "sensitive",
    "information",
    "requires",
    "strict",
    "requirements",
    "compute",
    "engine",
    "also",
    "gives",
    "option",
    "deploying",
    "containers",
    "great",
    "way",
    "test",
    "containers",
    "instead",
    "deploying",
    "whole",
    "kubernetes",
    "cluster",
    "may",
    "even",
    "suffice",
    "specific",
    "use",
    "cases",
    "note",
    "deploy",
    "one",
    "container",
    "per",
    "vm",
    "instance",
    "covered",
    "general",
    "configuration",
    "options",
    "compute",
    "engine",
    "wanted",
    "take",
    "minute",
    "dive",
    "options",
    "available",
    "boot",
    "disk",
    "going",
    "go",
    "ahead",
    "click",
    "change",
    "option",
    "choosing",
    "bunch",
    "different",
    "public",
    "images",
    "different",
    "operating",
    "systems",
    "use",
    "boot",
    "disk",
    "wanted",
    "load",
    "ubuntu",
    "simply",
    "select",
    "ubuntu",
    "choose",
    "different",
    "version",
    "available",
    "well",
    "shown",
    "boot",
    "disk",
    "type",
    "currently",
    "selected",
    "standard",
    "persistent",
    "disk",
    "also",
    "option",
    "selecting",
    "either",
    "balanced",
    "persistent",
    "disk",
    "ssd",
    "persistent",
    "disk",
    "going",
    "keep",
    "standard",
    "persistent",
    "disk",
    "wanted",
    "increase",
    "boot",
    "disk",
    "size",
    "wanted",
    "100",
    "gigs",
    "simply",
    "add",
    "select",
    "go",
    "back",
    "top",
    "right",
    "hand",
    "corner",
    "see",
    "price",
    "instance",
    "changed",
    "charged",
    "operating",
    "system",
    "due",
    "open",
    "source",
    "image",
    "charged",
    "standard",
    "persistent",
    "disk",
    "longer",
    "using",
    "10",
    "gigs",
    "using",
    "100",
    "gigabytes",
    "let",
    "say",
    "wanted",
    "go",
    "back",
    "wanted",
    "change",
    "image",
    "windows",
    "image",
    "going",
    "go",
    "windows",
    "server",
    "want",
    "select",
    "windows",
    "server",
    "2016",
    "going",
    "load",
    "data",
    "center",
    "version",
    "going",
    "keep",
    "standard",
    "persistent",
    "disk",
    "along",
    "100",
    "gigabytes",
    "going",
    "select",
    "scroll",
    "back",
    "see",
    "charged",
    "licensing",
    "fee",
    "windows",
    "server",
    "images",
    "licensing",
    "fees",
    "known",
    "premium",
    "images",
    "please",
    "make",
    "sure",
    "aware",
    "licensing",
    "fees",
    "launching",
    "instances",
    "want",
    "save",
    "money",
    "going",
    "scroll",
    "back",
    "boot",
    "disk",
    "change",
    "back",
    "ubuntu",
    "going",
    "change",
    "size",
    "back",
    "10",
    "gigabytes",
    "well",
    "move",
    "wanted",
    "touch",
    "custom",
    "images",
    "custom",
    "images",
    "could",
    "see",
    "would",
    "able",
    "create",
    "instances",
    "custom",
    "images",
    "using",
    "method",
    "also",
    "option",
    "creating",
    "instance",
    "snapshot",
    "nothing",
    "shows",
    "lastly",
    "option",
    "using",
    "existing",
    "disks",
    "let",
    "say",
    "instance",
    "vm",
    "instance",
    "deleted",
    "decided",
    "keep",
    "attached",
    "boot",
    "disk",
    "would",
    "show",
    "unattached",
    "able",
    "attach",
    "new",
    "instance",
    "shown",
    "available",
    "options",
    "comes",
    "boot",
    "disk",
    "going",
    "go",
    "ahead",
    "select",
    "ubuntu",
    "operating",
    "system",
    "move",
    "next",
    "option",
    "identity",
    "api",
    "access",
    "gone",
    "great",
    "depth",
    "previous",
    "demo",
    "well",
    "given",
    "option",
    "create",
    "firewall",
    "rule",
    "automatically",
    "http",
    "https",
    "traffic",
    "networking",
    "covered",
    "great",
    "depth",
    "last",
    "section",
    "skip",
    "part",
    "configuration",
    "simply",
    "launch",
    "default",
    "vpc",
    "quick",
    "note",
    "wanted",
    "remind",
    "bottom",
    "page",
    "find",
    "command",
    "line",
    "shortcut",
    "click",
    "give",
    "gcloud",
    "command",
    "run",
    "use",
    "order",
    "create",
    "instance",
    "want",
    "deploy",
    "going",
    "click",
    "close",
    "going",
    "click",
    "create",
    "going",
    "give",
    "minute",
    "instance",
    "created",
    "took",
    "seconds",
    "instance",
    "created",
    "regarded",
    "inventory",
    "page",
    "view",
    "instance",
    "inventory",
    "look",
    "correlating",
    "information",
    "instances",
    "probably",
    "looks",
    "familiar",
    "previous",
    "instances",
    "launched",
    "name",
    "instance",
    "zone",
    "internal",
    "ip",
    "along",
    "external",
    "ip",
    "selection",
    "connect",
    "instance",
    "well",
    "also",
    "given",
    "option",
    "connect",
    "instance",
    "different",
    "ways",
    "also",
    "option",
    "adding",
    "column",
    "information",
    "inventory",
    "dashboard",
    "regards",
    "instance",
    "simply",
    "clicking",
    "columns",
    "button",
    "right",
    "list",
    "instances",
    "select",
    "creation",
    "time",
    "machine",
    "type",
    "preserve",
    "state",
    "even",
    "network",
    "may",
    "bring",
    "insight",
    "information",
    "available",
    "instance",
    "even",
    "grouping",
    "instances",
    "common",
    "configurations",
    "also",
    "help",
    "identify",
    "instances",
    "visually",
    "console",
    "going",
    "put",
    "columns",
    "back",
    "exactly",
    "want",
    "take",
    "moment",
    "dive",
    "right",
    "instance",
    "look",
    "instance",
    "details",
    "remember",
    "selected",
    "machine",
    "type",
    "e2",
    "micro",
    "two",
    "vcpus",
    "one",
    "gigabyte",
    "memory",
    "instance",
    "id",
    "well",
    "scrolling",
    "cpu",
    "platform",
    "display",
    "device",
    "mentioning",
    "earlier",
    "along",
    "zone",
    "labels",
    "creation",
    "time",
    "well",
    "network",
    "interface",
    "scrolling",
    "see",
    "boot",
    "disk",
    "ubuntu",
    "image",
    "well",
    "name",
    "boot",
    "disk",
    "quite",
    "configurations",
    "click",
    "edit",
    "edit",
    "configurations",
    "fly",
    "configurations",
    "need",
    "stop",
    "instance",
    "editing",
    "configurations",
    "like",
    "network",
    "interface",
    "would",
    "delete",
    "instance",
    "order",
    "recreate",
    "instance",
    "wanted",
    "change",
    "machine",
    "type",
    "need",
    "stop",
    "instance",
    "order",
    "change",
    "thing",
    "goes",
    "display",
    "device",
    "well",
    "network",
    "interface",
    "order",
    "change",
    "current",
    "network",
    "subnetwork",
    "going",
    "stop",
    "instance",
    "order",
    "change",
    "well",
    "hope",
    "general",
    "walkthrough",
    "configuring",
    "instance",
    "given",
    "sense",
    "configured",
    "launch",
    "allowed",
    "gain",
    "insight",
    "editing",
    "features",
    "instance",
    "launch",
    "lot",
    "seen",
    "demo",
    "come",
    "exam",
    "would",
    "recommend",
    "going",
    "exam",
    "spend",
    "time",
    "launching",
    "instances",
    "knowing",
    "exactly",
    "behave",
    "edited",
    "creation",
    "done",
    "fly",
    "edits",
    "need",
    "instance",
    "shut",
    "edits",
    "need",
    "instance",
    "recreated",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "creating",
    "instance",
    "mark",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "going",
    "discussing",
    "compute",
    "engine",
    "machine",
    "types",
    "machine",
    "type",
    "set",
    "virtualized",
    "hardware",
    "resources",
    "available",
    "vm",
    "instance",
    "including",
    "system",
    "memory",
    "size",
    "virtual",
    "cpu",
    "count",
    "persistent",
    "disks",
    "compute",
    "engine",
    "machine",
    "types",
    "grouped",
    "curated",
    "families",
    "different",
    "workloads",
    "must",
    "always",
    "choose",
    "machine",
    "type",
    "create",
    "instance",
    "select",
    "number",
    "machine",
    "types",
    "machine",
    "type",
    "family",
    "machine",
    "types",
    "meet",
    "needs",
    "create",
    "custom",
    "machine",
    "types",
    "lesson",
    "going",
    "different",
    "machine",
    "types",
    "families",
    "use",
    "cases",
    "said",
    "let",
    "dive",
    "machine",
    "type",
    "family",
    "displayed",
    "includes",
    "different",
    "machine",
    "types",
    "family",
    "curated",
    "specific",
    "workload",
    "types",
    "following",
    "primary",
    "machine",
    "types",
    "offered",
    "compute",
    "engine",
    "general",
    "purpose",
    "compute",
    "optimized",
    "memory",
    "optimized",
    "wanted",
    "go",
    "one",
    "families",
    "little",
    "bit",
    "detail",
    "diving",
    "right",
    "defining",
    "type",
    "machine",
    "type",
    "running",
    "overwhelming",
    "broken",
    "understood",
    "bit",
    "better",
    "broken",
    "three",
    "parts",
    "separated",
    "hyphens",
    "first",
    "part",
    "example",
    "shown",
    "series",
    "example",
    "series",
    "e2",
    "number",
    "letter",
    "generation",
    "type",
    "case",
    "would",
    "second",
    "generation",
    "series",
    "come",
    "many",
    "different",
    "varieties",
    "designed",
    "specific",
    "workloads",
    "moving",
    "middle",
    "part",
    "machine",
    "type",
    "actual",
    "type",
    "types",
    "well",
    "come",
    "slew",
    "different",
    "flavors",
    "usually",
    "coupled",
    "specific",
    "series",
    "example",
    "type",
    "standard",
    "moving",
    "third",
    "part",
    "machine",
    "type",
    "amount",
    "vcp",
    "use",
    "machine",
    "type",
    "vcpus",
    "offered",
    "anywhere",
    "one",
    "vcpu",
    "416",
    "vcpus",
    "example",
    "shown",
    "machine",
    "type",
    "32",
    "vcpus",
    "one",
    "aspect",
    "machine",
    "type",
    "gpus",
    "please",
    "note",
    "gpus",
    "available",
    "n1",
    "series",
    "combining",
    "series",
    "type",
    "vcpu",
    "get",
    "machine",
    "type",
    "broken",
    "machine",
    "types",
    "order",
    "properly",
    "define",
    "wanted",
    "get",
    "predefined",
    "machine",
    "type",
    "families",
    "specifically",
    "starting",
    "general",
    "purpose",
    "predefined",
    "machine",
    "type",
    "general",
    "purpose",
    "machine",
    "types",
    "available",
    "standard",
    "type",
    "high",
    "memory",
    "type",
    "high",
    "cpu",
    "type",
    "standard",
    "type",
    "balance",
    "cpu",
    "memory",
    "common",
    "general",
    "purpose",
    "machine",
    "type",
    "general",
    "purpose",
    "also",
    "comes",
    "high",
    "memory",
    "high",
    "memory",
    "cpu",
    "ratio",
    "high",
    "memory",
    "lower",
    "cpu",
    "lastly",
    "high",
    "cpu",
    "machine",
    "type",
    "high",
    "cpu",
    "memory",
    "ratio",
    "would",
    "opposite",
    "high",
    "memory",
    "high",
    "cpu",
    "lower",
    "memory",
    "digging",
    "general",
    "purpose",
    "machine",
    "family",
    "wanted",
    "start",
    "e2",
    "series",
    "designed",
    "computing",
    "low",
    "cost",
    "looking",
    "things",
    "like",
    "web",
    "serving",
    "application",
    "serving",
    "back",
    "office",
    "applications",
    "small",
    "medium",
    "databases",
    "microservices",
    "virtual",
    "desktops",
    "even",
    "development",
    "environments",
    "e2",
    "series",
    "would",
    "serve",
    "purpose",
    "perfectly",
    "e2",
    "machine",
    "types",
    "cost",
    "optimized",
    "machine",
    "types",
    "offer",
    "sizing",
    "2",
    "32",
    "vcpus",
    "half",
    "gigabyte",
    "128",
    "gigabytes",
    "memory",
    "small",
    "medium",
    "workloads",
    "require",
    "many",
    "vcpus",
    "applications",
    "require",
    "local",
    "ssds",
    "gpus",
    "ideal",
    "fit",
    "e2",
    "machines",
    "e2",
    "machine",
    "types",
    "offer",
    "sustained",
    "use",
    "discounts",
    "however",
    "provide",
    "consistently",
    "low",
    "committed",
    "use",
    "pricing",
    "words",
    "offer",
    "lowest",
    "pricing",
    "across",
    "general",
    "purpose",
    "machine",
    "types",
    "well",
    "e2",
    "series",
    "machines",
    "available",
    "custom",
    "machine",
    "types",
    "moving",
    "wanted",
    "touch",
    "machine",
    "types",
    "available",
    "balanced",
    "machine",
    "type",
    "price",
    "performance",
    "across",
    "wide",
    "range",
    "vm",
    "flavors",
    "machines",
    "designed",
    "web",
    "servers",
    "application",
    "servers",
    "back",
    "office",
    "applications",
    "medium",
    "large",
    "databases",
    "well",
    "caching",
    "media",
    "streaming",
    "offered",
    "standard",
    "high",
    "memory",
    "high",
    "cpu",
    "types",
    "n1",
    "machine",
    "types",
    "compute",
    "engines",
    "first",
    "generation",
    "general",
    "purpose",
    "machine",
    "types",
    "machine",
    "type",
    "offers",
    "96",
    "vcpus",
    "624",
    "gigabytes",
    "memory",
    "mentioned",
    "earlier",
    "machine",
    "type",
    "offers",
    "gpu",
    "support",
    "tpu",
    "support",
    "n1",
    "type",
    "available",
    "machine",
    "types",
    "custom",
    "machine",
    "types",
    "n1",
    "series",
    "offers",
    "larger",
    "sustained",
    "use",
    "discount",
    "n2",
    "machine",
    "types",
    "speaking",
    "n2",
    "machine",
    "types",
    "second",
    "generation",
    "general",
    "purpose",
    "machine",
    "types",
    "offer",
    "flexible",
    "sizing",
    "two",
    "280",
    "vcpus",
    "half",
    "gigabyte",
    "memory",
    "640",
    "gigabytes",
    "memory",
    "machine",
    "types",
    "also",
    "offer",
    "overall",
    "performance",
    "improvement",
    "n1",
    "machine",
    "types",
    "workloads",
    "take",
    "advantage",
    "higher",
    "clock",
    "frequency",
    "cpu",
    "good",
    "choice",
    "n2",
    "machine",
    "types",
    "workloads",
    "get",
    "higher",
    "per",
    "thread",
    "performance",
    "benefiting",
    "flexibility",
    "general",
    "purpose",
    "machine",
    "type",
    "offers",
    "two",
    "machine",
    "types",
    "also",
    "offer",
    "extended",
    "memory",
    "feature",
    "helps",
    "control",
    "per",
    "cpu",
    "software",
    "licensing",
    "costs",
    "getting",
    "last",
    "n",
    "series",
    "machine",
    "type",
    "n2d",
    "machine",
    "type",
    "largest",
    "general",
    "purpose",
    "machine",
    "type",
    "224",
    "vcpus",
    "896",
    "gigabytes",
    "memory",
    "machine",
    "type",
    "available",
    "predefined",
    "custom",
    "machine",
    "types",
    "machine",
    "type",
    "well",
    "extended",
    "memory",
    "feature",
    "discussed",
    "earlier",
    "helps",
    "avoid",
    "per",
    "cpu",
    "software",
    "licensing",
    "n2d",
    "machine",
    "type",
    "supports",
    "committed",
    "use",
    "sustain",
    "use",
    "discounts",
    "moving",
    "general",
    "purpose",
    "machine",
    "type",
    "family",
    "wanted",
    "move",
    "compute",
    "optimize",
    "machine",
    "family",
    "series",
    "offers",
    "ultra",
    "high",
    "performance",
    "compute",
    "intensive",
    "workloads",
    "high",
    "performance",
    "computing",
    "electronic",
    "design",
    "automation",
    "gaming",
    "single",
    "threaded",
    "applications",
    "anything",
    "designed",
    "compute",
    "intensive",
    "workloads",
    "definitely",
    "best",
    "choice",
    "compute",
    "engine",
    "optimized",
    "machine",
    "types",
    "ideal",
    "said",
    "earlier",
    "compute",
    "intensive",
    "workloads",
    "machine",
    "types",
    "offer",
    "highest",
    "performance",
    "per",
    "core",
    "compute",
    "engine",
    "compute",
    "optimized",
    "types",
    "available",
    "predefined",
    "machine",
    "types",
    "available",
    "custom",
    "machine",
    "types",
    "c2",
    "machine",
    "types",
    "offer",
    "maximum",
    "60",
    "vcpus",
    "maximum",
    "240",
    "gigabytes",
    "memory",
    "although",
    "c2",
    "machine",
    "type",
    "works",
    "great",
    "compute",
    "intensive",
    "workloads",
    "come",
    "caveats",
    "use",
    "regional",
    "persistent",
    "disks",
    "compute",
    "optimized",
    "machine",
    "types",
    "getting",
    "details",
    "persistent",
    "disks",
    "later",
    "lesson",
    "available",
    "select",
    "zones",
    "regions",
    "select",
    "cpu",
    "platforms",
    "moving",
    "last",
    "family",
    "memory",
    "optimize",
    "machine",
    "family",
    "ultra",
    "high",
    "memory",
    "workloads",
    "family",
    "designed",
    "large",
    "memory",
    "databases",
    "like",
    "sap",
    "hana",
    "well",
    "memory",
    "analytics",
    "series",
    "comes",
    "two",
    "separate",
    "generations",
    "m1",
    "m2",
    "m1",
    "offering",
    "maximum",
    "160",
    "vcpus",
    "maximum",
    "memory",
    "3844",
    "gigabytes",
    "whereas",
    "m2",
    "offering",
    "maximum",
    "160",
    "vcpus",
    "offering",
    "whopping",
    "11",
    "776",
    "gigabytes",
    "maximum",
    "memory",
    "said",
    "machine",
    "types",
    "ideal",
    "tasks",
    "require",
    "intensive",
    "use",
    "memory",
    "suited",
    "databases",
    "memory",
    "analytics",
    "data",
    "warehousing",
    "workloads",
    "genomics",
    "analysis",
    "sql",
    "analysis",
    "services",
    "memory",
    "optimized",
    "machine",
    "types",
    "available",
    "predefined",
    "machine",
    "types",
    "caveats",
    "use",
    "regional",
    "persistent",
    "disks",
    "memory",
    "optimized",
    "machine",
    "types",
    "well",
    "available",
    "specific",
    "zones",
    "wanted",
    "take",
    "moment",
    "go",
    "back",
    "general",
    "purpose",
    "machine",
    "type",
    "dig",
    "shared",
    "cord",
    "machine",
    "type",
    "spread",
    "amongst",
    "e2",
    "n1",
    "series",
    "shared",
    "core",
    "machine",
    "types",
    "used",
    "burstable",
    "workloads",
    "cost",
    "effective",
    "well",
    "great",
    "intensive",
    "applications",
    "shared",
    "core",
    "machine",
    "types",
    "use",
    "context",
    "switching",
    "share",
    "physical",
    "core",
    "vcpus",
    "purpose",
    "multitasking",
    "different",
    "shared",
    "core",
    "machine",
    "types",
    "sustain",
    "different",
    "amounts",
    "time",
    "physical",
    "core",
    "allows",
    "google",
    "cloud",
    "cut",
    "price",
    "general",
    "share",
    "core",
    "instances",
    "cost",
    "effective",
    "running",
    "small",
    "intensive",
    "applications",
    "standard",
    "high",
    "memory",
    "high",
    "cpu",
    "machine",
    "types",
    "comes",
    "cpu",
    "bursting",
    "shared",
    "core",
    "machine",
    "types",
    "offer",
    "bursting",
    "capabilities",
    "allow",
    "instances",
    "use",
    "additional",
    "physical",
    "cpu",
    "short",
    "periods",
    "time",
    "bursting",
    "happens",
    "automatically",
    "instance",
    "requires",
    "physical",
    "cpu",
    "originally",
    "allocated",
    "spikes",
    "instance",
    "take",
    "advantage",
    "available",
    "physical",
    "cpu",
    "bursts",
    "e2",
    "shared",
    "core",
    "machine",
    "type",
    "offered",
    "micro",
    "small",
    "medium",
    "n1",
    "series",
    "offered",
    "f1",
    "micro",
    "g1",
    "small",
    "series",
    "maximum",
    "two",
    "vcpus",
    "maximum",
    "four",
    "gigabytes",
    "memory",
    "wanted",
    "take",
    "moment",
    "touch",
    "custom",
    "machine",
    "types",
    "available",
    "general",
    "purpose",
    "machine",
    "customer",
    "defined",
    "cpu",
    "memory",
    "designed",
    "custom",
    "workloads",
    "none",
    "general",
    "purpose",
    "predefined",
    "machine",
    "types",
    "cater",
    "needs",
    "create",
    "custom",
    "machine",
    "type",
    "specific",
    "number",
    "vcpus",
    "amount",
    "memory",
    "need",
    "instance",
    "machine",
    "types",
    "ideal",
    "workloads",
    "good",
    "fit",
    "machine",
    "types",
    "available",
    "also",
    "great",
    "need",
    "memory",
    "cpu",
    "predefined",
    "machine",
    "types",
    "quite",
    "fit",
    "exactly",
    "need",
    "workload",
    "note",
    "costs",
    "slightly",
    "use",
    "custom",
    "machine",
    "type",
    "machine",
    "type",
    "limitations",
    "amount",
    "memory",
    "vcpu",
    "select",
    "stated",
    "earlier",
    "creating",
    "custom",
    "machine",
    "type",
    "choose",
    "e2",
    "n2",
    "2d",
    "n1",
    "machine",
    "types",
    "last",
    "part",
    "wanted",
    "touch",
    "gpus",
    "available",
    "designed",
    "graphic",
    "intensive",
    "workloads",
    "available",
    "n1",
    "machine",
    "type",
    "gpus",
    "come",
    "five",
    "different",
    "flavors",
    "nvidia",
    "showing",
    "tesla",
    "k80",
    "tesla",
    "p4",
    "tesla",
    "t4",
    "tesla",
    "v100",
    "tesla",
    "p100",
    "families",
    "machine",
    "types",
    "available",
    "google",
    "cloud",
    "allow",
    "little",
    "bit",
    "flexible",
    "type",
    "workload",
    "need",
    "exam",
    "wo",
    "memorize",
    "machine",
    "type",
    "need",
    "know",
    "overview",
    "machine",
    "type",
    "know",
    "lot",
    "theory",
    "presented",
    "lesson",
    "hope",
    "giving",
    "better",
    "understanding",
    "available",
    "machine",
    "types",
    "google",
    "cloud",
    "pretty",
    "much",
    "wanted",
    "cover",
    "lesson",
    "compute",
    "engine",
    "machine",
    "types",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "reviewing",
    "managing",
    "instances",
    "manage",
    "instances",
    "big",
    "topic",
    "exam",
    "well",
    "useful",
    "know",
    "work",
    "cloud",
    "engineer",
    "environments",
    "responsible",
    "knowing",
    "features",
    "available",
    "well",
    "best",
    "practices",
    "allow",
    "make",
    "better",
    "decisions",
    "regards",
    "instances",
    "allow",
    "keep",
    "environment",
    "healthy",
    "lesson",
    "dive",
    "many",
    "features",
    "available",
    "order",
    "better",
    "manage",
    "instances",
    "using",
    "specific",
    "features",
    "within",
    "google",
    "cloud",
    "said",
    "let",
    "dive",
    "wanted",
    "start",
    "lesson",
    "discussing",
    "life",
    "cycle",
    "instance",
    "within",
    "google",
    "cloud",
    "every",
    "instance",
    "predefined",
    "life",
    "cycle",
    "starting",
    "provisioning",
    "state",
    "deletion",
    "instance",
    "transition",
    "many",
    "instant",
    "states",
    "part",
    "life",
    "cycle",
    "first",
    "create",
    "instance",
    "compute",
    "engine",
    "provisions",
    "resources",
    "start",
    "instance",
    "next",
    "instance",
    "moves",
    "staging",
    "prepares",
    "first",
    "boot",
    "finally",
    "boots",
    "considered",
    "running",
    "lifetime",
    "running",
    "instance",
    "repeatedly",
    "stopped",
    "restarted",
    "suspended",
    "resumed",
    "wanted",
    "take",
    "minutes",
    "go",
    "instance",
    "life",
    "cycle",
    "bit",
    "detail",
    "starting",
    "provisioning",
    "state",
    "resources",
    "allocated",
    "instance",
    "instance",
    "yet",
    "running",
    "instance",
    "allocated",
    "requested",
    "amount",
    "cpu",
    "memory",
    "along",
    "root",
    "disk",
    "additional",
    "disks",
    "attached",
    "well",
    "additional",
    "feature",
    "sets",
    "assigned",
    "instance",
    "comes",
    "cost",
    "provisioning",
    "state",
    "costs",
    "incurred",
    "moving",
    "right",
    "along",
    "staging",
    "state",
    "finishing",
    "provisioning",
    "state",
    "life",
    "cycle",
    "continues",
    "staging",
    "state",
    "resources",
    "acquired",
    "instance",
    "prepared",
    "first",
    "boot",
    "internal",
    "external",
    "ips",
    "allocated",
    "either",
    "static",
    "ephemeral",
    "system",
    "image",
    "originally",
    "chosen",
    "instance",
    "used",
    "boot",
    "instance",
    "either",
    "public",
    "image",
    "custom",
    "image",
    "costs",
    "state",
    "still",
    "incurred",
    "instance",
    "still",
    "state",
    "instance",
    "left",
    "staging",
    "move",
    "running",
    "state",
    "instance",
    "booting",
    "running",
    "allow",
    "log",
    "instance",
    "either",
    "using",
    "ssh",
    "rdp",
    "within",
    "short",
    "waiting",
    "period",
    "due",
    "startup",
    "scripts",
    "boot",
    "maintenance",
    "tasks",
    "operating",
    "system",
    "running",
    "state",
    "reset",
    "instance",
    "would",
    "wipe",
    "memory",
    "contents",
    "vm",
    "instance",
    "reset",
    "virtual",
    "machine",
    "initial",
    "state",
    "resetting",
    "instance",
    "causes",
    "immediate",
    "hard",
    "reset",
    "vm",
    "therefore",
    "vm",
    "graceful",
    "shutdown",
    "guest",
    "operating",
    "system",
    "however",
    "vm",
    "retains",
    "persistent",
    "disk",
    "data",
    "none",
    "instance",
    "properties",
    "change",
    "instance",
    "remains",
    "running",
    "state",
    "reset",
    "well",
    "running",
    "state",
    "repair",
    "happen",
    "due",
    "instance",
    "encountering",
    "internal",
    "error",
    "underlying",
    "machine",
    "unavailable",
    "due",
    "maintenance",
    "time",
    "instance",
    "unusable",
    "repair",
    "successful",
    "instance",
    "returns",
    "back",
    "running",
    "state",
    "paying",
    "attention",
    "costs",
    "state",
    "instance",
    "starts",
    "occur",
    "related",
    "resources",
    "assigned",
    "instance",
    "like",
    "cpu",
    "memory",
    "static",
    "ips",
    "disks",
    "attached",
    "instance",
    "going",
    "bit",
    "detail",
    "bit",
    "regards",
    "state",
    "finally",
    "end",
    "life",
    "cycle",
    "stopping",
    "suspended",
    "terminated",
    "states",
    "suspending",
    "instance",
    "like",
    "closing",
    "lid",
    "laptop",
    "suspending",
    "instance",
    "preserve",
    "guest",
    "operating",
    "system",
    "memory",
    "application",
    "state",
    "instance",
    "otherwise",
    "discarded",
    "state",
    "choose",
    "either",
    "resume",
    "delete",
    "comes",
    "stopping",
    "either",
    "user",
    "made",
    "request",
    "stop",
    "instance",
    "failure",
    "temporary",
    "status",
    "instance",
    "move",
    "terminated",
    "touching",
    "costs",
    "second",
    "suspending",
    "stopping",
    "instance",
    "pay",
    "resources",
    "still",
    "attached",
    "vm",
    "instance",
    "static",
    "ips",
    "persistent",
    "disk",
    "data",
    "pay",
    "cost",
    "running",
    "vm",
    "instance",
    "ephemeral",
    "external",
    "ip",
    "addresses",
    "released",
    "instance",
    "assigned",
    "new",
    "one",
    "instance",
    "started",
    "comes",
    "stopping",
    "suspending",
    "resetting",
    "instance",
    "stop",
    "suspend",
    "instance",
    "longer",
    "need",
    "want",
    "keep",
    "instance",
    "around",
    "future",
    "use",
    "compute",
    "engine",
    "waits",
    "guest",
    "finish",
    "shutting",
    "transitions",
    "instance",
    "terminated",
    "state",
    "touching",
    "terminated",
    "state",
    "user",
    "either",
    "shuts",
    "instance",
    "instance",
    "encounters",
    "failure",
    "choose",
    "restart",
    "instance",
    "delete",
    "well",
    "holding",
    "reset",
    "options",
    "within",
    "availability",
    "policy",
    "state",
    "still",
    "pay",
    "static",
    "ips",
    "disks",
    "like",
    "suspending",
    "stopping",
    "state",
    "pay",
    "cpu",
    "memory",
    "resources",
    "allocated",
    "instance",
    "covers",
    "high",
    "level",
    "overview",
    "instance",
    "lifecycle",
    "google",
    "cloud",
    "states",
    "make",
    "lifecycle",
    "get",
    "detail",
    "regards",
    "feature",
    "sets",
    "compute",
    "engine",
    "wanted",
    "revisit",
    "states",
    "features",
    "apply",
    "creating",
    "instance",
    "option",
    "using",
    "shielded",
    "vms",
    "added",
    "security",
    "using",
    "instance",
    "would",
    "instantiate",
    "instance",
    "boots",
    "enters",
    "running",
    "state",
    "exactly",
    "shielded",
    "vm",
    "well",
    "shielded",
    "vms",
    "offer",
    "verifiable",
    "integrity",
    "compute",
    "engine",
    "vm",
    "instances",
    "sure",
    "instances",
    "compromised",
    "boot",
    "kernel",
    "level",
    "malware",
    "rootkits",
    "achieved",
    "process",
    "covered",
    "secure",
    "boot",
    "virtual",
    "trusted",
    "platform",
    "module",
    "also",
    "known",
    "vtpm",
    "measure",
    "boot",
    "running",
    "vtpm",
    "integrity",
    "monitoring",
    "wanted",
    "dig",
    "sec",
    "give",
    "bit",
    "context",
    "boot",
    "process",
    "shielded",
    "vms",
    "start",
    "secure",
    "boot",
    "helps",
    "ensure",
    "system",
    "runs",
    "authentic",
    "software",
    "verifying",
    "digital",
    "signature",
    "boot",
    "components",
    "stopping",
    "boot",
    "process",
    "signature",
    "verification",
    "fails",
    "shielded",
    "vm",
    "instances",
    "run",
    "firmware",
    "signed",
    "verified",
    "using",
    "google",
    "certificate",
    "authority",
    "every",
    "boot",
    "boot",
    "component",
    "properly",
    "signed",
    "signed",
    "allowed",
    "run",
    "first",
    "time",
    "boot",
    "vm",
    "instance",
    "measure",
    "boot",
    "creates",
    "integrity",
    "policy",
    "baseline",
    "first",
    "set",
    "measurements",
    "securely",
    "stores",
    "data",
    "time",
    "vm",
    "instance",
    "boots",
    "measurements",
    "taken",
    "stored",
    "secure",
    "memory",
    "next",
    "reboot",
    "two",
    "sets",
    "measurements",
    "enables",
    "integrity",
    "monitoring",
    "next",
    "step",
    "allows",
    "determine",
    "changes",
    "vm",
    "instance",
    "boot",
    "sequence",
    "policy",
    "loaded",
    "onto",
    "virtualized",
    "trusted",
    "platform",
    "module",
    "known",
    "vtpm",
    "short",
    "specialized",
    "computer",
    "chip",
    "use",
    "protect",
    "objects",
    "like",
    "keys",
    "certificates",
    "use",
    "authenticate",
    "access",
    "system",
    "shielded",
    "vms",
    "vtpm",
    "enables",
    "measured",
    "boot",
    "performing",
    "measurements",
    "needed",
    "create",
    "known",
    "good",
    "boot",
    "baseline",
    "called",
    "integrity",
    "policy",
    "baseline",
    "integrity",
    "policy",
    "baseline",
    "used",
    "comparison",
    "measurements",
    "subsequent",
    "vm",
    "boots",
    "determine",
    "anything",
    "changed",
    "integrity",
    "monitoring",
    "relies",
    "measurements",
    "created",
    "measured",
    "boot",
    "integrity",
    "policy",
    "baseline",
    "recent",
    "boot",
    "sequence",
    "integrity",
    "monitoring",
    "compares",
    "recent",
    "boot",
    "measurements",
    "integrity",
    "policy",
    "baseline",
    "returns",
    "pair",
    "pass",
    "failed",
    "results",
    "depending",
    "whether",
    "match",
    "one",
    "early",
    "boot",
    "sequence",
    "one",
    "late",
    "boot",
    "sequence",
    "summary",
    "shielded",
    "vms",
    "help",
    "prevent",
    "data",
    "exfiltration",
    "touching",
    "running",
    "state",
    "start",
    "vm",
    "instance",
    "using",
    "google",
    "provided",
    "public",
    "images",
    "guest",
    "environment",
    "automatically",
    "installed",
    "vm",
    "instance",
    "guest",
    "environment",
    "set",
    "scripts",
    "daemons",
    "binaries",
    "read",
    "content",
    "metadata",
    "server",
    "make",
    "virtual",
    "machine",
    "run",
    "properly",
    "compute",
    "engine",
    "metadata",
    "server",
    "communication",
    "channel",
    "transferring",
    "information",
    "client",
    "guest",
    "operating",
    "system",
    "vm",
    "instances",
    "created",
    "using",
    "google",
    "provided",
    "public",
    "images",
    "include",
    "guest",
    "environment",
    "installed",
    "default",
    "creating",
    "vm",
    "instances",
    "using",
    "custom",
    "image",
    "require",
    "manually",
    "install",
    "guest",
    "environment",
    "guest",
    "environment",
    "available",
    "linux",
    "windows",
    "systems",
    "supported",
    "operating",
    "system",
    "available",
    "compute",
    "engine",
    "requires",
    "specific",
    "guest",
    "environment",
    "packages",
    "either",
    "google",
    "owner",
    "operating",
    "system",
    "builds",
    "packages",
    "comes",
    "linux",
    "guest",
    "environment",
    "either",
    "built",
    "google",
    "owner",
    "operating",
    "system",
    "key",
    "components",
    "applicable",
    "builds",
    "found",
    "link",
    "included",
    "lesson",
    "text",
    "base",
    "components",
    "linux",
    "guest",
    "environment",
    "python",
    "package",
    "contains",
    "scripts",
    "daemons",
    "packages",
    "supported",
    "linux",
    "distributions",
    "comes",
    "windows",
    "similar",
    "approach",
    "applies",
    "package",
    "available",
    "main",
    "scripts",
    "binaries",
    "part",
    "guest",
    "environment",
    "touching",
    "back",
    "metadata",
    "server",
    "compute",
    "engine",
    "provides",
    "method",
    "storing",
    "retrieving",
    "metadata",
    "form",
    "metadata",
    "server",
    "service",
    "provides",
    "central",
    "point",
    "set",
    "metadata",
    "form",
    "key",
    "value",
    "pairs",
    "provided",
    "virtual",
    "machines",
    "runtime",
    "query",
    "metadata",
    "server",
    "programmatically",
    "within",
    "instance",
    "compute",
    "engine",
    "api",
    "great",
    "use",
    "startup",
    "shutdown",
    "scripts",
    "gaining",
    "insight",
    "instance",
    "metadata",
    "assigned",
    "projects",
    "well",
    "instances",
    "project",
    "metadata",
    "propagates",
    "instances",
    "within",
    "project",
    "instance",
    "metadata",
    "impacts",
    "instance",
    "access",
    "metadata",
    "using",
    "following",
    "url",
    "curl",
    "command",
    "see",
    "screen",
    "looking",
    "metadata",
    "project",
    "would",
    "use",
    "first",
    "url",
    "ends",
    "project",
    "instance",
    "metadata",
    "use",
    "second",
    "url",
    "ends",
    "instance",
    "please",
    "note",
    "make",
    "request",
    "get",
    "information",
    "metadata",
    "server",
    "request",
    "subsequent",
    "metadata",
    "response",
    "never",
    "leaves",
    "physical",
    "host",
    "running",
    "virtual",
    "machine",
    "instance",
    "instance",
    "booted",
    "gone",
    "startup",
    "scripts",
    "ability",
    "login",
    "instance",
    "using",
    "ssh",
    "rdp",
    "different",
    "methods",
    "use",
    "connect",
    "access",
    "linux",
    "instances",
    "windows",
    "instances",
    "going",
    "comes",
    "linux",
    "instances",
    "already",
    "gone",
    "accessing",
    "types",
    "instances",
    "previous",
    "lessons",
    "demos",
    "refresher",
    "would",
    "typically",
    "connect",
    "vm",
    "instance",
    "via",
    "ssh",
    "access",
    "port",
    "please",
    "note",
    "require",
    "firewall",
    "rule",
    "done",
    "previous",
    "demos",
    "allow",
    "access",
    "connect",
    "linux",
    "instances",
    "google",
    "cloud",
    "console",
    "cloud",
    "shell",
    "using",
    "cloud",
    "sdk",
    "know",
    "use",
    "ssh",
    "keys",
    "defacto",
    "comes",
    "logging",
    "linux",
    "instances",
    "scenarios",
    "google",
    "cloud",
    "google",
    "recommends",
    "using",
    "os",
    "login",
    "using",
    "ssh",
    "keys",
    "os",
    "login",
    "feature",
    "lets",
    "use",
    "compute",
    "engine",
    "iam",
    "roles",
    "manage",
    "ssh",
    "access",
    "linux",
    "instances",
    "like",
    "add",
    "extra",
    "layer",
    "security",
    "setting",
    "os",
    "login",
    "verification",
    "manage",
    "access",
    "organization",
    "level",
    "setting",
    "organizational",
    "policies",
    "os",
    "login",
    "simplifies",
    "ssh",
    "access",
    "management",
    "linking",
    "linux",
    "user",
    "account",
    "google",
    "identity",
    "administrators",
    "easily",
    "manage",
    "access",
    "instances",
    "either",
    "instance",
    "project",
    "level",
    "setting",
    "iam",
    "permissions",
    "running",
    "directory",
    "service",
    "managing",
    "access",
    "unable",
    "set",
    "os",
    "login",
    "manually",
    "manage",
    "ssh",
    "keys",
    "local",
    "user",
    "accounts",
    "metadata",
    "manually",
    "creating",
    "ssh",
    "keys",
    "editing",
    "public",
    "ssh",
    "key",
    "metadata",
    "comes",
    "windows",
    "instances",
    "would",
    "typically",
    "connect",
    "vm",
    "instance",
    "via",
    "rdp",
    "access",
    "port",
    "3389",
    "please",
    "note",
    "also",
    "require",
    "firewall",
    "rule",
    "shown",
    "allow",
    "access",
    "connect",
    "windows",
    "instances",
    "rdp",
    "protocol",
    "powershell",
    "terminal",
    "logging",
    "windows",
    "requires",
    "setting",
    "windows",
    "password",
    "done",
    "either",
    "console",
    "gcloud",
    "command",
    "line",
    "tool",
    "setting",
    "password",
    "log",
    "recommended",
    "rdp",
    "chrome",
    "extension",
    "using",
    "rdp",
    "client",
    "provide",
    "link",
    "rdp",
    "chrome",
    "extension",
    "lesson",
    "text",
    "instance",
    "booted",
    "instance",
    "ready",
    "logged",
    "always",
    "option",
    "modifying",
    "instance",
    "manually",
    "either",
    "modifying",
    "fly",
    "take",
    "necessary",
    "steps",
    "edit",
    "instance",
    "like",
    "showed",
    "previous",
    "lesson",
    "stopping",
    "editing",
    "restarting",
    "although",
    "comes",
    "google",
    "maintenance",
    "vm",
    "merely",
    "want",
    "move",
    "instance",
    "different",
    "zone",
    "region",
    "become",
    "possible",
    "without",
    "shutting",
    "instance",
    "using",
    "feature",
    "called",
    "live",
    "migration",
    "comes",
    "live",
    "migration",
    "compute",
    "engine",
    "migrates",
    "running",
    "instances",
    "another",
    "host",
    "zone",
    "instead",
    "requiring",
    "vms",
    "rebooted",
    "allows",
    "google",
    "perform",
    "maintenance",
    "reliably",
    "without",
    "interrupting",
    "vms",
    "vm",
    "scheduled",
    "live",
    "migrated",
    "google",
    "provides",
    "notification",
    "guest",
    "migration",
    "coming",
    "soon",
    "live",
    "migration",
    "keeps",
    "instances",
    "running",
    "compute",
    "engine",
    "hosts",
    "need",
    "regular",
    "infrastructure",
    "maintenance",
    "upgrades",
    "replacement",
    "failed",
    "hardware",
    "system",
    "configuration",
    "changes",
    "google",
    "migrates",
    "running",
    "vm",
    "instance",
    "one",
    "host",
    "another",
    "moves",
    "complete",
    "instance",
    "state",
    "source",
    "destination",
    "way",
    "transparent",
    "guest",
    "os",
    "anyone",
    "communicating",
    "google",
    "also",
    "gives",
    "option",
    "live",
    "migration",
    "manually",
    "one",
    "zone",
    "another",
    "within",
    "region",
    "either",
    "using",
    "console",
    "running",
    "command",
    "line",
    "see",
    "gcloud",
    "compute",
    "instances",
    "move",
    "name",
    "vm",
    "zone",
    "flag",
    "zone",
    "currently",
    "destination",
    "zone",
    "flag",
    "zone",
    "wanted",
    "go",
    "note",
    "caveats",
    "instances",
    "gpus",
    "attached",
    "live",
    "migrated",
    "ca",
    "configure",
    "preemptable",
    "instance",
    "live",
    "migrate",
    "instance",
    "lifecycle",
    "full",
    "different",
    "options",
    "understanding",
    "help",
    "better",
    "coordinate",
    "moving",
    "editing",
    "repairing",
    "vm",
    "instances",
    "matter",
    "may",
    "lie",
    "life",
    "cycle",
    "hope",
    "lesson",
    "given",
    "necessary",
    "theory",
    "help",
    "better",
    "use",
    "discuss",
    "feature",
    "sets",
    "giving",
    "ideas",
    "better",
    "manage",
    "instances",
    "lot",
    "know",
    "shown",
    "manage",
    "instances",
    "topics",
    "shown",
    "shows",
    "exam",
    "well",
    "really",
    "great",
    "starting",
    "points",
    "begin",
    "managing",
    "instances",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "managing",
    "instances",
    "mark",
    "lesson",
    "complete",
    "join",
    "next",
    "one",
    "cement",
    "theory",
    "lesson",
    "demo",
    "music",
    "welcome",
    "back",
    "demonstration",
    "going",
    "cementing",
    "theory",
    "learned",
    "last",
    "lesson",
    "regards",
    "different",
    "login",
    "methods",
    "windows",
    "linux",
    "instances",
    "implement",
    "methods",
    "extremely",
    "useful",
    "know",
    "exam",
    "managing",
    "multiple",
    "instances",
    "different",
    "environments",
    "lot",
    "cover",
    "said",
    "let",
    "dive",
    "see",
    "logged",
    "tony",
    "bowtie",
    "ace",
    "well",
    "project",
    "bowtie",
    "inc",
    "first",
    "thing",
    "want",
    "create",
    "linux",
    "instance",
    "windows",
    "instance",
    "demonstrate",
    "different",
    "options",
    "logging",
    "instance",
    "order",
    "need",
    "head",
    "compute",
    "engine",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "scroll",
    "compute",
    "engine",
    "note",
    "creating",
    "instances",
    "please",
    "make",
    "sure",
    "default",
    "vpc",
    "created",
    "going",
    "ahead",
    "creating",
    "instances",
    "forgotten",
    "create",
    "default",
    "vpc",
    "please",
    "go",
    "back",
    "networking",
    "services",
    "section",
    "watch",
    "vpc",
    "lesson",
    "refresher",
    "going",
    "go",
    "ahead",
    "create",
    "first",
    "instance",
    "going",
    "start",
    "windows",
    "instance",
    "going",
    "simply",
    "click",
    "create",
    "name",
    "instance",
    "simply",
    "call",
    "windows",
    "dash",
    "instance",
    "going",
    "add",
    "labels",
    "region",
    "select",
    "us",
    "east1",
    "keep",
    "zone",
    "default",
    "us",
    "east",
    "1b",
    "scrolling",
    "machine",
    "configuration",
    "machine",
    "type",
    "going",
    "keep",
    "windows",
    "instance",
    "going",
    "need",
    "little",
    "bit",
    "power",
    "scrolling",
    "boot",
    "disk",
    "need",
    "change",
    "debian",
    "windows",
    "going",
    "simply",
    "click",
    "change",
    "button",
    "operating",
    "system",
    "going",
    "click",
    "drop",
    "select",
    "windows",
    "server",
    "version",
    "going",
    "select",
    "latest",
    "version",
    "windows",
    "server",
    "windows",
    "server",
    "2019",
    "data",
    "center",
    "keep",
    "boot",
    "disk",
    "type",
    "size",
    "default",
    "simply",
    "head",
    "click",
    "select",
    "going",
    "leave",
    "everything",
    "else",
    "default",
    "simply",
    "click",
    "create",
    "success",
    "windows",
    "instance",
    "created",
    "first",
    "thing",
    "want",
    "want",
    "set",
    "windows",
    "password",
    "instance",
    "going",
    "head",
    "rdp",
    "button",
    "going",
    "click",
    "going",
    "select",
    "set",
    "windows",
    "password",
    "going",
    "get",
    "set",
    "new",
    "windows",
    "password",
    "username",
    "propagated",
    "tony",
    "bowties",
    "going",
    "leave",
    "going",
    "click",
    "set",
    "going",
    "prompted",
    "new",
    "windows",
    "password",
    "set",
    "going",
    "copy",
    "going",
    "paste",
    "notepad",
    "sure",
    "record",
    "somewhere",
    "either",
    "write",
    "copy",
    "paste",
    "text",
    "editor",
    "choice",
    "going",
    "click",
    "close",
    "log",
    "need",
    "make",
    "sure",
    "couple",
    "things",
    "first",
    "thing",
    "need",
    "make",
    "sure",
    "firewall",
    "rule",
    "open",
    "port",
    "3389",
    "second",
    "need",
    "make",
    "sure",
    "rdp",
    "client",
    "order",
    "satisfy",
    "first",
    "constraint",
    "going",
    "head",
    "navigation",
    "menu",
    "go",
    "vpc",
    "network",
    "going",
    "select",
    "firewall",
    "expected",
    "rdp",
    "firewall",
    "rule",
    "already",
    "created",
    "due",
    "fact",
    "upon",
    "creation",
    "default",
    "vpc",
    "network",
    "default",
    "firewall",
    "rule",
    "always",
    "created",
    "gotten",
    "way",
    "going",
    "head",
    "back",
    "compute",
    "engine",
    "going",
    "going",
    "record",
    "external",
    "ip",
    "able",
    "log",
    "going",
    "logging",
    "instance",
    "windows",
    "client",
    "mac",
    "client",
    "starting",
    "windows",
    "going",
    "head",
    "windows",
    "virtual",
    "machine",
    "know",
    "windows",
    "default",
    "rdp",
    "client",
    "already",
    "built",
    "going",
    "simply",
    "bring",
    "hitting",
    "windows",
    "key",
    "typing",
    "remote",
    "desktop",
    "connection",
    "going",
    "click",
    "going",
    "paste",
    "public",
    "ip",
    "instance",
    "recorded",
    "going",
    "click",
    "connect",
    "get",
    "asking",
    "credentials",
    "going",
    "type",
    "username",
    "tony",
    "bowtie",
    "ace",
    "well",
    "going",
    "paste",
    "password",
    "going",
    "click",
    "ok",
    "prompted",
    "accept",
    "security",
    "certificate",
    "going",
    "select",
    "yes",
    "success",
    "connected",
    "windows",
    "server",
    "instance",
    "going",
    "run",
    "necessary",
    "startup",
    "scripts",
    "may",
    "get",
    "couple",
    "prompts",
    "come",
    "asking",
    "want",
    "connect",
    "network",
    "absolutely",
    "going",
    "close",
    "server",
    "manager",
    "another",
    "thing",
    "wanted",
    "note",
    "create",
    "windows",
    "instance",
    "automatically",
    "provisioned",
    "google",
    "cloud",
    "shell",
    "sdk",
    "able",
    "run",
    "regular",
    "commands",
    "right",
    "shell",
    "without",
    "install",
    "due",
    "guest",
    "environment",
    "automatically",
    "installed",
    "vm",
    "instance",
    "upon",
    "creation",
    "perfect",
    "example",
    "scripts",
    "installed",
    "guest",
    "environment",
    "going",
    "go",
    "ahead",
    "close",
    "going",
    "go",
    "ahead",
    "close",
    "instance",
    "hit",
    "ok",
    "windows",
    "wanted",
    "show",
    "alternate",
    "way",
    "logging",
    "instance",
    "powershell",
    "quite",
    "versed",
    "windows",
    "use",
    "powershell",
    "easy",
    "way",
    "log",
    "instance",
    "using",
    "powershell",
    "order",
    "need",
    "open",
    "another",
    "firewall",
    "rule",
    "covering",
    "tcp",
    "port",
    "5986",
    "going",
    "head",
    "back",
    "google",
    "cloud",
    "console",
    "going",
    "head",
    "navigation",
    "menu",
    "going",
    "scroll",
    "vpc",
    "network",
    "going",
    "go",
    "firewall",
    "going",
    "create",
    "new",
    "firewall",
    "rule",
    "name",
    "going",
    "name",
    "allow",
    "powershell",
    "going",
    "use",
    "description",
    "going",
    "scroll",
    "targets",
    "going",
    "select",
    "instances",
    "network",
    "source",
    "ip",
    "ranges",
    "demonstration",
    "going",
    "use",
    "forward",
    "slash",
    "used",
    "production",
    "environment",
    "used",
    "merely",
    "demo",
    "going",
    "leave",
    "everything",
    "else",
    "going",
    "go",
    "protocols",
    "ports",
    "going",
    "click",
    "tcp",
    "going",
    "type",
    "5986",
    "port",
    "going",
    "click",
    "create",
    "going",
    "give",
    "second",
    "create",
    "took",
    "couple",
    "seconds",
    "firewall",
    "rule",
    "created",
    "gon",
    "na",
    "head",
    "windows",
    "vm",
    "gon",
    "na",
    "open",
    "powershell",
    "command",
    "prompt",
    "hit",
    "windows",
    "key",
    "type",
    "powershell",
    "order",
    "get",
    "constantly",
    "asked",
    "username",
    "password",
    "going",
    "use",
    "variable",
    "keep",
    "password",
    "every",
    "time",
    "connect",
    "windows",
    "instance",
    "wo",
    "need",
    "type",
    "time",
    "command",
    "dollar",
    "sign",
    "credentials",
    "equals",
    "get",
    "dash",
    "credential",
    "going",
    "hit",
    "enter",
    "going",
    "get",
    "prompt",
    "type",
    "username",
    "password",
    "going",
    "simply",
    "type",
    "along",
    "password",
    "hit",
    "ok",
    "get",
    "prompt",
    "errors",
    "chances",
    "successful",
    "entering",
    "credentials",
    "order",
    "connect",
    "instance",
    "going",
    "need",
    "public",
    "ip",
    "address",
    "going",
    "head",
    "back",
    "console",
    "going",
    "head",
    "navigation",
    "menu",
    "back",
    "compute",
    "engine",
    "going",
    "record",
    "external",
    "ip",
    "going",
    "head",
    "back",
    "windows",
    "virtual",
    "machine",
    "going",
    "enter",
    "command",
    "include",
    "lesson",
    "text",
    "also",
    "able",
    "find",
    "github",
    "repository",
    "beside",
    "computer",
    "name",
    "going",
    "put",
    "public",
    "ip",
    "address",
    "windows",
    "instance",
    "make",
    "sure",
    "end",
    "credentials",
    "variable",
    "going",
    "simply",
    "click",
    "enter",
    "success",
    "connected",
    "windows",
    "instance",
    "google",
    "cloud",
    "see",
    "left",
    "public",
    "ip",
    "windows",
    "instance",
    "various",
    "ways",
    "connect",
    "windows",
    "instance",
    "windows",
    "machine",
    "connect",
    "windows",
    "instance",
    "mac",
    "going",
    "head",
    "like",
    "said",
    "need",
    "satisfy",
    "constraint",
    "rdp",
    "client",
    "unfortunately",
    "mac",
    "come",
    "rdp",
    "client",
    "recommended",
    "tool",
    "use",
    "chrome",
    "extension",
    "personally",
    "like",
    "microsoft",
    "rdp",
    "mac",
    "application",
    "going",
    "go",
    "ahead",
    "walkthrough",
    "installation",
    "going",
    "start",
    "opening",
    "safari",
    "going",
    "paste",
    "url",
    "include",
    "lesson",
    "text",
    "microsoft",
    "made",
    "available",
    "microsoft",
    "remote",
    "desktop",
    "app",
    "available",
    "app",
    "store",
    "going",
    "go",
    "ahead",
    "view",
    "app",
    "store",
    "going",
    "simply",
    "click",
    "get",
    "install",
    "entered",
    "credentials",
    "downloaded",
    "installed",
    "simply",
    "click",
    "open",
    "going",
    "click",
    "continue",
    "going",
    "close",
    "windows",
    "better",
    "viewing",
    "going",
    "click",
    "add",
    "pc",
    "going",
    "paste",
    "public",
    "ip",
    "address",
    "windows",
    "instance",
    "user",
    "account",
    "going",
    "add",
    "user",
    "account",
    "type",
    "username",
    "paste",
    "password",
    "add",
    "friendly",
    "name",
    "going",
    "type",
    "windows",
    "dash",
    "gc",
    "google",
    "cloud",
    "going",
    "click",
    "add",
    "pasted",
    "credentials",
    "information",
    "click",
    "add",
    "able",
    "connect",
    "windows",
    "instance",
    "double",
    "clicking",
    "window",
    "asking",
    "certificates",
    "going",
    "hit",
    "continue",
    "success",
    "connected",
    "windows",
    "instance",
    "would",
    "connect",
    "windows",
    "instance",
    "windows",
    "machine",
    "well",
    "mac",
    "well",
    "couple",
    "options",
    "wanted",
    "show",
    "drop",
    "beside",
    "rdp",
    "download",
    "rdp",
    "file",
    "contain",
    "public",
    "ip",
    "address",
    "windows",
    "instance",
    "along",
    "username",
    "need",
    "reset",
    "password",
    "view",
    "gcloud",
    "command",
    "set",
    "new",
    "windows",
    "password",
    "forgotten",
    "old",
    "one",
    "everything",
    "show",
    "regards",
    "connecting",
    "windows",
    "instance",
    "since",
    "demo",
    "getting",
    "kind",
    "long",
    "decided",
    "split",
    "two",
    "parts",
    "end",
    "part",
    "one",
    "demo",
    "would",
    "great",
    "opportunity",
    "get",
    "stretch",
    "grab",
    "tea",
    "coffee",
    "whenever",
    "ready",
    "join",
    "part",
    "two",
    "starting",
    "immediately",
    "end",
    "part",
    "1",
    "complete",
    "video",
    "see",
    "part",
    "2",
    "music",
    "welcome",
    "back",
    "part",
    "2",
    "connecting",
    "instances",
    "demo",
    "starting",
    "exactly",
    "left",
    "part",
    "one",
    "said",
    "let",
    "dive",
    "created",
    "windows",
    "instance",
    "went",
    "methods",
    "connect",
    "let",
    "go",
    "ahead",
    "create",
    "linux",
    "instance",
    "going",
    "go",
    "top",
    "menu",
    "click",
    "create",
    "instance",
    "going",
    "name",
    "instance",
    "linux",
    "instance",
    "going",
    "give",
    "labels",
    "region",
    "going",
    "select",
    "us",
    "east",
    "one",
    "region",
    "zone",
    "going",
    "leave",
    "set",
    "default",
    "us",
    "east",
    "1b",
    "machine",
    "configuration",
    "going",
    "leave",
    "boot",
    "disk",
    "going",
    "leave",
    "debian",
    "distribution",
    "going",
    "go",
    "ahead",
    "click",
    "create",
    "okay",
    "linux",
    "instance",
    "created",
    "order",
    "connect",
    "going",
    "ssh",
    "first",
    "need",
    "satisfy",
    "constraint",
    "firewall",
    "rule",
    "tcp",
    "port",
    "22",
    "open",
    "going",
    "head",
    "navigation",
    "menu",
    "going",
    "scroll",
    "vpc",
    "network",
    "going",
    "head",
    "firewall",
    "expected",
    "allow",
    "ssh",
    "firewall",
    "rule",
    "created",
    "alongside",
    "default",
    "vpc",
    "network",
    "since",
    "satisfied",
    "constraint",
    "head",
    "back",
    "compute",
    "engine",
    "different",
    "options",
    "select",
    "logging",
    "linux",
    "instance",
    "open",
    "browser",
    "window",
    "decided",
    "wanted",
    "put",
    "custom",
    "port",
    "use",
    "option",
    "provided",
    "private",
    "ssh",
    "key",
    "connect",
    "linux",
    "instance",
    "use",
    "option",
    "option",
    "viewing",
    "gcloud",
    "command",
    "order",
    "connect",
    "presented",
    "command",
    "use",
    "within",
    "gcloud",
    "command",
    "line",
    "order",
    "connect",
    "instance",
    "run",
    "cloud",
    "shell",
    "going",
    "simply",
    "close",
    "whether",
    "mac",
    "windows",
    "machine",
    "linux",
    "machine",
    "simply",
    "click",
    "ssh",
    "open",
    "new",
    "browser",
    "window",
    "connecting",
    "instance",
    "connect",
    "linux",
    "instance",
    "first",
    "time",
    "compute",
    "engine",
    "generates",
    "ssh",
    "key",
    "pair",
    "key",
    "pair",
    "default",
    "added",
    "project",
    "instance",
    "metadata",
    "give",
    "freedom",
    "worry",
    "managing",
    "keys",
    "account",
    "configured",
    "use",
    "os",
    "login",
    "compute",
    "engine",
    "stores",
    "generated",
    "key",
    "pair",
    "user",
    "account",
    "connecting",
    "linux",
    "instance",
    "scenarios",
    "google",
    "recommends",
    "using",
    "os",
    "login",
    "feature",
    "lets",
    "use",
    "iam",
    "roles",
    "manage",
    "ssh",
    "access",
    "linux",
    "instances",
    "relieves",
    "complexity",
    "manage",
    "multiple",
    "key",
    "pairs",
    "recommended",
    "way",
    "manage",
    "many",
    "users",
    "across",
    "multiple",
    "instances",
    "projects",
    "going",
    "go",
    "ahead",
    "show",
    "configure",
    "os",
    "login",
    "linux",
    "instance",
    "way",
    "similar",
    "platforms",
    "going",
    "go",
    "ahead",
    "go",
    "back",
    "mac",
    "vm",
    "going",
    "open",
    "terminal",
    "make",
    "bigger",
    "better",
    "viewing",
    "going",
    "start",
    "running",
    "gcloud",
    "init",
    "command",
    "order",
    "make",
    "sure",
    "using",
    "right",
    "user",
    "sake",
    "demonstration",
    "going",
    "configuration",
    "going",
    "click",
    "one",
    "hit",
    "enter",
    "number",
    "two",
    "tony",
    "bowtie",
    "ace",
    "going",
    "use",
    "project",
    "bow",
    "tie",
    "ink",
    "1",
    "going",
    "configure",
    "default",
    "compute",
    "region",
    "zone",
    "run",
    "gcloud",
    "config",
    "list",
    "command",
    "see",
    "account",
    "using",
    "tony",
    "bowties",
    "project",
    "bowtie",
    "inc",
    "os",
    "login",
    "requires",
    "key",
    "pair",
    "going",
    "generate",
    "going",
    "go",
    "ahead",
    "clear",
    "screen",
    "going",
    "use",
    "command",
    "ssh",
    "keygen",
    "command",
    "create",
    "public",
    "private",
    "key",
    "pair",
    "going",
    "use",
    "default",
    "path",
    "save",
    "key",
    "going",
    "enter",
    "passphrase",
    "going",
    "enter",
    "recommend",
    "write",
    "passphrase",
    "forget",
    "lose",
    "unable",
    "use",
    "key",
    "pair",
    "change",
    "directory",
    "dot",
    "ssh",
    "ls",
    "list",
    "see",
    "public",
    "private",
    "key",
    "pair",
    "private",
    "key",
    "lying",
    "id",
    "underscore",
    "rsa",
    "public",
    "key",
    "lying",
    "id",
    "underscore",
    "another",
    "constraint",
    "need",
    "enable",
    "os",
    "login",
    "linux",
    "instance",
    "going",
    "go",
    "ahead",
    "go",
    "back",
    "console",
    "going",
    "go",
    "ahead",
    "go",
    "linux",
    "instance",
    "going",
    "click",
    "edit",
    "scroll",
    "come",
    "fields",
    "marked",
    "custom",
    "metadata",
    "key",
    "type",
    "enable",
    "dash",
    "os",
    "login",
    "value",
    "type",
    "caps",
    "true",
    "wanted",
    "take",
    "moment",
    "discuss",
    "feature",
    "ssh",
    "keys",
    "block",
    "project",
    "wide",
    "ssh",
    "keys",
    "project",
    "wide",
    "public",
    "ssh",
    "keys",
    "meant",
    "give",
    "users",
    "access",
    "linux",
    "instances",
    "project",
    "allow",
    "project",
    "public",
    "ssh",
    "keys",
    "instance",
    "blocks",
    "public",
    "ssh",
    "keys",
    "see",
    "user",
    "ca",
    "use",
    "public",
    "ssh",
    "key",
    "connect",
    "instance",
    "unless",
    "public",
    "ssh",
    "key",
    "also",
    "added",
    "instance",
    "metadata",
    "allows",
    "users",
    "whose",
    "public",
    "ssh",
    "key",
    "stored",
    "instance",
    "level",
    "metadata",
    "access",
    "instance",
    "important",
    "feature",
    "note",
    "exam",
    "going",
    "leave",
    "feature",
    "checked",
    "go",
    "bottom",
    "click",
    "save",
    "wanted",
    "enable",
    "os",
    "login",
    "instances",
    "project",
    "simply",
    "go",
    "menu",
    "left",
    "click",
    "metadata",
    "add",
    "metadata",
    "values",
    "key",
    "type",
    "enable",
    "dash",
    "os",
    "login",
    "value",
    "type",
    "caps",
    "true",
    "want",
    "enable",
    "instances",
    "one",
    "specific",
    "instance",
    "regards",
    "public",
    "keys",
    "keys",
    "managed",
    "metadata",
    "used",
    "last",
    "resort",
    "use",
    "tools",
    "ssh",
    "console",
    "os",
    "login",
    "keys",
    "stored",
    "always",
    "find",
    "looking",
    "see",
    "couple",
    "keys",
    "tony",
    "bowtie",
    "ace",
    "used",
    "previous",
    "instances",
    "going",
    "go",
    "back",
    "metadata",
    "make",
    "sure",
    "key",
    "value",
    "pair",
    "os",
    "login",
    "saved",
    "going",
    "head",
    "back",
    "instances",
    "constraint",
    "fulfilled",
    "enabled",
    "os",
    "login",
    "feature",
    "adding",
    "unnecessary",
    "metadata",
    "going",
    "head",
    "back",
    "mac",
    "vm",
    "going",
    "go",
    "ahead",
    "clear",
    "screen",
    "going",
    "go",
    "ahead",
    "log",
    "instance",
    "using",
    "os",
    "login",
    "using",
    "command",
    "gcloud",
    "compute",
    "os",
    "dash",
    "login",
    "ssh",
    "dash",
    "keys",
    "add",
    "flag",
    "key",
    "dash",
    "file",
    "path",
    "public",
    "key",
    "dot",
    "ssh",
    "forward",
    "slash",
    "id",
    "underscore",
    "gon",
    "na",
    "hit",
    "enter",
    "key",
    "successfully",
    "stored",
    "user",
    "account",
    "gon",
    "na",
    "go",
    "ahead",
    "make",
    "little",
    "bigger",
    "better",
    "viewing",
    "order",
    "log",
    "instance",
    "going",
    "need",
    "username",
    "right",
    "username",
    "going",
    "copy",
    "going",
    "clear",
    "screen",
    "second",
    "better",
    "viewing",
    "order",
    "ssh",
    "instance",
    "going",
    "type",
    "command",
    "ssh",
    "minus",
    "going",
    "provide",
    "private",
    "key",
    "dot",
    "ssh",
    "forward",
    "slash",
    "id",
    "underscore",
    "rsa",
    "username",
    "recorded",
    "earlier",
    "going",
    "need",
    "public",
    "ip",
    "address",
    "linux",
    "instance",
    "going",
    "head",
    "back",
    "console",
    "sec",
    "going",
    "copy",
    "ip",
    "address",
    "head",
    "back",
    "mac",
    "vm",
    "paste",
    "hit",
    "enter",
    "asking",
    "want",
    "continue",
    "yes",
    "enter",
    "passphrase",
    "key",
    "success",
    "connected",
    "one",
    "caveat",
    "wanted",
    "show",
    "regards",
    "permissions",
    "os",
    "login",
    "going",
    "head",
    "back",
    "console",
    "going",
    "go",
    "navigation",
    "menu",
    "head",
    "admin",
    "see",
    "tony",
    "bowties",
    "role",
    "owner",
    "therefore",
    "need",
    "granular",
    "specific",
    "permissions",
    "access",
    "absolutely",
    "anything",
    "case",
    "different",
    "user",
    "hold",
    "role",
    "owner",
    "would",
    "looking",
    "specific",
    "permissions",
    "would",
    "compute",
    "os",
    "login",
    "would",
    "give",
    "permissions",
    "standard",
    "user",
    "wanted",
    "super",
    "user",
    "access",
    "root",
    "access",
    "would",
    "need",
    "given",
    "compute",
    "os",
    "admin",
    "login",
    "role",
    "see",
    "would",
    "allow",
    "administrator",
    "user",
    "privileges",
    "using",
    "os",
    "login",
    "member",
    "owner",
    "one",
    "two",
    "roles",
    "needed",
    "going",
    "exit",
    "going",
    "hit",
    "cancel",
    "covers",
    "everything",
    "wanted",
    "show",
    "regards",
    "different",
    "methods",
    "use",
    "connecting",
    "vm",
    "instances",
    "windows",
    "linux",
    "instances",
    "know",
    "may",
    "refresher",
    "others",
    "knowing",
    "different",
    "methods",
    "connecting",
    "instances",
    "come",
    "useful",
    "especially",
    "coordinating",
    "many",
    "instances",
    "bigger",
    "environments",
    "want",
    "congratulate",
    "making",
    "end",
    "demo",
    "gaining",
    "bit",
    "knowledge",
    "crucial",
    "part",
    "managing",
    "instances",
    "go",
    "sure",
    "delete",
    "resources",
    "created",
    "congrats",
    "great",
    "job",
    "mark",
    "complete",
    "see",
    "next",
    "one",
    "welcome",
    "back",
    "demonstration",
    "discussing",
    "metadata",
    "pertain",
    "project",
    "well",
    "instance",
    "well",
    "going",
    "touch",
    "startup",
    "shutdown",
    "scripts",
    "real",
    "world",
    "use",
    "cases",
    "last",
    "lesson",
    "touched",
    "tip",
    "iceberg",
    "came",
    "metadata",
    "wanted",
    "go",
    "bit",
    "deeper",
    "topic",
    "personally",
    "feel",
    "holds",
    "much",
    "value",
    "give",
    "ideas",
    "use",
    "also",
    "going",
    "combine",
    "metadata",
    "using",
    "variables",
    "startup",
    "script",
    "going",
    "bring",
    "life",
    "something",
    "dynamic",
    "nature",
    "said",
    "let",
    "dive",
    "currently",
    "logged",
    "tony",
    "bowtie",
    "ace",
    "project",
    "bow",
    "tie",
    "inc",
    "order",
    "get",
    "right",
    "metadata",
    "going",
    "head",
    "navigation",
    "menu",
    "go",
    "straight",
    "compute",
    "engine",
    "left",
    "hand",
    "menu",
    "see",
    "metadata",
    "drill",
    "explained",
    "previous",
    "lesson",
    "metadata",
    "assigned",
    "projects",
    "instances",
    "instance",
    "metadata",
    "impacts",
    "specific",
    "instance",
    "add",
    "store",
    "metadata",
    "used",
    "basis",
    "well",
    "mentioned",
    "earlier",
    "metadata",
    "stored",
    "key",
    "value",
    "pairs",
    "added",
    "time",
    "way",
    "add",
    "custom",
    "metadata",
    "default",
    "set",
    "metadata",
    "entries",
    "every",
    "instance",
    "access",
    "applies",
    "project",
    "instance",
    "metadata",
    "option",
    "setting",
    "custom",
    "metadata",
    "entire",
    "project",
    "going",
    "dive",
    "store",
    "custom",
    "metadata",
    "instance",
    "order",
    "show",
    "going",
    "first",
    "head",
    "vm",
    "instances",
    "create",
    "instance",
    "note",
    "creating",
    "instance",
    "make",
    "sure",
    "default",
    "vpc",
    "created",
    "like",
    "double",
    "check",
    "things",
    "going",
    "head",
    "navigation",
    "menu",
    "going",
    "scroll",
    "vpc",
    "network",
    "expected",
    "default",
    "vpc",
    "already",
    "created",
    "means",
    "go",
    "ahead",
    "create",
    "instance",
    "going",
    "head",
    "back",
    "compute",
    "engine",
    "going",
    "create",
    "instance",
    "going",
    "name",
    "instance",
    "bowtie",
    "dash",
    "web",
    "server",
    "going",
    "add",
    "labels",
    "region",
    "going",
    "select",
    "us",
    "east",
    "one",
    "keep",
    "zone",
    "default",
    "us",
    "east",
    "1b",
    "machine",
    "type",
    "want",
    "keep",
    "things",
    "cost",
    "effective",
    "going",
    "select",
    "e2",
    "micro",
    "going",
    "scroll",
    "identity",
    "api",
    "access",
    "want",
    "set",
    "access",
    "api",
    "scroll",
    "compute",
    "engine",
    "want",
    "select",
    "want",
    "select",
    "read",
    "write",
    "going",
    "leave",
    "rest",
    "scrolling",
    "bottom",
    "want",
    "click",
    "management",
    "security",
    "disks",
    "networking",
    "sold",
    "tenancy",
    "find",
    "option",
    "add",
    "custom",
    "metadata",
    "provide",
    "right",
    "metadata",
    "key",
    "value",
    "pair",
    "going",
    "add",
    "metadata",
    "right",
    "going",
    "scroll",
    "bottom",
    "going",
    "leave",
    "everything",
    "else",
    "simply",
    "click",
    "create",
    "take",
    "moments",
    "instance",
    "created",
    "okay",
    "instance",
    "want",
    "go",
    "ahead",
    "start",
    "querying",
    "metadata",
    "note",
    "metadata",
    "must",
    "queried",
    "instance",
    "ca",
    "done",
    "another",
    "instance",
    "even",
    "cloud",
    "sdk",
    "computer",
    "going",
    "go",
    "ahead",
    "log",
    "instance",
    "using",
    "ssh",
    "okay",
    "logged",
    "instance",
    "want",
    "start",
    "querying",
    "metadata",
    "normally",
    "would",
    "use",
    "tools",
    "like",
    "wget",
    "curl",
    "make",
    "queries",
    "demo",
    "use",
    "curl",
    "know",
    "curl",
    "command",
    "line",
    "tool",
    "transfer",
    "data",
    "server",
    "using",
    "supported",
    "protocols",
    "like",
    "http",
    "ftp",
    "scp",
    "many",
    "tool",
    "fantastic",
    "automation",
    "since",
    "designed",
    "work",
    "without",
    "user",
    "interaction",
    "going",
    "paste",
    "url",
    "going",
    "use",
    "query",
    "instance",
    "metadata",
    "default",
    "url",
    "would",
    "use",
    "query",
    "metadata",
    "instance",
    "getting",
    "little",
    "deeper",
    "trailing",
    "slash",
    "shown",
    "shows",
    "instance",
    "value",
    "actually",
    "directory",
    "values",
    "append",
    "url",
    "whether",
    "directories",
    "endpoint",
    "values",
    "query",
    "metadata",
    "must",
    "provide",
    "following",
    "header",
    "requests",
    "metadata",
    "dash",
    "flavor",
    "colon",
    "google",
    "put",
    "quotations",
    "provide",
    "header",
    "metadata",
    "server",
    "deny",
    "request",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "see",
    "brought",
    "lot",
    "different",
    "values",
    "choose",
    "order",
    "retrieve",
    "different",
    "types",
    "metadata",
    "stated",
    "anything",
    "trailing",
    "slash",
    "actually",
    "directory",
    "values",
    "underneath",
    "wanted",
    "query",
    "network",
    "interfaces",
    "directory",
    "need",
    "make",
    "sure",
    "add",
    "trailing",
    "slash",
    "end",
    "see",
    "network",
    "interface",
    "0",
    "going",
    "go",
    "ahead",
    "query",
    "access",
    "information",
    "network",
    "interface",
    "instance",
    "going",
    "go",
    "ahead",
    "query",
    "network",
    "interface",
    "expected",
    "default",
    "network",
    "displayed",
    "going",
    "quickly",
    "go",
    "ahead",
    "clear",
    "screen",
    "going",
    "go",
    "ahead",
    "query",
    "metadata",
    "time",
    "going",
    "name",
    "server",
    "expected",
    "bowtie",
    "dash",
    "web",
    "server",
    "showed",
    "endpoint",
    "need",
    "trailing",
    "slash",
    "end",
    "going",
    "go",
    "ahead",
    "one",
    "time",
    "going",
    "choose",
    "machine",
    "type",
    "expected",
    "e2",
    "micro",
    "machine",
    "type",
    "displayed",
    "note",
    "noticed",
    "time",
    "query",
    "metadata",
    "show",
    "left",
    "command",
    "prompt",
    "shown",
    "instance",
    "metadata",
    "wanted",
    "query",
    "project",
    "metadata",
    "well",
    "instead",
    "instance",
    "end",
    "would",
    "use",
    "project",
    "trailing",
    "slash",
    "going",
    "simply",
    "click",
    "enter",
    "see",
    "project",
    "give",
    "whole",
    "lot",
    "options",
    "give",
    "important",
    "values",
    "like",
    "project",
    "id",
    "going",
    "simply",
    "query",
    "right",
    "expected",
    "bowtie",
    "inc",
    "displayed",
    "great",
    "example",
    "query",
    "default",
    "metadata",
    "instances",
    "projects",
    "probably",
    "wondering",
    "query",
    "custom",
    "metadata",
    "well",
    "custom",
    "metadata",
    "set",
    "query",
    "attributes",
    "directory",
    "attributes",
    "directory",
    "found",
    "instance",
    "project",
    "metadata",
    "going",
    "go",
    "ahead",
    "show",
    "first",
    "wanted",
    "add",
    "custom",
    "metadata",
    "set",
    "either",
    "console",
    "gcloud",
    "command",
    "line",
    "tool",
    "using",
    "api",
    "going",
    "run",
    "command",
    "gcloud",
    "compute",
    "instances",
    "add",
    "dash",
    "metadata",
    "name",
    "instance",
    "adding",
    "custom",
    "metadata",
    "would",
    "add",
    "flag",
    "dash",
    "dash",
    "metadata",
    "key",
    "value",
    "pair",
    "example",
    "environment",
    "equals",
    "dev",
    "also",
    "going",
    "add",
    "zone",
    "instance",
    "us",
    "east",
    "1a",
    "going",
    "hit",
    "enter",
    "typo",
    "going",
    "go",
    "ahead",
    "try",
    "using",
    "us",
    "east",
    "1b",
    "going",
    "hit",
    "enter",
    "success",
    "verify",
    "command",
    "worked",
    "going",
    "go",
    "ahead",
    "query",
    "instance",
    "going",
    "go",
    "attributes",
    "going",
    "hit",
    "enter",
    "see",
    "environment",
    "endpoint",
    "populated",
    "going",
    "query",
    "expected",
    "dev",
    "displaying",
    "environment",
    "value",
    "wanted",
    "double",
    "check",
    "console",
    "go",
    "console",
    "drill",
    "bowtie",
    "web",
    "server",
    "scroll",
    "bottom",
    "custom",
    "metadata",
    "see",
    "key",
    "value",
    "pair",
    "key",
    "dev",
    "value",
    "many",
    "different",
    "ways",
    "query",
    "metadata",
    "instances",
    "projects",
    "wanted",
    "take",
    "quick",
    "moment",
    "switch",
    "gears",
    "talk",
    "startup",
    "shutdown",
    "scripts",
    "compute",
    "engine",
    "lets",
    "create",
    "run",
    "startup",
    "shutdown",
    "scripts",
    "vm",
    "instance",
    "allows",
    "perform",
    "automation",
    "perform",
    "actions",
    "starting",
    "installing",
    "software",
    "performing",
    "updates",
    "tasks",
    "defined",
    "script",
    "shutting",
    "allow",
    "instances",
    "time",
    "clean",
    "perform",
    "tasks",
    "exporting",
    "logs",
    "cloud",
    "storage",
    "bigquery",
    "syncing",
    "systems",
    "wanted",
    "go",
    "ahead",
    "show",
    "would",
    "work",
    "combining",
    "metadata",
    "script",
    "going",
    "go",
    "ahead",
    "drill",
    "bow",
    "tie",
    "web",
    "server",
    "going",
    "click",
    "edit",
    "going",
    "scroll",
    "custom",
    "metadata",
    "going",
    "click",
    "add",
    "item",
    "key",
    "going",
    "type",
    "startup",
    "dash",
    "script",
    "value",
    "going",
    "paste",
    "script",
    "going",
    "enlarge",
    "second",
    "providing",
    "script",
    "github",
    "repository",
    "break",
    "bash",
    "script",
    "pulling",
    "variable",
    "called",
    "name",
    "query",
    "instance",
    "name",
    "well",
    "variable",
    "called",
    "zone",
    "query",
    "instance",
    "zone",
    "going",
    "installing",
    "apache",
    "web",
    "server",
    "going",
    "display",
    "web",
    "browser",
    "server",
    "name",
    "zone",
    "order",
    "see",
    "web",
    "page",
    "also",
    "need",
    "open",
    "firewall",
    "rules",
    "easy",
    "way",
    "would",
    "scroll",
    "firewalls",
    "simply",
    "click",
    "allow",
    "http",
    "allow",
    "https",
    "traffic",
    "tag",
    "instance",
    "network",
    "tags",
    "http",
    "server",
    "https",
    "server",
    "create",
    "two",
    "separate",
    "firewall",
    "rules",
    "allow",
    "traffic",
    "port",
    "80",
    "port",
    "443",
    "going",
    "leave",
    "everything",
    "else",
    "going",
    "scroll",
    "bottom",
    "click",
    "save",
    "okay",
    "took",
    "seconds",
    "finish",
    "saving",
    "going",
    "go",
    "ahead",
    "go",
    "top",
    "click",
    "reset",
    "perform",
    "hard",
    "reset",
    "instance",
    "allow",
    "startup",
    "script",
    "take",
    "effect",
    "going",
    "click",
    "reset",
    "going",
    "ask",
    "really",
    "want",
    "purposes",
    "demonstration",
    "going",
    "click",
    "reset",
    "please",
    "note",
    "never",
    "production",
    "clean",
    "shutdown",
    "operating",
    "system",
    "instance",
    "nothing",
    "going",
    "simply",
    "click",
    "reset",
    "going",
    "head",
    "back",
    "main",
    "console",
    "vm",
    "instances",
    "going",
    "record",
    "external",
    "ip",
    "going",
    "open",
    "new",
    "browser",
    "going",
    "zoom",
    "better",
    "viewing",
    "going",
    "paste",
    "ip",
    "address",
    "hit",
    "enter",
    "see",
    "used",
    "startup",
    "script",
    "display",
    "web",
    "page",
    "able",
    "bring",
    "metadata",
    "pulled",
    "using",
    "variables",
    "able",
    "display",
    "browser",
    "end",
    "demonstration",
    "wanted",
    "show",
    "another",
    "way",
    "using",
    "startup",
    "script",
    "able",
    "pull",
    "cloud",
    "storage",
    "going",
    "go",
    "back",
    "navigation",
    "menu",
    "going",
    "scroll",
    "storage",
    "create",
    "new",
    "bucket",
    "find",
    "globally",
    "unique",
    "name",
    "name",
    "bucket",
    "going",
    "call",
    "bucket",
    "bowtie",
    "web",
    "server",
    "site",
    "going",
    "leave",
    "rest",
    "default",
    "going",
    "simply",
    "click",
    "create",
    "globally",
    "unique",
    "name",
    "bucket",
    "prompted",
    "page",
    "without",
    "errors",
    "going",
    "go",
    "ahead",
    "upload",
    "script",
    "find",
    "script",
    "github",
    "repository",
    "going",
    "go",
    "repo",
    "going",
    "look",
    "bow",
    "tie",
    "start",
    "final",
    "sh",
    "going",
    "open",
    "script",
    "uploaded",
    "going",
    "drill",
    "file",
    "get",
    "information",
    "need",
    "instance",
    "need",
    "copy",
    "uri",
    "going",
    "copy",
    "clipboard",
    "going",
    "head",
    "back",
    "compute",
    "engine",
    "going",
    "drill",
    "instance",
    "going",
    "click",
    "edit",
    "top",
    "going",
    "scroll",
    "says",
    "custom",
    "metadata",
    "going",
    "remove",
    "startup",
    "script",
    "metadata",
    "going",
    "add",
    "new",
    "item",
    "going",
    "adding",
    "startup",
    "dash",
    "script",
    "dash",
    "url",
    "value",
    "going",
    "paste",
    "uri",
    "copied",
    "way",
    "startup",
    "instance",
    "use",
    "startup",
    "script",
    "cloud",
    "storage",
    "going",
    "scroll",
    "bottom",
    "click",
    "save",
    "going",
    "click",
    "reset",
    "going",
    "reset",
    "going",
    "go",
    "back",
    "main",
    "page",
    "vm",
    "instances",
    "see",
    "external",
    "ip",
    "changed",
    "going",
    "go",
    "back",
    "open",
    "web",
    "browser",
    "going",
    "click",
    "refresh",
    "success",
    "see",
    "taken",
    "whole",
    "bunch",
    "different",
    "variables",
    "including",
    "machine",
    "name",
    "environment",
    "variable",
    "zone",
    "well",
    "project",
    "displayed",
    "simple",
    "website",
    "although",
    "may",
    "find",
    "website",
    "specifically",
    "useful",
    "production",
    "environment",
    "idea",
    "get",
    "creative",
    "using",
    "default",
    "custom",
    "metadata",
    "along",
    "startup",
    "script",
    "seen",
    "environments",
    "people",
    "multiple",
    "web",
    "servers",
    "create",
    "web",
    "page",
    "display",
    "specific",
    "web",
    "servers",
    "different",
    "environments",
    "along",
    "ips",
    "data",
    "configurations",
    "recap",
    "gone",
    "default",
    "custom",
    "metadata",
    "query",
    "instance",
    "also",
    "went",
    "startup",
    "scripts",
    "apply",
    "locally",
    "using",
    "cloud",
    "storage",
    "hope",
    "enjoyed",
    "fun",
    "metadata",
    "using",
    "startup",
    "scripts",
    "one",
    "also",
    "hope",
    "find",
    "fascinating",
    "use",
    "cases",
    "current",
    "environments",
    "go",
    "quick",
    "reminder",
    "delete",
    "resources",
    "created",
    "incur",
    "added",
    "costs",
    "pretty",
    "much",
    "wanted",
    "cover",
    "demonstration",
    "mark",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "discussing",
    "compute",
    "engine",
    "billing",
    "comes",
    "pricing",
    "regards",
    "compute",
    "engine",
    "gone",
    "fact",
    "instances",
    "charged",
    "second",
    "first",
    "minute",
    "never",
    "got",
    "depths",
    "billing",
    "various",
    "ways",
    "save",
    "money",
    "using",
    "compute",
    "engine",
    "lesson",
    "unveiling",
    "costs",
    "discounts",
    "broken",
    "google",
    "cloud",
    "refers",
    "resource",
    "based",
    "billing",
    "model",
    "various",
    "savings",
    "using",
    "compute",
    "engine",
    "said",
    "let",
    "dive",
    "vcpu",
    "gigabyte",
    "memory",
    "compute",
    "engine",
    "built",
    "separately",
    "rather",
    "part",
    "single",
    "machine",
    "type",
    "still",
    "creating",
    "instances",
    "using",
    "machine",
    "types",
    "bill",
    "shows",
    "individual",
    "cpus",
    "memory",
    "used",
    "per",
    "hour",
    "google",
    "refers",
    "billing",
    "get",
    "bit",
    "billing",
    "model",
    "applies",
    "vcpus",
    "gpus",
    "memory",
    "resources",
    "charged",
    "minimum",
    "one",
    "minute",
    "example",
    "run",
    "virtual",
    "machine",
    "30",
    "seconds",
    "billed",
    "one",
    "minute",
    "usage",
    "one",
    "minute",
    "instances",
    "charged",
    "one",
    "second",
    "increments",
    "instance",
    "time",
    "another",
    "determining",
    "factor",
    "cost",
    "measured",
    "number",
    "seconds",
    "start",
    "instance",
    "stop",
    "instance",
    "words",
    "instance",
    "terminated",
    "state",
    "instance",
    "idle",
    "still",
    "state",
    "running",
    "charged",
    "instance",
    "uptime",
    "charged",
    "instance",
    "terminated",
    "state",
    "getting",
    "reservations",
    "designed",
    "reserve",
    "vm",
    "instances",
    "need",
    "create",
    "reservation",
    "reservation",
    "ensures",
    "resources",
    "always",
    "available",
    "use",
    "creation",
    "process",
    "choose",
    "reservation",
    "used",
    "example",
    "choose",
    "reservation",
    "automatically",
    "applied",
    "new",
    "existing",
    "instances",
    "match",
    "reservation",
    "properties",
    "default",
    "behavior",
    "specify",
    "reservation",
    "consumed",
    "specific",
    "instance",
    "cases",
    "vm",
    "instance",
    "use",
    "reservation",
    "properties",
    "exactly",
    "match",
    "properties",
    "reservation",
    "create",
    "reservation",
    "begin",
    "paying",
    "reserved",
    "resources",
    "immediately",
    "remain",
    "available",
    "project",
    "use",
    "indefinitely",
    "reservation",
    "deleted",
    "reservations",
    "great",
    "ensure",
    "project",
    "resources",
    "future",
    "increases",
    "demand",
    "including",
    "planned",
    "unplanned",
    "spikes",
    "backup",
    "disaster",
    "recovery",
    "buffer",
    "planning",
    "growth",
    "longer",
    "need",
    "reservation",
    "simply",
    "delete",
    "reservation",
    "stop",
    "incurring",
    "charges",
    "reservation",
    "like",
    "normal",
    "vms",
    "charged",
    "based",
    "existing",
    "rates",
    "include",
    "sustained",
    "use",
    "discounts",
    "eligible",
    "committed",
    "use",
    "discounts",
    "getting",
    "bit",
    "purchasing",
    "reservations",
    "come",
    "caveats",
    "reservations",
    "apply",
    "compute",
    "engine",
    "data",
    "proc",
    "google",
    "kubernetes",
    "engine",
    "well",
    "reservations",
    "apply",
    "shared",
    "core",
    "machine",
    "types",
    "preemptable",
    "vms",
    "sole",
    "tenant",
    "nodes",
    "cloud",
    "sql",
    "data",
    "flow",
    "explained",
    "vcpu",
    "gigabyte",
    "memory",
    "compute",
    "engine",
    "built",
    "separately",
    "rather",
    "part",
    "single",
    "machine",
    "type",
    "billed",
    "individual",
    "cpus",
    "memory",
    "used",
    "per",
    "hour",
    "pricing",
    "allows",
    "compute",
    "engine",
    "apply",
    "sustained",
    "use",
    "discounts",
    "machine",
    "type",
    "usage",
    "region",
    "collectively",
    "rather",
    "individual",
    "machine",
    "types",
    "way",
    "vcpu",
    "memory",
    "usage",
    "machine",
    "type",
    "receive",
    "one",
    "following",
    "discounts",
    "sustained",
    "use",
    "discounts",
    "committed",
    "use",
    "discounts",
    "preemptable",
    "vms",
    "like",
    "take",
    "moment",
    "dive",
    "bit",
    "detail",
    "discount",
    "types",
    "starting",
    "sustained",
    "use",
    "discounts",
    "sustained",
    "use",
    "discounts",
    "automatic",
    "discounts",
    "running",
    "specific",
    "compute",
    "engine",
    "resources",
    "significant",
    "portion",
    "billing",
    "month",
    "example",
    "run",
    "one",
    "resources",
    "25",
    "percent",
    "month",
    "compute",
    "engine",
    "automatically",
    "gives",
    "discount",
    "every",
    "incremental",
    "minute",
    "use",
    "instance",
    "following",
    "tables",
    "show",
    "discounts",
    "applied",
    "specific",
    "resources",
    "described",
    "table",
    "left",
    "general",
    "purpose",
    "n2",
    "n2d",
    "predefined",
    "custom",
    "machine",
    "types",
    "compute",
    "optimized",
    "machine",
    "types",
    "receive",
    "discount",
    "20",
    "percent",
    "table",
    "right",
    "shows",
    "general",
    "purpose",
    "n1",
    "predefined",
    "custom",
    "machine",
    "types",
    "well",
    "sole",
    "tenant",
    "nodes",
    "gpus",
    "get",
    "discount",
    "30",
    "percent",
    "sustained",
    "use",
    "discounts",
    "applied",
    "automatically",
    "usage",
    "within",
    "project",
    "separately",
    "region",
    "action",
    "required",
    "part",
    "enable",
    "discounts",
    "notes",
    "wanted",
    "cover",
    "sustained",
    "use",
    "discounts",
    "automatically",
    "apply",
    "vms",
    "created",
    "google",
    "kubernetes",
    "engine",
    "compute",
    "engine",
    "well",
    "apply",
    "vms",
    "created",
    "using",
    "app",
    "engine",
    "flexible",
    "environment",
    "well",
    "data",
    "flow",
    "machine",
    "types",
    "sustained",
    "use",
    "discounts",
    "applied",
    "incremental",
    "use",
    "reach",
    "certain",
    "usage",
    "thresholds",
    "means",
    "pay",
    "number",
    "minutes",
    "use",
    "instance",
    "compute",
    "engine",
    "automatically",
    "gives",
    "best",
    "price",
    "google",
    "truly",
    "believes",
    "reason",
    "run",
    "instance",
    "longer",
    "need",
    "sustained",
    "use",
    "discounts",
    "applied",
    "incremental",
    "use",
    "reach",
    "certain",
    "usage",
    "thresholds",
    "means",
    "pay",
    "number",
    "minutes",
    "use",
    "instance",
    "compute",
    "engine",
    "automatically",
    "gives",
    "best",
    "price",
    "consider",
    "scenario",
    "two",
    "instances",
    "sole",
    "tenant",
    "nodes",
    "region",
    "different",
    "machine",
    "types",
    "run",
    "different",
    "times",
    "month",
    "compute",
    "engine",
    "breaks",
    "number",
    "vcpus",
    "amount",
    "memory",
    "used",
    "across",
    "instances",
    "use",
    "predefined",
    "machine",
    "types",
    "combines",
    "resources",
    "qualify",
    "largest",
    "sustained",
    "usage",
    "discounts",
    "possible",
    "example",
    "assume",
    "run",
    "following",
    "two",
    "instances",
    "us",
    "east",
    "one",
    "region",
    "month",
    "first",
    "half",
    "run",
    "n1",
    "standard",
    "four",
    "instance",
    "four",
    "vcpus",
    "15",
    "gigabytes",
    "memory",
    "second",
    "half",
    "month",
    "run",
    "larger",
    "one",
    "standard",
    "16",
    "instance",
    "16",
    "vcpus",
    "60",
    "gigabytes",
    "memory",
    "scenario",
    "compute",
    "engine",
    "reorganizes",
    "machine",
    "types",
    "individual",
    "vcpu",
    "memory",
    "resources",
    "combines",
    "usage",
    "create",
    "following",
    "resources",
    "vcpus",
    "four",
    "vcpus",
    "used",
    "whole",
    "month",
    "discount",
    "would",
    "thirty",
    "percent",
    "additional",
    "twelve",
    "vcpus",
    "added",
    "week",
    "two",
    "month",
    "12",
    "vcpus",
    "would",
    "receive",
    "10",
    "discount",
    "discounts",
    "applied",
    "comes",
    "sustained",
    "use",
    "discounts",
    "moving",
    "next",
    "discount",
    "type",
    "committed",
    "use",
    "discounts",
    "compute",
    "engine",
    "lets",
    "purchase",
    "committed",
    "use",
    "contracts",
    "return",
    "deeply",
    "discounted",
    "prices",
    "vm",
    "usage",
    "purchase",
    "committed",
    "use",
    "contract",
    "purchase",
    "compute",
    "resource",
    "comprised",
    "vcpus",
    "memory",
    "gpus",
    "local",
    "ssds",
    "purchase",
    "resources",
    "discounted",
    "price",
    "return",
    "committing",
    "paying",
    "resources",
    "one",
    "year",
    "three",
    "years",
    "committed",
    "use",
    "discounts",
    "ideal",
    "workloads",
    "predictable",
    "resource",
    "needs",
    "know",
    "exactly",
    "going",
    "use",
    "committed",
    "use",
    "discounts",
    "would",
    "great",
    "option",
    "discount",
    "57",
    "resources",
    "like",
    "machine",
    "types",
    "gpus",
    "comes",
    "memory",
    "optimized",
    "machine",
    "types",
    "discount",
    "70",
    "percent",
    "purchase",
    "committed",
    "use",
    "contract",
    "purchase",
    "single",
    "project",
    "applies",
    "single",
    "project",
    "default",
    "purchase",
    "multiple",
    "contracts",
    "share",
    "across",
    "many",
    "projects",
    "enabling",
    "shared",
    "discounts",
    "purchased",
    "billed",
    "monthly",
    "resources",
    "purchased",
    "duration",
    "term",
    "selected",
    "whether",
    "use",
    "services",
    "multiple",
    "projects",
    "share",
    "cloud",
    "billing",
    "account",
    "enable",
    "committed",
    "use",
    "discount",
    "sharing",
    "projects",
    "within",
    "cloud",
    "billing",
    "account",
    "share",
    "committed",
    "use",
    "discount",
    "contracts",
    "sustained",
    "use",
    "discounts",
    "also",
    "pooled",
    "time",
    "caveats",
    "comes",
    "committed",
    "use",
    "discounts",
    "shared",
    "core",
    "machines",
    "excluded",
    "well",
    "purchase",
    "commitments",
    "per",
    "region",
    "basis",
    "reservation",
    "attached",
    "committed",
    "use",
    "discount",
    "reservation",
    "ca",
    "deleted",
    "duration",
    "commitment",
    "please",
    "aware",
    "purchase",
    "commitment",
    "gpus",
    "local",
    "ssds",
    "must",
    "purchase",
    "general",
    "purpose",
    "one",
    "commitment",
    "lastly",
    "create",
    "commitment",
    "cancel",
    "must",
    "pay",
    "agreed",
    "upon",
    "monthly",
    "amount",
    "duration",
    "commitment",
    "committed",
    "use",
    "discount",
    "recommendations",
    "give",
    "opportunities",
    "optimize",
    "compute",
    "costs",
    "analyzing",
    "vm",
    "spending",
    "trends",
    "without",
    "committed",
    "use",
    "discount",
    "contract",
    "comparing",
    "numbers",
    "see",
    "much",
    "save",
    "month",
    "committed",
    "use",
    "contract",
    "found",
    "recommendations",
    "tab",
    "home",
    "page",
    "console",
    "wanted",
    "move",
    "last",
    "discount",
    "type",
    "preemptable",
    "vms",
    "preemptable",
    "vms",
    "eighty",
    "percent",
    "cheaper",
    "regular",
    "instances",
    "pricing",
    "fixed",
    "never",
    "worry",
    "variable",
    "pricing",
    "prices",
    "found",
    "link",
    "instance",
    "pricing",
    "included",
    "lesson",
    "text",
    "preemptable",
    "vm",
    "instance",
    "create",
    "run",
    "much",
    "lower",
    "price",
    "normal",
    "instances",
    "however",
    "compute",
    "engine",
    "might",
    "stop",
    "preempt",
    "instances",
    "requires",
    "access",
    "resources",
    "tasks",
    "preemptable",
    "instances",
    "access",
    "compute",
    "engine",
    "capacity",
    "availability",
    "varies",
    "usage",
    "generally",
    "compute",
    "engine",
    "avoids",
    "preempting",
    "instances",
    "compute",
    "engine",
    "use",
    "instant",
    "cpu",
    "usage",
    "behavior",
    "determine",
    "whether",
    "preempt",
    "crucial",
    "characteristic",
    "know",
    "preemptable",
    "vms",
    "compute",
    "engine",
    "always",
    "stops",
    "run",
    "24",
    "hours",
    "something",
    "aware",
    "exam",
    "preemptable",
    "instances",
    "finite",
    "compute",
    "engine",
    "resources",
    "might",
    "always",
    "available",
    "happen",
    "accidentally",
    "spin",
    "preemptable",
    "vm",
    "want",
    "shut",
    "charge",
    "running",
    "less",
    "10",
    "minutes",
    "another",
    "thing",
    "note",
    "preemptable",
    "instances",
    "ca",
    "live",
    "migrate",
    "regular",
    "vm",
    "instance",
    "set",
    "automatically",
    "restart",
    "maintenance",
    "event",
    "due",
    "limitations",
    "preemptable",
    "instances",
    "covered",
    "service",
    "level",
    "agreement",
    "comes",
    "google",
    "cloud",
    "free",
    "tier",
    "credits",
    "compute",
    "engine",
    "apply",
    "preemptable",
    "instances",
    "probably",
    "asking",
    "great",
    "time",
    "use",
    "preemptable",
    "vms",
    "well",
    "apps",
    "fault",
    "tolerant",
    "withstand",
    "possible",
    "instance",
    "preemptions",
    "preemptable",
    "instances",
    "reduce",
    "compute",
    "engine",
    "costs",
    "significantly",
    "example",
    "batch",
    "processing",
    "jobs",
    "run",
    "preemptable",
    "instances",
    "instances",
    "stop",
    "processing",
    "job",
    "slows",
    "completely",
    "stop",
    "preemptable",
    "instances",
    "create",
    "batch",
    "processing",
    "tasks",
    "without",
    "placing",
    "additional",
    "workload",
    "existing",
    "instances",
    "without",
    "requiring",
    "pay",
    "full",
    "price",
    "additional",
    "normal",
    "instances",
    "since",
    "containers",
    "naturally",
    "stateless",
    "fault",
    "tolerant",
    "makes",
    "containers",
    "amazing",
    "fit",
    "preemptable",
    "vms",
    "running",
    "preemptable",
    "vms",
    "google",
    "kubernetes",
    "engine",
    "another",
    "fantastic",
    "use",
    "case",
    "really",
    "critical",
    "understanding",
    "different",
    "discount",
    "type",
    "good",
    "time",
    "use",
    "may",
    "presented",
    "different",
    "solutions",
    "exam",
    "understanding",
    "discount",
    "types",
    "prepare",
    "answer",
    "understanding",
    "theory",
    "behind",
    "pricing",
    "model",
    "available",
    "discount",
    "types",
    "along",
    "types",
    "workloads",
    "good",
    "guarantee",
    "become",
    "familiar",
    "types",
    "questions",
    "asked",
    "exam",
    "also",
    "make",
    "better",
    "cloud",
    "engineer",
    "able",
    "spot",
    "save",
    "money",
    "able",
    "make",
    "appropriate",
    "changes",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "compute",
    "engine",
    "billing",
    "discount",
    "types",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "going",
    "covering",
    "fundamentals",
    "pertains",
    "storage",
    "concepts",
    "needed",
    "know",
    "order",
    "fully",
    "understand",
    "different",
    "google",
    "cloud",
    "storage",
    "options",
    "diving",
    "later",
    "well",
    "exam",
    "expects",
    "know",
    "different",
    "types",
    "storage",
    "available",
    "various",
    "services",
    "get",
    "different",
    "types",
    "storage",
    "wanted",
    "cover",
    "underlying",
    "theory",
    "behind",
    "said",
    "let",
    "dive",
    "wanted",
    "start",
    "going",
    "three",
    "types",
    "storage",
    "data",
    "presented",
    "user",
    "server",
    "block",
    "storage",
    "file",
    "storage",
    "object",
    "storage",
    "types",
    "storage",
    "tie",
    "available",
    "services",
    "available",
    "google",
    "cloud",
    "offer",
    "different",
    "options",
    "different",
    "types",
    "workloads",
    "going",
    "bit",
    "depth",
    "first",
    "one",
    "wanted",
    "touch",
    "block",
    "storage",
    "block",
    "storage",
    "sometimes",
    "referred",
    "block",
    "level",
    "storage",
    "technology",
    "used",
    "store",
    "data",
    "files",
    "storage",
    "systems",
    "storage",
    "environments",
    "block",
    "storage",
    "fastest",
    "available",
    "storage",
    "type",
    "also",
    "efficient",
    "reliable",
    "block",
    "storage",
    "files",
    "split",
    "evenly",
    "sized",
    "blocks",
    "data",
    "unique",
    "identifier",
    "presented",
    "operating",
    "system",
    "structureless",
    "raw",
    "data",
    "form",
    "logical",
    "volume",
    "hard",
    "drive",
    "operating",
    "system",
    "structures",
    "file",
    "system",
    "like",
    "ext3",
    "ext4",
    "linux",
    "ntfs",
    "windows",
    "would",
    "mount",
    "volume",
    "drive",
    "root",
    "volume",
    "linux",
    "c",
    "drive",
    "windows",
    "block",
    "storage",
    "usually",
    "delivered",
    "physical",
    "media",
    "case",
    "google",
    "cloud",
    "delivered",
    "either",
    "spinning",
    "hard",
    "drives",
    "solid",
    "state",
    "drives",
    "google",
    "cloud",
    "presented",
    "block",
    "storage",
    "consists",
    "either",
    "persistent",
    "disks",
    "local",
    "ssd",
    "mountable",
    "bootable",
    "block",
    "storage",
    "volumes",
    "used",
    "boot",
    "volumes",
    "compute",
    "instances",
    "google",
    "cloud",
    "installed",
    "operating",
    "system",
    "choice",
    "structured",
    "operating",
    "system",
    "database",
    "application",
    "able",
    "consume",
    "moving",
    "second",
    "type",
    "storage",
    "file",
    "storage",
    "file",
    "storage",
    "also",
    "referred",
    "file",
    "level",
    "file",
    "based",
    "storage",
    "normally",
    "storage",
    "presented",
    "users",
    "applications",
    "traditional",
    "network",
    "file",
    "system",
    "words",
    "user",
    "application",
    "receives",
    "data",
    "directory",
    "trees",
    "folders",
    "files",
    "file",
    "storage",
    "also",
    "allows",
    "functions",
    "similarly",
    "local",
    "hard",
    "drive",
    "however",
    "structure",
    "already",
    "applied",
    "adjusted",
    "fact",
    "type",
    "structure",
    "capabilities",
    "mountable",
    "bootable",
    "install",
    "operating",
    "system",
    "file",
    "storage",
    "said",
    "structure",
    "already",
    "put",
    "place",
    "ready",
    "application",
    "consume",
    "due",
    "structure",
    "service",
    "serving",
    "file",
    "system",
    "underlying",
    "software",
    "handle",
    "access",
    "rights",
    "file",
    "sharing",
    "file",
    "locking",
    "controls",
    "related",
    "file",
    "storage",
    "google",
    "cloud",
    "service",
    "serves",
    "type",
    "storage",
    "known",
    "cloud",
    "file",
    "store",
    "usually",
    "presented",
    "network",
    "users",
    "vpc",
    "network",
    "using",
    "nfs",
    "protocol",
    "case",
    "nfs",
    "version",
    "diving",
    "little",
    "bit",
    "later",
    "last",
    "storage",
    "type",
    "wanted",
    "cover",
    "object",
    "storage",
    "object",
    "storage",
    "also",
    "referred",
    "storage",
    "general",
    "term",
    "refers",
    "way",
    "organize",
    "work",
    "units",
    "storage",
    "called",
    "objects",
    "storage",
    "type",
    "flat",
    "collection",
    "unstructured",
    "data",
    "type",
    "storage",
    "holds",
    "structure",
    "like",
    "two",
    "types",
    "storage",
    "made",
    "three",
    "characteristics",
    "first",
    "one",
    "data",
    "could",
    "anything",
    "movies",
    "songs",
    "even",
    "photos",
    "men",
    "fancy",
    "bow",
    "ties",
    "data",
    "could",
    "also",
    "binary",
    "data",
    "well",
    "second",
    "characteristic",
    "metadata",
    "usually",
    "related",
    "contextual",
    "information",
    "data",
    "anything",
    "relevant",
    "data",
    "third",
    "characteristic",
    "globally",
    "unique",
    "identifier",
    "way",
    "possible",
    "find",
    "data",
    "without",
    "know",
    "physical",
    "location",
    "data",
    "allows",
    "object",
    "storage",
    "infinitely",
    "scalable",
    "matter",
    "object",
    "stored",
    "type",
    "storage",
    "found",
    "google",
    "cloud",
    "known",
    "cloud",
    "storage",
    "cloud",
    "storage",
    "flat",
    "storage",
    "logical",
    "container",
    "called",
    "bucket",
    "put",
    "objects",
    "although",
    "type",
    "storage",
    "bootable",
    "using",
    "open",
    "source",
    "tool",
    "called",
    "fuse",
    "storage",
    "type",
    "mounted",
    "google",
    "cloud",
    "covering",
    "little",
    "bit",
    "later",
    "cloud",
    "storage",
    "lesson",
    "cases",
    "object",
    "store",
    "designed",
    "type",
    "storage",
    "bootable",
    "mountable",
    "characteristics",
    "storage",
    "allows",
    "object",
    "storage",
    "infinitely",
    "scalable",
    "three",
    "main",
    "types",
    "storage",
    "need",
    "know",
    "understand",
    "use",
    "cases",
    "looking",
    "high",
    "performance",
    "storage",
    "always",
    "look",
    "block",
    "storage",
    "satisfy",
    "needs",
    "looking",
    "share",
    "files",
    "across",
    "multiple",
    "systems",
    "multiple",
    "applications",
    "need",
    "access",
    "files",
    "directories",
    "file",
    "storage",
    "might",
    "best",
    "bet",
    "looking",
    "store",
    "terabytes",
    "pictures",
    "web",
    "application",
    "want",
    "worry",
    "scaling",
    "object",
    "storage",
    "allow",
    "read",
    "write",
    "infinite",
    "amount",
    "pictures",
    "meet",
    "requirements",
    "covered",
    "storage",
    "types",
    "let",
    "take",
    "moments",
    "discuss",
    "storage",
    "performance",
    "terms",
    "discussing",
    "storage",
    "performance",
    "key",
    "terms",
    "understand",
    "used",
    "together",
    "define",
    "performance",
    "storage",
    "first",
    "io",
    "stands",
    "input",
    "output",
    "single",
    "read",
    "write",
    "request",
    "measured",
    "block",
    "size",
    "block",
    "size",
    "vary",
    "anywhere",
    "one",
    "kilobyte",
    "four",
    "megabytes",
    "beyond",
    "depending",
    "workload",
    "q",
    "depth",
    "comes",
    "storage",
    "number",
    "pending",
    "input",
    "output",
    "requests",
    "waiting",
    "performed",
    "disk",
    "io",
    "requests",
    "become",
    "queued",
    "reads",
    "writes",
    "requested",
    "faster",
    "processed",
    "disk",
    "io",
    "requests",
    "queued",
    "total",
    "amount",
    "time",
    "takes",
    "read",
    "write",
    "data",
    "disk",
    "becomes",
    "significantly",
    "higher",
    "performance",
    "degradation",
    "occur",
    "queue",
    "depth",
    "must",
    "adjusted",
    "accordingly",
    "next",
    "term",
    "common",
    "touch",
    "point",
    "comes",
    "discussing",
    "storage",
    "performance",
    "gcp",
    "exam",
    "iops",
    "metric",
    "stands",
    "input",
    "output",
    "operations",
    "per",
    "second",
    "value",
    "indicates",
    "many",
    "different",
    "input",
    "output",
    "operations",
    "device",
    "group",
    "devices",
    "perform",
    "one",
    "second",
    "value",
    "iops",
    "signifies",
    "capability",
    "executing",
    "operations",
    "per",
    "second",
    "common",
    "touch",
    "point",
    "diving",
    "little",
    "bit",
    "later",
    "next",
    "throughput",
    "speed",
    "data",
    "transferred",
    "second",
    "commonly",
    "measured",
    "megabytes",
    "per",
    "second",
    "going",
    "another",
    "common",
    "topic",
    "comes",
    "frequently",
    "discussing",
    "storage",
    "gcp",
    "well",
    "latency",
    "measurement",
    "delay",
    "time",
    "data",
    "requested",
    "data",
    "starts",
    "returned",
    "measured",
    "milliseconds",
    "time",
    "io",
    "request",
    "take",
    "complete",
    "results",
    "average",
    "latency",
    "last",
    "two",
    "terms",
    "wanted",
    "bring",
    "sequential",
    "random",
    "access",
    "sequential",
    "would",
    "large",
    "single",
    "file",
    "like",
    "video",
    "random",
    "access",
    "would",
    "loading",
    "application",
    "operating",
    "system",
    "lots",
    "little",
    "files",
    "place",
    "obvious",
    "accessing",
    "data",
    "randomly",
    "much",
    "slower",
    "less",
    "efficient",
    "accessing",
    "sequentially",
    "also",
    "affect",
    "performance",
    "bring",
    "terms",
    "calculating",
    "average",
    "throughput",
    "give",
    "holistic",
    "view",
    "storage",
    "performance",
    "characteristics",
    "play",
    "part",
    "defining",
    "performance",
    "storage",
    "one",
    "specific",
    "characteristic",
    "responsible",
    "disk",
    "performance",
    "role",
    "achieving",
    "highest",
    "performance",
    "possible",
    "selected",
    "storage",
    "know",
    "lot",
    "theory",
    "take",
    "start",
    "make",
    "sense",
    "dive",
    "parts",
    "course",
    "discuss",
    "disk",
    "performance",
    "characteristics",
    "relates",
    "compute",
    "engine",
    "services",
    "use",
    "storage",
    "crucial",
    "know",
    "storage",
    "types",
    "well",
    "performance",
    "characteristics",
    "bring",
    "clarity",
    "questions",
    "exam",
    "also",
    "give",
    "better",
    "sense",
    "increase",
    "storage",
    "performance",
    "work",
    "environment",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "storage",
    "types",
    "storage",
    "performance",
    "pertains",
    "storage",
    "whole",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "covering",
    "persistent",
    "disks",
    "local",
    "ssds",
    "going",
    "getting",
    "detail",
    "commonly",
    "used",
    "storage",
    "types",
    "instances",
    "persistent",
    "disks",
    "local",
    "ssds",
    "lesson",
    "sift",
    "different",
    "types",
    "persistent",
    "disks",
    "local",
    "ssds",
    "along",
    "performance",
    "knowing",
    "type",
    "disk",
    "use",
    "instance",
    "increase",
    "disk",
    "performance",
    "shows",
    "exam",
    "want",
    "make",
    "sure",
    "cover",
    "detail",
    "leave",
    "stone",
    "unturned",
    "said",
    "let",
    "dive",
    "persistent",
    "disks",
    "local",
    "ssds",
    "two",
    "available",
    "types",
    "block",
    "storage",
    "devices",
    "available",
    "google",
    "cloud",
    "determining",
    "factor",
    "use",
    "particular",
    "scenario",
    "depend",
    "use",
    "case",
    "specific",
    "characteristics",
    "require",
    "storage",
    "medium",
    "default",
    "compute",
    "engine",
    "instance",
    "single",
    "boot",
    "persistent",
    "disk",
    "contains",
    "operating",
    "system",
    "require",
    "additional",
    "storage",
    "space",
    "add",
    "one",
    "additional",
    "persistent",
    "disks",
    "local",
    "ssds",
    "instance",
    "going",
    "storage",
    "options",
    "along",
    "characteristics",
    "see",
    "persistent",
    "disks",
    "local",
    "ssds",
    "come",
    "slew",
    "different",
    "types",
    "well",
    "persistent",
    "disks",
    "available",
    "zonal",
    "regional",
    "options",
    "starting",
    "persistent",
    "disks",
    "three",
    "different",
    "types",
    "choose",
    "well",
    "flexibility",
    "choosing",
    "two",
    "different",
    "geographic",
    "options",
    "comes",
    "redundancy",
    "persistent",
    "disks",
    "covering",
    "zonal",
    "regional",
    "options",
    "detail",
    "bit",
    "persistent",
    "disks",
    "durable",
    "network",
    "storage",
    "devices",
    "instances",
    "access",
    "like",
    "physical",
    "disks",
    "computer",
    "physically",
    "attached",
    "disks",
    "network",
    "disks",
    "connected",
    "google",
    "internal",
    "network",
    "persistent",
    "disks",
    "independent",
    "instance",
    "persist",
    "instance",
    "terminated",
    "done",
    "turning",
    "flag",
    "upon",
    "creation",
    "even",
    "detach",
    "disk",
    "move",
    "instances",
    "need",
    "scaling",
    "persistent",
    "disks",
    "done",
    "automatically",
    "fly",
    "using",
    "disk",
    "resize",
    "feature",
    "gives",
    "flexibility",
    "resize",
    "current",
    "persistent",
    "disks",
    "downtime",
    "even",
    "add",
    "additional",
    "disks",
    "instance",
    "additional",
    "performance",
    "storage",
    "persistent",
    "disks",
    "also",
    "encrypted",
    "default",
    "google",
    "also",
    "gives",
    "option",
    "using",
    "custom",
    "keys",
    "persistent",
    "disk",
    "64",
    "terabytes",
    "size",
    "instances",
    "128",
    "persistent",
    "disks",
    "257",
    "terabytes",
    "total",
    "persistent",
    "disk",
    "space",
    "attached",
    "note",
    "share",
    "core",
    "machine",
    "types",
    "limited",
    "16",
    "persistent",
    "disks",
    "3",
    "terabytes",
    "total",
    "persistent",
    "disk",
    "space",
    "gone",
    "details",
    "persistent",
    "disks",
    "wanted",
    "dive",
    "two",
    "geographic",
    "options",
    "available",
    "persistent",
    "disks",
    "first",
    "starting",
    "zonal",
    "zonal",
    "persistent",
    "disks",
    "disks",
    "available",
    "one",
    "zone",
    "one",
    "region",
    "disks",
    "commonly",
    "used",
    "persistent",
    "disks",
    "general",
    "usage",
    "used",
    "whose",
    "workloads",
    "sensitive",
    "specific",
    "zone",
    "outages",
    "redundant",
    "within",
    "zone",
    "created",
    "survive",
    "outage",
    "zone",
    "may",
    "subjected",
    "data",
    "loss",
    "specific",
    "zone",
    "affected",
    "snapshots",
    "part",
    "high",
    "availability",
    "strategy",
    "using",
    "zonal",
    "persistent",
    "disks",
    "snapshots",
    "incremental",
    "taken",
    "even",
    "snapshot",
    "disks",
    "attached",
    "running",
    "instances",
    "going",
    "detail",
    "snapshots",
    "later",
    "lesson",
    "zonal",
    "persistent",
    "disks",
    "also",
    "used",
    "machine",
    "type",
    "including",
    "shared",
    "core",
    "custom",
    "machine",
    "types",
    "comes",
    "regional",
    "persistent",
    "disks",
    "storage",
    "qualities",
    "similar",
    "zonal",
    "persistent",
    "disks",
    "however",
    "regional",
    "persistent",
    "disks",
    "provide",
    "durable",
    "storage",
    "replication",
    "data",
    "two",
    "zones",
    "region",
    "designing",
    "systems",
    "require",
    "high",
    "availability",
    "compute",
    "engine",
    "use",
    "regional",
    "persistent",
    "disks",
    "combined",
    "snapshots",
    "durability",
    "regional",
    "persistent",
    "disks",
    "also",
    "designed",
    "work",
    "regional",
    "managed",
    "instance",
    "groups",
    "unlikely",
    "event",
    "zonal",
    "outage",
    "usually",
    "fail",
    "workload",
    "running",
    "regional",
    "persistent",
    "disks",
    "another",
    "zone",
    "simply",
    "using",
    "force",
    "attached",
    "flag",
    "regional",
    "persistent",
    "disks",
    "slower",
    "zonal",
    "persistent",
    "disks",
    "taken",
    "consideration",
    "write",
    "performance",
    "less",
    "critical",
    "data",
    "redundancy",
    "across",
    "multiple",
    "zones",
    "noting",
    "couple",
    "caveats",
    "comes",
    "disk",
    "limits",
    "regional",
    "persistent",
    "disks",
    "similar",
    "zonal",
    "persistent",
    "disks",
    "however",
    "regional",
    "standard",
    "persistent",
    "disks",
    "200",
    "gigabyte",
    "size",
    "minimum",
    "may",
    "major",
    "factor",
    "comes",
    "cost",
    "please",
    "aware",
    "well",
    "ca",
    "use",
    "regional",
    "persistent",
    "disks",
    "memory",
    "optimized",
    "machine",
    "types",
    "compute",
    "optimized",
    "machine",
    "types",
    "two",
    "geographic",
    "options",
    "available",
    "three",
    "persistent",
    "disk",
    "types",
    "whose",
    "characteristics",
    "dive",
    "starting",
    "standard",
    "persistent",
    "disk",
    "type",
    "also",
    "known",
    "google",
    "cloud",
    "pd",
    "standard",
    "persistent",
    "disks",
    "backed",
    "standard",
    "hard",
    "disk",
    "drives",
    "standard",
    "spinning",
    "hard",
    "disk",
    "drives",
    "allows",
    "google",
    "cloud",
    "give",
    "cost",
    "effective",
    "solution",
    "specific",
    "needs",
    "standard",
    "persistent",
    "disks",
    "great",
    "large",
    "data",
    "processing",
    "workloads",
    "primarily",
    "use",
    "sequential",
    "ios",
    "explained",
    "earlier",
    "sequential",
    "access",
    "would",
    "accessing",
    "larger",
    "files",
    "would",
    "require",
    "less",
    "work",
    "hard",
    "drive",
    "thus",
    "decreasing",
    "latency",
    "physical",
    "moving",
    "parts",
    "hard",
    "drive",
    "would",
    "allow",
    "disc",
    "least",
    "amount",
    "work",
    "possible",
    "therefore",
    "making",
    "efficient",
    "possible",
    "therefore",
    "sequential",
    "ios",
    "best",
    "suited",
    "type",
    "persistent",
    "disk",
    "lowest",
    "price",
    "persistent",
    "disks",
    "persistent",
    "disk",
    "types",
    "stepping",
    "performance",
    "standard",
    "persistent",
    "disks",
    "second",
    "please",
    "remember",
    "iops",
    "throughput",
    "performance",
    "depends",
    "disk",
    "size",
    "instance",
    "vcpu",
    "count",
    "block",
    "size",
    "among",
    "factors",
    "table",
    "along",
    "subsequent",
    "tables",
    "see",
    "later",
    "average",
    "speeds",
    "google",
    "deemed",
    "optimum",
    "specific",
    "disk",
    "types",
    "cover",
    "maximum",
    "sustained",
    "iops",
    "well",
    "maximum",
    "sustained",
    "throughput",
    "along",
    "granular",
    "breakdown",
    "see",
    "differences",
    "zonal",
    "regional",
    "standard",
    "pd",
    "see",
    "table",
    "zonal",
    "standard",
    "pd",
    "regional",
    "standard",
    "pd",
    "pretty",
    "much",
    "comes",
    "metrics",
    "look",
    "closely",
    "read",
    "iops",
    "per",
    "instance",
    "differ",
    "zonal",
    "standard",
    "pd",
    "higher",
    "read",
    "iops",
    "per",
    "instance",
    "regional",
    "standard",
    "pd",
    "regional",
    "standard",
    "pd",
    "accessing",
    "two",
    "different",
    "disks",
    "two",
    "separate",
    "zones",
    "latency",
    "higher",
    "thing",
    "goes",
    "right",
    "throughput",
    "per",
    "instance",
    "would",
    "decision",
    "high",
    "availability",
    "versus",
    "speed",
    "moving",
    "next",
    "type",
    "persistent",
    "disk",
    "balanced",
    "persistent",
    "disk",
    "google",
    "cloud",
    "known",
    "pd",
    "balance",
    "disk",
    "type",
    "alternative",
    "ssd",
    "persistent",
    "disks",
    "balance",
    "performance",
    "cost",
    "disk",
    "type",
    "maximum",
    "iops",
    "ssd",
    "persistent",
    "disk",
    "type",
    "holds",
    "lower",
    "iops",
    "per",
    "gigabyte",
    "disk",
    "designed",
    "general",
    "purpose",
    "use",
    "price",
    "disk",
    "also",
    "falls",
    "standard",
    "ssd",
    "persistent",
    "disks",
    "basically",
    "middle",
    "road",
    "disk",
    "trying",
    "decide",
    "price",
    "speed",
    "moving",
    "straight",
    "performance",
    "put",
    "standard",
    "pd",
    "metric",
    "see",
    "comparison",
    "balance",
    "pd",
    "standard",
    "pd",
    "see",
    "comes",
    "metrics",
    "maximum",
    "sustained",
    "iops",
    "balance",
    "pd",
    "significantly",
    "higher",
    "standard",
    "pd",
    "zonal",
    "regional",
    "options",
    "well",
    "looking",
    "maximum",
    "sustained",
    "throughput",
    "read",
    "write",
    "throughput",
    "per",
    "gigabyte",
    "little",
    "two",
    "times",
    "faster",
    "right",
    "throughput",
    "per",
    "instance",
    "three",
    "times",
    "faster",
    "quite",
    "bit",
    "jump",
    "standard",
    "pd",
    "balance",
    "pd",
    "moving",
    "last",
    "persistent",
    "disk",
    "type",
    "ssd",
    "persistent",
    "disk",
    "type",
    "also",
    "known",
    "google",
    "cloud",
    "pd",
    "ssd",
    "fastest",
    "persistent",
    "disks",
    "available",
    "great",
    "enterprise",
    "applications",
    "high",
    "performance",
    "databases",
    "demand",
    "lower",
    "latency",
    "iops",
    "would",
    "great",
    "transactional",
    "databases",
    "applications",
    "require",
    "demanding",
    "near",
    "performance",
    "pd",
    "ssds",
    "single",
    "digit",
    "millisecond",
    "latency",
    "comes",
    "higher",
    "cost",
    "therefore",
    "highest",
    "price",
    "persistent",
    "disk",
    "moving",
    "performance",
    "persistent",
    "disk",
    "disk",
    "type",
    "five",
    "times",
    "faster",
    "comes",
    "read",
    "iops",
    "per",
    "gigabyte",
    "balance",
    "pd",
    "well",
    "five",
    "times",
    "faster",
    "right",
    "iops",
    "per",
    "gigabyte",
    "table",
    "left",
    "shows",
    "performance",
    "pd",
    "ssd",
    "table",
    "right",
    "shows",
    "performance",
    "standard",
    "pd",
    "balance",
    "pd",
    "see",
    "difference",
    "moving",
    "standard",
    "pd",
    "ssd",
    "pd",
    "read",
    "write",
    "throughput",
    "per",
    "instance",
    "stays",
    "standard",
    "pd",
    "way",
    "ssd",
    "pd",
    "ssd",
    "outperforms",
    "ones",
    "read",
    "write",
    "throughput",
    "per",
    "gigabyte",
    "one",
    "half",
    "times",
    "faster",
    "balance",
    "pd",
    "four",
    "times",
    "faster",
    "standard",
    "pd",
    "also",
    "notice",
    "drop",
    "performance",
    "zonal",
    "option",
    "regional",
    "option",
    "end",
    "part",
    "one",
    "lesson",
    "started",
    "get",
    "little",
    "bit",
    "long",
    "whenever",
    "ready",
    "join",
    "part",
    "two",
    "starting",
    "immediately",
    "end",
    "part",
    "one",
    "complete",
    "video",
    "see",
    "next",
    "music",
    "welcome",
    "back",
    "part",
    "two",
    "persistent",
    "disks",
    "local",
    "ssds",
    "lesson",
    "starting",
    "exactly",
    "left",
    "part",
    "one",
    "said",
    "let",
    "dive",
    "covered",
    "persistent",
    "disk",
    "types",
    "wanted",
    "move",
    "discussing",
    "characteristics",
    "local",
    "ssd",
    "local",
    "ssds",
    "physically",
    "attached",
    "server",
    "hosts",
    "vm",
    "instance",
    "local",
    "ssds",
    "higher",
    "throughput",
    "lower",
    "latency",
    "available",
    "persistent",
    "disk",
    "options",
    "physically",
    "attached",
    "data",
    "travel",
    "network",
    "crucial",
    "thing",
    "know",
    "local",
    "ssds",
    "data",
    "store",
    "local",
    "ssd",
    "persists",
    "instance",
    "stopped",
    "deleted",
    "instance",
    "stopped",
    "deleted",
    "data",
    "gone",
    "chance",
    "getting",
    "back",
    "local",
    "ssd",
    "375",
    "gigabytes",
    "size",
    "attach",
    "maximum",
    "24",
    "local",
    "ssd",
    "partitions",
    "total",
    "9",
    "terabytes",
    "per",
    "instance",
    "local",
    "ssds",
    "designed",
    "offer",
    "high",
    "iops",
    "low",
    "latency",
    "great",
    "need",
    "fast",
    "scratch",
    "disk",
    "cache",
    "want",
    "use",
    "instance",
    "memory",
    "local",
    "ssds",
    "also",
    "available",
    "two",
    "flavors",
    "scuzzy",
    "mvme",
    "unaware",
    "scuzzy",
    "older",
    "protocol",
    "made",
    "specifically",
    "hard",
    "drives",
    "also",
    "holds",
    "limitation",
    "one",
    "queue",
    "commands",
    "nvme",
    "hand",
    "also",
    "known",
    "memory",
    "express",
    "newer",
    "protocol",
    "designed",
    "specific",
    "use",
    "flash",
    "memory",
    "designed",
    "64",
    "000",
    "qs",
    "well",
    "queues",
    "turn",
    "64",
    "000",
    "commands",
    "running",
    "time",
    "thus",
    "making",
    "nvme",
    "infinitely",
    "faster",
    "although",
    "nvme",
    "comes",
    "incredible",
    "speeds",
    "come",
    "cost",
    "comes",
    "caveats",
    "local",
    "ssd",
    "although",
    "compute",
    "engine",
    "automatically",
    "encrypts",
    "data",
    "written",
    "local",
    "ssd",
    "storage",
    "space",
    "ca",
    "use",
    "customer",
    "supplied",
    "encryption",
    "keys",
    "local",
    "ssds",
    "well",
    "local",
    "ssds",
    "available",
    "n1",
    "n2",
    "compute",
    "optimized",
    "machine",
    "types",
    "moving",
    "performance",
    "local",
    "ssds",
    "throughput",
    "scuzzy",
    "nvme",
    "read",
    "write",
    "iops",
    "per",
    "instance",
    "nvme",
    "comes",
    "top",
    "see",
    "read",
    "iops",
    "per",
    "instance",
    "whopping",
    "two",
    "million",
    "four",
    "hundred",
    "thousand",
    "read",
    "iops",
    "per",
    "instance",
    "well",
    "right",
    "iops",
    "per",
    "instance",
    "million",
    "800",
    "000",
    "local",
    "ssd",
    "end",
    "lesson",
    "wanted",
    "cover",
    "points",
    "performance",
    "scaling",
    "pertains",
    "block",
    "storage",
    "compute",
    "engine",
    "persistent",
    "disk",
    "performance",
    "scales",
    "size",
    "disk",
    "number",
    "vcpus",
    "vm",
    "instance",
    "persistent",
    "disk",
    "performance",
    "scales",
    "linearly",
    "reaches",
    "either",
    "limits",
    "volume",
    "limits",
    "compute",
    "engine",
    "instance",
    "whichever",
    "lower",
    "may",
    "seem",
    "odd",
    "performance",
    "disk",
    "scales",
    "cpu",
    "count",
    "remember",
    "persistent",
    "disks",
    "physically",
    "attached",
    "vm",
    "independently",
    "located",
    "pd",
    "network",
    "operation",
    "thus",
    "takes",
    "cpu",
    "means",
    "smaller",
    "instances",
    "run",
    "cpu",
    "perform",
    "disk",
    "io",
    "higher",
    "rates",
    "order",
    "get",
    "better",
    "performance",
    "increase",
    "iops",
    "disk",
    "resizing",
    "maximum",
    "capacity",
    "size",
    "reached",
    "increase",
    "number",
    "cpus",
    "instance",
    "order",
    "increase",
    "disk",
    "performance",
    "recommendation",
    "google",
    "one",
    "available",
    "vcpu",
    "every",
    "2000",
    "iops",
    "expected",
    "traffic",
    "sum",
    "performance",
    "scales",
    "reaches",
    "either",
    "limits",
    "disk",
    "limits",
    "vm",
    "instance",
    "disk",
    "attached",
    "vm",
    "instance",
    "limits",
    "determined",
    "machine",
    "type",
    "number",
    "vcpus",
    "instance",
    "want",
    "get",
    "granular",
    "regards",
    "disk",
    "performance",
    "included",
    "links",
    "lesson",
    "text",
    "give",
    "insight",
    "general",
    "purposes",
    "exam",
    "remember",
    "persistent",
    "disk",
    "performance",
    "based",
    "total",
    "persistent",
    "disk",
    "capacity",
    "attached",
    "instance",
    "number",
    "vcpus",
    "instance",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "persistent",
    "disks",
    "local",
    "ssds",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "demo",
    "going",
    "covering",
    "manage",
    "interact",
    "disks",
    "compute",
    "engine",
    "demo",
    "designed",
    "give",
    "experience",
    "understanding",
    "working",
    "persistent",
    "disks",
    "would",
    "interact",
    "going",
    "start",
    "demo",
    "creating",
    "instance",
    "going",
    "create",
    "separate",
    "persistent",
    "disk",
    "attach",
    "instance",
    "going",
    "interact",
    "disk",
    "resize",
    "disk",
    "afterwards",
    "delete",
    "going",
    "using",
    "console",
    "command",
    "line",
    "said",
    "let",
    "dive",
    "console",
    "logged",
    "tony",
    "bowties",
    "project",
    "bowtie",
    "inc",
    "first",
    "thing",
    "need",
    "kick",
    "demo",
    "create",
    "instance",
    "attach",
    "disk",
    "first",
    "always",
    "like",
    "make",
    "sure",
    "vpc",
    "deploy",
    "instance",
    "corresponding",
    "default",
    "firewall",
    "rules",
    "going",
    "head",
    "navigation",
    "menu",
    "going",
    "go",
    "vpc",
    "network",
    "expected",
    "default",
    "vpc",
    "created",
    "make",
    "sure",
    "necessary",
    "firewall",
    "rules",
    "going",
    "drill",
    "vpc",
    "head",
    "firewall",
    "rules",
    "going",
    "click",
    "firewall",
    "rules",
    "necessary",
    "firewall",
    "rule",
    "need",
    "ssh",
    "created",
    "go",
    "ahead",
    "create",
    "instance",
    "going",
    "go",
    "back",
    "navigation",
    "menu",
    "going",
    "go",
    "compute",
    "engine",
    "going",
    "go",
    "ahead",
    "click",
    "create",
    "going",
    "name",
    "instance",
    "bowtie",
    "dash",
    "instance",
    "sake",
    "demo",
    "add",
    "label",
    "key",
    "going",
    "environment",
    "value",
    "testing",
    "going",
    "go",
    "bottom",
    "click",
    "save",
    "regards",
    "region",
    "going",
    "select",
    "us",
    "east",
    "1",
    "going",
    "keep",
    "zone",
    "default",
    "us",
    "east",
    "1b",
    "machine",
    "type",
    "keep",
    "things",
    "cost",
    "effective",
    "going",
    "use",
    "e2",
    "micro",
    "shared",
    "core",
    "machine",
    "going",
    "scroll",
    "service",
    "account",
    "service",
    "account",
    "want",
    "select",
    "set",
    "access",
    "api",
    "want",
    "scroll",
    "compute",
    "engine",
    "want",
    "select",
    "read",
    "write",
    "give",
    "us",
    "necessary",
    "permissions",
    "order",
    "interact",
    "disk",
    "creating",
    "later",
    "going",
    "scroll",
    "bottom",
    "going",
    "leave",
    "everything",
    "else",
    "set",
    "default",
    "creating",
    "instance",
    "please",
    "remember",
    "always",
    "click",
    "command",
    "line",
    "link",
    "get",
    "gcloud",
    "command",
    "create",
    "instance",
    "command",
    "line",
    "going",
    "close",
    "going",
    "simply",
    "click",
    "create",
    "going",
    "wait",
    "seconds",
    "instance",
    "come",
    "okay",
    "instance",
    "want",
    "want",
    "create",
    "new",
    "disk",
    "going",
    "go",
    "left",
    "hand",
    "menu",
    "going",
    "click",
    "disks",
    "see",
    "disk",
    "instance",
    "created",
    "10",
    "gigabytes",
    "us",
    "east",
    "1b",
    "want",
    "leave",
    "alone",
    "want",
    "create",
    "new",
    "disk",
    "going",
    "go",
    "top",
    "simply",
    "click",
    "create",
    "disk",
    "name",
    "disk",
    "going",
    "call",
    "disk",
    "new",
    "pd",
    "persistent",
    "disk",
    "going",
    "give",
    "description",
    "going",
    "keep",
    "type",
    "standard",
    "persistent",
    "disk",
    "region",
    "want",
    "select",
    "us",
    "east",
    "one",
    "going",
    "keep",
    "zone",
    "default",
    "us",
    "east",
    "1b",
    "disk",
    "us",
    "east",
    "1b",
    "able",
    "attach",
    "instance",
    "note",
    "selection",
    "replicate",
    "disk",
    "within",
    "region",
    "click",
    "changed",
    "zonal",
    "persistent",
    "disk",
    "regional",
    "persistent",
    "disk",
    "zones",
    "give",
    "option",
    "select",
    "two",
    "zones",
    "prefer",
    "looking",
    "creating",
    "regional",
    "persistent",
    "disks",
    "steps",
    "would",
    "need",
    "take",
    "order",
    "get",
    "done",
    "console",
    "order",
    "save",
    "costs",
    "going",
    "keep",
    "zonal",
    "persistent",
    "disk",
    "going",
    "click",
    "cancel",
    "going",
    "uncheck",
    "option",
    "make",
    "sure",
    "region",
    "still",
    "set",
    "us",
    "east",
    "1",
    "zone",
    "selected",
    "us",
    "east",
    "1b",
    "going",
    "leave",
    "snapshot",
    "schedule",
    "alone",
    "diving",
    "snapshot",
    "schedules",
    "later",
    "lesson",
    "going",
    "scroll",
    "source",
    "type",
    "going",
    "keep",
    "blank",
    "disk",
    "size",
    "set",
    "500",
    "gigabytes",
    "want",
    "set",
    "100",
    "gigabytes",
    "wanted",
    "bring",
    "attention",
    "estimated",
    "performance",
    "see",
    "sustain",
    "random",
    "iops",
    "limits",
    "well",
    "throughput",
    "limit",
    "depending",
    "size",
    "disk",
    "want",
    "add",
    "limits",
    "change",
    "accordingly",
    "change",
    "100",
    "sustained",
    "random",
    "iops",
    "limit",
    "read",
    "went",
    "375",
    "iops",
    "75",
    "iops",
    "great",
    "demonstration",
    "larger",
    "disc",
    "better",
    "performance",
    "great",
    "way",
    "figure",
    "performance",
    "create",
    "disk",
    "also",
    "prompted",
    "note",
    "saying",
    "disk",
    "200",
    "gigabytes",
    "reduced",
    "performance",
    "demo",
    "okay",
    "going",
    "keep",
    "encryption",
    "google",
    "manage",
    "key",
    "labels",
    "add",
    "environment",
    "key",
    "value",
    "testing",
    "entered",
    "options",
    "going",
    "simply",
    "click",
    "create",
    "going",
    "give",
    "seconds",
    "new",
    "disk",
    "created",
    "okay",
    "new",
    "disk",
    "created",
    "easily",
    "create",
    "disk",
    "command",
    "line",
    "supplying",
    "lesson",
    "text",
    "merely",
    "want",
    "go",
    "console",
    "setup",
    "aware",
    "different",
    "options",
    "created",
    "disk",
    "created",
    "instance",
    "want",
    "log",
    "instance",
    "attach",
    "new",
    "disk",
    "going",
    "go",
    "back",
    "vm",
    "instances",
    "want",
    "ssh",
    "bowtie",
    "instance",
    "going",
    "give",
    "seconds",
    "connect",
    "going",
    "zoom",
    "better",
    "viewing",
    "going",
    "clear",
    "screen",
    "first",
    "thing",
    "want",
    "want",
    "list",
    "block",
    "devices",
    "available",
    "instance",
    "linux",
    "command",
    "ls",
    "blk",
    "see",
    "boot",
    "disk",
    "mounted",
    "available",
    "want",
    "attach",
    "new",
    "disk",
    "created",
    "note",
    "could",
    "easily",
    "done",
    "console",
    "wanted",
    "give",
    "idea",
    "would",
    "look",
    "like",
    "command",
    "line",
    "going",
    "paste",
    "command",
    "attach",
    "disk",
    "gcloud",
    "compute",
    "instances",
    "attach",
    "dash",
    "disk",
    "name",
    "instance",
    "bow",
    "tie",
    "dash",
    "instance",
    "along",
    "flag",
    "dash",
    "dash",
    "disk",
    "disk",
    "name",
    "new",
    "pd",
    "zone",
    "disk",
    "using",
    "zone",
    "flag",
    "us",
    "east",
    "1b",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "errors",
    "came",
    "assuming",
    "worked",
    "double",
    "check",
    "gon",
    "na",
    "run",
    "lsblk",
    "command",
    "success",
    "see",
    "block",
    "device",
    "sdb",
    "attached",
    "instance",
    "available",
    "size",
    "100",
    "gigabytes",
    "want",
    "look",
    "state",
    "roblox",
    "device",
    "command",
    "sudo",
    "file",
    "dash",
    "followed",
    "path",
    "block",
    "device",
    "forward",
    "slash",
    "dev",
    "forward",
    "slash",
    "sdb",
    "going",
    "hit",
    "enter",
    "see",
    "showing",
    "data",
    "means",
    "raw",
    "data",
    "device",
    "order",
    "interact",
    "need",
    "format",
    "drive",
    "file",
    "system",
    "operating",
    "system",
    "able",
    "interact",
    "command",
    "format",
    "drive",
    "would",
    "sudo",
    "mkfs",
    "make",
    "file",
    "system",
    "going",
    "use",
    "ext4",
    "file",
    "system",
    "minus",
    "capital",
    "f",
    "along",
    "path",
    "new",
    "disk",
    "going",
    "hit",
    "enter",
    "errors",
    "assuming",
    "successful",
    "verify",
    "going",
    "run",
    "sudo",
    "file",
    "minus",
    "command",
    "see",
    "disk",
    "file",
    "system",
    "given",
    "information",
    "regards",
    "disk",
    "whereas",
    "simply",
    "raw",
    "data",
    "created",
    "disk",
    "formatted",
    "disk",
    "file",
    "system",
    "operating",
    "system",
    "able",
    "read",
    "need",
    "mount",
    "disk",
    "order",
    "need",
    "create",
    "mount",
    "point",
    "going",
    "first",
    "clear",
    "screen",
    "going",
    "run",
    "command",
    "sudo",
    "mkdir",
    "new",
    "mount",
    "point",
    "going",
    "call",
    "slash",
    "new",
    "pd",
    "going",
    "hit",
    "enter",
    "going",
    "mount",
    "disk",
    "command",
    "sudo",
    "mount",
    "path",
    "block",
    "device",
    "forward",
    "slash",
    "dev",
    "forward",
    "slash",
    "sdb",
    "mount",
    "point",
    "forward",
    "slash",
    "new",
    "pd",
    "going",
    "hit",
    "enter",
    "errors",
    "assuming",
    "worked",
    "verify",
    "going",
    "run",
    "command",
    "lsblk",
    "success",
    "see",
    "sdb",
    "mounted",
    "new",
    "pd",
    "interact",
    "disk",
    "first",
    "thing",
    "want",
    "want",
    "change",
    "directories",
    "mount",
    "point",
    "new",
    "pd",
    "going",
    "ls",
    "note",
    "wondering",
    "lost",
    "found",
    "directory",
    "found",
    "linux",
    "file",
    "system",
    "designed",
    "place",
    "orphaned",
    "corrupted",
    "files",
    "corrupted",
    "bits",
    "data",
    "file",
    "system",
    "placed",
    "something",
    "would",
    "interact",
    "always",
    "good",
    "know",
    "going",
    "create",
    "file",
    "new",
    "pd",
    "going",
    "run",
    "command",
    "sudo",
    "nano",
    "file",
    "bow",
    "ties",
    "dot",
    "text",
    "file",
    "bow",
    "ties",
    "file",
    "going",
    "create",
    "nano",
    "text",
    "editor",
    "going",
    "hit",
    "enter",
    "file",
    "going",
    "type",
    "bow",
    "ties",
    "classy",
    "going",
    "hit",
    "ctrl",
    "save",
    "going",
    "hit",
    "enter",
    "verify",
    "ctrl",
    "x",
    "exit",
    "another",
    "ls",
    "see",
    "file",
    "bow",
    "ties",
    "created",
    "also",
    "running",
    "command",
    "df",
    "minus",
    "k",
    "able",
    "see",
    "file",
    "system",
    "well",
    "end",
    "part",
    "one",
    "demo",
    "getting",
    "bit",
    "long",
    "decided",
    "break",
    "would",
    "great",
    "opportunity",
    "get",
    "stretch",
    "get",
    "coffee",
    "tea",
    "whenever",
    "ready",
    "join",
    "next",
    "one",
    "part",
    "two",
    "starting",
    "immediately",
    "end",
    "part",
    "one",
    "music",
    "welcome",
    "back",
    "part",
    "two",
    "demo",
    "gon",
    "na",
    "continue",
    "immediately",
    "end",
    "part",
    "one",
    "said",
    "let",
    "dive",
    "want",
    "want",
    "reboot",
    "instance",
    "order",
    "demonstrate",
    "mounting",
    "device",
    "going",
    "using",
    "command",
    "sudo",
    "reboot",
    "going",
    "disconnect",
    "going",
    "click",
    "close",
    "going",
    "wait",
    "minute",
    "reboot",
    "okay",
    "minute",
    "going",
    "ssh",
    "instance",
    "okay",
    "back",
    "logged",
    "instance",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "run",
    "lsblk",
    "command",
    "wanted",
    "demonstrate",
    "although",
    "mounted",
    "new",
    "device",
    "stay",
    "mounted",
    "reboot",
    "configuration",
    "file",
    "linux",
    "points",
    "partitions",
    "get",
    "mounted",
    "automatically",
    "upon",
    "startup",
    "need",
    "edit",
    "order",
    "make",
    "sure",
    "device",
    "mounted",
    "every",
    "time",
    "instance",
    "reboots",
    "order",
    "need",
    "edit",
    "file",
    "called",
    "fstab",
    "going",
    "add",
    "unique",
    "identifier",
    "partition",
    "also",
    "known",
    "device",
    "sdb",
    "mount",
    "partition",
    "automatically",
    "every",
    "time",
    "happens",
    "reboot",
    "order",
    "going",
    "run",
    "command",
    "sudo",
    "blk",
    "id",
    "path",
    "block",
    "device",
    "forward",
    "slash",
    "dev",
    "forward",
    "slash",
    "sdb",
    "going",
    "hit",
    "enter",
    "identifier",
    "also",
    "known",
    "uuid",
    "need",
    "append",
    "fstab",
    "file",
    "going",
    "copy",
    "uuid",
    "going",
    "use",
    "command",
    "sudo",
    "nano",
    "etc",
    "fs",
    "tab",
    "going",
    "hit",
    "enter",
    "find",
    "uuid",
    "partitions",
    "going",
    "appending",
    "line",
    "right",
    "end",
    "going",
    "move",
    "cursor",
    "going",
    "type",
    "uuid",
    "equals",
    "uuid",
    "copied",
    "earlier",
    "amount",
    "point",
    "going",
    "forward",
    "slash",
    "new",
    "pd",
    "type",
    "file",
    "system",
    "ext4",
    "along",
    "defaults",
    "comma",
    "fail",
    "going",
    "hit",
    "control",
    "save",
    "hit",
    "enter",
    "verify",
    "control",
    "x",
    "exit",
    "going",
    "mount",
    "device",
    "running",
    "command",
    "sudo",
    "mount",
    "dash",
    "hit",
    "enter",
    "command",
    "mount",
    "partitions",
    "available",
    "fstab",
    "file",
    "run",
    "lsblk",
    "see",
    "block",
    "device",
    "sdb",
    "mounted",
    "forward",
    "slash",
    "new",
    "pd",
    "know",
    "may",
    "refresher",
    "perfect",
    "demonstration",
    "tasks",
    "need",
    "done",
    "creating",
    "attaching",
    "new",
    "disk",
    "instance",
    "common",
    "task",
    "many",
    "working",
    "linux",
    "instances",
    "working",
    "cloud",
    "definitely",
    "scripted",
    "wanted",
    "show",
    "steps",
    "need",
    "taken",
    "order",
    "get",
    "new",
    "disk",
    "usable",
    "state",
    "okay",
    "great",
    "created",
    "new",
    "disk",
    "attached",
    "disk",
    "created",
    "file",
    "system",
    "mounted",
    "disk",
    "along",
    "editing",
    "configuration",
    "file",
    "make",
    "sure",
    "device",
    "mounts",
    "whenever",
    "instance",
    "starts",
    "done",
    "wanted",
    "demonstrate",
    "resizing",
    "disk",
    "100",
    "gigabytes",
    "150",
    "gigabytes",
    "show",
    "console",
    "going",
    "quickly",
    "go",
    "back",
    "console",
    "tab",
    "going",
    "go",
    "left",
    "hand",
    "menu",
    "going",
    "click",
    "disks",
    "going",
    "drill",
    "new",
    "pd",
    "top",
    "going",
    "click",
    "edit",
    "able",
    "adjust",
    "disk",
    "space",
    "size",
    "simply",
    "click",
    "save",
    "much",
    "really",
    "need",
    "want",
    "show",
    "command",
    "line",
    "going",
    "go",
    "back",
    "tab",
    "instance",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "paste",
    "command",
    "gcloud",
    "compute",
    "disks",
    "resize",
    "name",
    "disk",
    "new",
    "pd",
    "new",
    "size",
    "gigabytes",
    "using",
    "dash",
    "dash",
    "size",
    "flag",
    "150",
    "new",
    "size",
    "disc",
    "along",
    "dash",
    "dash",
    "zone",
    "flag",
    "us",
    "east",
    "1b",
    "going",
    "hit",
    "enter",
    "going",
    "ask",
    "want",
    "reversible",
    "please",
    "remember",
    "resize",
    "disk",
    "make",
    "bigger",
    "never",
    "smaller",
    "going",
    "hit",
    "continue",
    "took",
    "seconds",
    "successful",
    "run",
    "df",
    "minus",
    "k",
    "see",
    "100",
    "gigabytes",
    "available",
    "extend",
    "file",
    "system",
    "disk",
    "made",
    "disk",
    "larger",
    "allocated",
    "raw",
    "blocks",
    "file",
    "system",
    "order",
    "file",
    "system",
    "see",
    "unallocated",
    "blocks",
    "available",
    "need",
    "run",
    "another",
    "command",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "run",
    "command",
    "sudo",
    "resize",
    "fs",
    "along",
    "block",
    "device",
    "going",
    "hit",
    "enter",
    "see",
    "successful",
    "showing",
    "old",
    "blocks",
    "13",
    "new",
    "blocks",
    "run",
    "df",
    "minus",
    "k",
    "see",
    "150",
    "gigabytes",
    "available",
    "demonstrate",
    "resizing",
    "disk",
    "along",
    "mounting",
    "remounting",
    "disk",
    "file",
    "created",
    "still",
    "exists",
    "going",
    "run",
    "ls",
    "minus",
    "al",
    "first",
    "need",
    "change",
    "directories",
    "new",
    "pd",
    "clear",
    "screen",
    "run",
    "ls",
    "phyla",
    "bow",
    "ties",
    "still",
    "great",
    "example",
    "demonstrating",
    "data",
    "persistent",
    "disks",
    "persist",
    "lifetime",
    "disk",
    "even",
    "mounting",
    "unmounting",
    "rebooting",
    "resizing",
    "see",
    "done",
    "lot",
    "work",
    "recap",
    "created",
    "new",
    "disk",
    "attached",
    "disk",
    "instance",
    "formatted",
    "disk",
    "ext4",
    "file",
    "system",
    "mounted",
    "disk",
    "written",
    "file",
    "added",
    "unique",
    "identifier",
    "configuration",
    "file",
    "mounts",
    "startup",
    "resized",
    "disk",
    "along",
    "extending",
    "file",
    "system",
    "disk",
    "end",
    "demo",
    "wanted",
    "congratulate",
    "making",
    "end",
    "hope",
    "demo",
    "extremely",
    "useful",
    "fantastic",
    "job",
    "part",
    "go",
    "wanted",
    "quickly",
    "walk",
    "steps",
    "deleting",
    "resources",
    "created",
    "first",
    "thing",
    "want",
    "delete",
    "disk",
    "created",
    "demo",
    "delete",
    "disk",
    "going",
    "first",
    "detach",
    "disk",
    "instance",
    "easiest",
    "way",
    "command",
    "line",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "show",
    "detach",
    "disk",
    "instance",
    "going",
    "paste",
    "command",
    "gcloud",
    "compute",
    "instances",
    "detach",
    "disk",
    "instance",
    "name",
    "bow",
    "tie",
    "dash",
    "instance",
    "along",
    "disc",
    "flag",
    "dash",
    "dash",
    "disc",
    "name",
    "disc",
    "new",
    "pd",
    "along",
    "zone",
    "going",
    "hit",
    "enter",
    "successfully",
    "detached",
    "detached",
    "actually",
    "delete",
    "disk",
    "going",
    "head",
    "back",
    "console",
    "going",
    "go",
    "ahead",
    "delete",
    "new",
    "pd",
    "disk",
    "going",
    "click",
    "delete",
    "going",
    "get",
    "prompt",
    "asking",
    "sure",
    "yes",
    "go",
    "back",
    "main",
    "menu",
    "disks",
    "take",
    "moment",
    "deleted",
    "longer",
    "see",
    "going",
    "go",
    "back",
    "vm",
    "instances",
    "going",
    "delete",
    "well",
    "need",
    "delete",
    "default",
    "vpc",
    "unless",
    "like",
    "recreate",
    "worry",
    "decide",
    "keep",
    "charged",
    "vpc",
    "using",
    "next",
    "demo",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "managing",
    "disks",
    "compute",
    "engine",
    "mark",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "discussing",
    "persistent",
    "disk",
    "snapshots",
    "snapshots",
    "great",
    "way",
    "backup",
    "data",
    "running",
    "stopped",
    "instances",
    "unexpected",
    "data",
    "loss",
    "snapshots",
    "also",
    "great",
    "strategy",
    "use",
    "backup",
    "plan",
    "instances",
    "matter",
    "located",
    "cloud",
    "engineers",
    "architects",
    "great",
    "tool",
    "achieving",
    "greatest",
    "uptime",
    "instances",
    "diving",
    "right",
    "snapshots",
    "mentioned",
    "great",
    "way",
    "backing",
    "restoring",
    "data",
    "persistent",
    "disks",
    "create",
    "snapshots",
    "disks",
    "even",
    "attached",
    "running",
    "instances",
    "snapshots",
    "global",
    "resources",
    "snapshot",
    "accessible",
    "resource",
    "within",
    "project",
    "also",
    "share",
    "snapshots",
    "across",
    "projects",
    "well",
    "snapshots",
    "also",
    "support",
    "zonal",
    "regional",
    "persistent",
    "disks",
    "snapshots",
    "incremental",
    "automatically",
    "compressed",
    "create",
    "regular",
    "snapshots",
    "persistent",
    "disk",
    "faster",
    "much",
    "lower",
    "cost",
    "regularly",
    "created",
    "full",
    "image",
    "disk",
    "create",
    "snapshot",
    "option",
    "choosing",
    "storage",
    "location",
    "snapshots",
    "stored",
    "cloud",
    "storage",
    "stored",
    "either",
    "location",
    "regional",
    "cloud",
    "storage",
    "bucket",
    "storage",
    "location",
    "provides",
    "higher",
    "availability",
    "drive",
    "costs",
    "please",
    "aware",
    "location",
    "snapshot",
    "affects",
    "availability",
    "incur",
    "networking",
    "costs",
    "creating",
    "snapshot",
    "restoring",
    "new",
    "disk",
    "specify",
    "storage",
    "location",
    "snapshot",
    "google",
    "cloud",
    "uses",
    "default",
    "location",
    "stores",
    "snapshot",
    "cloud",
    "storage",
    "location",
    "closest",
    "region",
    "source",
    "disk",
    "store",
    "snapshot",
    "region",
    "source",
    "disk",
    "network",
    "charge",
    "access",
    "snapshot",
    "region",
    "access",
    "snapshot",
    "different",
    "region",
    "incur",
    "network",
    "cost",
    "compute",
    "engine",
    "stores",
    "multiple",
    "copies",
    "snapshot",
    "across",
    "multiple",
    "locations",
    "well",
    "change",
    "storage",
    "location",
    "existing",
    "snapshot",
    "snapshot",
    "taken",
    "used",
    "create",
    "new",
    "disk",
    "region",
    "zone",
    "regardless",
    "storage",
    "location",
    "snapshot",
    "explained",
    "earlier",
    "snapshots",
    "incremental",
    "wanted",
    "take",
    "moment",
    "dive",
    "minute",
    "creating",
    "snapshots",
    "first",
    "successful",
    "snapshot",
    "persistent",
    "disk",
    "full",
    "snapshot",
    "contains",
    "data",
    "persistent",
    "disk",
    "second",
    "snapshot",
    "contains",
    "new",
    "data",
    "modify",
    "data",
    "since",
    "first",
    "snapshot",
    "data",
    "changed",
    "since",
    "snapshot",
    "1",
    "included",
    "instead",
    "snapshot",
    "2",
    "contains",
    "references",
    "snapshot",
    "1",
    "unchanged",
    "data",
    "shown",
    "snapshot",
    "3",
    "contains",
    "new",
    "changed",
    "data",
    "since",
    "snapshot",
    "2",
    "wo",
    "contain",
    "unchanged",
    "data",
    "snapshot",
    "1",
    "instead",
    "snapshot",
    "3",
    "contains",
    "references",
    "blocks",
    "snapshot",
    "1",
    "snapshot",
    "2",
    "unchanged",
    "data",
    "repeats",
    "subsequent",
    "snapshots",
    "persistent",
    "disk",
    "snapshots",
    "always",
    "created",
    "based",
    "last",
    "successful",
    "snapshot",
    "taken",
    "probably",
    "wondering",
    "happens",
    "decide",
    "delete",
    "snapshot",
    "dependent",
    "well",
    "delete",
    "snapshot",
    "compute",
    "engine",
    "immediately",
    "marks",
    "snapshot",
    "deleted",
    "system",
    "snapshot",
    "dependent",
    "snapshots",
    "deleted",
    "outright",
    "however",
    "snapshot",
    "dependent",
    "snapshots",
    "steps",
    "happen",
    "behind",
    "scenes",
    "shown",
    "diagram",
    "snapshot",
    "2",
    "deleted",
    "next",
    "snapshot",
    "full",
    "snapshot",
    "longer",
    "references",
    "snapshot",
    "deletion",
    "example",
    "snapshot",
    "1",
    "becomes",
    "reference",
    "snapshot",
    "3",
    "data",
    "required",
    "restoring",
    "snapshots",
    "moved",
    "next",
    "snapshot",
    "increasing",
    "size",
    "shown",
    "blocks",
    "unique",
    "snapshot",
    "2",
    "moved",
    "snapshot",
    "3",
    "size",
    "snapshot",
    "3",
    "increases",
    "data",
    "required",
    "restoring",
    "snapshots",
    "deleted",
    "case",
    "blocks",
    "already",
    "snapshot",
    "3",
    "deleted",
    "snapshot",
    "2",
    "size",
    "snapshots",
    "lower",
    "subsequent",
    "snapshots",
    "might",
    "require",
    "information",
    "stored",
    "previous",
    "snapshot",
    "please",
    "aware",
    "deleting",
    "snapshot",
    "necessarily",
    "delete",
    "data",
    "snapshot",
    "looking",
    "make",
    "sure",
    "data",
    "indeed",
    "deleted",
    "snapshots",
    "delete",
    "snapshots",
    "disk",
    "snapshot",
    "schedule",
    "must",
    "detach",
    "snapshot",
    "schedule",
    "disk",
    "delete",
    "schedule",
    "removing",
    "snapshot",
    "schedule",
    "disk",
    "prevents",
    "snapshot",
    "activity",
    "occurring",
    "touching",
    "topic",
    "scheduled",
    "snapshots",
    "far",
    "best",
    "way",
    "backup",
    "data",
    "compute",
    "engine",
    "use",
    "scheduled",
    "snapshots",
    "way",
    "never",
    "worry",
    "manually",
    "creating",
    "snapshots",
    "even",
    "worry",
    "using",
    "tools",
    "kick",
    "snapshots",
    "simply",
    "use",
    "tool",
    "google",
    "snapshot",
    "schedules",
    "considered",
    "best",
    "practice",
    "backup",
    "compute",
    "engine",
    "persistent",
    "disks",
    "order",
    "create",
    "snapshot",
    "schedules",
    "must",
    "create",
    "snapshot",
    "schedule",
    "region",
    "persistent",
    "disk",
    "resides",
    "two",
    "ways",
    "create",
    "snapshot",
    "schedule",
    "first",
    "one",
    "create",
    "snapshot",
    "schedule",
    "attach",
    "existing",
    "persistent",
    "disk",
    "way",
    "create",
    "new",
    "persistent",
    "disk",
    "snapshot",
    "schedule",
    "also",
    "option",
    "setting",
    "snapshot",
    "retention",
    "policy",
    "defines",
    "long",
    "want",
    "keep",
    "snapshots",
    "options",
    "creating",
    "snapshot",
    "schedules",
    "retention",
    "policies",
    "source",
    "disk",
    "deletion",
    "rules",
    "choose",
    "set",
    "snapshot",
    "retention",
    "policy",
    "must",
    "part",
    "snapshot",
    "schedule",
    "create",
    "snapshot",
    "schedule",
    "also",
    "set",
    "source",
    "disk",
    "deletion",
    "rule",
    "source",
    "disk",
    "deletion",
    "rule",
    "controls",
    "happens",
    "snapshots",
    "source",
    "disk",
    "deleted",
    "caveats",
    "scheduled",
    "snapshots",
    "persistent",
    "disk",
    "one",
    "snapshot",
    "schedule",
    "attached",
    "time",
    "also",
    "delete",
    "snapshot",
    "schedule",
    "attached",
    "disk",
    "must",
    "detach",
    "schedule",
    "disks",
    "delete",
    "schedule",
    "well",
    "create",
    "snapshot",
    "schedule",
    "edit",
    "update",
    "snapshot",
    "schedule",
    "must",
    "delete",
    "create",
    "new",
    "one",
    "end",
    "lesson",
    "wanted",
    "touch",
    "managing",
    "snapshots",
    "minute",
    "managing",
    "snapshots",
    "things",
    "remember",
    "order",
    "use",
    "snapshots",
    "manage",
    "data",
    "efficiently",
    "snapshot",
    "disks",
    "every",
    "10",
    "minutes",
    "unable",
    "snapshot",
    "disks",
    "intervals",
    "less",
    "10",
    "minutes",
    "please",
    "keep",
    "mind",
    "creating",
    "schedules",
    "also",
    "create",
    "snapshots",
    "regular",
    "schedule",
    "minimize",
    "data",
    "loss",
    "unexpected",
    "failure",
    "existing",
    "snapshots",
    "persistent",
    "disk",
    "system",
    "automatically",
    "uses",
    "baseline",
    "subsequent",
    "snapshots",
    "create",
    "disk",
    "order",
    "improve",
    "performance",
    "eliminate",
    "excessive",
    "snapshots",
    "creating",
    "image",
    "reusing",
    "using",
    "method",
    "would",
    "ideal",
    "storage",
    "management",
    "snapshots",
    "also",
    "help",
    "reduce",
    "costs",
    "schedule",
    "regular",
    "snapshots",
    "persistent",
    "disks",
    "reduce",
    "time",
    "takes",
    "complete",
    "snapshot",
    "creating",
    "hours",
    "possible",
    "lastly",
    "use",
    "windows",
    "situations",
    "use",
    "volume",
    "shadow",
    "copy",
    "service",
    "take",
    "snapshots",
    "persistent",
    "disks",
    "attached",
    "windows",
    "instances",
    "create",
    "vss",
    "snapshots",
    "without",
    "stop",
    "instance",
    "detach",
    "persistent",
    "disk",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "theory",
    "persistent",
    "disk",
    "snapshots",
    "schedules",
    "manage",
    "next",
    "lesson",
    "demo",
    "demonstrating",
    "snapshots",
    "putting",
    "theory",
    "practice",
    "get",
    "feel",
    "snapshots",
    "work",
    "applied",
    "persistent",
    "disks",
    "mark",
    "lesson",
    "complete",
    "whenever",
    "ready",
    "join",
    "console",
    "music",
    "welcome",
    "back",
    "demonstration",
    "going",
    "dive",
    "snapshots",
    "snapshot",
    "schedules",
    "demo",
    "give",
    "knowledge",
    "need",
    "create",
    "delete",
    "snapshots",
    "along",
    "manage",
    "snapshot",
    "schedules",
    "going",
    "start",
    "demo",
    "creating",
    "instance",
    "going",
    "interact",
    "take",
    "snapshot",
    "disk",
    "going",
    "create",
    "another",
    "instance",
    "snapshot",
    "create",
    "snapshot",
    "schedules",
    "instances",
    "using",
    "console",
    "command",
    "line",
    "lot",
    "said",
    "let",
    "dive",
    "currently",
    "logged",
    "tony",
    "bowties",
    "well",
    "project",
    "bowtie",
    "inc",
    "first",
    "thing",
    "need",
    "kick",
    "demo",
    "create",
    "instance",
    "first",
    "always",
    "like",
    "make",
    "sure",
    "vpc",
    "deploy",
    "instance",
    "corresponding",
    "default",
    "firewall",
    "rules",
    "going",
    "head",
    "navigation",
    "menu",
    "scroll",
    "vpc",
    "network",
    "delete",
    "default",
    "vpc",
    "last",
    "demo",
    "still",
    "going",
    "drill",
    "make",
    "sure",
    "firewall",
    "rules",
    "gon",
    "na",
    "go",
    "firewall",
    "rules",
    "expected",
    "ssh",
    "firewall",
    "rule",
    "need",
    "already",
    "created",
    "everything",
    "order",
    "gon",
    "na",
    "go",
    "back",
    "navigation",
    "menu",
    "head",
    "compute",
    "engine",
    "create",
    "instance",
    "figure",
    "demo",
    "switch",
    "little",
    "bit",
    "create",
    "instance",
    "command",
    "line",
    "going",
    "head",
    "cloud",
    "shell",
    "going",
    "open",
    "took",
    "minute",
    "provision",
    "going",
    "going",
    "open",
    "new",
    "tab",
    "going",
    "zoom",
    "better",
    "viewing",
    "going",
    "paste",
    "command",
    "create",
    "instance",
    "gcloud",
    "command",
    "create",
    "instances",
    "available",
    "github",
    "repository",
    "find",
    "instructions",
    "commands",
    "managing",
    "snapshots",
    "compute",
    "engine",
    "going",
    "hit",
    "enter",
    "may",
    "get",
    "prompt",
    "authorize",
    "api",
    "call",
    "going",
    "click",
    "authorize",
    "success",
    "instance",
    "created",
    "running",
    "want",
    "ssh",
    "instance",
    "going",
    "run",
    "command",
    "gcloud",
    "compute",
    "ssh",
    "dash",
    "dash",
    "zone",
    "zone",
    "used",
    "1b",
    "instance",
    "bowtie",
    "dash",
    "instance",
    "going",
    "hit",
    "enter",
    "going",
    "prompt",
    "want",
    "continue",
    "going",
    "say",
    "yes",
    "going",
    "enter",
    "passphrase",
    "enter",
    "going",
    "update",
    "metadata",
    "going",
    "ask",
    "passphrase",
    "going",
    "quickly",
    "clear",
    "screen",
    "first",
    "thing",
    "want",
    "want",
    "verify",
    "name",
    "instance",
    "going",
    "type",
    "command",
    "hostname",
    "expected",
    "bowtie",
    "dash",
    "instance",
    "shows",
    "want",
    "create",
    "text",
    "file",
    "going",
    "run",
    "command",
    "sudo",
    "nano",
    "file",
    "text",
    "going",
    "hit",
    "enter",
    "going",
    "open",
    "nano",
    "text",
    "editor",
    "enter",
    "message",
    "kind",
    "like",
    "going",
    "enter",
    "bow",
    "tie",
    "needed",
    "never",
    "get",
    "enough",
    "bow",
    "ties",
    "going",
    "hit",
    "ctrl",
    "save",
    "press",
    "enter",
    "verify",
    "file",
    "name",
    "write",
    "ctrl",
    "x",
    "exit",
    "going",
    "run",
    "command",
    "ls",
    "space",
    "minus",
    "al",
    "list",
    "files",
    "verify",
    "file",
    "created",
    "see",
    "file",
    "created",
    "created",
    "instance",
    "written",
    "file",
    "disk",
    "going",
    "head",
    "console",
    "take",
    "snapshot",
    "disk",
    "session",
    "transferred",
    "another",
    "tab",
    "close",
    "terminal",
    "want",
    "head",
    "menu",
    "go",
    "disks",
    "want",
    "show",
    "two",
    "ways",
    "create",
    "snapshot",
    "first",
    "one",
    "going",
    "disks",
    "choosing",
    "disk",
    "want",
    "bowtie",
    "instance",
    "actions",
    "going",
    "click",
    "hamburger",
    "menu",
    "create",
    "snapshot",
    "bring",
    "straight",
    "snapshot",
    "menu",
    "demo",
    "going",
    "go",
    "left",
    "hand",
    "menu",
    "going",
    "click",
    "snapshots",
    "going",
    "click",
    "create",
    "snapshot",
    "name",
    "snapshot",
    "going",
    "type",
    "bowtie",
    "snapshot",
    "going",
    "use",
    "description",
    "moving",
    "source",
    "disk",
    "one",
    "select",
    "bow",
    "tie",
    "instance",
    "one",
    "want",
    "anyways",
    "going",
    "click",
    "location",
    "order",
    "cut",
    "costs",
    "need",
    "going",
    "select",
    "regional",
    "select",
    "location",
    "able",
    "select",
    "locations",
    "like",
    "tokyo",
    "create",
    "snapshot",
    "tokyo",
    "want",
    "keep",
    "snapshot",
    "region",
    "going",
    "go",
    "back",
    "select",
    "us",
    "east",
    "one",
    "based",
    "source",
    "disk",
    "location",
    "going",
    "add",
    "label",
    "key",
    "environment",
    "value",
    "testing",
    "going",
    "leave",
    "encryption",
    "type",
    "google",
    "managed",
    "going",
    "simply",
    "click",
    "create",
    "create",
    "snapshot",
    "boot",
    "disk",
    "bow",
    "tie",
    "instance",
    "took",
    "minute",
    "note",
    "bigger",
    "discs",
    "take",
    "little",
    "bit",
    "longer",
    "snapshot",
    "okay",
    "created",
    "snapshot",
    "going",
    "go",
    "back",
    "vm",
    "instances",
    "going",
    "create",
    "new",
    "instance",
    "snapshot",
    "going",
    "name",
    "instance",
    "bowtie",
    "dash",
    "instance",
    "dash",
    "2",
    "going",
    "give",
    "label",
    "going",
    "add",
    "label",
    "key",
    "environment",
    "value",
    "testing",
    "hit",
    "save",
    "region",
    "going",
    "used",
    "1",
    "leave",
    "zone",
    "default",
    "us",
    "east",
    "1b",
    "machine",
    "type",
    "select",
    "e2",
    "micro",
    "want",
    "go",
    "boot",
    "disk",
    "select",
    "change",
    "button",
    "going",
    "select",
    "snapshots",
    "instead",
    "using",
    "public",
    "image",
    "going",
    "click",
    "snapshots",
    "select",
    "snapshot",
    "drop",
    "menu",
    "see",
    "bowtie",
    "snapshot",
    "going",
    "select",
    "going",
    "leave",
    "rest",
    "default",
    "going",
    "go",
    "select",
    "going",
    "leave",
    "everything",
    "else",
    "default",
    "going",
    "click",
    "create",
    "going",
    "give",
    "minute",
    "bowtie",
    "instance",
    "2",
    "created",
    "okay",
    "took",
    "minute",
    "going",
    "ssh",
    "instance",
    "going",
    "zoom",
    "better",
    "viewing",
    "even",
    "though",
    "know",
    "instance",
    "named",
    "still",
    "going",
    "run",
    "hostname",
    "command",
    "expected",
    "name",
    "pops",
    "really",
    "curious",
    "run",
    "command",
    "ls",
    "space",
    "dash",
    "al",
    "see",
    "file",
    "file",
    "cat",
    "file",
    "music",
    "able",
    "see",
    "text",
    "inputted",
    "file",
    "although",
    "one",
    "file",
    "text",
    "file",
    "able",
    "verify",
    "snapshot",
    "worked",
    "times",
    "snapshot",
    "get",
    "corrupted",
    "various",
    "spot",
    "checks",
    "snapshots",
    "good",
    "common",
    "practice",
    "want",
    "create",
    "snapshot",
    "schedule",
    "instances",
    "going",
    "go",
    "back",
    "console",
    "left",
    "hand",
    "menu",
    "going",
    "head",
    "snapshots",
    "go",
    "snapshot",
    "schedules",
    "see",
    "snapshot",
    "schedules",
    "let",
    "go",
    "ahead",
    "create",
    "new",
    "one",
    "clicking",
    "create",
    "snapshot",
    "schedule",
    "mentioned",
    "last",
    "lesson",
    "need",
    "create",
    "schedule",
    "first",
    "attach",
    "disk",
    "going",
    "name",
    "snapshot",
    "schedule",
    "bow",
    "tie",
    "dash",
    "disk",
    "schedule",
    "going",
    "use",
    "description",
    "region",
    "going",
    "select",
    "us",
    "east",
    "one",
    "going",
    "keep",
    "snapshot",
    "location",
    "regional",
    "us",
    "east",
    "one",
    "scroll",
    "schedule",
    "options",
    "leave",
    "schedule",
    "frequency",
    "daily",
    "note",
    "start",
    "time",
    "time",
    "measured",
    "utc",
    "please",
    "remember",
    "creating",
    "schedule",
    "specific",
    "time",
    "zone",
    "going",
    "put",
    "start",
    "time",
    "600",
    "1",
    "eastern",
    "standard",
    "time",
    "backups",
    "always",
    "best",
    "done",
    "least",
    "amount",
    "activity",
    "going",
    "keep",
    "auto",
    "delete",
    "snapshots",
    "14",
    "days",
    "going",
    "keep",
    "deletion",
    "rule",
    "keep",
    "snapshots",
    "well",
    "enable",
    "volume",
    "shadow",
    "copy",
    "service",
    "windows",
    "since",
    "running",
    "linux",
    "need",
    "enable",
    "since",
    "labeled",
    "everything",
    "else",
    "might",
    "well",
    "give",
    "label",
    "going",
    "use",
    "key",
    "environment",
    "value",
    "testing",
    "filled",
    "everything",
    "simply",
    "click",
    "create",
    "took",
    "minute",
    "schedule",
    "created",
    "snapshot",
    "schedule",
    "need",
    "attach",
    "disk",
    "going",
    "head",
    "left",
    "hand",
    "menu",
    "click",
    "disks",
    "going",
    "drill",
    "bow",
    "tie",
    "instance",
    "going",
    "go",
    "top",
    "click",
    "edit",
    "snapshot",
    "schedule",
    "going",
    "click",
    "drop",
    "find",
    "bow",
    "tie",
    "disk",
    "schedule",
    "going",
    "select",
    "going",
    "click",
    "save",
    "snapshot",
    "schedule",
    "attached",
    "disk",
    "bowtie",
    "instance",
    "instance",
    "want",
    "create",
    "snapshot",
    "schedule",
    "instance",
    "instead",
    "using",
    "console",
    "going",
    "go",
    "ahead",
    "command",
    "line",
    "going",
    "go",
    "top",
    "open",
    "shell",
    "going",
    "quickly",
    "clear",
    "screen",
    "order",
    "create",
    "schedule",
    "going",
    "run",
    "command",
    "gcloud",
    "compute",
    "resource",
    "policies",
    "create",
    "snapshot",
    "schedule",
    "name",
    "snapshot",
    "schedule",
    "bow",
    "tie",
    "disk",
    "schedule",
    "2",
    "region",
    "maximum",
    "retention",
    "days",
    "retention",
    "policy",
    "schedule",
    "followed",
    "storage",
    "location",
    "like",
    "said",
    "commands",
    "find",
    "github",
    "repository",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "wanted",
    "leave",
    "error",
    "show",
    "needed",
    "proper",
    "permissions",
    "order",
    "create",
    "snapshot",
    "schedule",
    "great",
    "reminder",
    "always",
    "check",
    "right",
    "role",
    "task",
    "hand",
    "two",
    "options",
    "either",
    "change",
    "users",
    "service",
    "account",
    "user",
    "tony",
    "bowtie",
    "simply",
    "head",
    "instance",
    "edit",
    "service",
    "account",
    "permissions",
    "easiest",
    "way",
    "would",
    "switch",
    "users",
    "going",
    "go",
    "ahead",
    "going",
    "go",
    "ahead",
    "run",
    "command",
    "gcloud",
    "auth",
    "login",
    "remember",
    "something",
    "merely",
    "wanted",
    "show",
    "require",
    "proper",
    "permissions",
    "creation",
    "specific",
    "resources",
    "okay",
    "quickly",
    "went",
    "authentication",
    "process",
    "gon",
    "na",
    "clear",
    "screen",
    "going",
    "go",
    "ahead",
    "run",
    "command",
    "expected",
    "snapshot",
    "schedule",
    "created",
    "errors",
    "schedule",
    "created",
    "attach",
    "disk",
    "going",
    "run",
    "command",
    "gcloud",
    "compute",
    "disks",
    "add",
    "resource",
    "policies",
    "instance",
    "name",
    "bowtie",
    "instance",
    "2",
    "resource",
    "policy",
    "snapshot",
    "schedule",
    "named",
    "bowtie",
    "disk",
    "schedule",
    "2",
    "zone",
    "us",
    "east",
    "1b",
    "going",
    "hit",
    "enter",
    "success",
    "verify",
    "snapshot",
    "schedule",
    "attached",
    "disk",
    "going",
    "go",
    "back",
    "console",
    "going",
    "head",
    "back",
    "main",
    "page",
    "disks",
    "going",
    "drill",
    "bow",
    "tie",
    "instance",
    "2",
    "snapshot",
    "schedule",
    "attached",
    "want",
    "congratulate",
    "making",
    "end",
    "demo",
    "hope",
    "demo",
    "useful",
    "snapshots",
    "role",
    "engineer",
    "common",
    "task",
    "save",
    "data",
    "loss",
    "set",
    "place",
    "recap",
    "created",
    "instance",
    "created",
    "file",
    "instance",
    "created",
    "snapshot",
    "disk",
    "instance",
    "used",
    "create",
    "another",
    "instance",
    "verified",
    "snapshot",
    "created",
    "snapshot",
    "schedule",
    "boot",
    "disks",
    "instances",
    "using",
    "console",
    "command",
    "line",
    "well",
    "done",
    "another",
    "great",
    "job",
    "go",
    "wanted",
    "take",
    "moment",
    "clean",
    "resources",
    "used",
    "accumulate",
    "costs",
    "first",
    "thing",
    "want",
    "want",
    "detach",
    "snapshot",
    "schedules",
    "disks",
    "since",
    "bow",
    "tie",
    "instance",
    "2",
    "going",
    "go",
    "ahead",
    "click",
    "edit",
    "snapshot",
    "schedule",
    "going",
    "select",
    "schedule",
    "hit",
    "save",
    "going",
    "thing",
    "disk",
    "going",
    "head",
    "back",
    "snapshots",
    "going",
    "delete",
    "snapshot",
    "going",
    "head",
    "back",
    "snapshot",
    "schedules",
    "going",
    "select",
    "snapshot",
    "schedules",
    "going",
    "click",
    "delete",
    "everything",
    "cleaned",
    "regards",
    "snapshots",
    "snapshot",
    "schedules",
    "go",
    "vm",
    "instances",
    "delete",
    "instances",
    "going",
    "select",
    "simply",
    "click",
    "delete",
    "pretty",
    "much",
    "wanted",
    "cover",
    "demo",
    "comes",
    "snapshots",
    "snapshot",
    "schedules",
    "mark",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "going",
    "switch",
    "gears",
    "take",
    "automated",
    "approach",
    "deployment",
    "diving",
    "google",
    "tool",
    "infrastructure",
    "code",
    "called",
    "deployment",
    "manager",
    "deployment",
    "manager",
    "allows",
    "deploy",
    "update",
    "tear",
    "resources",
    "within",
    "google",
    "cloud",
    "using",
    "yaml",
    "jinja",
    "python",
    "code",
    "templates",
    "allows",
    "automate",
    "deployment",
    "resources",
    "available",
    "google",
    "cloud",
    "deploy",
    "fast",
    "easy",
    "repeatable",
    "way",
    "consistency",
    "efficiency",
    "lesson",
    "going",
    "explore",
    "architecture",
    "deployment",
    "manager",
    "dive",
    "different",
    "components",
    "gives",
    "flexibility",
    "features",
    "make",
    "tool",
    "easy",
    "solution",
    "deploying",
    "complex",
    "environments",
    "said",
    "let",
    "dive",
    "breaking",
    "components",
    "mentioned",
    "earlier",
    "wanted",
    "start",
    "first",
    "component",
    "configuration",
    "configuration",
    "defines",
    "structure",
    "deployment",
    "must",
    "specify",
    "configuration",
    "create",
    "deployment",
    "configuration",
    "describes",
    "resources",
    "want",
    "single",
    "deployment",
    "written",
    "yaml",
    "syntax",
    "lists",
    "resources",
    "want",
    "create",
    "respective",
    "resource",
    "properties",
    "configuration",
    "must",
    "contain",
    "resources",
    "section",
    "followed",
    "list",
    "resources",
    "create",
    "resource",
    "must",
    "contain",
    "three",
    "components",
    "name",
    "type",
    "properties",
    "without",
    "three",
    "components",
    "deployment",
    "instantiate",
    "wanted",
    "take",
    "moment",
    "go",
    "three",
    "components",
    "bit",
    "depth",
    "first",
    "component",
    "configuration",
    "name",
    "name",
    "user",
    "defined",
    "string",
    "identify",
    "resource",
    "anything",
    "choose",
    "names",
    "like",
    "instance",
    "one",
    "bowtie",
    "dash",
    "instance",
    "even",
    "go",
    "far",
    "use",
    "larks",
    "dash",
    "instance",
    "dash",
    "dash",
    "touch",
    "syntax",
    "found",
    "must",
    "contain",
    "spaces",
    "invalid",
    "characters",
    "next",
    "component",
    "configuration",
    "type",
    "couple",
    "different",
    "types",
    "choose",
    "type",
    "represent",
    "single",
    "api",
    "source",
    "known",
    "base",
    "type",
    "set",
    "resources",
    "known",
    "composite",
    "type",
    "either",
    "one",
    "used",
    "create",
    "part",
    "deployment",
    "type",
    "resource",
    "deployed",
    "diagram",
    "shown",
    "base",
    "type",
    "many",
    "api",
    "resources",
    "used",
    "app",
    "engine",
    "dot",
    "v1",
    "well",
    "syntax",
    "shown",
    "api",
    "dot",
    "version",
    "dot",
    "resource",
    "composite",
    "type",
    "contains",
    "one",
    "templates",
    "work",
    "together",
    "templates",
    "expand",
    "set",
    "base",
    "types",
    "deployed",
    "deployment",
    "composite",
    "types",
    "essentially",
    "hosted",
    "templates",
    "add",
    "deployment",
    "manager",
    "syntax",
    "shown",
    "gcp",
    "dash",
    "types",
    "forward",
    "slash",
    "provider",
    "colon",
    "resource",
    "give",
    "example",
    "composite",
    "type",
    "looks",
    "like",
    "shown",
    "creation",
    "reserved",
    "ip",
    "address",
    "using",
    "compute",
    "engine",
    "v1",
    "api",
    "could",
    "also",
    "use",
    "composite",
    "types",
    "apis",
    "way",
    "gcp",
    "dash",
    "types",
    "forward",
    "slash",
    "app",
    "engine",
    "dash",
    "v1",
    "colon",
    "apps",
    "bigquery",
    "v2",
    "colon",
    "data",
    "sets",
    "last",
    "component",
    "configuration",
    "properties",
    "parameters",
    "resource",
    "type",
    "includes",
    "parameters",
    "see",
    "example",
    "including",
    "zone",
    "machine",
    "type",
    "type",
    "disk",
    "along",
    "parameters",
    "pretty",
    "much",
    "everything",
    "gives",
    "detail",
    "resource",
    "type",
    "note",
    "must",
    "match",
    "properties",
    "type",
    "mean",
    "let",
    "say",
    "entered",
    "zone",
    "particular",
    "zone",
    "exist",
    "compute",
    "engine",
    "machine",
    "type",
    "exist",
    "zone",
    "end",
    "getting",
    "error",
    "deployment",
    "manager",
    "able",
    "parse",
    "configuration",
    "thus",
    "failing",
    "deployment",
    "make",
    "sure",
    "add",
    "properties",
    "match",
    "resource",
    "configuration",
    "contain",
    "templates",
    "essentially",
    "parts",
    "configuration",
    "file",
    "abstracted",
    "individual",
    "building",
    "blocks",
    "template",
    "separate",
    "file",
    "imported",
    "used",
    "type",
    "configuration",
    "use",
    "many",
    "templates",
    "want",
    "configuration",
    "allow",
    "separate",
    "configuration",
    "different",
    "pieces",
    "use",
    "reuse",
    "across",
    "different",
    "deployments",
    "templates",
    "generalized",
    "specific",
    "need",
    "also",
    "allow",
    "take",
    "advantage",
    "features",
    "like",
    "template",
    "properties",
    "environment",
    "variables",
    "modules",
    "create",
    "dynamic",
    "configuration",
    "shown",
    "templates",
    "written",
    "couple",
    "different",
    "ways",
    "written",
    "either",
    "ginger",
    "python",
    "example",
    "shown",
    "left",
    "written",
    "ginger",
    "similar",
    "yaml",
    "syntax",
    "familiar",
    "yaml",
    "might",
    "better",
    "example",
    "right",
    "written",
    "python",
    "pretty",
    "amazing",
    "take",
    "advantage",
    "programmatically",
    "generating",
    "parts",
    "templates",
    "familiar",
    "python",
    "might",
    "better",
    "format",
    "one",
    "advantages",
    "using",
    "templates",
    "ability",
    "create",
    "define",
    "custom",
    "template",
    "properties",
    "template",
    "properties",
    "arbitrary",
    "variables",
    "define",
    "template",
    "files",
    "configuration",
    "file",
    "template",
    "file",
    "uses",
    "template",
    "question",
    "provide",
    "value",
    "template",
    "property",
    "without",
    "changing",
    "template",
    "directly",
    "lets",
    "abstract",
    "property",
    "change",
    "property",
    "value",
    "unique",
    "configuration",
    "without",
    "updating",
    "underlying",
    "template",
    "note",
    "deployment",
    "manager",
    "creates",
    "predefined",
    "environment",
    "variables",
    "use",
    "deployment",
    "example",
    "project",
    "variable",
    "use",
    "project",
    "id",
    "specific",
    "project",
    "combining",
    "components",
    "together",
    "give",
    "deployment",
    "deployment",
    "collection",
    "resources",
    "deployed",
    "managed",
    "together",
    "using",
    "configuration",
    "deploy",
    "update",
    "delete",
    "deployment",
    "merely",
    "changing",
    "code",
    "click",
    "button",
    "deploy",
    "provide",
    "valid",
    "configuration",
    "request",
    "create",
    "deployment",
    "deployment",
    "contain",
    "number",
    "resources",
    "across",
    "number",
    "google",
    "cloud",
    "services",
    "create",
    "deployment",
    "deployment",
    "manager",
    "creates",
    "described",
    "resources",
    "deploy",
    "configuration",
    "must",
    "done",
    "command",
    "line",
    "done",
    "console",
    "simply",
    "use",
    "syntax",
    "shown",
    "deployment",
    "instantiated",
    "configuration",
    "file",
    "entered",
    "bow",
    "tie",
    "deploy",
    "name",
    "deployment",
    "file",
    "dash",
    "dash",
    "config",
    "configuration",
    "file",
    "google",
    "cloud",
    "also",
    "offers",
    "templates",
    "use",
    "deploy",
    "gcp",
    "marketplace",
    "found",
    "right",
    "console",
    "deployment",
    "manager",
    "way",
    "configuration",
    "template",
    "creation",
    "handled",
    "deploy",
    "solution",
    "console",
    "created",
    "deployment",
    "update",
    "whenever",
    "need",
    "update",
    "deployment",
    "adding",
    "removing",
    "resources",
    "deployment",
    "updating",
    "properties",
    "existing",
    "resources",
    "deployment",
    "single",
    "update",
    "contain",
    "combination",
    "changes",
    "make",
    "changes",
    "properties",
    "existing",
    "resources",
    "add",
    "new",
    "resources",
    "request",
    "update",
    "deployment",
    "first",
    "making",
    "changes",
    "configuration",
    "file",
    "create",
    "configuration",
    "file",
    "changes",
    "want",
    "option",
    "pick",
    "policies",
    "use",
    "updates",
    "use",
    "default",
    "policies",
    "finally",
    "make",
    "update",
    "request",
    "deployment",
    "manager",
    "launched",
    "deployment",
    "deployment",
    "corresponding",
    "manifest",
    "example",
    "shown",
    "manifest",
    "property",
    "describes",
    "resources",
    "deployment",
    "automatically",
    "created",
    "new",
    "deployment",
    "manifests",
    "modified",
    "created",
    "well",
    "configuration",
    "file",
    "created",
    "based",
    "configuration",
    "file",
    "delete",
    "deployment",
    "resources",
    "part",
    "deployment",
    "also",
    "deleted",
    "want",
    "delete",
    "specific",
    "resources",
    "deployment",
    "keep",
    "rest",
    "delete",
    "resources",
    "configuration",
    "file",
    "update",
    "deployment",
    "instead",
    "see",
    "deployment",
    "manager",
    "gives",
    "slew",
    "different",
    "options",
    "deploy",
    "update",
    "delete",
    "resources",
    "simultaneously",
    "google",
    "cloud",
    "like",
    "services",
    "gcp",
    "always",
    "best",
    "practices",
    "follow",
    "note",
    "many",
    "best",
    "practices",
    "add",
    "found",
    "documentation",
    "providing",
    "link",
    "lesson",
    "text",
    "want",
    "point",
    "important",
    "ones",
    "remember",
    "first",
    "one",
    "wanted",
    "bring",
    "break",
    "configurations",
    "logical",
    "units",
    "example",
    "create",
    "separate",
    "configurations",
    "networking",
    "services",
    "security",
    "services",
    "compute",
    "services",
    "way",
    "team",
    "able",
    "easily",
    "take",
    "care",
    "domain",
    "without",
    "sift",
    "massive",
    "template",
    "containing",
    "code",
    "entire",
    "environment",
    "another",
    "best",
    "practice",
    "follow",
    "use",
    "references",
    "references",
    "used",
    "values",
    "defined",
    "resource",
    "created",
    "resources",
    "ip",
    "address",
    "system",
    "generated",
    "id",
    "without",
    "references",
    "deployment",
    "manager",
    "creates",
    "resources",
    "parallel",
    "guarantee",
    "dependent",
    "resources",
    "created",
    "correct",
    "order",
    "using",
    "references",
    "would",
    "enforce",
    "order",
    "resources",
    "created",
    "next",
    "one",
    "preview",
    "deployments",
    "using",
    "preview",
    "flag",
    "always",
    "preview",
    "deployments",
    "assess",
    "making",
    "update",
    "affect",
    "deployment",
    "deployment",
    "manager",
    "actually",
    "deploy",
    "resources",
    "preview",
    "configuration",
    "runs",
    "mock",
    "deployment",
    "resources",
    "instead",
    "gives",
    "opportunity",
    "see",
    "changes",
    "deployment",
    "committing",
    "also",
    "want",
    "consider",
    "automating",
    "creation",
    "projects",
    "well",
    "automating",
    "creation",
    "resources",
    "contained",
    "within",
    "projects",
    "enables",
    "adopt",
    "infrastructure",
    "code",
    "approach",
    "project",
    "provisioning",
    "allow",
    "provide",
    "series",
    "predefined",
    "project",
    "environments",
    "quickly",
    "easily",
    "provisioned",
    "also",
    "allow",
    "use",
    "version",
    "control",
    "manage",
    "base",
    "project",
    "configuration",
    "also",
    "allow",
    "deploy",
    "reproducible",
    "consistent",
    "project",
    "configurations",
    "lastly",
    "using",
    "version",
    "control",
    "system",
    "part",
    "development",
    "process",
    "deployments",
    "great",
    "best",
    "practice",
    "follow",
    "allows",
    "fall",
    "back",
    "previous",
    "known",
    "good",
    "configuration",
    "provides",
    "audit",
    "trail",
    "changes",
    "well",
    "uses",
    "configuration",
    "part",
    "continuous",
    "deployment",
    "system",
    "seen",
    "lesson",
    "deployment",
    "manager",
    "powerful",
    "tool",
    "tool",
    "belt",
    "comes",
    "implementing",
    "infrastructure",
    "code",
    "endless",
    "possibilities",
    "explore",
    "also",
    "provide",
    "massive",
    "push",
    "towards",
    "devops",
    "practices",
    "head",
    "path",
    "continuous",
    "automation",
    "continuous",
    "integration",
    "continuous",
    "delivery",
    "continuous",
    "deployment",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "deployment",
    "manager",
    "whenever",
    "ready",
    "join",
    "next",
    "one",
    "go",
    "demonstration",
    "deploy",
    "configuration",
    "deployment",
    "manager",
    "mark",
    "lesson",
    "complete",
    "whenever",
    "ready",
    "join",
    "console",
    "music",
    "welcome",
    "back",
    "demonstration",
    "gon",
    "na",
    "go",
    "deployment",
    "manager",
    "deploy",
    "small",
    "web",
    "server",
    "gon",
    "na",
    "first",
    "use",
    "google",
    "cloud",
    "editor",
    "copy",
    "code",
    "gon",
    "na",
    "dry",
    "run",
    "finally",
    "deploy",
    "code",
    "gon",
    "na",
    "walkthrough",
    "deployment",
    "manager",
    "console",
    "go",
    "manifest",
    "well",
    "features",
    "going",
    "verify",
    "deployed",
    "resources",
    "get",
    "easy",
    "cleanup",
    "end",
    "hitting",
    "delete",
    "button",
    "taking",
    "care",
    "removing",
    "resources",
    "created",
    "quite",
    "bit",
    "go",
    "said",
    "let",
    "dive",
    "see",
    "logged",
    "tonybowties",
    "project",
    "bowtie",
    "inc",
    "since",
    "going",
    "work",
    "code",
    "first",
    "thing",
    "want",
    "go",
    "google",
    "cloud",
    "editor",
    "going",
    "go",
    "top",
    "open",
    "cloud",
    "shell",
    "going",
    "click",
    "button",
    "open",
    "editor",
    "going",
    "make",
    "full",
    "screen",
    "better",
    "viewing",
    "order",
    "get",
    "terminal",
    "viewing",
    "pane",
    "editor",
    "going",
    "simply",
    "go",
    "top",
    "menu",
    "click",
    "terminal",
    "select",
    "new",
    "terminal",
    "better",
    "viewing",
    "totally",
    "optional",
    "going",
    "change",
    "color",
    "theme",
    "dark",
    "mode",
    "going",
    "go",
    "menu",
    "click",
    "file",
    "go",
    "settings",
    "go",
    "color",
    "theme",
    "going",
    "select",
    "dark",
    "visual",
    "studio",
    "working",
    "visual",
    "studio",
    "code",
    "may",
    "look",
    "familiar",
    "also",
    "going",
    "increase",
    "font",
    "size",
    "going",
    "back",
    "file",
    "settings",
    "open",
    "preferences",
    "workspace",
    "scroll",
    "terminal",
    "scroll",
    "integrated",
    "font",
    "size",
    "going",
    "adjust",
    "font",
    "size",
    "20",
    "better",
    "viewing",
    "cloud",
    "shell",
    "font",
    "size",
    "little",
    "bit",
    "easier",
    "see",
    "done",
    "close",
    "preferences",
    "tab",
    "ready",
    "create",
    "files",
    "editor",
    "okay",
    "next",
    "want",
    "create",
    "folder",
    "files",
    "live",
    "going",
    "go",
    "menu",
    "going",
    "select",
    "file",
    "select",
    "new",
    "folder",
    "going",
    "rename",
    "folder",
    "templates",
    "hit",
    "ok",
    "folder",
    "files",
    "going",
    "live",
    "next",
    "step",
    "open",
    "github",
    "repository",
    "text",
    "editor",
    "files",
    "ready",
    "copy",
    "note",
    "fluent",
    "use",
    "git",
    "use",
    "new",
    "feature",
    "cloud",
    "shell",
    "editor",
    "clone",
    "course",
    "repo",
    "without",
    "recreate",
    "files",
    "going",
    "go",
    "text",
    "editor",
    "make",
    "sure",
    "recently",
    "done",
    "git",
    "pull",
    "going",
    "open",
    "files",
    "compute",
    "engine",
    "deployment",
    "manager",
    "see",
    "templates",
    "set",
    "three",
    "files",
    "already",
    "conveniently",
    "opened",
    "going",
    "go",
    "bow",
    "tie",
    "going",
    "configuration",
    "file",
    "going",
    "copying",
    "finish",
    "copying",
    "files",
    "going",
    "little",
    "bit",
    "detail",
    "understand",
    "format",
    "configuration",
    "going",
    "select",
    "going",
    "copy",
    "head",
    "back",
    "editor",
    "going",
    "select",
    "file",
    "new",
    "file",
    "going",
    "rename",
    "bow",
    "tie",
    "dash",
    "deploy",
    "dot",
    "yaml",
    "hit",
    "okay",
    "going",
    "paste",
    "code",
    "configuration",
    "file",
    "showing",
    "going",
    "importing",
    "two",
    "templates",
    "name",
    "well",
    "going",
    "template",
    "web",
    "server",
    "template",
    "network",
    "resources",
    "see",
    "code",
    "create",
    "bow",
    "tie",
    "dash",
    "web",
    "server",
    "type",
    "going",
    "template",
    "properties",
    "zone",
    "machine",
    "type",
    "well",
    "reference",
    "network",
    "well",
    "underneath",
    "bowtie",
    "web",
    "server",
    "bowtie",
    "network",
    "pulling",
    "type",
    "another",
    "template",
    "file",
    "properties",
    "region",
    "us",
    "east",
    "one",
    "going",
    "copy",
    "two",
    "templates",
    "bowtie",
    "web",
    "server",
    "bowtie",
    "network",
    "need",
    "templates",
    "order",
    "complete",
    "deployment",
    "going",
    "go",
    "ahead",
    "head",
    "back",
    "code",
    "editor",
    "going",
    "go",
    "bowtie",
    "web",
    "server",
    "going",
    "copy",
    "everything",
    "back",
    "editor",
    "going",
    "create",
    "new",
    "file",
    "called",
    "bowtie",
    "web",
    "server",
    "going",
    "dot",
    "jinja",
    "hit",
    "enter",
    "going",
    "paste",
    "code",
    "quick",
    "run",
    "template",
    "instance",
    "name",
    "going",
    "bow",
    "tie",
    "dash",
    "website",
    "type",
    "see",
    "using",
    "bunch",
    "different",
    "properties",
    "zone",
    "property",
    "zone",
    "going",
    "reference",
    "back",
    "yaml",
    "template",
    "zone",
    "see",
    "us",
    "east",
    "1b",
    "way",
    "create",
    "another",
    "web",
    "server",
    "enter",
    "whatever",
    "zone",
    "like",
    "configuration",
    "file",
    "leave",
    "bow",
    "tie",
    "dash",
    "web",
    "server",
    "template",
    "way",
    "machine",
    "type",
    "variables",
    "set",
    "zone",
    "machine",
    "type",
    "disks",
    "going",
    "device",
    "name",
    "environment",
    "variable",
    "going",
    "persistent",
    "disk",
    "source",
    "image",
    "going",
    "debian9",
    "also",
    "put",
    "metadata",
    "bring",
    "web",
    "server",
    "lastly",
    "network",
    "tag",
    "http",
    "server",
    "well",
    "configuration",
    "network",
    "interface",
    "network",
    "referring",
    "bowtie",
    "dash",
    "network",
    "sub",
    "network",
    "called",
    "public",
    "showing",
    "moment",
    "well",
    "access",
    "configs",
    "type",
    "one",
    "one",
    "nat",
    "give",
    "instance",
    "public",
    "ip",
    "address",
    "gone",
    "template",
    "need",
    "create",
    "one",
    "last",
    "template",
    "bowtie",
    "dash",
    "network",
    "going",
    "head",
    "back",
    "code",
    "editor",
    "open",
    "bowtie",
    "network",
    "select",
    "code",
    "copy",
    "back",
    "cloud",
    "editor",
    "going",
    "create",
    "new",
    "file",
    "call",
    "bowtie",
    "network",
    "dot",
    "jinja",
    "hit",
    "enter",
    "paste",
    "code",
    "quickly",
    "walk",
    "going",
    "creating",
    "new",
    "custom",
    "network",
    "called",
    "bow",
    "tie",
    "dash",
    "network",
    "type",
    "going",
    "vpc",
    "uses",
    "compute",
    "engine",
    "api",
    "going",
    "custom",
    "network",
    "value",
    "auto",
    "create",
    "sub",
    "networks",
    "going",
    "false",
    "name",
    "going",
    "public",
    "custom",
    "ipcider",
    "range",
    "also",
    "use",
    "variable",
    "demo",
    "decided",
    "leave",
    "network",
    "reference",
    "bowtie",
    "network",
    "value",
    "private",
    "google",
    "access",
    "false",
    "region",
    "variable",
    "fulfilled",
    "configuration",
    "file",
    "moving",
    "right",
    "along",
    "two",
    "firewall",
    "rules",
    "one",
    "ssh",
    "access",
    "web",
    "server",
    "access",
    "one",
    "opening",
    "port",
    "22",
    "world",
    "well",
    "port",
    "well",
    "web",
    "server",
    "access",
    "firewall",
    "rule",
    "target",
    "tag",
    "http",
    "server",
    "referencing",
    "back",
    "network",
    "tag",
    "bowtie",
    "web",
    "server",
    "instance",
    "okay",
    "finished",
    "creating",
    "configuration",
    "file",
    "along",
    "templates",
    "going",
    "head",
    "back",
    "menu",
    "click",
    "file",
    "select",
    "save",
    "since",
    "finished",
    "creating",
    "files",
    "next",
    "thing",
    "execute",
    "mock",
    "deploy",
    "using",
    "bowtie",
    "deploy",
    "configuration",
    "first",
    "know",
    "used",
    "deployment",
    "manager",
    "need",
    "go",
    "turn",
    "api",
    "going",
    "go",
    "top",
    "search",
    "bar",
    "going",
    "type",
    "deployment",
    "see",
    "deployment",
    "manager",
    "first",
    "result",
    "bring",
    "little",
    "bit",
    "expected",
    "deployment",
    "manager",
    "api",
    "enabled",
    "yet",
    "going",
    "click",
    "enable",
    "moments",
    "good",
    "go",
    "okay",
    "see",
    "deployment",
    "manager",
    "pretty",
    "empty",
    "done",
    "command",
    "line",
    "looking",
    "deploy",
    "marketplace",
    "solution",
    "right",
    "top",
    "bring",
    "right",
    "marketplace",
    "allow",
    "deploy",
    "large",
    "selection",
    "templates",
    "want",
    "going",
    "bring",
    "little",
    "bit",
    "going",
    "head",
    "terminal",
    "going",
    "run",
    "ls",
    "going",
    "run",
    "command",
    "ls",
    "able",
    "see",
    "templates",
    "folder",
    "going",
    "change",
    "directory",
    "templates",
    "folder",
    "another",
    "ls",
    "files",
    "mock",
    "deploy",
    "configuration",
    "want",
    "make",
    "sure",
    "deploying",
    "correct",
    "project",
    "see",
    "currently",
    "bow",
    "tie",
    "inc",
    "ever",
    "unsure",
    "project",
    "always",
    "run",
    "gcloud",
    "config",
    "list",
    "command",
    "order",
    "confirm",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "run",
    "command",
    "gcloud",
    "config",
    "list",
    "going",
    "prompt",
    "authorize",
    "api",
    "call",
    "going",
    "authorize",
    "expected",
    "project",
    "set",
    "deploy",
    "project",
    "bowtie",
    "inc",
    "verified",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "paste",
    "command",
    "gcloud",
    "deployment",
    "dash",
    "manager",
    "deployments",
    "create",
    "bowtie",
    "deploy",
    "name",
    "deployment",
    "along",
    "configuration",
    "file",
    "flag",
    "dash",
    "dash",
    "config",
    "name",
    "configuration",
    "file",
    "bowtie",
    "preview",
    "flag",
    "mock",
    "deploy",
    "errors",
    "able",
    "see",
    "actually",
    "deploy",
    "resources",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "minute",
    "find",
    "exactly",
    "happens",
    "see",
    "mock",
    "deployment",
    "success",
    "errors",
    "quick",
    "refresh",
    "console",
    "able",
    "see",
    "deployment",
    "drill",
    "see",
    "manifest",
    "file",
    "manifest",
    "name",
    "view",
    "config",
    "well",
    "templates",
    "imported",
    "layout",
    "well",
    "expanded",
    "config",
    "click",
    "view",
    "config",
    "show",
    "right",
    "hand",
    "panel",
    "exactly",
    "deployment",
    "used",
    "config",
    "thing",
    "template",
    "files",
    "going",
    "open",
    "network",
    "template",
    "quickly",
    "go",
    "like",
    "well",
    "also",
    "option",
    "download",
    "really",
    "want",
    "get",
    "granular",
    "go",
    "left",
    "hand",
    "pane",
    "select",
    "vm",
    "instance",
    "show",
    "resource",
    "properties",
    "everything",
    "disks",
    "machine",
    "type",
    "metadata",
    "network",
    "interfaces",
    "zone",
    "network",
    "tag",
    "thing",
    "go",
    "network",
    "custom",
    "network",
    "value",
    "autocreate",
    "subnetworks",
    "false",
    "check",
    "public",
    "sub",
    "network",
    "well",
    "firewall",
    "rules",
    "preview",
    "actually",
    "deployed",
    "anything",
    "taking",
    "look",
    "compute",
    "engine",
    "instances",
    "new",
    "tab",
    "see",
    "instances",
    "deployed",
    "goes",
    "resources",
    "want",
    "want",
    "deploy",
    "deployment",
    "one",
    "two",
    "ways",
    "simply",
    "click",
    "button",
    "says",
    "deploy",
    "run",
    "command",
    "command",
    "line",
    "looking",
    "show",
    "command",
    "line",
    "going",
    "move",
    "command",
    "line",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "paste",
    "code",
    "gcloud",
    "deployment",
    "dash",
    "manager",
    "deployments",
    "update",
    "bowtie",
    "deploy",
    "probably",
    "wondering",
    "update",
    "configuration",
    "deployed",
    "even",
    "though",
    "preview",
    "deployment",
    "manager",
    "still",
    "sees",
    "deployment",
    "created",
    "google",
    "cloud",
    "calls",
    "shell",
    "using",
    "update",
    "fully",
    "deploy",
    "configuration",
    "using",
    "last",
    "preview",
    "perform",
    "update",
    "deploy",
    "resources",
    "exactly",
    "see",
    "manifest",
    "anytime",
    "make",
    "adjustment",
    "either",
    "configuration",
    "templates",
    "simply",
    "run",
    "update",
    "command",
    "instead",
    "whole",
    "deployment",
    "want",
    "get",
    "deployed",
    "going",
    "hit",
    "enter",
    "back",
    "minute",
    "deployed",
    "resources",
    "success",
    "deployment",
    "successful",
    "see",
    "errors",
    "resources",
    "completed",
    "state",
    "going",
    "select",
    "bow",
    "tie",
    "website",
    "manifest",
    "access",
    "resource",
    "link",
    "top",
    "bring",
    "instance",
    "well",
    "ssh",
    "instance",
    "options",
    "compute",
    "engine",
    "console",
    "order",
    "verify",
    "resources",
    "deployed",
    "going",
    "go",
    "back",
    "tab",
    "already",
    "open",
    "see",
    "instance",
    "deployed",
    "want",
    "check",
    "see",
    "network",
    "deployed",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "head",
    "vpc",
    "network",
    "see",
    "bowtie",
    "network",
    "deployed",
    "two",
    "corresponding",
    "firewall",
    "rules",
    "going",
    "drill",
    "bowtie",
    "network",
    "check",
    "firewall",
    "rules",
    "see",
    "ssh",
    "access",
    "web",
    "server",
    "access",
    "created",
    "corresponding",
    "protocols",
    "ports",
    "know",
    "resources",
    "deployed",
    "want",
    "head",
    "back",
    "compute",
    "engine",
    "see",
    "instance",
    "configured",
    "properly",
    "going",
    "click",
    "ssh",
    "see",
    "ssh",
    "instance",
    "success",
    "ssh",
    "know",
    "working",
    "properly",
    "going",
    "close",
    "tab",
    "also",
    "want",
    "see",
    "whether",
    "web",
    "server",
    "configured",
    "properly",
    "metadata",
    "provided",
    "directly",
    "open",
    "webpage",
    "simply",
    "clicking",
    "link",
    "success",
    "look",
    "dapper",
    "today",
    "thank",
    "tony",
    "bowtie",
    "see",
    "web",
    "server",
    "configured",
    "properly",
    "using",
    "metadata",
    "provided",
    "wanted",
    "congratulate",
    "making",
    "end",
    "demo",
    "hope",
    "extremely",
    "useful",
    "gave",
    "understanding",
    "infrastructure",
    "code",
    "used",
    "google",
    "cloud",
    "using",
    "native",
    "tools",
    "hope",
    "also",
    "triggered",
    "possible",
    "use",
    "cases",
    "allow",
    "automate",
    "resources",
    "configurations",
    "environment",
    "allow",
    "start",
    "innovating",
    "fantastic",
    "new",
    "ways",
    "cicd",
    "familiar",
    "infrastructure",
    "code",
    "may",
    "refresher",
    "give",
    "insight",
    "questions",
    "exam",
    "cover",
    "deployment",
    "manager",
    "quick",
    "note",
    "looking",
    "learn",
    "infrastructure",
    "code",
    "put",
    "links",
    "lesson",
    "text",
    "going",
    "depth",
    "deployment",
    "manager",
    "another",
    "tool",
    "google",
    "recommends",
    "called",
    "terraform",
    "go",
    "want",
    "clean",
    "resources",
    "deployed",
    "reduce",
    "incurred",
    "costs",
    "deployment",
    "manager",
    "makes",
    "easy",
    "one",
    "simple",
    "step",
    "going",
    "head",
    "back",
    "open",
    "tab",
    "console",
    "open",
    "deployment",
    "manager",
    "going",
    "head",
    "delete",
    "button",
    "simply",
    "click",
    "delete",
    "deployment",
    "manager",
    "gives",
    "option",
    "deleting",
    "resources",
    "created",
    "simply",
    "deleting",
    "manifest",
    "keeping",
    "resources",
    "untouched",
    "want",
    "select",
    "delete",
    "bowtie",
    "deploy",
    "resources",
    "simply",
    "click",
    "delete",
    "initiate",
    "teardown",
    "resources",
    "deployed",
    "bowtie",
    "deploy",
    "configuration",
    "take",
    "minutes",
    "tear",
    "ever",
    "larger",
    "configuration",
    "deploy",
    "note",
    "may",
    "take",
    "little",
    "bit",
    "longer",
    "deploy",
    "tear",
    "recap",
    "created",
    "configuration",
    "file",
    "two",
    "templates",
    "cloud",
    "shell",
    "editor",
    "deployed",
    "configuration",
    "using",
    "deployment",
    "manager",
    "command",
    "line",
    "cloud",
    "shell",
    "verified",
    "individual",
    "resource",
    "deployed",
    "verified",
    "configuration",
    "resource",
    "congratulations",
    "job",
    "well",
    "done",
    "pretty",
    "much",
    "wanted",
    "cover",
    "demo",
    "comes",
    "deploying",
    "resources",
    "using",
    "deployment",
    "manager",
    "mark",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "learn",
    "google",
    "cloud",
    "load",
    "balancing",
    "used",
    "distribute",
    "traffic",
    "within",
    "google",
    "cloud",
    "platform",
    "google",
    "cloud",
    "load",
    "balancing",
    "essential",
    "using",
    "instance",
    "groups",
    "kubernetes",
    "clusters",
    "pretty",
    "much",
    "defacto",
    "comes",
    "balancing",
    "traffic",
    "coming",
    "well",
    "within",
    "gcp",
    "environment",
    "knowing",
    "differences",
    "types",
    "load",
    "balancers",
    "one",
    "use",
    "specific",
    "scenarios",
    "crucial",
    "exam",
    "tested",
    "lot",
    "cover",
    "said",
    "let",
    "dive",
    "wanted",
    "start",
    "basics",
    "regards",
    "low",
    "balancing",
    "comes",
    "low",
    "balancer",
    "low",
    "balancer",
    "distributes",
    "user",
    "traffic",
    "across",
    "multiple",
    "instances",
    "application",
    "spreading",
    "load",
    "reduce",
    "risk",
    "applications",
    "experiencing",
    "performance",
    "issues",
    "load",
    "balancer",
    "single",
    "point",
    "entry",
    "either",
    "one",
    "multiple",
    "back",
    "ends",
    "within",
    "gcp",
    "back",
    "ends",
    "could",
    "consist",
    "either",
    "instance",
    "groups",
    "negs",
    "getting",
    "g",
    "little",
    "bit",
    "low",
    "balancers",
    "gcp",
    "fully",
    "distributed",
    "software",
    "defined",
    "actual",
    "hardware",
    "load",
    "balancer",
    "involved",
    "low",
    "balancing",
    "gcp",
    "completely",
    "software",
    "defined",
    "need",
    "worry",
    "hardware",
    "time",
    "done",
    "software",
    "depending",
    "low",
    "balancer",
    "choose",
    "google",
    "cloud",
    "gives",
    "option",
    "either",
    "global",
    "load",
    "balancer",
    "regional",
    "load",
    "balancer",
    "load",
    "balancers",
    "meant",
    "serve",
    "content",
    "close",
    "possible",
    "users",
    "experience",
    "increased",
    "latency",
    "gives",
    "users",
    "better",
    "experience",
    "well",
    "reducing",
    "latency",
    "applications",
    "dealing",
    "low",
    "balancers",
    "services",
    "google",
    "cloud",
    "also",
    "offers",
    "auto",
    "scaling",
    "health",
    "checks",
    "load",
    "balancers",
    "make",
    "sure",
    "traffic",
    "always",
    "routed",
    "healthy",
    "instances",
    "using",
    "auto",
    "scaling",
    "able",
    "scale",
    "amount",
    "instances",
    "need",
    "order",
    "handle",
    "load",
    "automatically",
    "many",
    "different",
    "low",
    "balancers",
    "choose",
    "helps",
    "know",
    "specific",
    "aspects",
    "looking",
    "want",
    "traffic",
    "distributed",
    "google",
    "broken",
    "us",
    "three",
    "categories",
    "first",
    "category",
    "global",
    "versus",
    "regional",
    "global",
    "load",
    "balancing",
    "great",
    "back",
    "ends",
    "distributed",
    "across",
    "multiple",
    "regions",
    "users",
    "need",
    "access",
    "applications",
    "content",
    "using",
    "single",
    "anycast",
    "ip",
    "address",
    "well",
    "looking",
    "ipv6",
    "termination",
    "global",
    "load",
    "balancing",
    "take",
    "care",
    "comes",
    "regional",
    "load",
    "balancing",
    "looking",
    "serving",
    "back",
    "ends",
    "single",
    "region",
    "handling",
    "ipv4",
    "traffic",
    "determined",
    "whether",
    "need",
    "global",
    "versus",
    "regional",
    "low",
    "balancing",
    "second",
    "category",
    "dive",
    "external",
    "versus",
    "internal",
    "external",
    "load",
    "balancers",
    "designed",
    "distribute",
    "traffic",
    "coming",
    "network",
    "internet",
    "internal",
    "load",
    "balancers",
    "designed",
    "distribute",
    "traffic",
    "within",
    "network",
    "finally",
    "last",
    "category",
    "help",
    "decide",
    "type",
    "load",
    "balancer",
    "need",
    "traffic",
    "type",
    "shown",
    "traffic",
    "types",
    "cover",
    "http",
    "https",
    "tcp",
    "udp",
    "covered",
    "different",
    "types",
    "load",
    "balancing",
    "available",
    "google",
    "cloud",
    "wanted",
    "dive",
    "depth",
    "low",
    "balancers",
    "see",
    "five",
    "load",
    "balancers",
    "available",
    "going",
    "one",
    "detail",
    "diving",
    "low",
    "balancers",
    "wanted",
    "introduce",
    "concept",
    "using",
    "gcp",
    "load",
    "balancers",
    "called",
    "back",
    "end",
    "services",
    "low",
    "balancer",
    "knows",
    "exactly",
    "defined",
    "backend",
    "service",
    "cloud",
    "load",
    "balancing",
    "knows",
    "distribute",
    "traffic",
    "backend",
    "service",
    "configuration",
    "contains",
    "set",
    "values",
    "protocol",
    "used",
    "connect",
    "back",
    "ends",
    "various",
    "distribution",
    "session",
    "settings",
    "health",
    "checks",
    "timeouts",
    "settings",
    "provide",
    "fine",
    "grain",
    "control",
    "load",
    "balancer",
    "behaves",
    "external",
    "http",
    "https",
    "load",
    "balancer",
    "must",
    "least",
    "one",
    "backend",
    "service",
    "multiple",
    "backend",
    "services",
    "back",
    "ends",
    "backend",
    "service",
    "either",
    "instance",
    "groups",
    "network",
    "endpoint",
    "groups",
    "also",
    "known",
    "negs",
    "combination",
    "note",
    "hear",
    "refer",
    "negs",
    "course",
    "lesson",
    "network",
    "endpoint",
    "group",
    "also",
    "known",
    "neg",
    "configuration",
    "object",
    "specifies",
    "group",
    "endpoints",
    "services",
    "common",
    "use",
    "case",
    "configuration",
    "deploying",
    "services",
    "containers",
    "moving",
    "values",
    "wanted",
    "first",
    "start",
    "health",
    "checks",
    "google",
    "cloud",
    "uses",
    "overall",
    "health",
    "state",
    "back",
    "end",
    "determine",
    "eligibility",
    "receiving",
    "new",
    "requests",
    "connections",
    "back",
    "ends",
    "respond",
    "successfully",
    "configured",
    "number",
    "times",
    "considered",
    "healthy",
    "fail",
    "respond",
    "successfully",
    "separate",
    "number",
    "times",
    "considered",
    "unhealthy",
    "considered",
    "unhealthy",
    "traffic",
    "routed",
    "next",
    "session",
    "affinity",
    "session",
    "affinity",
    "sends",
    "requests",
    "client",
    "back",
    "end",
    "back",
    "end",
    "healthy",
    "capacity",
    "service",
    "timeout",
    "next",
    "value",
    "amount",
    "time",
    "load",
    "balancer",
    "waits",
    "backend",
    "return",
    "full",
    "response",
    "request",
    "next",
    "traffic",
    "distribution",
    "comprises",
    "three",
    "different",
    "values",
    "first",
    "one",
    "balancing",
    "mode",
    "defines",
    "load",
    "balancer",
    "measures",
    "readiness",
    "new",
    "requests",
    "connections",
    "second",
    "one",
    "target",
    "capacity",
    "defines",
    "target",
    "maximum",
    "number",
    "connections",
    "target",
    "maximum",
    "rate",
    "target",
    "maximum",
    "cpu",
    "utilization",
    "third",
    "value",
    "traffic",
    "distribution",
    "capacity",
    "scalar",
    "adjusts",
    "overall",
    "available",
    "capacity",
    "without",
    "modifying",
    "target",
    "capacity",
    "last",
    "value",
    "services",
    "group",
    "endpoints",
    "receive",
    "traffic",
    "google",
    "cloud",
    "load",
    "balancer",
    "several",
    "types",
    "one",
    "concentrating",
    "section",
    "exam",
    "instance",
    "group",
    "backend",
    "services",
    "critical",
    "know",
    "exam",
    "wanted",
    "introduce",
    "concept",
    "add",
    "bit",
    "context",
    "creating",
    "low",
    "balancers",
    "environment",
    "help",
    "understand",
    "concepts",
    "lesson",
    "end",
    "part",
    "one",
    "lesson",
    "getting",
    "bit",
    "long",
    "decided",
    "break",
    "would",
    "great",
    "opportunity",
    "get",
    "stretch",
    "get",
    "coffee",
    "tea",
    "whenever",
    "ready",
    "join",
    "part",
    "two",
    "starting",
    "immediately",
    "end",
    "part",
    "one",
    "complete",
    "video",
    "see",
    "part",
    "two",
    "part",
    "two",
    "cloud",
    "load",
    "balancers",
    "lesson",
    "starting",
    "exactly",
    "left",
    "part",
    "one",
    "said",
    "let",
    "dive",
    "jumping",
    "right",
    "first",
    "load",
    "balancer",
    "wanted",
    "introduce",
    "http",
    "https",
    "low",
    "balancer",
    "couple",
    "different",
    "concepts",
    "wanted",
    "introduce",
    "methods",
    "http",
    "https",
    "load",
    "balancer",
    "distributes",
    "traffic",
    "using",
    "forwarding",
    "rules",
    "cross",
    "region",
    "low",
    "balancing",
    "content",
    "based",
    "load",
    "balancing",
    "touching",
    "cross",
    "region",
    "load",
    "balancing",
    "configure",
    "external",
    "http",
    "https",
    "load",
    "balancer",
    "premium",
    "tier",
    "uses",
    "global",
    "external",
    "ip",
    "address",
    "intelligently",
    "route",
    "requests",
    "users",
    "closest",
    "backend",
    "instance",
    "group",
    "neg",
    "based",
    "proximity",
    "example",
    "set",
    "instance",
    "groups",
    "north",
    "america",
    "europe",
    "attach",
    "low",
    "balancers",
    "service",
    "user",
    "requests",
    "around",
    "world",
    "automatically",
    "sent",
    "vms",
    "closest",
    "users",
    "assuming",
    "vms",
    "pass",
    "health",
    "checks",
    "enough",
    "capacity",
    "closest",
    "vms",
    "unhealthy",
    "closest",
    "instance",
    "group",
    "capacity",
    "another",
    "instance",
    "group",
    "capacity",
    "load",
    "balancer",
    "automatically",
    "sends",
    "requests",
    "next",
    "closest",
    "region",
    "available",
    "capacity",
    "diagram",
    "user",
    "switzerland",
    "hits",
    "low",
    "balancer",
    "going",
    "vms",
    "able",
    "serve",
    "traffic",
    "europe",
    "west",
    "6",
    "traffic",
    "routed",
    "region",
    "getting",
    "content",
    "based",
    "load",
    "balancing",
    "http",
    "https",
    "low",
    "balancing",
    "supports",
    "content",
    "based",
    "load",
    "balancing",
    "using",
    "url",
    "maps",
    "select",
    "backend",
    "service",
    "based",
    "requested",
    "host",
    "name",
    "request",
    "path",
    "example",
    "use",
    "set",
    "instance",
    "groups",
    "negs",
    "handle",
    "video",
    "content",
    "another",
    "set",
    "handle",
    "static",
    "well",
    "another",
    "set",
    "handle",
    "images",
    "also",
    "use",
    "http",
    "https",
    "low",
    "balancing",
    "cloud",
    "storage",
    "buckets",
    "load",
    "balancer",
    "set",
    "add",
    "cloud",
    "storage",
    "buckets",
    "moving",
    "right",
    "along",
    "comes",
    "http",
    "https",
    "load",
    "balancer",
    "global",
    "proxy",
    "based",
    "layer",
    "7",
    "low",
    "balancer",
    "application",
    "layer",
    "note",
    "low",
    "balancers",
    "available",
    "gcp",
    "http",
    "https",
    "low",
    "balancer",
    "layer",
    "7",
    "load",
    "balancer",
    "low",
    "balancers",
    "gcp",
    "layer",
    "4",
    "work",
    "network",
    "layer",
    "low",
    "balancer",
    "enables",
    "serve",
    "applications",
    "worldwide",
    "behind",
    "single",
    "external",
    "unicast",
    "ip",
    "address",
    "external",
    "http",
    "https",
    "load",
    "balancing",
    "distributes",
    "http",
    "https",
    "traffic",
    "back",
    "ends",
    "hosted",
    "compute",
    "engine",
    "gke",
    "external",
    "http",
    "https",
    "load",
    "balancing",
    "implemented",
    "google",
    "front",
    "ends",
    "gfes",
    "shown",
    "diagram",
    "gfes",
    "distributed",
    "globally",
    "operate",
    "together",
    "using",
    "google",
    "global",
    "network",
    "control",
    "plane",
    "premium",
    "tier",
    "gfes",
    "offer",
    "low",
    "balancing",
    "directing",
    "traffic",
    "closest",
    "healthy",
    "backend",
    "capacity",
    "terminating",
    "http",
    "https",
    "traffic",
    "close",
    "possible",
    "users",
    "standard",
    "tier",
    "load",
    "balancing",
    "handled",
    "regionally",
    "load",
    "balancer",
    "available",
    "used",
    "externally",
    "internally",
    "makes",
    "load",
    "balancer",
    "global",
    "external",
    "internal",
    "load",
    "balancer",
    "also",
    "gives",
    "support",
    "https",
    "ssl",
    "covers",
    "tls",
    "encryption",
    "transit",
    "well",
    "load",
    "balancer",
    "accepts",
    "traffic",
    "whether",
    "ipv4",
    "ipv6",
    "traffic",
    "know",
    "ipv6",
    "traffic",
    "terminate",
    "low",
    "balancer",
    "forward",
    "traffic",
    "ipv4",
    "really",
    "matter",
    "type",
    "traffic",
    "sending",
    "load",
    "balancer",
    "still",
    "send",
    "traffic",
    "back",
    "end",
    "using",
    "ipv4",
    "traffic",
    "distributed",
    "location",
    "content",
    "shown",
    "previous",
    "diagram",
    "forwarding",
    "rules",
    "place",
    "distribute",
    "defined",
    "targets",
    "target",
    "pool",
    "instance",
    "groups",
    "defined",
    "targets",
    "could",
    "content",
    "based",
    "therefore",
    "shown",
    "previous",
    "diagram",
    "video",
    "content",
    "could",
    "go",
    "one",
    "target",
    "whereas",
    "static",
    "content",
    "could",
    "go",
    "another",
    "target",
    "url",
    "maps",
    "direct",
    "requests",
    "based",
    "rules",
    "create",
    "bunch",
    "rules",
    "depending",
    "type",
    "traffic",
    "want",
    "direct",
    "put",
    "maps",
    "requests",
    "ssl",
    "certificates",
    "needed",
    "https",
    "either",
    "google",
    "managed",
    "quick",
    "note",
    "ports",
    "used",
    "http",
    "80",
    "8080",
    "well",
    "https",
    "port",
    "used",
    "port",
    "443",
    "moving",
    "next",
    "low",
    "balancer",
    "ssl",
    "proxy",
    "ssl",
    "proxy",
    "low",
    "balancing",
    "reverse",
    "proxy",
    "load",
    "balancer",
    "distributes",
    "ssl",
    "traffic",
    "coming",
    "internet",
    "vm",
    "instances",
    "using",
    "ssl",
    "proxy",
    "load",
    "balancing",
    "ssl",
    "traffic",
    "user",
    "ssl",
    "connections",
    "terminated",
    "low",
    "balancing",
    "layer",
    "proxied",
    "closest",
    "available",
    "backend",
    "instances",
    "either",
    "using",
    "ssl",
    "tcp",
    "premium",
    "tier",
    "ssl",
    "proxy",
    "low",
    "balancing",
    "configured",
    "global",
    "load",
    "balancing",
    "service",
    "standard",
    "tier",
    "ssl",
    "proxy",
    "load",
    "balancer",
    "handles",
    "low",
    "balancing",
    "regionally",
    "load",
    "balancer",
    "also",
    "distributes",
    "traffic",
    "location",
    "ssl",
    "proxy",
    "low",
    "balancing",
    "lets",
    "use",
    "single",
    "ip",
    "address",
    "users",
    "worldwide",
    "layer",
    "4",
    "load",
    "balancer",
    "works",
    "network",
    "layer",
    "load",
    "balancer",
    "shows",
    "support",
    "tcp",
    "ssl",
    "offload",
    "something",
    "specific",
    "remember",
    "exam",
    "like",
    "http",
    "https",
    "load",
    "balancer",
    "use",
    "specific",
    "rules",
    "specific",
    "configurations",
    "order",
    "direct",
    "traffic",
    "ssl",
    "proxy",
    "low",
    "balancer",
    "supports",
    "ipv4",
    "ipv6",
    "terminate",
    "load",
    "balancer",
    "forwards",
    "traffic",
    "back",
    "end",
    "ipv4",
    "traffic",
    "forwarding",
    "rules",
    "place",
    "distribute",
    "defined",
    "target",
    "proper",
    "target",
    "pool",
    "encryption",
    "supported",
    "configuring",
    "services",
    "accept",
    "traffic",
    "ssl",
    "note",
    "also",
    "used",
    "protocols",
    "use",
    "ssl",
    "web",
    "sockets",
    "imap",
    "ssl",
    "carry",
    "number",
    "open",
    "ports",
    "support",
    "moving",
    "next",
    "load",
    "balancer",
    "tcp",
    "proxy",
    "tcp",
    "proxy",
    "load",
    "balancer",
    "reverse",
    "proxy",
    "load",
    "balancer",
    "distributes",
    "tcp",
    "traffic",
    "coming",
    "internet",
    "vm",
    "instances",
    "using",
    "tcp",
    "proxy",
    "load",
    "balancing",
    "traffic",
    "coming",
    "tcp",
    "connection",
    "terminated",
    "load",
    "balancing",
    "layer",
    "forwarded",
    "closest",
    "available",
    "backend",
    "using",
    "tcp",
    "ssl",
    "low",
    "balancer",
    "determine",
    "instances",
    "capacity",
    "send",
    "instances",
    "like",
    "ssl",
    "proxy",
    "load",
    "balancing",
    "tcp",
    "proxy",
    "load",
    "balancing",
    "lets",
    "use",
    "single",
    "ip",
    "address",
    "users",
    "worldwide",
    "tcp",
    "proxy",
    "load",
    "balancer",
    "automatically",
    "routes",
    "traffic",
    "back",
    "ends",
    "closest",
    "user",
    "layer",
    "4",
    "load",
    "balancer",
    "serve",
    "traffic",
    "globally",
    "externally",
    "tcp",
    "proxy",
    "distributes",
    "traffic",
    "location",
    "intended",
    "specifically",
    "traffic",
    "although",
    "decide",
    "want",
    "use",
    "ssl",
    "proxy",
    "back",
    "end",
    "selecting",
    "certificate",
    "back",
    "end",
    "type",
    "load",
    "balancer",
    "supports",
    "ipv4",
    "ipv6",
    "traffic",
    "ipv6",
    "traffic",
    "terminate",
    "low",
    "balancer",
    "forwards",
    "traffic",
    "back",
    "end",
    "ipv4",
    "traffic",
    "tcp",
    "proxy",
    "low",
    "balancing",
    "intended",
    "tcp",
    "traffic",
    "supports",
    "many",
    "ports",
    "port",
    "25",
    "simple",
    "mail",
    "transfer",
    "protocol",
    "smtp",
    "next",
    "network",
    "load",
    "balancer",
    "tcp",
    "udp",
    "network",
    "load",
    "balancer",
    "regional",
    "load",
    "balancer",
    "network",
    "load",
    "balancer",
    "distributes",
    "tcp",
    "udp",
    "traffic",
    "among",
    "instances",
    "region",
    "network",
    "load",
    "balancers",
    "proxies",
    "therefore",
    "responses",
    "back",
    "end",
    "vms",
    "go",
    "directly",
    "clients",
    "back",
    "load",
    "balancer",
    "term",
    "known",
    "direct",
    "server",
    "return",
    "shown",
    "diagram",
    "layer",
    "4",
    "regional",
    "load",
    "balancer",
    "external",
    "load",
    "balancer",
    "well",
    "serve",
    "regional",
    "locations",
    "supports",
    "either",
    "tcp",
    "udp",
    "although",
    "low",
    "balance",
    "udp",
    "tcp",
    "ssl",
    "traffic",
    "ports",
    "supported",
    "tcp",
    "proxy",
    "ssl",
    "proxy",
    "ssl",
    "traffic",
    "still",
    "decrypted",
    "back",
    "end",
    "instead",
    "load",
    "balancer",
    "traffic",
    "also",
    "distributed",
    "incoming",
    "protocol",
    "data",
    "protocols",
    "scheme",
    "scope",
    "tls",
    "offloading",
    "proxying",
    "forwarding",
    "rules",
    "place",
    "distribute",
    "define",
    "targets",
    "target",
    "pools",
    "tcp",
    "udp",
    "protocols",
    "use",
    "target",
    "instances",
    "opposed",
    "instance",
    "groups",
    "lastly",
    "network",
    "load",
    "balancer",
    "also",
    "support",
    "ssl",
    "certificates",
    "opposed",
    "google",
    "managed",
    "certificates",
    "well",
    "last",
    "low",
    "balancer",
    "introduce",
    "internal",
    "load",
    "balancer",
    "internal",
    "tcp",
    "udp",
    "load",
    "balancer",
    "layer",
    "4",
    "regional",
    "load",
    "balancer",
    "enables",
    "distribute",
    "traffic",
    "behind",
    "internal",
    "load",
    "balancing",
    "ip",
    "address",
    "accessible",
    "internal",
    "vm",
    "instances",
    "internal",
    "tcp",
    "udp",
    "load",
    "balancing",
    "distributes",
    "traffic",
    "among",
    "vm",
    "instances",
    "region",
    "load",
    "balancer",
    "supports",
    "tcp",
    "udp",
    "traffic",
    "said",
    "type",
    "load",
    "balancer",
    "used",
    "balance",
    "traffic",
    "within",
    "gcp",
    "across",
    "instances",
    "low",
    "balancer",
    "used",
    "balancing",
    "internet",
    "traffic",
    "internal",
    "traffic",
    "automatically",
    "sent",
    "back",
    "end",
    "terminate",
    "client",
    "connections",
    "forwarding",
    "rules",
    "load",
    "balancer",
    "follows",
    "specific",
    "specifications",
    "need",
    "specify",
    "least",
    "one",
    "five",
    "ports",
    "number",
    "well",
    "must",
    "specify",
    "forward",
    "traffic",
    "ports",
    "like",
    "network",
    "load",
    "balancer",
    "use",
    "either",
    "tcp",
    "udp",
    "pretty",
    "much",
    "cover",
    "lesson",
    "low",
    "balancing",
    "please",
    "remember",
    "exam",
    "need",
    "know",
    "differences",
    "experience",
    "questions",
    "come",
    "exam",
    "need",
    "know",
    "low",
    "balancer",
    "use",
    "good",
    "idea",
    "might",
    "dive",
    "console",
    "look",
    "options",
    "well",
    "going",
    "back",
    "lesson",
    "refresher",
    "understand",
    "use",
    "case",
    "also",
    "crucial",
    "component",
    "environment",
    "used",
    "especially",
    "serving",
    "applications",
    "internet",
    "web",
    "application",
    "kubernetes",
    "cluster",
    "pretty",
    "much",
    "sums",
    "lesson",
    "low",
    "balancing",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "going",
    "depth",
    "instance",
    "groups",
    "along",
    "instance",
    "templates",
    "instance",
    "groups",
    "great",
    "way",
    "set",
    "group",
    "identical",
    "servers",
    "used",
    "conjunction",
    "instance",
    "groups",
    "instance",
    "templates",
    "handles",
    "instance",
    "properties",
    "deploy",
    "instance",
    "groups",
    "environment",
    "lesson",
    "dive",
    "details",
    "features",
    "use",
    "cases",
    "instance",
    "groups",
    "instance",
    "templates",
    "work",
    "together",
    "create",
    "highly",
    "scalable",
    "performing",
    "environment",
    "lot",
    "cover",
    "said",
    "let",
    "dive",
    "instance",
    "group",
    "collection",
    "vm",
    "instances",
    "manage",
    "single",
    "entity",
    "compute",
    "engine",
    "offers",
    "two",
    "kinds",
    "vm",
    "instance",
    "groups",
    "managed",
    "unmanaged",
    "manage",
    "instance",
    "groups",
    "migs",
    "let",
    "operate",
    "applications",
    "multiple",
    "identical",
    "vms",
    "make",
    "workload",
    "scalable",
    "highly",
    "available",
    "taking",
    "advantage",
    "automated",
    "mig",
    "services",
    "like",
    "auto",
    "scaling",
    "auto",
    "healing",
    "regional",
    "zonal",
    "deployments",
    "automatic",
    "updating",
    "getting",
    "services",
    "sec",
    "comes",
    "unmanaged",
    "instance",
    "groups",
    "also",
    "let",
    "low",
    "balance",
    "across",
    "fleet",
    "vms",
    "something",
    "need",
    "manage",
    "going",
    "deeper",
    "unmanaged",
    "instance",
    "groups",
    "bit",
    "later",
    "right",
    "wanted",
    "take",
    "time",
    "go",
    "features",
    "use",
    "cases",
    "migs",
    "bit",
    "detail",
    "context",
    "starting",
    "use",
    "cases",
    "migs",
    "great",
    "stateless",
    "serving",
    "workloads",
    "website",
    "front",
    "ends",
    "web",
    "servers",
    "website",
    "applications",
    "application",
    "preserve",
    "state",
    "saves",
    "data",
    "persistent",
    "storage",
    "user",
    "session",
    "data",
    "stays",
    "client",
    "makes",
    "scaling",
    "quick",
    "easy",
    "migs",
    "also",
    "great",
    "stateless",
    "batch",
    "workloads",
    "high",
    "performance",
    "high",
    "throughput",
    "compute",
    "workloads",
    "image",
    "processing",
    "queue",
    "lastly",
    "build",
    "highly",
    "available",
    "stateful",
    "workloads",
    "using",
    "stateful",
    "managed",
    "instance",
    "groups",
    "stateful",
    "migs",
    "stateful",
    "workloads",
    "include",
    "applications",
    "stateful",
    "data",
    "configuration",
    "databases",
    "legacy",
    "monolith",
    "type",
    "applications",
    "long",
    "running",
    "batch",
    "computations",
    "checkpointing",
    "improve",
    "uptime",
    "resiliency",
    "types",
    "applications",
    "auto",
    "healing",
    "controlled",
    "updates",
    "deployments",
    "preserving",
    "instance",
    "unique",
    "state",
    "including",
    "instance",
    "names",
    "persistent",
    "disks",
    "metadata",
    "covered",
    "type",
    "workloads",
    "used",
    "migs",
    "wanted",
    "dive",
    "features",
    "starting",
    "auto",
    "healing",
    "comes",
    "auto",
    "healing",
    "managed",
    "instance",
    "groups",
    "maintain",
    "high",
    "availability",
    "applications",
    "proactively",
    "keeping",
    "instances",
    "running",
    "state",
    "mig",
    "automatically",
    "recreates",
    "instance",
    "running",
    "managed",
    "instance",
    "groups",
    "also",
    "take",
    "care",
    "auto",
    "healing",
    "improves",
    "application",
    "availability",
    "relying",
    "health",
    "check",
    "detects",
    "things",
    "like",
    "freezing",
    "crashing",
    "overloading",
    "health",
    "check",
    "determines",
    "application",
    "failed",
    "vm",
    "mig",
    "auto",
    "healer",
    "automatically",
    "recreates",
    "vm",
    "instance",
    "health",
    "check",
    "used",
    "monitor",
    "migs",
    "similar",
    "health",
    "checks",
    "used",
    "low",
    "balancing",
    "little",
    "differences",
    "low",
    "balancing",
    "health",
    "checks",
    "help",
    "direct",
    "traffic",
    "away",
    "unresponsive",
    "instances",
    "towards",
    "healthy",
    "ones",
    "health",
    "checks",
    "recreate",
    "instances",
    "whereas",
    "mig",
    "health",
    "checks",
    "proactively",
    "signal",
    "delete",
    "recreate",
    "instances",
    "become",
    "unhealthy",
    "moving",
    "managed",
    "instance",
    "groups",
    "regional",
    "feature",
    "option",
    "creating",
    "regional",
    "migs",
    "zonal",
    "migs",
    "regional",
    "migs",
    "provide",
    "higher",
    "availability",
    "compared",
    "zonal",
    "migs",
    "instances",
    "regional",
    "mig",
    "spread",
    "across",
    "multiple",
    "zones",
    "single",
    "region",
    "google",
    "recommends",
    "regional",
    "migs",
    "zonal",
    "migs",
    "manage",
    "twice",
    "many",
    "migs",
    "zonal",
    "migs",
    "manage",
    "2",
    "000",
    "migs",
    "instead",
    "1000",
    "also",
    "spread",
    "application",
    "load",
    "across",
    "multiple",
    "zones",
    "instead",
    "single",
    "zone",
    "managing",
    "multiple",
    "zonal",
    "migs",
    "across",
    "different",
    "zones",
    "protects",
    "zonal",
    "failures",
    "unforeseen",
    "scenarios",
    "entire",
    "group",
    "instances",
    "single",
    "zone",
    "malfunctions",
    "case",
    "zonal",
    "failure",
    "group",
    "instances",
    "zone",
    "stops",
    "responding",
    "regional",
    "mig",
    "continues",
    "supporting",
    "instances",
    "continuing",
    "serve",
    "traffic",
    "instances",
    "remaining",
    "zones",
    "cloud",
    "low",
    "balancing",
    "use",
    "instance",
    "groups",
    "serve",
    "traffic",
    "add",
    "instance",
    "groups",
    "target",
    "pool",
    "back",
    "end",
    "instance",
    "group",
    "type",
    "back",
    "end",
    "instances",
    "instance",
    "group",
    "respond",
    "traffic",
    "load",
    "balancer",
    "back",
    "end",
    "service",
    "turn",
    "knows",
    "instances",
    "use",
    "much",
    "traffic",
    "handle",
    "much",
    "traffic",
    "currently",
    "handling",
    "addition",
    "service",
    "monitors",
    "health",
    "checking",
    "send",
    "new",
    "connections",
    "unhealthy",
    "instances",
    "applications",
    "require",
    "additional",
    "compute",
    "resources",
    "migs",
    "support",
    "auto",
    "scaling",
    "dynamically",
    "add",
    "remove",
    "instances",
    "mig",
    "response",
    "increase",
    "decrease",
    "load",
    "turn",
    "auto",
    "scaling",
    "configure",
    "auto",
    "scaling",
    "policy",
    "specify",
    "want",
    "group",
    "scale",
    "auto",
    "scaling",
    "scale",
    "meet",
    "load",
    "demands",
    "also",
    "shrink",
    "remove",
    "instances",
    "load",
    "decreases",
    "reduce",
    "costs",
    "auto",
    "scaling",
    "policies",
    "include",
    "scaling",
    "based",
    "cpu",
    "utilization",
    "load",
    "balancing",
    "capacity",
    "cloud",
    "monitoring",
    "metrics",
    "comes",
    "auto",
    "updating",
    "easily",
    "safely",
    "deploy",
    "new",
    "versions",
    "software",
    "instances",
    "mig",
    "rollout",
    "update",
    "happens",
    "automatically",
    "based",
    "specifications",
    "also",
    "control",
    "speed",
    "scope",
    "deployments",
    "order",
    "minimize",
    "disruptions",
    "application",
    "optionally",
    "perform",
    "rolling",
    "updates",
    "well",
    "partial",
    "rollouts",
    "canary",
    "testing",
    "know",
    "rolling",
    "updates",
    "allow",
    "updates",
    "take",
    "place",
    "zero",
    "downtime",
    "incrementally",
    "updating",
    "instances",
    "new",
    "ones",
    "well",
    "canary",
    "testing",
    "way",
    "reduce",
    "risk",
    "validate",
    "new",
    "software",
    "releasing",
    "software",
    "small",
    "percentage",
    "users",
    "canary",
    "testing",
    "deliver",
    "certain",
    "groups",
    "users",
    "time",
    "also",
    "referred",
    "stage",
    "rollouts",
    "best",
    "practice",
    "devops",
    "software",
    "development",
    "things",
    "wanted",
    "point",
    "relate",
    "migs",
    "reduce",
    "cost",
    "workload",
    "using",
    "preemptable",
    "vm",
    "instances",
    "instance",
    "group",
    "deleted",
    "auto",
    "healing",
    "bring",
    "instances",
    "back",
    "preemptable",
    "capacity",
    "becomes",
    "available",
    "also",
    "deploy",
    "containers",
    "instances",
    "managed",
    "instance",
    "groups",
    "specify",
    "container",
    "image",
    "instance",
    "template",
    "used",
    "create",
    "mig",
    "vm",
    "created",
    "container",
    "optimized",
    "os",
    "includes",
    "docker",
    "container",
    "starts",
    "automatically",
    "vm",
    "group",
    "finally",
    "creating",
    "migs",
    "must",
    "define",
    "vpc",
    "network",
    "reside",
    "although",
    "define",
    "network",
    "google",
    "cloud",
    "attempt",
    "use",
    "default",
    "network",
    "moving",
    "unmanaged",
    "instance",
    "groups",
    "minute",
    "unmanaged",
    "instance",
    "groups",
    "contain",
    "heterogeneous",
    "instances",
    "instances",
    "mixed",
    "sizes",
    "cpu",
    "ram",
    "well",
    "instance",
    "types",
    "add",
    "remove",
    "instances",
    "group",
    "whenever",
    "choose",
    "major",
    "downside",
    "though",
    "unmanaged",
    "instance",
    "groups",
    "offer",
    "auto",
    "scaling",
    "auto",
    "healing",
    "rolling",
    "update",
    "support",
    "support",
    "use",
    "instance",
    "templates",
    "good",
    "fit",
    "deploying",
    "highly",
    "available",
    "scalable",
    "workloads",
    "use",
    "unmanaged",
    "instance",
    "groups",
    "need",
    "apply",
    "load",
    "balancing",
    "groups",
    "mixed",
    "types",
    "instances",
    "need",
    "manage",
    "instances",
    "unmanaged",
    "instance",
    "groups",
    "designed",
    "special",
    "use",
    "cases",
    "need",
    "mix",
    "instance",
    "types",
    "almost",
    "cases",
    "using",
    "managed",
    "instance",
    "groups",
    "intended",
    "capture",
    "benefits",
    "features",
    "offer",
    "order",
    "launch",
    "instance",
    "group",
    "environment",
    "need",
    "another",
    "resource",
    "instance",
    "templates",
    "come",
    "play",
    "instance",
    "template",
    "resource",
    "use",
    "create",
    "vm",
    "instances",
    "managed",
    "instance",
    "groups",
    "instance",
    "templates",
    "define",
    "machine",
    "type",
    "boot",
    "disk",
    "image",
    "container",
    "image",
    "well",
    "labels",
    "instance",
    "properties",
    "use",
    "instance",
    "template",
    "create",
    "mig",
    "vm",
    "instance",
    "instance",
    "templates",
    "easy",
    "way",
    "save",
    "vm",
    "instances",
    "configuration",
    "use",
    "later",
    "recreate",
    "vms",
    "groups",
    "vms",
    "instance",
    "template",
    "global",
    "resource",
    "bound",
    "zone",
    "region",
    "although",
    "restrict",
    "template",
    "zone",
    "calling",
    "specific",
    "zonal",
    "resources",
    "something",
    "note",
    "ever",
    "using",
    "migs",
    "want",
    "create",
    "group",
    "identical",
    "instances",
    "must",
    "use",
    "instance",
    "template",
    "create",
    "mig",
    "something",
    "always",
    "keep",
    "front",
    "mind",
    "using",
    "migs",
    "two",
    "resources",
    "instance",
    "templates",
    "managed",
    "instance",
    "groups",
    "go",
    "hand",
    "hand",
    "things",
    "note",
    "instance",
    "templates",
    "designed",
    "create",
    "instances",
    "identical",
    "configurations",
    "update",
    "existing",
    "instance",
    "template",
    "change",
    "instance",
    "template",
    "create",
    "need",
    "make",
    "changes",
    "configuration",
    "create",
    "new",
    "instance",
    "template",
    "create",
    "template",
    "based",
    "existing",
    "instance",
    "template",
    "based",
    "existing",
    "instance",
    "use",
    "existing",
    "vm",
    "make",
    "template",
    "save",
    "configuration",
    "using",
    "gcloud",
    "command",
    "gcloud",
    "instance",
    "dash",
    "templates",
    "create",
    "use",
    "console",
    "simply",
    "go",
    "instance",
    "templates",
    "page",
    "click",
    "template",
    "want",
    "update",
    "click",
    "create",
    "similar",
    "last",
    "thing",
    "wanted",
    "point",
    "use",
    "custom",
    "public",
    "images",
    "instance",
    "templates",
    "pretty",
    "much",
    "cover",
    "comes",
    "instance",
    "groups",
    "instance",
    "templates",
    "managed",
    "instance",
    "groups",
    "great",
    "looking",
    "high",
    "availability",
    "priority",
    "letting",
    "migs",
    "work",
    "keeping",
    "environment",
    "running",
    "mark",
    "lesson",
    "complete",
    "whenever",
    "ready",
    "join",
    "next",
    "one",
    "go",
    "instance",
    "groups",
    "instance",
    "templates",
    "load",
    "balancers",
    "demo",
    "welcome",
    "back",
    "demo",
    "going",
    "put",
    "everything",
    "learned",
    "together",
    "demo",
    "called",
    "managing",
    "bow",
    "ties",
    "going",
    "create",
    "instance",
    "template",
    "next",
    "going",
    "use",
    "create",
    "instance",
    "group",
    "going",
    "create",
    "low",
    "balancer",
    "new",
    "back",
    "end",
    "create",
    "health",
    "checks",
    "along",
    "way",
    "going",
    "verify",
    "instances",
    "working",
    "browsing",
    "load",
    "balancer",
    "ip",
    "verifying",
    "website",
    "application",
    "going",
    "stress",
    "test",
    "one",
    "instances",
    "simulate",
    "scale",
    "using",
    "auto",
    "scaling",
    "going",
    "simulate",
    "scaling",
    "instance",
    "group",
    "back",
    "quite",
    "bit",
    "said",
    "let",
    "dive",
    "logged",
    "tony",
    "bowties",
    "project",
    "bowtie",
    "inc",
    "first",
    "thing",
    "want",
    "want",
    "make",
    "sure",
    "default",
    "vpc",
    "network",
    "already",
    "created",
    "double",
    "check",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "scroll",
    "vpc",
    "network",
    "yes",
    "default",
    "vpc",
    "network",
    "going",
    "go",
    "ahead",
    "start",
    "creating",
    "resources",
    "want",
    "want",
    "create",
    "instance",
    "template",
    "order",
    "going",
    "go",
    "back",
    "navigation",
    "menu",
    "going",
    "go",
    "compute",
    "engine",
    "go",
    "instance",
    "templates",
    "see",
    "currently",
    "instance",
    "templates",
    "look",
    "go",
    "ahead",
    "click",
    "create",
    "instance",
    "template",
    "note",
    "monthly",
    "costs",
    "associated",
    "instance",
    "templates",
    "estimate",
    "right",
    "show",
    "cost",
    "instance",
    "creating",
    "template",
    "okay",
    "getting",
    "right",
    "going",
    "name",
    "instance",
    "template",
    "bowtie",
    "template",
    "since",
    "spinning",
    "lot",
    "vms",
    "want",
    "conscious",
    "costs",
    "series",
    "going",
    "click",
    "drop",
    "going",
    "select",
    "n1",
    "machine",
    "type",
    "going",
    "select",
    "f1",
    "micro",
    "smallest",
    "instance",
    "type",
    "well",
    "cheapest",
    "within",
    "google",
    "cloud",
    "go",
    "ahead",
    "scroll",
    "right",
    "bottom",
    "firewall",
    "want",
    "check",
    "allow",
    "http",
    "traffic",
    "next",
    "want",
    "select",
    "management",
    "security",
    "disks",
    "networking",
    "sold",
    "tenancy",
    "scroll",
    "little",
    "bit",
    "startup",
    "script",
    "going",
    "paste",
    "script",
    "available",
    "repo",
    "find",
    "link",
    "script",
    "repo",
    "lesson",
    "text",
    "leave",
    "options",
    "default",
    "simply",
    "click",
    "create",
    "going",
    "take",
    "couple",
    "minutes",
    "okay",
    "instance",
    "template",
    "ready",
    "next",
    "step",
    "want",
    "create",
    "instance",
    "group",
    "said",
    "previous",
    "lesson",
    "order",
    "create",
    "instance",
    "group",
    "need",
    "instance",
    "template",
    "hence",
    "made",
    "instance",
    "template",
    "first",
    "okay",
    "instance",
    "template",
    "created",
    "created",
    "instance",
    "template",
    "head",
    "instance",
    "groups",
    "left",
    "hand",
    "menu",
    "expected",
    "instance",
    "groups",
    "go",
    "ahead",
    "click",
    "big",
    "blue",
    "button",
    "create",
    "instance",
    "group",
    "going",
    "make",
    "sure",
    "new",
    "managed",
    "instance",
    "group",
    "stateless",
    "selected",
    "option",
    "choosing",
    "stateful",
    "instance",
    "group",
    "well",
    "unmanaged",
    "instance",
    "group",
    "going",
    "keep",
    "things",
    "stateless",
    "name",
    "instance",
    "group",
    "simply",
    "call",
    "bowtie",
    "group",
    "going",
    "use",
    "name",
    "description",
    "location",
    "want",
    "check",
    "multiple",
    "zones",
    "region",
    "want",
    "select",
    "us",
    "east",
    "one",
    "click",
    "configure",
    "zones",
    "see",
    "select",
    "different",
    "zones",
    "available",
    "region",
    "choose",
    "instances",
    "going",
    "keep",
    "three",
    "zones",
    "going",
    "scroll",
    "little",
    "bit",
    "instance",
    "template",
    "see",
    "bow",
    "tie",
    "template",
    "select",
    "scroll",
    "little",
    "bit",
    "minimum",
    "number",
    "instances",
    "want",
    "set",
    "minimum",
    "number",
    "instances",
    "3",
    "maximum",
    "number",
    "instances",
    "want",
    "set",
    "6",
    "going",
    "double",
    "amount",
    "minimum",
    "number",
    "instances",
    "scaled",
    "maximum",
    "6",
    "instances",
    "scaled",
    "low",
    "traffic",
    "three",
    "instances",
    "scroll",
    "auto",
    "healing",
    "want",
    "select",
    "health",
    "check",
    "going",
    "go",
    "ahead",
    "create",
    "new",
    "health",
    "check",
    "name",
    "call",
    "healthy",
    "bow",
    "ties",
    "going",
    "use",
    "description",
    "going",
    "leave",
    "rest",
    "default",
    "go",
    "click",
    "save",
    "continue",
    "going",
    "scroll",
    "going",
    "leave",
    "rest",
    "simply",
    "click",
    "create",
    "going",
    "take",
    "couple",
    "minutes",
    "going",
    "pause",
    "video",
    "back",
    "flash",
    "okay",
    "instance",
    "group",
    "created",
    "get",
    "better",
    "look",
    "going",
    "click",
    "bow",
    "tie",
    "group",
    "see",
    "three",
    "instances",
    "created",
    "go",
    "vm",
    "instances",
    "see",
    "three",
    "instances",
    "instance",
    "groups",
    "health",
    "check",
    "enabled",
    "shows",
    "instances",
    "unhealthy",
    "still",
    "need",
    "create",
    "firewall",
    "rule",
    "allow",
    "google",
    "health",
    "check",
    "probes",
    "reach",
    "vm",
    "instances",
    "going",
    "go",
    "ahead",
    "create",
    "firewall",
    "rule",
    "bring",
    "health",
    "check",
    "status",
    "healthy",
    "going",
    "go",
    "navigation",
    "menu",
    "scroll",
    "vpc",
    "network",
    "go",
    "firewall",
    "firewall",
    "expected",
    "default",
    "firewall",
    "rules",
    "default",
    "created",
    "vpc",
    "network",
    "going",
    "go",
    "create",
    "firewall",
    "name",
    "firewall",
    "rule",
    "allow",
    "health",
    "check",
    "going",
    "use",
    "description",
    "going",
    "scroll",
    "little",
    "bit",
    "targets",
    "going",
    "select",
    "instances",
    "network",
    "source",
    "filter",
    "going",
    "leave",
    "p",
    "ranges",
    "source",
    "p",
    "ranges",
    "want",
    "enter",
    "ip",
    "addresses",
    "google",
    "cloud",
    "health",
    "check",
    "probes",
    "find",
    "documentation",
    "also",
    "supplying",
    "instructions",
    "two",
    "sets",
    "ip",
    "addresses",
    "need",
    "entered",
    "note",
    "need",
    "know",
    "exam",
    "always",
    "good",
    "know",
    "ever",
    "adding",
    "health",
    "checks",
    "instances",
    "going",
    "scroll",
    "little",
    "bit",
    "protocols",
    "ports",
    "tcp",
    "going",
    "check",
    "put",
    "port",
    "pretty",
    "much",
    "whenever",
    "entered",
    "information",
    "simply",
    "click",
    "create",
    "firewall",
    "rule",
    "allow",
    "health",
    "checks",
    "done",
    "may",
    "take",
    "minute",
    "two",
    "head",
    "back",
    "compute",
    "engine",
    "instances",
    "go",
    "instance",
    "groups",
    "able",
    "see",
    "instances",
    "healthy",
    "whenever",
    "creating",
    "instance",
    "groups",
    "applying",
    "health",
    "checks",
    "firewall",
    "rule",
    "necessary",
    "please",
    "aware",
    "okay",
    "created",
    "instance",
    "templates",
    "created",
    "instance",
    "groups",
    "created",
    "firewall",
    "rule",
    "order",
    "satisfy",
    "health",
    "checks",
    "move",
    "next",
    "step",
    "creating",
    "load",
    "balancer",
    "going",
    "go",
    "back",
    "navigation",
    "menu",
    "going",
    "scroll",
    "network",
    "services",
    "load",
    "balancing",
    "expected",
    "load",
    "balancers",
    "created",
    "whenever",
    "ready",
    "click",
    "big",
    "blue",
    "button",
    "create",
    "new",
    "low",
    "balancer",
    "option",
    "creating",
    "http",
    "https",
    "load",
    "balancer",
    "along",
    "tcp",
    "load",
    "balancer",
    "udp",
    "load",
    "balancer",
    "serving",
    "external",
    "traffic",
    "port",
    "80",
    "going",
    "use",
    "http",
    "load",
    "balancer",
    "click",
    "start",
    "configuration",
    "prompted",
    "decide",
    "internet",
    "facing",
    "internal",
    "going",
    "accepting",
    "traffic",
    "internet",
    "load",
    "bouncer",
    "make",
    "sure",
    "internet",
    "vms",
    "checked",
    "simply",
    "click",
    "continue",
    "next",
    "prompted",
    "page",
    "bunch",
    "configurations",
    "enter",
    "get",
    "second",
    "first",
    "need",
    "name",
    "load",
    "balancer",
    "going",
    "call",
    "bowtie",
    "dash",
    "lb",
    "low",
    "balancer",
    "next",
    "step",
    "load",
    "balancer",
    "need",
    "configure",
    "back",
    "end",
    "click",
    "back",
    "end",
    "configuration",
    "option",
    "selecting",
    "services",
    "buckets",
    "going",
    "go",
    "ahead",
    "click",
    "services",
    "create",
    "service",
    "prompted",
    "bunch",
    "fields",
    "fill",
    "order",
    "create",
    "service",
    "go",
    "ahead",
    "name",
    "backend",
    "service",
    "bowtie",
    "backend",
    "service",
    "type",
    "going",
    "instance",
    "group",
    "leave",
    "protocol",
    "named",
    "port",
    "timeout",
    "going",
    "using",
    "http",
    "instance",
    "group",
    "new",
    "select",
    "see",
    "available",
    "bow",
    "tie",
    "group",
    "instance",
    "group",
    "select",
    "scroll",
    "little",
    "bit",
    "port",
    "numbers",
    "enter",
    "port",
    "80",
    "leave",
    "options",
    "default",
    "simply",
    "click",
    "done",
    "ever",
    "interested",
    "always",
    "add",
    "cache",
    "using",
    "cloud",
    "cdn",
    "know",
    "gone",
    "cloud",
    "cdn",
    "course",
    "know",
    "google",
    "content",
    "delivery",
    "network",
    "uses",
    "google",
    "global",
    "edge",
    "network",
    "serve",
    "content",
    "closer",
    "users",
    "accelerates",
    "websites",
    "applications",
    "delivers",
    "better",
    "user",
    "experience",
    "user",
    "okay",
    "moving",
    "health",
    "check",
    "click",
    "drop",
    "see",
    "healthy",
    "bow",
    "ties",
    "select",
    "health",
    "check",
    "note",
    "advanced",
    "configurations",
    "set",
    "session",
    "affinity",
    "connection",
    "draining",
    "timeout",
    "well",
    "request",
    "response",
    "headers",
    "need",
    "demo",
    "going",
    "go",
    "ahead",
    "collapse",
    "finished",
    "filling",
    "fields",
    "simply",
    "click",
    "create",
    "okay",
    "back",
    "end",
    "configuration",
    "host",
    "path",
    "rules",
    "configured",
    "thing",
    "left",
    "configure",
    "front",
    "end",
    "go",
    "click",
    "configuration",
    "name",
    "bowtie",
    "service",
    "gon",
    "na",
    "keep",
    "protocols",
    "http",
    "would",
    "select",
    "network",
    "service",
    "tier",
    "choosing",
    "either",
    "premium",
    "standard",
    "remember",
    "load",
    "balancing",
    "lesson",
    "order",
    "use",
    "global",
    "load",
    "balancer",
    "need",
    "use",
    "premium",
    "tier",
    "okay",
    "going",
    "keep",
    "ipv4",
    "ephemeral",
    "ip",
    "address",
    "port",
    "80",
    "finished",
    "configuring",
    "front",
    "end",
    "simply",
    "click",
    "done",
    "go",
    "click",
    "review",
    "finalize",
    "give",
    "summary",
    "configuration",
    "happy",
    "way",
    "everything",
    "configured",
    "well",
    "simply",
    "click",
    "create",
    "may",
    "take",
    "minute",
    "two",
    "create",
    "low",
    "balancer",
    "along",
    "back",
    "end",
    "front",
    "end",
    "going",
    "pause",
    "video",
    "minute",
    "back",
    "say",
    "cat",
    "hat",
    "okay",
    "load",
    "balancer",
    "created",
    "get",
    "little",
    "bit",
    "details",
    "going",
    "drill",
    "see",
    "details",
    "load",
    "balancer",
    "along",
    "monitoring",
    "caching",
    "caching",
    "enabled",
    "therefore",
    "nothing",
    "showing",
    "going",
    "back",
    "details",
    "see",
    "new",
    "ip",
    "address",
    "load",
    "balancer",
    "getting",
    "minute",
    "going",
    "go",
    "back",
    "going",
    "check",
    "back",
    "ends",
    "click",
    "bow",
    "tie",
    "back",
    "end",
    "service",
    "see",
    "requests",
    "per",
    "second",
    "well",
    "configuration",
    "see",
    "caution",
    "symbol",
    "showing",
    "instances",
    "unhealthy",
    "low",
    "balancer",
    "needs",
    "time",
    "full",
    "health",
    "check",
    "instances",
    "instance",
    "group",
    "take",
    "time",
    "okay",
    "going",
    "go",
    "back",
    "check",
    "front",
    "end",
    "nothing",
    "drill",
    "front",
    "end",
    "service",
    "show",
    "scope",
    "address",
    "protocol",
    "network",
    "tier",
    "low",
    "balancer",
    "end",
    "part",
    "one",
    "demo",
    "getting",
    "bit",
    "long",
    "decided",
    "break",
    "would",
    "great",
    "opportunity",
    "get",
    "stretch",
    "get",
    "coffee",
    "tea",
    "whenever",
    "ready",
    "part",
    "two",
    "starting",
    "immediately",
    "end",
    "part",
    "one",
    "mark",
    "complete",
    "see",
    "part",
    "two",
    "part",
    "two",
    "managing",
    "bow",
    "ties",
    "demo",
    "starting",
    "exactly",
    "left",
    "part",
    "one",
    "said",
    "let",
    "dive",
    "move",
    "forward",
    "want",
    "make",
    "sure",
    "instances",
    "considered",
    "healthy",
    "load",
    "balancer",
    "see",
    "instances",
    "instance",
    "group",
    "considered",
    "healthy",
    "load",
    "balancer",
    "verify",
    "going",
    "go",
    "ahead",
    "copy",
    "p",
    "address",
    "open",
    "new",
    "tab",
    "browser",
    "simply",
    "paste",
    "success",
    "see",
    "managing",
    "production",
    "many",
    "bow",
    "ties",
    "automated",
    "managing",
    "wearer",
    "definitely",
    "another",
    "fine",
    "message",
    "people",
    "bow",
    "tie",
    "inc",
    "although",
    "simple",
    "web",
    "page",
    "used",
    "couple",
    "variables",
    "show",
    "low",
    "balancing",
    "happens",
    "background",
    "traffic",
    "load",
    "balanced",
    "instances",
    "instance",
    "group",
    "click",
    "refresh",
    "see",
    "machine",
    "name",
    "data",
    "center",
    "change",
    "every",
    "time",
    "click",
    "refresh",
    "traffic",
    "routed",
    "different",
    "instance",
    "different",
    "zone",
    "simple",
    "simulation",
    "traffic",
    "low",
    "balance",
    "different",
    "instances",
    "different",
    "zones",
    "okay",
    "verified",
    "website",
    "application",
    "going",
    "close",
    "tab",
    "created",
    "instance",
    "template",
    "created",
    "instance",
    "group",
    "created",
    "low",
    "balancer",
    "back",
    "end",
    "front",
    "end",
    "service",
    "looks",
    "like",
    "everything",
    "seems",
    "working",
    "together",
    "nicely",
    "going",
    "go",
    "ahead",
    "simulate",
    "scale",
    "using",
    "auto",
    "scaling",
    "order",
    "simulate",
    "going",
    "stress",
    "test",
    "one",
    "instances",
    "going",
    "head",
    "back",
    "navigation",
    "menu",
    "scroll",
    "compute",
    "engine",
    "ssh",
    "one",
    "instances",
    "run",
    "stress",
    "test",
    "going",
    "pick",
    "one",
    "top",
    "whenever",
    "logged",
    "simply",
    "paste",
    "command",
    "included",
    "instructions",
    "run",
    "stress",
    "test",
    "stress",
    "test",
    "application",
    "called",
    "stress",
    "included",
    "startup",
    "script",
    "put",
    "stress",
    "server",
    "trigger",
    "scale",
    "handle",
    "load",
    "30",
    "seconds",
    "go",
    "ahead",
    "hit",
    "enter",
    "head",
    "back",
    "console",
    "minute",
    "two",
    "see",
    "new",
    "instances",
    "created",
    "instance",
    "group",
    "order",
    "handle",
    "load",
    "okay",
    "couple",
    "minutes",
    "showing",
    "instances",
    "created",
    "scaling",
    "maximum",
    "amount",
    "instances",
    "set",
    "six",
    "going",
    "drill",
    "yes",
    "scale",
    "happening",
    "new",
    "instances",
    "created",
    "handle",
    "load",
    "going",
    "give",
    "minute",
    "okay",
    "see",
    "instances",
    "created",
    "added",
    "instance",
    "group",
    "marked",
    "healthy",
    "verify",
    "instances",
    "working",
    "going",
    "go",
    "ahead",
    "open",
    "new",
    "tab",
    "going",
    "plug",
    "ip",
    "address",
    "load",
    "balancer",
    "going",
    "simply",
    "cycle",
    "instances",
    "make",
    "sure",
    "working",
    "looks",
    "like",
    "issues",
    "simulated",
    "scale",
    "wanted",
    "go",
    "ahead",
    "run",
    "scale",
    "first",
    "going",
    "close",
    "tabs",
    "regards",
    "scaling",
    "10",
    "minute",
    "stabilization",
    "period",
    "adjusted",
    "scaling",
    "feature",
    "google",
    "cloud",
    "respect",
    "time",
    "student",
    "going",
    "show",
    "work",
    "around",
    "trigger",
    "scale",
    "sooner",
    "strictly",
    "demo",
    "also",
    "wanted",
    "caution",
    "never",
    "done",
    "production",
    "environment",
    "always",
    "wait",
    "scaling",
    "happen",
    "never",
    "force",
    "method",
    "used",
    "strictly",
    "learning",
    "purposes",
    "save",
    "time",
    "going",
    "go",
    "ahead",
    "top",
    "menu",
    "click",
    "rolling",
    "restart",
    "replace",
    "bring",
    "new",
    "page",
    "option",
    "either",
    "restart",
    "replace",
    "instances",
    "instance",
    "group",
    "purposes",
    "operation",
    "make",
    "sure",
    "restart",
    "checked",
    "restart",
    "instances",
    "bring",
    "ones",
    "needed",
    "going",
    "go",
    "ahead",
    "click",
    "restart",
    "going",
    "go",
    "back",
    "instance",
    "group",
    "console",
    "going",
    "give",
    "minutes",
    "cook",
    "right",
    "back",
    "flash",
    "okay",
    "looks",
    "like",
    "instance",
    "group",
    "scaled",
    "left",
    "three",
    "instances",
    "minimum",
    "configured",
    "instance",
    "group",
    "pretty",
    "much",
    "covers",
    "managing",
    "bow",
    "ties",
    "demo",
    "wanted",
    "congratulate",
    "making",
    "demo",
    "hope",
    "extremely",
    "useful",
    "excelling",
    "knowledge",
    "managing",
    "instance",
    "templates",
    "managed",
    "instance",
    "groups",
    "creating",
    "load",
    "balancers",
    "services",
    "demo",
    "lot",
    "pack",
    "everything",
    "learned",
    "last",
    "lessons",
    "recap",
    "created",
    "instance",
    "template",
    "startup",
    "script",
    "created",
    "new",
    "instance",
    "group",
    "health",
    "check",
    "go",
    "configuring",
    "auto",
    "scaling",
    "minimum",
    "three",
    "instances",
    "created",
    "firewall",
    "rule",
    "health",
    "check",
    "probes",
    "able",
    "connect",
    "application",
    "created",
    "load",
    "balancer",
    "back",
    "end",
    "service",
    "verified",
    "website",
    "application",
    "indeed",
    "running",
    "ran",
    "stress",
    "test",
    "allow",
    "simulation",
    "scale",
    "instance",
    "group",
    "simulated",
    "scale",
    "instance",
    "group",
    "great",
    "job",
    "completed",
    "demo",
    "want",
    "make",
    "sure",
    "accumulating",
    "unnecessary",
    "costs",
    "going",
    "go",
    "ahead",
    "walk",
    "breakdown",
    "deleting",
    "resources",
    "first",
    "going",
    "go",
    "ahead",
    "delete",
    "load",
    "balancer",
    "go",
    "back",
    "navigation",
    "menu",
    "scroll",
    "network",
    "services",
    "go",
    "load",
    "balancing",
    "going",
    "go",
    "ahead",
    "check",
    "bow",
    "tie",
    "lb",
    "simply",
    "go",
    "top",
    "click",
    "delete",
    "going",
    "ask",
    "sure",
    "want",
    "also",
    "going",
    "select",
    "bow",
    "tie",
    "back",
    "end",
    "service",
    "delete",
    "load",
    "balancer",
    "back",
    "end",
    "service",
    "going",
    "go",
    "ahead",
    "delete",
    "load",
    "balancer",
    "selected",
    "resources",
    "clear",
    "within",
    "seconds",
    "okay",
    "load",
    "balancer",
    "deleted",
    "going",
    "go",
    "back",
    "end",
    "make",
    "sure",
    "everything",
    "good",
    "yeah",
    "clean",
    "thing",
    "front",
    "end",
    "move",
    "instance",
    "groups",
    "going",
    "head",
    "back",
    "navigation",
    "menu",
    "go",
    "compute",
    "engine",
    "go",
    "instance",
    "groups",
    "simply",
    "check",
    "bow",
    "tie",
    "group",
    "simply",
    "click",
    "delete",
    "going",
    "prompted",
    "notification",
    "make",
    "sure",
    "want",
    "delete",
    "bow",
    "tie",
    "group",
    "yes",
    "want",
    "delete",
    "take",
    "minute",
    "okay",
    "actually",
    "took",
    "couple",
    "minutes",
    "instance",
    "group",
    "deleted",
    "going",
    "go",
    "instance",
    "templates",
    "going",
    "delete",
    "template",
    "check",
    "bow",
    "tie",
    "template",
    "simply",
    "click",
    "delete",
    "going",
    "get",
    "prompt",
    "make",
    "sure",
    "want",
    "delete",
    "instance",
    "template",
    "yes",
    "want",
    "delete",
    "success",
    "deleted",
    "resources",
    "although",
    "one",
    "resource",
    "billed",
    "since",
    "cleaning",
    "everything",
    "might",
    "well",
    "clean",
    "well",
    "firewall",
    "rule",
    "created",
    "go",
    "navigation",
    "menu",
    "scroll",
    "vpc",
    "network",
    "going",
    "go",
    "firewall",
    "left",
    "hand",
    "menu",
    "going",
    "check",
    "allow",
    "health",
    "check",
    "firewall",
    "rule",
    "simply",
    "click",
    "delete",
    "going",
    "get",
    "prompt",
    "make",
    "sure",
    "want",
    "delete",
    "yes",
    "want",
    "delete",
    "going",
    "quickly",
    "hit",
    "refresh",
    "yes",
    "deleted",
    "concludes",
    "end",
    "demo",
    "mark",
    "complete",
    "see",
    "next",
    "one",
    "welcome",
    "back",
    "next",
    "section",
    "focusing",
    "google",
    "cloud",
    "premier",
    "container",
    "orchestration",
    "service",
    "called",
    "kubernetes",
    "dive",
    "right",
    "kubernetes",
    "benefits",
    "gives",
    "containers",
    "need",
    "understanding",
    "containers",
    "value",
    "containers",
    "provide",
    "lesson",
    "covering",
    "difference",
    "virtual",
    "machines",
    "containers",
    "containers",
    "work",
    "value",
    "proposition",
    "bring",
    "said",
    "let",
    "dive",
    "know",
    "container",
    "technology",
    "gets",
    "name",
    "shipping",
    "industry",
    "products",
    "get",
    "placed",
    "standardized",
    "shipping",
    "containers",
    "designed",
    "fit",
    "ship",
    "accommodates",
    "container",
    "standard",
    "size",
    "instead",
    "various",
    "sizes",
    "packaging",
    "standardizing",
    "process",
    "keeping",
    "items",
    "together",
    "container",
    "moved",
    "unit",
    "costs",
    "less",
    "way",
    "well",
    "standardization",
    "allows",
    "consistency",
    "packing",
    "moving",
    "containers",
    "placing",
    "ships",
    "docks",
    "well",
    "storage",
    "matter",
    "container",
    "always",
    "stays",
    "size",
    "contents",
    "stay",
    "isolated",
    "containers",
    "stacked",
    "get",
    "details",
    "containers",
    "wanted",
    "cover",
    "got",
    "great",
    "way",
    "discuss",
    "containers",
    "comparison",
    "virtual",
    "machines",
    "discussed",
    "previous",
    "lesson",
    "comes",
    "vms",
    "systems",
    "virtualized",
    "hypervisor",
    "sits",
    "top",
    "underlying",
    "host",
    "infrastructure",
    "underlying",
    "hardware",
    "virtualized",
    "multiple",
    "operating",
    "system",
    "instances",
    "run",
    "hardware",
    "vm",
    "runs",
    "operating",
    "system",
    "access",
    "virtualized",
    "resources",
    "representing",
    "underlying",
    "hardware",
    "due",
    "process",
    "vms",
    "come",
    "cost",
    "large",
    "overhead",
    "cpu",
    "memory",
    "disk",
    "well",
    "large",
    "due",
    "fact",
    "vm",
    "needs",
    "individual",
    "operating",
    "system",
    "also",
    "lacks",
    "standardization",
    "vm",
    "making",
    "unique",
    "due",
    "os",
    "configuration",
    "software",
    "installed",
    "software",
    "libraries",
    "thus",
    "making",
    "portable",
    "able",
    "run",
    "environment",
    "dealing",
    "containers",
    "things",
    "run",
    "differently",
    "underlying",
    "host",
    "infrastructure",
    "still",
    "instead",
    "using",
    "hypervisor",
    "abstracting",
    "underlying",
    "hardware",
    "containerization",
    "takes",
    "one",
    "step",
    "abstracts",
    "operating",
    "system",
    "thus",
    "leaving",
    "application",
    "dependencies",
    "neatly",
    "packaged",
    "standardized",
    "container",
    "done",
    "installing",
    "operating",
    "system",
    "top",
    "host",
    "infrastructure",
    "separate",
    "layer",
    "top",
    "host",
    "operating",
    "system",
    "called",
    "container",
    "engine",
    "instead",
    "operating",
    "system",
    "containers",
    "share",
    "operating",
    "system",
    "kernel",
    "containers",
    "operating",
    "independently",
    "running",
    "application",
    "code",
    "dependencies",
    "needed",
    "run",
    "application",
    "allows",
    "container",
    "consume",
    "little",
    "memory",
    "disk",
    "making",
    "containers",
    "lightweight",
    "efficient",
    "portable",
    "containerized",
    "applications",
    "start",
    "seconds",
    "many",
    "instances",
    "application",
    "fit",
    "onto",
    "machine",
    "compared",
    "vm",
    "environment",
    "container",
    "brought",
    "environments",
    "running",
    "docker",
    "able",
    "run",
    "without",
    "worries",
    "running",
    "issues",
    "compatibility",
    "although",
    "different",
    "container",
    "engines",
    "one",
    "received",
    "popularity",
    "docker",
    "engine",
    "referring",
    "remainder",
    "course",
    "docker",
    "image",
    "collection",
    "stack",
    "layers",
    "created",
    "sequential",
    "instructions",
    "docker",
    "file",
    "line",
    "dockerfile",
    "run",
    "line",
    "line",
    "unique",
    "layer",
    "written",
    "image",
    "makes",
    "docker",
    "images",
    "unique",
    "time",
    "add",
    "another",
    "instruction",
    "docker",
    "file",
    "new",
    "layer",
    "created",
    "going",
    "practical",
    "example",
    "shown",
    "right",
    "docker",
    "file",
    "able",
    "map",
    "line",
    "code",
    "layer",
    "shown",
    "docker",
    "image",
    "left",
    "line",
    "marked",
    "shows",
    "base",
    "image",
    "image",
    "using",
    "example",
    "shown",
    "shows",
    "ubuntu",
    "image",
    "version",
    "used",
    "next",
    "run",
    "instruction",
    "used",
    "perform",
    "general",
    "update",
    "install",
    "apache",
    "2",
    "output",
    "message",
    "displayed",
    "written",
    "file",
    "next",
    "working",
    "directories",
    "environment",
    "variables",
    "set",
    "using",
    "env",
    "instruction",
    "help",
    "run",
    "apache",
    "runtime",
    "next",
    "layer",
    "expose",
    "instruction",
    "used",
    "expose",
    "container",
    "port",
    "8080",
    "lastly",
    "command",
    "layer",
    "instruction",
    "executing",
    "apache",
    "web",
    "server",
    "executable",
    "path",
    "great",
    "example",
    "docker",
    "file",
    "broken",
    "line",
    "create",
    "layers",
    "image",
    "note",
    "docker",
    "image",
    "starts",
    "base",
    "image",
    "well",
    "line",
    "docker",
    "file",
    "creates",
    "new",
    "layer",
    "added",
    "image",
    "finally",
    "layers",
    "docker",
    "image",
    "read",
    "changed",
    "unless",
    "docker",
    "file",
    "adjusted",
    "reflect",
    "change",
    "get",
    "docker",
    "image",
    "container",
    "well",
    "running",
    "docker",
    "container",
    "actually",
    "instantiation",
    "image",
    "containers",
    "using",
    "image",
    "identical",
    "terms",
    "application",
    "code",
    "runtime",
    "dependencies",
    "could",
    "use",
    "image",
    "multiple",
    "copies",
    "container",
    "different",
    "tasks",
    "makes",
    "individual",
    "container",
    "different",
    "running",
    "containers",
    "include",
    "writable",
    "layer",
    "top",
    "content",
    "runtime",
    "changes",
    "including",
    "rights",
    "updates",
    "data",
    "files",
    "saved",
    "read",
    "write",
    "layer",
    "example",
    "using",
    "command",
    "docker",
    "run",
    "fashionista",
    "docker",
    "container",
    "instantiated",
    "docker",
    "image",
    "read",
    "write",
    "layer",
    "always",
    "added",
    "top",
    "layers",
    "container",
    "created",
    "writing",
    "necessary",
    "files",
    "needed",
    "application",
    "note",
    "docker",
    "containers",
    "always",
    "created",
    "docker",
    "images",
    "containers",
    "use",
    "image",
    "yet",
    "always",
    "different",
    "read",
    "write",
    "layer",
    "matter",
    "amount",
    "containers",
    "running",
    "given",
    "host",
    "containers",
    "created",
    "need",
    "place",
    "store",
    "container",
    "registry",
    "comes",
    "play",
    "container",
    "registry",
    "single",
    "place",
    "store",
    "manage",
    "docker",
    "images",
    "create",
    "docker",
    "file",
    "build",
    "image",
    "want",
    "store",
    "image",
    "central",
    "image",
    "repository",
    "whether",
    "private",
    "one",
    "public",
    "one",
    "popular",
    "public",
    "container",
    "registry",
    "docker",
    "hub",
    "common",
    "registry",
    "many",
    "open",
    "source",
    "images",
    "found",
    "including",
    "used",
    "base",
    "layer",
    "images",
    "like",
    "ubuntu",
    "example",
    "showed",
    "earlier",
    "containers",
    "container",
    "registry",
    "need",
    "able",
    "run",
    "containers",
    "order",
    "run",
    "containers",
    "need",
    "docker",
    "hosts",
    "consist",
    "machine",
    "running",
    "docker",
    "engine",
    "could",
    "laptop",
    "server",
    "run",
    "provided",
    "hosted",
    "cloud",
    "environments",
    "may",
    "refresher",
    "new",
    "containers",
    "hope",
    "given",
    "lot",
    "clarity",
    "containers",
    "value",
    "bring",
    "environment",
    "pretty",
    "much",
    "wanted",
    "cover",
    "short",
    "lesson",
    "introduction",
    "containers",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "gotten",
    "familiar",
    "containers",
    "work",
    "wanted",
    "dive",
    "google",
    "cloud",
    "platform",
    "service",
    "offering",
    "containers",
    "called",
    "google",
    "kubernetes",
    "engine",
    "also",
    "known",
    "short",
    "gke",
    "although",
    "exam",
    "goes",
    "operational",
    "perspective",
    "regards",
    "gke",
    "knowing",
    "foundation",
    "kubernetes",
    "different",
    "topics",
    "kubernetes",
    "must",
    "order",
    "understand",
    "abstractions",
    "take",
    "place",
    "gke",
    "regular",
    "kubernetes",
    "lesson",
    "getting",
    "key",
    "topics",
    "regards",
    "kubernetes",
    "touching",
    "architecture",
    "components",
    "work",
    "together",
    "achieve",
    "desired",
    "state",
    "containerized",
    "workloads",
    "lot",
    "get",
    "said",
    "let",
    "dive",
    "get",
    "gke",
    "need",
    "set",
    "stage",
    "explaining",
    "kubernetes",
    "put",
    "simply",
    "kubernetes",
    "orchestration",
    "platform",
    "containers",
    "invented",
    "google",
    "eventually",
    "open",
    "source",
    "maintained",
    "cncf",
    "short",
    "cloud",
    "native",
    "computing",
    "foundation",
    "achieved",
    "incredible",
    "widespread",
    "adoption",
    "kubernetes",
    "provides",
    "platform",
    "automate",
    "schedule",
    "run",
    "containers",
    "clusters",
    "physical",
    "virtual",
    "machines",
    "thus",
    "eliminating",
    "many",
    "manual",
    "processes",
    "involved",
    "deploying",
    "scaling",
    "containerized",
    "applications",
    "kubernetes",
    "manages",
    "containers",
    "run",
    "applications",
    "ensure",
    "downtime",
    "way",
    "user",
    "define",
    "example",
    "define",
    "container",
    "goes",
    "another",
    "container",
    "needs",
    "start",
    "kubernetes",
    "would",
    "take",
    "care",
    "automatically",
    "seamlessly",
    "kubernetes",
    "provides",
    "framework",
    "run",
    "distributed",
    "systems",
    "resiliently",
    "takes",
    "care",
    "scaling",
    "failover",
    "application",
    "provides",
    "deployment",
    "patterns",
    "allows",
    "manage",
    "applications",
    "tons",
    "flexibility",
    "reliability",
    "power",
    "works",
    "range",
    "container",
    "tools",
    "including",
    "docker",
    "although",
    "adoption",
    "widespread",
    "come",
    "various",
    "challenges",
    "included",
    "scaling",
    "cd",
    "load",
    "balancing",
    "availability",
    "auto",
    "scaling",
    "networking",
    "rollback",
    "faulty",
    "deployments",
    "much",
    "google",
    "cloud",
    "since",
    "developed",
    "managed",
    "offering",
    "kubernetes",
    "providing",
    "managed",
    "environment",
    "deploying",
    "managing",
    "scaling",
    "containerized",
    "applications",
    "using",
    "google",
    "infrastructure",
    "gke",
    "environment",
    "consists",
    "compute",
    "engine",
    "instances",
    "grouped",
    "together",
    "form",
    "cluster",
    "provides",
    "benefits",
    "kubernetes",
    "yet",
    "abstracted",
    "complexity",
    "worry",
    "hardware",
    "top",
    "benefits",
    "advanced",
    "cluster",
    "management",
    "features",
    "google",
    "cloud",
    "provides",
    "things",
    "like",
    "cloud",
    "load",
    "balancing",
    "able",
    "spread",
    "traffic",
    "amongst",
    "clusters",
    "nodes",
    "node",
    "pools",
    "designate",
    "subnets",
    "nodes",
    "within",
    "cluster",
    "additional",
    "flexibility",
    "automatic",
    "scaling",
    "cluster",
    "node",
    "instance",
    "count",
    "automatic",
    "upgrades",
    "clusters",
    "node",
    "software",
    "also",
    "allows",
    "maintain",
    "node",
    "health",
    "availability",
    "node",
    "auto",
    "repair",
    "takes",
    "care",
    "logging",
    "monitoring",
    "google",
    "cloud",
    "operation",
    "suite",
    "visibility",
    "cluster",
    "see",
    "gke",
    "holds",
    "lot",
    "benefits",
    "comes",
    "running",
    "kubernetes",
    "google",
    "cloud",
    "wanted",
    "take",
    "moment",
    "dive",
    "cluster",
    "architecture",
    "help",
    "familiarize",
    "components",
    "involved",
    "cluster",
    "cluster",
    "foundation",
    "google",
    "kubernetes",
    "engine",
    "kubernetes",
    "whole",
    "kubernetes",
    "objects",
    "represent",
    "containerized",
    "applications",
    "run",
    "top",
    "cluster",
    "gke",
    "cluster",
    "consists",
    "least",
    "one",
    "control",
    "plane",
    "multiple",
    "worker",
    "machines",
    "called",
    "nodes",
    "control",
    "plane",
    "node",
    "machines",
    "run",
    "kubernetes",
    "cluster",
    "control",
    "plane",
    "responsible",
    "coordinate",
    "entire",
    "cluster",
    "include",
    "scheduling",
    "workloads",
    "like",
    "containerized",
    "applications",
    "managing",
    "workload",
    "life",
    "cycle",
    "scaling",
    "upgrades",
    "control",
    "plane",
    "also",
    "manages",
    "network",
    "storage",
    "resources",
    "workloads",
    "importantly",
    "manages",
    "state",
    "cluster",
    "make",
    "sure",
    "desired",
    "state",
    "nodes",
    "worker",
    "machines",
    "run",
    "containerized",
    "applications",
    "workloads",
    "nodes",
    "compute",
    "engine",
    "vm",
    "instances",
    "gke",
    "creates",
    "behalf",
    "create",
    "cluster",
    "node",
    "managed",
    "control",
    "plane",
    "receives",
    "updates",
    "node",
    "status",
    "node",
    "also",
    "runs",
    "services",
    "necessary",
    "support",
    "docker",
    "containers",
    "make",
    "cluster",
    "workloads",
    "include",
    "docker",
    "runtime",
    "kubernetes",
    "node",
    "agent",
    "known",
    "cubelet",
    "communicates",
    "control",
    "plane",
    "responsible",
    "starting",
    "running",
    "docker",
    "containers",
    "scheduled",
    "node",
    "diving",
    "deeper",
    "architecture",
    "components",
    "within",
    "control",
    "plane",
    "nodes",
    "familiarize",
    "components",
    "ties",
    "cluster",
    "together",
    "helps",
    "manage",
    "orchestration",
    "well",
    "state",
    "control",
    "plane",
    "unified",
    "endpoint",
    "cluster",
    "control",
    "plane",
    "components",
    "make",
    "global",
    "decisions",
    "cluster",
    "example",
    "scheduling",
    "well",
    "detecting",
    "responding",
    "cluster",
    "events",
    "interactions",
    "cluster",
    "done",
    "via",
    "kubernetes",
    "api",
    "calls",
    "control",
    "plane",
    "runs",
    "kubernetes",
    "api",
    "server",
    "process",
    "handle",
    "requests",
    "make",
    "kubernetes",
    "api",
    "calls",
    "directly",
    "via",
    "http",
    "grpc",
    "also",
    "done",
    "indirectly",
    "running",
    "commands",
    "kubernetes",
    "command",
    "line",
    "client",
    "called",
    "cubectl",
    "course",
    "interact",
    "ui",
    "cloud",
    "console",
    "api",
    "server",
    "process",
    "hub",
    "communications",
    "cluster",
    "moving",
    "next",
    "component",
    "cube",
    "scheduler",
    "cube",
    "scheduler",
    "component",
    "discovers",
    "assigns",
    "newly",
    "created",
    "pods",
    "node",
    "run",
    "new",
    "pods",
    "created",
    "automatically",
    "assigned",
    "appropriate",
    "node",
    "cube",
    "scheduler",
    "taking",
    "consideration",
    "constraints",
    "place",
    "next",
    "cube",
    "controller",
    "manager",
    "component",
    "runs",
    "controller",
    "processes",
    "responsible",
    "things",
    "like",
    "noticing",
    "responding",
    "nodes",
    "go",
    "maintaining",
    "correct",
    "number",
    "pods",
    "populating",
    "services",
    "pods",
    "well",
    "creating",
    "default",
    "accounts",
    "api",
    "access",
    "tokens",
    "new",
    "namespaces",
    "controllers",
    "basically",
    "look",
    "make",
    "changes",
    "cluster",
    "current",
    "state",
    "meet",
    "desired",
    "state",
    "comes",
    "cloud",
    "controller",
    "manager",
    "embeds",
    "control",
    "logic",
    "cloud",
    "controller",
    "manager",
    "lets",
    "link",
    "cluster",
    "cloud",
    "providers",
    "api",
    "separates",
    "components",
    "interact",
    "cloud",
    "platform",
    "components",
    "interact",
    "cluster",
    "cloud",
    "controller",
    "manager",
    "runs",
    "controllers",
    "specific",
    "cloud",
    "provider",
    "case",
    "google",
    "cloud",
    "lastly",
    "fcd",
    "component",
    "responsible",
    "store",
    "state",
    "cluster",
    "cd",
    "consistent",
    "highly",
    "available",
    "key",
    "value",
    "store",
    "interacts",
    "api",
    "server",
    "saves",
    "configuration",
    "data",
    "along",
    "nodes",
    "part",
    "cluster",
    "pods",
    "running",
    "control",
    "plane",
    "needs",
    "way",
    "interact",
    "nodes",
    "cluster",
    "thus",
    "nodes",
    "components",
    "communication",
    "occur",
    "component",
    "called",
    "cubelet",
    "agent",
    "runs",
    "node",
    "cluster",
    "communicates",
    "control",
    "plane",
    "responsible",
    "starting",
    "running",
    "docker",
    "containers",
    "scheduled",
    "node",
    "takes",
    "set",
    "pod",
    "specs",
    "provided",
    "ensures",
    "containers",
    "described",
    "pod",
    "specs",
    "running",
    "healthy",
    "diving",
    "pod",
    "specs",
    "later",
    "lesson",
    "next",
    "cube",
    "proxy",
    "component",
    "maintains",
    "network",
    "connectivity",
    "pods",
    "cluster",
    "lastly",
    "container",
    "runtime",
    "software",
    "responsible",
    "running",
    "containers",
    "kubernetes",
    "supports",
    "container",
    "runtimes",
    "like",
    "docker",
    "container",
    "main",
    "components",
    "cluster",
    "covering",
    "control",
    "plane",
    "nodes",
    "regards",
    "communication",
    "within",
    "cluster",
    "end",
    "lesson",
    "one",
    "topic",
    "wanted",
    "touch",
    "regards",
    "architecture",
    "gke",
    "cluster",
    "abstraction",
    "happens",
    "exactly",
    "gke",
    "manage",
    "regards",
    "kubernetes",
    "well",
    "gke",
    "manages",
    "control",
    "plane",
    "components",
    "endpoint",
    "exposes",
    "kubernetes",
    "api",
    "server",
    "cubectl",
    "uses",
    "communicate",
    "cluster",
    "control",
    "plane",
    "endpoint",
    "exposes",
    "kubernetes",
    "api",
    "server",
    "cubectl",
    "uses",
    "communicate",
    "cluster",
    "control",
    "plane",
    "endpoint",
    "ip",
    "displayed",
    "cloud",
    "console",
    "ip",
    "allow",
    "interact",
    "cluster",
    "run",
    "command",
    "gcloud",
    "container",
    "clusters",
    "get",
    "dash",
    "credentials",
    "see",
    "command",
    "gets",
    "cluster",
    "endpoint",
    "part",
    "updating",
    "cubeconfig",
    "ip",
    "address",
    "cluster",
    "exposed",
    "interact",
    "responsible",
    "provisioning",
    "managing",
    "infrastructure",
    "needed",
    "control",
    "plane",
    "gke",
    "also",
    "automates",
    "kubernetes",
    "nodes",
    "launching",
    "compute",
    "engine",
    "vms",
    "hood",
    "still",
    "allows",
    "user",
    "change",
    "machine",
    "type",
    "access",
    "upgrade",
    "options",
    "default",
    "google",
    "kubernetes",
    "engine",
    "clusters",
    "node",
    "pools",
    "upgraded",
    "automatically",
    "google",
    "also",
    "control",
    "auto",
    "upgrades",
    "occur",
    "configuring",
    "maintenance",
    "windows",
    "exclusions",
    "note",
    "clusters",
    "control",
    "plane",
    "nodes",
    "necessarily",
    "run",
    "version",
    "times",
    "digging",
    "later",
    "lesson",
    "know",
    "lot",
    "theory",
    "take",
    "said",
    "necessity",
    "understanding",
    "kubernetes",
    "gke",
    "go",
    "along",
    "kubernetes",
    "get",
    "demos",
    "promise",
    "start",
    "make",
    "lot",
    "sense",
    "start",
    "becoming",
    "comfortable",
    "gke",
    "underlying",
    "components",
    "kubernetes",
    "knowing",
    "kubernetes",
    "must",
    "working",
    "cloud",
    "environment",
    "popular",
    "growing",
    "technology",
    "slowing",
    "knowing",
    "gke",
    "put",
    "really",
    "good",
    "position",
    "career",
    "engineer",
    "google",
    "cloud",
    "well",
    "give",
    "leg",
    "diving",
    "cloud",
    "vendors",
    "implementation",
    "kubernetes",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "google",
    "kubernetes",
    "engine",
    "kubernetes",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "covering",
    "cluster",
    "node",
    "management",
    "gke",
    "refers",
    "choosing",
    "different",
    "cluster",
    "types",
    "workloads",
    "cluster",
    "versions",
    "node",
    "pools",
    "well",
    "upgrades",
    "many",
    "different",
    "options",
    "choose",
    "good",
    "familiarize",
    "options",
    "may",
    "deciding",
    "factor",
    "keep",
    "workloads",
    "highly",
    "available",
    "tolerance",
    "risk",
    "within",
    "environment",
    "said",
    "let",
    "dive",
    "last",
    "lesson",
    "touched",
    "nodes",
    "workers",
    "kubernetes",
    "cluster",
    "familiar",
    "nodes",
    "wanted",
    "touch",
    "concept",
    "builds",
    "called",
    "node",
    "pools",
    "node",
    "pool",
    "group",
    "nodes",
    "within",
    "cluster",
    "configuration",
    "using",
    "node",
    "config",
    "specification",
    "achieve",
    "node",
    "pool",
    "also",
    "contain",
    "one",
    "multiple",
    "nodes",
    "first",
    "create",
    "cluster",
    "number",
    "type",
    "nodes",
    "specify",
    "becomes",
    "default",
    "node",
    "pool",
    "shown",
    "diagram",
    "add",
    "additional",
    "custom",
    "node",
    "pools",
    "different",
    "sizes",
    "types",
    "cluster",
    "nodes",
    "given",
    "node",
    "pool",
    "identical",
    "one",
    "another",
    "custom",
    "node",
    "pools",
    "really",
    "useful",
    "need",
    "schedule",
    "pods",
    "require",
    "resources",
    "others",
    "memory",
    "disk",
    "space",
    "even",
    "different",
    "machine",
    "types",
    "create",
    "upgrade",
    "delete",
    "node",
    "pools",
    "individually",
    "without",
    "affecting",
    "whole",
    "cluster",
    "note",
    "configure",
    "single",
    "node",
    "node",
    "pool",
    "configuration",
    "changes",
    "affect",
    "nodes",
    "node",
    "pool",
    "default",
    "new",
    "node",
    "pools",
    "run",
    "latest",
    "stable",
    "version",
    "kubernetes",
    "existing",
    "node",
    "pools",
    "manually",
    "upgraded",
    "automatically",
    "upgraded",
    "also",
    "run",
    "multiple",
    "kubernetes",
    "node",
    "versions",
    "node",
    "pool",
    "cluster",
    "update",
    "node",
    "pool",
    "independently",
    "target",
    "different",
    "node",
    "pools",
    "specific",
    "deployments",
    "node",
    "gke",
    "create",
    "cluster",
    "tailored",
    "availability",
    "requirements",
    "budget",
    "types",
    "available",
    "clusters",
    "include",
    "zonal",
    "single",
    "zone",
    "regional",
    "zonal",
    "clusters",
    "single",
    "control",
    "plane",
    "single",
    "zone",
    "depending",
    "kind",
    "availability",
    "want",
    "distribute",
    "nodes",
    "zonal",
    "cluster",
    "single",
    "zone",
    "multiple",
    "zones",
    "decide",
    "deploy",
    "single",
    "zone",
    "cluster",
    "single",
    "control",
    "plane",
    "running",
    "one",
    "zone",
    "control",
    "plane",
    "manages",
    "workloads",
    "nodes",
    "running",
    "zone",
    "cluster",
    "hand",
    "single",
    "replica",
    "control",
    "plane",
    "running",
    "single",
    "zone",
    "nodes",
    "running",
    "multiple",
    "zones",
    "upgrade",
    "cluster",
    "outage",
    "zone",
    "control",
    "plane",
    "runs",
    "workloads",
    "still",
    "run",
    "however",
    "cluster",
    "nodes",
    "workloads",
    "configured",
    "control",
    "plane",
    "available",
    "clusters",
    "designed",
    "balance",
    "availability",
    "cost",
    "consistent",
    "workloads",
    "note",
    "number",
    "nodes",
    "deployed",
    "selected",
    "zone",
    "may",
    "cost",
    "budgeted",
    "please",
    "aware",
    "course",
    "looking",
    "achieve",
    "high",
    "availability",
    "cluster",
    "regional",
    "clusters",
    "always",
    "way",
    "go",
    "regional",
    "cluster",
    "multiple",
    "replicas",
    "control",
    "plane",
    "running",
    "multiple",
    "zones",
    "within",
    "given",
    "region",
    "nodes",
    "also",
    "run",
    "zone",
    "replica",
    "control",
    "plane",
    "runs",
    "regional",
    "cluster",
    "replicates",
    "control",
    "plane",
    "nodes",
    "consumes",
    "compute",
    "engine",
    "resources",
    "similar",
    "single",
    "zone",
    "cluster",
    "number",
    "nodes",
    "deployed",
    "selected",
    "zone",
    "default",
    "selecting",
    "regional",
    "clusters",
    "three",
    "zones",
    "dealing",
    "sensitive",
    "workloads",
    "require",
    "strict",
    "guidelines",
    "private",
    "clusters",
    "give",
    "ability",
    "isolate",
    "nodes",
    "inbound",
    "outbound",
    "connectivity",
    "public",
    "internet",
    "isolation",
    "achieved",
    "nodes",
    "internal",
    "ip",
    "addresses",
    "want",
    "provide",
    "outbound",
    "internet",
    "access",
    "certain",
    "private",
    "nodes",
    "use",
    "cloudnat",
    "manage",
    "nat",
    "gateway",
    "default",
    "private",
    "google",
    "access",
    "enabled",
    "private",
    "clusters",
    "workloads",
    "limited",
    "outbound",
    "access",
    "google",
    "cloud",
    "apis",
    "services",
    "google",
    "private",
    "network",
    "private",
    "clusters",
    "control",
    "plane",
    "vpc",
    "network",
    "connected",
    "clusters",
    "vpc",
    "network",
    "vpc",
    "network",
    "peering",
    "vpc",
    "network",
    "contains",
    "cluster",
    "nodes",
    "separate",
    "google",
    "cloud",
    "vpc",
    "network",
    "contains",
    "cluster",
    "control",
    "plane",
    "control",
    "plane",
    "vpc",
    "network",
    "located",
    "project",
    "controlled",
    "google",
    "traffic",
    "nodes",
    "control",
    "plane",
    "routed",
    "entirely",
    "using",
    "internal",
    "ip",
    "addresses",
    "control",
    "plane",
    "private",
    "cluster",
    "private",
    "endpoint",
    "addition",
    "public",
    "endpoint",
    "control",
    "plane",
    "cluster",
    "public",
    "endpoint",
    "private",
    "endpoint",
    "internal",
    "ip",
    "address",
    "control",
    "plane",
    "vpc",
    "network",
    "public",
    "endpoint",
    "external",
    "ip",
    "address",
    "control",
    "plane",
    "control",
    "access",
    "endpoint",
    "using",
    "authorized",
    "networks",
    "disable",
    "access",
    "public",
    "endpoint",
    "shown",
    "diagram",
    "disable",
    "public",
    "endpoint",
    "connect",
    "network",
    "using",
    "internal",
    "ip",
    "address",
    "using",
    "cloud",
    "interconnect",
    "cloud",
    "vpn",
    "always",
    "option",
    "enabling",
    "disabling",
    "public",
    "endpoint",
    "create",
    "cluster",
    "choose",
    "cluster",
    "specific",
    "kubernetes",
    "version",
    "mix",
    "versions",
    "flexibility",
    "features",
    "either",
    "way",
    "always",
    "recommended",
    "enable",
    "auto",
    "upgrade",
    "cluster",
    "nodes",
    "auto",
    "upgrade",
    "enabled",
    "given",
    "choice",
    "choose",
    "called",
    "release",
    "channels",
    "enroll",
    "new",
    "cluster",
    "release",
    "channel",
    "google",
    "automatically",
    "manages",
    "version",
    "upgrade",
    "cadence",
    "cluster",
    "node",
    "pools",
    "channels",
    "offer",
    "supported",
    "releases",
    "gke",
    "considered",
    "general",
    "availability",
    "choose",
    "three",
    "different",
    "release",
    "channels",
    "automatic",
    "management",
    "cluster",
    "version",
    "upgrade",
    "cadence",
    "shown",
    "available",
    "release",
    "channels",
    "rapid",
    "regular",
    "stable",
    "release",
    "channels",
    "rapid",
    "release",
    "channel",
    "gets",
    "latest",
    "kubernetes",
    "release",
    "early",
    "possible",
    "able",
    "use",
    "new",
    "gka",
    "features",
    "moment",
    "go",
    "general",
    "availability",
    "regular",
    "release",
    "channel",
    "access",
    "gke",
    "kubernetes",
    "features",
    "reasonably",
    "soon",
    "released",
    "version",
    "qualified",
    "two",
    "three",
    "months",
    "releasing",
    "rapid",
    "release",
    "channel",
    "finally",
    "stable",
    "release",
    "channel",
    "stability",
    "prioritized",
    "new",
    "functionality",
    "changes",
    "new",
    "versions",
    "channel",
    "rolled",
    "last",
    "validated",
    "two",
    "three",
    "months",
    "regular",
    "release",
    "channel",
    "looking",
    "direct",
    "management",
    "cluster",
    "version",
    "choose",
    "static",
    "version",
    "enroll",
    "cluster",
    "release",
    "channel",
    "cluster",
    "upgraded",
    "automatically",
    "new",
    "version",
    "available",
    "channel",
    "use",
    "release",
    "channel",
    "choose",
    "cluster",
    "version",
    "current",
    "default",
    "version",
    "use",
    "default",
    "version",
    "selected",
    "based",
    "usage",
    "real",
    "world",
    "performance",
    "changed",
    "regularly",
    "default",
    "version",
    "mature",
    "one",
    "versions",
    "made",
    "available",
    "generally",
    "available",
    "versions",
    "pass",
    "internal",
    "testing",
    "qualification",
    "changes",
    "default",
    "version",
    "announced",
    "release",
    "note",
    "know",
    "need",
    "use",
    "specific",
    "supported",
    "version",
    "kubernetes",
    "given",
    "workload",
    "specify",
    "creating",
    "cluster",
    "need",
    "control",
    "specific",
    "patch",
    "version",
    "use",
    "consider",
    "enrolling",
    "cluster",
    "release",
    "channel",
    "instead",
    "managing",
    "version",
    "directly",
    "comes",
    "upgrading",
    "cluster",
    "please",
    "aware",
    "control",
    "plane",
    "nodes",
    "always",
    "run",
    "version",
    "times",
    "well",
    "control",
    "plane",
    "always",
    "upgraded",
    "nodes",
    "comes",
    "zonal",
    "clusters",
    "launch",
    "edit",
    "workloads",
    "upgrade",
    "regional",
    "clusters",
    "control",
    "plane",
    "upgraded",
    "one",
    "one",
    "well",
    "control",
    "planes",
    "auto",
    "upgrade",
    "enabled",
    "default",
    "google",
    "cloud",
    "best",
    "practice",
    "choose",
    "manual",
    "upgrade",
    "upgrade",
    "control",
    "plane",
    "one",
    "minor",
    "version",
    "time",
    "please",
    "aware",
    "well",
    "cluster",
    "upgrades",
    "maintenance",
    "windows",
    "exclusions",
    "available",
    "way",
    "choose",
    "best",
    "times",
    "upgrades",
    "like",
    "cluster",
    "upgrades",
    "default",
    "clusters",
    "nodes",
    "auto",
    "upgrade",
    "enabled",
    "recommended",
    "disable",
    "best",
    "practice",
    "google",
    "cloud",
    "like",
    "cluster",
    "upgrades",
    "manual",
    "upgrade",
    "available",
    "maintenance",
    "windows",
    "exclusions",
    "available",
    "upgrades",
    "pool",
    "upgraded",
    "gke",
    "upgrades",
    "one",
    "node",
    "time",
    "node",
    "upgraded",
    "gke",
    "stops",
    "scheduling",
    "new",
    "pods",
    "onto",
    "attempts",
    "schedule",
    "running",
    "pods",
    "onto",
    "nodes",
    "node",
    "recreated",
    "new",
    "version",
    "using",
    "name",
    "similar",
    "events",
    "recreate",
    "node",
    "enabling",
    "disabling",
    "feature",
    "node",
    "pool",
    "upgrade",
    "complete",
    "nodes",
    "recreated",
    "cluster",
    "desired",
    "state",
    "newly",
    "upgraded",
    "node",
    "registers",
    "control",
    "plane",
    "gke",
    "marks",
    "node",
    "schedulable",
    "upgrading",
    "pool",
    "may",
    "disrupt",
    "workloads",
    "running",
    "pool",
    "order",
    "avoid",
    "create",
    "new",
    "node",
    "pool",
    "desired",
    "version",
    "migrate",
    "workload",
    "migration",
    "delete",
    "old",
    "node",
    "pool",
    "surge",
    "upgrades",
    "let",
    "control",
    "number",
    "nodes",
    "gke",
    "upgrade",
    "time",
    "control",
    "disruptive",
    "upgrades",
    "workloads",
    "change",
    "many",
    "nodes",
    "gke",
    "attempts",
    "upgrade",
    "changing",
    "surge",
    "upgrade",
    "parameters",
    "pool",
    "surge",
    "upgrades",
    "reduce",
    "disruption",
    "workloads",
    "cluster",
    "maintenance",
    "also",
    "allow",
    "control",
    "number",
    "nodes",
    "upgraded",
    "parallel",
    "surge",
    "upgrades",
    "also",
    "work",
    "cluster",
    "auto",
    "scaler",
    "prevent",
    "changes",
    "nodes",
    "upgraded",
    "surge",
    "upgrade",
    "behavior",
    "determined",
    "two",
    "settings",
    "max",
    "surge",
    "upgrade",
    "max",
    "unavailable",
    "upgrade",
    "max",
    "surge",
    "upgrade",
    "number",
    "additional",
    "nodes",
    "added",
    "pool",
    "upgrade",
    "increasing",
    "max",
    "surge",
    "upgrade",
    "raises",
    "number",
    "nodes",
    "upgraded",
    "simultaneously",
    "comes",
    "max",
    "unavailable",
    "upgrade",
    "number",
    "nodes",
    "simultaneously",
    "unavailable",
    "upgrade",
    "increasing",
    "max",
    "unavailable",
    "upgrade",
    "raises",
    "number",
    "nodes",
    "upgraded",
    "parallel",
    "max",
    "surge",
    "upgrade",
    "higher",
    "number",
    "parallel",
    "upgrades",
    "end",
    "costing",
    "money",
    "max",
    "unavailable",
    "upgrade",
    "higher",
    "number",
    "disruptive",
    "risk",
    "taking",
    "upgrades",
    "gke",
    "brings",
    "sum",
    "max",
    "surge",
    "upgrade",
    "added",
    "max",
    "unavailable",
    "upgrade",
    "see",
    "slew",
    "options",
    "comes",
    "deciding",
    "type",
    "cluster",
    "want",
    "well",
    "type",
    "upgrades",
    "available",
    "along",
    "want",
    "occur",
    "deciding",
    "factor",
    "end",
    "workload",
    "running",
    "risk",
    "tolerance",
    "play",
    "big",
    "factor",
    "keeping",
    "time",
    "cluster",
    "well",
    "saving",
    "money",
    "type",
    "environment",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "gke",
    "cluster",
    "node",
    "management",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "diving",
    "theory",
    "within",
    "kubernetes",
    "gke",
    "time",
    "touching",
    "objects",
    "objects",
    "managed",
    "pods",
    "one",
    "type",
    "object",
    "many",
    "parts",
    "involved",
    "management",
    "objects",
    "lesson",
    "set",
    "teach",
    "quite",
    "bit",
    "cover",
    "said",
    "let",
    "dive",
    "kubernetes",
    "objects",
    "persistent",
    "entities",
    "kubernetes",
    "kubernetes",
    "uses",
    "entities",
    "represent",
    "state",
    "cluster",
    "example",
    "describe",
    "things",
    "like",
    "containerized",
    "applications",
    "running",
    "nodes",
    "resources",
    "available",
    "applications",
    "kubernetes",
    "object",
    "record",
    "intent",
    "create",
    "object",
    "kubernetes",
    "constantly",
    "work",
    "ensure",
    "object",
    "exists",
    "creating",
    "object",
    "effectively",
    "telling",
    "kubernetes",
    "want",
    "cluster",
    "workload",
    "look",
    "like",
    "cluster",
    "desired",
    "state",
    "heard",
    "speak",
    "many",
    "times",
    "referring",
    "almost",
    "every",
    "kubernetes",
    "object",
    "includes",
    "two",
    "nested",
    "object",
    "fields",
    "govern",
    "object",
    "configuration",
    "object",
    "spec",
    "object",
    "status",
    "objects",
    "spec",
    "set",
    "create",
    "object",
    "providing",
    "description",
    "characteristics",
    "want",
    "resource",
    "desired",
    "state",
    "status",
    "describes",
    "current",
    "state",
    "object",
    "supplied",
    "updated",
    "kubernetes",
    "components",
    "kubernetes",
    "control",
    "plane",
    "continually",
    "actively",
    "manages",
    "every",
    "object",
    "actual",
    "state",
    "match",
    "desired",
    "state",
    "supplied",
    "object",
    "cluster",
    "name",
    "unique",
    "type",
    "resource",
    "every",
    "kubernetes",
    "object",
    "also",
    "uid",
    "unique",
    "across",
    "whole",
    "cluster",
    "one",
    "object",
    "given",
    "kind",
    "given",
    "name",
    "time",
    "however",
    "delete",
    "object",
    "make",
    "new",
    "object",
    "name",
    "every",
    "object",
    "created",
    "whole",
    "lifetime",
    "kubernetes",
    "cluster",
    "distinct",
    "uid",
    "distinct",
    "uids",
    "also",
    "known",
    "uuids",
    "discussed",
    "earlier",
    "course",
    "creating",
    "updating",
    "deleting",
    "objects",
    "kubernetes",
    "done",
    "use",
    "manifest",
    "file",
    "would",
    "specify",
    "desired",
    "state",
    "object",
    "kubernetes",
    "maintain",
    "apply",
    "manifest",
    "configuration",
    "file",
    "contain",
    "multiple",
    "manifests",
    "common",
    "practice",
    "possible",
    "manifest",
    "file",
    "defined",
    "form",
    "yaml",
    "file",
    "json",
    "file",
    "recommended",
    "use",
    "yaml",
    "yaml",
    "file",
    "kubernetes",
    "object",
    "want",
    "create",
    "required",
    "values",
    "need",
    "set",
    "first",
    "one",
    "api",
    "version",
    "defines",
    "version",
    "kubernetes",
    "api",
    "using",
    "create",
    "object",
    "kind",
    "described",
    "example",
    "pod",
    "kind",
    "object",
    "want",
    "create",
    "next",
    "metadata",
    "data",
    "helps",
    "uniquely",
    "identify",
    "object",
    "including",
    "string",
    "name",
    "uid",
    "optional",
    "namespace",
    "last",
    "required",
    "value",
    "spec",
    "state",
    "desire",
    "object",
    "spec",
    "example",
    "container",
    "name",
    "bow",
    "tie",
    "dash",
    "web",
    "server",
    "built",
    "latest",
    "nginx",
    "web",
    "server",
    "image",
    "well",
    "port",
    "80",
    "open",
    "container",
    "comes",
    "objects",
    "pods",
    "smallest",
    "basic",
    "deployable",
    "objects",
    "kubernetes",
    "pod",
    "represents",
    "single",
    "instance",
    "running",
    "process",
    "cluster",
    "pods",
    "contain",
    "one",
    "containers",
    "docker",
    "containers",
    "pod",
    "runs",
    "multiple",
    "containers",
    "containers",
    "managed",
    "single",
    "entity",
    "share",
    "pods",
    "resources",
    "also",
    "includes",
    "shared",
    "networking",
    "shared",
    "storage",
    "containers",
    "generally",
    "one",
    "pod",
    "meant",
    "run",
    "single",
    "instance",
    "application",
    "cluster",
    "isolated",
    "although",
    "pod",
    "meant",
    "run",
    "single",
    "instance",
    "application",
    "cluster",
    "recommended",
    "create",
    "individual",
    "pods",
    "directly",
    "instead",
    "generally",
    "create",
    "set",
    "identical",
    "pods",
    "called",
    "replicas",
    "run",
    "application",
    "set",
    "replicated",
    "pods",
    "created",
    "managed",
    "controller",
    "deployment",
    "controllers",
    "manage",
    "life",
    "cycle",
    "pods",
    "well",
    "performing",
    "horizontal",
    "scaling",
    "changing",
    "number",
    "pods",
    "necessary",
    "although",
    "might",
    "occasionally",
    "interact",
    "pods",
    "directly",
    "debug",
    "troubleshoot",
    "inspect",
    "recommended",
    "use",
    "controller",
    "manage",
    "pods",
    "pods",
    "created",
    "run",
    "nodes",
    "cluster",
    "discussed",
    "earlier",
    "pod",
    "remain",
    "node",
    "process",
    "complete",
    "pot",
    "deleted",
    "pod",
    "evicted",
    "node",
    "due",
    "lack",
    "resources",
    "node",
    "fails",
    "node",
    "fails",
    "pods",
    "node",
    "automatically",
    "scheduled",
    "deletion",
    "single",
    "gke",
    "cluster",
    "able",
    "satisfy",
    "needs",
    "multiple",
    "users",
    "groups",
    "users",
    "kubernetes",
    "namespaces",
    "help",
    "different",
    "projects",
    "teams",
    "customers",
    "share",
    "kubernetes",
    "cluster",
    "think",
    "namespace",
    "virtual",
    "cluster",
    "inside",
    "kubernetes",
    "cluster",
    "multiple",
    "namespaces",
    "logically",
    "isolated",
    "help",
    "teams",
    "organization",
    "security",
    "name",
    "namespaces",
    "whatever",
    "like",
    "kubernetes",
    "starts",
    "four",
    "initial",
    "namespaces",
    "first",
    "one",
    "default",
    "namespace",
    "objects",
    "namespace",
    "creating",
    "new",
    "objects",
    "without",
    "namespace",
    "object",
    "automatically",
    "assigned",
    "namespace",
    "cube",
    "dash",
    "system",
    "next",
    "one",
    "objects",
    "created",
    "kubernetes",
    "created",
    "automatically",
    "readable",
    "users",
    "mostly",
    "reserved",
    "cluster",
    "usage",
    "case",
    "resources",
    "visible",
    "readable",
    "publicly",
    "throughout",
    "whole",
    "cluster",
    "finally",
    "cube",
    "node",
    "lease",
    "namespace",
    "lease",
    "objects",
    "associated",
    "node",
    "improves",
    "performance",
    "node",
    "heartbeats",
    "cluster",
    "scales",
    "like",
    "resources",
    "google",
    "cloud",
    "labels",
    "key",
    "value",
    "pairs",
    "help",
    "organize",
    "resources",
    "case",
    "kubernetes",
    "objects",
    "labels",
    "attached",
    "objects",
    "creation",
    "time",
    "added",
    "modified",
    "time",
    "object",
    "set",
    "key",
    "value",
    "labels",
    "defined",
    "key",
    "must",
    "unique",
    "given",
    "object",
    "labels",
    "found",
    "metadata",
    "manifest",
    "file",
    "one",
    "thing",
    "remember",
    "pods",
    "ephemeral",
    "designed",
    "run",
    "forever",
    "pod",
    "terminated",
    "brought",
    "back",
    "general",
    "pods",
    "disappear",
    "deleted",
    "user",
    "controller",
    "pods",
    "heal",
    "repair",
    "example",
    "pod",
    "scheduled",
    "node",
    "later",
    "fails",
    "pod",
    "deleted",
    "well",
    "pod",
    "evicted",
    "node",
    "reason",
    "pod",
    "replace",
    "diagram",
    "pod",
    "life",
    "cycle",
    "shows",
    "different",
    "phases",
    "running",
    "time",
    "give",
    "better",
    "clarity",
    "ephemeral",
    "nature",
    "first",
    "creating",
    "pod",
    "pod",
    "start",
    "impending",
    "pod",
    "initial",
    "phase",
    "waiting",
    "one",
    "containers",
    "set",
    "made",
    "ready",
    "run",
    "includes",
    "time",
    "pod",
    "spends",
    "waiting",
    "scheduled",
    "well",
    "time",
    "spent",
    "downloading",
    "container",
    "images",
    "network",
    "pod",
    "completed",
    "pending",
    "phase",
    "moved",
    "scheduled",
    "scheduled",
    "move",
    "running",
    "phase",
    "phase",
    "pod",
    "bound",
    "node",
    "containers",
    "created",
    "running",
    "phase",
    "least",
    "one",
    "container",
    "pod",
    "running",
    "process",
    "starting",
    "restarting",
    "workload",
    "complete",
    "pod",
    "move",
    "succeeded",
    "phase",
    "containers",
    "pod",
    "terminated",
    "success",
    "restarted",
    "containers",
    "pod",
    "terminated",
    "successfully",
    "pod",
    "move",
    "failed",
    "phase",
    "containers",
    "pod",
    "terminated",
    "least",
    "one",
    "container",
    "terminated",
    "failure",
    "one",
    "phase",
    "pod",
    "life",
    "cycle",
    "wanted",
    "bring",
    "unknown",
    "phase",
    "state",
    "pod",
    "could",
    "obtained",
    "phase",
    "typically",
    "occurs",
    "due",
    "error",
    "communicating",
    "node",
    "pod",
    "running",
    "creating",
    "pods",
    "using",
    "deployment",
    "common",
    "way",
    "deployment",
    "runs",
    "multiple",
    "replicas",
    "application",
    "automatically",
    "replaces",
    "instances",
    "fail",
    "become",
    "unresponsive",
    "deployments",
    "help",
    "ensure",
    "one",
    "instances",
    "application",
    "available",
    "serve",
    "user",
    "requests",
    "deployments",
    "use",
    "pod",
    "template",
    "contains",
    "specification",
    "pods",
    "pod",
    "specification",
    "determines",
    "pod",
    "look",
    "like",
    "instance",
    "applications",
    "run",
    "inside",
    "containers",
    "volumes",
    "pods",
    "mount",
    "labels",
    "deployments",
    "pod",
    "template",
    "changed",
    "new",
    "pods",
    "automatically",
    "created",
    "one",
    "time",
    "wanted",
    "quickly",
    "bring",
    "replica",
    "sets",
    "moment",
    "hear",
    "replica",
    "sets",
    "wanted",
    "make",
    "sure",
    "covered",
    "replica",
    "sets",
    "ensures",
    "specified",
    "number",
    "pod",
    "replicas",
    "running",
    "given",
    "time",
    "however",
    "deployment",
    "higher",
    "level",
    "concept",
    "manages",
    "replica",
    "sets",
    "provides",
    "updates",
    "pods",
    "along",
    "features",
    "using",
    "deployments",
    "recommended",
    "using",
    "replica",
    "sets",
    "unless",
    "workload",
    "requires",
    "including",
    "link",
    "replica",
    "sets",
    "lesson",
    "text",
    "speaking",
    "workloads",
    "kubernetes",
    "workloads",
    "objects",
    "set",
    "deployment",
    "rules",
    "four",
    "pods",
    "based",
    "rules",
    "kubernetes",
    "performs",
    "deployment",
    "updates",
    "workload",
    "current",
    "state",
    "application",
    "workloads",
    "let",
    "define",
    "rules",
    "application",
    "scheduling",
    "scaling",
    "upgrading",
    "deployments",
    "discussed",
    "type",
    "workload",
    "seen",
    "deployment",
    "runs",
    "multiple",
    "replicas",
    "application",
    "automatically",
    "replaces",
    "instances",
    "fail",
    "become",
    "unresponsive",
    "deployments",
    "best",
    "used",
    "stateless",
    "applications",
    "another",
    "type",
    "workload",
    "stateful",
    "sets",
    "contrast",
    "deployments",
    "great",
    "application",
    "needs",
    "maintain",
    "identity",
    "store",
    "data",
    "basically",
    "application",
    "requires",
    "sort",
    "persistent",
    "storage",
    "daemon",
    "sets",
    "another",
    "common",
    "workload",
    "ensures",
    "every",
    "node",
    "cluster",
    "runs",
    "copy",
    "pod",
    "use",
    "cases",
    "collecting",
    "logs",
    "monitoring",
    "node",
    "performance",
    "jobs",
    "workload",
    "launches",
    "one",
    "pods",
    "ensures",
    "specified",
    "number",
    "successfully",
    "terminate",
    "jobs",
    "best",
    "used",
    "run",
    "finite",
    "task",
    "completion",
    "opposed",
    "managing",
    "ongoing",
    "desired",
    "application",
    "state",
    "cron",
    "jobs",
    "similar",
    "jobs",
    "however",
    "cron",
    "jobs",
    "runs",
    "completion",
    "schedule",
    "last",
    "workload",
    "wanted",
    "cover",
    "config",
    "maps",
    "store",
    "general",
    "configuration",
    "information",
    "upload",
    "config",
    "map",
    "workload",
    "reference",
    "either",
    "environment",
    "variable",
    "volume",
    "mount",
    "note",
    "config",
    "maps",
    "meant",
    "store",
    "sensitive",
    "data",
    "planning",
    "please",
    "use",
    "secrets",
    "know",
    "lesson",
    "extremely",
    "heavy",
    "theory",
    "fundamental",
    "concepts",
    "know",
    "dealing",
    "kubernetes",
    "gke",
    "well",
    "objects",
    "supports",
    "recommend",
    "need",
    "go",
    "back",
    "review",
    "lesson",
    "things",
    "making",
    "sense",
    "better",
    "understand",
    "concepts",
    "tie",
    "together",
    "come",
    "exam",
    "pretty",
    "much",
    "wanted",
    "cover",
    "lesson",
    "pods",
    "object",
    "management",
    "within",
    "gke",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "diving",
    "kubernetes",
    "services",
    "services",
    "major",
    "networking",
    "component",
    "comes",
    "working",
    "kubernetes",
    "play",
    "major",
    "factor",
    "comes",
    "deciding",
    "want",
    "route",
    "traffic",
    "within",
    "kubernetes",
    "cluster",
    "well",
    "experience",
    "services",
    "show",
    "exam",
    "understanding",
    "work",
    "different",
    "types",
    "use",
    "essential",
    "understanding",
    "big",
    "picture",
    "kubernetes",
    "lesson",
    "cover",
    "overview",
    "services",
    "different",
    "types",
    "available",
    "along",
    "use",
    "cases",
    "lot",
    "cover",
    "said",
    "let",
    "dive",
    "discussed",
    "earlier",
    "kubernetes",
    "pods",
    "ephemeral",
    "pods",
    "created",
    "destroyed",
    "match",
    "state",
    "cluster",
    "resources",
    "never",
    "permanent",
    "perfect",
    "example",
    "using",
    "deployment",
    "object",
    "create",
    "destroy",
    "pods",
    "dynamically",
    "comes",
    "networking",
    "kubernetes",
    "pod",
    "gets",
    "ip",
    "address",
    "however",
    "deployment",
    "pod",
    "running",
    "destroyed",
    "recreated",
    "new",
    "ip",
    "address",
    "real",
    "way",
    "keep",
    "track",
    "p",
    "addresses",
    "communication",
    "change",
    "frequently",
    "services",
    "come",
    "play",
    "service",
    "abstraction",
    "sense",
    "process",
    "listens",
    "network",
    "interface",
    "service",
    "defined",
    "logical",
    "set",
    "pods",
    "abstraction",
    "top",
    "pod",
    "provides",
    "single",
    "persistent",
    "ip",
    "address",
    "dns",
    "name",
    "pods",
    "accessed",
    "allows",
    "routing",
    "external",
    "traffic",
    "kubernetes",
    "cluster",
    "used",
    "inside",
    "cluster",
    "intelligent",
    "routing",
    "services",
    "also",
    "easy",
    "manage",
    "load",
    "balancing",
    "configuration",
    "traffic",
    "replicas",
    "helps",
    "pods",
    "scale",
    "quickly",
    "easily",
    "service",
    "automatically",
    "handle",
    "recreation",
    "pods",
    "new",
    "ip",
    "addresses",
    "main",
    "goal",
    "services",
    "kubernetes",
    "provide",
    "persistent",
    "access",
    "pods",
    "without",
    "necessity",
    "look",
    "pod",
    "ip",
    "time",
    "pod",
    "recreated",
    "services",
    "also",
    "allow",
    "external",
    "access",
    "users",
    "applications",
    "inside",
    "cluster",
    "without",
    "know",
    "ip",
    "address",
    "individual",
    "pod",
    "order",
    "reach",
    "application",
    "order",
    "service",
    "route",
    "traffic",
    "correct",
    "pod",
    "cluster",
    "fields",
    "manifest",
    "file",
    "help",
    "determine",
    "end",
    "points",
    "traffic",
    "routed",
    "shown",
    "right",
    "deployment",
    "manifest",
    "reference",
    "left",
    "services",
    "manifest",
    "see",
    "service",
    "manifest",
    "left",
    "kind",
    "clearly",
    "defined",
    "service",
    "metadata",
    "name",
    "service",
    "dns",
    "name",
    "service",
    "created",
    "comes",
    "spec",
    "field",
    "called",
    "selector",
    "defines",
    "pods",
    "included",
    "service",
    "labels",
    "selector",
    "define",
    "pods",
    "labels",
    "discussed",
    "last",
    "lesson",
    "arbitrary",
    "key",
    "value",
    "pairs",
    "pod",
    "matching",
    "labels",
    "added",
    "service",
    "shown",
    "deployment",
    "file",
    "workload",
    "part",
    "service",
    "labels",
    "match",
    "selector",
    "services",
    "file",
    "type",
    "type",
    "service",
    "want",
    "use",
    "example",
    "type",
    "cluster",
    "ip",
    "used",
    "depending",
    "use",
    "case",
    "different",
    "ones",
    "choose",
    "bottom",
    "list",
    "port",
    "configurations",
    "protocol",
    "network",
    "protocol",
    "use",
    "port",
    "port",
    "port",
    "incoming",
    "traffic",
    "goes",
    "finally",
    "target",
    "port",
    "port",
    "pod",
    "traffic",
    "sent",
    "make",
    "sense",
    "go",
    "upcoming",
    "diagrams",
    "touching",
    "selectors",
    "labels",
    "moment",
    "kubernetes",
    "unique",
    "way",
    "routing",
    "traffic",
    "comes",
    "services",
    "different",
    "services",
    "select",
    "pods",
    "based",
    "labels",
    "selector",
    "request",
    "made",
    "service",
    "selects",
    "pods",
    "cluster",
    "matching",
    "key",
    "value",
    "pair",
    "selector",
    "chooses",
    "one",
    "pods",
    "one",
    "key",
    "value",
    "pair",
    "forwards",
    "network",
    "request",
    "example",
    "see",
    "selector",
    "specified",
    "service",
    "key",
    "value",
    "pair",
    "app",
    "inventory",
    "see",
    "pod",
    "node",
    "1",
    "left",
    "holds",
    "label",
    "app",
    "inventory",
    "well",
    "matches",
    "key",
    "value",
    "pair",
    "selector",
    "traffic",
    "get",
    "routed",
    "pod",
    "look",
    "label",
    "pod",
    "node",
    "2",
    "right",
    "label",
    "match",
    "selector",
    "route",
    "traffic",
    "pod",
    "sum",
    "label",
    "pod",
    "matching",
    "selector",
    "service",
    "determines",
    "network",
    "request",
    "get",
    "routed",
    "going",
    "many",
    "different",
    "service",
    "types",
    "available",
    "routing",
    "network",
    "traffic",
    "within",
    "gke",
    "starting",
    "cluster",
    "ip",
    "cluster",
    "ip",
    "service",
    "default",
    "kubernetes",
    "service",
    "gives",
    "service",
    "inside",
    "cluster",
    "apps",
    "inside",
    "cluster",
    "access",
    "service",
    "exposed",
    "outside",
    "cluster",
    "addressed",
    "within",
    "cluster",
    "create",
    "service",
    "type",
    "cluster",
    "ip",
    "kubernetes",
    "creates",
    "stable",
    "ip",
    "address",
    "accessible",
    "nodes",
    "cluster",
    "clients",
    "cluster",
    "call",
    "service",
    "using",
    "cluster",
    "ip",
    "address",
    "port",
    "value",
    "specified",
    "port",
    "field",
    "service",
    "manifest",
    "request",
    "forwarded",
    "one",
    "member",
    "pods",
    "port",
    "specified",
    "target",
    "port",
    "field",
    "note",
    "ip",
    "address",
    "stable",
    "lifetime",
    "service",
    "example",
    "client",
    "calls",
    "service",
    "tcp",
    "port",
    "request",
    "forwarded",
    "one",
    "member",
    "pods",
    "tcp",
    "port",
    "note",
    "member",
    "pod",
    "must",
    "container",
    "listening",
    "tcp",
    "port",
    "container",
    "listening",
    "port",
    "80",
    "clients",
    "see",
    "message",
    "like",
    "fail",
    "connect",
    "site",
    "ca",
    "reached",
    "think",
    "case",
    "dns",
    "record",
    "want",
    "change",
    "want",
    "name",
    "resolve",
    "ip",
    "address",
    "merely",
    "want",
    "static",
    "ip",
    "address",
    "workload",
    "would",
    "great",
    "use",
    "case",
    "use",
    "cluster",
    "ip",
    "service",
    "although",
    "service",
    "accessible",
    "network",
    "requests",
    "outside",
    "cluster",
    "need",
    "connect",
    "service",
    "still",
    "connect",
    "cloud",
    "sdk",
    "cloud",
    "shell",
    "using",
    "exposed",
    "ip",
    "address",
    "cluster",
    "wanted",
    "take",
    "moment",
    "show",
    "cluster",
    "ip",
    "manifest",
    "actually",
    "looks",
    "like",
    "going",
    "manifest",
    "service",
    "type",
    "familiarize",
    "first",
    "name",
    "service",
    "cluster",
    "ip",
    "dash",
    "service",
    "label",
    "used",
    "selector",
    "key",
    "value",
    "pair",
    "app",
    "inventory",
    "service",
    "type",
    "cluster",
    "ip",
    "port",
    "number",
    "exposed",
    "internally",
    "cluster",
    "port",
    "80",
    "along",
    "target",
    "port",
    "containers",
    "listening",
    "port",
    "next",
    "service",
    "type",
    "node",
    "port",
    "create",
    "service",
    "type",
    "node",
    "port",
    "specify",
    "node",
    "port",
    "value",
    "node",
    "port",
    "static",
    "port",
    "chosen",
    "range",
    "30",
    "000",
    "32",
    "760",
    "specify",
    "value",
    "within",
    "range",
    "please",
    "note",
    "value",
    "outside",
    "range",
    "accepted",
    "kubernetes",
    "well",
    "choose",
    "value",
    "random",
    "value",
    "within",
    "range",
    "specified",
    "assigned",
    "port",
    "range",
    "assigned",
    "service",
    "service",
    "accessible",
    "using",
    "ip",
    "address",
    "node",
    "along",
    "port",
    "value",
    "service",
    "exposed",
    "port",
    "every",
    "node",
    "cluster",
    "service",
    "accessed",
    "externally",
    "node",
    "ip",
    "along",
    "node",
    "port",
    "using",
    "node",
    "port",
    "services",
    "must",
    "make",
    "sure",
    "selected",
    "port",
    "already",
    "open",
    "nodes",
    "note",
    "port",
    "type",
    "extension",
    "cluster",
    "p",
    "type",
    "service",
    "type",
    "node",
    "port",
    "naturally",
    "cluster",
    "p",
    "address",
    "method",
    "secure",
    "opens",
    "node",
    "external",
    "entry",
    "well",
    "method",
    "relies",
    "knowing",
    "ip",
    "addresses",
    "nodes",
    "could",
    "change",
    "time",
    "going",
    "manifest",
    "type",
    "node",
    "port",
    "service",
    "start",
    "name",
    "service",
    "node",
    "port",
    "dash",
    "service",
    "label",
    "used",
    "selector",
    "uses",
    "key",
    "value",
    "pair",
    "app",
    "inventory",
    "type",
    "node",
    "port",
    "notice",
    "case",
    "sensitivity",
    "find",
    "service",
    "types",
    "along",
    "port",
    "number",
    "exposed",
    "internally",
    "cluster",
    "port",
    "80",
    "port",
    "containers",
    "listening",
    "target",
    "port",
    "port",
    "80",
    "well",
    "lastly",
    "importantly",
    "port",
    "value",
    "marked",
    "saw",
    "diagram",
    "earlier",
    "port",
    "32002",
    "next",
    "service",
    "type",
    "low",
    "balancer",
    "service",
    "exposed",
    "load",
    "balancer",
    "cluster",
    "low",
    "balancer",
    "services",
    "create",
    "internal",
    "kubernetes",
    "service",
    "connected",
    "cloud",
    "provider",
    "load",
    "balancer",
    "case",
    "google",
    "cloud",
    "create",
    "static",
    "publicly",
    "addressable",
    "ip",
    "address",
    "dns",
    "name",
    "used",
    "access",
    "cluster",
    "external",
    "source",
    "low",
    "balancer",
    "type",
    "extension",
    "port",
    "type",
    "service",
    "type",
    "load",
    "balancer",
    "naturally",
    "cluster",
    "ip",
    "address",
    "want",
    "directly",
    "expose",
    "service",
    "default",
    "method",
    "traffic",
    "port",
    "specify",
    "forwarded",
    "service",
    "filtering",
    "routing",
    "means",
    "send",
    "many",
    "different",
    "types",
    "traffic",
    "like",
    "http",
    "https",
    "tcp",
    "udp",
    "downside",
    "service",
    "expose",
    "low",
    "balancer",
    "pay",
    "load",
    "balancer",
    "really",
    "rack",
    "bill",
    "using",
    "multiple",
    "load",
    "balancers",
    "shown",
    "manifest",
    "type",
    "load",
    "balancer",
    "shows",
    "name",
    "service",
    "load",
    "balancer",
    "dash",
    "service",
    "label",
    "used",
    "selector",
    "key",
    "value",
    "pair",
    "app",
    "inventory",
    "service",
    "type",
    "low",
    "balancer",
    "notice",
    "case",
    "sensitivity",
    "along",
    "port",
    "target",
    "port",
    "port",
    "end",
    "part",
    "one",
    "lesson",
    "getting",
    "bit",
    "long",
    "decided",
    "break",
    "would",
    "great",
    "opportunity",
    "get",
    "stretch",
    "get",
    "coffee",
    "tea",
    "whenever",
    "ready",
    "part",
    "two",
    "starting",
    "immediately",
    "end",
    "part",
    "one",
    "go",
    "ahead",
    "mark",
    "complete",
    "see",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "part",
    "two",
    "kubernetes",
    "services",
    "lesson",
    "going",
    "continue",
    "immediately",
    "end",
    "part",
    "one",
    "whenever",
    "ready",
    "let",
    "dive",
    "next",
    "service",
    "type",
    "multiport",
    "services",
    "services",
    "need",
    "expose",
    "one",
    "port",
    "kubernetes",
    "lets",
    "configure",
    "multiple",
    "port",
    "definitions",
    "service",
    "object",
    "using",
    "multiple",
    "ports",
    "service",
    "must",
    "give",
    "ports",
    "names",
    "multiple",
    "service",
    "ports",
    "names",
    "must",
    "unique",
    "example",
    "client",
    "calls",
    "service",
    "tcp",
    "port",
    "80",
    "request",
    "forwarded",
    "member",
    "pod",
    "tcp",
    "port",
    "80",
    "either",
    "node",
    "1",
    "node",
    "client",
    "calls",
    "service",
    "tcp",
    "port",
    "9752",
    "request",
    "forwarded",
    "pod",
    "tcp",
    "port",
    "9752",
    "resides",
    "node",
    "member",
    "pod",
    "must",
    "container",
    "listening",
    "tcp",
    "port",
    "80",
    "container",
    "listening",
    "tcp",
    "port",
    "9752",
    "could",
    "single",
    "container",
    "two",
    "threads",
    "two",
    "containers",
    "running",
    "pod",
    "course",
    "shown",
    "manifest",
    "showing",
    "services",
    "name",
    "service",
    "label",
    "used",
    "selector",
    "well",
    "service",
    "type",
    "port",
    "node",
    "exposed",
    "internally",
    "separate",
    "workload",
    "well",
    "port",
    "containers",
    "listening",
    "workload",
    "well",
    "saw",
    "nginx",
    "using",
    "target",
    "port",
    "80",
    "appy",
    "using",
    "port",
    "9752",
    "moving",
    "another",
    "service",
    "type",
    "external",
    "name",
    "service",
    "type",
    "external",
    "name",
    "provides",
    "internal",
    "alias",
    "external",
    "dns",
    "name",
    "internal",
    "clients",
    "make",
    "requests",
    "using",
    "internal",
    "dns",
    "name",
    "requests",
    "redirected",
    "external",
    "name",
    "create",
    "service",
    "kubernetes",
    "creates",
    "dns",
    "name",
    "internal",
    "clients",
    "use",
    "call",
    "service",
    "example",
    "internal",
    "dns",
    "name",
    "internal",
    "client",
    "makes",
    "request",
    "internal",
    "dns",
    "name",
    "request",
    "gets",
    "redirected",
    "dot",
    "bow",
    "tie",
    "inc",
    "dot",
    "private",
    "external",
    "name",
    "service",
    "type",
    "bit",
    "different",
    "service",
    "types",
    "associated",
    "set",
    "pods",
    "ip",
    "address",
    "mapping",
    "internal",
    "dns",
    "name",
    "external",
    "dns",
    "name",
    "service",
    "simple",
    "cname",
    "redirection",
    "great",
    "use",
    "case",
    "external",
    "service",
    "resides",
    "outside",
    "cluster",
    "view",
    "manifest",
    "type",
    "external",
    "name",
    "showing",
    "internal",
    "dns",
    "name",
    "along",
    "external",
    "dns",
    "name",
    "redirect",
    "moving",
    "last",
    "service",
    "type",
    "headless",
    "service",
    "type",
    "sometimes",
    "need",
    "want",
    "low",
    "balancing",
    "single",
    "service",
    "ip",
    "case",
    "create",
    "headless",
    "services",
    "specifying",
    "none",
    "service",
    "type",
    "manifest",
    "file",
    "option",
    "also",
    "allows",
    "choose",
    "service",
    "discovery",
    "mechanisms",
    "without",
    "tied",
    "kubernetes",
    "implementation",
    "applications",
    "still",
    "use",
    "pattern",
    "service",
    "great",
    "use",
    "case",
    "need",
    "low",
    "balancing",
    "routing",
    "need",
    "service",
    "patch",
    "request",
    "back",
    "end",
    "pod",
    "ips",
    "needed",
    "headless",
    "service",
    "typically",
    "used",
    "stateful",
    "sets",
    "name",
    "pods",
    "fixed",
    "useful",
    "situations",
    "like",
    "setting",
    "mysql",
    "cluster",
    "need",
    "know",
    "name",
    "master",
    "manifest",
    "headless",
    "service",
    "service",
    "type",
    "marked",
    "none",
    "sum",
    "kubernetes",
    "services",
    "provides",
    "interfaces",
    "pods",
    "communicate",
    "also",
    "act",
    "main",
    "gateway",
    "application",
    "services",
    "use",
    "selectors",
    "identify",
    "pods",
    "control",
    "expose",
    "ip",
    "address",
    "port",
    "necessarily",
    "port",
    "pod",
    "listening",
    "services",
    "expose",
    "one",
    "port",
    "also",
    "route",
    "traffic",
    "services",
    "external",
    "ip",
    "addresses",
    "dns",
    "names",
    "services",
    "make",
    "really",
    "easy",
    "create",
    "network",
    "services",
    "kubernetes",
    "service",
    "backed",
    "many",
    "pods",
    "needed",
    "without",
    "make",
    "code",
    "aware",
    "service",
    "backed",
    "also",
    "please",
    "note",
    "many",
    "features",
    "use",
    "cases",
    "within",
    "services",
    "mentioned",
    "brought",
    "also",
    "include",
    "links",
    "lesson",
    "text",
    "interested",
    "diving",
    "deeper",
    "services",
    "lesson",
    "merely",
    "summarize",
    "different",
    "service",
    "types",
    "knowing",
    "service",
    "types",
    "put",
    "great",
    "position",
    "exam",
    "questions",
    "cover",
    "services",
    "within",
    "gke",
    "know",
    "another",
    "lesson",
    "extremely",
    "heavy",
    "theory",
    "tremendous",
    "amount",
    "take",
    "worry",
    "next",
    "demo",
    "put",
    "theory",
    "practice",
    "going",
    "ahead",
    "building",
    "cluster",
    "along",
    "touching",
    "much",
    "components",
    "discussed",
    "within",
    "past",
    "lessons",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "kubernetes",
    "service",
    "types",
    "mark",
    "lesson",
    "complete",
    "whenever",
    "ready",
    "join",
    "console",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "ingress",
    "gke",
    "object",
    "within",
    "gke",
    "defines",
    "rules",
    "routing",
    "traffic",
    "specific",
    "services",
    "ingress",
    "topic",
    "comes",
    "exam",
    "well",
    "common",
    "resource",
    "used",
    "many",
    "gke",
    "clusters",
    "see",
    "environments",
    "something",
    "get",
    "familiar",
    "diving",
    "deeper",
    "complex",
    "environments",
    "whenever",
    "ready",
    "let",
    "dive",
    "gke",
    "ingress",
    "object",
    "defines",
    "rules",
    "routing",
    "http",
    "https",
    "traffic",
    "applications",
    "running",
    "cluster",
    "ingress",
    "object",
    "associated",
    "one",
    "service",
    "objects",
    "associated",
    "set",
    "pods",
    "create",
    "ingress",
    "object",
    "gke",
    "ingress",
    "controller",
    "creates",
    "google",
    "cloud",
    "http",
    "https",
    "load",
    "balancer",
    "configures",
    "according",
    "information",
    "ingress",
    "associated",
    "services",
    "gke",
    "ingress",
    "managed",
    "ingress",
    "controller",
    "controller",
    "implements",
    "ingress",
    "resources",
    "google",
    "cloud",
    "load",
    "balancers",
    "http",
    "https",
    "workloads",
    "gke",
    "also",
    "load",
    "balancer",
    "given",
    "stable",
    "ip",
    "address",
    "associate",
    "domain",
    "name",
    "external",
    "http",
    "https",
    "load",
    "balancer",
    "internal",
    "http",
    "https",
    "load",
    "balancer",
    "uses",
    "single",
    "url",
    "map",
    "references",
    "one",
    "services",
    "one",
    "service",
    "corresponds",
    "service",
    "referenced",
    "ingress",
    "example",
    "assume",
    "associated",
    "load",
    "balancers",
    "ip",
    "address",
    "domain",
    "name",
    "client",
    "sends",
    "request",
    "request",
    "routed",
    "kubernetes",
    "service",
    "named",
    "products",
    "port",
    "client",
    "sends",
    "request",
    "forward",
    "slash",
    "discontinued",
    "request",
    "routed",
    "kubernetes",
    "service",
    "named",
    "discontinued",
    "port",
    "21337",
    "ingress",
    "probably",
    "powerful",
    "way",
    "expose",
    "services",
    "also",
    "complex",
    "also",
    "many",
    "types",
    "ingress",
    "controllers",
    "choose",
    "along",
    "plugins",
    "ingress",
    "controllers",
    "ingress",
    "useful",
    "cost",
    "effective",
    "want",
    "expose",
    "multiple",
    "services",
    "ip",
    "address",
    "pay",
    "one",
    "load",
    "balancer",
    "using",
    "native",
    "gcp",
    "integration",
    "comes",
    "slew",
    "features",
    "shown",
    "ingress",
    "manifest",
    "bit",
    "different",
    "manifest",
    "seen",
    "holds",
    "rules",
    "different",
    "paths",
    "explain",
    "previous",
    "diagram",
    "manifest",
    "shown",
    "one",
    "path",
    "directs",
    "traffic",
    "product",
    "service",
    "name",
    "path",
    "redirects",
    "traffic",
    "discontinued",
    "back",
    "end",
    "service",
    "name",
    "discontinued",
    "note",
    "service",
    "names",
    "independent",
    "manifest",
    "needed",
    "create",
    "service",
    "referenced",
    "within",
    "ingress",
    "manifest",
    "rules",
    "different",
    "paths",
    "ports",
    "services",
    "need",
    "wanted",
    "touch",
    "network",
    "endpoint",
    "groups",
    "g",
    "short",
    "second",
    "configuration",
    "object",
    "specifies",
    "group",
    "endpoints",
    "services",
    "negs",
    "useful",
    "container",
    "native",
    "load",
    "balancing",
    "container",
    "represented",
    "endpoint",
    "load",
    "balancer",
    "negs",
    "used",
    "track",
    "pod",
    "endpoints",
    "dynamically",
    "google",
    "low",
    "balancer",
    "route",
    "traffic",
    "appropriate",
    "back",
    "ends",
    "traffic",
    "low",
    "balanced",
    "load",
    "balancer",
    "directly",
    "pod",
    "ip",
    "opposed",
    "traversing",
    "vm",
    "ip",
    "coupe",
    "proxy",
    "networking",
    "conditions",
    "services",
    "annotated",
    "automatically",
    "indicating",
    "neg",
    "created",
    "mirror",
    "pod",
    "ips",
    "within",
    "service",
    "neg",
    "allows",
    "compute",
    "engine",
    "load",
    "balancers",
    "communicate",
    "directly",
    "pods",
    "diagram",
    "shown",
    "ingress",
    "compute",
    "engine",
    "resource",
    "mappings",
    "manifest",
    "saw",
    "earlier",
    "gke",
    "ingress",
    "controller",
    "deploys",
    "manages",
    "compute",
    "engine",
    "low",
    "balancer",
    "resources",
    "based",
    "ingressed",
    "resources",
    "deployed",
    "cluster",
    "touching",
    "health",
    "checks",
    "minute",
    "specified",
    "health",
    "check",
    "parameters",
    "corresponding",
    "service",
    "using",
    "custom",
    "resource",
    "definition",
    "set",
    "default",
    "inferred",
    "parameters",
    "used",
    "health",
    "check",
    "parameters",
    "service",
    "explicitly",
    "defined",
    "creating",
    "config",
    "custom",
    "resource",
    "definition",
    "service",
    "done",
    "using",
    "anthos",
    "backend",
    "config",
    "custom",
    "resource",
    "definition",
    "also",
    "used",
    "one",
    "container",
    "serving",
    "pods",
    "well",
    "need",
    "control",
    "port",
    "used",
    "low",
    "balancers",
    "health",
    "checks",
    "specify",
    "backend",
    "services",
    "health",
    "check",
    "parameters",
    "using",
    "health",
    "check",
    "parameter",
    "config",
    "custom",
    "resource",
    "definition",
    "referenced",
    "corresponding",
    "service",
    "gives",
    "flexibility",
    "control",
    "health",
    "checks",
    "google",
    "cloud",
    "external",
    "http",
    "https",
    "load",
    "balancer",
    "internal",
    "http",
    "https",
    "load",
    "balancer",
    "created",
    "ingress",
    "lastly",
    "wanted",
    "touch",
    "ssl",
    "certificates",
    "three",
    "ways",
    "provide",
    "ssl",
    "certificates",
    "http",
    "https",
    "load",
    "balancer",
    "first",
    "way",
    "google",
    "managed",
    "certificates",
    "provisioned",
    "deployed",
    "renewed",
    "managed",
    "domains",
    "note",
    "managed",
    "certificates",
    "support",
    "wildcard",
    "domains",
    "second",
    "way",
    "provide",
    "ssl",
    "certificates",
    "certificates",
    "shared",
    "google",
    "cloud",
    "provision",
    "ssl",
    "certificate",
    "create",
    "certificate",
    "resource",
    "google",
    "cloud",
    "project",
    "list",
    "certificate",
    "resource",
    "annotation",
    "ingress",
    "create",
    "http",
    "https",
    "load",
    "balancer",
    "uses",
    "certificate",
    "last",
    "way",
    "provide",
    "ssl",
    "certificates",
    "certificates",
    "secret",
    "resources",
    "provision",
    "ssl",
    "certificate",
    "create",
    "secret",
    "hold",
    "refer",
    "secret",
    "ingress",
    "specification",
    "create",
    "http",
    "https",
    "load",
    "balancer",
    "uses",
    "certificate",
    "note",
    "specify",
    "multiple",
    "certificates",
    "ingress",
    "manifest",
    "load",
    "balancer",
    "chooses",
    "certificate",
    "common",
    "name",
    "certificate",
    "matches",
    "host",
    "name",
    "used",
    "request",
    "pretty",
    "much",
    "covers",
    "main",
    "topics",
    "short",
    "lesson",
    "ingress",
    "gke",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "gke",
    "storage",
    "options",
    "kubernetes",
    "currently",
    "offers",
    "slew",
    "different",
    "storage",
    "options",
    "enhanced",
    "added",
    "features",
    "available",
    "google",
    "cloud",
    "gke",
    "also",
    "getting",
    "different",
    "abstractions",
    "kubernetes",
    "offers",
    "manage",
    "storage",
    "used",
    "different",
    "types",
    "workloads",
    "quite",
    "bit",
    "go",
    "said",
    "let",
    "dive",
    "stated",
    "several",
    "storage",
    "options",
    "applications",
    "running",
    "gke",
    "choices",
    "vary",
    "terms",
    "flexibility",
    "ease",
    "use",
    "google",
    "cloud",
    "offers",
    "several",
    "storage",
    "options",
    "used",
    "specific",
    "workload",
    "kubernetes",
    "also",
    "provides",
    "storage",
    "abstractions",
    "getting",
    "bit",
    "easiest",
    "storage",
    "options",
    "google",
    "cloud",
    "managed",
    "storage",
    "products",
    "need",
    "connect",
    "database",
    "cluster",
    "consider",
    "using",
    "cloud",
    "sql",
    "datastore",
    "cloud",
    "spanner",
    "comes",
    "object",
    "storage",
    "cloud",
    "storage",
    "would",
    "excellent",
    "option",
    "fill",
    "gap",
    "file",
    "store",
    "great",
    "option",
    "application",
    "requires",
    "managed",
    "network",
    "attached",
    "storage",
    "application",
    "requires",
    "block",
    "storage",
    "best",
    "option",
    "use",
    "persistent",
    "disks",
    "provisioned",
    "manually",
    "provisioned",
    "dynamically",
    "kubernetes",
    "wanted",
    "first",
    "start",
    "kubernetes",
    "storage",
    "abstractions",
    "order",
    "understand",
    "kubernetes",
    "storage",
    "abstractions",
    "wanted",
    "take",
    "moment",
    "explain",
    "storage",
    "mounted",
    "concept",
    "docker",
    "docker",
    "concept",
    "volumes",
    "though",
    "somewhat",
    "looser",
    "less",
    "managed",
    "kubernetes",
    "docker",
    "volume",
    "directory",
    "disk",
    "another",
    "container",
    "docker",
    "provides",
    "volume",
    "drivers",
    "functionality",
    "somewhat",
    "limited",
    "docker",
    "container",
    "writable",
    "layer",
    "data",
    "stored",
    "default",
    "making",
    "data",
    "ephemeral",
    "data",
    "persisted",
    "container",
    "removed",
    "storing",
    "data",
    "inside",
    "container",
    "always",
    "recommended",
    "three",
    "ways",
    "mount",
    "data",
    "inside",
    "docker",
    "container",
    "first",
    "way",
    "docker",
    "volume",
    "sits",
    "inside",
    "docker",
    "area",
    "within",
    "host",
    "file",
    "system",
    "shared",
    "amongst",
    "containers",
    "volume",
    "docker",
    "object",
    "decoupled",
    "container",
    "attached",
    "shared",
    "across",
    "multiple",
    "containers",
    "well",
    "bind",
    "mounting",
    "second",
    "way",
    "mount",
    "data",
    "coming",
    "directly",
    "host",
    "file",
    "system",
    "bind",
    "mounts",
    "great",
    "local",
    "application",
    "development",
    "yet",
    "shared",
    "across",
    "containers",
    "last",
    "way",
    "mount",
    "data",
    "using",
    "stored",
    "host",
    "memory",
    "way",
    "great",
    "ephemeral",
    "data",
    "increases",
    "performance",
    "longer",
    "lies",
    "container",
    "writable",
    "layer",
    "kubernetes",
    "storage",
    "abstractions",
    "file",
    "system",
    "block",
    "based",
    "storage",
    "provided",
    "pods",
    "different",
    "docker",
    "nature",
    "volumes",
    "basic",
    "storage",
    "unit",
    "kubernetes",
    "decouples",
    "storage",
    "container",
    "tie",
    "pod",
    "container",
    "like",
    "docker",
    "regular",
    "volume",
    "simply",
    "called",
    "volume",
    "basically",
    "directory",
    "containers",
    "pod",
    "access",
    "particular",
    "volume",
    "type",
    "used",
    "determine",
    "purpose",
    "volume",
    "types",
    "backed",
    "ephemeral",
    "storage",
    "like",
    "empty",
    "dir",
    "config",
    "map",
    "secrets",
    "volumes",
    "persist",
    "pod",
    "ceases",
    "exist",
    "volumes",
    "useful",
    "caching",
    "temporary",
    "information",
    "sharing",
    "files",
    "containers",
    "load",
    "data",
    "pod",
    "volume",
    "types",
    "backed",
    "durable",
    "storage",
    "persist",
    "beyond",
    "lifetime",
    "pod",
    "like",
    "persistent",
    "volumes",
    "persistent",
    "volume",
    "claims",
    "persistent",
    "volume",
    "cluster",
    "resource",
    "pods",
    "use",
    "durable",
    "storage",
    "persistent",
    "volume",
    "claim",
    "used",
    "dynamically",
    "provision",
    "persistent",
    "volume",
    "backed",
    "persistent",
    "disks",
    "persistent",
    "volume",
    "claims",
    "also",
    "used",
    "provision",
    "types",
    "backing",
    "storage",
    "like",
    "nfs",
    "getting",
    "persistent",
    "volumes",
    "persistent",
    "volume",
    "claims",
    "bit",
    "saw",
    "docker",
    "disk",
    "files",
    "container",
    "simplest",
    "place",
    "application",
    "write",
    "data",
    "files",
    "lost",
    "container",
    "crashes",
    "stops",
    "reason",
    "well",
    "unaccessible",
    "containers",
    "running",
    "pod",
    "kubernetes",
    "volume",
    "source",
    "declared",
    "pod",
    "specification",
    "determines",
    "directory",
    "created",
    "storage",
    "medium",
    "used",
    "directory",
    "initial",
    "contents",
    "pod",
    "specifies",
    "volumes",
    "contains",
    "path",
    "containers",
    "mount",
    "volume",
    "ephemeral",
    "volume",
    "types",
    "live",
    "amount",
    "time",
    "pods",
    "connected",
    "volumes",
    "created",
    "pod",
    "created",
    "persist",
    "container",
    "restarts",
    "pod",
    "terminates",
    "deleted",
    "volumes",
    "terminated",
    "well",
    "volume",
    "types",
    "interfaces",
    "durable",
    "storage",
    "exist",
    "independently",
    "pod",
    "like",
    "ephemeral",
    "volumes",
    "data",
    "volume",
    "backed",
    "durable",
    "storage",
    "preserved",
    "pod",
    "removed",
    "volume",
    "merely",
    "unmounted",
    "data",
    "handed",
    "another",
    "pod",
    "volumes",
    "differ",
    "storage",
    "implementation",
    "initial",
    "contents",
    "choose",
    "volume",
    "source",
    "best",
    "fits",
    "use",
    "case",
    "going",
    "common",
    "volume",
    "sources",
    "used",
    "see",
    "many",
    "gke",
    "implementations",
    "first",
    "volume",
    "want",
    "bring",
    "empty",
    "dir",
    "empty",
    "dir",
    "volume",
    "provides",
    "empty",
    "directory",
    "containers",
    "pod",
    "read",
    "write",
    "pod",
    "removed",
    "node",
    "reason",
    "data",
    "empty",
    "dir",
    "deleted",
    "forever",
    "empty",
    "dir",
    "volume",
    "stored",
    "whatever",
    "medium",
    "backing",
    "node",
    "might",
    "disk",
    "ssd",
    "network",
    "storage",
    "empty",
    "der",
    "volumes",
    "useful",
    "scratch",
    "space",
    "sharing",
    "data",
    "multiple",
    "containers",
    "pod",
    "next",
    "type",
    "volume",
    "wanted",
    "go",
    "config",
    "map",
    "config",
    "map",
    "resource",
    "provides",
    "way",
    "inject",
    "configuration",
    "data",
    "pods",
    "data",
    "stored",
    "config",
    "map",
    "object",
    "referenced",
    "volume",
    "type",
    "config",
    "map",
    "consumed",
    "files",
    "running",
    "pod",
    "next",
    "volume",
    "type",
    "secret",
    "secret",
    "volume",
    "used",
    "make",
    "sensitive",
    "data",
    "passwords",
    "oauth",
    "tokens",
    "ssh",
    "keys",
    "available",
    "applications",
    "data",
    "stored",
    "secret",
    "object",
    "referenced",
    "volume",
    "type",
    "secret",
    "consumed",
    "files",
    "running",
    "pod",
    "next",
    "volume",
    "type",
    "downward",
    "api",
    "volume",
    "makes",
    "downward",
    "api",
    "data",
    "available",
    "applications",
    "data",
    "includes",
    "information",
    "pod",
    "container",
    "application",
    "running",
    "example",
    "would",
    "expose",
    "information",
    "pods",
    "namespace",
    "ip",
    "address",
    "applications",
    "last",
    "volume",
    "type",
    "wanted",
    "touch",
    "persistent",
    "volume",
    "claim",
    "persistent",
    "volume",
    "claim",
    "volume",
    "used",
    "provision",
    "durable",
    "storage",
    "used",
    "applications",
    "pod",
    "uses",
    "persistent",
    "volume",
    "claim",
    "mount",
    "volume",
    "backed",
    "durable",
    "storage",
    "covered",
    "volumes",
    "wanted",
    "go",
    "bit",
    "detail",
    "persistent",
    "volumes",
    "persistent",
    "volume",
    "resources",
    "used",
    "manage",
    "durable",
    "storage",
    "cluster",
    "gke",
    "persistent",
    "volume",
    "typically",
    "backed",
    "persistent",
    "disk",
    "file",
    "store",
    "used",
    "nfs",
    "solution",
    "unlike",
    "volumes",
    "persistent",
    "volume",
    "life",
    "cycle",
    "managed",
    "kubernetes",
    "dynamically",
    "provisioned",
    "without",
    "need",
    "manually",
    "create",
    "delete",
    "backing",
    "storage",
    "persistent",
    "volume",
    "resources",
    "cluster",
    "resources",
    "exist",
    "independently",
    "pods",
    "continue",
    "persist",
    "cluster",
    "changes",
    "pods",
    "deleted",
    "recreated",
    "moving",
    "persistent",
    "volume",
    "claims",
    "request",
    "claim",
    "persistent",
    "volume",
    "resource",
    "persistent",
    "volume",
    "claim",
    "objects",
    "request",
    "specific",
    "size",
    "access",
    "mode",
    "storage",
    "class",
    "persistent",
    "volume",
    "existing",
    "persistent",
    "volume",
    "satisfy",
    "request",
    "provisioned",
    "persistent",
    "volume",
    "claim",
    "bound",
    "persistent",
    "volume",
    "note",
    "pods",
    "use",
    "claims",
    "volumes",
    "cluster",
    "inspects",
    "claim",
    "find",
    "bound",
    "volume",
    "mounts",
    "volume",
    "pod",
    "wanted",
    "take",
    "moment",
    "go",
    "storage",
    "classes",
    "apply",
    "overall",
    "storage",
    "gke",
    "volume",
    "implementations",
    "gce",
    "persistent",
    "disk",
    "configured",
    "storage",
    "class",
    "resources",
    "gke",
    "creates",
    "default",
    "storage",
    "class",
    "uses",
    "standard",
    "persistent",
    "disk",
    "type",
    "ext4",
    "shown",
    "default",
    "storage",
    "class",
    "used",
    "persistent",
    "volume",
    "claim",
    "specify",
    "storage",
    "class",
    "name",
    "also",
    "replaced",
    "one",
    "choosing",
    "even",
    "create",
    "storage",
    "class",
    "resources",
    "describe",
    "different",
    "classes",
    "storage",
    "helpful",
    "using",
    "windows",
    "node",
    "pools",
    "stated",
    "persistent",
    "volume",
    "claims",
    "automatically",
    "provision",
    "persistent",
    "disks",
    "create",
    "persistent",
    "volume",
    "claim",
    "object",
    "kubernetes",
    "dynamically",
    "creates",
    "corresponding",
    "persistent",
    "volume",
    "object",
    "due",
    "gke",
    "default",
    "storage",
    "class",
    "persistent",
    "volume",
    "backed",
    "new",
    "empty",
    "compute",
    "engine",
    "persistent",
    "disk",
    "use",
    "disk",
    "pod",
    "using",
    "claim",
    "volume",
    "delete",
    "claim",
    "corresponding",
    "persistent",
    "volume",
    "object",
    "provision",
    "compute",
    "engine",
    "persistent",
    "disk",
    "also",
    "deleted",
    "prevent",
    "deletion",
    "set",
    "reclaim",
    "policy",
    "persistent",
    "disk",
    "resource",
    "storage",
    "class",
    "resource",
    "retain",
    "deployments",
    "shown",
    "diagram",
    "designed",
    "stateless",
    "applications",
    "replicas",
    "deployment",
    "share",
    "persistent",
    "volume",
    "claim",
    "stateful",
    "sets",
    "recommended",
    "method",
    "deploying",
    "stateful",
    "applications",
    "require",
    "unique",
    "volume",
    "per",
    "replica",
    "using",
    "stateful",
    "sets",
    "persistent",
    "volume",
    "claim",
    "templates",
    "applications",
    "scale",
    "automatically",
    "unique",
    "persistent",
    "volume",
    "claims",
    "associated",
    "replica",
    "pod",
    "lastly",
    "wanted",
    "touch",
    "topics",
    "determine",
    "storage",
    "access",
    "available",
    "gke",
    "cluster",
    "environment",
    "first",
    "wanted",
    "start",
    "access",
    "modes",
    "three",
    "supported",
    "modes",
    "persistent",
    "disks",
    "allow",
    "read",
    "write",
    "access",
    "listed",
    "read",
    "write",
    "volume",
    "mounted",
    "read",
    "write",
    "single",
    "node",
    "read",
    "many",
    "volume",
    "mounted",
    "read",
    "many",
    "nodes",
    "lastly",
    "read",
    "write",
    "many",
    "volume",
    "mounted",
    "read",
    "write",
    "many",
    "nodes",
    "note",
    "read",
    "write",
    "common",
    "use",
    "case",
    "persistent",
    "disks",
    "works",
    "default",
    "access",
    "mode",
    "applications",
    "next",
    "wanted",
    "touch",
    "type",
    "persistent",
    "disks",
    "available",
    "benefits",
    "caveats",
    "access",
    "going",
    "persistent",
    "disks",
    "lesson",
    "course",
    "probably",
    "know",
    "available",
    "persistent",
    "disks",
    "comes",
    "zonal",
    "versus",
    "regional",
    "availability",
    "may",
    "refresher",
    "going",
    "regional",
    "persistent",
    "disks",
    "resources",
    "replicate",
    "data",
    "two",
    "zones",
    "region",
    "used",
    "similarly",
    "zonal",
    "persistent",
    "disks",
    "event",
    "zonal",
    "outage",
    "kubernetes",
    "fail",
    "workloads",
    "using",
    "volume",
    "zone",
    "regional",
    "persistent",
    "disks",
    "great",
    "highly",
    "available",
    "solutions",
    "stateful",
    "workloads",
    "gke",
    "zonal",
    "persistent",
    "disks",
    "zonal",
    "resources",
    "unless",
    "zone",
    "specified",
    "gke",
    "assigns",
    "disk",
    "single",
    "zone",
    "chooses",
    "zone",
    "random",
    "persistent",
    "disk",
    "provisioned",
    "pods",
    "referencing",
    "disk",
    "scheduled",
    "zone",
    "disk",
    "note",
    "using",
    "zones",
    "allows",
    "stateful",
    "set",
    "pods",
    "spread",
    "across",
    "zones",
    "along",
    "corresponding",
    "disks",
    "last",
    "point",
    "wanted",
    "cover",
    "comes",
    "persistent",
    "volume",
    "access",
    "speed",
    "access",
    "stated",
    "earlier",
    "lesson",
    "size",
    "persistent",
    "disks",
    "determine",
    "iops",
    "throughput",
    "disk",
    "gke",
    "typically",
    "uses",
    "persistent",
    "disks",
    "boot",
    "disks",
    "back",
    "kubernetes",
    "persistent",
    "volumes",
    "whenever",
    "possible",
    "use",
    "larger",
    "fewer",
    "disks",
    "achieve",
    "higher",
    "iops",
    "throughput",
    "pretty",
    "much",
    "covers",
    "everything",
    "wanted",
    "go",
    "lesson",
    "gke",
    "storage",
    "options",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "next",
    "demos",
    "going",
    "complete",
    "walkthrough",
    "putting",
    "theory",
    "learned",
    "practice",
    "building",
    "interacting",
    "gke",
    "clusters",
    "building",
    "deploying",
    "containerized",
    "application",
    "cluster",
    "called",
    "box",
    "bowties",
    "demo",
    "going",
    "setting",
    "gke",
    "cluster",
    "console",
    "along",
    "going",
    "options",
    "available",
    "deploying",
    "also",
    "going",
    "use",
    "command",
    "line",
    "configure",
    "cubectl",
    "command",
    "line",
    "tool",
    "interact",
    "cluster",
    "said",
    "let",
    "dive",
    "console",
    "logged",
    "tonybowties",
    "project",
    "bow",
    "tie",
    "inc",
    "launching",
    "cluster",
    "need",
    "make",
    "sure",
    "default",
    "vpc",
    "created",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "scroll",
    "vpc",
    "network",
    "expected",
    "default",
    "network",
    "go",
    "ahead",
    "create",
    "cluster",
    "order",
    "get",
    "kubernetes",
    "engine",
    "console",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "scroll",
    "compute",
    "find",
    "kubernetes",
    "engine",
    "see",
    "different",
    "options",
    "choose",
    "left",
    "hand",
    "menu",
    "going",
    "options",
    "upcoming",
    "demos",
    "want",
    "concentrate",
    "creating",
    "cluster",
    "gk",
    "makes",
    "things",
    "pretty",
    "easy",
    "option",
    "create",
    "cluster",
    "deploy",
    "container",
    "even",
    "taking",
    "quick",
    "start",
    "going",
    "go",
    "ahead",
    "click",
    "create",
    "cluster",
    "prompted",
    "cluster",
    "basics",
    "really",
    "wanted",
    "simply",
    "fill",
    "fields",
    "see",
    "click",
    "create",
    "use",
    "defaults",
    "build",
    "cluster",
    "going",
    "customize",
    "little",
    "bit",
    "going",
    "go",
    "ahead",
    "go",
    "options",
    "first",
    "name",
    "going",
    "name",
    "cluster",
    "bowtie",
    "dash",
    "cluster",
    "location",
    "type",
    "want",
    "keep",
    "things",
    "zonal",
    "check",
    "specify",
    "default",
    "node",
    "locations",
    "able",
    "make",
    "cluster",
    "option",
    "selecting",
    "multiple",
    "zones",
    "situate",
    "nodes",
    "select",
    "bunch",
    "different",
    "zones",
    "choose",
    "want",
    "keep",
    "single",
    "zonal",
    "cluster",
    "going",
    "check",
    "zone",
    "going",
    "click",
    "drop",
    "menu",
    "going",
    "select",
    "us",
    "east",
    "1b",
    "note",
    "zone",
    "select",
    "control",
    "plane",
    "live",
    "create",
    "cluster",
    "see",
    "master",
    "zone",
    "zone",
    "control",
    "plane",
    "created",
    "selected",
    "us",
    "east",
    "1b",
    "zone",
    "selected",
    "change",
    "let",
    "say",
    "us",
    "east",
    "1d",
    "see",
    "control",
    "plane",
    "change",
    "going",
    "change",
    "back",
    "us",
    "east",
    "1b",
    "also",
    "option",
    "creating",
    "regional",
    "cluster",
    "location",
    "selection",
    "change",
    "zone",
    "region",
    "specify",
    "least",
    "one",
    "zone",
    "select",
    "please",
    "also",
    "remember",
    "number",
    "nodes",
    "deployed",
    "selected",
    "zone",
    "three",
    "nodes",
    "cluster",
    "decide",
    "select",
    "three",
    "zones",
    "nine",
    "nodes",
    "cluster",
    "something",
    "like",
    "could",
    "get",
    "quite",
    "pricey",
    "looking",
    "cost",
    "conscious",
    "okay",
    "moving",
    "going",
    "uncheck",
    "specify",
    "default",
    "node",
    "locations",
    "going",
    "change",
    "location",
    "type",
    "back",
    "zonal",
    "make",
    "sure",
    "zone",
    "us",
    "east",
    "1b",
    "moving",
    "master",
    "version",
    "would",
    "select",
    "either",
    "static",
    "version",
    "release",
    "channel",
    "version",
    "kubernetes",
    "want",
    "cluster",
    "static",
    "version",
    "choose",
    "bunch",
    "different",
    "versions",
    "way",
    "back",
    "way",
    "latest",
    "version",
    "release",
    "channel",
    "release",
    "channel",
    "selection",
    "choose",
    "rapid",
    "channel",
    "regular",
    "channel",
    "stable",
    "channel",
    "going",
    "keep",
    "things",
    "default",
    "regular",
    "channel",
    "well",
    "going",
    "keep",
    "default",
    "version",
    "version",
    "choice",
    "could",
    "go",
    "ahead",
    "simply",
    "click",
    "create",
    "demo",
    "walkthrough",
    "going",
    "go",
    "ahead",
    "go",
    "available",
    "options",
    "going",
    "start",
    "going",
    "left",
    "hand",
    "menu",
    "clicking",
    "default",
    "pool",
    "pools",
    "one",
    "node",
    "pool",
    "already",
    "three",
    "nodes",
    "default",
    "node",
    "pool",
    "comes",
    "cluster",
    "something",
    "specific",
    "could",
    "add",
    "another",
    "node",
    "pool",
    "configure",
    "need",
    "two",
    "node",
    "pools",
    "gon",
    "na",
    "go",
    "ahead",
    "remove",
    "nodepool1",
    "going",
    "go",
    "remove",
    "nodepool",
    "see",
    "gke",
    "makes",
    "really",
    "easy",
    "add",
    "remove",
    "node",
    "pools",
    "going",
    "go",
    "back",
    "default",
    "pool",
    "going",
    "keep",
    "name",
    "gon",
    "na",
    "keep",
    "number",
    "nodes",
    "three",
    "wanted",
    "change",
    "number",
    "nodes",
    "simply",
    "select",
    "choose",
    "six",
    "however",
    "many",
    "nodes",
    "need",
    "workload",
    "deploying",
    "large",
    "workload",
    "gon",
    "na",
    "keep",
    "number",
    "3",
    "moving",
    "right",
    "along",
    "want",
    "check",
    "enable",
    "auto",
    "scaling",
    "way",
    "worry",
    "scaling",
    "scaling",
    "going",
    "put",
    "minimum",
    "number",
    "nodes",
    "one",
    "going",
    "keep",
    "maximum",
    "number",
    "nodes",
    "given",
    "option",
    "select",
    "zone",
    "location",
    "nodes",
    "zone",
    "select",
    "run",
    "amount",
    "nodes",
    "basically",
    "another",
    "option",
    "order",
    "choose",
    "zonal",
    "cluster",
    "creating",
    "cluster",
    "single",
    "zone",
    "going",
    "uncheck",
    "automation",
    "see",
    "enable",
    "auto",
    "upgrade",
    "enable",
    "auto",
    "repair",
    "checked",
    "due",
    "fact",
    "auto",
    "upgrade",
    "feature",
    "always",
    "enabled",
    "release",
    "channel",
    "selected",
    "pointed",
    "previous",
    "lesson",
    "google",
    "best",
    "practice",
    "auto",
    "upgrade",
    "auto",
    "repair",
    "enabled",
    "moving",
    "bottom",
    "fields",
    "change",
    "surge",
    "upgrade",
    "behavior",
    "refresher",
    "surge",
    "upgrades",
    "allow",
    "control",
    "number",
    "nodes",
    "gke",
    "upgrade",
    "time",
    "control",
    "disruptive",
    "upgrades",
    "workloads",
    "max",
    "surge",
    "number",
    "additional",
    "nodes",
    "added",
    "node",
    "pool",
    "upgrade",
    "max",
    "unavailable",
    "number",
    "nodes",
    "simultaneously",
    "unavailable",
    "upgrade",
    "worried",
    "disruptions",
    "leave",
    "set",
    "default",
    "moving",
    "going",
    "move",
    "back",
    "left",
    "hand",
    "menu",
    "pools",
    "going",
    "click",
    "nodes",
    "choose",
    "type",
    "instance",
    "want",
    "using",
    "nodes",
    "going",
    "keep",
    "image",
    "type",
    "container",
    "optimize",
    "os",
    "default",
    "image",
    "type",
    "also",
    "option",
    "choosing",
    "others",
    "like",
    "ubuntu",
    "windows",
    "going",
    "keep",
    "default",
    "machine",
    "configuration",
    "going",
    "keep",
    "general",
    "purpose",
    "series",
    "e2",
    "want",
    "change",
    "machine",
    "type",
    "e2",
    "micro",
    "cost",
    "conscious",
    "boot",
    "disk",
    "size",
    "want",
    "keep",
    "10",
    "gigabytes",
    "really",
    "need",
    "100",
    "gigabytes",
    "also",
    "option",
    "choosing",
    "different",
    "boot",
    "disk",
    "type",
    "change",
    "standard",
    "persistent",
    "disk",
    "ssd",
    "going",
    "keep",
    "things",
    "standard",
    "well",
    "also",
    "option",
    "use",
    "customer",
    "manage",
    "keys",
    "encryption",
    "boot",
    "disk",
    "well",
    "selecting",
    "preemptable",
    "nodes",
    "cost",
    "savings",
    "going",
    "move",
    "networking",
    "wanted",
    "get",
    "really",
    "granular",
    "add",
    "maximum",
    "pods",
    "per",
    "node",
    "well",
    "network",
    "tags",
    "demo",
    "require",
    "going",
    "leave",
    "going",
    "go",
    "back",
    "left",
    "hand",
    "menu",
    "click",
    "security",
    "node",
    "security",
    "option",
    "changing",
    "service",
    "account",
    "along",
    "access",
    "scopes",
    "demo",
    "keep",
    "things",
    "default",
    "service",
    "account",
    "access",
    "scopes",
    "left",
    "going",
    "go",
    "back",
    "left",
    "hand",
    "menu",
    "click",
    "metadata",
    "add",
    "kubernetes",
    "labels",
    "well",
    "instance",
    "metadata",
    "know",
    "get",
    "node",
    "taints",
    "fill",
    "taints",
    "submit",
    "workload",
    "run",
    "cluster",
    "scheduler",
    "determines",
    "place",
    "pods",
    "associated",
    "workload",
    "scheduler",
    "place",
    "pod",
    "node",
    "satisfies",
    "resource",
    "requirements",
    "workload",
    "taints",
    "give",
    "control",
    "workloads",
    "run",
    "particular",
    "pool",
    "nodes",
    "let",
    "mark",
    "node",
    "scheduler",
    "avoids",
    "prevents",
    "using",
    "certain",
    "pods",
    "instance",
    "node",
    "pool",
    "dedicated",
    "gpus",
    "want",
    "keep",
    "node",
    "pool",
    "specifically",
    "workload",
    "requires",
    "although",
    "beta",
    "great",
    "feature",
    "pretty",
    "much",
    "covers",
    "pools",
    "see",
    "end",
    "part",
    "one",
    "demo",
    "getting",
    "bit",
    "long",
    "decided",
    "break",
    "would",
    "great",
    "opportunity",
    "get",
    "stretch",
    "get",
    "coffee",
    "tea",
    "whenever",
    "ready",
    "part",
    "two",
    "starting",
    "immediately",
    "end",
    "part",
    "one",
    "mark",
    "complete",
    "see",
    "next",
    "one",
    "music",
    "part",
    "two",
    "creating",
    "gke",
    "cluster",
    "part",
    "2",
    "starting",
    "immediately",
    "end",
    "part",
    "said",
    "let",
    "dive",
    "going",
    "go",
    "back",
    "left",
    "hand",
    "menu",
    "cluster",
    "going",
    "click",
    "automation",
    "option",
    "enabling",
    "maintenance",
    "window",
    "aligning",
    "times",
    "auto",
    "upgrades",
    "allowed",
    "option",
    "adding",
    "window",
    "specified",
    "times",
    "week",
    "create",
    "custom",
    "maintenance",
    "window",
    "need",
    "maintenance",
    "window",
    "right",
    "going",
    "uncheck",
    "well",
    "option",
    "maintenance",
    "exclusions",
    "want",
    "maintenance",
    "occur",
    "ngk",
    "gives",
    "option",
    "multiple",
    "maintenance",
    "exclusions",
    "whenever",
    "need",
    "need",
    "maintenance",
    "exclusions",
    "going",
    "delete",
    "option",
    "enable",
    "vertical",
    "pod",
    "auto",
    "scaling",
    "gke",
    "automatically",
    "schedule",
    "pods",
    "onto",
    "nodes",
    "satisfy",
    "resources",
    "required",
    "workload",
    "well",
    "enable",
    "node",
    "auto",
    "provisioning",
    "enabling",
    "option",
    "allows",
    "gke",
    "automatically",
    "manage",
    "set",
    "node",
    "pools",
    "created",
    "deleted",
    "needed",
    "bunch",
    "fields",
    "choose",
    "resource",
    "type",
    "minimum",
    "maximum",
    "cpu",
    "memory",
    "service",
    "account",
    "well",
    "adding",
    "even",
    "resources",
    "like",
    "gpus",
    "workload",
    "require",
    "anything",
    "fancy",
    "going",
    "delete",
    "going",
    "uncheck",
    "enable",
    "auto",
    "provisioning",
    "lastly",
    "auto",
    "scaling",
    "profile",
    "option",
    "choosing",
    "balance",
    "profile",
    "default",
    "well",
    "optimize",
    "utilization",
    "still",
    "beta",
    "going",
    "keep",
    "things",
    "default",
    "going",
    "move",
    "back",
    "left",
    "hand",
    "menu",
    "networking",
    "get",
    "really",
    "granular",
    "cluster",
    "comes",
    "networking",
    "option",
    "choosing",
    "public",
    "private",
    "cluster",
    "well",
    "choose",
    "different",
    "network",
    "since",
    "default",
    "shows",
    "different",
    "networks",
    "choose",
    "well",
    "subnets",
    "also",
    "choose",
    "networking",
    "options",
    "like",
    "pod",
    "address",
    "range",
    "maximum",
    "pods",
    "per",
    "node",
    "bunch",
    "options",
    "wo",
    "get",
    "detail",
    "encourage",
    "curious",
    "go",
    "docs",
    "check",
    "different",
    "options",
    "one",
    "thing",
    "wanted",
    "note",
    "enable",
    "http",
    "low",
    "balancing",
    "required",
    "order",
    "use",
    "google",
    "cloud",
    "load",
    "balancer",
    "discussed",
    "previously",
    "services",
    "lesson",
    "enable",
    "service",
    "type",
    "load",
    "balancer",
    "load",
    "balancer",
    "created",
    "cloud",
    "provider",
    "google",
    "requires",
    "check",
    "controller",
    "installed",
    "cluster",
    "upon",
    "creation",
    "allow",
    "load",
    "balancer",
    "created",
    "service",
    "created",
    "going",
    "leave",
    "checked",
    "deploying",
    "load",
    "balancer",
    "little",
    "bit",
    "later",
    "moving",
    "back",
    "left",
    "hand",
    "menu",
    "going",
    "click",
    "security",
    "many",
    "options",
    "choose",
    "allow",
    "really",
    "lock",
    "cluster",
    "would",
    "depend",
    "specific",
    "type",
    "workload",
    "going",
    "go",
    "options",
    "want",
    "highlight",
    "looking",
    "security",
    "focused",
    "cluster",
    "moving",
    "list",
    "menu",
    "going",
    "click",
    "metadata",
    "enter",
    "description",
    "cluster",
    "well",
    "adding",
    "labels",
    "last",
    "option",
    "cluster",
    "menu",
    "features",
    "option",
    "running",
    "cloud",
    "run",
    "anthos",
    "allow",
    "deploy",
    "serverless",
    "workloads",
    "anthos",
    "clusters",
    "runs",
    "top",
    "gke",
    "enable",
    "monitoring",
    "gke",
    "natively",
    "monitored",
    "google",
    "cloud",
    "monitoring",
    "running",
    "product",
    "monitor",
    "cluster",
    "simply",
    "uncheck",
    "use",
    "monitoring",
    "whole",
    "bunch",
    "features",
    "wo",
    "dive",
    "right",
    "curious",
    "always",
    "hover",
    "question",
    "mark",
    "get",
    "information",
    "pretty",
    "much",
    "covered",
    "configuration",
    "needed",
    "cluster",
    "going",
    "finally",
    "head",
    "bottom",
    "click",
    "create",
    "may",
    "take",
    "minutes",
    "create",
    "cluster",
    "going",
    "go",
    "ahead",
    "pause",
    "video",
    "back",
    "faster",
    "say",
    "cat",
    "hat",
    "okay",
    "cluster",
    "created",
    "see",
    "location",
    "us",
    "east",
    "1b",
    "three",
    "nodes",
    "six",
    "vcpus",
    "three",
    "gigabytes",
    "memory",
    "drill",
    "see",
    "exactly",
    "details",
    "cluster",
    "well",
    "wanted",
    "edit",
    "options",
    "simply",
    "go",
    "top",
    "click",
    "edit",
    "make",
    "necessary",
    "changes",
    "probably",
    "wondering",
    "need",
    "order",
    "create",
    "cluster",
    "command",
    "line",
    "well",
    "bit",
    "simpler",
    "think",
    "going",
    "show",
    "right",
    "going",
    "simply",
    "go",
    "right",
    "hand",
    "menu",
    "activate",
    "cloud",
    "shell",
    "bring",
    "better",
    "viewing",
    "going",
    "paste",
    "command",
    "gcloud",
    "container",
    "clusters",
    "create",
    "bow",
    "tie",
    "dash",
    "cluster",
    "flag",
    "num",
    "nodes",
    "number",
    "nodes",
    "choose",
    "three",
    "like",
    "said",
    "wanted",
    "simply",
    "create",
    "simple",
    "cluster",
    "like",
    "wanted",
    "create",
    "cluster",
    "exactly",
    "built",
    "last",
    "cluster",
    "use",
    "command",
    "necessary",
    "flags",
    "need",
    "make",
    "customize",
    "liking",
    "exciting",
    "demonstration",
    "time",
    "shows",
    "easy",
    "yet",
    "powerful",
    "gke",
    "really",
    "going",
    "launch",
    "cluster",
    "already",
    "one",
    "wanted",
    "show",
    "interact",
    "new",
    "gke",
    "cluster",
    "going",
    "simply",
    "clear",
    "screen",
    "order",
    "interact",
    "cluster",
    "going",
    "using",
    "cube",
    "ctl",
    "command",
    "line",
    "tool",
    "tool",
    "used",
    "interact",
    "kubernetes",
    "cluster",
    "matter",
    "platform",
    "could",
    "use",
    "gcloud",
    "container",
    "commands",
    "wo",
    "allow",
    "get",
    "granular",
    "cubectl",
    "tool",
    "caveat",
    "creating",
    "cluster",
    "console",
    "need",
    "run",
    "command",
    "order",
    "retrieve",
    "cluster",
    "credentials",
    "configure",
    "cubectl",
    "command",
    "line",
    "tool",
    "going",
    "go",
    "ahead",
    "paste",
    "command",
    "gcloud",
    "container",
    "clusters",
    "get",
    "dash",
    "credentials",
    "name",
    "cluster",
    "bow",
    "tie",
    "dash",
    "cluster",
    "along",
    "zone",
    "flag",
    "dash",
    "dash",
    "zone",
    "followed",
    "zone",
    "us",
    "east",
    "1b",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "see",
    "cubectl",
    "configured",
    "able",
    "interact",
    "cluster",
    "verify",
    "going",
    "run",
    "command",
    "cubectl",
    "getpods",
    "naturally",
    "workloads",
    "currently",
    "deployed",
    "cluster",
    "pods",
    "going",
    "run",
    "command",
    "cube",
    "ctl",
    "get",
    "nodes",
    "see",
    "cubectl",
    "command",
    "line",
    "tool",
    "configured",
    "correctly",
    "cluster",
    "ready",
    "workloads",
    "deployed",
    "also",
    "configured",
    "cubectl",
    "command",
    "line",
    "tool",
    "able",
    "manage",
    "cluster",
    "troubleshoot",
    "necessary",
    "know",
    "ton",
    "features",
    "covered",
    "wanted",
    "give",
    "full",
    "walkthrough",
    "able",
    "tie",
    "theory",
    "last",
    "lessons",
    "get",
    "feel",
    "gke",
    "cluster",
    "getting",
    "involved",
    "next",
    "couple",
    "demos",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "creating",
    "setting",
    "gke",
    "cluster",
    "mark",
    "complete",
    "whenever",
    "ready",
    "join",
    "console",
    "next",
    "one",
    "building",
    "box",
    "bow",
    "ties",
    "container",
    "deploy",
    "new",
    "cluster",
    "planning",
    "go",
    "straight",
    "next",
    "demo",
    "recommend",
    "delete",
    "cluster",
    "avoid",
    "unnecessary",
    "costs",
    "recreate",
    "ready",
    "go",
    "next",
    "demo",
    "music",
    "welcome",
    "back",
    "last",
    "lesson",
    "built",
    "custom",
    "gke",
    "cluster",
    "configured",
    "cube",
    "ctl",
    "command",
    "line",
    "tool",
    "interact",
    "cluster",
    "lesson",
    "going",
    "building",
    "docker",
    "image",
    "box",
    "bow",
    "ties",
    "using",
    "cloud",
    "build",
    "pushed",
    "google",
    "cloud",
    "container",
    "registry",
    "deploy",
    "current",
    "gke",
    "cluster",
    "see",
    "lot",
    "said",
    "let",
    "dive",
    "first",
    "thing",
    "want",
    "clone",
    "repo",
    "within",
    "cloud",
    "shell",
    "run",
    "necessary",
    "commands",
    "build",
    "image",
    "going",
    "go",
    "top",
    "right",
    "going",
    "open",
    "cloud",
    "shell",
    "going",
    "make",
    "sure",
    "home",
    "directory",
    "going",
    "run",
    "command",
    "cd",
    "space",
    "tilde",
    "hit",
    "enter",
    "home",
    "directory",
    "run",
    "command",
    "ls",
    "see",
    "cloud",
    "going",
    "clone",
    "github",
    "repository",
    "link",
    "instructions",
    "github",
    "repo",
    "well",
    "lesson",
    "text",
    "command",
    "would",
    "git",
    "clone",
    "along",
    "https",
    "address",
    "github",
    "repo",
    "going",
    "hit",
    "enter",
    "finished",
    "cloning",
    "repo",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "run",
    "command",
    "ls",
    "see",
    "repo",
    "going",
    "drill",
    "directory",
    "running",
    "cd",
    "google",
    "cloud",
    "associate",
    "cloud",
    "engineer",
    "run",
    "ls",
    "see",
    "clone",
    "files",
    "folders",
    "files",
    "need",
    "going",
    "found",
    "box",
    "bowties",
    "folder",
    "kubernetes",
    "engine",
    "containers",
    "going",
    "change",
    "directories",
    "location",
    "run",
    "ls",
    "box",
    "bow",
    "ties",
    "folder",
    "called",
    "container",
    "necessary",
    "files",
    "need",
    "order",
    "build",
    "image",
    "jpeg",
    "box",
    "bow",
    "ties",
    "docker",
    "file",
    "three",
    "files",
    "need",
    "order",
    "build",
    "image",
    "said",
    "going",
    "using",
    "tool",
    "called",
    "cloud",
    "build",
    "discussed",
    "yet",
    "cloudbuild",
    "serverless",
    "ci",
    "cd",
    "platform",
    "allows",
    "package",
    "source",
    "code",
    "containers",
    "get",
    "really",
    "fancy",
    "cloud",
    "build",
    "going",
    "setting",
    "ci",
    "cd",
    "pipelines",
    "merely",
    "using",
    "cloud",
    "build",
    "build",
    "image",
    "push",
    "container",
    "registry",
    "well",
    "container",
    "registry",
    "google",
    "cloud",
    "private",
    "docker",
    "repository",
    "manage",
    "docker",
    "images",
    "integrates",
    "cloud",
    "build",
    "gke",
    "app",
    "engine",
    "cloud",
    "functions",
    "repos",
    "like",
    "github",
    "bitbucket",
    "allows",
    "amazing",
    "build",
    "experience",
    "absolutely",
    "heavy",
    "lifting",
    "able",
    "build",
    "images",
    "without",
    "leave",
    "google",
    "cloud",
    "figured",
    "would",
    "great",
    "time",
    "highlight",
    "services",
    "getting",
    "back",
    "cloned",
    "repo",
    "files",
    "cloud",
    "shell",
    "want",
    "want",
    "make",
    "sure",
    "cloud",
    "build",
    "api",
    "enabled",
    "service",
    "used",
    "go",
    "console",
    "enable",
    "api",
    "going",
    "run",
    "cloud",
    "shell",
    "going",
    "paste",
    "command",
    "gcloud",
    "services",
    "enable",
    "going",
    "hit",
    "enter",
    "get",
    "prompt",
    "asking",
    "authorize",
    "api",
    "call",
    "definitely",
    "want",
    "authorize",
    "take",
    "seconds",
    "right",
    "api",
    "enabled",
    "cloud",
    "build",
    "going",
    "quickly",
    "clear",
    "screen",
    "want",
    "show",
    "exactly",
    "cloud",
    "build",
    "want",
    "head",
    "console",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "scroll",
    "tools",
    "come",
    "cloud",
    "build",
    "expected",
    "nothing",
    "build",
    "history",
    "well",
    "lot",
    "interact",
    "going",
    "run",
    "command",
    "builds",
    "image",
    "going",
    "paste",
    "command",
    "cloud",
    "shell",
    "gcloud",
    "builds",
    "submit",
    "dash",
    "dash",
    "tag",
    "google",
    "cloud",
    "container",
    "registry",
    "variable",
    "google",
    "cloud",
    "project",
    "along",
    "image",
    "name",
    "box",
    "bow",
    "ties",
    "version",
    "please",
    "forget",
    "trailing",
    "dot",
    "end",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "cloud",
    "build",
    "compress",
    "files",
    "move",
    "cloud",
    "storage",
    "bucket",
    "cloud",
    "build",
    "takes",
    "files",
    "bucket",
    "uses",
    "docker",
    "file",
    "execute",
    "docker",
    "build",
    "process",
    "going",
    "pause",
    "video",
    "till",
    "build",
    "completes",
    "back",
    "flash",
    "okay",
    "image",
    "complete",
    "showing",
    "build",
    "history",
    "cloud",
    "build",
    "dashboard",
    "want",
    "drill",
    "actual",
    "build",
    "right",
    "beside",
    "green",
    "check",
    "mark",
    "see",
    "hot",
    "link",
    "simply",
    "click",
    "see",
    "build",
    "summary",
    "build",
    "log",
    "execution",
    "details",
    "along",
    "build",
    "artifacts",
    "well",
    "compressed",
    "files",
    "stored",
    "cloud",
    "storage",
    "hot",
    "link",
    "right",
    "wanted",
    "download",
    "build",
    "log",
    "conveniently",
    "hot",
    "link",
    "image",
    "box",
    "bow",
    "ties",
    "bring",
    "container",
    "registry",
    "go",
    "ahead",
    "click",
    "link",
    "open",
    "another",
    "tab",
    "bring",
    "right",
    "page",
    "image",
    "covers",
    "lot",
    "details",
    "great",
    "thing",
    "love",
    "container",
    "registry",
    "tightly",
    "coupled",
    "lot",
    "resources",
    "within",
    "google",
    "cloud",
    "able",
    "simply",
    "deploy",
    "right",
    "deploy",
    "cloud",
    "run",
    "gke",
    "well",
    "compute",
    "engine",
    "could",
    "simply",
    "deploy",
    "image",
    "right",
    "wanted",
    "gke",
    "going",
    "go",
    "back",
    "gke",
    "tab",
    "going",
    "go",
    "navigation",
    "menu",
    "go",
    "kubernetes",
    "engine",
    "going",
    "go",
    "top",
    "menu",
    "click",
    "deploy",
    "going",
    "ask",
    "image",
    "want",
    "deploy",
    "want",
    "click",
    "select",
    "select",
    "new",
    "container",
    "image",
    "menu",
    "pop",
    "right",
    "hand",
    "side",
    "screen",
    "container",
    "registry",
    "see",
    "box",
    "bow",
    "ties",
    "expand",
    "node",
    "simply",
    "click",
    "image",
    "hit",
    "select",
    "container",
    "image",
    "populated",
    "image",
    "path",
    "want",
    "scroll",
    "wanted",
    "could",
    "add",
    "another",
    "container",
    "even",
    "add",
    "environment",
    "variables",
    "looking",
    "right",
    "simply",
    "click",
    "continue",
    "going",
    "prompted",
    "fields",
    "fill",
    "configuration",
    "deployment",
    "application",
    "name",
    "going",
    "called",
    "box",
    "bow",
    "ties",
    "going",
    "keep",
    "default",
    "namespace",
    "well",
    "going",
    "keep",
    "key",
    "value",
    "pair",
    "app",
    "box",
    "bow",
    "ties",
    "labels",
    "configuration",
    "create",
    "deployment",
    "file",
    "always",
    "look",
    "manifest",
    "clicking",
    "view",
    "yaml",
    "button",
    "deployed",
    "always",
    "good",
    "practice",
    "deploy",
    "workload",
    "see",
    "top",
    "kind",
    "deployment",
    "name",
    "well",
    "namespace",
    "labels",
    "replicas",
    "three",
    "well",
    "selector",
    "spec",
    "bottom",
    "well",
    "manifest",
    "also",
    "holds",
    "another",
    "kind",
    "horizontal",
    "pod",
    "auto",
    "scaler",
    "coupled",
    "deployment",
    "manifest",
    "due",
    "reference",
    "deployment",
    "always",
    "common",
    "practice",
    "try",
    "group",
    "manifest",
    "together",
    "whenever",
    "really",
    "cool",
    "feature",
    "take",
    "advantage",
    "gke",
    "going",
    "close",
    "actually",
    "going",
    "close",
    "cloud",
    "shell",
    "need",
    "right",
    "well",
    "see",
    "going",
    "deploy",
    "kubernetes",
    "cluster",
    "bow",
    "tie",
    "cluster",
    "us",
    "east",
    "1b",
    "wanted",
    "deploy",
    "new",
    "cluster",
    "clusters",
    "environment",
    "would",
    "show",
    "able",
    "select",
    "well",
    "bow",
    "tie",
    "cluster",
    "one",
    "completed",
    "configuration",
    "deployment",
    "simply",
    "click",
    "deploy",
    "going",
    "take",
    "couple",
    "minutes",
    "going",
    "pause",
    "video",
    "back",
    "soon",
    "deployment",
    "done",
    "okay",
    "workload",
    "deployed",
    "got",
    "default",
    "messages",
    "popped",
    "set",
    "automated",
    "pipeline",
    "workload",
    "going",
    "demo",
    "feel",
    "free",
    "try",
    "later",
    "like",
    "want",
    "expose",
    "service",
    "want",
    "see",
    "running",
    "going",
    "take",
    "care",
    "bit",
    "scroll",
    "details",
    "see",
    "metrics",
    "cpu",
    "memory",
    "disk",
    "cluster",
    "namespace",
    "labels",
    "pods",
    "running",
    "basically",
    "live",
    "visual",
    "representation",
    "deployment",
    "scroll",
    "back",
    "top",
    "dive",
    "details",
    "events",
    "even",
    "manifest",
    "also",
    "copy",
    "manifest",
    "download",
    "like",
    "see",
    "lot",
    "different",
    "options",
    "want",
    "verify",
    "deployment",
    "going",
    "use",
    "cube",
    "ctl",
    "command",
    "line",
    "tool",
    "run",
    "commands",
    "verify",
    "information",
    "going",
    "open",
    "back",
    "cloud",
    "shell",
    "make",
    "little",
    "bit",
    "bigger",
    "better",
    "viewing",
    "going",
    "run",
    "command",
    "cubectl",
    "get",
    "see",
    "list",
    "pods",
    "running",
    "name",
    "service",
    "deployment",
    "replica",
    "set",
    "everything",
    "cluster",
    "deployment",
    "seeing",
    "running",
    "command",
    "next",
    "want",
    "pull",
    "details",
    "deployments",
    "cluster",
    "command",
    "cube",
    "ctl",
    "get",
    "deployments",
    "came",
    "kind",
    "crammed",
    "bottom",
    "going",
    "simply",
    "clear",
    "screen",
    "run",
    "command",
    "see",
    "box",
    "bowties",
    "deployment",
    "displayed",
    "many",
    "replicas",
    "available",
    "many",
    "replicas",
    "achieve",
    "desired",
    "state",
    "along",
    "long",
    "application",
    "running",
    "want",
    "dive",
    "pods",
    "order",
    "going",
    "run",
    "command",
    "cube",
    "ctl",
    "get",
    "pods",
    "see",
    "pods",
    "wanted",
    "look",
    "list",
    "events",
    "specific",
    "pod",
    "command",
    "would",
    "cubectl",
    "describe",
    "pod",
    "name",
    "one",
    "pods",
    "going",
    "pick",
    "first",
    "one",
    "copy",
    "going",
    "paste",
    "going",
    "hit",
    "enter",
    "see",
    "events",
    "occurred",
    "pod",
    "well",
    "also",
    "access",
    "information",
    "regards",
    "volumes",
    "conditions",
    "even",
    "container",
    "image",
    "ids",
    "great",
    "command",
    "use",
    "troubleshooting",
    "pods",
    "trying",
    "get",
    "bottom",
    "problem",
    "final",
    "step",
    "want",
    "want",
    "able",
    "expose",
    "application",
    "check",
    "see",
    "running",
    "properly",
    "going",
    "go",
    "ahead",
    "console",
    "going",
    "close",
    "cloud",
    "shell",
    "going",
    "go",
    "overview",
    "scroll",
    "bottom",
    "click",
    "button",
    "says",
    "expose",
    "wanted",
    "top",
    "right",
    "hand",
    "corner",
    "says",
    "expose",
    "deployment",
    "going",
    "click",
    "expose",
    "probably",
    "looks",
    "familiar",
    "graphical",
    "representation",
    "services",
    "manifest",
    "port",
    "mapping",
    "cover",
    "ports",
    "configuration",
    "services",
    "manifest",
    "starting",
    "port",
    "target",
    "port",
    "well",
    "protocol",
    "target",
    "port",
    "going",
    "open",
    "port",
    "service",
    "type",
    "option",
    "selecting",
    "cluster",
    "ip",
    "node",
    "port",
    "load",
    "balancer",
    "service",
    "type",
    "want",
    "use",
    "going",
    "low",
    "balancer",
    "keep",
    "service",
    "name",
    "box",
    "bowties",
    "service",
    "view",
    "manifest",
    "file",
    "service",
    "copy",
    "download",
    "need",
    "need",
    "right",
    "going",
    "close",
    "pretty",
    "simple",
    "process",
    "need",
    "click",
    "expose",
    "within",
    "minute",
    "two",
    "service",
    "running",
    "shiny",
    "new",
    "low",
    "balancer",
    "okay",
    "service",
    "created",
    "see",
    "services",
    "ingress",
    "left",
    "hand",
    "menu",
    "go",
    "back",
    "main",
    "page",
    "services",
    "ingress",
    "see",
    "box",
    "bow",
    "tie",
    "service",
    "one",
    "also",
    "option",
    "creating",
    "service",
    "type",
    "ingress",
    "want",
    "right",
    "going",
    "go",
    "back",
    "services",
    "see",
    "endpoint",
    "hot",
    "link",
    "bring",
    "application",
    "click",
    "get",
    "redirect",
    "notice",
    "http",
    "https",
    "safe",
    "click",
    "going",
    "click",
    "success",
    "box",
    "bow",
    "ties",
    "expecting",
    "wanted",
    "congratulate",
    "deploying",
    "first",
    "application",
    "box",
    "bow",
    "ties",
    "gke",
    "cluster",
    "recap",
    "cloned",
    "repo",
    "cloud",
    "shell",
    "environment",
    "built",
    "container",
    "image",
    "using",
    "cloud",
    "build",
    "pushed",
    "image",
    "container",
    "registry",
    "created",
    "deployment",
    "using",
    "image",
    "verified",
    "deployment",
    "using",
    "cube",
    "ctl",
    "command",
    "line",
    "tool",
    "launched",
    "service",
    "type",
    "low",
    "balancer",
    "expose",
    "application",
    "verified",
    "application",
    "working",
    "fantastic",
    "job",
    "part",
    "pretty",
    "much",
    "wanted",
    "cover",
    "part",
    "demo",
    "mark",
    "complete",
    "whenever",
    "ready",
    "join",
    "console",
    "next",
    "part",
    "demo",
    "manage",
    "workload",
    "gke",
    "cluster",
    "please",
    "aware",
    "charges",
    "incurred",
    "currently",
    "deployed",
    "cluster",
    "plan",
    "next",
    "demo",
    "later",
    "date",
    "mark",
    "complete",
    "see",
    "next",
    "welcome",
    "back",
    "last",
    "couple",
    "demo",
    "lessons",
    "built",
    "custom",
    "gke",
    "cluster",
    "deployed",
    "box",
    "bowties",
    "application",
    "lesson",
    "interacting",
    "workload",
    "gke",
    "scaling",
    "application",
    "editing",
    "application",
    "rebuilding",
    "docker",
    "image",
    "rolling",
    "update",
    "current",
    "workload",
    "cluster",
    "lot",
    "said",
    "let",
    "dive",
    "continuing",
    "left",
    "currently",
    "box",
    "bow",
    "ties",
    "workload",
    "deployed",
    "gke",
    "cluster",
    "first",
    "thing",
    "want",
    "scale",
    "deployment",
    "looking",
    "scale",
    "cluster",
    "one",
    "pod",
    "back",
    "three",
    "simulate",
    "scaling",
    "workload",
    "whether",
    "ten",
    "pods",
    "one",
    "action",
    "still",
    "easily",
    "console",
    "drilling",
    "box",
    "bowties",
    "workload",
    "going",
    "top",
    "menu",
    "clicking",
    "actions",
    "clicking",
    "scale",
    "indicate",
    "many",
    "replicas",
    "like",
    "scale",
    "accordingly",
    "wanted",
    "using",
    "command",
    "line",
    "going",
    "cancel",
    "going",
    "open",
    "cloud",
    "shell",
    "instead",
    "okay",
    "cloud",
    "shell",
    "open",
    "want",
    "run",
    "command",
    "cube",
    "ctl",
    "get",
    "pods",
    "show",
    "currently",
    "running",
    "available",
    "pods",
    "box",
    "bowties",
    "workload",
    "may",
    "get",
    "asking",
    "authorize",
    "api",
    "call",
    "using",
    "credentials",
    "definitely",
    "want",
    "authorize",
    "get",
    "list",
    "pods",
    "running",
    "box",
    "bow",
    "ties",
    "workload",
    "since",
    "want",
    "scale",
    "replicas",
    "one",
    "run",
    "command",
    "cube",
    "ctl",
    "scale",
    "deployment",
    "workload",
    "box",
    "bowties",
    "dash",
    "dash",
    "replicas",
    "equal",
    "one",
    "hit",
    "enter",
    "scaled",
    "order",
    "verify",
    "going",
    "run",
    "cube",
    "ctl",
    "get",
    "pods",
    "notice",
    "one",
    "pod",
    "running",
    "box",
    "bow",
    "ties",
    "workload",
    "order",
    "scale",
    "deployment",
    "back",
    "three",
    "replicas",
    "simply",
    "run",
    "command",
    "change",
    "replicas",
    "1",
    "hit",
    "enter",
    "scaled",
    "going",
    "run",
    "cube",
    "ctl",
    "get",
    "pods",
    "notice",
    "back",
    "3",
    "replicas",
    "see",
    "increasing",
    "decreasing",
    "number",
    "replicas",
    "order",
    "scale",
    "application",
    "pretty",
    "simple",
    "okay",
    "learned",
    "scale",
    "application",
    "gon",
    "na",
    "learn",
    "perform",
    "rolling",
    "update",
    "order",
    "need",
    "make",
    "changes",
    "application",
    "going",
    "edit",
    "application",
    "rebuild",
    "docker",
    "image",
    "apply",
    "rolling",
    "update",
    "order",
    "stay",
    "cloud",
    "shell",
    "going",
    "edit",
    "file",
    "cloud",
    "shell",
    "editor",
    "going",
    "first",
    "clear",
    "screen",
    "going",
    "change",
    "directory",
    "home",
    "directory",
    "want",
    "change",
    "directories",
    "container",
    "folder",
    "files",
    "need",
    "edit",
    "going",
    "run",
    "ls",
    "files",
    "need",
    "going",
    "edit",
    "file",
    "easiest",
    "way",
    "simply",
    "type",
    "edit",
    "hit",
    "enter",
    "open",
    "editor",
    "edit",
    "file",
    "remember",
    "launched",
    "application",
    "looked",
    "exactly",
    "like",
    "instead",
    "expecting",
    "going",
    "actually",
    "change",
    "text",
    "something",
    "little",
    "different",
    "going",
    "go",
    "back",
    "editor",
    "tab",
    "says",
    "expecting",
    "going",
    "actually",
    "change",
    "well",
    "could",
    "always",
    "use",
    "something",
    "eat",
    "going",
    "go",
    "back",
    "menu",
    "click",
    "file",
    "click",
    "save",
    "order",
    "deploy",
    "need",
    "rebuild",
    "container",
    "going",
    "go",
    "back",
    "terminal",
    "going",
    "clear",
    "screen",
    "going",
    "run",
    "command",
    "last",
    "time",
    "gcloud",
    "build",
    "submit",
    "dash",
    "dash",
    "tag",
    "gcr",
    "dot",
    "io",
    "variable",
    "google",
    "cloud",
    "project",
    "followed",
    "image",
    "box",
    "bowties",
    "colon",
    "different",
    "version",
    "image",
    "also",
    "forget",
    "trailing",
    "dot",
    "end",
    "hit",
    "enter",
    "process",
    "cloud",
    "build",
    "compresses",
    "files",
    "moves",
    "cloud",
    "storage",
    "bucket",
    "takes",
    "files",
    "bucket",
    "uses",
    "docker",
    "file",
    "execute",
    "docker",
    "build",
    "process",
    "take",
    "couple",
    "minutes",
    "going",
    "pause",
    "video",
    "back",
    "say",
    "cat",
    "hat",
    "okay",
    "new",
    "image",
    "created",
    "want",
    "head",
    "cloud",
    "build",
    "make",
    "sure",
    "errors",
    "going",
    "close",
    "cloud",
    "shell",
    "need",
    "right",
    "going",
    "head",
    "back",
    "navigation",
    "menu",
    "scroll",
    "cloud",
    "build",
    "build",
    "history",
    "see",
    "second",
    "build",
    "drill",
    "see",
    "build",
    "successful",
    "heading",
    "build",
    "artifacts",
    "see",
    "new",
    "image",
    "version",
    "going",
    "head",
    "registry",
    "verify",
    "image",
    "seems",
    "like",
    "everything",
    "looks",
    "okay",
    "gon",
    "na",
    "head",
    "back",
    "gke",
    "cluster",
    "gon",
    "na",
    "go",
    "navigation",
    "menu",
    "kubernetes",
    "engine",
    "gon",
    "na",
    "click",
    "workloads",
    "gon",
    "na",
    "select",
    "box",
    "bowties",
    "top",
    "menu",
    "click",
    "actions",
    "select",
    "rolling",
    "update",
    "prompted",
    "enter",
    "minimum",
    "seconds",
    "ready",
    "maximum",
    "search",
    "percentage",
    "well",
    "maximum",
    "unavailable",
    "percentage",
    "container",
    "images",
    "prompted",
    "enter",
    "hash",
    "docker",
    "image",
    "docker",
    "image",
    "id",
    "digest",
    "contains",
    "hash",
    "image",
    "configuration",
    "go",
    "back",
    "open",
    "tab",
    "container",
    "registry",
    "see",
    "digest",
    "details",
    "give",
    "little",
    "bit",
    "context",
    "along",
    "sha",
    "256",
    "hash",
    "image",
    "need",
    "deploy",
    "copy",
    "digest",
    "simply",
    "clicking",
    "copy",
    "button",
    "head",
    "back",
    "gke",
    "console",
    "head",
    "container",
    "images",
    "highlight",
    "hash",
    "paste",
    "new",
    "hash",
    "copy",
    "make",
    "sure",
    "still",
    "format",
    "gcr",
    "dot",
    "io",
    "forward",
    "slash",
    "project",
    "name",
    "forward",
    "slash",
    "box",
    "bow",
    "ties",
    "symbol",
    "followed",
    "hash",
    "done",
    "click",
    "update",
    "button",
    "schedule",
    "update",
    "application",
    "see",
    "top",
    "says",
    "pods",
    "pending",
    "well",
    "go",
    "active",
    "revisions",
    "see",
    "summary",
    "status",
    "pods",
    "pending",
    "note",
    "rolling",
    "updates",
    "allow",
    "deployments",
    "update",
    "take",
    "place",
    "zero",
    "downtime",
    "incrementally",
    "updating",
    "pods",
    "instances",
    "new",
    "ones",
    "pods",
    "scheduled",
    "nodes",
    "available",
    "resources",
    "nodes",
    "enough",
    "resources",
    "pods",
    "stay",
    "pending",
    "state",
    "think",
    "going",
    "problems",
    "nodes",
    "application",
    "light",
    "resources",
    "open",
    "cloud",
    "shell",
    "run",
    "cube",
    "ctl",
    "get",
    "pods",
    "command",
    "see",
    "new",
    "pods",
    "started",
    "tell",
    "age",
    "pod",
    "well",
    "ran",
    "command",
    "keep",
    "ctl",
    "describe",
    "pod",
    "along",
    "pod",
    "name",
    "could",
    "also",
    "see",
    "event",
    "logs",
    "pod",
    "created",
    "close",
    "cloud",
    "shell",
    "see",
    "top",
    "deployment",
    "details",
    "shows",
    "replicas",
    "one",
    "updated",
    "four",
    "ready",
    "three",
    "available",
    "one",
    "unavailable",
    "click",
    "refresh",
    "see",
    "replicas",
    "updated",
    "available",
    "order",
    "check",
    "new",
    "update",
    "simply",
    "go",
    "exposing",
    "services",
    "click",
    "endpoints",
    "link",
    "get",
    "redirect",
    "notice",
    "simply",
    "click",
    "link",
    "old",
    "site",
    "may",
    "cached",
    "browser",
    "may",
    "refresh",
    "web",
    "page",
    "success",
    "completed",
    "rolling",
    "update",
    "gke",
    "wanted",
    "congratulate",
    "making",
    "end",
    "demo",
    "hope",
    "extremely",
    "useful",
    "excelling",
    "knowledge",
    "gke",
    "recap",
    "scaled",
    "application",
    "accommodate",
    "less",
    "replicas",
    "edited",
    "application",
    "cloud",
    "shell",
    "editor",
    "rebuilt",
    "container",
    "image",
    "using",
    "cloud",
    "build",
    "applied",
    "new",
    "digest",
    "rolling",
    "update",
    "applied",
    "rolling",
    "update",
    "deployment",
    "verifying",
    "end",
    "fantastic",
    "job",
    "part",
    "pretty",
    "complex",
    "long",
    "demo",
    "expect",
    "things",
    "like",
    "experienced",
    "demo",
    "pop",
    "role",
    "cloud",
    "engineer",
    "dealing",
    "gke",
    "pretty",
    "much",
    "wanted",
    "cover",
    "demo",
    "working",
    "gke",
    "go",
    "wanted",
    "take",
    "moments",
    "delete",
    "resources",
    "created",
    "one",
    "one",
    "going",
    "go",
    "top",
    "going",
    "close",
    "tabs",
    "going",
    "head",
    "clusters",
    "want",
    "delete",
    "cluster",
    "yet",
    "first",
    "thing",
    "want",
    "delete",
    "container",
    "images",
    "going",
    "head",
    "top",
    "open",
    "cloud",
    "shell",
    "going",
    "use",
    "command",
    "gcloud",
    "container",
    "images",
    "delete",
    "gcr",
    "dot",
    "io",
    "forward",
    "slash",
    "google",
    "cloud",
    "project",
    "variable",
    "forward",
    "slash",
    "along",
    "first",
    "image",
    "box",
    "bow",
    "ties",
    "colon",
    "hit",
    "enter",
    "going",
    "prompt",
    "want",
    "continue",
    "want",
    "hit",
    "yes",
    "deleted",
    "image",
    "well",
    "want",
    "delete",
    "latest",
    "image",
    "going",
    "change",
    "zero",
    "one",
    "hit",
    "enter",
    "going",
    "ask",
    "want",
    "continue",
    "yes",
    "container",
    "images",
    "deleted",
    "along",
    "images",
    "want",
    "delete",
    "artifacts",
    "well",
    "stored",
    "cloud",
    "storage",
    "going",
    "close",
    "cloud",
    "shell",
    "going",
    "head",
    "navigation",
    "menu",
    "going",
    "head",
    "storage",
    "want",
    "select",
    "bucket",
    "project",
    "name",
    "underscore",
    "cloud",
    "build",
    "select",
    "source",
    "folder",
    "click",
    "delete",
    "going",
    "get",
    "prompt",
    "asking",
    "delete",
    "selected",
    "folder",
    "order",
    "need",
    "type",
    "name",
    "folder",
    "going",
    "type",
    "click",
    "confirm",
    "folder",
    "deleted",
    "along",
    "artifacts",
    "taken",
    "care",
    "images",
    "along",
    "artifacts",
    "need",
    "clean",
    "gke",
    "cluster",
    "going",
    "head",
    "back",
    "navigation",
    "menu",
    "going",
    "head",
    "kubernetes",
    "engine",
    "first",
    "thing",
    "want",
    "delete",
    "low",
    "balancer",
    "going",
    "head",
    "services",
    "ingress",
    "select",
    "box",
    "bow",
    "tie",
    "service",
    "go",
    "top",
    "click",
    "delete",
    "going",
    "get",
    "confirmation",
    "want",
    "click",
    "delete",
    "going",
    "take",
    "couple",
    "minutes",
    "quick",
    "refresh",
    "service",
    "finally",
    "deleted",
    "want",
    "delete",
    "workload",
    "going",
    "go",
    "left",
    "hand",
    "menu",
    "click",
    "workloads",
    "select",
    "workload",
    "box",
    "bowties",
    "go",
    "top",
    "click",
    "delete",
    "want",
    "delete",
    "resources",
    "including",
    "horizontal",
    "pod",
    "auto",
    "scaler",
    "simply",
    "click",
    "delete",
    "may",
    "take",
    "minutes",
    "delete",
    "gon",
    "na",
    "go",
    "top",
    "hit",
    "refresh",
    "workload",
    "deleted",
    "left",
    "delete",
    "gke",
    "cluster",
    "going",
    "go",
    "back",
    "clusters",
    "going",
    "select",
    "cluster",
    "go",
    "top",
    "click",
    "delete",
    "going",
    "get",
    "prompt",
    "asking",
    "want",
    "delete",
    "storage",
    "pods",
    "default",
    "storage",
    "pods",
    "installed",
    "cluster",
    "well",
    "delete",
    "cluster",
    "workload",
    "still",
    "play",
    "habit",
    "thorough",
    "wanted",
    "delete",
    "workload",
    "deleting",
    "cluster",
    "want",
    "go",
    "ahead",
    "click",
    "delete",
    "pretty",
    "much",
    "demo",
    "section",
    "google",
    "kubernetes",
    "engine",
    "congrats",
    "great",
    "job",
    "mark",
    "complete",
    "see",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "covering",
    "features",
    "cloud",
    "vpn",
    "essential",
    "service",
    "engineer",
    "know",
    "looking",
    "connect",
    "another",
    "network",
    "google",
    "cloud",
    "whether",
    "network",
    "another",
    "cloud",
    "provider",
    "even",
    "connecting",
    "vpcs",
    "service",
    "must",
    "know",
    "engineer",
    "exam",
    "said",
    "let",
    "dive",
    "cloudvpn",
    "securely",
    "connects",
    "peer",
    "network",
    "vpc",
    "network",
    "ipsec",
    "vpn",
    "connection",
    "talk",
    "peer",
    "network",
    "referring",
    "vpn",
    "device",
    "vpn",
    "service",
    "vpn",
    "gateway",
    "hosted",
    "another",
    "cloud",
    "provider",
    "aws",
    "azure",
    "another",
    "google",
    "cloud",
    "vpn",
    "gateway",
    "ipsec",
    "encrypted",
    "tunnel",
    "peer",
    "network",
    "vpc",
    "network",
    "traverses",
    "public",
    "internet",
    "know",
    "ipsec",
    "short",
    "internet",
    "security",
    "protocol",
    "set",
    "protocols",
    "using",
    "algorithms",
    "allowing",
    "transport",
    "secure",
    "data",
    "ip",
    "network",
    "ipsec",
    "operates",
    "network",
    "layer",
    "layer",
    "3",
    "osi",
    "model",
    "allows",
    "independent",
    "applications",
    "although",
    "come",
    "additional",
    "overhead",
    "please",
    "aware",
    "creating",
    "cloud",
    "vpn",
    "traffic",
    "traveling",
    "two",
    "networks",
    "encrypted",
    "one",
    "vpn",
    "gateway",
    "decrypted",
    "vpn",
    "gateway",
    "moving",
    "details",
    "cloud",
    "vpn",
    "regional",
    "service",
    "please",
    "take",
    "consideration",
    "connecting",
    "location",
    "google",
    "cloud",
    "least",
    "amount",
    "latency",
    "also",
    "means",
    "region",
    "go",
    "would",
    "lose",
    "connection",
    "region",
    "back",
    "running",
    "cloud",
    "vpn",
    "also",
    "vpn",
    "therefore",
    "support",
    "means",
    "laptop",
    "computer",
    "home",
    "use",
    "option",
    "vpn",
    "client",
    "connect",
    "google",
    "cloud",
    "cloudvpn",
    "also",
    "used",
    "conjunction",
    "private",
    "google",
    "access",
    "hosts",
    "using",
    "private",
    "google",
    "access",
    "within",
    "gcp",
    "simply",
    "connect",
    "data",
    "center",
    "vpn",
    "access",
    "already",
    "gcp",
    "looking",
    "extend",
    "private",
    "google",
    "access",
    "data",
    "center",
    "cloud",
    "vpn",
    "would",
    "perfect",
    "choice",
    "comes",
    "speeds",
    "cloud",
    "vpn",
    "tunnel",
    "support",
    "three",
    "gigabits",
    "per",
    "second",
    "total",
    "ingress",
    "egress",
    "well",
    "routing",
    "options",
    "available",
    "static",
    "dynamic",
    "available",
    "dynamic",
    "aha",
    "vpn",
    "lastly",
    "cloudvpn",
    "supports",
    "ik",
    "version",
    "1",
    "ike",
    "version",
    "2",
    "using",
    "shared",
    "secret",
    "unaware",
    "ike",
    "stands",
    "internet",
    "key",
    "exchange",
    "helps",
    "establish",
    "secure",
    "authenticated",
    "communication",
    "channel",
    "using",
    "key",
    "exchange",
    "algorithm",
    "generate",
    "shared",
    "secret",
    "key",
    "encrypt",
    "communications",
    "know",
    "choose",
    "cloudvpn",
    "connection",
    "private",
    "secure",
    "two",
    "types",
    "vpn",
    "options",
    "available",
    "google",
    "cloud",
    "one",
    "classic",
    "vpn",
    "h",
    "vpn",
    "going",
    "take",
    "moment",
    "go",
    "differences",
    "classic",
    "vpn",
    "provides",
    "service",
    "level",
    "agreement",
    "percent",
    "also",
    "known",
    "sla",
    "three",
    "nines",
    "h",
    "vpn",
    "provides",
    "four",
    "nines",
    "sla",
    "configured",
    "two",
    "interfaces",
    "two",
    "external",
    "ips",
    "comes",
    "routing",
    "classic",
    "vpn",
    "supports",
    "static",
    "dynamic",
    "routing",
    "whereas",
    "havpn",
    "supports",
    "dynamic",
    "routing",
    "must",
    "done",
    "bgp",
    "using",
    "cloud",
    "router",
    "classic",
    "vpn",
    "gateways",
    "single",
    "interface",
    "single",
    "external",
    "ip",
    "address",
    "support",
    "tunnels",
    "using",
    "static",
    "routing",
    "well",
    "dynamic",
    "routing",
    "static",
    "routing",
    "either",
    "route",
    "based",
    "policy",
    "based",
    "whereas",
    "havpn",
    "configured",
    "two",
    "interfaces",
    "two",
    "external",
    "ips",
    "true",
    "ha",
    "capabilities",
    "mentioned",
    "earlier",
    "comes",
    "routing",
    "havpn",
    "dynamic",
    "routing",
    "available",
    "option",
    "one",
    "thing",
    "classic",
    "vpn",
    "google",
    "cloud",
    "deprecating",
    "certain",
    "functionality",
    "october",
    "31st",
    "2021",
    "recommending",
    "customers",
    "move",
    "h",
    "vpn",
    "know",
    "reflected",
    "exam",
    "sure",
    "know",
    "creating",
    "cloud",
    "vpn",
    "connection",
    "current",
    "environment",
    "h",
    "vpn",
    "recommended",
    "option",
    "wanted",
    "dive",
    "architecture",
    "cloud",
    "vpn",
    "set",
    "two",
    "options",
    "starting",
    "classic",
    "vpn",
    "said",
    "classic",
    "vpn",
    "cloud",
    "vpn",
    "solution",
    "lets",
    "connect",
    "peer",
    "network",
    "vpc",
    "network",
    "ipsec",
    "vpn",
    "connection",
    "single",
    "region",
    "unlike",
    "h",
    "vpn",
    "classic",
    "vpn",
    "offers",
    "redundancy",
    "box",
    "would",
    "create",
    "another",
    "vpn",
    "connection",
    "connection",
    "go",
    "would",
    "manually",
    "switch",
    "connection",
    "one",
    "see",
    "create",
    "vpn",
    "gateway",
    "google",
    "cloud",
    "automatically",
    "chooses",
    "one",
    "external",
    "ip",
    "address",
    "interface",
    "diagram",
    "shown",
    "shows",
    "classic",
    "vpn",
    "network",
    "connected",
    "bowtie",
    "dash",
    "network",
    "vpc",
    "bowtie",
    "project",
    "network",
    "configured",
    "using",
    "static",
    "route",
    "connect",
    "moving",
    "highly",
    "available",
    "cloud",
    "vpn",
    "solution",
    "lets",
    "connect",
    "peer",
    "network",
    "vpc",
    "network",
    "using",
    "ipsec",
    "vpn",
    "connection",
    "single",
    "region",
    "exactly",
    "like",
    "classic",
    "vpn",
    "havpn",
    "differs",
    "provides",
    "four",
    "nines",
    "sla",
    "see",
    "supports",
    "double",
    "connections",
    "create",
    "h",
    "vpn",
    "gateway",
    "google",
    "cloud",
    "automatically",
    "chooses",
    "two",
    "external",
    "ip",
    "addresses",
    "one",
    "fixed",
    "number",
    "two",
    "interfaces",
    "ip",
    "address",
    "automatically",
    "chosen",
    "unique",
    "address",
    "pool",
    "support",
    "high",
    "availability",
    "ha",
    "vpn",
    "gateway",
    "interfaces",
    "supports",
    "multiple",
    "tunnels",
    "allows",
    "create",
    "multiple",
    "h",
    "vpn",
    "gateways",
    "configure",
    "h",
    "vpn",
    "gateway",
    "one",
    "active",
    "interface",
    "one",
    "public",
    "ip",
    "address",
    "however",
    "configuration",
    "provide",
    "four",
    "nines",
    "sla",
    "h",
    "vpn",
    "gateway",
    "configure",
    "external",
    "peer",
    "vpn",
    "gateway",
    "resource",
    "represents",
    "physical",
    "peer",
    "gateway",
    "google",
    "cloud",
    "also",
    "create",
    "resource",
    "standalone",
    "resource",
    "use",
    "later",
    "diagram",
    "two",
    "interfaces",
    "h",
    "vpn",
    "gateway",
    "bowtie",
    "network",
    "vpc",
    "living",
    "bowtie",
    "project",
    "connected",
    "two",
    "peer",
    "vpn",
    "gateways",
    "network",
    "connection",
    "using",
    "dynamic",
    "routing",
    "bgp",
    "connecting",
    "cloud",
    "router",
    "google",
    "cloud",
    "comes",
    "times",
    "using",
    "cloudvpn",
    "makes",
    "sense",
    "one",
    "first",
    "things",
    "think",
    "whether",
    "need",
    "public",
    "internet",
    "access",
    "sharing",
    "files",
    "company",
    "needs",
    "specific",
    "sas",
    "product",
    "available",
    "internet",
    "vpn",
    "would",
    "option",
    "well",
    "looking",
    "use",
    "interconnect",
    "peering",
    "location",
    "available",
    "able",
    "connect",
    "data",
    "center",
    "colocation",
    "facility",
    "choice",
    "vpn",
    "would",
    "option",
    "well",
    "budget",
    "constraints",
    "come",
    "play",
    "deciding",
    "connecting",
    "peer",
    "network",
    "vpn",
    "would",
    "always",
    "way",
    "go",
    "cloud",
    "interconnect",
    "going",
    "expensive",
    "option",
    "lastly",
    "need",
    "high",
    "speed",
    "network",
    "low",
    "latency",
    "really",
    "concern",
    "regular",
    "outgoing",
    "traffic",
    "coming",
    "google",
    "cloud",
    "vpn",
    "would",
    "suffice",
    "everyday",
    "needs",
    "options",
    "shown",
    "also",
    "deciding",
    "factors",
    "look",
    "comes",
    "questions",
    "exam",
    "refer",
    "cloudvpn",
    "connecting",
    "networks",
    "pretty",
    "much",
    "short",
    "lesson",
    "cloudvpn",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "go",
    "another",
    "connection",
    "type",
    "allows",
    "connectivity",
    "google",
    "cloud",
    "vpcs",
    "cloud",
    "interconnect",
    "vpn",
    "connection",
    "type",
    "allows",
    "connectivity",
    "environment",
    "google",
    "cloud",
    "vpc",
    "cloud",
    "interconnect",
    "common",
    "connection",
    "larger",
    "organizations",
    "demand",
    "fast",
    "low",
    "latency",
    "connections",
    "lesson",
    "cover",
    "features",
    "cloud",
    "interconnect",
    "different",
    "types",
    "available",
    "said",
    "let",
    "dive",
    "getting",
    "right",
    "cloud",
    "interconnect",
    "low",
    "latency",
    "highly",
    "available",
    "connection",
    "data",
    "center",
    "google",
    "cloud",
    "vpc",
    "networks",
    "also",
    "cloud",
    "interconnect",
    "connections",
    "provide",
    "internal",
    "ip",
    "address",
    "connection",
    "means",
    "internal",
    "ip",
    "addresses",
    "directly",
    "accessible",
    "networks",
    "premises",
    "hosts",
    "use",
    "internal",
    "ip",
    "addresses",
    "take",
    "advantage",
    "private",
    "google",
    "access",
    "rather",
    "external",
    "ip",
    "addresses",
    "reach",
    "google",
    "apis",
    "services",
    "traffic",
    "network",
    "vpc",
    "network",
    "traverse",
    "public",
    "internet",
    "traffic",
    "traverses",
    "dedicated",
    "connection",
    "service",
    "provider",
    "dedicated",
    "connection",
    "vpc",
    "network",
    "internal",
    "ip",
    "addresses",
    "directly",
    "accessible",
    "network",
    "unlike",
    "vpn",
    "connection",
    "encrypted",
    "need",
    "encrypt",
    "traffic",
    "ip",
    "layer",
    "create",
    "one",
    "vpn",
    "gateways",
    "vpc",
    "network",
    "assign",
    "private",
    "ip",
    "address",
    "gateway",
    "although",
    "may",
    "fast",
    "connection",
    "also",
    "comes",
    "high",
    "price",
    "tag",
    "unlike",
    "vpn",
    "connection",
    "type",
    "encrypted",
    "need",
    "encrypt",
    "traffic",
    "ip",
    "layer",
    "create",
    "one",
    "vpn",
    "gateways",
    "vpc",
    "network",
    "assign",
    "private",
    "ip",
    "address",
    "gateway",
    "although",
    "may",
    "fast",
    "connection",
    "also",
    "comes",
    "high",
    "price",
    "tag",
    "highest",
    "price",
    "connection",
    "type",
    "cloud",
    "interconnect",
    "offers",
    "two",
    "options",
    "extending",
    "network",
    "dedicated",
    "interconnect",
    "provides",
    "direct",
    "physical",
    "connection",
    "network",
    "google",
    "network",
    "well",
    "partner",
    "interconnect",
    "provides",
    "connectivity",
    "vpc",
    "networks",
    "supported",
    "service",
    "provider",
    "wanted",
    "take",
    "moment",
    "highlight",
    "different",
    "options",
    "cloud",
    "interconnect",
    "starting",
    "dedicated",
    "interconnect",
    "dedicated",
    "interconnect",
    "provides",
    "direct",
    "physical",
    "connection",
    "network",
    "google",
    "network",
    "dedicated",
    "interconnect",
    "enables",
    "transfer",
    "large",
    "amounts",
    "data",
    "network",
    "google",
    "cloud",
    "cost",
    "effective",
    "purchasing",
    "additional",
    "bandwidth",
    "public",
    "internet",
    "dedicated",
    "interconnect",
    "provision",
    "dedicated",
    "interconnect",
    "connection",
    "google",
    "network",
    "router",
    "common",
    "location",
    "following",
    "example",
    "shown",
    "shows",
    "single",
    "dedicated",
    "interconnect",
    "connection",
    "vpc",
    "network",
    "network",
    "basic",
    "setup",
    "dedicated",
    "interconnect",
    "connection",
    "provisioned",
    "google",
    "network",
    "router",
    "common",
    "facility",
    "create",
    "vlan",
    "attachment",
    "associate",
    "cloud",
    "router",
    "cloud",
    "router",
    "creates",
    "bgp",
    "session",
    "vlan",
    "attachment",
    "corresponding",
    "peer",
    "router",
    "routes",
    "added",
    "custom",
    "dynamic",
    "routes",
    "vpc",
    "network",
    "dedicated",
    "interconnect",
    "connection",
    "capacity",
    "delivered",
    "one",
    "10",
    "gigabits",
    "per",
    "second",
    "100",
    "gigabits",
    "per",
    "second",
    "ethernet",
    "connections",
    "maximum",
    "capacity",
    "supported",
    "per",
    "interconnect",
    "connection",
    "10",
    "gigabit",
    "per",
    "second",
    "connections",
    "get",
    "eight",
    "connections",
    "totaling",
    "speed",
    "80",
    "gigabits",
    "per",
    "second",
    "100",
    "gigabit",
    "per",
    "second",
    "connection",
    "connect",
    "two",
    "together",
    "total",
    "speed",
    "200",
    "gigabits",
    "per",
    "second",
    "dedicated",
    "interconnect",
    "network",
    "must",
    "physically",
    "meet",
    "google",
    "network",
    "supported",
    "facility",
    "also",
    "known",
    "interconnect",
    "connection",
    "location",
    "facility",
    "vendor",
    "facility",
    "provider",
    "provisions",
    "circuit",
    "network",
    "google",
    "edge",
    "point",
    "presence",
    "also",
    "known",
    "pop",
    "setup",
    "shown",
    "suitable",
    "applications",
    "tolerate",
    "downtime",
    "sensitive",
    "production",
    "applications",
    "least",
    "two",
    "interconnect",
    "connections",
    "two",
    "different",
    "edge",
    "availability",
    "domains",
    "recommended",
    "partner",
    "interconnect",
    "provides",
    "connectivity",
    "network",
    "vpc",
    "network",
    "supported",
    "service",
    "provider",
    "direct",
    "connection",
    "network",
    "google",
    "service",
    "provider",
    "provides",
    "conduit",
    "network",
    "google",
    "pop",
    "partner",
    "interconnect",
    "connection",
    "useful",
    "dedicated",
    "interconnect",
    "facility",
    "physically",
    "reach",
    "workloads",
    "warrant",
    "entire",
    "10",
    "gigabit",
    "per",
    "second",
    "connection",
    "partner",
    "interconnect",
    "50",
    "megabits",
    "per",
    "second",
    "50",
    "gigabits",
    "per",
    "second",
    "vlan",
    "attachments",
    "available",
    "maximum",
    "supported",
    "attachment",
    "size",
    "50",
    "gigabits",
    "per",
    "second",
    "service",
    "providers",
    "existing",
    "physical",
    "connections",
    "google",
    "network",
    "make",
    "available",
    "customer",
    "use",
    "example",
    "shown",
    "would",
    "provision",
    "partner",
    "interconnect",
    "connection",
    "service",
    "provider",
    "connecting",
    "network",
    "service",
    "provider",
    "connectivity",
    "established",
    "service",
    "provider",
    "partner",
    "interconnect",
    "connection",
    "requested",
    "service",
    "provider",
    "service",
    "provider",
    "configures",
    "vln",
    "attachment",
    "use",
    "connection",
    "provisioned",
    "start",
    "passing",
    "traffic",
    "networks",
    "using",
    "service",
    "providers",
    "network",
    "many",
    "detailed",
    "steps",
    "involved",
    "get",
    "connection",
    "established",
    "along",
    "traffic",
    "flowing",
    "wanted",
    "give",
    "high",
    "level",
    "summary",
    "connection",
    "would",
    "established",
    "service",
    "provider",
    "well",
    "build",
    "highly",
    "available",
    "topology",
    "use",
    "multiple",
    "service",
    "providers",
    "well",
    "must",
    "build",
    "redundant",
    "connections",
    "service",
    "provider",
    "metropolitan",
    "couple",
    "connection",
    "types",
    "run",
    "service",
    "providers",
    "exam",
    "wanted",
    "aware",
    "ever",
    "situation",
    "arises",
    "role",
    "cloud",
    "engineer",
    "first",
    "one",
    "direct",
    "peering",
    "direct",
    "peering",
    "enables",
    "establish",
    "direct",
    "peering",
    "connection",
    "business",
    "network",
    "google",
    "edge",
    "network",
    "exchange",
    "high",
    "throughput",
    "cloud",
    "traffic",
    "capability",
    "available",
    "100",
    "locations",
    "33",
    "countries",
    "around",
    "world",
    "established",
    "direct",
    "peering",
    "provides",
    "direct",
    "path",
    "network",
    "google",
    "services",
    "including",
    "google",
    "cloud",
    "products",
    "exposed",
    "one",
    "public",
    "ip",
    "addresses",
    "traffic",
    "google",
    "network",
    "network",
    "also",
    "takes",
    "direct",
    "path",
    "including",
    "traffic",
    "vpc",
    "networks",
    "projects",
    "also",
    "save",
    "money",
    "receive",
    "direct",
    "egress",
    "pricing",
    "projects",
    "established",
    "direct",
    "peering",
    "google",
    "direct",
    "peering",
    "exists",
    "outside",
    "google",
    "cloud",
    "unless",
    "need",
    "access",
    "google",
    "workspace",
    "applications",
    "recommended",
    "methods",
    "access",
    "google",
    "cloud",
    "dedicated",
    "interconnect",
    "partner",
    "interconnect",
    "establishing",
    "direct",
    "peering",
    "connection",
    "google",
    "free",
    "costs",
    "per",
    "port",
    "per",
    "hour",
    "charges",
    "meet",
    "google",
    "technical",
    "peering",
    "requirements",
    "considered",
    "direct",
    "peering",
    "service",
    "moving",
    "last",
    "connection",
    "type",
    "cdn",
    "interconnect",
    "know",
    "gotten",
    "cdns",
    "course",
    "exam",
    "require",
    "know",
    "cdn",
    "standing",
    "content",
    "delivery",
    "network",
    "caches",
    "content",
    "network",
    "edge",
    "deliver",
    "files",
    "faster",
    "requesting",
    "one",
    "main",
    "ways",
    "improve",
    "website",
    "performance",
    "moving",
    "cdn",
    "interconnect",
    "connection",
    "type",
    "enables",
    "select",
    "cdn",
    "providers",
    "like",
    "akamai",
    "cloudflare",
    "along",
    "others",
    "establish",
    "optimize",
    "cdn",
    "population",
    "costs",
    "using",
    "direct",
    "peering",
    "links",
    "google",
    "edge",
    "network",
    "enables",
    "direct",
    "traffic",
    "vpc",
    "networks",
    "provider",
    "network",
    "egress",
    "traffic",
    "google",
    "cloud",
    "one",
    "links",
    "benefits",
    "direct",
    "connectivity",
    "cdn",
    "provider",
    "billed",
    "automatically",
    "reduced",
    "pricing",
    "typical",
    "use",
    "cases",
    "cdn",
    "interconnect",
    "populating",
    "cdn",
    "large",
    "data",
    "files",
    "google",
    "cloud",
    "frequent",
    "content",
    "updates",
    "stored",
    "different",
    "cdn",
    "locations",
    "getting",
    "use",
    "cases",
    "use",
    "cloud",
    "interconnect",
    "big",
    "purpose",
    "would",
    "prevent",
    "traffic",
    "traversing",
    "public",
    "internet",
    "dedicated",
    "physical",
    "connection",
    "right",
    "google",
    "data",
    "centers",
    "need",
    "extension",
    "vpc",
    "network",
    "network",
    "interconnect",
    "definitely",
    "way",
    "go",
    "speed",
    "low",
    "latencies",
    "extreme",
    "importance",
    "interconnect",
    "always",
    "best",
    "option",
    "support",
    "200",
    "gigabits",
    "per",
    "second",
    "well",
    "heavy",
    "outgoing",
    "traffic",
    "egress",
    "traffic",
    "leaving",
    "google",
    "cloud",
    "cloud",
    "interconnect",
    "fits",
    "bill",
    "perfectly",
    "lastly",
    "comes",
    "private",
    "google",
    "access",
    "travels",
    "backbone",
    "google",
    "network",
    "connected",
    "interconnect",
    "extension",
    "backbone",
    "therefore",
    "hosts",
    "able",
    "take",
    "advantage",
    "private",
    "google",
    "access",
    "hope",
    "given",
    "clarity",
    "differences",
    "different",
    "connection",
    "types",
    "extend",
    "google",
    "cloud",
    "network",
    "peer",
    "network",
    "pretty",
    "much",
    "cover",
    "comes",
    "cloud",
    "interconnect",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "covering",
    "overview",
    "app",
    "engine",
    "deep",
    "dive",
    "lesson",
    "app",
    "engine",
    "much",
    "cover",
    "service",
    "listing",
    "lot",
    "features",
    "app",
    "engine",
    "give",
    "good",
    "feel",
    "need",
    "know",
    "exam",
    "said",
    "let",
    "dive",
    "app",
    "engine",
    "fully",
    "managed",
    "serverless",
    "platform",
    "developing",
    "hosting",
    "web",
    "applications",
    "scale",
    "google",
    "platform",
    "service",
    "offering",
    "designed",
    "developers",
    "develop",
    "application",
    "let",
    "app",
    "engine",
    "heavy",
    "lifting",
    "taking",
    "care",
    "provisioning",
    "servers",
    "scaling",
    "instances",
    "needed",
    "based",
    "demand",
    "app",
    "engine",
    "gives",
    "flexibility",
    "launching",
    "code",
    "launch",
    "container",
    "uses",
    "runtime",
    "environments",
    "variety",
    "different",
    "programming",
    "languages",
    "like",
    "python",
    "java",
    "go",
    "ruby",
    "php",
    "net",
    "applications",
    "deployed",
    "app",
    "engine",
    "experience",
    "regular",
    "traffic",
    "fluctuations",
    "newly",
    "deployed",
    "applications",
    "simply",
    "unsure",
    "load",
    "auto",
    "scaled",
    "accordingly",
    "automatically",
    "apps",
    "scale",
    "number",
    "instances",
    "running",
    "provide",
    "consistent",
    "performance",
    "scale",
    "minimize",
    "idle",
    "instances",
    "reduces",
    "costs",
    "app",
    "engine",
    "also",
    "capabilities",
    "able",
    "deal",
    "rapid",
    "scaling",
    "sudden",
    "extreme",
    "spikes",
    "traffic",
    "multiple",
    "versions",
    "application",
    "within",
    "service",
    "allows",
    "quickly",
    "switch",
    "different",
    "versions",
    "application",
    "rollbacks",
    "testing",
    "temporary",
    "events",
    "route",
    "traffic",
    "one",
    "specific",
    "versions",
    "application",
    "migrating",
    "splitting",
    "traffic",
    "use",
    "traffic",
    "splitting",
    "specify",
    "percentage",
    "distribution",
    "traffic",
    "across",
    "two",
    "versions",
    "within",
    "service",
    "allows",
    "b",
    "testing",
    "blue",
    "green",
    "deployment",
    "versions",
    "rolling",
    "new",
    "features",
    "app",
    "engine",
    "supports",
    "connecting",
    "storage",
    "services",
    "cloud",
    "firestore",
    "cloud",
    "sql",
    "cloud",
    "storage",
    "along",
    "connecting",
    "databases",
    "even",
    "external",
    "databases",
    "hosted",
    "public",
    "clouds",
    "app",
    "engine",
    "available",
    "two",
    "separate",
    "flavors",
    "standard",
    "flexible",
    "environments",
    "environment",
    "offers",
    "set",
    "features",
    "get",
    "sec",
    "mentioned",
    "app",
    "engine",
    "available",
    "standard",
    "flexible",
    "environments",
    "depending",
    "application",
    "needs",
    "either",
    "one",
    "support",
    "need",
    "workload",
    "could",
    "even",
    "use",
    "simultaneously",
    "features",
    "shown",
    "give",
    "feel",
    "types",
    "environments",
    "going",
    "quick",
    "run",
    "summarizing",
    "features",
    "starting",
    "standard",
    "environment",
    "standard",
    "environment",
    "applications",
    "run",
    "secure",
    "sandboxed",
    "environment",
    "allowing",
    "app",
    "engine",
    "standard",
    "distribute",
    "requests",
    "across",
    "multiple",
    "servers",
    "scaling",
    "servers",
    "meet",
    "traffic",
    "demands",
    "application",
    "runs",
    "secure",
    "reliable",
    "environment",
    "independent",
    "hardware",
    "operating",
    "system",
    "physical",
    "location",
    "server",
    "source",
    "code",
    "written",
    "specific",
    "versions",
    "supported",
    "programming",
    "languages",
    "app",
    "engine",
    "standard",
    "intended",
    "run",
    "free",
    "low",
    "cost",
    "pay",
    "need",
    "need",
    "app",
    "engine",
    "standard",
    "application",
    "scale",
    "zero",
    "instances",
    "traffic",
    "app",
    "engine",
    "standard",
    "designed",
    "sudden",
    "extreme",
    "spikes",
    "traffic",
    "require",
    "immediate",
    "scaling",
    "pricing",
    "standard",
    "app",
    "engine",
    "based",
    "instance",
    "hours",
    "comes",
    "features",
    "app",
    "engine",
    "flexible",
    "application",
    "instances",
    "run",
    "within",
    "docker",
    "containers",
    "includes",
    "custom",
    "runtime",
    "source",
    "code",
    "written",
    "programming",
    "languages",
    "docker",
    "containers",
    "run",
    "compute",
    "engine",
    "vms",
    "app",
    "engine",
    "flexible",
    "run",
    "source",
    "code",
    "written",
    "version",
    "supported",
    "programming",
    "languages",
    "app",
    "engine",
    "flexible",
    "unlike",
    "standard",
    "environment",
    "unfortunately",
    "free",
    "quota",
    "app",
    "engine",
    "flexible",
    "well",
    "app",
    "engine",
    "flexible",
    "designed",
    "consistent",
    "traffic",
    "applications",
    "experience",
    "regular",
    "traffic",
    "fluctuations",
    "pricing",
    "based",
    "vm",
    "resources",
    "instance",
    "hours",
    "like",
    "app",
    "engine",
    "standard",
    "app",
    "engine",
    "flexible",
    "really",
    "shines",
    "app",
    "engine",
    "standard",
    "vms",
    "managed",
    "instances",
    "health",
    "checked",
    "healed",
    "necessary",
    "services",
    "within",
    "project",
    "vm",
    "operating",
    "system",
    "updated",
    "applied",
    "automatically",
    "well",
    "vms",
    "restarted",
    "weekly",
    "basis",
    "make",
    "sure",
    "necessary",
    "operating",
    "system",
    "security",
    "updates",
    "applied",
    "ssh",
    "along",
    "root",
    "access",
    "available",
    "vm",
    "instances",
    "running",
    "containers",
    "deploying",
    "applications",
    "app",
    "engine",
    "simple",
    "using",
    "gcloud",
    "app",
    "deploy",
    "command",
    "command",
    "automatically",
    "builds",
    "container",
    "image",
    "configuration",
    "file",
    "using",
    "cloud",
    "build",
    "service",
    "deploys",
    "image",
    "app",
    "engine",
    "app",
    "engine",
    "application",
    "made",
    "single",
    "application",
    "resource",
    "consists",
    "one",
    "services",
    "service",
    "configured",
    "use",
    "different",
    "runtimes",
    "operate",
    "different",
    "performance",
    "settings",
    "services",
    "app",
    "engine",
    "used",
    "factor",
    "large",
    "applications",
    "logical",
    "components",
    "securely",
    "share",
    "app",
    "engine",
    "features",
    "communicate",
    "one",
    "another",
    "app",
    "engine",
    "services",
    "become",
    "loosely",
    "coupled",
    "behaving",
    "like",
    "microservices",
    "within",
    "service",
    "deploy",
    "versions",
    "service",
    "version",
    "runs",
    "within",
    "one",
    "instances",
    "depending",
    "much",
    "traffic",
    "configured",
    "handle",
    "multiple",
    "versions",
    "application",
    "within",
    "service",
    "allows",
    "quickly",
    "switch",
    "different",
    "versions",
    "application",
    "rollbacks",
    "testing",
    "temporary",
    "events",
    "route",
    "traffic",
    "one",
    "specific",
    "versions",
    "application",
    "migrating",
    "traffic",
    "one",
    "specific",
    "version",
    "splitting",
    "traffic",
    "two",
    "separate",
    "versions",
    "versions",
    "within",
    "services",
    "run",
    "one",
    "instances",
    "default",
    "app",
    "engine",
    "scales",
    "application",
    "match",
    "load",
    "applications",
    "scale",
    "number",
    "instances",
    "running",
    "provide",
    "consistent",
    "performance",
    "scale",
    "minimize",
    "idle",
    "instances",
    "reduce",
    "costs",
    "comes",
    "managing",
    "instances",
    "app",
    "engine",
    "automatically",
    "create",
    "shut",
    "instances",
    "traffic",
    "fluctuates",
    "specify",
    "number",
    "instances",
    "run",
    "regardless",
    "amount",
    "traffic",
    "also",
    "configure",
    "new",
    "instances",
    "created",
    "specifying",
    "scaling",
    "type",
    "application",
    "specify",
    "scaling",
    "type",
    "application",
    "file",
    "three",
    "different",
    "types",
    "scaling",
    "choices",
    "choose",
    "first",
    "one",
    "automatic",
    "scaling",
    "scaling",
    "type",
    "creates",
    "instances",
    "based",
    "request",
    "rate",
    "response",
    "latencies",
    "application",
    "metrics",
    "specify",
    "thresholds",
    "metrics",
    "well",
    "minimum",
    "number",
    "instances",
    "keep",
    "running",
    "times",
    "use",
    "automatic",
    "scaling",
    "instance",
    "application",
    "queue",
    "incoming",
    "requests",
    "queues",
    "become",
    "long",
    "enough",
    "visible",
    "effect",
    "app",
    "latency",
    "app",
    "engine",
    "automatically",
    "creates",
    "one",
    "new",
    "instances",
    "handle",
    "load",
    "second",
    "type",
    "basic",
    "scaling",
    "creates",
    "instances",
    "application",
    "receives",
    "requests",
    "instance",
    "shut",
    "application",
    "becomes",
    "idle",
    "basic",
    "scaling",
    "fantastic",
    "intermittent",
    "workloads",
    "looking",
    "drive",
    "application",
    "user",
    "activity",
    "app",
    "engine",
    "try",
    "keep",
    "costs",
    "low",
    "even",
    "though",
    "might",
    "result",
    "higher",
    "latency",
    "volume",
    "incoming",
    "requests",
    "increase",
    "last",
    "scaling",
    "type",
    "manual",
    "scaling",
    "specify",
    "number",
    "instances",
    "continuously",
    "run",
    "regardless",
    "load",
    "instances",
    "constantly",
    "running",
    "allows",
    "complex",
    "startup",
    "tasks",
    "instances",
    "already",
    "completed",
    "receiving",
    "requests",
    "applications",
    "rely",
    "state",
    "memory",
    "time",
    "ideal",
    "instances",
    "whose",
    "configuration",
    "scripts",
    "require",
    "time",
    "fully",
    "run",
    "course",
    "gone",
    "managing",
    "instances",
    "wanted",
    "take",
    "moments",
    "go",
    "app",
    "engine",
    "manages",
    "traffic",
    "starting",
    "traffic",
    "migration",
    "traffic",
    "migration",
    "switches",
    "request",
    "routing",
    "versions",
    "within",
    "service",
    "application",
    "moving",
    "traffic",
    "one",
    "versions",
    "single",
    "new",
    "version",
    "deploying",
    "new",
    "version",
    "name",
    "existing",
    "version",
    "causes",
    "immediate",
    "traffic",
    "migration",
    "instances",
    "old",
    "version",
    "immediately",
    "shut",
    "app",
    "engine",
    "standard",
    "choose",
    "route",
    "requests",
    "target",
    "version",
    "either",
    "immediately",
    "gradually",
    "also",
    "choose",
    "enable",
    "requests",
    "want",
    "traffic",
    "gradually",
    "migrated",
    "version",
    "gradual",
    "traffic",
    "migration",
    "supported",
    "app",
    "engine",
    "flexible",
    "traffic",
    "migrated",
    "immediately",
    "one",
    "thing",
    "note",
    "immediately",
    "migrate",
    "traffic",
    "new",
    "version",
    "without",
    "running",
    "instances",
    "application",
    "spike",
    "latency",
    "loading",
    "requests",
    "instances",
    "created",
    "another",
    "way",
    "manage",
    "traffic",
    "app",
    "engine",
    "traffic",
    "splitting",
    "use",
    "traffic",
    "splitting",
    "specify",
    "percentage",
    "distribution",
    "traffic",
    "across",
    "two",
    "versions",
    "within",
    "service",
    "example",
    "deploying",
    "new",
    "version",
    "service",
    "decide",
    "want",
    "distribute",
    "traffic",
    "version",
    "application",
    "decide",
    "want",
    "keep",
    "current",
    "version",
    "play",
    "roll",
    "new",
    "version",
    "application",
    "10",
    "users",
    "leaving",
    "old",
    "version",
    "still",
    "90",
    "traffic",
    "going",
    "version",
    "splitting",
    "traffic",
    "allows",
    "conduct",
    "b",
    "testing",
    "versions",
    "provides",
    "control",
    "pace",
    "rolling",
    "features",
    "note",
    "specified",
    "two",
    "versions",
    "splitting",
    "must",
    "choose",
    "whether",
    "split",
    "traffic",
    "either",
    "either",
    "ip",
    "address",
    "http",
    "cookie",
    "randomly",
    "deep",
    "dive",
    "lesson",
    "app",
    "engine",
    "hope",
    "given",
    "overview",
    "features",
    "available",
    "exam",
    "touches",
    "features",
    "also",
    "wanted",
    "give",
    "familiarity",
    "service",
    "coming",
    "next",
    "going",
    "demo",
    "launching",
    "application",
    "using",
    "app",
    "engine",
    "trying",
    "features",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "app",
    "engine",
    "mark",
    "lesson",
    "complete",
    "whenever",
    "ready",
    "join",
    "console",
    "deploy",
    "application",
    "app",
    "engine",
    "try",
    "features",
    "music",
    "welcome",
    "back",
    "demo",
    "going",
    "build",
    "another",
    "application",
    "deploy",
    "app",
    "engine",
    "called",
    "serverless",
    "bowties",
    "demo",
    "run",
    "ins",
    "outs",
    "deploying",
    "website",
    "application",
    "app",
    "engine",
    "along",
    "managing",
    "experiencing",
    "downtime",
    "quite",
    "bit",
    "work",
    "said",
    "let",
    "dive",
    "console",
    "logged",
    "tonybowtieace",
    "project",
    "bowtie",
    "inc",
    "first",
    "thing",
    "want",
    "want",
    "head",
    "app",
    "engine",
    "order",
    "going",
    "go",
    "top",
    "navigation",
    "menu",
    "going",
    "go",
    "app",
    "engine",
    "created",
    "applications",
    "going",
    "brought",
    "splash",
    "page",
    "order",
    "deploy",
    "application",
    "going",
    "console",
    "command",
    "line",
    "get",
    "started",
    "going",
    "go",
    "top",
    "open",
    "cloud",
    "shell",
    "going",
    "make",
    "bigger",
    "better",
    "viewing",
    "order",
    "get",
    "code",
    "launch",
    "application",
    "going",
    "cloning",
    "github",
    "repository",
    "cloud",
    "shell",
    "deleted",
    "repository",
    "last",
    "demo",
    "go",
    "ahead",
    "skip",
    "cloning",
    "step",
    "need",
    "clone",
    "repository",
    "find",
    "link",
    "instructions",
    "lesson",
    "text",
    "able",
    "retrieve",
    "command",
    "git",
    "clone",
    "along",
    "address",
    "repo",
    "going",
    "hit",
    "enter",
    "already",
    "cloned",
    "repo",
    "receiving",
    "error",
    "going",
    "ls",
    "see",
    "google",
    "cloud",
    "associate",
    "cloud",
    "engineer",
    "repo",
    "already",
    "cloned",
    "going",
    "cd",
    "directory",
    "order",
    "get",
    "code",
    "going",
    "simply",
    "run",
    "command",
    "git",
    "pull",
    "get",
    "latest",
    "going",
    "simply",
    "clear",
    "screen",
    "retrieved",
    "code",
    "need",
    "order",
    "deploy",
    "need",
    "go",
    "directory",
    "directory",
    "going",
    "11",
    "serverless",
    "services",
    "forward",
    "slash",
    "0",
    "1",
    "serverless",
    "bowties",
    "hit",
    "enter",
    "going",
    "run",
    "ls",
    "find",
    "two",
    "versions",
    "website",
    "application",
    "site",
    "v1",
    "site",
    "v2",
    "along",
    "instructions",
    "want",
    "follow",
    "straight",
    "want",
    "go",
    "ahead",
    "deploy",
    "first",
    "website",
    "application",
    "going",
    "cd",
    "site",
    "v1",
    "ls",
    "see",
    "configuration",
    "file",
    "need",
    "order",
    "run",
    "application",
    "app",
    "engine",
    "go",
    "ahead",
    "deploy",
    "wanted",
    "take",
    "moment",
    "show",
    "application",
    "configuration",
    "going",
    "go",
    "ahead",
    "open",
    "cloud",
    "shell",
    "editor",
    "going",
    "type",
    "edit",
    "enter",
    "see",
    "runtime",
    "python",
    "see",
    "default",
    "expiration",
    "two",
    "seconds",
    "along",
    "expiration",
    "underneath",
    "handler",
    "due",
    "caching",
    "issue",
    "happens",
    "app",
    "engine",
    "order",
    "simulate",
    "traffic",
    "splitting",
    "two",
    "website",
    "applications",
    "order",
    "make",
    "things",
    "easy",
    "needed",
    "expire",
    "cash",
    "easy",
    "way",
    "may",
    "applications",
    "need",
    "caching",
    "expiration",
    "may",
    "lot",
    "higher",
    "purposes",
    "demo",
    "two",
    "seconds",
    "expiration",
    "suffice",
    "well",
    "explain",
    "two",
    "handlers",
    "first",
    "one",
    "showing",
    "files",
    "uploaded",
    "cloud",
    "storage",
    "bucket",
    "well",
    "second",
    "stating",
    "static",
    "files",
    "presented",
    "going",
    "go",
    "ahead",
    "back",
    "terminal",
    "going",
    "go",
    "ahead",
    "clear",
    "screen",
    "going",
    "go",
    "ahead",
    "run",
    "command",
    "gcloud",
    "app",
    "deploy",
    "flag",
    "dash",
    "dash",
    "version",
    "going",
    "version",
    "one",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "may",
    "get",
    "asking",
    "authorize",
    "api",
    "call",
    "using",
    "credentials",
    "want",
    "click",
    "authorize",
    "going",
    "prompted",
    "enter",
    "region",
    "want",
    "deploy",
    "website",
    "application",
    "want",
    "keep",
    "us",
    "east",
    "one",
    "going",
    "type",
    "15",
    "hit",
    "enter",
    "going",
    "prompted",
    "verify",
    "configuration",
    "application",
    "deployed",
    "also",
    "going",
    "prompted",
    "want",
    "continue",
    "definitely",
    "yes",
    "going",
    "hit",
    "enter",
    "seen",
    "files",
    "uploaded",
    "cloud",
    "storage",
    "app",
    "engine",
    "going",
    "take",
    "minutes",
    "create",
    "service",
    "along",
    "version",
    "going",
    "let",
    "needful",
    "back",
    "know",
    "okay",
    "application",
    "deployed",
    "although",
    "see",
    "console",
    "deployed",
    "need",
    "refresh",
    "screen",
    "wanted",
    "point",
    "couple",
    "things",
    "shown",
    "terminal",
    "first",
    "one",
    "default",
    "service",
    "first",
    "time",
    "deploy",
    "version",
    "application",
    "always",
    "deploy",
    "default",
    "service",
    "initially",
    "able",
    "deploy",
    "another",
    "named",
    "service",
    "app",
    "engine",
    "says",
    "setting",
    "traffic",
    "split",
    "service",
    "referring",
    "configuration",
    "traffic",
    "splitting",
    "applied",
    "background",
    "getting",
    "little",
    "bit",
    "later",
    "lastly",
    "url",
    "shown",
    "deployed",
    "service",
    "always",
    "start",
    "name",
    "project",
    "followed",
    "production",
    "google",
    "recommends",
    "run",
    "app",
    "engine",
    "completely",
    "separate",
    "project",
    "demo",
    "running",
    "project",
    "using",
    "suffice",
    "okay",
    "let",
    "go",
    "ahead",
    "take",
    "look",
    "application",
    "going",
    "go",
    "back",
    "top",
    "navigation",
    "menu",
    "gon",
    "na",
    "go",
    "app",
    "engine",
    "go",
    "services",
    "see",
    "default",
    "service",
    "version",
    "one",
    "go",
    "versions",
    "see",
    "version",
    "status",
    "traffic",
    "allocation",
    "along",
    "instances",
    "needs",
    "run",
    "time",
    "specific",
    "environment",
    "diagnostic",
    "tools",
    "could",
    "use",
    "static",
    "website",
    "application",
    "wo",
    "using",
    "instances",
    "always",
    "show",
    "zero",
    "want",
    "head",
    "back",
    "services",
    "going",
    "launch",
    "application",
    "simply",
    "clicking",
    "hot",
    "link",
    "success",
    "serverless",
    "bow",
    "ties",
    "looks",
    "like",
    "application",
    "successfully",
    "deployed",
    "going",
    "close",
    "tab",
    "couple",
    "things",
    "wanted",
    "run",
    "left",
    "hand",
    "menu",
    "information",
    "click",
    "instances",
    "running",
    "instances",
    "able",
    "see",
    "summary",
    "instances",
    "click",
    "drop",
    "choose",
    "different",
    "metric",
    "find",
    "information",
    "need",
    "well",
    "click",
    "drop",
    "select",
    "version",
    "multiple",
    "versions",
    "clicking",
    "task",
    "queues",
    "manage",
    "task",
    "queues",
    "legacy",
    "service",
    "soon",
    "deprecated",
    "clicking",
    "cron",
    "jobs",
    "schedule",
    "tasks",
    "need",
    "run",
    "specific",
    "time",
    "recurring",
    "basis",
    "edit",
    "add",
    "firewall",
    "rules",
    "need",
    "see",
    "default",
    "firewall",
    "rule",
    "open",
    "world",
    "probably",
    "noticed",
    "memcache",
    "one",
    "options",
    "menu",
    "legacy",
    "service",
    "soon",
    "deprecated",
    "memcache",
    "distributed",
    "data",
    "store",
    "bundled",
    "python",
    "runtime",
    "acting",
    "cache",
    "specific",
    "tasks",
    "google",
    "recommends",
    "moving",
    "memory",
    "store",
    "redis",
    "planning",
    "applying",
    "caching",
    "app",
    "engine",
    "application",
    "sure",
    "much",
    "longer",
    "lastly",
    "settings",
    "change",
    "settings",
    "application",
    "add",
    "custom",
    "domains",
    "ssl",
    "certificates",
    "well",
    "setting",
    "email",
    "applications",
    "want",
    "send",
    "email",
    "users",
    "okay",
    "done",
    "walkthrough",
    "want",
    "go",
    "ahead",
    "deploy",
    "second",
    "version",
    "application",
    "going",
    "go",
    "ahead",
    "back",
    "cloud",
    "shell",
    "going",
    "quickly",
    "clear",
    "screen",
    "want",
    "move",
    "site",
    "v2",
    "directory",
    "going",
    "hit",
    "cd",
    "dot",
    "dot",
    "bring",
    "back",
    "one",
    "directory",
    "ls",
    "going",
    "change",
    "directories",
    "site",
    "v2",
    "ls",
    "verify",
    "yes",
    "see",
    "serverless",
    "bow",
    "ties",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "run",
    "command",
    "gcloud",
    "app",
    "deploy",
    "version",
    "flag",
    "dash",
    "dash",
    "version",
    "instead",
    "one",
    "going",
    "launch",
    "version",
    "going",
    "hit",
    "enter",
    "going",
    "prompted",
    "want",
    "continue",
    "yes",
    "see",
    "files",
    "uploaded",
    "cloud",
    "storage",
    "version",
    "2",
    "website",
    "application",
    "app",
    "engine",
    "going",
    "take",
    "minutes",
    "create",
    "service",
    "along",
    "version",
    "going",
    "let",
    "cook",
    "couple",
    "minutes",
    "back",
    "say",
    "cat",
    "hat",
    "okay",
    "version",
    "2",
    "deployed",
    "go",
    "console",
    "click",
    "refresh",
    "see",
    "version",
    "2",
    "service",
    "see",
    "100",
    "traffic",
    "allocated",
    "version",
    "2",
    "automatically",
    "default",
    "behavior",
    "whenever",
    "launch",
    "new",
    "version",
    "service",
    "way",
    "avoid",
    "deploy",
    "new",
    "version",
    "promote",
    "flag",
    "go",
    "back",
    "services",
    "left",
    "click",
    "default",
    "service",
    "see",
    "success",
    "version",
    "two",
    "know",
    "website",
    "application",
    "version",
    "2",
    "deployed",
    "successfully",
    "going",
    "close",
    "tab",
    "going",
    "go",
    "back",
    "versions",
    "want",
    "want",
    "simulate",
    "b",
    "test",
    "blue",
    "green",
    "deployment",
    "migrating",
    "traffic",
    "back",
    "old",
    "version",
    "case",
    "version",
    "one",
    "production",
    "let",
    "say",
    "would",
    "release",
    "new",
    "version",
    "version",
    "go",
    "according",
    "plan",
    "always",
    "go",
    "back",
    "previous",
    "version",
    "app",
    "engine",
    "allows",
    "easily",
    "going",
    "click",
    "version",
    "1",
    "going",
    "go",
    "top",
    "menu",
    "click",
    "migrate",
    "traffic",
    "prompted",
    "want",
    "migrate",
    "traffic",
    "yes",
    "going",
    "click",
    "migrate",
    "take",
    "minute",
    "traffic",
    "migrate",
    "version",
    "one",
    "success",
    "traffic",
    "migrated",
    "want",
    "verify",
    "happened",
    "gon",
    "na",
    "go",
    "back",
    "services",
    "gon",
    "na",
    "click",
    "default",
    "service",
    "yes",
    "traffic",
    "allocated",
    "version",
    "one",
    "okay",
    "going",
    "shut",
    "tab",
    "going",
    "go",
    "back",
    "versions",
    "want",
    "want",
    "simulate",
    "splitting",
    "traffic",
    "two",
    "versions",
    "order",
    "go",
    "top",
    "menu",
    "click",
    "split",
    "traffic",
    "prompted",
    "new",
    "menu",
    "choose",
    "different",
    "versions",
    "two",
    "versions",
    "going",
    "add",
    "version",
    "2",
    "order",
    "allocate",
    "traffic",
    "two",
    "either",
    "use",
    "slider",
    "see",
    "allocation",
    "percentage",
    "change",
    "simply",
    "type",
    "going",
    "leave",
    "50",
    "percent",
    "fifty",
    "percent",
    "version",
    "one",
    "fifty",
    "percent",
    "version",
    "two",
    "going",
    "split",
    "traffic",
    "randomly",
    "gon",
    "na",
    "move",
    "little",
    "bit",
    "exactly",
    "wan",
    "na",
    "allocate",
    "traffic",
    "completed",
    "simply",
    "click",
    "save",
    "going",
    "take",
    "moment",
    "update",
    "settings",
    "successful",
    "head",
    "back",
    "previous",
    "page",
    "see",
    "traffic",
    "allocated",
    "versions",
    "order",
    "verify",
    "going",
    "go",
    "services",
    "click",
    "default",
    "hot",
    "link",
    "see",
    "version",
    "one",
    "continuously",
    "refresh",
    "screen",
    "see",
    "version",
    "two",
    "random",
    "50",
    "chance",
    "getting",
    "version",
    "1",
    "50",
    "chance",
    "getting",
    "version",
    "simulation",
    "splitting",
    "traffic",
    "different",
    "versions",
    "usually",
    "b",
    "testing",
    "small",
    "percentage",
    "traffic",
    "routed",
    "new",
    "version",
    "verification",
    "made",
    "new",
    "version",
    "deployed",
    "indeed",
    "successful",
    "done",
    "receiving",
    "feedback",
    "users",
    "wanted",
    "take",
    "quick",
    "moment",
    "congratulate",
    "making",
    "demo",
    "hope",
    "extremely",
    "useful",
    "excelling",
    "knowledge",
    "deploying",
    "managing",
    "applications",
    "app",
    "engine",
    "recap",
    "cloned",
    "repo",
    "cloud",
    "shell",
    "deployed",
    "version",
    "one",
    "application",
    "app",
    "engine",
    "verified",
    "launch",
    "deployed",
    "version",
    "two",
    "application",
    "verified",
    "launch",
    "well",
    "migrated",
    "traffic",
    "version",
    "two",
    "version",
    "one",
    "went",
    "ahead",
    "split",
    "traffic",
    "versions",
    "allotted",
    "50",
    "traffic",
    "allocation",
    "version",
    "go",
    "want",
    "make",
    "sure",
    "clean",
    "resources",
    "deployed",
    "incur",
    "unnecessary",
    "costs",
    "way",
    "simple",
    "first",
    "step",
    "want",
    "go",
    "left",
    "hand",
    "menu",
    "click",
    "settings",
    "simply",
    "click",
    "disable",
    "application",
    "going",
    "prompted",
    "type",
    "app",
    "id",
    "bowtie",
    "inc",
    "going",
    "type",
    "going",
    "click",
    "disable",
    "unfortunately",
    "app",
    "engine",
    "ca",
    "actually",
    "delete",
    "application",
    "disabled",
    "going",
    "hit",
    "hot",
    "link",
    "go",
    "cloud",
    "storage",
    "bucket",
    "see",
    "files",
    "going",
    "move",
    "back",
    "buckets",
    "going",
    "move",
    "staging",
    "bucket",
    "appended",
    "project",
    "see",
    "whole",
    "bunch",
    "different",
    "files",
    "well",
    "drill",
    "directory",
    "marked",
    "ae",
    "app",
    "engine",
    "see",
    "directories",
    "along",
    "manifest",
    "want",
    "keep",
    "application",
    "order",
    "run",
    "later",
    "need",
    "delete",
    "bucket",
    "need",
    "going",
    "go",
    "ahead",
    "delete",
    "bucket",
    "hit",
    "delete",
    "paste",
    "bucket",
    "name",
    "hit",
    "delete",
    "well",
    "find",
    "directory",
    "called",
    "containers",
    "explained",
    "last",
    "lesson",
    "code",
    "build",
    "builds",
    "container",
    "application",
    "deploying",
    "app",
    "engine",
    "going",
    "drill",
    "images",
    "container",
    "digests",
    "need",
    "gon",
    "na",
    "go",
    "ahead",
    "delete",
    "bucket",
    "well",
    "last",
    "step",
    "order",
    "delete",
    "directories",
    "files",
    "use",
    "deploy",
    "application",
    "app",
    "engine",
    "okay",
    "gon",
    "na",
    "head",
    "back",
    "app",
    "engine",
    "cleanup",
    "taken",
    "care",
    "pretty",
    "much",
    "wanted",
    "cover",
    "demo",
    "deploying",
    "managing",
    "applications",
    "app",
    "engine",
    "mark",
    "complete",
    "see",
    "next",
    "one",
    "congrats",
    "job",
    "well",
    "done",
    "music",
    "welcome",
    "back",
    "lesson",
    "diving",
    "another",
    "serverless",
    "product",
    "google",
    "cloud",
    "name",
    "cloud",
    "functions",
    "extremely",
    "useful",
    "advanced",
    "service",
    "used",
    "almost",
    "every",
    "service",
    "platform",
    "quite",
    "bit",
    "cover",
    "said",
    "let",
    "dive",
    "cloud",
    "functions",
    "said",
    "serverless",
    "execution",
    "environment",
    "mean",
    "like",
    "app",
    "engine",
    "need",
    "provision",
    "servers",
    "updating",
    "vms",
    "infrastructure",
    "handled",
    "google",
    "unlike",
    "app",
    "engine",
    "never",
    "see",
    "servers",
    "provisioning",
    "resources",
    "happens",
    "code",
    "executed",
    "cloud",
    "functions",
    "function",
    "service",
    "offering",
    "upload",
    "code",
    "purposefully",
    "written",
    "supported",
    "programming",
    "language",
    "code",
    "triggered",
    "executed",
    "fully",
    "managed",
    "environment",
    "billed",
    "code",
    "executed",
    "cloud",
    "functions",
    "run",
    "runtime",
    "environment",
    "support",
    "many",
    "different",
    "runtimes",
    "like",
    "python",
    "java",
    "go",
    "net",
    "core",
    "cloud",
    "functions",
    "event",
    "driven",
    "something",
    "happens",
    "environment",
    "choose",
    "whether",
    "like",
    "respond",
    "event",
    "code",
    "executed",
    "response",
    "event",
    "triggers",
    "one",
    "different",
    "types",
    "http",
    "pub",
    "sub",
    "cloud",
    "storage",
    "firestore",
    "firebase",
    "beta",
    "yet",
    "seen",
    "exam",
    "cloud",
    "functions",
    "priced",
    "according",
    "long",
    "function",
    "runs",
    "many",
    "resources",
    "provision",
    "function",
    "function",
    "makes",
    "outbound",
    "network",
    "request",
    "also",
    "additional",
    "data",
    "transfer",
    "fees",
    "cloud",
    "functions",
    "also",
    "include",
    "perpetual",
    "free",
    "tier",
    "allows",
    "2",
    "million",
    "invocations",
    "executions",
    "function",
    "cloud",
    "functions",
    "simple",
    "steps",
    "execute",
    "actually",
    "running",
    "wanted",
    "give",
    "walkthrough",
    "exactly",
    "cloud",
    "functions",
    "work",
    "selecting",
    "name",
    "region",
    "want",
    "function",
    "live",
    "would",
    "select",
    "trigger",
    "wish",
    "use",
    "choose",
    "many",
    "listed",
    "earlier",
    "http",
    "cloud",
    "storage",
    "pub",
    "sub",
    "cloud",
    "firestore",
    "firebase",
    "trigger",
    "declaration",
    "interested",
    "certain",
    "event",
    "set",
    "events",
    "binding",
    "function",
    "trigger",
    "allows",
    "capture",
    "act",
    "events",
    "authentication",
    "configuration",
    "next",
    "step",
    "selected",
    "public",
    "access",
    "configured",
    "iam",
    "optional",
    "settings",
    "configured",
    "would",
    "provide",
    "amount",
    "memory",
    "function",
    "need",
    "run",
    "networking",
    "preferences",
    "even",
    "selection",
    "service",
    "account",
    "settings",
    "solidified",
    "written",
    "code",
    "put",
    "function",
    "functions",
    "code",
    "supports",
    "variety",
    "languages",
    "stated",
    "like",
    "python",
    "java",
    "go",
    "writing",
    "code",
    "two",
    "distinct",
    "types",
    "cloud",
    "functions",
    "could",
    "use",
    "http",
    "functions",
    "background",
    "functions",
    "http",
    "functions",
    "invoke",
    "standard",
    "http",
    "requests",
    "http",
    "requests",
    "wait",
    "response",
    "support",
    "handling",
    "common",
    "http",
    "request",
    "methods",
    "like",
    "get",
    "put",
    "post",
    "delete",
    "options",
    "use",
    "cloud",
    "functions",
    "tls",
    "certificate",
    "automatically",
    "provisioned",
    "http",
    "functions",
    "invoked",
    "via",
    "secure",
    "connection",
    "comes",
    "background",
    "functions",
    "used",
    "handle",
    "events",
    "gcp",
    "infrastructure",
    "messages",
    "pub",
    "sub",
    "topic",
    "changes",
    "cloud",
    "storage",
    "bucket",
    "put",
    "together",
    "ready",
    "deploy",
    "code",
    "two",
    "things",
    "happen",
    "deploying",
    "code",
    "first",
    "one",
    "binding",
    "trigger",
    "function",
    "bind",
    "trigger",
    "bind",
    "another",
    "one",
    "function",
    "one",
    "trigger",
    "bound",
    "function",
    "time",
    "second",
    "thing",
    "happen",
    "deploy",
    "function",
    "source",
    "code",
    "cloud",
    "functions",
    "source",
    "code",
    "stored",
    "cloud",
    "storage",
    "bucket",
    "zip",
    "file",
    "cloud",
    "build",
    "automatically",
    "builds",
    "code",
    "container",
    "image",
    "pushes",
    "image",
    "container",
    "registry",
    "cloud",
    "functions",
    "accesses",
    "image",
    "needs",
    "run",
    "container",
    "execute",
    "function",
    "process",
    "building",
    "image",
    "entirely",
    "automatic",
    "requires",
    "manual",
    "intervention",
    "point",
    "process",
    "building",
    "function",
    "complete",
    "function",
    "created",
    "wait",
    "event",
    "happen",
    "events",
    "things",
    "happen",
    "within",
    "cloud",
    "environment",
    "might",
    "want",
    "take",
    "action",
    "might",
    "changes",
    "data",
    "cloud",
    "sql",
    "files",
    "added",
    "cloud",
    "storage",
    "new",
    "vm",
    "created",
    "currently",
    "cloud",
    "functions",
    "supports",
    "events",
    "services",
    "used",
    "triggers",
    "mentioned",
    "including",
    "google",
    "services",
    "like",
    "bigquery",
    "cloud",
    "sql",
    "cloud",
    "spanner",
    "event",
    "triggers",
    "execution",
    "cloud",
    "function",
    "data",
    "associated",
    "event",
    "passed",
    "via",
    "functions",
    "parameters",
    "type",
    "event",
    "determines",
    "parameters",
    "passed",
    "function",
    "cloud",
    "functions",
    "handles",
    "incoming",
    "requests",
    "assigning",
    "instances",
    "function",
    "depending",
    "volume",
    "requests",
    "well",
    "number",
    "existing",
    "function",
    "instances",
    "cloud",
    "functions",
    "may",
    "assign",
    "request",
    "existing",
    "instance",
    "create",
    "new",
    "one",
    "cloud",
    "function",
    "grab",
    "image",
    "cloud",
    "registry",
    "hand",
    "image",
    "along",
    "event",
    "data",
    "instance",
    "processing",
    "instance",
    "function",
    "handles",
    "one",
    "concurrent",
    "request",
    "time",
    "means",
    "code",
    "processing",
    "one",
    "request",
    "possibility",
    "second",
    "request",
    "routed",
    "instance",
    "thus",
    "original",
    "request",
    "use",
    "full",
    "amount",
    "resources",
    "requested",
    "memory",
    "assign",
    "cloud",
    "function",
    "deploying",
    "allow",
    "google",
    "automatically",
    "manage",
    "scale",
    "functions",
    "must",
    "stateless",
    "functions",
    "meant",
    "persistent",
    "data",
    "passed",
    "function",
    "function",
    "run",
    "data",
    "processed",
    "server",
    "passed",
    "either",
    "vpc",
    "internet",
    "default",
    "functions",
    "public",
    "internet",
    "access",
    "unless",
    "configured",
    "otherwise",
    "functions",
    "also",
    "private",
    "used",
    "within",
    "vpc",
    "must",
    "configured",
    "deployment",
    "many",
    "use",
    "cases",
    "cloud",
    "functions",
    "many",
    "already",
    "created",
    "google",
    "try",
    "located",
    "documentation",
    "supplied",
    "lesson",
    "text",
    "exam",
    "go",
    "much",
    "depth",
    "cloud",
    "functions",
    "want",
    "give",
    "exposure",
    "fantastic",
    "serverless",
    "product",
    "google",
    "commonly",
    "used",
    "many",
    "production",
    "environments",
    "simple",
    "easy",
    "way",
    "take",
    "data",
    "process",
    "return",
    "result",
    "event",
    "given",
    "doubt",
    "get",
    "hang",
    "deploying",
    "huge",
    "fan",
    "well",
    "pretty",
    "much",
    "cover",
    "comes",
    "cloud",
    "functions",
    "mark",
    "lesson",
    "complete",
    "whenever",
    "ready",
    "join",
    "next",
    "one",
    "go",
    "console",
    "creating",
    "deploying",
    "first",
    "function",
    "welcome",
    "back",
    "demo",
    "diving",
    "creating",
    "deploying",
    "first",
    "cloud",
    "function",
    "going",
    "take",
    "tour",
    "options",
    "console",
    "going",
    "work",
    "cloud",
    "shell",
    "get",
    "good",
    "feel",
    "command",
    "line",
    "said",
    "let",
    "dive",
    "logged",
    "tony",
    "bowties",
    "project",
    "bowtie",
    "inc",
    "first",
    "thing",
    "want",
    "head",
    "cloud",
    "functions",
    "console",
    "going",
    "go",
    "top",
    "left",
    "navigation",
    "menu",
    "going",
    "scroll",
    "cloud",
    "functions",
    "see",
    "cloud",
    "functions",
    "getting",
    "ready",
    "never",
    "used",
    "api",
    "enabled",
    "okay",
    "api",
    "enabled",
    "go",
    "ahead",
    "start",
    "creating",
    "function",
    "go",
    "ahead",
    "click",
    "create",
    "function",
    "prompted",
    "fields",
    "fill",
    "configuration",
    "cloud",
    "function",
    "basics",
    "function",
    "name",
    "going",
    "name",
    "hello",
    "underscore",
    "world",
    "region",
    "going",
    "select",
    "us",
    "east",
    "one",
    "trigger",
    "trigger",
    "type",
    "gon",
    "na",
    "keep",
    "http",
    "although",
    "click",
    "drop",
    "menu",
    "see",
    "options",
    "cloud",
    "pub",
    "sub",
    "cloud",
    "storage",
    "ones",
    "mentioned",
    "beta",
    "going",
    "keep",
    "things",
    "http",
    "url",
    "url",
    "actual",
    "cloud",
    "function",
    "authentication",
    "option",
    "choosing",
    "require",
    "authentication",
    "allow",
    "unauthenticated",
    "invocations",
    "see",
    "clearly",
    "marked",
    "saying",
    "check",
    "creating",
    "public",
    "api",
    "website",
    "authentication",
    "method",
    "want",
    "select",
    "fields",
    "filled",
    "basic",
    "configuration",
    "going",
    "go",
    "ahead",
    "click",
    "save",
    "give",
    "quick",
    "run",
    "else",
    "available",
    "going",
    "click",
    "drop",
    "give",
    "access",
    "variables",
    "networking",
    "advanced",
    "settings",
    "first",
    "field",
    "memory",
    "allocated",
    "actually",
    "add",
    "memory",
    "depending",
    "cloud",
    "function",
    "going",
    "keep",
    "default",
    "cloud",
    "function",
    "runs",
    "little",
    "bit",
    "longer",
    "need",
    "time",
    "run",
    "cloud",
    "function",
    "add",
    "additional",
    "time",
    "timeout",
    "well",
    "option",
    "choosing",
    "different",
    "service",
    "account",
    "cloud",
    "function",
    "moving",
    "environment",
    "variables",
    "see",
    "options",
    "add",
    "build",
    "environment",
    "variables",
    "along",
    "runtime",
    "environment",
    "variables",
    "last",
    "option",
    "connections",
    "change",
    "different",
    "networking",
    "settings",
    "ingress",
    "egress",
    "traffic",
    "ingress",
    "settings",
    "allow",
    "traffic",
    "default",
    "allow",
    "internal",
    "traffic",
    "well",
    "allow",
    "internal",
    "traffic",
    "traffic",
    "cloud",
    "low",
    "balancing",
    "well",
    "comes",
    "egress",
    "settings",
    "said",
    "default",
    "cloud",
    "function",
    "able",
    "send",
    "requests",
    "internet",
    "resources",
    "vpc",
    "network",
    "would",
    "create",
    "vpc",
    "connector",
    "send",
    "requests",
    "cloud",
    "function",
    "resources",
    "vpc",
    "click",
    "create",
    "connector",
    "open",
    "new",
    "tab",
    "bring",
    "vpc",
    "network",
    "add",
    "serverless",
    "vpc",
    "access",
    "want",
    "right",
    "going",
    "close",
    "tab",
    "going",
    "go",
    "ahead",
    "leave",
    "everything",
    "else",
    "click",
    "next",
    "configuration",
    "done",
    "dive",
    "right",
    "code",
    "google",
    "cloud",
    "gives",
    "inline",
    "editor",
    "right",
    "along",
    "different",
    "runtime",
    "environments",
    "click",
    "drop",
    "menu",
    "see",
    "options",
    "net",
    "core",
    "go",
    "java",
    "python",
    "demo",
    "going",
    "keep",
    "entry",
    "point",
    "hello",
    "world",
    "going",
    "keep",
    "code",
    "exactly",
    "default",
    "cloud",
    "function",
    "packaged",
    "runtime",
    "whenever",
    "create",
    "function",
    "console",
    "different",
    "code",
    "change",
    "going",
    "going",
    "leave",
    "everything",
    "else",
    "click",
    "deploy",
    "take",
    "couple",
    "minutes",
    "create",
    "cloud",
    "function",
    "going",
    "pause",
    "video",
    "quick",
    "sec",
    "back",
    "flash",
    "okay",
    "cloud",
    "function",
    "deployed",
    "got",
    "green",
    "check",
    "mark",
    "means",
    "good",
    "want",
    "dive",
    "right",
    "second",
    "get",
    "details",
    "metrics",
    "cloud",
    "function",
    "invocations",
    "per",
    "second",
    "execution",
    "time",
    "memory",
    "utilization",
    "active",
    "instances",
    "versions",
    "top",
    "since",
    "one",
    "version",
    "one",
    "version",
    "shows",
    "click",
    "details",
    "show",
    "general",
    "information",
    "along",
    "networking",
    "settings",
    "source",
    "show",
    "code",
    "cloud",
    "function",
    "well",
    "variables",
    "trigger",
    "permissions",
    "logs",
    "testing",
    "write",
    "code",
    "test",
    "function",
    "order",
    "invoke",
    "function",
    "simply",
    "go",
    "trigger",
    "show",
    "url",
    "quick",
    "way",
    "command",
    "line",
    "simply",
    "open",
    "cloud",
    "shell",
    "make",
    "little",
    "bigger",
    "better",
    "viewing",
    "going",
    "paste",
    "command",
    "gcloud",
    "functions",
    "describe",
    "along",
    "function",
    "name",
    "hello",
    "underscore",
    "world",
    "along",
    "region",
    "flag",
    "dash",
    "dash",
    "region",
    "region",
    "cloud",
    "function",
    "deployed",
    "us",
    "east",
    "one",
    "going",
    "hit",
    "enter",
    "going",
    "ask",
    "authorize",
    "api",
    "call",
    "yes",
    "want",
    "authorize",
    "command",
    "output",
    "information",
    "screen",
    "looking",
    "http",
    "trigger",
    "find",
    "https",
    "trigger",
    "see",
    "console",
    "know",
    "want",
    "grab",
    "http",
    "url",
    "trigger",
    "also",
    "command",
    "line",
    "going",
    "trigger",
    "going",
    "url",
    "see",
    "top",
    "left",
    "hand",
    "side",
    "screen",
    "hello",
    "world",
    "exciting",
    "spinning",
    "bow",
    "ties",
    "example",
    "gives",
    "idea",
    "http",
    "function",
    "going",
    "close",
    "tab",
    "want",
    "want",
    "deploy",
    "another",
    "function",
    "want",
    "command",
    "line",
    "going",
    "quickly",
    "clear",
    "screen",
    "since",
    "already",
    "uploaded",
    "code",
    "repo",
    "going",
    "simply",
    "clone",
    "repo",
    "run",
    "going",
    "simply",
    "cd",
    "tilde",
    "make",
    "sure",
    "home",
    "directory",
    "deleted",
    "directory",
    "simply",
    "cd",
    "going",
    "run",
    "cd",
    "google",
    "cloud",
    "associate",
    "cloud",
    "engineer",
    "hit",
    "enter",
    "going",
    "run",
    "get",
    "pull",
    "command",
    "pull",
    "files",
    "needed",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "change",
    "directories",
    "directory",
    "code",
    "going",
    "find",
    "11",
    "serverless",
    "services",
    "zero",
    "called",
    "hit",
    "enter",
    "link",
    "lesson",
    "text",
    "full",
    "instructions",
    "demo",
    "list",
    "directory",
    "find",
    "code",
    "okay",
    "moving",
    "forward",
    "going",
    "run",
    "ls",
    "see",
    "three",
    "files",
    "text",
    "file",
    "instructions",
    "everything",
    "place",
    "order",
    "deploy",
    "code",
    "going",
    "paste",
    "command",
    "actually",
    "deploy",
    "function",
    "gcloud",
    "functions",
    "deploy",
    "name",
    "function",
    "underscore",
    "called",
    "flag",
    "runtime",
    "dash",
    "dash",
    "runtime",
    "runtime",
    "going",
    "python",
    "flag",
    "trigger",
    "going",
    "http",
    "nice",
    "guy",
    "want",
    "everyone",
    "access",
    "going",
    "tag",
    "flag",
    "dash",
    "dash",
    "allow",
    "unauthenticated",
    "going",
    "hit",
    "enter",
    "okay",
    "function",
    "take",
    "couple",
    "minutes",
    "deploy",
    "going",
    "sit",
    "let",
    "cook",
    "back",
    "say",
    "cat",
    "hat",
    "okay",
    "function",
    "deployed",
    "going",
    "quick",
    "refresh",
    "console",
    "deployed",
    "successfully",
    "see",
    "green",
    "check",
    "mark",
    "okay",
    "deployed",
    "want",
    "trigger",
    "function",
    "deployed",
    "function",
    "url",
    "trigger",
    "conveniently",
    "located",
    "screen",
    "go",
    "ahead",
    "click",
    "hello",
    "lover",
    "bow",
    "ties",
    "called",
    "although",
    "may",
    "similar",
    "hello",
    "world",
    "demo",
    "add",
    "small",
    "feature",
    "might",
    "spice",
    "things",
    "go",
    "url",
    "type",
    "question",
    "mark",
    "name",
    "equals",
    "name",
    "since",
    "name",
    "anthony",
    "going",
    "type",
    "anthony",
    "hit",
    "enter",
    "hello",
    "anthony",
    "called",
    "perfect",
    "example",
    "many",
    "different",
    "ways",
    "use",
    "functions",
    "although",
    "highlighted",
    "simple",
    "demonstrations",
    "many",
    "different",
    "ways",
    "use",
    "functions",
    "running",
    "pipelines",
    "running",
    "batch",
    "jobs",
    "even",
    "event",
    "driven",
    "security",
    "although",
    "exam",
    "go",
    "much",
    "depth",
    "cloud",
    "functions",
    "always",
    "good",
    "know",
    "use",
    "cases",
    "strengths",
    "lie",
    "decide",
    "use",
    "role",
    "cloud",
    "engineer",
    "go",
    "sure",
    "delete",
    "resources",
    "created",
    "deleting",
    "functions",
    "storage",
    "buckets",
    "house",
    "code",
    "cloud",
    "functions",
    "walk",
    "steps",
    "right",
    "okay",
    "first",
    "going",
    "close",
    "tab",
    "next",
    "going",
    "select",
    "functions",
    "going",
    "simply",
    "click",
    "delete",
    "going",
    "get",
    "prompt",
    "delete",
    "functions",
    "going",
    "click",
    "delete",
    "going",
    "take",
    "minute",
    "two",
    "functions",
    "deleted",
    "going",
    "close",
    "cloud",
    "shell",
    "going",
    "head",
    "cloud",
    "storage",
    "see",
    "buckets",
    "start",
    "gcf",
    "standing",
    "google",
    "cloud",
    "functions",
    "safely",
    "deleted",
    "inside",
    "files",
    "used",
    "cloud",
    "function",
    "going",
    "go",
    "back",
    "going",
    "select",
    "going",
    "click",
    "delete",
    "get",
    "prompt",
    "delete",
    "two",
    "buckets",
    "simply",
    "type",
    "delete",
    "click",
    "delete",
    "buckets",
    "deleted",
    "pretty",
    "much",
    "finished",
    "cleanup",
    "recap",
    "created",
    "default",
    "cloud",
    "function",
    "available",
    "console",
    "verified",
    "triggering",
    "http",
    "url",
    "deployed",
    "another",
    "function",
    "command",
    "line",
    "pulling",
    "code",
    "repo",
    "using",
    "deployment",
    "verified",
    "function",
    "triggering",
    "using",
    "http",
    "url",
    "well",
    "modify",
    "url",
    "different",
    "output",
    "great",
    "job",
    "another",
    "successful",
    "demo",
    "mark",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "dive",
    "cloud",
    "storage",
    "go",
    "storage",
    "service",
    "google",
    "cloud",
    "engineer",
    "working",
    "google",
    "cloud",
    "probably",
    "used",
    "many",
    "times",
    "storage",
    "solution",
    "definitely",
    "service",
    "need",
    "know",
    "exam",
    "role",
    "cloud",
    "engineer",
    "quite",
    "bit",
    "cover",
    "said",
    "let",
    "dive",
    "cloud",
    "storage",
    "consistent",
    "scalable",
    "large",
    "capacity",
    "highly",
    "durable",
    "object",
    "storage",
    "unlimited",
    "storage",
    "objects",
    "minimum",
    "object",
    "size",
    "please",
    "remember",
    "object",
    "storage",
    "designed",
    "store",
    "operating",
    "system",
    "store",
    "whole",
    "objects",
    "like",
    "pictures",
    "videos",
    "cloud",
    "storage",
    "worldwide",
    "accessibility",
    "worldwide",
    "storage",
    "locations",
    "anywhere",
    "region",
    "zone",
    "cloud",
    "storage",
    "available",
    "accessed",
    "time",
    "internet",
    "connection",
    "cloud",
    "storage",
    "great",
    "storing",
    "data",
    "data",
    "analytics",
    "jobs",
    "text",
    "files",
    "code",
    "pictures",
    "latest",
    "fashion",
    "paris",
    "videos",
    "favorite",
    "house",
    "dj",
    "shelter",
    "cloud",
    "storage",
    "excels",
    "content",
    "delivery",
    "big",
    "data",
    "sets",
    "backups",
    "stored",
    "objects",
    "buckets",
    "heart",
    "cloud",
    "storage",
    "diving",
    "starting",
    "buckets",
    "basic",
    "containers",
    "construct",
    "holds",
    "data",
    "everything",
    "store",
    "cloud",
    "storage",
    "must",
    "contained",
    "bucket",
    "use",
    "buckets",
    "organize",
    "data",
    "control",
    "access",
    "data",
    "unlike",
    "directories",
    "folders",
    "nest",
    "buckets",
    "get",
    "minute",
    "create",
    "bucket",
    "must",
    "specify",
    "globally",
    "unique",
    "name",
    "every",
    "bucket",
    "resides",
    "single",
    "cloud",
    "storage",
    "namespace",
    "well",
    "name",
    "must",
    "specify",
    "geographic",
    "location",
    "bucket",
    "contents",
    "stored",
    "three",
    "available",
    "geography",
    "choices",
    "choose",
    "region",
    "dual",
    "region",
    "note",
    "choosing",
    "dual",
    "region",
    "considered",
    "dual",
    "region",
    "achieved",
    "using",
    "specific",
    "pair",
    "regions",
    "achieved",
    "using",
    "continent",
    "contains",
    "two",
    "geographic",
    "places",
    "basically",
    "regions",
    "data",
    "available",
    "greater",
    "availability",
    "data",
    "chosen",
    "geographic",
    "location",
    "default",
    "storage",
    "class",
    "must",
    "chosen",
    "applies",
    "objects",
    "added",
    "bucket",
    "storage",
    "class",
    "explicitly",
    "specified",
    "diving",
    "storage",
    "classes",
    "bit",
    "create",
    "bucket",
    "still",
    "change",
    "default",
    "storage",
    "class",
    "class",
    "supported",
    "buckets",
    "location",
    "stipulations",
    "change",
    "bucket",
    "name",
    "location",
    "deleting",
    "recreating",
    "bucket",
    "well",
    "dual",
    "region",
    "selected",
    "changed",
    "selecting",
    "able",
    "change",
    "bucket",
    "dual",
    "region",
    "lastly",
    "need",
    "choose",
    "level",
    "access",
    "want",
    "others",
    "bucket",
    "whether",
    "want",
    "apply",
    "permissions",
    "using",
    "uniform",
    "fine",
    "grained",
    "access",
    "uniform",
    "bucket",
    "level",
    "access",
    "allows",
    "use",
    "iam",
    "alone",
    "manage",
    "permissions",
    "iam",
    "applies",
    "permissions",
    "objects",
    "contained",
    "inside",
    "bucket",
    "groups",
    "objects",
    "common",
    "name",
    "prefixes",
    "find",
    "green",
    "option",
    "enables",
    "use",
    "iam",
    "access",
    "control",
    "lists",
    "acls",
    "together",
    "manage",
    "permissions",
    "acls",
    "legacy",
    "access",
    "control",
    "system",
    "cloud",
    "storage",
    "designed",
    "interoperability",
    "amazon",
    "s3",
    "use",
    "aws",
    "specify",
    "access",
    "apply",
    "permissions",
    "bucket",
    "level",
    "per",
    "individual",
    "object",
    "also",
    "diving",
    "depth",
    "access",
    "control",
    "bit",
    "note",
    "labels",
    "optional",
    "item",
    "bucket",
    "creation",
    "like",
    "every",
    "resource",
    "creation",
    "process",
    "gcp",
    "covered",
    "buckets",
    "wanted",
    "cover",
    "stored",
    "buckets",
    "objects",
    "objects",
    "individual",
    "pieces",
    "data",
    "data",
    "chunks",
    "store",
    "cloud",
    "storage",
    "bucket",
    "limit",
    "number",
    "objects",
    "create",
    "bucket",
    "think",
    "objects",
    "kind",
    "like",
    "files",
    "objects",
    "two",
    "components",
    "object",
    "data",
    "object",
    "metadata",
    "object",
    "data",
    "typically",
    "file",
    "want",
    "store",
    "cloud",
    "storage",
    "case",
    "picture",
    "plaid",
    "bow",
    "tie",
    "object",
    "metadata",
    "collection",
    "name",
    "value",
    "pairs",
    "describe",
    "various",
    "properties",
    "object",
    "object",
    "name",
    "treated",
    "piece",
    "object",
    "metadata",
    "cloud",
    "storage",
    "must",
    "unique",
    "within",
    "bucket",
    "cloud",
    "storage",
    "uses",
    "flat",
    "namespace",
    "store",
    "objects",
    "means",
    "cloud",
    "storage",
    "file",
    "system",
    "hierarchy",
    "sees",
    "objects",
    "given",
    "bucket",
    "independent",
    "relationship",
    "towards",
    "convenience",
    "tools",
    "console",
    "gsutil",
    "work",
    "objects",
    "use",
    "slash",
    "character",
    "stored",
    "virtual",
    "hierarchy",
    "example",
    "name",
    "one",
    "object",
    "slash",
    "bow",
    "ties",
    "slash",
    "spring",
    "2021",
    "slash",
    "plaid",
    "using",
    "cloud",
    "console",
    "navigate",
    "objects",
    "hierarchical",
    "directory",
    "structure",
    "folders",
    "bow",
    "ties",
    "spring",
    "2021",
    "mentioned",
    "part",
    "bucket",
    "creation",
    "selection",
    "storage",
    "class",
    "storage",
    "class",
    "set",
    "object",
    "affects",
    "object",
    "availability",
    "pricing",
    "model",
    "create",
    "bucket",
    "specify",
    "default",
    "storage",
    "class",
    "bucket",
    "add",
    "objects",
    "bucket",
    "inherit",
    "storage",
    "class",
    "unless",
    "explicitly",
    "set",
    "otherwise",
    "wanted",
    "touch",
    "four",
    "storage",
    "classes",
    "give",
    "better",
    "understanding",
    "differences",
    "first",
    "one",
    "standard",
    "storage",
    "considered",
    "best",
    "hot",
    "data",
    "frequently",
    "accessed",
    "data",
    "best",
    "use",
    "specified",
    "storage",
    "duration",
    "excellent",
    "use",
    "analytical",
    "workloads",
    "transcoding",
    "price",
    "storage",
    "class",
    "comes",
    "two",
    "cents",
    "per",
    "gigabyte",
    "per",
    "month",
    "next",
    "near",
    "line",
    "storage",
    "considered",
    "hot",
    "data",
    "well",
    "storage",
    "class",
    "storing",
    "frequently",
    "accessed",
    "data",
    "nearline",
    "storage",
    "slightly",
    "lower",
    "availability",
    "minimum",
    "storage",
    "duration",
    "comes",
    "cost",
    "data",
    "access",
    "nearline",
    "storage",
    "ideal",
    "looking",
    "continuously",
    "add",
    "files",
    "plan",
    "access",
    "month",
    "perfect",
    "data",
    "backup",
    "data",
    "archiving",
    "price",
    "storage",
    "class",
    "comes",
    "penny",
    "per",
    "gigabyte",
    "per",
    "month",
    "cold",
    "line",
    "storage",
    "considered",
    "cold",
    "data",
    "enters",
    "longer",
    "term",
    "storage",
    "classes",
    "low",
    "cost",
    "storage",
    "class",
    "storing",
    "frequently",
    "accessed",
    "data",
    "comes",
    "slightly",
    "lower",
    "availability",
    "nearline",
    "storage",
    "minimum",
    "storage",
    "duration",
    "comes",
    "cost",
    "data",
    "access",
    "higher",
    "retrieval",
    "cost",
    "nearline",
    "storage",
    "coldline",
    "storage",
    "ideal",
    "data",
    "plan",
    "read",
    "modify",
    "quarter",
    "perfect",
    "data",
    "backup",
    "data",
    "archiving",
    "price",
    "storage",
    "class",
    "comes",
    "less",
    "half",
    "penny",
    "per",
    "gigabyte",
    "per",
    "month",
    "finally",
    "archive",
    "storage",
    "lowest",
    "cost",
    "highly",
    "durable",
    "storage",
    "service",
    "data",
    "archiving",
    "online",
    "backup",
    "disaster",
    "recovery",
    "even",
    "coming",
    "lowest",
    "cost",
    "data",
    "access",
    "still",
    "available",
    "within",
    "milliseconds",
    "archive",
    "storage",
    "comes",
    "higher",
    "cost",
    "data",
    "retrieval",
    "well",
    "day",
    "minimum",
    "storage",
    "duration",
    "best",
    "choice",
    "data",
    "plan",
    "access",
    "less",
    "year",
    "archive",
    "storage",
    "also",
    "comes",
    "highest",
    "price",
    "data",
    "retrieval",
    "ideal",
    "archive",
    "data",
    "storage",
    "used",
    "regulatory",
    "purposes",
    "disaster",
    "recovery",
    "data",
    "event",
    "oopsies",
    "environment",
    "price",
    "storage",
    "class",
    "comes",
    "ridiculously",
    "low",
    "price",
    "per",
    "gigabyte",
    "per",
    "month",
    "fraction",
    "penny",
    "per",
    "gigabyte",
    "per",
    "month",
    "comes",
    "choosing",
    "geographic",
    "location",
    "determine",
    "availability",
    "data",
    "see",
    "highest",
    "availability",
    "standard",
    "whereas",
    "archive",
    "lowest",
    "availability",
    "stored",
    "regional",
    "setting",
    "comes",
    "durability",
    "data",
    "meaning",
    "measurement",
    "healthy",
    "resilient",
    "data",
    "data",
    "loss",
    "data",
    "corruption",
    "google",
    "cloud",
    "boasts",
    "11",
    "9",
    "durability",
    "annually",
    "data",
    "stored",
    "storage",
    "class",
    "cloud",
    "storage",
    "know",
    "data",
    "stored",
    "safely",
    "holding",
    "integrity",
    "day",
    "stored",
    "comes",
    "granting",
    "permissions",
    "cloud",
    "storage",
    "buckets",
    "objects",
    "within",
    "four",
    "different",
    "options",
    "choose",
    "first",
    "iam",
    "permissions",
    "standard",
    "permissions",
    "control",
    "resources",
    "google",
    "cloud",
    "follow",
    "hierarchy",
    "discussed",
    "earlier",
    "next",
    "available",
    "option",
    "access",
    "control",
    "list",
    "acls",
    "define",
    "access",
    "buckets",
    "objects",
    "well",
    "type",
    "access",
    "work",
    "tandem",
    "im",
    "permissions",
    "moving",
    "sign",
    "urls",
    "time",
    "limited",
    "reader",
    "write",
    "access",
    "urls",
    "created",
    "give",
    "access",
    "object",
    "question",
    "duration",
    "specify",
    "lastly",
    "sign",
    "policy",
    "documents",
    "documents",
    "specify",
    "uploaded",
    "bucket",
    "going",
    "one",
    "bit",
    "detail",
    "cloud",
    "storage",
    "offers",
    "two",
    "systems",
    "granting",
    "users",
    "permission",
    "access",
    "buckets",
    "objects",
    "iam",
    "access",
    "control",
    "lists",
    "systems",
    "act",
    "parallel",
    "order",
    "user",
    "access",
    "cloud",
    "storage",
    "resource",
    "one",
    "systems",
    "needs",
    "grant",
    "user",
    "permission",
    "im",
    "always",
    "recommended",
    "method",
    "comes",
    "giving",
    "access",
    "buckets",
    "objects",
    "within",
    "buckets",
    "granting",
    "roles",
    "bucket",
    "level",
    "affect",
    "existing",
    "roles",
    "granted",
    "project",
    "level",
    "vice",
    "versa",
    "giving",
    "two",
    "levels",
    "granularity",
    "customize",
    "permissions",
    "instance",
    "give",
    "user",
    "permission",
    "read",
    "objects",
    "bucket",
    "permissions",
    "create",
    "objects",
    "one",
    "specific",
    "bucket",
    "roles",
    "available",
    "iam",
    "primitive",
    "standard",
    "storage",
    "roles",
    "legacy",
    "roles",
    "equivalent",
    "acls",
    "acls",
    "need",
    "customize",
    "access",
    "really",
    "get",
    "granular",
    "individual",
    "objects",
    "within",
    "bucket",
    "used",
    "define",
    "access",
    "buckets",
    "objects",
    "well",
    "level",
    "access",
    "acl",
    "consists",
    "one",
    "entries",
    "gives",
    "specific",
    "user",
    "group",
    "ability",
    "perform",
    "specific",
    "actions",
    "entry",
    "consists",
    "two",
    "pieces",
    "information",
    "permission",
    "defines",
    "actions",
    "performed",
    "scope",
    "defines",
    "perform",
    "specified",
    "actions",
    "acls",
    "used",
    "caution",
    "iam",
    "roles",
    "acls",
    "overlap",
    "cloud",
    "storage",
    "grant",
    "broader",
    "permission",
    "allow",
    "specific",
    "users",
    "access",
    "object",
    "bucket",
    "acl",
    "applied",
    "object",
    "make",
    "public",
    "publicly",
    "accessible",
    "please",
    "aware",
    "signed",
    "url",
    "url",
    "provides",
    "limited",
    "permission",
    "time",
    "make",
    "request",
    "sign",
    "urls",
    "contain",
    "authentication",
    "information",
    "allowing",
    "users",
    "without",
    "credentials",
    "perform",
    "specific",
    "actions",
    "resource",
    "generate",
    "signed",
    "url",
    "specify",
    "user",
    "service",
    "account",
    "must",
    "sufficient",
    "permission",
    "make",
    "request",
    "sign",
    "url",
    "make",
    "generate",
    "signed",
    "url",
    "anyone",
    "possesses",
    "use",
    "sign",
    "url",
    "perform",
    "specified",
    "actions",
    "reading",
    "object",
    "within",
    "specified",
    "period",
    "time",
    "want",
    "provide",
    "public",
    "access",
    "user",
    "account",
    "provide",
    "signed",
    "url",
    "user",
    "gives",
    "user",
    "read",
    "write",
    "delete",
    "access",
    "resource",
    "limited",
    "time",
    "specify",
    "expiration",
    "date",
    "create",
    "sign",
    "url",
    "anyone",
    "knows",
    "url",
    "access",
    "resource",
    "expiration",
    "time",
    "url",
    "reached",
    "key",
    "used",
    "sign",
    "url",
    "rotated",
    "command",
    "create",
    "sign",
    "url",
    "shown",
    "see",
    "assigned",
    "limited",
    "time",
    "10",
    "minutes",
    "seen",
    "comes",
    "cloud",
    "storage",
    "many",
    "configuration",
    "options",
    "choose",
    "lots",
    "different",
    "ways",
    "store",
    "give",
    "access",
    "makes",
    "resource",
    "google",
    "cloud",
    "flexible",
    "option",
    "full",
    "great",
    "potential",
    "many",
    "different",
    "types",
    "workloads",
    "also",
    "service",
    "comes",
    "lot",
    "exam",
    "one",
    "many",
    "different",
    "storage",
    "options",
    "choose",
    "knowing",
    "features",
    "storage",
    "classes",
    "pricing",
    "access",
    "options",
    "definitely",
    "give",
    "leg",
    "presented",
    "questions",
    "regarding",
    "storage",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "overview",
    "cloud",
    "storage",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "covering",
    "object",
    "versioning",
    "life",
    "cycle",
    "management",
    "feature",
    "within",
    "cloud",
    "storage",
    "used",
    "manage",
    "sort",
    "older",
    "files",
    "need",
    "deleted",
    "along",
    "files",
    "high",
    "need",
    "regular",
    "access",
    "knowing",
    "capabilities",
    "two",
    "features",
    "really",
    "help",
    "organize",
    "accumulated",
    "objects",
    "storage",
    "buckets",
    "cut",
    "costs",
    "without",
    "ado",
    "let",
    "dive",
    "understand",
    "bit",
    "objects",
    "wanted",
    "dive",
    "immutability",
    "versioning",
    "objects",
    "immutable",
    "means",
    "uploaded",
    "object",
    "change",
    "throughout",
    "storage",
    "lifetime",
    "object",
    "storage",
    "lifetime",
    "time",
    "successful",
    "object",
    "creation",
    "upload",
    "successful",
    "object",
    "deletion",
    "means",
    "edit",
    "objects",
    "place",
    "instead",
    "objects",
    "always",
    "replaced",
    "new",
    "version",
    "upload",
    "new",
    "object",
    "completes",
    "new",
    "version",
    "object",
    "served",
    "readers",
    "replacement",
    "marks",
    "end",
    "one",
    "object",
    "life",
    "cycle",
    "beginning",
    "new",
    "one",
    "support",
    "retrieval",
    "objects",
    "deleted",
    "replaced",
    "cloud",
    "storage",
    "offers",
    "object",
    "versioning",
    "feature",
    "object",
    "versioning",
    "retains",
    "object",
    "version",
    "live",
    "object",
    "version",
    "gets",
    "replaced",
    "deleted",
    "enabling",
    "object",
    "versioning",
    "increases",
    "storage",
    "costs",
    "partially",
    "mitigated",
    "configuring",
    "object",
    "lifecycle",
    "management",
    "delete",
    "older",
    "object",
    "versions",
    "bit",
    "cloud",
    "storage",
    "uses",
    "two",
    "properties",
    "together",
    "identify",
    "version",
    "object",
    "generation",
    "identifies",
    "version",
    "object",
    "data",
    "meta",
    "generation",
    "identifies",
    "version",
    "object",
    "metadata",
    "properties",
    "always",
    "present",
    "every",
    "version",
    "object",
    "even",
    "object",
    "versioning",
    "enabled",
    "properties",
    "used",
    "enforce",
    "ordering",
    "updates",
    "order",
    "enable",
    "object",
    "versioning",
    "would",
    "enabling",
    "bucket",
    "enabled",
    "older",
    "versions",
    "remain",
    "bucket",
    "replacement",
    "deletion",
    "occurs",
    "default",
    "replace",
    "object",
    "cloud",
    "storage",
    "deletes",
    "old",
    "version",
    "adds",
    "new",
    "version",
    "older",
    "versions",
    "retain",
    "name",
    "object",
    "uniquely",
    "identified",
    "generation",
    "number",
    "object",
    "versioning",
    "created",
    "older",
    "version",
    "object",
    "use",
    "generation",
    "number",
    "refer",
    "older",
    "version",
    "allows",
    "restore",
    "replaced",
    "object",
    "bucket",
    "permanently",
    "delete",
    "older",
    "object",
    "versions",
    "longer",
    "need",
    "touching",
    "back",
    "cost",
    "minute",
    "versions",
    "really",
    "add",
    "start",
    "costing",
    "serious",
    "money",
    "thousands",
    "files",
    "hundreds",
    "versions",
    "life",
    "cycle",
    "management",
    "comes",
    "play",
    "cloud",
    "storage",
    "offers",
    "object",
    "lifecycle",
    "management",
    "feature",
    "order",
    "support",
    "common",
    "use",
    "cases",
    "like",
    "setting",
    "time",
    "live",
    "ttl",
    "objects",
    "retaining",
    "versions",
    "objects",
    "downgrading",
    "storage",
    "classes",
    "objects",
    "help",
    "manage",
    "costs",
    "order",
    "apply",
    "feature",
    "objects",
    "would",
    "assign",
    "lifecycle",
    "management",
    "configuration",
    "bucket",
    "configuration",
    "contains",
    "set",
    "rules",
    "apply",
    "current",
    "feature",
    "objects",
    "bucket",
    "object",
    "meets",
    "criteria",
    "one",
    "rules",
    "cloud",
    "storage",
    "automatically",
    "performs",
    "specified",
    "action",
    "object",
    "example",
    "use",
    "cases",
    "shown",
    "looking",
    "downgrade",
    "storage",
    "class",
    "objects",
    "older",
    "365",
    "days",
    "cold",
    "line",
    "storage",
    "compliance",
    "purposes",
    "along",
    "saving",
    "money",
    "life",
    "cycle",
    "management",
    "perfect",
    "another",
    "use",
    "case",
    "want",
    "delete",
    "objects",
    "created",
    "january",
    "1st",
    "2020",
    "another",
    "great",
    "use",
    "case",
    "save",
    "money",
    "well",
    "keeping",
    "three",
    "recent",
    "versions",
    "object",
    "bucket",
    "versioning",
    "enabled",
    "keep",
    "version",
    "objects",
    "building",
    "object",
    "lifecycle",
    "management",
    "many",
    "use",
    "cases",
    "across",
    "myriad",
    "industries",
    "used",
    "correctly",
    "great",
    "way",
    "achieve",
    "object",
    "management",
    "along",
    "saving",
    "money",
    "wanted",
    "take",
    "moment",
    "dive",
    "lifecycle",
    "management",
    "configuration",
    "lifecycle",
    "management",
    "configuration",
    "contains",
    "set",
    "components",
    "set",
    "rules",
    "conditions",
    "action",
    "conditions",
    "met",
    "rules",
    "set",
    "conditions",
    "action",
    "conditions",
    "something",
    "object",
    "must",
    "meet",
    "action",
    "defined",
    "rule",
    "occurs",
    "object",
    "various",
    "conditions",
    "choose",
    "allows",
    "get",
    "pretty",
    "granular",
    "finally",
    "action",
    "would",
    "option",
    "delete",
    "set",
    "storage",
    "class",
    "delete",
    "current",
    "versions",
    "move",
    "current",
    "version",
    "state",
    "delete",
    "version",
    "permanently",
    "delete",
    "version",
    "get",
    "back",
    "set",
    "storage",
    "class",
    "transition",
    "object",
    "different",
    "storage",
    "class",
    "defining",
    "rule",
    "specify",
    "set",
    "conditions",
    "action",
    "specify",
    "multiple",
    "conditions",
    "rule",
    "object",
    "match",
    "conditions",
    "action",
    "taken",
    "three",
    "conditions",
    "one",
    "conditions",
    "met",
    "action",
    "take",
    "place",
    "specify",
    "multiple",
    "rules",
    "contain",
    "action",
    "action",
    "taken",
    "object",
    "matches",
    "conditions",
    "rules",
    "multiple",
    "rules",
    "conditions",
    "satisfied",
    "simultaneously",
    "single",
    "object",
    "cloud",
    "storage",
    "either",
    "perform",
    "delete",
    "action",
    "takes",
    "precedence",
    "set",
    "storage",
    "class",
    "action",
    "set",
    "storage",
    "class",
    "action",
    "switches",
    "object",
    "storage",
    "class",
    "lowest",
    "rest",
    "storage",
    "pricing",
    "takes",
    "precedence",
    "example",
    "one",
    "rule",
    "deletes",
    "object",
    "another",
    "rule",
    "changes",
    "object",
    "storage",
    "class",
    "rules",
    "use",
    "exact",
    "condition",
    "delete",
    "action",
    "always",
    "occurs",
    "condition",
    "met",
    "one",
    "rule",
    "changes",
    "object",
    "storage",
    "class",
    "near",
    "line",
    "storage",
    "another",
    "rule",
    "changes",
    "object",
    "storage",
    "class",
    "cold",
    "line",
    "storage",
    "rules",
    "use",
    "exact",
    "condition",
    "object",
    "storage",
    "class",
    "always",
    "changes",
    "cold",
    "line",
    "storage",
    "condition",
    "met",
    "considerations",
    "wanted",
    "point",
    "comes",
    "cloud",
    "storage",
    "comes",
    "object",
    "life",
    "cycle",
    "management",
    "changes",
    "accordance",
    "object",
    "creation",
    "date",
    "well",
    "object",
    "deleted",
    "undeleted",
    "please",
    "careful",
    "permanently",
    "deleting",
    "version",
    "well",
    "life",
    "cycle",
    "rules",
    "take",
    "24",
    "hours",
    "take",
    "effect",
    "aware",
    "setting",
    "always",
    "sure",
    "test",
    "life",
    "cycle",
    "rules",
    "development",
    "first",
    "rolling",
    "production",
    "pretty",
    "much",
    "cover",
    "comes",
    "versioning",
    "object",
    "life",
    "cycle",
    "management",
    "mark",
    "lesson",
    "complete",
    "whenever",
    "ready",
    "join",
    "console",
    "go",
    "versioning",
    "object",
    "life",
    "cycle",
    "management",
    "cloud",
    "storage",
    "whole",
    "music",
    "welcome",
    "back",
    "demo",
    "going",
    "cement",
    "knowledge",
    "learned",
    "past",
    "couple",
    "lessons",
    "cloud",
    "storage",
    "really",
    "dive",
    "nitty",
    "gritty",
    "comes",
    "features",
    "configuration",
    "first",
    "going",
    "create",
    "cloud",
    "storage",
    "bucket",
    "upload",
    "files",
    "interact",
    "bucket",
    "files",
    "using",
    "console",
    "well",
    "going",
    "get",
    "hands",
    "dirty",
    "using",
    "gsutil",
    "command",
    "line",
    "tool",
    "tool",
    "managing",
    "cloud",
    "storage",
    "command",
    "line",
    "quite",
    "bit",
    "work",
    "said",
    "let",
    "dive",
    "logged",
    "tony",
    "bowties",
    "along",
    "project",
    "bowtie",
    "inc",
    "first",
    "thing",
    "want",
    "want",
    "create",
    "cloud",
    "storage",
    "bucket",
    "order",
    "going",
    "head",
    "navigation",
    "menu",
    "going",
    "scroll",
    "storage",
    "already",
    "couple",
    "buckets",
    "created",
    "earlier",
    "lessons",
    "may",
    "couple",
    "buckets",
    "well",
    "going",
    "go",
    "ahead",
    "create",
    "new",
    "bucket",
    "going",
    "top",
    "click",
    "create",
    "bucket",
    "know",
    "gone",
    "previous",
    "lessons",
    "time",
    "wanted",
    "go",
    "configuration",
    "options",
    "available",
    "first",
    "thing",
    "prompted",
    "name",
    "bucket",
    "explained",
    "earlier",
    "lesson",
    "needs",
    "globally",
    "unique",
    "name",
    "pick",
    "name",
    "choose",
    "going",
    "call",
    "bucket",
    "bowtie",
    "inc",
    "dash",
    "2021",
    "going",
    "hit",
    "continue",
    "globally",
    "unique",
    "name",
    "would",
    "error",
    "would",
    "enter",
    "new",
    "name",
    "since",
    "bucket",
    "name",
    "globally",
    "unique",
    "able",
    "move",
    "forward",
    "location",
    "type",
    "select",
    "region",
    "dual",
    "region",
    "multi",
    "region",
    "multi",
    "region",
    "location",
    "select",
    "either",
    "americas",
    "europe",
    "asia",
    "pacific",
    "dual",
    "region",
    "options",
    "choosing",
    "america",
    "europe",
    "asia",
    "pacific",
    "given",
    "regions",
    "demo",
    "going",
    "go",
    "ahead",
    "choose",
    "region",
    "going",
    "keep",
    "location",
    "east",
    "one",
    "selected",
    "go",
    "ahead",
    "hit",
    "continue",
    "going",
    "prompted",
    "choose",
    "default",
    "storage",
    "class",
    "option",
    "selecting",
    "four",
    "storage",
    "classes",
    "discussed",
    "earlier",
    "lesson",
    "demo",
    "keep",
    "standard",
    "simply",
    "click",
    "continue",
    "prompted",
    "choose",
    "access",
    "control",
    "going",
    "diving",
    "acls",
    "keep",
    "default",
    "fine",
    "grain",
    "access",
    "control",
    "go",
    "ahead",
    "click",
    "continue",
    "encryption",
    "keep",
    "default",
    "google",
    "manage",
    "key",
    "know",
    "always",
    "option",
    "choosing",
    "customer",
    "manage",
    "key",
    "uploaded",
    "customer",
    "manage",
    "key",
    "select",
    "customer",
    "managed",
    "keys",
    "keys",
    "show",
    "going",
    "click",
    "google",
    "manage",
    "keys",
    "retention",
    "policy",
    "know",
    "touched",
    "give",
    "context",
    "placing",
    "retention",
    "policy",
    "bucket",
    "ensures",
    "current",
    "future",
    "objects",
    "bucket",
    "ca",
    "deleted",
    "replaced",
    "reach",
    "age",
    "define",
    "retention",
    "policy",
    "try",
    "delete",
    "replace",
    "objects",
    "age",
    "less",
    "retention",
    "period",
    "obviously",
    "fail",
    "great",
    "compliance",
    "purposes",
    "areas",
    "logs",
    "need",
    "audited",
    "regulators",
    "every",
    "year",
    "government",
    "required",
    "retention",
    "periods",
    "apply",
    "well",
    "retention",
    "policy",
    "option",
    "locking",
    "retention",
    "policy",
    "lock",
    "retention",
    "policy",
    "bucket",
    "prevent",
    "policy",
    "ever",
    "removed",
    "retention",
    "period",
    "ever",
    "reduced",
    "feature",
    "irreversible",
    "please",
    "aware",
    "ever",
    "experimenting",
    "lock",
    "retention",
    "policies",
    "set",
    "retention",
    "policy",
    "retain",
    "objects",
    "certain",
    "amount",
    "seconds",
    "days",
    "months",
    "years",
    "demo",
    "going",
    "set",
    "retention",
    "policies",
    "going",
    "check",
    "going",
    "go",
    "ahead",
    "add",
    "label",
    "key",
    "environment",
    "value",
    "test",
    "note",
    "go",
    "ahead",
    "click",
    "create",
    "right",
    "hand",
    "side",
    "see",
    "monthly",
    "cost",
    "estimate",
    "given",
    "estimate",
    "storage",
    "retrieval",
    "well",
    "much",
    "costs",
    "operations",
    "sla",
    "estimated",
    "monthly",
    "cost",
    "creating",
    "buckets",
    "always",
    "price",
    "check",
    "see",
    "much",
    "cost",
    "storage",
    "size",
    "retrieval",
    "get",
    "good",
    "idea",
    "much",
    "cost",
    "monthly",
    "okay",
    "done",
    "simply",
    "click",
    "create",
    "go",
    "ahead",
    "create",
    "bucket",
    "bucket",
    "created",
    "want",
    "add",
    "files",
    "first",
    "want",
    "go",
    "copying",
    "files",
    "instance",
    "cloud",
    "storage",
    "bucket",
    "order",
    "need",
    "create",
    "instance",
    "gon",
    "na",
    "go",
    "back",
    "navigation",
    "menu",
    "gon",
    "na",
    "scroll",
    "compute",
    "engine",
    "gon",
    "na",
    "create",
    "instance",
    "default",
    "vpc",
    "set",
    "please",
    "sure",
    "create",
    "one",
    "going",
    "ahead",
    "creating",
    "instance",
    "going",
    "go",
    "ahead",
    "click",
    "create",
    "going",
    "name",
    "instance",
    "bowtie",
    "instance",
    "going",
    "give",
    "label",
    "environment",
    "test",
    "click",
    "save",
    "region",
    "going",
    "east",
    "one",
    "keep",
    "default",
    "zone",
    "us",
    "east",
    "1b",
    "machine",
    "type",
    "going",
    "change",
    "e2micro",
    "going",
    "scroll",
    "access",
    "scopes",
    "instance",
    "going",
    "need",
    "access",
    "cloud",
    "storage",
    "bucket",
    "going",
    "need",
    "cloud",
    "storage",
    "access",
    "going",
    "click",
    "set",
    "access",
    "api",
    "scroll",
    "storage",
    "demo",
    "select",
    "full",
    "gon",
    "na",
    "leave",
    "everything",
    "else",
    "default",
    "simply",
    "click",
    "create",
    "give",
    "couple",
    "minutes",
    "instance",
    "create",
    "okay",
    "instance",
    "created",
    "want",
    "create",
    "files",
    "copy",
    "cloud",
    "storage",
    "going",
    "first",
    "navigate",
    "cloud",
    "storage",
    "bucket",
    "way",
    "see",
    "files",
    "upload",
    "next",
    "going",
    "open",
    "cloud",
    "shell",
    "make",
    "little",
    "bigger",
    "better",
    "viewing",
    "going",
    "ssh",
    "instance",
    "using",
    "command",
    "gcloud",
    "compute",
    "ssh",
    "along",
    "instance",
    "name",
    "zone",
    "flag",
    "dash",
    "dash",
    "zone",
    "zone",
    "us",
    "east",
    "1b",
    "going",
    "go",
    "ahead",
    "hit",
    "enter",
    "may",
    "prompted",
    "message",
    "asking",
    "authorize",
    "api",
    "call",
    "want",
    "hit",
    "authorize",
    "going",
    "prompted",
    "enter",
    "passphrase",
    "key",
    "pair",
    "enter",
    "one",
    "time",
    "success",
    "logged",
    "instance",
    "going",
    "quickly",
    "clear",
    "screen",
    "know",
    "could",
    "sshed",
    "instance",
    "compute",
    "engine",
    "console",
    "wanted",
    "display",
    "console",
    "shell",
    "screen",
    "make",
    "viewing",
    "bit",
    "easier",
    "add",
    "remove",
    "files",
    "bucket",
    "okay",
    "logged",
    "want",
    "create",
    "first",
    "file",
    "copy",
    "bucket",
    "enter",
    "command",
    "sudo",
    "nano",
    "file",
    "bow",
    "ties",
    "dot",
    "text",
    "hit",
    "enter",
    "allow",
    "open",
    "nano",
    "editor",
    "edit",
    "file",
    "enter",
    "message",
    "like",
    "going",
    "enter",
    "learning",
    "tie",
    "bow",
    "tie",
    "takes",
    "time",
    "okay",
    "going",
    "hit",
    "ctrl",
    "save",
    "hit",
    "enter",
    "verify",
    "file",
    "name",
    "right",
    "ctrl",
    "x",
    "exit",
    "want",
    "copy",
    "file",
    "bucket",
    "going",
    "use",
    "gsutil",
    "command",
    "going",
    "type",
    "gsutil",
    "cp",
    "copy",
    "name",
    "file",
    "file",
    "bowties",
    "text",
    "along",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "name",
    "bucket",
    "case",
    "bow",
    "tie",
    "ink",
    "dash",
    "2021",
    "copy",
    "file",
    "file",
    "bucket",
    "bow",
    "tie",
    "inc",
    "2021",
    "gon",
    "na",
    "hit",
    "enter",
    "okay",
    "finished",
    "copying",
    "go",
    "top",
    "right",
    "click",
    "refresh",
    "see",
    "file",
    "successfully",
    "uploaded",
    "great",
    "easy",
    "method",
    "upload",
    "files",
    "may",
    "cloud",
    "storage",
    "okay",
    "copied",
    "files",
    "instance",
    "bucket",
    "going",
    "copy",
    "files",
    "repo",
    "uploaded",
    "cloud",
    "storage",
    "next",
    "step",
    "gon",
    "na",
    "go",
    "ahead",
    "exit",
    "instance",
    "simply",
    "typing",
    "exit",
    "gon",
    "na",
    "quickly",
    "clear",
    "screen",
    "need",
    "clone",
    "repo",
    "already",
    "clone",
    "repo",
    "skip",
    "step",
    "going",
    "cd",
    "tilde",
    "make",
    "sure",
    "home",
    "directory",
    "going",
    "ls",
    "see",
    "already",
    "cloned",
    "repo",
    "going",
    "cd",
    "directory",
    "going",
    "run",
    "command",
    "git",
    "pull",
    "get",
    "latest",
    "files",
    "fantastic",
    "going",
    "clear",
    "screen",
    "going",
    "cd",
    "back",
    "home",
    "directory",
    "want",
    "copy",
    "files",
    "want",
    "work",
    "cloud",
    "storage",
    "bucket",
    "two",
    "jpegs",
    "name",
    "pink",
    "well",
    "plaid",
    "bowtie",
    "files",
    "found",
    "repo",
    "marked",
    "12",
    "storage",
    "services",
    "zero",
    "one",
    "cloud",
    "storage",
    "management",
    "providing",
    "lesson",
    "text",
    "well",
    "found",
    "instructions",
    "going",
    "simply",
    "cd",
    "directory",
    "typing",
    "cd",
    "google",
    "cloud",
    "associate",
    "cloud",
    "engineer",
    "12",
    "storage",
    "services",
    "0",
    "1",
    "cloud",
    "storage",
    "management",
    "going",
    "list",
    "files",
    "directory",
    "see",
    "pink",
    "elephant",
    "dash",
    "bow",
    "tie",
    "plaid",
    "bow",
    "tie",
    "going",
    "quickly",
    "clear",
    "screen",
    "copy",
    "files",
    "going",
    "use",
    "command",
    "gsutil",
    "cp",
    "copy",
    "jpegs",
    "available",
    "along",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "bucket",
    "name",
    "bow",
    "tie",
    "inc",
    "dash",
    "2021",
    "going",
    "hit",
    "enter",
    "says",
    "successfully",
    "copied",
    "files",
    "going",
    "simply",
    "go",
    "top",
    "right",
    "hand",
    "corner",
    "another",
    "refresh",
    "success",
    "files",
    "successfully",
    "uploaded",
    "another",
    "perfect",
    "example",
    "copying",
    "files",
    "another",
    "source",
    "bucket",
    "using",
    "gsutil",
    "command",
    "line",
    "tool",
    "end",
    "part",
    "one",
    "demo",
    "getting",
    "bit",
    "long",
    "decided",
    "break",
    "would",
    "great",
    "opportunity",
    "get",
    "stretch",
    "get",
    "coffee",
    "tea",
    "whenever",
    "ready",
    "part",
    "two",
    "starting",
    "immediately",
    "end",
    "part",
    "one",
    "complete",
    "video",
    "see",
    "part",
    "two",
    "music",
    "part",
    "two",
    "managing",
    "cloud",
    "storage",
    "access",
    "demo",
    "starting",
    "exactly",
    "left",
    "part",
    "said",
    "let",
    "dive",
    "uploaded",
    "files",
    "next",
    "want",
    "make",
    "bucket",
    "publicly",
    "available",
    "please",
    "know",
    "leaving",
    "bucket",
    "public",
    "common",
    "practice",
    "used",
    "rare",
    "occasion",
    "hosting",
    "static",
    "website",
    "bucket",
    "always",
    "kept",
    "private",
    "whenever",
    "possible",
    "especially",
    "production",
    "environment",
    "please",
    "note",
    "purposes",
    "demo",
    "going",
    "quickly",
    "show",
    "console",
    "going",
    "shut",
    "cloud",
    "shell",
    "minute",
    "going",
    "go",
    "top",
    "menu",
    "click",
    "permissions",
    "permissions",
    "going",
    "click",
    "add",
    "add",
    "new",
    "members",
    "want",
    "make",
    "publicly",
    "available",
    "want",
    "use",
    "users",
    "member",
    "type",
    "get",
    "bringing",
    "users",
    "authenticated",
    "users",
    "want",
    "click",
    "users",
    "role",
    "want",
    "select",
    "demo",
    "going",
    "storage",
    "object",
    "viewer",
    "going",
    "type",
    "storage",
    "object",
    "viewer",
    "pop",
    "select",
    "click",
    "save",
    "going",
    "prompted",
    "make",
    "sure",
    "want",
    "want",
    "make",
    "bucket",
    "public",
    "yes",
    "simply",
    "click",
    "allow",
    "public",
    "access",
    "get",
    "banner",
    "top",
    "saying",
    "bucket",
    "public",
    "internet",
    "great",
    "fail",
    "safe",
    "case",
    "ever",
    "mistakenly",
    "make",
    "bucket",
    "public",
    "head",
    "back",
    "objects",
    "see",
    "public",
    "access",
    "available",
    "files",
    "bucket",
    "verify",
    "going",
    "copy",
    "public",
    "url",
    "pink",
    "elephant",
    "dash",
    "bowtie",
    "going",
    "open",
    "new",
    "tab",
    "paste",
    "url",
    "hit",
    "enter",
    "see",
    "public",
    "access",
    "picture",
    "close",
    "tab",
    "done",
    "demo",
    "make",
    "bucket",
    "publicly",
    "accessible",
    "go",
    "ahead",
    "remove",
    "public",
    "access",
    "order",
    "remove",
    "public",
    "permissions",
    "simply",
    "go",
    "permissions",
    "simply",
    "click",
    "remove",
    "public",
    "permissions",
    "going",
    "get",
    "prompt",
    "make",
    "sure",
    "exactly",
    "want",
    "yes",
    "click",
    "remove",
    "public",
    "permissions",
    "simple",
    "elegant",
    "solution",
    "order",
    "remove",
    "public",
    "access",
    "bucket",
    "go",
    "back",
    "objects",
    "see",
    "public",
    "access",
    "removed",
    "files",
    "experienced",
    "add",
    "public",
    "access",
    "bucket",
    "wanted",
    "get",
    "little",
    "bit",
    "granular",
    "going",
    "go",
    "ahead",
    "apply",
    "acl",
    "permissions",
    "one",
    "specific",
    "object",
    "like",
    "pink",
    "elephants",
    "let",
    "go",
    "ahead",
    "select",
    "pink",
    "elephant",
    "dash",
    "bow",
    "tie",
    "go",
    "top",
    "menu",
    "click",
    "edit",
    "permissions",
    "prompted",
    "new",
    "window",
    "permissions",
    "currently",
    "available",
    "object",
    "click",
    "add",
    "entry",
    "click",
    "drop",
    "select",
    "public",
    "automatically",
    "auto",
    "populate",
    "name",
    "users",
    "access",
    "reader",
    "going",
    "go",
    "ahead",
    "click",
    "save",
    "public",
    "url",
    "generated",
    "verify",
    "going",
    "click",
    "public",
    "url",
    "success",
    "public",
    "access",
    "picture",
    "yet",
    "going",
    "close",
    "tab",
    "configured",
    "object",
    "public",
    "access",
    "want",
    "show",
    "remove",
    "public",
    "access",
    "using",
    "command",
    "line",
    "time",
    "going",
    "go",
    "top",
    "right",
    "hand",
    "corner",
    "open",
    "cloud",
    "shell",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "paste",
    "command",
    "gsutil",
    "acl",
    "ch",
    "change",
    "minus",
    "delete",
    "name",
    "user",
    "users",
    "regular",
    "user",
    "could",
    "enter",
    "email",
    "address",
    "along",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "bucket",
    "name",
    "case",
    "bow",
    "tie",
    "ink",
    "dash",
    "2021",
    "name",
    "file",
    "pink",
    "elephant",
    "bow",
    "tie",
    "dot",
    "jpeg",
    "going",
    "hit",
    "enter",
    "says",
    "successfully",
    "updated",
    "go",
    "back",
    "console",
    "back",
    "go",
    "back",
    "file",
    "see",
    "public",
    "url",
    "removed",
    "okay",
    "one",
    "last",
    "step",
    "need",
    "ending",
    "demo",
    "create",
    "signed",
    "url",
    "file",
    "order",
    "create",
    "signed",
    "url",
    "first",
    "need",
    "create",
    "private",
    "key",
    "gon",
    "na",
    "using",
    "service",
    "account",
    "gon",
    "na",
    "head",
    "iam",
    "going",
    "go",
    "navigation",
    "menu",
    "going",
    "go",
    "admin",
    "menu",
    "left",
    "going",
    "click",
    "service",
    "accounts",
    "top",
    "menu",
    "going",
    "click",
    "create",
    "service",
    "account",
    "service",
    "account",
    "name",
    "enter",
    "name",
    "going",
    "enter",
    "signed",
    "url",
    "going",
    "leave",
    "everything",
    "else",
    "going",
    "simply",
    "click",
    "create",
    "going",
    "close",
    "cloud",
    "shell",
    "really",
    "need",
    "right",
    "select",
    "role",
    "going",
    "give",
    "role",
    "storage",
    "object",
    "viewer",
    "going",
    "click",
    "continue",
    "going",
    "leave",
    "rest",
    "blank",
    "simply",
    "click",
    "done",
    "see",
    "service",
    "account",
    "name",
    "signed",
    "url",
    "order",
    "create",
    "key",
    "going",
    "simply",
    "go",
    "actions",
    "going",
    "click",
    "three",
    "dots",
    "going",
    "select",
    "create",
    "key",
    "drop",
    "menu",
    "going",
    "prompted",
    "type",
    "key",
    "want",
    "create",
    "want",
    "make",
    "sure",
    "json",
    "selected",
    "simply",
    "click",
    "create",
    "key",
    "automatically",
    "downloaded",
    "downloads",
    "folder",
    "going",
    "click",
    "close",
    "key",
    "downloaded",
    "able",
    "start",
    "process",
    "generating",
    "signed",
    "url",
    "going",
    "go",
    "ahead",
    "use",
    "cloud",
    "shell",
    "order",
    "generate",
    "signed",
    "url",
    "going",
    "go",
    "ahead",
    "back",
    "top",
    "open",
    "cloud",
    "shell",
    "open",
    "cloud",
    "shell",
    "editor",
    "going",
    "go",
    "top",
    "menu",
    "editor",
    "click",
    "file",
    "going",
    "select",
    "upload",
    "files",
    "upload",
    "key",
    "downloads",
    "folder",
    "see",
    "key",
    "uploaded",
    "right",
    "rename",
    "key",
    "file",
    "something",
    "little",
    "bit",
    "human",
    "readable",
    "going",
    "right",
    "click",
    "going",
    "click",
    "rename",
    "rename",
    "file",
    "hit",
    "ok",
    "key",
    "uploaded",
    "renamed",
    "go",
    "back",
    "terminal",
    "generate",
    "signed",
    "url",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "make",
    "sure",
    "private",
    "key",
    "path",
    "typing",
    "ls",
    "see",
    "indeed",
    "path",
    "generate",
    "key",
    "going",
    "head",
    "back",
    "cloud",
    "storage",
    "going",
    "drill",
    "bucket",
    "see",
    "pink",
    "elephant",
    "dash",
    "bow",
    "tie",
    "public",
    "url",
    "sign",
    "url",
    "generated",
    "get",
    "public",
    "url",
    "shown",
    "console",
    "private",
    "user",
    "generated",
    "users",
    "url",
    "distributed",
    "okay",
    "everything",
    "place",
    "go",
    "ahead",
    "paste",
    "command",
    "gsutil",
    "sign",
    "url",
    "minus",
    "allotted",
    "time",
    "10",
    "minutes",
    "private",
    "key",
    "private",
    "key",
    "dot",
    "json",
    "along",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "bucket",
    "name",
    "case",
    "bow",
    "tie",
    "ink",
    "dash",
    "2021",
    "along",
    "file",
    "name",
    "going",
    "hit",
    "enter",
    "purposely",
    "left",
    "error",
    "see",
    "generate",
    "signed",
    "url",
    "need",
    "pi",
    "open",
    "ssl",
    "order",
    "generate",
    "caveat",
    "python",
    "2",
    "deprecated",
    "command",
    "pip",
    "install",
    "pi",
    "openssl",
    "work",
    "pi",
    "open",
    "ssl",
    "needs",
    "installed",
    "python3",
    "install",
    "going",
    "run",
    "command",
    "pip3",
    "install",
    "pi",
    "open",
    "ssl",
    "hit",
    "enter",
    "finished",
    "installing",
    "generate",
    "signed",
    "url",
    "going",
    "quickly",
    "clear",
    "screen",
    "paste",
    "command",
    "hit",
    "enter",
    "success",
    "generated",
    "sign",
    "url",
    "object",
    "pink",
    "elephant",
    "signed",
    "url",
    "see",
    "public",
    "url",
    "url",
    "available",
    "even",
    "though",
    "publicly",
    "accessible",
    "verify",
    "going",
    "highlight",
    "link",
    "going",
    "copy",
    "going",
    "open",
    "new",
    "tab",
    "going",
    "paste",
    "url",
    "hit",
    "enter",
    "success",
    "sign",
    "url",
    "working",
    "anyone",
    "access",
    "viewing",
    "permissions",
    "file",
    "10",
    "minutes",
    "great",
    "method",
    "giving",
    "someone",
    "access",
    "object",
    "account",
    "give",
    "limited",
    "time",
    "view",
    "edit",
    "object",
    "wanted",
    "congratulate",
    "making",
    "demo",
    "hope",
    "extremely",
    "useful",
    "excelling",
    "knowledge",
    "managing",
    "buckets",
    "files",
    "access",
    "buckets",
    "files",
    "cloud",
    "storage",
    "recap",
    "created",
    "cloud",
    "storage",
    "bucket",
    "created",
    "instance",
    "copied",
    "file",
    "instance",
    "bucket",
    "clone",
    "repo",
    "cloud",
    "shell",
    "copy",
    "two",
    "jpeg",
    "files",
    "cloud",
    "storage",
    "bucket",
    "assigned",
    "removed",
    "public",
    "access",
    "bucket",
    "applied",
    "acl",
    "file",
    "bucket",
    "making",
    "public",
    "well",
    "removing",
    "public",
    "access",
    "right",
    "created",
    "service",
    "account",
    "private",
    "key",
    "generated",
    "signed",
    "url",
    "object",
    "bucket",
    "congratulations",
    "job",
    "well",
    "done",
    "pretty",
    "much",
    "wanted",
    "cover",
    "demo",
    "managing",
    "cloud",
    "storage",
    "access",
    "mark",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "demo",
    "going",
    "getting",
    "weeds",
    "object",
    "versioning",
    "life",
    "cycle",
    "management",
    "using",
    "console",
    "command",
    "line",
    "going",
    "go",
    "versioning",
    "works",
    "happens",
    "objects",
    "get",
    "promoted",
    "along",
    "creation",
    "configuration",
    "editing",
    "life",
    "cycle",
    "policies",
    "said",
    "let",
    "dive",
    "going",
    "starting",
    "left",
    "last",
    "demo",
    "resources",
    "intact",
    "created",
    "going",
    "go",
    "ahead",
    "dive",
    "right",
    "versioning",
    "first",
    "thing",
    "want",
    "turn",
    "versioning",
    "current",
    "bucket",
    "case",
    "bow",
    "tie",
    "ink",
    "dash",
    "2021",
    "going",
    "command",
    "line",
    "going",
    "first",
    "go",
    "top",
    "right",
    "hand",
    "corner",
    "open",
    "cloud",
    "shell",
    "first",
    "want",
    "see",
    "versioning",
    "turned",
    "bucket",
    "using",
    "command",
    "gsutil",
    "versioning",
    "get",
    "along",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "bucket",
    "name",
    "hit",
    "enter",
    "may",
    "prompted",
    "message",
    "asking",
    "authorize",
    "api",
    "call",
    "definitely",
    "want",
    "authorize",
    "expected",
    "versioning",
    "turned",
    "bucket",
    "hence",
    "return",
    "suspended",
    "order",
    "turn",
    "versioning",
    "going",
    "use",
    "similar",
    "command",
    "gsutil",
    "versioning",
    "instead",
    "get",
    "going",
    "use",
    "set",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "bucket",
    "name",
    "hit",
    "enter",
    "versioning",
    "enabled",
    "run",
    "command",
    "gsutil",
    "version",
    "get",
    "get",
    "response",
    "enabled",
    "okay",
    "great",
    "versioning",
    "enabled",
    "go",
    "ahead",
    "next",
    "step",
    "delete",
    "one",
    "files",
    "bucket",
    "go",
    "ahead",
    "select",
    "plaid",
    "simply",
    "click",
    "delete",
    "confirm",
    "deletion",
    "file",
    "deleted",
    "technically",
    "file",
    "deleted",
    "merely",
    "converted",
    "version",
    "order",
    "check",
    "current",
    "versions",
    "going",
    "use",
    "command",
    "gsutil",
    "ls",
    "minus",
    "along",
    "bucket",
    "name",
    "g",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "bow",
    "tie",
    "inc",
    "dash",
    "2021",
    "gon",
    "na",
    "hit",
    "enter",
    "see",
    "plaid",
    "bow",
    "tie",
    "still",
    "shows",
    "ls",
    "minus",
    "command",
    "linux",
    "command",
    "show",
    "files",
    "including",
    "hidden",
    "files",
    "different",
    "files",
    "right",
    "dot",
    "text",
    "dot",
    "jpg",
    "see",
    "hashtag",
    "number",
    "generation",
    "number",
    "determines",
    "version",
    "object",
    "want",
    "bring",
    "back",
    "version",
    "make",
    "current",
    "going",
    "promote",
    "version",
    "plaid",
    "current",
    "version",
    "order",
    "going",
    "run",
    "command",
    "gsutil",
    "v",
    "move",
    "along",
    "bucket",
    "gs",
    "colon",
    "forward",
    "slash",
    "forward",
    "slash",
    "bowtie",
    "inc",
    "hyphen",
    "2021",
    "name",
    "file",
    "plaid",
    "bow",
    "tie",
    "dot",
    "jpeg",
    "along",
    "generation",
    "number",
    "going",
    "copy",
    "currently",
    "listed",
    "going",
    "paste",
    "need",
    "put",
    "target",
    "going",
    "without",
    "generation",
    "number",
    "paste",
    "hit",
    "enter",
    "okay",
    "operation",
    "completed",
    "go",
    "top",
    "right",
    "hand",
    "corner",
    "click",
    "refresh",
    "see",
    "current",
    "version",
    "plaid",
    "bow",
    "tie",
    "know",
    "using",
    "move",
    "command",
    "actually",
    "deletes",
    "version",
    "gives",
    "new",
    "current",
    "version",
    "new",
    "generation",
    "number",
    "order",
    "verify",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "run",
    "command",
    "gsutil",
    "ls",
    "minus",
    "along",
    "bucket",
    "name",
    "bow",
    "tie",
    "inc",
    "dash",
    "2021",
    "generation",
    "number",
    "different",
    "last",
    "use",
    "cp",
    "copy",
    "command",
    "would",
    "leave",
    "version",
    "create",
    "new",
    "version",
    "top",
    "leaving",
    "two",
    "objects",
    "two",
    "different",
    "generation",
    "numbers",
    "okay",
    "step",
    "done",
    "want",
    "log",
    "linux",
    "instance",
    "going",
    "versioning",
    "file",
    "going",
    "go",
    "ahead",
    "clear",
    "screen",
    "going",
    "run",
    "command",
    "gcloud",
    "compute",
    "ssh",
    "bowtie",
    "instance",
    "name",
    "instance",
    "along",
    "zone",
    "flag",
    "dash",
    "dash",
    "zone",
    "zone",
    "us",
    "east",
    "1b",
    "going",
    "hit",
    "enter",
    "prompted",
    "passphrase",
    "key",
    "want",
    "edit",
    "file",
    "different",
    "version",
    "go",
    "ahead",
    "run",
    "command",
    "sudo",
    "nano",
    "file",
    "bow",
    "ties",
    "dot",
    "text",
    "hit",
    "enter",
    "learning",
    "tie",
    "bow",
    "tie",
    "takes",
    "time",
    "want",
    "append",
    "version",
    "2",
    "right",
    "end",
    "ctrl",
    "save",
    "enter",
    "verify",
    "file",
    "name",
    "right",
    "control",
    "x",
    "exit",
    "want",
    "copy",
    "file",
    "bow",
    "ties",
    "dot",
    "text",
    "current",
    "bucket",
    "mine",
    "bow",
    "tie",
    "ink",
    "dash",
    "2021",
    "going",
    "go",
    "ahead",
    "run",
    "command",
    "gsutil",
    "cp",
    "name",
    "file",
    "file",
    "bowties",
    "dot",
    "text",
    "target",
    "going",
    "bowtie",
    "inc",
    "2021",
    "hit",
    "enter",
    "copied",
    "file",
    "bucket",
    "hit",
    "refresh",
    "console",
    "see",
    "one",
    "version",
    "file",
    "check",
    "versions",
    "going",
    "go",
    "back",
    "cloud",
    "shell",
    "going",
    "quickly",
    "clear",
    "screen",
    "going",
    "run",
    "command",
    "gsutil",
    "ls",
    "minus",
    "along",
    "target",
    "bucket",
    "hit",
    "enter",
    "see",
    "two",
    "versions",
    "file",
    "quickly",
    "open",
    "gon",
    "na",
    "click",
    "url",
    "see",
    "version",
    "two",
    "latest",
    "generation",
    "file",
    "edited",
    "instance",
    "going",
    "close",
    "tab",
    "want",
    "want",
    "promote",
    "version",
    "current",
    "version",
    "essence",
    "making",
    "version",
    "2",
    "version",
    "going",
    "run",
    "command",
    "gsutil",
    "cp",
    "going",
    "take",
    "older",
    "generation",
    "number",
    "going",
    "copy",
    "paste",
    "target",
    "going",
    "without",
    "generation",
    "number",
    "paste",
    "hit",
    "enter",
    "okay",
    "file",
    "copied",
    "going",
    "quick",
    "refresh",
    "console",
    "going",
    "drill",
    "file",
    "click",
    "url",
    "link",
    "come",
    "version",
    "way",
    "promote",
    "versions",
    "current",
    "versions",
    "using",
    "gsutil",
    "copy",
    "command",
    "gsutil",
    "move",
    "command",
    "going",
    "close",
    "tab",
    "going",
    "quickly",
    "clear",
    "screen",
    "run",
    "command",
    "gsutil",
    "ls",
    "minus",
    "see",
    "even",
    "files",
    "files",
    "versions",
    "files",
    "eventually",
    "accumulate",
    "continuously",
    "take",
    "space",
    "along",
    "costing",
    "money",
    "order",
    "mitigate",
    "good",
    "idea",
    "would",
    "put",
    "life",
    "cycle",
    "policies",
    "place",
    "gon",
    "na",
    "go",
    "ahead",
    "add",
    "life",
    "cycle",
    "policy",
    "bucket",
    "help",
    "manage",
    "accumulation",
    "files",
    "files",
    "added",
    "bucket",
    "versions",
    "produced",
    "something",
    "common",
    "seen",
    "many",
    "different",
    "environments",
    "going",
    "go",
    "ahead",
    "get",
    "done",
    "console",
    "going",
    "close",
    "cloud",
    "shell",
    "going",
    "go",
    "back",
    "main",
    "page",
    "bucket",
    "menu",
    "click",
    "lifecycle",
    "able",
    "add",
    "lifecycle",
    "rules",
    "going",
    "click",
    "add",
    "rule",
    "first",
    "thing",
    "prompted",
    "select",
    "action",
    "first",
    "rule",
    "going",
    "apply",
    "delete",
    "objects",
    "seven",
    "days",
    "gon",
    "na",
    "click",
    "delete",
    "object",
    "gon",
    "na",
    "prompted",
    "warning",
    "gon",
    "na",
    "hit",
    "continue",
    "prompted",
    "select",
    "object",
    "conditions",
    "discussed",
    "earlier",
    "lesson",
    "many",
    "conditions",
    "choose",
    "multiple",
    "conditions",
    "selected",
    "going",
    "select",
    "days",
    "since",
    "becoming",
    "empty",
    "field",
    "going",
    "type",
    "click",
    "continue",
    "click",
    "create",
    "wanted",
    "note",
    "life",
    "cycle",
    "rule",
    "take",
    "24",
    "hours",
    "take",
    "effect",
    "going",
    "click",
    "create",
    "see",
    "rule",
    "applied",
    "delete",
    "objects",
    "seven",
    "days",
    "object",
    "becomes",
    "added",
    "delete",
    "rule",
    "going",
    "go",
    "ahead",
    "add",
    "another",
    "rule",
    "move",
    "current",
    "files",
    "used",
    "storage",
    "class",
    "save",
    "company",
    "money",
    "let",
    "go",
    "ahead",
    "create",
    "another",
    "lifecycle",
    "rule",
    "time",
    "use",
    "set",
    "storage",
    "class",
    "action",
    "files",
    "accumulate",
    "90",
    "days",
    "want",
    "set",
    "storage",
    "class",
    "cold",
    "line",
    "way",
    "save",
    "money",
    "going",
    "click",
    "add",
    "rule",
    "going",
    "select",
    "set",
    "storage",
    "class",
    "cold",
    "line",
    "note",
    "says",
    "archive",
    "objects",
    "changed",
    "cold",
    "line",
    "move",
    "forward",
    "storage",
    "class",
    "ca",
    "move",
    "backwards",
    "words",
    "ca",
    "move",
    "cold",
    "line",
    "near",
    "line",
    "archive",
    "cold",
    "line",
    "move",
    "near",
    "line",
    "cold",
    "line",
    "cold",
    "line",
    "archive",
    "going",
    "go",
    "ahead",
    "click",
    "continue",
    "object",
    "conditions",
    "want",
    "select",
    "age",
    "field",
    "want",
    "enter",
    "90",
    "days",
    "want",
    "hit",
    "continue",
    "finally",
    "click",
    "create",
    "order",
    "actually",
    "see",
    "rules",
    "take",
    "effect",
    "like",
    "said",
    "take",
    "24",
    "hours",
    "end",
    "demo",
    "wanted",
    "show",
    "another",
    "way",
    "edit",
    "life",
    "cycle",
    "policy",
    "editing",
    "json",
    "file",
    "head",
    "top",
    "right",
    "open",
    "cloud",
    "shell",
    "going",
    "bring",
    "little",
    "bit",
    "going",
    "run",
    "command",
    "gsutil",
    "lifecycle",
    "get",
    "along",
    "bucket",
    "name",
    "output",
    "file",
    "called",
    "hit",
    "enter",
    "errors",
    "good",
    "sign",
    "next",
    "going",
    "run",
    "command",
    "ls",
    "see",
    "file",
    "written",
    "like",
    "edit",
    "file",
    "changes",
    "set",
    "cold",
    "line",
    "rule",
    "90",
    "days",
    "120",
    "days",
    "tony",
    "bowtie",
    "manager",
    "thinks",
    "keep",
    "files",
    "little",
    "bit",
    "longer",
    "sending",
    "coldline",
    "order",
    "edit",
    "file",
    "going",
    "run",
    "command",
    "sudo",
    "nano",
    "along",
    "name",
    "file",
    "hit",
    "enter",
    "going",
    "long",
    "string",
    "use",
    "arrow",
    "keys",
    "move",
    "back",
    "see",
    "set",
    "cold",
    "line",
    "rule",
    "age",
    "90",
    "days",
    "going",
    "move",
    "going",
    "edit",
    "120",
    "going",
    "hit",
    "ctrl",
    "save",
    "enter",
    "verify",
    "file",
    "name",
    "write",
    "ctrl",
    "x",
    "exit",
    "know",
    "also",
    "edit",
    "file",
    "cloud",
    "shell",
    "editor",
    "order",
    "put",
    "lifecycle",
    "policy",
    "place",
    "need",
    "set",
    "new",
    "lifecycle",
    "policy",
    "order",
    "going",
    "run",
    "command",
    "gsutil",
    "lifecycle",
    "set",
    "along",
    "name",
    "json",
    "file",
    "along",
    "bucket",
    "name",
    "hit",
    "enter",
    "looks",
    "like",
    "said",
    "going",
    "quick",
    "refresh",
    "console",
    "verify",
    "success",
    "rule",
    "changed",
    "90",
    "days",
    "120",
    "days",
    "congratulations",
    "completing",
    "demo",
    "lot",
    "experienced",
    "see",
    "architect",
    "exam",
    "cloud",
    "engineer",
    "exam",
    "focuses",
    "high",
    "level",
    "theory",
    "cloud",
    "storage",
    "features",
    "wanted",
    "show",
    "real",
    "life",
    "scenarios",
    "apply",
    "theory",
    "shown",
    "previous",
    "lessons",
    "practice",
    "recap",
    "set",
    "versioning",
    "current",
    "bucket",
    "working",
    "deleted",
    "file",
    "made",
    "brought",
    "back",
    "current",
    "edited",
    "file",
    "instance",
    "copied",
    "replace",
    "current",
    "version",
    "file",
    "bucket",
    "promoted",
    "version",
    "new",
    "one",
    "moved",
    "lifecycle",
    "rules",
    "created",
    "two",
    "separate",
    "rules",
    "created",
    "rule",
    "delete",
    "files",
    "along",
    "rule",
    "set",
    "storage",
    "class",
    "certain",
    "age",
    "file",
    "last",
    "step",
    "took",
    "copy",
    "lifecycle",
    "policy",
    "cloud",
    "shell",
    "edited",
    "policy",
    "set",
    "newer",
    "edited",
    "version",
    "pretty",
    "much",
    "covers",
    "demo",
    "object",
    "versioning",
    "lifecycle",
    "management",
    "congratulations",
    "job",
    "well",
    "done",
    "go",
    "make",
    "sure",
    "delete",
    "resources",
    "created",
    "past",
    "couple",
    "demos",
    "want",
    "make",
    "sure",
    "accumulating",
    "unnecessary",
    "costs",
    "going",
    "quick",
    "run",
    "deleting",
    "resources",
    "going",
    "quickly",
    "close",
    "cloud",
    "shell",
    "going",
    "head",
    "navigation",
    "menu",
    "go",
    "compute",
    "engine",
    "going",
    "delete",
    "instance",
    "going",
    "head",
    "back",
    "cloud",
    "storage",
    "delete",
    "bucket",
    "going",
    "confirm",
    "deletion",
    "going",
    "click",
    "delete",
    "covers",
    "deletion",
    "resources",
    "mark",
    "complete",
    "see",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "going",
    "covering",
    "cloud",
    "sql",
    "one",
    "google",
    "cloud",
    "many",
    "database",
    "offerings",
    "offers",
    "reliable",
    "secure",
    "scalable",
    "sql",
    "databases",
    "without",
    "worry",
    "complexity",
    "set",
    "quite",
    "bit",
    "cover",
    "said",
    "let",
    "dive",
    "cloud",
    "sql",
    "fully",
    "managed",
    "cloud",
    "native",
    "relational",
    "database",
    "service",
    "offers",
    "mysql",
    "postgres",
    "sql",
    "server",
    "engines",
    "support",
    "replication",
    "cloud",
    "sql",
    "database",
    "service",
    "offering",
    "google",
    "google",
    "takes",
    "care",
    "underlying",
    "infrastructure",
    "database",
    "along",
    "operating",
    "system",
    "database",
    "software",
    "different",
    "types",
    "database",
    "offerings",
    "google",
    "cloud",
    "sql",
    "designed",
    "low",
    "latency",
    "transactional",
    "relational",
    "database",
    "workloads",
    "also",
    "available",
    "three",
    "different",
    "flavors",
    "databases",
    "mysql",
    "postgres",
    "newest",
    "edition",
    "sql",
    "server",
    "support",
    "standard",
    "apis",
    "connectivity",
    "cloud",
    "sql",
    "offers",
    "replication",
    "using",
    "different",
    "types",
    "read",
    "replicas",
    "get",
    "little",
    "bit",
    "later",
    "offers",
    "capabilities",
    "high",
    "availability",
    "continuous",
    "access",
    "data",
    "cloud",
    "sql",
    "also",
    "offers",
    "backups",
    "two",
    "different",
    "flavors",
    "allows",
    "restore",
    "database",
    "backups",
    "amount",
    "ease",
    "along",
    "backups",
    "comes",
    "point",
    "time",
    "recovery",
    "want",
    "restore",
    "database",
    "specific",
    "point",
    "time",
    "cloud",
    "sql",
    "storage",
    "relies",
    "connected",
    "persistent",
    "disks",
    "zone",
    "available",
    "regular",
    "hard",
    "disk",
    "drives",
    "ssds",
    "currently",
    "give",
    "30",
    "terabytes",
    "storage",
    "capacity",
    "technologies",
    "lie",
    "background",
    "persistent",
    "disks",
    "automatic",
    "storage",
    "increase",
    "available",
    "resize",
    "disks",
    "storage",
    "cloud",
    "sql",
    "also",
    "offers",
    "encryption",
    "rest",
    "transit",
    "securing",
    "data",
    "entering",
    "leaving",
    "instance",
    "comes",
    "costs",
    "billed",
    "cpu",
    "memory",
    "storage",
    "instance",
    "along",
    "egress",
    "traffic",
    "well",
    "please",
    "aware",
    "licensing",
    "cost",
    "comes",
    "windows",
    "instances",
    "cloud",
    "sql",
    "instances",
    "available",
    "instance",
    "types",
    "compute",
    "engine",
    "available",
    "shared",
    "core",
    "standard",
    "high",
    "memory",
    "cpu",
    "types",
    "see",
    "clearly",
    "marked",
    "db",
    "beginning",
    "cpu",
    "type",
    "customize",
    "instances",
    "like",
    "compute",
    "engine",
    "memory",
    "choosing",
    "instance",
    "type",
    "storage",
    "types",
    "cloud",
    "sql",
    "available",
    "hard",
    "disk",
    "drives",
    "ssds",
    "able",
    "size",
    "according",
    "needs",
    "stated",
    "earlier",
    "sized",
    "30",
    "terabytes",
    "size",
    "entering",
    "danger",
    "zone",
    "full",
    "disk",
    "option",
    "enabling",
    "automatic",
    "storage",
    "increase",
    "never",
    "worry",
    "filling",
    "disk",
    "30",
    "terabyte",
    "limit",
    "comes",
    "connecting",
    "cloud",
    "sql",
    "instance",
    "configure",
    "public",
    "private",
    "ip",
    "know",
    "configuring",
    "instance",
    "private",
    "ip",
    "changed",
    "although",
    "connecting",
    "private",
    "ip",
    "preferred",
    "connecting",
    "client",
    "resource",
    "access",
    "vpc",
    "well",
    "always",
    "best",
    "practice",
    "use",
    "private",
    "p",
    "addresses",
    "database",
    "environment",
    "whenever",
    "moving",
    "authentication",
    "options",
    "recommended",
    "method",
    "connecting",
    "cloud",
    "sql",
    "instance",
    "using",
    "cloud",
    "sql",
    "proxy",
    "cloud",
    "sql",
    "proxy",
    "allows",
    "authorize",
    "secure",
    "connections",
    "using",
    "iam",
    "permissions",
    "unless",
    "using",
    "cloud",
    "sql",
    "proxy",
    "connections",
    "instance",
    "public",
    "ip",
    "address",
    "allowed",
    "connection",
    "comes",
    "authorized",
    "network",
    "authorized",
    "networks",
    "ip",
    "addresses",
    "ranges",
    "user",
    "specified",
    "permission",
    "connect",
    "authorized",
    "connect",
    "instance",
    "external",
    "clients",
    "applications",
    "even",
    "google",
    "cloud",
    "services",
    "like",
    "compute",
    "engine",
    "gke",
    "app",
    "engine",
    "cloud",
    "functions",
    "cloud",
    "run",
    "wanted",
    "focus",
    "moment",
    "recommended",
    "method",
    "connecting",
    "instance",
    "cloud",
    "sql",
    "proxy",
    "mentioned",
    "cloud",
    "sql",
    "proxy",
    "allows",
    "authorize",
    "secure",
    "connections",
    "using",
    "iam",
    "permissions",
    "proxy",
    "validates",
    "connections",
    "using",
    "credentials",
    "user",
    "service",
    "account",
    "wrapping",
    "connection",
    "ssl",
    "tls",
    "layer",
    "authorized",
    "cloud",
    "sql",
    "instance",
    "using",
    "cloud",
    "sql",
    "proxy",
    "recommended",
    "method",
    "authenticating",
    "connections",
    "cloud",
    "sql",
    "instance",
    "secure",
    "client",
    "proxy",
    "open",
    "source",
    "library",
    "distributed",
    "executable",
    "binary",
    "available",
    "linux",
    "macos",
    "windows",
    "client",
    "proxy",
    "acts",
    "intermediary",
    "server",
    "listens",
    "incoming",
    "connections",
    "wraps",
    "ssl",
    "tls",
    "passes",
    "cloud",
    "sql",
    "instance",
    "cloud",
    "sql",
    "proxy",
    "handles",
    "authentication",
    "cloud",
    "sql",
    "providing",
    "secure",
    "access",
    "cloud",
    "sql",
    "instances",
    "without",
    "need",
    "manage",
    "allowed",
    "ip",
    "addresses",
    "configure",
    "ssl",
    "connections",
    "well",
    "also",
    "best",
    "solution",
    "applications",
    "hold",
    "ephemeral",
    "eyepiece",
    "proxy",
    "listen",
    "port",
    "creates",
    "outgoing",
    "connections",
    "cloud",
    "sql",
    "instance",
    "port",
    "3307",
    "comes",
    "database",
    "replication",
    "copying",
    "data",
    "one",
    "database",
    "another",
    "primary",
    "reason",
    "using",
    "replication",
    "scale",
    "use",
    "data",
    "database",
    "without",
    "degrading",
    "performance",
    "reasons",
    "include",
    "migrating",
    "data",
    "regions",
    "platforms",
    "database",
    "cloud",
    "sql",
    "could",
    "also",
    "promote",
    "replica",
    "original",
    "instance",
    "becomes",
    "corrupted",
    "getting",
    "promoting",
    "replicas",
    "little",
    "bit",
    "later",
    "comes",
    "cloud",
    "sql",
    "instance",
    "instance",
    "replicated",
    "called",
    "primary",
    "instance",
    "copies",
    "called",
    "read",
    "replicas",
    "primary",
    "instance",
    "read",
    "replicas",
    "reside",
    "cloud",
    "sql",
    "read",
    "replicas",
    "write",
    "read",
    "replica",
    "processes",
    "queries",
    "read",
    "requests",
    "analytics",
    "traffics",
    "thus",
    "reducing",
    "load",
    "primary",
    "instance",
    "read",
    "replicas",
    "cpus",
    "memory",
    "primary",
    "instance",
    "less",
    "10",
    "read",
    "replicas",
    "per",
    "primary",
    "instance",
    "connect",
    "replica",
    "directly",
    "using",
    "connection",
    "name",
    "ip",
    "address",
    "cloud",
    "sql",
    "supports",
    "following",
    "types",
    "replicas",
    "read",
    "replicas",
    "cross",
    "region",
    "read",
    "replicas",
    "external",
    "read",
    "replicas",
    "cloud",
    "sql",
    "replicas",
    "replicating",
    "external",
    "server",
    "comes",
    "read",
    "replicas",
    "would",
    "use",
    "offload",
    "work",
    "cloud",
    "sql",
    "instance",
    "read",
    "replica",
    "exact",
    "copy",
    "primary",
    "instance",
    "data",
    "changes",
    "primary",
    "instance",
    "updated",
    "almost",
    "real",
    "time",
    "read",
    "replica",
    "read",
    "replica",
    "created",
    "different",
    "region",
    "primary",
    "instance",
    "create",
    "cross",
    "region",
    "read",
    "replica",
    "way",
    "would",
    "create",
    "replica",
    "improves",
    "read",
    "performance",
    "making",
    "replicas",
    "available",
    "closer",
    "application",
    "region",
    "also",
    "provides",
    "additional",
    "disaster",
    "recovery",
    "capability",
    "guard",
    "regional",
    "failure",
    "also",
    "lets",
    "migrate",
    "data",
    "one",
    "region",
    "another",
    "minimum",
    "downtime",
    "lastly",
    "comes",
    "external",
    "read",
    "replicas",
    "external",
    "mysql",
    "instances",
    "replicate",
    "cloud",
    "sql",
    "primary",
    "instance",
    "example",
    "mysql",
    "instance",
    "running",
    "compute",
    "engine",
    "considered",
    "external",
    "instance",
    "quick",
    "note",
    "create",
    "read",
    "replica",
    "primary",
    "cloud",
    "sql",
    "instance",
    "instance",
    "must",
    "meet",
    "following",
    "requirements",
    "automated",
    "backups",
    "must",
    "enabled",
    "binary",
    "logging",
    "must",
    "enabled",
    "requires",
    "recovery",
    "enabled",
    "least",
    "one",
    "backup",
    "must",
    "created",
    "binary",
    "logging",
    "enabled",
    "read",
    "replicas",
    "environment",
    "gives",
    "flexibility",
    "promoting",
    "replicas",
    "needed",
    "promoting",
    "replicas",
    "feature",
    "used",
    "primary",
    "database",
    "becomes",
    "corrupted",
    "unreachable",
    "promote",
    "read",
    "replica",
    "depending",
    "read",
    "replicas",
    "hosted",
    "promote",
    "read",
    "replica",
    "instance",
    "stops",
    "replication",
    "converts",
    "instance",
    "standalone",
    "cloud",
    "sql",
    "primary",
    "instance",
    "read",
    "write",
    "capabilities",
    "please",
    "note",
    "undone",
    "also",
    "note",
    "new",
    "primary",
    "instance",
    "started",
    "read",
    "replicas",
    "transferred",
    "old",
    "primary",
    "instance",
    "need",
    "reconnect",
    "read",
    "replicas",
    "new",
    "primary",
    "instance",
    "see",
    "promoting",
    "replica",
    "done",
    "manually",
    "intentionally",
    "whereas",
    "high",
    "availability",
    "standby",
    "instance",
    "automatically",
    "becomes",
    "primary",
    "case",
    "failure",
    "horizontal",
    "outage",
    "comes",
    "promoting",
    "replicas",
    "two",
    "common",
    "scenarios",
    "promotion",
    "regional",
    "migration",
    "performs",
    "planned",
    "migration",
    "database",
    "different",
    "region",
    "disaster",
    "recovery",
    "would",
    "fail",
    "database",
    "another",
    "region",
    "event",
    "primary",
    "instances",
    "region",
    "becomes",
    "unavailable",
    "use",
    "cases",
    "involve",
    "setting",
    "replication",
    "promoting",
    "replica",
    "main",
    "difference",
    "whether",
    "promotion",
    "replica",
    "planned",
    "unplanned",
    "promoting",
    "replicas",
    "regional",
    "migration",
    "use",
    "cross",
    "region",
    "replica",
    "migrate",
    "database",
    "another",
    "region",
    "minimal",
    "downtime",
    "create",
    "replica",
    "another",
    "region",
    "wait",
    "replication",
    "catches",
    "promote",
    "direct",
    "applications",
    "newly",
    "promoted",
    "instance",
    "steps",
    "involved",
    "promotion",
    "promoting",
    "replica",
    "promoting",
    "replicas",
    "disaster",
    "recovery",
    "replicas",
    "used",
    "part",
    "disaster",
    "recovery",
    "procedure",
    "promote",
    "replica",
    "fail",
    "another",
    "region",
    "primary",
    "instances",
    "region",
    "become",
    "unavailable",
    "extended",
    "period",
    "time",
    "example",
    "entire",
    "east",
    "1",
    "region",
    "gone",
    "yet",
    "reed",
    "replica",
    "europe",
    "region",
    "still",
    "running",
    "although",
    "may",
    "little",
    "bit",
    "latency",
    "customers",
    "north",
    "america",
    "able",
    "promote",
    "read",
    "replica",
    "connect",
    "needed",
    "resources",
    "get",
    "back",
    "business",
    "moving",
    "along",
    "high",
    "availability",
    "cloud",
    "sql",
    "offers",
    "aha",
    "capabilities",
    "box",
    "aha",
    "configuration",
    "sometimes",
    "called",
    "cluster",
    "provides",
    "data",
    "redundancy",
    "cloud",
    "sql",
    "instance",
    "configured",
    "ha",
    "also",
    "called",
    "regional",
    "instance",
    "located",
    "primary",
    "secondary",
    "zone",
    "within",
    "configured",
    "region",
    "within",
    "regional",
    "instance",
    "configuration",
    "made",
    "primary",
    "instance",
    "standby",
    "instance",
    "synchronous",
    "replication",
    "zone",
    "persistent",
    "disk",
    "rights",
    "made",
    "primary",
    "instance",
    "also",
    "made",
    "standby",
    "instance",
    "second",
    "primary",
    "instance",
    "writes",
    "system",
    "database",
    "heartbeat",
    "signal",
    "multiple",
    "heartbeats",
    "detected",
    "failover",
    "initiated",
    "instance",
    "becomes",
    "unresponsive",
    "cloud",
    "sql",
    "automatically",
    "switches",
    "serving",
    "data",
    "standby",
    "instance",
    "called",
    "failover",
    "example",
    "primary",
    "instance",
    "zone",
    "fails",
    "failover",
    "initiated",
    "primary",
    "instance",
    "unresponsive",
    "approximately",
    "60",
    "seconds",
    "zone",
    "containing",
    "primary",
    "instance",
    "experiences",
    "outage",
    "failover",
    "initiate",
    "standby",
    "instance",
    "immediately",
    "starts",
    "serving",
    "data",
    "upon",
    "reconnection",
    "shared",
    "static",
    "ip",
    "address",
    "primary",
    "instance",
    "standby",
    "instance",
    "serves",
    "data",
    "secondary",
    "zone",
    "primary",
    "instance",
    "available",
    "fail",
    "back",
    "happen",
    "traffic",
    "redirected",
    "back",
    "primary",
    "instance",
    "standby",
    "instance",
    "go",
    "back",
    "standby",
    "mode",
    "well",
    "regional",
    "persistent",
    "disk",
    "pick",
    "replication",
    "persistent",
    "disk",
    "zone",
    "regards",
    "billing",
    "ha",
    "configured",
    "instance",
    "charged",
    "double",
    "price",
    "standalone",
    "instance",
    "includes",
    "cpu",
    "ram",
    "storage",
    "also",
    "note",
    "standby",
    "instance",
    "used",
    "read",
    "queries",
    "differs",
    "read",
    "replicas",
    "well",
    "important",
    "note",
    "automatic",
    "backups",
    "point",
    "time",
    "recovery",
    "must",
    "enabled",
    "high",
    "availability",
    "last",
    "topic",
    "wanted",
    "touch",
    "backups",
    "backups",
    "help",
    "restore",
    "lost",
    "data",
    "cloud",
    "sql",
    "instance",
    "also",
    "restore",
    "instance",
    "problems",
    "backup",
    "enable",
    "backups",
    "instance",
    "contains",
    "necessary",
    "data",
    "backups",
    "protect",
    "data",
    "loss",
    "damage",
    "enabling",
    "automated",
    "backups",
    "along",
    "binary",
    "logging",
    "also",
    "required",
    "operations",
    "clone",
    "replica",
    "creation",
    "default",
    "cloud",
    "sql",
    "stores",
    "backup",
    "data",
    "two",
    "regions",
    "redundancy",
    "one",
    "region",
    "region",
    "instance",
    "different",
    "region",
    "two",
    "regions",
    "continent",
    "backup",
    "data",
    "remains",
    "continent",
    "cloud",
    "sql",
    "also",
    "lets",
    "select",
    "custom",
    "location",
    "backup",
    "data",
    "great",
    "need",
    "comply",
    "data",
    "residency",
    "regulations",
    "business",
    "cloud",
    "sql",
    "performs",
    "two",
    "types",
    "backups",
    "backups",
    "automated",
    "backups",
    "backups",
    "create",
    "backup",
    "time",
    "useful",
    "making",
    "risky",
    "changes",
    "may",
    "go",
    "sideways",
    "always",
    "create",
    "backups",
    "instance",
    "whether",
    "instance",
    "automatic",
    "backups",
    "enabled",
    "backups",
    "persist",
    "delete",
    "instance",
    "deleted",
    "comes",
    "automated",
    "backups",
    "use",
    "four",
    "hour",
    "backup",
    "window",
    "backups",
    "start",
    "backup",
    "window",
    "note",
    "possible",
    "schedule",
    "backups",
    "instance",
    "least",
    "activity",
    "automated",
    "backups",
    "occur",
    "every",
    "day",
    "instance",
    "running",
    "time",
    "36",
    "hour",
    "window",
    "default",
    "seven",
    "recent",
    "backups",
    "retained",
    "also",
    "configure",
    "many",
    "automated",
    "backups",
    "retain",
    "1",
    "touched",
    "topic",
    "many",
    "times",
    "lesson",
    "wanted",
    "highlight",
    "second",
    "recovery",
    "recovery",
    "helps",
    "recover",
    "instance",
    "specific",
    "point",
    "time",
    "example",
    "error",
    "causes",
    "loss",
    "data",
    "recover",
    "database",
    "state",
    "error",
    "happened",
    "point",
    "time",
    "recovery",
    "always",
    "creates",
    "new",
    "instance",
    "perform",
    "point",
    "time",
    "recovery",
    "existing",
    "instance",
    "point",
    "time",
    "recovery",
    "enabled",
    "default",
    "create",
    "new",
    "cloud",
    "sql",
    "instance",
    "comes",
    "billing",
    "default",
    "cloud",
    "sql",
    "retains",
    "seven",
    "days",
    "automated",
    "backups",
    "plus",
    "backups",
    "instance",
    "know",
    "lot",
    "retain",
    "lesson",
    "cloud",
    "sql",
    "sure",
    "concepts",
    "knowing",
    "difference",
    "well",
    "use",
    "feature",
    "sure",
    "help",
    "exam",
    "along",
    "giving",
    "knowledge",
    "need",
    "use",
    "cloud",
    "sql",
    "role",
    "cloud",
    "engineer",
    "pretty",
    "much",
    "cover",
    "comes",
    "cloud",
    "sql",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "welcome",
    "back",
    "lesson",
    "wanted",
    "touch",
    "google",
    "cloud",
    "global",
    "relational",
    "database",
    "called",
    "cloud",
    "spanner",
    "cloud",
    "spanner",
    "ways",
    "cloud",
    "sql",
    "comes",
    "asset",
    "transactions",
    "sql",
    "querying",
    "strong",
    "consistency",
    "differs",
    "way",
    "data",
    "handled",
    "hood",
    "cloud",
    "sql",
    "knowing",
    "database",
    "high",
    "level",
    "needed",
    "exam",
    "going",
    "bit",
    "detail",
    "give",
    "better",
    "understanding",
    "works",
    "said",
    "let",
    "dive",
    "cloud",
    "spanner",
    "fully",
    "managed",
    "relational",
    "database",
    "service",
    "strongly",
    "consistent",
    "horizontally",
    "scalable",
    "cloud",
    "spanner",
    "another",
    "database",
    "service",
    "offering",
    "google",
    "strips",
    "away",
    "headaches",
    "setting",
    "maintaining",
    "infrastructure",
    "software",
    "needed",
    "run",
    "database",
    "cloud",
    "strongly",
    "consistent",
    "context",
    "data",
    "get",
    "passed",
    "replicas",
    "soon",
    "write",
    "request",
    "comes",
    "one",
    "replicas",
    "database",
    "cloud",
    "spanner",
    "uses",
    "truetime",
    "highly",
    "available",
    "distributed",
    "atomic",
    "clock",
    "system",
    "provided",
    "applications",
    "google",
    "servers",
    "applies",
    "time",
    "stamp",
    "every",
    "transaction",
    "commit",
    "transactions",
    "regions",
    "always",
    "executed",
    "sequentially",
    "cloud",
    "spanner",
    "distribute",
    "manage",
    "data",
    "global",
    "scale",
    "support",
    "globally",
    "consistent",
    "reads",
    "along",
    "strongly",
    "consistent",
    "distributed",
    "transactions",
    "fully",
    "managed",
    "cloud",
    "spanner",
    "handles",
    "replicas",
    "needed",
    "availability",
    "data",
    "optimizes",
    "performance",
    "automatically",
    "sharding",
    "data",
    "based",
    "request",
    "load",
    "size",
    "data",
    "part",
    "cloud",
    "spanner",
    "high",
    "availability",
    "due",
    "automatic",
    "synchronous",
    "data",
    "replication",
    "replicas",
    "independent",
    "zones",
    "cloud",
    "spanner",
    "scales",
    "horizontally",
    "automatically",
    "within",
    "regions",
    "also",
    "scale",
    "across",
    "regions",
    "workloads",
    "higher",
    "availability",
    "requirements",
    "making",
    "data",
    "available",
    "faster",
    "users",
    "global",
    "scale",
    "along",
    "node",
    "redundancy",
    "quietly",
    "added",
    "every",
    "node",
    "deployed",
    "instance",
    "quickly",
    "add",
    "features",
    "cloud",
    "spanner",
    "wonder",
    "available",
    "achieve",
    "five",
    "nines",
    "availability",
    "instance",
    "four",
    "nines",
    "availability",
    "regional",
    "instance",
    "cloud",
    "spanner",
    "highly",
    "secure",
    "offers",
    "data",
    "layer",
    "encryption",
    "audit",
    "logging",
    "iam",
    "integration",
    "cloud",
    "spanner",
    "designed",
    "fit",
    "needs",
    "specific",
    "industries",
    "financial",
    "services",
    "ad",
    "tech",
    "retail",
    "global",
    "supply",
    "chain",
    "along",
    "gaming",
    "pricing",
    "cloud",
    "spanner",
    "comes",
    "90",
    "cents",
    "per",
    "node",
    "per",
    "hour",
    "cost",
    "storage",
    "coming",
    "30",
    "cents",
    "per",
    "gigabyte",
    "per",
    "month",
    "definitely",
    "cheap",
    "features",
    "plentiful",
    "exam",
    "want",
    "take",
    "moment",
    "dive",
    "architecture",
    "bit",
    "context",
    "database",
    "different",
    "breed",
    "typical",
    "sql",
    "database",
    "use",
    "cloud",
    "spanner",
    "must",
    "first",
    "create",
    "cloud",
    "spanner",
    "instance",
    "instance",
    "allocation",
    "resources",
    "used",
    "cloud",
    "spanner",
    "databases",
    "created",
    "instance",
    "instance",
    "creation",
    "includes",
    "two",
    "important",
    "choices",
    "instance",
    "configuration",
    "node",
    "count",
    "choices",
    "determine",
    "location",
    "amount",
    "instances",
    "cpu",
    "memory",
    "along",
    "storage",
    "resources",
    "configuration",
    "choice",
    "permanent",
    "instance",
    "node",
    "count",
    "changed",
    "later",
    "needed",
    "instance",
    "configuration",
    "defines",
    "geographic",
    "placement",
    "replication",
    "database",
    "instance",
    "either",
    "regional",
    "please",
    "note",
    "choose",
    "configuration",
    "allows",
    "replicate",
    "databases",
    "data",
    "multiple",
    "zones",
    "multiple",
    "zones",
    "across",
    "multiple",
    "regions",
    "comes",
    "node",
    "count",
    "determines",
    "number",
    "nodes",
    "allocate",
    "instance",
    "nodes",
    "allocate",
    "amount",
    "cpu",
    "memory",
    "storage",
    "needed",
    "instance",
    "either",
    "increase",
    "throughput",
    "storage",
    "capacity",
    "instance",
    "types",
    "choose",
    "like",
    "cloud",
    "sql",
    "need",
    "power",
    "simply",
    "add",
    "another",
    "node",
    "regional",
    "configuration",
    "cloud",
    "spanner",
    "maintains",
    "exactly",
    "three",
    "read",
    "write",
    "replicas",
    "within",
    "different",
    "zone",
    "region",
    "read",
    "write",
    "replica",
    "contains",
    "full",
    "copy",
    "operational",
    "database",
    "able",
    "serve",
    "rewrite",
    "read",
    "requests",
    "cloud",
    "spanner",
    "uses",
    "replicas",
    "different",
    "zones",
    "single",
    "zone",
    "failure",
    "occurs",
    "database",
    "remains",
    "available",
    "instance",
    "configuration",
    "instance",
    "allotted",
    "combination",
    "four",
    "read",
    "write",
    "read",
    "replicas",
    "note",
    "three",
    "node",
    "configuration",
    "minimum",
    "recommended",
    "production",
    "google",
    "cloud",
    "spanner",
    "gets",
    "populated",
    "data",
    "sharding",
    "happens",
    "also",
    "known",
    "split",
    "cloud",
    "spanner",
    "creates",
    "replicas",
    "database",
    "split",
    "improve",
    "performance",
    "availability",
    "data",
    "split",
    "physically",
    "stored",
    "together",
    "replica",
    "cloud",
    "spanner",
    "serves",
    "replica",
    "independent",
    "failure",
    "zone",
    "within",
    "replica",
    "set",
    "one",
    "replica",
    "elected",
    "act",
    "leader",
    "leader",
    "replicas",
    "responsible",
    "handling",
    "rights",
    "read",
    "write",
    "read",
    "replica",
    "serve",
    "read",
    "request",
    "without",
    "communicating",
    "leader",
    "inner",
    "workings",
    "cloud",
    "spanner",
    "high",
    "level",
    "meant",
    "confuse",
    "give",
    "better",
    "context",
    "cloud",
    "spanner",
    "although",
    "relational",
    "sql",
    "database",
    "different",
    "cloud",
    "sql",
    "cousin",
    "ending",
    "lesson",
    "wanted",
    "touch",
    "node",
    "performance",
    "quick",
    "moment",
    "cloud",
    "spanner",
    "node",
    "provide",
    "10",
    "000",
    "queries",
    "per",
    "second",
    "qps",
    "reads",
    "2000",
    "qps",
    "writes",
    "node",
    "provides",
    "two",
    "terabytes",
    "storage",
    "need",
    "scale",
    "serving",
    "storage",
    "resources",
    "instance",
    "add",
    "nodes",
    "instance",
    "remember",
    "noted",
    "earlier",
    "adding",
    "node",
    "increase",
    "number",
    "replicas",
    "rather",
    "increases",
    "resources",
    "replica",
    "instance",
    "adding",
    "nodes",
    "gives",
    "replica",
    "cpu",
    "ram",
    "increases",
    "replicas",
    "throughput",
    "looking",
    "scale",
    "automatically",
    "scale",
    "numbers",
    "nodes",
    "instance",
    "based",
    "cloud",
    "monitoring",
    "metrics",
    "cpu",
    "storage",
    "utilization",
    "conjunction",
    "using",
    "cloud",
    "functions",
    "trigger",
    "deciding",
    "relational",
    "database",
    "provides",
    "global",
    "distribution",
    "horizontally",
    "scalable",
    "handles",
    "transactional",
    "workloads",
    "google",
    "cloud",
    "cloud",
    "spanner",
    "always",
    "obvious",
    "choice",
    "cloud",
    "sql",
    "pretty",
    "much",
    "cover",
    "comes",
    "overview",
    "cloud",
    "spanner",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "available",
    "nosql",
    "databases",
    "available",
    "google",
    "cloud",
    "lesson",
    "meant",
    "another",
    "overview",
    "familiarize",
    "nosql",
    "database",
    "options",
    "show",
    "exam",
    "lesson",
    "meant",
    "go",
    "depth",
    "databases",
    "overview",
    "give",
    "good",
    "understanding",
    "features",
    "available",
    "use",
    "cases",
    "said",
    "let",
    "dive",
    "four",
    "managed",
    "nosql",
    "databases",
    "available",
    "google",
    "cloud",
    "briefly",
    "going",
    "starting",
    "discussing",
    "bigtable",
    "cloud",
    "bigtable",
    "fully",
    "managed",
    "wide",
    "column",
    "nosql",
    "database",
    "designed",
    "terabyte",
    "petabyte",
    "scale",
    "workloads",
    "offers",
    "low",
    "latency",
    "high",
    "throughput",
    "bigtable",
    "built",
    "application",
    "serving",
    "workloads",
    "well",
    "analytical",
    "workloads",
    "cloud",
    "bigtable",
    "regional",
    "service",
    "using",
    "replication",
    "copy",
    "stored",
    "different",
    "zone",
    "region",
    "durability",
    "cloud",
    "bigtable",
    "designed",
    "storing",
    "large",
    "amounts",
    "single",
    "keyed",
    "data",
    "still",
    "able",
    "provide",
    "low",
    "latency",
    "throughput",
    "scales",
    "linearly",
    "increase",
    "queries",
    "per",
    "second",
    "adding",
    "bigtable",
    "nodes",
    "need",
    "bigtable",
    "throughput",
    "dynamically",
    "adjusted",
    "adding",
    "removing",
    "cluster",
    "nodes",
    "without",
    "restarting",
    "meaning",
    "increase",
    "size",
    "bigtable",
    "cluster",
    "hours",
    "handle",
    "large",
    "load",
    "reduce",
    "cluster",
    "size",
    "without",
    "downtime",
    "bigtable",
    "ideal",
    "source",
    "map",
    "reduce",
    "operations",
    "integrates",
    "easily",
    "existing",
    "big",
    "data",
    "tools",
    "hadoop",
    "dataproc",
    "dataflow",
    "along",
    "apache",
    "hbase",
    "comes",
    "price",
    "bigtable",
    "definitely",
    "joke",
    "pricing",
    "bigtable",
    "starts",
    "65",
    "cents",
    "per",
    "hour",
    "per",
    "node",
    "450",
    "dollars",
    "month",
    "one",
    "node",
    "configuration",
    "data",
    "use",
    "bigtable",
    "store",
    "query",
    "following",
    "types",
    "data",
    "cpu",
    "memory",
    "usage",
    "time",
    "multiple",
    "servers",
    "marketing",
    "data",
    "purchase",
    "histories",
    "customer",
    "preferences",
    "financial",
    "data",
    "transaction",
    "histories",
    "stock",
    "prices",
    "currency",
    "exchange",
    "rates",
    "iot",
    "data",
    "internet",
    "things",
    "usage",
    "reports",
    "energy",
    "meters",
    "home",
    "appliances",
    "lastly",
    "graph",
    "data",
    "information",
    "users",
    "connected",
    "one",
    "another",
    "cloud",
    "bigtable",
    "excels",
    "storage",
    "engine",
    "batch",
    "mapreduce",
    "operations",
    "stream",
    "processing",
    "analytics",
    "well",
    "used",
    "storage",
    "machine",
    "learning",
    "applications",
    "moving",
    "next",
    "nosql",
    "database",
    "cloud",
    "datastore",
    "cloud",
    "datastore",
    "highly",
    "scalable",
    "nosql",
    "document",
    "database",
    "built",
    "automatic",
    "scaling",
    "high",
    "performance",
    "ease",
    "application",
    "development",
    "datastore",
    "redundant",
    "within",
    "location",
    "minimize",
    "impact",
    "points",
    "failures",
    "therefore",
    "offer",
    "high",
    "availability",
    "reads",
    "rights",
    "cloud",
    "datastore",
    "execute",
    "atomic",
    "transactions",
    "set",
    "operations",
    "either",
    "succeed",
    "none",
    "occur",
    "cloud",
    "datastore",
    "uses",
    "distributed",
    "architecture",
    "automatically",
    "manage",
    "scaling",
    "never",
    "worry",
    "scaling",
    "manually",
    "well",
    "unique",
    "cloud",
    "datastore",
    "query",
    "language",
    "available",
    "called",
    "gql",
    "also",
    "known",
    "gql",
    "gql",
    "maps",
    "roughly",
    "sql",
    "however",
    "sql",
    "role",
    "column",
    "lookup",
    "limited",
    "single",
    "value",
    "whereas",
    "gql",
    "property",
    "multiple",
    "value",
    "property",
    "consistency",
    "model",
    "allows",
    "application",
    "handle",
    "large",
    "amounts",
    "data",
    "users",
    "still",
    "able",
    "deliver",
    "great",
    "user",
    "experience",
    "data",
    "automatically",
    "encrypted",
    "written",
    "disk",
    "automatically",
    "decrypted",
    "read",
    "authorized",
    "user",
    "reflect",
    "exam",
    "yet",
    "updating",
    "lesson",
    "happens",
    "firestore",
    "newest",
    "version",
    "datastore",
    "introduces",
    "several",
    "improvements",
    "datastore",
    "existing",
    "datastore",
    "users",
    "access",
    "improvements",
    "creating",
    "new",
    "firestore",
    "database",
    "instance",
    "datastore",
    "mode",
    "near",
    "future",
    "existing",
    "datastore",
    "databases",
    "automatically",
    "upgraded",
    "firestore",
    "datastore",
    "mode",
    "moving",
    "right",
    "along",
    "cloud",
    "datastore",
    "holds",
    "really",
    "cool",
    "feature",
    "developers",
    "called",
    "datastore",
    "emulator",
    "provides",
    "local",
    "emulation",
    "production",
    "datastore",
    "environment",
    "use",
    "develop",
    "test",
    "application",
    "locally",
    "component",
    "google",
    "cloud",
    "sdks",
    "gcloud",
    "tool",
    "installed",
    "using",
    "gcloud",
    "components",
    "install",
    "command",
    "discussed",
    "earlier",
    "course",
    "moving",
    "use",
    "cases",
    "datastore",
    "ideal",
    "applications",
    "rely",
    "highly",
    "available",
    "structured",
    "data",
    "scale",
    "use",
    "datastore",
    "things",
    "like",
    "product",
    "catalogs",
    "provide",
    "inventory",
    "product",
    "details",
    "retailer",
    "user",
    "profiles",
    "deliver",
    "customized",
    "experience",
    "based",
    "user",
    "past",
    "activities",
    "preferences",
    "well",
    "transactions",
    "based",
    "asset",
    "properties",
    "example",
    "transferring",
    "funds",
    "one",
    "bank",
    "account",
    "another",
    "next",
    "firestore",
    "firebase",
    "flexible",
    "scalable",
    "nosql",
    "cloud",
    "database",
    "store",
    "sync",
    "data",
    "client",
    "server",
    "side",
    "development",
    "available",
    "native",
    "c",
    "plus",
    "unity",
    "java",
    "go",
    "python",
    "sdks",
    "addition",
    "rest",
    "rpc",
    "apis",
    "pretty",
    "much",
    "covering",
    "gamut",
    "major",
    "programming",
    "languages",
    "cloud",
    "firestore",
    "store",
    "data",
    "documents",
    "contain",
    "fields",
    "mapping",
    "values",
    "documents",
    "stored",
    "collections",
    "containers",
    "documents",
    "use",
    "organize",
    "data",
    "build",
    "queries",
    "documents",
    "support",
    "many",
    "different",
    "data",
    "types",
    "well",
    "also",
    "create",
    "sub",
    "collections",
    "within",
    "documents",
    "build",
    "hierarchical",
    "data",
    "structures",
    "cloud",
    "firestore",
    "serverless",
    "absolutely",
    "servers",
    "manage",
    "update",
    "maintain",
    "automatic",
    "replication",
    "strong",
    "consistency",
    "google",
    "able",
    "hold",
    "five",
    "nines",
    "availability",
    "guarantee",
    "comes",
    "querying",
    "cloud",
    "firestore",
    "expressive",
    "efficient",
    "flexible",
    "create",
    "shallow",
    "queries",
    "retrieve",
    "data",
    "document",
    "level",
    "without",
    "needing",
    "retrieve",
    "entire",
    "collection",
    "nested",
    "subcollections",
    "cloud",
    "firestore",
    "uses",
    "data",
    "synchronization",
    "update",
    "data",
    "real",
    "time",
    "connected",
    "device",
    "well",
    "also",
    "caches",
    "data",
    "application",
    "actively",
    "using",
    "application",
    "write",
    "read",
    "listen",
    "query",
    "data",
    "even",
    "device",
    "offline",
    "device",
    "comes",
    "back",
    "online",
    "cloud",
    "firestore",
    "synchronizes",
    "local",
    "changes",
    "back",
    "cloud",
    "firestore",
    "also",
    "secure",
    "data",
    "cloud",
    "firestore",
    "firebase",
    "authentication",
    "cloud",
    "firestore",
    "security",
    "rules",
    "android",
    "ios",
    "javascript",
    "use",
    "iam",
    "server",
    "side",
    "languages",
    "comes",
    "costs",
    "firestore",
    "falls",
    "always",
    "available",
    "free",
    "tier",
    "use",
    "one",
    "database",
    "holding",
    "five",
    "gigabytes",
    "need",
    "move",
    "paid",
    "option",
    "firebase",
    "also",
    "another",
    "database",
    "sharing",
    "similar",
    "features",
    "like",
    "servers",
    "deploy",
    "maintain",
    "updates",
    "along",
    "free",
    "tier",
    "database",
    "called",
    "real",
    "time",
    "database",
    "used",
    "basic",
    "querying",
    "simple",
    "data",
    "structure",
    "keeping",
    "things",
    "one",
    "database",
    "something",
    "like",
    "call",
    "firestore",
    "lite",
    "real",
    "time",
    "database",
    "show",
    "exam",
    "wanted",
    "bring",
    "light",
    "part",
    "firebase",
    "family",
    "know",
    "use",
    "databases",
    "within",
    "firebase",
    "application",
    "project",
    "store",
    "types",
    "data",
    "client",
    "libraries",
    "work",
    "similar",
    "manner",
    "hold",
    "updates",
    "although",
    "firebase",
    "development",
    "platform",
    "database",
    "service",
    "wanted",
    "give",
    "quick",
    "mention",
    "unfamiliar",
    "firestore",
    "firebase",
    "firebase",
    "mobile",
    "application",
    "development",
    "platform",
    "provides",
    "tools",
    "cloud",
    "services",
    "help",
    "enable",
    "developers",
    "develop",
    "applications",
    "faster",
    "easily",
    "since",
    "ties",
    "nicely",
    "firestore",
    "becomes",
    "perfect",
    "platform",
    "mobile",
    "application",
    "development",
    "okay",
    "moving",
    "last",
    "nosql",
    "database",
    "memorystore",
    "memorystore",
    "fully",
    "managed",
    "service",
    "google",
    "cloud",
    "either",
    "redis",
    "memcached",
    "memory",
    "datastore",
    "build",
    "application",
    "caches",
    "common",
    "service",
    "used",
    "many",
    "production",
    "environments",
    "specifically",
    "need",
    "caching",
    "arises",
    "memory",
    "store",
    "automates",
    "administration",
    "tasks",
    "redis",
    "memcached",
    "like",
    "enabling",
    "high",
    "availability",
    "failover",
    "patching",
    "monitoring",
    "comes",
    "memory",
    "store",
    "redis",
    "instances",
    "standard",
    "tier",
    "replicated",
    "across",
    "zones",
    "monitored",
    "health",
    "fast",
    "automatic",
    "failover",
    "standard",
    "tier",
    "instances",
    "also",
    "provide",
    "sla",
    "three",
    "nines",
    "availability",
    "memory",
    "store",
    "redis",
    "also",
    "provides",
    "ability",
    "scale",
    "instant",
    "sizes",
    "seamlessly",
    "start",
    "small",
    "increase",
    "size",
    "instance",
    "needed",
    "memory",
    "store",
    "protected",
    "internet",
    "using",
    "vpc",
    "networks",
    "private",
    "ip",
    "also",
    "comes",
    "iam",
    "integration",
    "systems",
    "monitored",
    "around",
    "clock",
    "ensuring",
    "data",
    "protected",
    "times",
    "know",
    "versions",
    "always",
    "kept",
    "date",
    "latest",
    "critical",
    "patches",
    "ensuring",
    "instances",
    "secure",
    "comes",
    "use",
    "cases",
    "course",
    "first",
    "thing",
    "see",
    "caching",
    "main",
    "reason",
    "use",
    "memory",
    "store",
    "provides",
    "low",
    "latency",
    "access",
    "high",
    "throughput",
    "heavily",
    "accessed",
    "data",
    "compared",
    "accessing",
    "data",
    "disk",
    "common",
    "examples",
    "caching",
    "session",
    "management",
    "frequently",
    "accessed",
    "queries",
    "scripts",
    "pages",
    "using",
    "memory",
    "store",
    "leaderboards",
    "gaming",
    "common",
    "use",
    "case",
    "gaming",
    "industry",
    "well",
    "using",
    "player",
    "profiles",
    "memory",
    "store",
    "also",
    "perfect",
    "solution",
    "stream",
    "processing",
    "combined",
    "data",
    "flow",
    "memory",
    "store",
    "redis",
    "provides",
    "scalable",
    "fast",
    "memory",
    "store",
    "storing",
    "intermediate",
    "data",
    "thousands",
    "clients",
    "access",
    "low",
    "latency",
    "comes",
    "nosql",
    "databases",
    "available",
    "options",
    "google",
    "cloud",
    "said",
    "show",
    "exam",
    "merely",
    "high",
    "level",
    "knowing",
    "databases",
    "used",
    "huge",
    "benefit",
    "along",
    "entry",
    "diving",
    "deeper",
    "possibly",
    "using",
    "services",
    "within",
    "job",
    "cloud",
    "engineer",
    "pretty",
    "much",
    "wanted",
    "cover",
    "comes",
    "nosql",
    "databases",
    "available",
    "google",
    "cloud",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "big",
    "data",
    "ecosystem",
    "overview",
    "familiarize",
    "services",
    "available",
    "google",
    "cloud",
    "services",
    "show",
    "exam",
    "lesson",
    "meant",
    "go",
    "depth",
    "overview",
    "give",
    "good",
    "understanding",
    "services",
    "work",
    "together",
    "make",
    "sense",
    "big",
    "data",
    "whole",
    "getting",
    "right",
    "wanted",
    "first",
    "ask",
    "question",
    "big",
    "data",
    "mean",
    "many",
    "people",
    "talk",
    "really",
    "well",
    "big",
    "data",
    "refers",
    "massive",
    "amounts",
    "data",
    "would",
    "typically",
    "expensive",
    "store",
    "manage",
    "analyze",
    "using",
    "traditional",
    "database",
    "systems",
    "either",
    "relational",
    "monolithic",
    "amount",
    "data",
    "seeing",
    "past",
    "years",
    "started",
    "increase",
    "systems",
    "become",
    "inefficient",
    "lack",
    "flexibility",
    "storing",
    "unstructured",
    "data",
    "images",
    "text",
    "video",
    "well",
    "accommodating",
    "high",
    "velocity",
    "data",
    "scaling",
    "support",
    "large",
    "petabyte",
    "scale",
    "data",
    "volumes",
    "reason",
    "past",
    "years",
    "seen",
    "mainstream",
    "adoption",
    "new",
    "approaches",
    "managing",
    "processing",
    "big",
    "data",
    "including",
    "apache",
    "hadoop",
    "nosql",
    "database",
    "systems",
    "however",
    "options",
    "often",
    "prove",
    "complex",
    "deploy",
    "manage",
    "use",
    "situation",
    "ability",
    "consistently",
    "get",
    "business",
    "value",
    "data",
    "fast",
    "efficiently",
    "becoming",
    "de",
    "facto",
    "successful",
    "organizations",
    "across",
    "every",
    "industry",
    "data",
    "company",
    "access",
    "business",
    "insights",
    "business",
    "value",
    "able",
    "achieve",
    "like",
    "gain",
    "useful",
    "insights",
    "increase",
    "revenue",
    "get",
    "retain",
    "customers",
    "even",
    "improve",
    "operations",
    "machine",
    "learning",
    "models",
    "get",
    "efficient",
    "trained",
    "data",
    "machine",
    "learning",
    "big",
    "data",
    "highly",
    "complementary",
    "big",
    "data",
    "brings",
    "really",
    "great",
    "value",
    "table",
    "impossible",
    "organization",
    "turn",
    "gone",
    "overview",
    "big",
    "data",
    "wanted",
    "dive",
    "shorter",
    "overviews",
    "services",
    "available",
    "big",
    "data",
    "ecosystem",
    "google",
    "cloud",
    "first",
    "service",
    "like",
    "start",
    "bigquery",
    "bigquery",
    "fully",
    "managed",
    "serverless",
    "data",
    "warehouse",
    "enables",
    "scalable",
    "analysis",
    "petabytes",
    "data",
    "service",
    "supports",
    "querying",
    "using",
    "sql",
    "holds",
    "machine",
    "learning",
    "capabilities",
    "start",
    "ingesting",
    "data",
    "bigquery",
    "able",
    "take",
    "advantage",
    "power",
    "provides",
    "big",
    "data",
    "would",
    "ingest",
    "data",
    "batch",
    "upload",
    "streaming",
    "real",
    "time",
    "use",
    "currently",
    "available",
    "google",
    "cloud",
    "services",
    "load",
    "data",
    "bigquery",
    "take",
    "manual",
    "batch",
    "ingestion",
    "approach",
    "stream",
    "using",
    "pub",
    "sub",
    "etl",
    "data",
    "bigquery",
    "data",
    "transfer",
    "service",
    "automatically",
    "transfer",
    "data",
    "external",
    "google",
    "data",
    "sources",
    "partner",
    "sas",
    "applications",
    "bigquery",
    "scheduled",
    "fully",
    "managed",
    "basis",
    "best",
    "part",
    "batch",
    "export",
    "free",
    "bigquery",
    "streaming",
    "api",
    "provides",
    "incredible",
    "foundation",
    "analytics",
    "making",
    "business",
    "data",
    "immediately",
    "available",
    "analysis",
    "also",
    "leverage",
    "pub",
    "sub",
    "data",
    "flow",
    "stream",
    "data",
    "bigquery",
    "bigquery",
    "transparently",
    "automatically",
    "provides",
    "highly",
    "durable",
    "replicated",
    "storage",
    "multiple",
    "locations",
    "high",
    "availability",
    "well",
    "able",
    "achieve",
    "easy",
    "resource",
    "bigquery",
    "keeps",
    "seven",
    "day",
    "history",
    "changes",
    "case",
    "something",
    "go",
    "wrong",
    "bigquery",
    "supports",
    "standard",
    "sql",
    "querying",
    "reduces",
    "need",
    "code",
    "rewrites",
    "simply",
    "use",
    "would",
    "querying",
    "sql",
    "compliant",
    "database",
    "dataproc",
    "dataflow",
    "bigquery",
    "provides",
    "integration",
    "apache",
    "big",
    "data",
    "ecosystem",
    "allowing",
    "existing",
    "hadoop",
    "spark",
    "beam",
    "workloads",
    "read",
    "write",
    "data",
    "directly",
    "bigquery",
    "using",
    "storage",
    "api",
    "bigquery",
    "also",
    "makes",
    "easy",
    "access",
    "data",
    "using",
    "cloud",
    "console",
    "using",
    "bq",
    "command",
    "line",
    "tool",
    "making",
    "calls",
    "bigquery",
    "rest",
    "api",
    "using",
    "variety",
    "client",
    "libraries",
    "python",
    "also",
    "variety",
    "tools",
    "use",
    "interact",
    "bigquery",
    "visualizing",
    "data",
    "loading",
    "data",
    "bigquery",
    "provides",
    "strong",
    "security",
    "governance",
    "controls",
    "controls",
    "integration",
    "identity",
    "access",
    "management",
    "bigquery",
    "gives",
    "option",
    "geographic",
    "data",
    "control",
    "without",
    "headaches",
    "setting",
    "managing",
    "clusters",
    "computing",
    "resources",
    "different",
    "zones",
    "regions",
    "bigquery",
    "also",
    "provides",
    "fine",
    "grain",
    "identity",
    "access",
    "management",
    "rest",
    "assured",
    "data",
    "always",
    "encrypted",
    "rest",
    "transit",
    "way",
    "bigquery",
    "calculates",
    "billing",
    "charges",
    "queries",
    "storage",
    "storing",
    "data",
    "bigquery",
    "comparable",
    "price",
    "storing",
    "data",
    "cloud",
    "storage",
    "makes",
    "easy",
    "decision",
    "storing",
    "data",
    "bigquery",
    "upper",
    "limit",
    "amount",
    "data",
    "stored",
    "bigquery",
    "tables",
    "edited",
    "90",
    "days",
    "price",
    "storage",
    "table",
    "drops",
    "50",
    "percent",
    "query",
    "costs",
    "also",
    "available",
    "flat",
    "rate",
    "pricing",
    "comes",
    "pricing",
    "charged",
    "bytes",
    "read",
    "bytes",
    "returned",
    "end",
    "bigquery",
    "scales",
    "seamlessly",
    "store",
    "analyze",
    "petabytes",
    "exabytes",
    "data",
    "ease",
    "many",
    "features",
    "list",
    "interested",
    "feel",
    "free",
    "dive",
    "features",
    "supplied",
    "link",
    "lesson",
    "text",
    "moving",
    "next",
    "service",
    "pub",
    "sub",
    "pub",
    "sub",
    "fully",
    "managed",
    "messaging",
    "service",
    "allows",
    "send",
    "receive",
    "messages",
    "independent",
    "applications",
    "acts",
    "messaging",
    "oriented",
    "middleware",
    "event",
    "ingestion",
    "delivery",
    "streaming",
    "analytics",
    "pipelines",
    "publisher",
    "application",
    "creates",
    "send",
    "messages",
    "topic",
    "subscriber",
    "applications",
    "create",
    "subscription",
    "topic",
    "receives",
    "messages",
    "wanted",
    "take",
    "moment",
    "show",
    "exactly",
    "works",
    "first",
    "publisher",
    "creates",
    "messages",
    "sends",
    "messaging",
    "service",
    "specified",
    "topic",
    "topic",
    "named",
    "entity",
    "represents",
    "feed",
    "messages",
    "publisher",
    "application",
    "creates",
    "topic",
    "pub",
    "sub",
    "service",
    "sends",
    "messages",
    "topic",
    "message",
    "contains",
    "payload",
    "optional",
    "attributes",
    "describe",
    "content",
    "service",
    "whole",
    "ensures",
    "published",
    "messages",
    "retained",
    "behalf",
    "subscriptions",
    "published",
    "message",
    "retained",
    "subscription",
    "message",
    "queue",
    "shown",
    "message",
    "storage",
    "acknowledged",
    "subscriber",
    "consuming",
    "messages",
    "subscription",
    "pub",
    "sub",
    "forwards",
    "messages",
    "topic",
    "subscriptions",
    "individually",
    "subscriber",
    "receives",
    "messages",
    "either",
    "pub",
    "sub",
    "pushing",
    "subscriber",
    "chosen",
    "endpoint",
    "subscriber",
    "pulling",
    "service",
    "subscriber",
    "sends",
    "acknowledgement",
    "pub",
    "sub",
    "service",
    "received",
    "message",
    "service",
    "removes",
    "acknowledged",
    "messages",
    "subscriptions",
    "message",
    "queue",
    "use",
    "cases",
    "pub",
    "sub",
    "balancing",
    "large",
    "task",
    "queues",
    "distributing",
    "event",
    "notifications",
    "data",
    "streaming",
    "various",
    "sources",
    "next",
    "service",
    "wanted",
    "get",
    "composer",
    "composer",
    "managed",
    "workflow",
    "orchestration",
    "service",
    "built",
    "apache",
    "airflow",
    "workflow",
    "automation",
    "tool",
    "developers",
    "based",
    "open",
    "source",
    "apache",
    "airflow",
    "project",
    "similar",
    "deployment",
    "cloud",
    "composer",
    "deploys",
    "multiple",
    "components",
    "run",
    "airflow",
    "cloud",
    "airflow",
    "platform",
    "created",
    "community",
    "programmatically",
    "author",
    "schedule",
    "monitor",
    "workflows",
    "airflow",
    "scheduler",
    "see",
    "executes",
    "tasks",
    "array",
    "workers",
    "following",
    "specified",
    "dependencies",
    "storing",
    "data",
    "database",
    "ui",
    "component",
    "easy",
    "management",
    "breaking",
    "workflows",
    "sec",
    "data",
    "analytics",
    "workflow",
    "represents",
    "series",
    "tasks",
    "ingesting",
    "transforming",
    "analyzing",
    "utilizing",
    "data",
    "airflow",
    "workflows",
    "created",
    "using",
    "dags",
    "collection",
    "tasks",
    "want",
    "schedule",
    "run",
    "organizes",
    "tasks",
    "ensure",
    "task",
    "executed",
    "right",
    "time",
    "right",
    "order",
    "right",
    "issue",
    "handling",
    "order",
    "run",
    "specialized",
    "workflows",
    "provision",
    "environments",
    "needed",
    "composer",
    "deploys",
    "environments",
    "google",
    "kubernetes",
    "engine",
    "work",
    "google",
    "cloud",
    "services",
    "using",
    "connectors",
    "built",
    "airflow",
    "beauty",
    "composer",
    "create",
    "one",
    "environments",
    "single",
    "google",
    "cloud",
    "project",
    "using",
    "supported",
    "region",
    "without",
    "heavy",
    "lifting",
    "creating",
    "apache",
    "airflow",
    "environment",
    "comes",
    "data",
    "flow",
    "dataflow",
    "serverless",
    "fully",
    "managed",
    "processing",
    "service",
    "executing",
    "apache",
    "beam",
    "pipelines",
    "batch",
    "data",
    "streaming",
    "apache",
    "beam",
    "sdk",
    "open",
    "source",
    "programming",
    "model",
    "enables",
    "develop",
    "batch",
    "streaming",
    "pipelines",
    "using",
    "one",
    "apache",
    "beam",
    "sdks",
    "build",
    "program",
    "defines",
    "pipeline",
    "one",
    "apache",
    "beam",
    "supported",
    "distributed",
    "processing",
    "data",
    "flow",
    "executes",
    "pipeline",
    "data",
    "flow",
    "service",
    "takes",
    "care",
    "details",
    "like",
    "coordinating",
    "individual",
    "workers",
    "sharding",
    "data",
    "sets",
    "auto",
    "scaling",
    "exactly",
    "processing",
    "simplest",
    "form",
    "google",
    "cloud",
    "data",
    "flow",
    "reads",
    "data",
    "source",
    "transforms",
    "writes",
    "data",
    "back",
    "sink",
    "getting",
    "bit",
    "granular",
    "pipeline",
    "works",
    "data",
    "flow",
    "reads",
    "data",
    "presented",
    "data",
    "source",
    "data",
    "read",
    "put",
    "together",
    "collection",
    "data",
    "sets",
    "called",
    "p",
    "collection",
    "allows",
    "data",
    "read",
    "distributed",
    "processed",
    "across",
    "multiple",
    "machines",
    "step",
    "data",
    "transformed",
    "new",
    "p",
    "collection",
    "created",
    "final",
    "collection",
    "created",
    "written",
    "async",
    "full",
    "pipeline",
    "data",
    "goes",
    "source",
    "sync",
    "pipeline",
    "within",
    "data",
    "flow",
    "called",
    "job",
    "finally",
    "overview",
    "data",
    "flow",
    "job",
    "would",
    "look",
    "like",
    "involve",
    "services",
    "within",
    "google",
    "cloud",
    "put",
    "together",
    "solution",
    "retrieving",
    "data",
    "visualizing",
    "finally",
    "comes",
    "pricing",
    "data",
    "flow",
    "jobs",
    "billed",
    "per",
    "second",
    "increments",
    "charged",
    "processing",
    "data",
    "moving",
    "data",
    "proc",
    "fast",
    "easy",
    "way",
    "run",
    "spark",
    "hadoop",
    "hive",
    "pig",
    "google",
    "cloud",
    "environment",
    "takes",
    "5",
    "30",
    "minutes",
    "create",
    "spark",
    "hadoop",
    "clusters",
    "data",
    "proc",
    "clusters",
    "take",
    "90",
    "seconds",
    "less",
    "average",
    "built",
    "google",
    "cloud",
    "dataproc",
    "integration",
    "google",
    "cloud",
    "platform",
    "services",
    "use",
    "spark",
    "hadoop",
    "clusters",
    "without",
    "admin",
    "assistance",
    "done",
    "cluster",
    "simply",
    "turn",
    "spend",
    "money",
    "idle",
    "cluster",
    "well",
    "need",
    "worry",
    "data",
    "loss",
    "data",
    "proc",
    "integrated",
    "cloud",
    "storage",
    "bigquery",
    "cloud",
    "bigtable",
    "great",
    "thing",
    "dataproc",
    "need",
    "learn",
    "new",
    "tools",
    "apis",
    "use",
    "spark",
    "hadoop",
    "pig",
    "hive",
    "supported",
    "frequently",
    "updated",
    "comes",
    "pricing",
    "billed",
    "one",
    "cent",
    "per",
    "vcpu",
    "cluster",
    "per",
    "hour",
    "top",
    "resources",
    "use",
    "also",
    "flexibility",
    "using",
    "preemptable",
    "instances",
    "even",
    "lower",
    "compute",
    "cost",
    "although",
    "cloud",
    "data",
    "proc",
    "cloud",
    "data",
    "flow",
    "used",
    "implement",
    "etl",
    "data",
    "warehousing",
    "solutions",
    "strengths",
    "weaknesses",
    "wanted",
    "take",
    "quick",
    "moment",
    "point",
    "dataproc",
    "easily",
    "spin",
    "clusters",
    "console",
    "sdk",
    "api",
    "turn",
    "need",
    "dataflow",
    "serverless",
    "fully",
    "managed",
    "never",
    "servers",
    "worry",
    "comes",
    "dependencies",
    "tools",
    "hadoop",
    "spark",
    "ecosystem",
    "data",
    "proc",
    "would",
    "way",
    "go",
    "looking",
    "make",
    "jobs",
    "portable",
    "across",
    "different",
    "execution",
    "engines",
    "apache",
    "beam",
    "allows",
    "available",
    "data",
    "flow",
    "moving",
    "next",
    "service",
    "cloud",
    "data",
    "lab",
    "cloud",
    "data",
    "lab",
    "interactive",
    "developer",
    "tool",
    "created",
    "explore",
    "analyze",
    "transform",
    "visualize",
    "data",
    "build",
    "machine",
    "learning",
    "models",
    "data",
    "data",
    "lab",
    "uses",
    "open",
    "sourced",
    "jupyter",
    "notebooks",
    "format",
    "used",
    "world",
    "data",
    "science",
    "runs",
    "compute",
    "engine",
    "connects",
    "multiple",
    "cloud",
    "services",
    "easily",
    "focus",
    "data",
    "science",
    "tasks",
    "also",
    "integrates",
    "google",
    "services",
    "help",
    "simplify",
    "data",
    "processing",
    "like",
    "bigquery",
    "cloud",
    "storage",
    "cloud",
    "data",
    "lab",
    "packaged",
    "container",
    "run",
    "vm",
    "instance",
    "cloud",
    "data",
    "lab",
    "uses",
    "notebooks",
    "instead",
    "text",
    "files",
    "containing",
    "code",
    "notebooks",
    "bring",
    "together",
    "code",
    "documentation",
    "written",
    "markdown",
    "results",
    "code",
    "execution",
    "whether",
    "text",
    "image",
    "html",
    "javascript",
    "like",
    "code",
    "editor",
    "ide",
    "notebooks",
    "help",
    "write",
    "code",
    "allow",
    "execute",
    "code",
    "interactive",
    "iterative",
    "manner",
    "rendering",
    "results",
    "alongside",
    "code",
    "cloud",
    "data",
    "lab",
    "notebooks",
    "stored",
    "google",
    "cloud",
    "source",
    "repository",
    "git",
    "repository",
    "cloned",
    "onto",
    "persistent",
    "disk",
    "attached",
    "vm",
    "comes",
    "prepping",
    "data",
    "consumption",
    "whether",
    "data",
    "cleansing",
    "cleaning",
    "prepping",
    "alteration",
    "data",
    "prep",
    "hits",
    "park",
    "dataprep",
    "serverless",
    "intelligent",
    "data",
    "service",
    "visually",
    "exploring",
    "cleaning",
    "preparing",
    "structured",
    "unstructured",
    "data",
    "analysis",
    "reporting",
    "machine",
    "learning",
    "automatically",
    "detects",
    "schemas",
    "data",
    "types",
    "possible",
    "joins",
    "anomalies",
    "missing",
    "values",
    "outliers",
    "duplicates",
    "architecture",
    "show",
    "data",
    "prep",
    "shines",
    "raw",
    "data",
    "available",
    "various",
    "different",
    "sources",
    "ingested",
    "cloud",
    "data",
    "prep",
    "clean",
    "prepare",
    "data",
    "data",
    "prep",
    "sends",
    "data",
    "cloud",
    "data",
    "flow",
    "refine",
    "data",
    "sent",
    "cloud",
    "storage",
    "bigquery",
    "storage",
    "analyzed",
    "one",
    "many",
    "available",
    "bi",
    "tools",
    "big",
    "data",
    "services",
    "used",
    "many",
    "data",
    "analysts",
    "field",
    "great",
    "know",
    "services",
    "used",
    "help",
    "process",
    "data",
    "needed",
    "specific",
    "job",
    "well",
    "exam",
    "need",
    "know",
    "services",
    "high",
    "level",
    "know",
    "depth",
    "seem",
    "interested",
    "diving",
    "services",
    "know",
    "highly",
    "encourage",
    "dive",
    "course",
    "really",
    "take",
    "look",
    "pretty",
    "much",
    "cover",
    "lesson",
    "services",
    "available",
    "big",
    "data",
    "ecosystem",
    "google",
    "cloud",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "going",
    "based",
    "foundation",
    "machine",
    "learning",
    "going",
    "go",
    "machine",
    "learning",
    "us",
    "machine",
    "learning",
    "ecosystem",
    "google",
    "cloud",
    "hopefully",
    "answer",
    "questions",
    "along",
    "way",
    "lesson",
    "high",
    "level",
    "overview",
    "services",
    "available",
    "google",
    "cloud",
    "yet",
    "services",
    "available",
    "need",
    "know",
    "come",
    "exam",
    "hopefully",
    "give",
    "really",
    "cool",
    "ideas",
    "possibilities",
    "building",
    "something",
    "truly",
    "fantastic",
    "google",
    "cloud",
    "machine",
    "learning",
    "well",
    "machine",
    "learning",
    "functionality",
    "helps",
    "enable",
    "software",
    "perform",
    "tasks",
    "without",
    "explicit",
    "programming",
    "rules",
    "traditionally",
    "considered",
    "subcategory",
    "artificial",
    "intelligence",
    "machine",
    "learning",
    "involves",
    "statistical",
    "techniques",
    "deep",
    "learning",
    "also",
    "known",
    "neural",
    "networks",
    "inspired",
    "theories",
    "human",
    "brain",
    "processes",
    "information",
    "trained",
    "recognize",
    "patterns",
    "collected",
    "data",
    "using",
    "algorithmic",
    "models",
    "collected",
    "data",
    "includes",
    "video",
    "images",
    "speech",
    "text",
    "machine",
    "learning",
    "expensive",
    "run",
    "efficient",
    "place",
    "machine",
    "learning",
    "due",
    "use",
    "massive",
    "computation",
    "scale",
    "explained",
    "machine",
    "learning",
    "always",
    "better",
    "big",
    "data",
    "wanted",
    "touch",
    "machine",
    "learning",
    "us",
    "well",
    "categorize",
    "images",
    "photos",
    "faces",
    "satellite",
    "imagery",
    "look",
    "keywords",
    "text",
    "documents",
    "emails",
    "flag",
    "potentially",
    "fraudulent",
    "transactions",
    "comes",
    "credit",
    "cards",
    "debit",
    "cards",
    "enable",
    "software",
    "respond",
    "accurately",
    "voice",
    "commands",
    "also",
    "translate",
    "languages",
    "text",
    "audio",
    "common",
    "functions",
    "machine",
    "learning",
    "us",
    "getting",
    "google",
    "machine",
    "learning",
    "platform",
    "machine",
    "learning",
    "cornerstone",
    "google",
    "internal",
    "systems",
    "years",
    "primarily",
    "need",
    "automate",
    "systems",
    "massive",
    "scale",
    "provided",
    "unique",
    "insight",
    "right",
    "techniques",
    "infrastructure",
    "frameworks",
    "help",
    "customers",
    "get",
    "optimal",
    "value",
    "machine",
    "learning",
    "originally",
    "developed",
    "open",
    "source",
    "framework",
    "use",
    "inside",
    "google",
    "called",
    "tensorflow",
    "standard",
    "data",
    "science",
    "community",
    "addition",
    "heavily",
    "contributing",
    "academic",
    "open",
    "source",
    "communities",
    "google",
    "machine",
    "learning",
    "researchers",
    "helped",
    "bring",
    "functionality",
    "google",
    "products",
    "g",
    "suite",
    "search",
    "photos",
    "addition",
    "google",
    "internal",
    "operations",
    "comes",
    "data",
    "center",
    "automation",
    "overview",
    "machine",
    "learning",
    "services",
    "covering",
    "need",
    "know",
    "high",
    "level",
    "exam",
    "start",
    "site",
    "api",
    "services",
    "starting",
    "vision",
    "api",
    "vision",
    "api",
    "offers",
    "powerful",
    "machine",
    "learning",
    "models",
    "allow",
    "assign",
    "labels",
    "images",
    "quickly",
    "classify",
    "millions",
    "categories",
    "vision",
    "api",
    "read",
    "printed",
    "handwritten",
    "text",
    "detect",
    "objects",
    "faces",
    "build",
    "metadata",
    "image",
    "catalog",
    "choice",
    "comes",
    "video",
    "intelligence",
    "machine",
    "learning",
    "models",
    "automatically",
    "recognizes",
    "20",
    "000",
    "objects",
    "places",
    "actions",
    "stored",
    "streaming",
    "video",
    "gain",
    "insights",
    "video",
    "near",
    "real",
    "time",
    "using",
    "video",
    "intelligence",
    "streaming",
    "video",
    "apis",
    "trigger",
    "events",
    "based",
    "objects",
    "detected",
    "easily",
    "search",
    "video",
    "catalog",
    "way",
    "search",
    "text",
    "documents",
    "extract",
    "metadata",
    "used",
    "index",
    "organize",
    "search",
    "video",
    "content",
    "moving",
    "language",
    "apis",
    "start",
    "natural",
    "language",
    "api",
    "uses",
    "machine",
    "learning",
    "reveal",
    "structure",
    "meaning",
    "text",
    "extract",
    "information",
    "people",
    "places",
    "events",
    "better",
    "understand",
    "social",
    "media",
    "sentiment",
    "customer",
    "conversations",
    "natural",
    "language",
    "enables",
    "analyze",
    "text",
    "also",
    "integrate",
    "document",
    "storage",
    "cloud",
    "storage",
    "translation",
    "api",
    "enables",
    "dynamically",
    "translate",
    "languages",
    "using",
    "google",
    "custom",
    "machine",
    "learning",
    "models",
    "translation",
    "api",
    "instantly",
    "translates",
    "text",
    "100",
    "languages",
    "website",
    "apps",
    "optional",
    "customization",
    "features",
    "following",
    "another",
    "grouping",
    "machine",
    "learning",
    "conversation",
    "apis",
    "first",
    "dialog",
    "flow",
    "dialog",
    "flow",
    "natural",
    "language",
    "understanding",
    "platform",
    "makes",
    "easy",
    "design",
    "integrate",
    "conversational",
    "user",
    "interface",
    "application",
    "device",
    "could",
    "mobile",
    "app",
    "web",
    "application",
    "bot",
    "interactive",
    "voice",
    "response",
    "system",
    "using",
    "dialogflow",
    "provide",
    "new",
    "engaging",
    "ways",
    "users",
    "interact",
    "product",
    "dialogflow",
    "analyze",
    "multiple",
    "types",
    "input",
    "customers",
    "including",
    "text",
    "audio",
    "inputs",
    "like",
    "phone",
    "voice",
    "recording",
    "also",
    "respond",
    "customers",
    "couple",
    "ways",
    "either",
    "text",
    "synthetic",
    "speech",
    "api",
    "api",
    "accurately",
    "converts",
    "speech",
    "text",
    "transcribe",
    "content",
    "accurate",
    "captions",
    "deliver",
    "better",
    "user",
    "experience",
    "products",
    "voice",
    "commands",
    "going",
    "way",
    "text",
    "speech",
    "api",
    "enables",
    "developers",
    "synthesize",
    "natural",
    "sounding",
    "speech",
    "hundred",
    "different",
    "voices",
    "available",
    "multiple",
    "languages",
    "variants",
    "text",
    "speech",
    "allows",
    "create",
    "lifelike",
    "interactions",
    "users",
    "across",
    "many",
    "applications",
    "devices",
    "finish",
    "machine",
    "learning",
    "segment",
    "wanted",
    "touch",
    "auto",
    "ml",
    "automl",
    "suite",
    "machine",
    "learning",
    "products",
    "enables",
    "developers",
    "limited",
    "machine",
    "learning",
    "expertise",
    "train",
    "high",
    "quality",
    "models",
    "specific",
    "business",
    "needs",
    "words",
    "using",
    "automl",
    "allows",
    "making",
    "deep",
    "learning",
    "easier",
    "use",
    "relies",
    "google",
    "transfer",
    "learning",
    "neural",
    "architecture",
    "search",
    "technology",
    "generate",
    "high",
    "quality",
    "training",
    "data",
    "able",
    "deploy",
    "new",
    "models",
    "based",
    "data",
    "minutes",
    "automl",
    "available",
    "vision",
    "video",
    "intelligence",
    "translation",
    "natural",
    "language",
    "tables",
    "inference",
    "recommendation",
    "apis",
    "know",
    "lot",
    "cover",
    "machine",
    "learning",
    "lesson",
    "ecosystem",
    "around",
    "necessity",
    "exam",
    "also",
    "help",
    "build",
    "really",
    "cool",
    "products",
    "comes",
    "role",
    "engineer",
    "services",
    "discussed",
    "lesson",
    "known",
    "high",
    "level",
    "although",
    "recommendation",
    "would",
    "dive",
    "deeper",
    "services",
    "checking",
    "links",
    "lesson",
    "text",
    "fun",
    "products",
    "getting",
    "know",
    "services",
    "really",
    "help",
    "game",
    "comes",
    "getting",
    "know",
    "services",
    "little",
    "bit",
    "depth",
    "really",
    "help",
    "gain",
    "momentum",
    "comes",
    "building",
    "applications",
    "applying",
    "currently",
    "running",
    "applications",
    "personally",
    "found",
    "extremely",
    "valuable",
    "really",
    "cemented",
    "knowledge",
    "came",
    "machine",
    "learning",
    "also",
    "ton",
    "fun",
    "lesson",
    "machine",
    "learning",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one",
    "music",
    "welcome",
    "back",
    "lesson",
    "diving",
    "suite",
    "tools",
    "used",
    "google",
    "cloud",
    "platform",
    "allow",
    "operate",
    "monitor",
    "troubleshoot",
    "environment",
    "known",
    "operation",
    "suite",
    "previously",
    "known",
    "stackdriver",
    "lesson",
    "mostly",
    "conceptual",
    "gear",
    "towards",
    "suite",
    "tools",
    "plays",
    "big",
    "part",
    "exam",
    "needs",
    "gaining",
    "insight",
    "resources",
    "exist",
    "environment",
    "tools",
    "cover",
    "said",
    "let",
    "dive",
    "operation",
    "suite",
    "suite",
    "tools",
    "logging",
    "monitoring",
    "application",
    "diagnostics",
    "operation",
    "suite",
    "ingests",
    "data",
    "generates",
    "insights",
    "using",
    "dashboards",
    "charts",
    "alerts",
    "suite",
    "tools",
    "available",
    "gcp",
    "aws",
    "connect",
    "aws",
    "using",
    "aws",
    "role",
    "gcp",
    "service",
    "account",
    "also",
    "monitor",
    "vms",
    "specific",
    "agents",
    "run",
    "gcp",
    "compute",
    "engine",
    "aws",
    "ec2",
    "operation",
    "suite",
    "also",
    "allows",
    "added",
    "functionality",
    "monitoring",
    "applications",
    "running",
    "vms",
    "operation",
    "suite",
    "also",
    "available",
    "infrastructure",
    "hybrid",
    "cloud",
    "environments",
    "operation",
    "suite",
    "native",
    "integration",
    "within",
    "gcp",
    "box",
    "real",
    "configurations",
    "need",
    "integrates",
    "almost",
    "resources",
    "google",
    "cloud",
    "previously",
    "mentioned",
    "compute",
    "engine",
    "gke",
    "app",
    "engine",
    "bigquery",
    "find",
    "fix",
    "issues",
    "faster",
    "due",
    "many",
    "different",
    "tools",
    "operation",
    "suite",
    "reduce",
    "downtime",
    "alerting",
    "also",
    "find",
    "support",
    "growing",
    "partner",
    "ecosystem",
    "technology",
    "integration",
    "tools",
    "expand",
    "operations",
    "security",
    "compliance",
    "capabilities",
    "operation",
    "suite",
    "comprises",
    "six",
    "available",
    "products",
    "covers",
    "gamut",
    "available",
    "tools",
    "need",
    "allows",
    "monitor",
    "troubleshoot",
    "improve",
    "application",
    "performance",
    "google",
    "cloud",
    "environment",
    "going",
    "products",
    "bit",
    "detail",
    "starting",
    "monitoring",
    "cloud",
    "monitoring",
    "collects",
    "measurements",
    "metrics",
    "help",
    "understand",
    "applications",
    "system",
    "services",
    "performing",
    "giving",
    "information",
    "source",
    "measurements",
    "time",
    "stamped",
    "values",
    "information",
    "values",
    "broken",
    "time",
    "series",
    "data",
    "cloud",
    "monitoring",
    "take",
    "data",
    "provided",
    "use",
    "dashboards",
    "require",
    "setup",
    "configuration",
    "effort",
    "cloud",
    "monitoring",
    "also",
    "gives",
    "flexibility",
    "create",
    "custom",
    "dashboards",
    "display",
    "content",
    "select",
    "use",
    "widgets",
    "available",
    "install",
    "dashboard",
    "configuration",
    "stored",
    "github",
    "order",
    "start",
    "using",
    "cloud",
    "monitoring",
    "need",
    "configure",
    "workspace",
    "workspaces",
    "organize",
    "monitoring",
    "information",
    "cloud",
    "monitoring",
    "single",
    "pane",
    "glass",
    "view",
    "everything",
    "monitoring",
    "environment",
    "also",
    "best",
    "practice",
    "use",
    "workspace",
    "monitor",
    "multiple",
    "projects",
    "single",
    "pane",
    "glass",
    "mentioned",
    "earlier",
    "cloud",
    "monitoring",
    "agent",
    "gathers",
    "system",
    "application",
    "metrics",
    "vm",
    "sends",
    "cloud",
    "monitoring",
    "monitor",
    "vms",
    "without",
    "agent",
    "get",
    "specific",
    "metrics",
    "cpu",
    "disk",
    "traffic",
    "network",
    "traffic",
    "uptime",
    "using",
    "agent",
    "optional",
    "recommended",
    "google",
    "agent",
    "allows",
    "monitor",
    "many",
    "applications",
    "note",
    "cloud",
    "logging",
    "agent",
    "well",
    "works",
    "well",
    "together",
    "cloud",
    "monitoring",
    "create",
    "visualize",
    "alert",
    "metrics",
    "based",
    "log",
    "data",
    "little",
    "bit",
    "later",
    "cloud",
    "monitoring",
    "also",
    "available",
    "gke",
    "allow",
    "monitor",
    "clusters",
    "manages",
    "monitoring",
    "logging",
    "together",
    "monitor",
    "clusters",
    "infrastructure",
    "workloads",
    "services",
    "well",
    "nodes",
    "pods",
    "containers",
    "comes",
    "alerting",
    "defined",
    "policies",
    "conditions",
    "learning",
    "policy",
    "defines",
    "conditions",
    "service",
    "considered",
    "unhealthy",
    "conditions",
    "met",
    "policy",
    "triggered",
    "opens",
    "new",
    "incident",
    "sends",
    "notification",
    "policy",
    "belongs",
    "individual",
    "workspace",
    "workspace",
    "contain",
    "500",
    "policies",
    "conditions",
    "determine",
    "alerting",
    "policy",
    "triggered",
    "conditions",
    "watch",
    "three",
    "separate",
    "things",
    "first",
    "one",
    "metric",
    "second",
    "one",
    "behavior",
    "way",
    "third",
    "one",
    "period",
    "time",
    "describing",
    "condition",
    "includes",
    "metric",
    "measured",
    "test",
    "determining",
    "metric",
    "reaches",
    "state",
    "want",
    "know",
    "alert",
    "triggered",
    "could",
    "notified",
    "using",
    "notification",
    "channels",
    "email",
    "sms",
    "well",
    "third",
    "party",
    "tools",
    "pagerduty",
    "slack",
    "moving",
    "cloud",
    "logging",
    "cloud",
    "logging",
    "central",
    "repository",
    "log",
    "data",
    "multiple",
    "sources",
    "described",
    "earlier",
    "logging",
    "come",
    "google",
    "aws",
    "well",
    "environments",
    "cloud",
    "logging",
    "handles",
    "log",
    "management",
    "analysis",
    "tight",
    "integration",
    "cloud",
    "monitoring",
    "collects",
    "platform",
    "system",
    "application",
    "logs",
    "also",
    "option",
    "exporting",
    "logs",
    "sources",
    "storage",
    "like",
    "cloud",
    "storage",
    "analysis",
    "like",
    "bigquery",
    "also",
    "export",
    "tools",
    "well",
    "diving",
    "concepts",
    "cloud",
    "logging",
    "associated",
    "primarily",
    "gcp",
    "projects",
    "logs",
    "viewer",
    "shows",
    "logs",
    "one",
    "specific",
    "project",
    "comes",
    "log",
    "entries",
    "log",
    "entry",
    "records",
    "status",
    "event",
    "project",
    "receives",
    "log",
    "entries",
    "services",
    "used",
    "produce",
    "log",
    "entries",
    "get",
    "basics",
    "logs",
    "named",
    "collection",
    "log",
    "entries",
    "within",
    "google",
    "cloud",
    "resource",
    "note",
    "log",
    "entry",
    "includes",
    "name",
    "log",
    "logs",
    "exist",
    "log",
    "entries",
    "retention",
    "period",
    "length",
    "time",
    "logs",
    "kept",
    "digging",
    "types",
    "logs",
    "cloud",
    "logging",
    "handles",
    "three",
    "different",
    "types",
    "logs",
    "audit",
    "logs",
    "transparency",
    "logs",
    "agent",
    "logs",
    "audit",
    "logs",
    "logs",
    "define",
    "also",
    "show",
    "admin",
    "activity",
    "data",
    "access",
    "well",
    "system",
    "events",
    "continuing",
    "access",
    "transparency",
    "logs",
    "logs",
    "actions",
    "taken",
    "google",
    "google",
    "staff",
    "accessing",
    "data",
    "due",
    "support",
    "ticket",
    "actions",
    "taken",
    "google",
    "staff",
    "logged",
    "within",
    "cloud",
    "logging",
    "comes",
    "agent",
    "logs",
    "logs",
    "come",
    "agents",
    "installed",
    "vms",
    "logging",
    "agent",
    "sends",
    "system",
    "logs",
    "vm",
    "instance",
    "cloud",
    "logging",
    "moving",
    "error",
    "reporting",
    "looks",
    "error",
    "monitoring",
    "alerting",
    "counts",
    "analyzes",
    "aggregates",
    "errors",
    "happen",
    "gcp",
    "environment",
    "alerts",
    "new",
    "application",
    "error",
    "occurs",
    "details",
    "error",
    "sent",
    "api",
    "notifications",
    "still",
    "beta",
    "error",
    "reporting",
    "integrated",
    "cloud",
    "functions",
    "google",
    "app",
    "engine",
    "standard",
    "enabled",
    "automatically",
    "error",
    "reporting",
    "beta",
    "compute",
    "engine",
    "kubernetes",
    "engine",
    "app",
    "engine",
    "flexible",
    "well",
    "aws",
    "ec2",
    "air",
    "reporting",
    "installed",
    "variety",
    "languages",
    "go",
    "python",
    "php",
    "ruby",
    "moving",
    "debugger",
    "tool",
    "debugs",
    "running",
    "application",
    "without",
    "slowing",
    "captures",
    "inspects",
    "call",
    "stack",
    "local",
    "variables",
    "application",
    "tool",
    "debugs",
    "running",
    "application",
    "without",
    "slowing",
    "captures",
    "inspects",
    "call",
    "stack",
    "local",
    "variables",
    "application",
    "also",
    "known",
    "taking",
    "snapshot",
    "snapshot",
    "taken",
    "log",
    "point",
    "injected",
    "allow",
    "start",
    "debugging",
    "debugger",
    "used",
    "without",
    "access",
    "application",
    "source",
    "code",
    "repo",
    "local",
    "hooked",
    "remote",
    "git",
    "repo",
    "github",
    "git",
    "lab",
    "bitbucket",
    "debugger",
    "integrated",
    "google",
    "app",
    "engine",
    "automatically",
    "installed",
    "google",
    "compute",
    "engine",
    "gke",
    "google",
    "app",
    "engine",
    "debugger",
    "integrated",
    "google",
    "app",
    "engine",
    "automatically",
    "installed",
    "gke",
    "debugger",
    "integrated",
    "google",
    "app",
    "engine",
    "automatically",
    "installed",
    "google",
    "compute",
    "engine",
    "google",
    "kubernetes",
    "engine",
    "google",
    "app",
    "engine",
    "cloud",
    "run",
    "note",
    "installation",
    "products",
    "dependent",
    "library",
    "debugger",
    "installed",
    "like",
    "trace",
    "environments",
    "available",
    "installed",
    "using",
    "variety",
    "different",
    "languages",
    "next",
    "trace",
    "trace",
    "helps",
    "understand",
    "long",
    "takes",
    "application",
    "handle",
    "incoming",
    "requests",
    "users",
    "applications",
    "trace",
    "collects",
    "latency",
    "data",
    "app",
    "engine",
    "https",
    "load",
    "balancers",
    "applications",
    "using",
    "trace",
    "api",
    "also",
    "integrated",
    "google",
    "app",
    "engine",
    "standard",
    "applied",
    "automatically",
    "would",
    "use",
    "trace",
    "something",
    "like",
    "website",
    "taking",
    "forever",
    "load",
    "troubleshoot",
    "specific",
    "issue",
    "trace",
    "installed",
    "google",
    "compute",
    "engine",
    "google",
    "kubernetes",
    "engine",
    "google",
    "app",
    "engine",
    "well",
    "also",
    "installed",
    "environments",
    "installed",
    "using",
    "variety",
    "different",
    "languages",
    "shown",
    "coming",
    "last",
    "tool",
    "bunch",
    "profiler",
    "profiler",
    "gathers",
    "cpu",
    "usage",
    "memory",
    "allocation",
    "information",
    "applications",
    "continuously",
    "helps",
    "discover",
    "patterns",
    "resource",
    "consumption",
    "help",
    "better",
    "troubleshoot",
    "profiler",
    "low",
    "profile",
    "therefore",
    "wo",
    "take",
    "lot",
    "memory",
    "cpu",
    "system",
    "well",
    "order",
    "use",
    "profiler",
    "agent",
    "needs",
    "installed",
    "profiler",
    "installed",
    "compute",
    "engine",
    "kubernetes",
    "engine",
    "app",
    "engine",
    "well",
    "course",
    "installed",
    "environments",
    "profiler",
    "installed",
    "using",
    "following",
    "languages",
    "go",
    "java",
    "python",
    "note",
    "exam",
    "high",
    "level",
    "overview",
    "tools",
    "needed",
    "concludes",
    "lesson",
    "high",
    "level",
    "overview",
    "operation",
    "suite",
    "mark",
    "lesson",
    "complete",
    "let",
    "move",
    "next",
    "one"
  ],
  "keywords": [
    "cloud",
    "exam",
    "complete",
    "course",
    "google",
    "associate",
    "engineer",
    "made",
    "available",
    "free",
    "code",
    "designed",
    "help",
    "achieve",
    "certification",
    "way",
    "going",
    "go",
    "content",
    "using",
    "take",
    "put",
    "get",
    "job",
    "looking",
    "bit",
    "experience",
    "four",
    "also",
    "multiple",
    "well",
    "wanted",
    "moment",
    "like",
    "make",
    "possible",
    "ways",
    "one",
    "best",
    "find",
    "gcp",
    "ace",
    "sign",
    "practice",
    "ask",
    "questions",
    "learning",
    "support",
    "want",
    "keep",
    "date",
    "new",
    "working",
    "see",
    "next",
    "music",
    "welcome",
    "back",
    "lesson",
    "quickly",
    "access",
    "resources",
    "lessons",
    "understand",
    "theory",
    "demo",
    "really",
    "home",
    "component",
    "include",
    "files",
    "used",
    "found",
    "github",
    "repository",
    "including",
    "always",
    "able",
    "along",
    "knowledge",
    "simple",
    "process",
    "different",
    "operating",
    "systems",
    "show",
    "three",
    "windows",
    "mac",
    "os",
    "linux",
    "first",
    "step",
    "would",
    "open",
    "web",
    "browser",
    "url",
    "mentioned",
    "may",
    "need",
    "changed",
    "update",
    "repo",
    "getting",
    "two",
    "copy",
    "click",
    "clone",
    "download",
    "button",
    "file",
    "clicking",
    "give",
    "snapshot",
    "folders",
    "although",
    "recommended",
    "method",
    "latest",
    "current",
    "source",
    "control",
    "system",
    "called",
    "git",
    "install",
    "https",
    "colon",
    "forward",
    "slash",
    "dash",
    "bring",
    "website",
    "necessary",
    "software",
    "supported",
    "version",
    "seconds",
    "done",
    "worry",
    "whether",
    "usually",
    "prompt",
    "say",
    "yes",
    "ahead",
    "let",
    "hit",
    "components",
    "installed",
    "everything",
    "gon",
    "na",
    "couple",
    "minutes",
    "minute",
    "view",
    "release",
    "simply",
    "close",
    "run",
    "command",
    "little",
    "better",
    "type",
    "within",
    "local",
    "clear",
    "screen",
    "cd",
    "sure",
    "directory",
    "order",
    "space",
    "move",
    "use",
    "location",
    "says",
    "paste",
    "enter",
    "verify",
    "exactly",
    "note",
    "time",
    "updated",
    "since",
    "case",
    "provide",
    "given",
    "prompted",
    "message",
    "changes",
    "similar",
    "virtual",
    "machine",
    "log",
    "logged",
    "terminal",
    "create",
    "depending",
    "internet",
    "connection",
    "video",
    "come",
    "okay",
    "successfully",
    "check",
    "folder",
    "right",
    "said",
    "ls",
    "updates",
    "already",
    "extremely",
    "bigger",
    "viewing",
    "password",
    "option",
    "allow",
    "thing",
    "highly",
    "recommend",
    "tab",
    "text",
    "editor",
    "drop",
    "link",
    "cases",
    "automatically",
    "start",
    "asking",
    "yaml",
    "python",
    "deployment",
    "manager",
    "even",
    "managing",
    "comes",
    "shown",
    "running",
    "box",
    "launch",
    "another",
    "place",
    "needed",
    "cover",
    "mark",
    "various",
    "certifications",
    "number",
    "dive",
    "many",
    "starting",
    "level",
    "deploying",
    "monitoring",
    "projects",
    "great",
    "point",
    "role",
    "general",
    "know",
    "services",
    "happens",
    "path",
    "basic",
    "building",
    "public",
    "easy",
    "covers",
    "familiar",
    "adding",
    "long",
    "cost",
    "us",
    "choice",
    "answer",
    "contain",
    "line",
    "single",
    "select",
    "without",
    "moving",
    "might",
    "probably",
    "top",
    "understanding",
    "architecture",
    "makes",
    "sense",
    "manage",
    "secure",
    "dynamic",
    "much",
    "depth",
    "common",
    "look",
    "holds",
    "due",
    "regards",
    "tier",
    "amount",
    "feel",
    "five",
    "definitely",
    "good",
    "security",
    "big",
    "others",
    "networking",
    "hold",
    "network",
    "data",
    "deeper",
    "end",
    "bottom",
    "choosing",
    "rest",
    "remember",
    "hard",
    "last",
    "least",
    "core",
    "tools",
    "g",
    "suite",
    "known",
    "routing",
    "identity",
    "management",
    "apis",
    "build",
    "set",
    "gives",
    "fall",
    "10",
    "receive",
    "application",
    "work",
    "showing",
    "series",
    "must",
    "continue",
    "times",
    "value",
    "people",
    "something",
    "allows",
    "together",
    "therefore",
    "making",
    "instead",
    "managed",
    "allowed",
    "higher",
    "started",
    "short",
    "organization",
    "bow",
    "tie",
    "inc",
    "real",
    "world",
    "scenario",
    "things",
    "lot",
    "based",
    "high",
    "ties",
    "locations",
    "stores",
    "across",
    "business",
    "sets",
    "global",
    "globally",
    "types",
    "infrastructure",
    "contains",
    "servers",
    "store",
    "connected",
    "vpn",
    "finally",
    "money",
    "scale",
    "diving",
    "quick",
    "overview",
    "looks",
    "head",
    "main",
    "database",
    "backups",
    "taken",
    "storage",
    "covering",
    "bowtie",
    "large",
    "email",
    "communicate",
    "ip",
    "phone",
    "manually",
    "zones",
    "play",
    "needs",
    "days",
    "hardware",
    "yet",
    "still",
    "performance",
    "connecting",
    "responsible",
    "whenever",
    "availability",
    "become",
    "costs",
    "every",
    "small",
    "computing",
    "requires",
    "backup",
    "scaling",
    "increase",
    "deploy",
    "regions",
    "billing",
    "flexibility",
    "recovery",
    "spend",
    "low",
    "customer",
    "key",
    "steps",
    "tasks",
    "important",
    "detail",
    "fully",
    "trigger",
    "knowing",
    "life",
    "test",
    "information",
    "keys",
    "lastly",
    "concepts",
    "platform",
    "signed",
    "account",
    "scroll",
    "list",
    "unless",
    "specific",
    "format",
    "typically",
    "immediately",
    "following",
    "gcloud",
    "commands",
    "either",
    "group",
    "less",
    "structure",
    "pretty",
    "instance",
    "standard",
    "part",
    "leave",
    "provided",
    "gone",
    "section",
    "characteristics",
    "service",
    "models",
    "define",
    "individual",
    "could",
    "stored",
    "applied",
    "shared",
    "pool",
    "provisioned",
    "provider",
    "databases",
    "computer",
    "model",
    "defined",
    "never",
    "call",
    "interact",
    "second",
    "means",
    "resource",
    "share",
    "applications",
    "physical",
    "includes",
    "memory",
    "creates",
    "specify",
    "server",
    "center",
    "coming",
    "choose",
    "region",
    "capabilities",
    "touching",
    "usage",
    "optimized",
    "instances",
    "hope",
    "explained",
    "provides",
    "private",
    "field",
    "purchase",
    "environment",
    "feature",
    "unique",
    "features",
    "touch",
    "discussed",
    "defines",
    "please",
    "aware",
    "considered",
    "interface",
    "anything",
    "deployed",
    "collection",
    "layer",
    "previous",
    "virtualization",
    "care",
    "turn",
    "flexible",
    "machines",
    "configure",
    "compute",
    "engine",
    "container",
    "runtime",
    "manages",
    "example",
    "app",
    "later",
    "users",
    "offer",
    "actually",
    "takes",
    "else",
    "function",
    "containers",
    "traffic",
    "request",
    "geographic",
    "latency",
    "user",
    "currently",
    "diagram",
    "connect",
    "direct",
    "connectivity",
    "dedicated",
    "side",
    "maximum",
    "built",
    "routed",
    "tony",
    "nodes",
    "break",
    "zone",
    "domain",
    "recap",
    "options",
    "serverless",
    "environments",
    "left",
    "giving",
    "offers",
    "vms",
    "creating",
    "images",
    "image",
    "groups",
    "capacity",
    "auto",
    "disks",
    "directly",
    "ssh",
    "kubernetes",
    "gke",
    "project",
    "deployments",
    "uses",
    "cluster",
    "custom",
    "write",
    "functions",
    "purpose",
    "attached",
    "event",
    "written",
    "3",
    "http",
    "enabled",
    "covered",
    "object",
    "attach",
    "objects",
    "block",
    "granular",
    "1",
    "minimum",
    "size",
    "class",
    "month",
    "lower",
    "per",
    "gigabyte",
    "pair",
    "selected",
    "vm",
    "clusters",
    "persistent",
    "regular",
    "price",
    "state",
    "ssd",
    "iops",
    "disk",
    "zonal",
    "regional",
    "workload",
    "sql",
    "nosql",
    "spanner",
    "throughput",
    "datastore",
    "firestore",
    "details",
    "networks",
    "routes",
    "vpc",
    "default",
    "additional",
    "created",
    "firewall",
    "rules",
    "balancing",
    "workloads",
    "load",
    "route",
    "balancer",
    "supports",
    "ports",
    "incoming",
    "protocol",
    "address",
    "port",
    "dns",
    "100",
    "queries",
    "records",
    "api",
    "sdk",
    "interconnect",
    "existing",
    "peering",
    "connections",
    "flow",
    "permissions",
    "hierarchy",
    "context",
    "buckets",
    "grant",
    "policies",
    "iam",
    "policy",
    "configuration",
    "settings",
    "works",
    "payments",
    "profile",
    "primary",
    "accounts",
    "root",
    "node",
    "associated",
    "roles",
    "admin",
    "full",
    "edit",
    "required",
    "labels",
    "b",
    "lark",
    "laura",
    "permission",
    "quite",
    "budget",
    "useful",
    "ends",
    "applies",
    "limits",
    "charged",
    "bunch",
    "verification",
    "limit",
    "session",
    "mode",
    "earlier",
    "page",
    "sent",
    "read",
    "shows",
    "change",
    "join",
    "discussing",
    "priority",
    "console",
    "apply",
    "send",
    "delete",
    "require",
    "setting",
    "devices",
    "added",
    "device",
    "ready",
    "hand",
    "corner",
    "enable",
    "menu",
    "add",
    "live",
    "window",
    "ca",
    "status",
    "customize",
    "name",
    "id",
    "filter",
    "save",
    "shell",
    "communication",
    "topic",
    "separate",
    "remove",
    "table",
    "lets",
    "alerts",
    "viewer",
    "navigation",
    "demonstration",
    "actions",
    "discounts",
    "committed",
    "commitment",
    "specified",
    "range",
    "discount",
    "pricing",
    "cpu",
    "vcpus",
    "gpus",
    "ssds",
    "sustained",
    "automatic",
    "action",
    "e2",
    "preemptable",
    "notification",
    "target",
    "sub",
    "stop",
    "expected",
    "2",
    "gigabytes",
    "quota",
    "reservation",
    "configurations",
    "reserve",
    "properties",
    "match",
    "description",
    "template",
    "quotas",
    "channel",
    "export",
    "bigquery",
    "enables",
    "tool",
    "credentials",
    "query",
    "corresponding",
    "assign",
    "assigned",
    "member",
    "members",
    "logging",
    "gsutil",
    "authorize",
    "script",
    "login",
    "active",
    "config",
    "configured",
    "destination",
    "success",
    "values",
    "c",
    "minus",
    "upgrade",
    "marked",
    "inside",
    "docker",
    "perform",
    "flag",
    "checks",
    "whole",
    "logs",
    "cube",
    "east",
    "runs",
    "ephemeral",
    "boot",
    "distributed",
    "metadata",
    "1b",
    "dot",
    "requests",
    "proxy",
    "reach",
    "deleted",
    "balancers",
    "longer",
    "testing",
    "error",
    "drill",
    "granted",
    "bucket",
    "rule",
    "determine",
    "audit",
    "conditions",
    "domains",
    "predefined",
    "versions",
    "tag",
    "internal",
    "bowties",
    "label",
    "production",
    "health",
    "refresh",
    "2021",
    "external",
    "outside",
    "however",
    "micro",
    "fields",
    "static",
    "addresses",
    "schedule",
    "generated",
    "retention",
    "protocols",
    "ipv4",
    "ipv6",
    "ips",
    "ranges",
    "host",
    "16",
    "allocated",
    "translation",
    "nat",
    "cider",
    "subnet",
    "p",
    "gateway",
    "tcp",
    "packet",
    "vpcs",
    "subnets",
    "ingress",
    "rdp",
    "creation",
    "promote",
    "record",
    "endpoint",
    "pod",
    "client",
    "mount",
    "hypervisor",
    "guest",
    "templates",
    "cycle",
    "startup",
    "lifecycle",
    "upgrades",
    "volume",
    "volumes",
    "snapshots",
    "pd",
    "manifest",
    "plane",
    "ssl",
    "pools",
    "migs",
    "pods",
    "replica",
    "replicas",
    "versioning"
  ]
}