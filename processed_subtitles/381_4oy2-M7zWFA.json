{
  "text": "session on top five Python libraries for\ndata science data science is one of the\nmost important fields right now and\nPython is by far one of the most popular\nlanguages to perform data science\noperations in so the reason why python\nis so popular in the field of data\ncenters because it has a lot of\nlibraries that make it easy for you to\nperform data science processes so we'll\ntake a look at top five or five most\npopular ones in data science data built\nin Python and these libraries can help\nyou in your daily basis as well so let's\ntake a look at that but before we begin\nplease click on the subscribe button and\nclick on the notification well I can't\nwould never miss another update so let's\ntake a look at the agenda for this\nsession we'll begin by understanding and\ntaking a look at numpy then we'll take a\nlook at pandas then we'll take a look at\nscikit-learn then we'll take a look at\nmatplotlib then we'll take a look at\ntensorflow and finally we'll take a look\nat a few more libraries that might not\nbe as popular but are definitely worth\ntaking a look into let's take a look at\nnumpy so in case you have done data\nscience work for any number of times or\nif you've even started with data sign\nnumpy is by far one of the one of those\nlibraries that you might have come\nacross and you might have worked with\nthem as well\nnumpy is the foundation for many other\ndata science libraries as well they use\nnumpy underneath the hood it's an open\nsource Python package and it's used for\nscientific computing it's very easy to\nuse and it's very very efficient it in\nterms of scientific computation and it\nsuposed large multi-dimensional arrays\nin matrices the reason why Python numpy\nis used over Python lists tuples and\nsets and so on in build data structure\nmainly because numpy is more efficient\nwhen it comes to handling data even\ninfraction point or whole numbers it\ntakes care of several low-level details\nthat comes that you might need to deal\nwith when you're delivering scientific\nnumbers and numbers with great accuracy\nand precision so and it also makes it\nreally really fast for us to access and\nmanipulate a large list of number arrays\nlike Python lists and Python arrays are\nalso very popular in this field but\nnumpy is by far the most popular one\nbecause of its speed and accuracy let's\ntake a look at some of the features that\nhas made numbers so popular so it\nprovides fast precompiled functions for\nnumerical routines so there are several\nfunctions available in the numpy library\nthat you can take a\nadd and perform your scientific and\nnumerical functions on particular\nnumbers you can take a look at the sine\nfunction cosine function so on and so\nits array oriented and provides much\nbetter efficiency rather than you using\nthe Python lists they you can use the\nnumpy arrays or ND arrays as they are\ncalled they are very easy to create\nthey're very easy to use and they are\nvery powerful as well as they are very\nefficient then comes the support for\nobject-oriented programming so\nobject-oriented programming\nanyone who's built any sort of\napplication using Python is familiar\nthat object-oriented programming is by\nfar one of the most popular paradigms\nfor building your applications and since\nyou are familiar with it Python Python\nnumpy does support object oriented\napproach and it's compact and fast\ncomputation with vectorization so of\nEctor is basically a one dimensional\narray and since you have a vectorized\nvectorized list you can perform the\ncomputations that you want to such as\naddition multiplication sine wave\ncalculation and many other calculations\nextremely fast with the inbuilt\nfunctions of the numpy package now let's\ntake a look at pandas so pandas is also\nan open source Python packet it provides\nhigh performance and easy to use data\nstructures for data analysis tools and\nfull label data so in case you are\nwondering if you've ever worked with a\ndata set that has rows and columns and\nyou need to make sure that you are\nhandling them properly that you are able\nto extract data from it extract the\nrequired data from required column\nspecific columns get data from the\nentire data set that matches certain\ncriteria pandas makes this kind of tasks\nreally this kind of data manipulation\nand data wrangling really this is why\npandas is so popular it's very easy to\nperform and win your own kinds of data\nmanipulation pipelines put your data\nthrough it and get the plain source of\ndata for your machine learning models to\nuse and understand let's take a look at\nsome of the features that have made\npandas so essential so it makes data\nmanipulation and conversion very easy it\nallows you to read data from several\nsources with several encoding so if you\nhave a text file if you have a CSV file\nif you have a database SQLite database\nfile or if you have a entire table with\ndata you can read all of it using pandas\nyou don't need to get multiple\nlibraries and create your own\nabstractions pandas can help you do it\nfor you and it can read multiple end\ncodings as well so these are codings you\ncan think of these encoding is a\ndifferent way of representing the text\nthat you see in your data format in\nbinary format so that's how these work\nand there are many other encoding is\navailable such as utf-8 utf-16 and if\nyou know the encoding then you can use\npandas with that encoding as well and\npandas will take care of all the naylet\nlow-level details foil it has several\nways of dealing with null and not\navailable values so any N and null\nvalues if you have a data set if you\nworked with or are planning to work on a\nreal world data set it's quite common to\nsee datasets that have some columns that\ndo not have a lot of information they\nhave a lot of null values null means\nabsence of values not zero but absence\nof values so this absence of values\ncould be a result of things like\nunavailability of equipment from which\ndata can be collected unavailability of\nresources maybe the person who's asked\nfor data simply doesn't have the data\nmay may be there are other reasons for\nthat as well so all of that it drips\ninto your data but now you need to take\ncare of that and when you do pandas can\nbe extremely helpful in that scenario it\nhas in build support for plotting data\nso there are other libraries that can\nallow you to plot data as well but\npandas has inbuilt support for plotting\ndata so if you want to create simple\nplots out of the data set that you have\nextracted you can do it using pandas\nquite easily\nthen comes scikit-learn so after we have\ntaken data perform scientific\ncomputations perform the data\nmanipulation tasks and created a data\nset that we are happy with then comes\nwith the task of building models then is\nwhere scikit-learn comes into play so\nit's an open source Python package it\nhas various feed classification\nregression and clustering algorithms\nthat can be applied to any data sets\nthat you have it has some built in data\nsets as well for you to practice on and\nif you have your own data sets then you\ncan just import the algorithm that you\nwant to perform the data classification\nregression on clustering on train the\nmodel and then make predictions and you\ncan also take a look at the accuracies\nthat were created using the models that\nyou have created let's take a look at\nsome of the features that has made\nscikit-learn so popular so scikit-learn\nmakes it really easy to build models on\npredefined algorithm\nso if you've ever worked with algorithms\nlike logistic regression linear\nregression random forests many other\nalgorithms you don't have to code them\nfrom your hand all the time because\nscikit-learn already has these\nalgorithms implemented for you you just\nneed to feed in the data need to train\nit and then you need to check the\naccuracy now in case you have not worked\nwith any of the libraries that have\nmentioned so far such as numpy pandas or\nscikit-learn then you can check out our\nchannel we have a lot of content\nregarding these libraries you can take a\nlook at the content you can learn the\nall of these things from scratch for\nfree and you can get a head start in\nyour journey on data sense and also if\nyou have any other questions regarding\nthese libraries regarding anything that\nI'm talking about you can ask them in\nthe chat box and our team is there to\nhelp you out with that so let's take a\nlook at the next thing so it makes it\nvery easy for creating training and\ntesting set of data many times when you\nload the data set and then you need to\nsplit the data set into two parts first\npart will be used for training the other\npart you will be used for testing\ntraining part is basically used to teach\nthe model what you want it to do after\nthe model learns from the data the\ntraining data\nit's then the the job of the testing\ndata to help the model make prediction\nand then check whether or not those\npredictions were correct if they were\ncorrect and then the our model is\nperforming really well and if most of\nthem are incorrect then our module is\nnot performing well then it has\nfunctions to convert categorical data\ninto numerical now this is one of the\nmost common things that we come across\non a daily basis as data scientists we\nhave data sets but all the data sets are\nnot in proper format any machine\nlearning model can only understand\nnumerical data and not categorical data\nso we need to convert these data points\ninto numerical points as well now this\nis a little difficult\nmany attempts but scikit-learn makes it\nreally easy it has inbuilt encoders that\nhelp you do that and there are several\nways of doing it I'm not going to go\ninto detail you can take a look around\nour YouTube channel and find out videos\nand you can take a look at those videos\nthey'll be teaching you something really\nimportant about these kinds of\ntechnologies and when it comes to\ncategorical to numerical conversion it's\nby far one of the most common uses of\ncyclotron and it also makes it really\neasy for us to check whether our model\nis playing correctly whether it's about\nits accuracy is\nand how you can use it then comes\nmatplotlib who if you've ever tried to\nvisualize some data set matplotlib is by\nfar the most common library that is used\nimpacted so my plot nib is also an open\nsource Python package but it is used to\ncreate several different kinds of plots\nnot just one scatter plot or cover that\nit is it's a huge library that gives you\na lot of control over what kind of plots\nyou want to create and how those plots\nshould look this plots could be simple\nplots they could be graphs they could be\nbar charts histograms they could be\nsimple visualizations\n3d visualizations and many other things\nso let's take a look at some of the\nfeatures matplotlib makes it really\nreally easy for us to create multiple\nplots based on a single data set so if\nyou have a single data set you can just\ninput different kind of plots from\nmatplotlib and you can start creating\nthose plots based on the data set that\nyou have it also allows you to create\nmultiple plots inside a single figure so\nif you want to make several plots and\nwant to display them side-by-side you\ncan do it using my problem it also\nallows you to plot images this is one of\nthe most common themes that occurs when\nyou're trying to perform image\nclassification and if you want to print\nthe images so that the person who is\nusing your data sense project can take a\nlook at what the images are all about\ninstead of them having to open each\nimage one by one you can just display it\nin your Python code and to do that you\ncan use my product clip and then it can\nalso be used to create 3d plots 3d plots\nare very really really complicated and\nfor a beginner or even for an\nintermediate programmer it's very\ndifficult for us to create 3d plots so\nmatplotlib exposes functionalities for\nus to be able to create 3d plots based\non the data that we have and then comes\ntens of loop tensorflow again is an\nopen-source buy the package it has been\ndeveloped by Google it's extensively\nused in building training and testing\nneural network so if you've ever come\nacross\nneural networks multi-layer perceptrons\nthese kinds of terminologies tensorflow\nis one of the libraries one of the most\npopular and famous celebrities that\nthere are being used to build these\nneural networks that can do really\ncomplicated tasks and make it make and\nallow you to make a model out of those\nlet's take a look at some of the\nfeatures that have mesh tensorflow so\npopular so transom flow makes it really\neasy\nfor us to create in train and urine\nNetwork if-elsif law was not there then\nwe would have to take care of a lot of\nlow-level details lot of low-level\nmathematical details our propagation\nfunction and error for calculation and\nso on and so forth\nwhat tensorflow takes care of it for us\nit also allows us to define the topology\nof our layered human network how you lay\nout your multi-layered perceptron where\nhow many layers are there how many input\nlayers how many output layers what each\nlayer is doing all of that can be really\nimportant for us to understand how\nthings are working and that could make\nit or break the difference between\nseveral models and several accuracies of\na model so if you're trying to build a\nneural network then the topology matters\na lot and in that case tensorflow helps\nyou out quite a bit and also it can be\nused to train models on massive datasets\ntensorflow can be run on Google cloud\nplatform and many other cloud platforms\nas well for your datasets to work and\nit's built with the efficiency in mind\nso if you're trying to build a model of\nmulti-layered neural network model using\nmassive data set then tensorflow could\nhelp you out and one of the reasons that\nit could be extremely fast is because it\nuses it allows you to use something\ncalled TPU TPU is a special kind of\ngraph special kind of processor it's\ncalled tension processing units such as\nCPU and GPU you can use TP users when\nthey work specifically with tensorflow\nand they work really fast and they are\nextremely fast much faster than GPUs and\nCPUs so that's why they're used machine\nlearning and machine learning training\nso on and so forth now these are some of\nthe most popular libraries they are very\npopular they are being used all across\nthe world but there are several other\nlibraries that performs similar tasks or\nsome tasks that have not been covered\nthat are not that common but these tasks\ncan be performed using other libraries\nas well let's take a look at some of\nthem again there are several libraries\nin terms of data sense you these are\njust a few of them that I mentioned and\nyou can take a look at others as well so\none of the few libraries that we did not\nmention in the previous section was Syfy\nso if you're trying to perform some\nscientific\ncomputation if you're trying to perform\nsome really complicated scientific\ncomputation mathematics graphs and so on\nand so forth then you can take a look at\nsci-fi it complements very well the\nnumpy library so it also has a lot of\nmathematical functions mathematical\nformulas and everything is in built so\nyou just need to import those\nfunctionalities and then you need to use\nthem Syfy is really great for that\nthen comes Seaborn seabone you can think\nof as an abstraction over matplotlib it\nusers might not live underneath the hood\nbut what seabone does really well is\nthat it allow it gives you a really\nsimple calls really simple syntax you\ncan build some complicated and\ngreat-looking visualizations so if you\nare trying to build something like a\nheat map if you're trying to build\nsomething else that resembles a plot\nthen using Seaborn can also be really\nhelpful if you take a look at Seaborn\nand if you take a look at my plot link\nyou'll find that's not much difference\nhowever Seabourn does allow you to make\nsure or makes customizing the\nvisualizations that you are performing\nreally easy then comes chaos\nas is a really important library in\nterms of machine learning and your\nnetworks tensorflow uses chaos\nunderneath the hood many other libraries\nusers use chaos as well kERA's is used\nto define the topology it makes it\nreally easy for us to create layers of\nour neural network and then combine them\ntogether and create the topology that\nfor tensorflow uses underneath the hood\nso if you want to take a look at how to\nuse barebone chaos and not the tensor\nflow abstraction you can just use the\nchaos level to the earth well then comes\nNLT which stands for natural language\ntoolkit so if you have ever come with\nNLP natural language processing NLT K is\nthe toolkit or the library that is used\njust for that so if you have like\nsentiment analysis if you have task that\nrequires you to take a look at a lot of\ntext and then find out or extract some\ninformation out of it then what you can\ndo is you can use natural language\ntoolkit which is also called NLT Kay\nthere are other languages as well but in\nany case one of the most popular ones\nand then comes plotly so similar to see\nbon plotly also makes creating graphs\nvery easy but it creates some the daily\nadvanced graph so and it allows you to\ncreate some really interactive graphs as\nwell it uses Chavez\nthere's a lot of technologies if you are\nlooking for some other package that\nmakes creating really complicated grass\ndaily easy Notley it's just the tool for\nyou so when it comes to learning new\nthings such as the libraries that we\nhave just mentioned a port that always\nkeeps me going is an investment in\nknowledge always pays the best interest\nkeeping that in mind I'd like to tell\nyou a bit about platform we have a\ncommunity platform where you can ask\nquestions when you get your questions\nanswered by your peers or by Pro or by\nsubject experts you if you have any\nquestions regarding anything if you're\ntrying to do something in a library and\nyou run into an error but it's not\nperforming the way you want it to\nperform what you can do is you can\ncreate a question or a raise in issue in\nour community and our advisors and your\npeers will take a look at that and help\nyou the best way possible the growing\ncommunity different kinds of\ntechnologies can be you can ask\nquestions about different kinds of\ntechnologies there just take a look at\nthat and we also have a blogging\nplatform we have our Italian blog that\nhas a lot of content for you to go\nthrough if you want trying to learn\nsomething new chances are there's a lot\nof content there you could take a look\nat that you can take a look at what are\nthe things that are being discussed\nthere and you can probably gain some\nknowledge out of that if you're more of\na visual person and not much of a\nreading person we have our YouTube\nchannel which you can browse around and\ntake a look at the kinds of free content\nthat we're putting out we are putting\nout new content every day and we put out\ndifferent kinds of videos that teach you\nabout different topics ranging from\nDevOps data science\nmachine learning and many other topics\nso you can take a look at that as well\nand if you have done that but you want\nto take it a bit further then we have\nour one-stop solution for career growth\nour Intel apart kademan it allows you to\nenroll in free courses that we provide\nthese courses can range from several\nseveral topics like the Java complete\ncool we have the C and the data\nstructures complete course and many\nother courses we have on ms excel and ms\nSQL artificial intelligence devops cloud\ncomputing files and data science tableau\nsalesforce if you're looking for some\nthree content and you are looking to\nlearn and get the basic knowledge\nabout these kinds of technologies and\nyou can enroll into any of these courses\nyou need to sign up and you can just\nenroll it any of the courses that you\nwant to to get a solid foundation and in\ncase you are looking for advancing your\ncareer in data science we have a data\nsense mobsters architect cool you can\ntake a look at all of the subjects that\nare being taught here you will be taught\ndata size with our Python machine\nlearning AI big data tab new and this\nwill also be taught Excel and MongoDB\nyou can take a look at the course\ncontent you could take a look at the\nclasses available these are the courses\nthat are available for you it includes\neverything that you might need to learn\nto become a data scientist there are a\nlot of projects there's a lot of good\ncontent available you can take a look at\nthe curriculum you can download the\ncurriculum you can take a look at each\none of these individually as well and\nthere are a lot of projects for you to\nbuild so that you can have confidence in\nyour abilities to deal with these\ntechnologies and you should done that\nthen you will get these certificates\nimagine your name here these\ncertificates are accepted in many\nmultinational companies like Cisco\ncognizant music Matisse's and so on and\nso forth and this helps you stand out as\nwell as many recruiters are looking for\npeople with certification so that they\nknow the technology that they want\npeople to be hired for and that could\nhelp you out a lot we have both advisers\nyou have if you have any questions you\ncan ask and you could take a look at the\nfrequently asked questions and you can\nfind the questions answer that you're\nlooking for in case your question is not\nmentioned here what you can do is you\ncan use our YouTube 30 coupon code it\nwill give you a 30% off this is just for\ntoday and for the YouTube viewers so if\nyou are looking at this you can take a\nlook at our courses and if you want to\nbuy any course right now you can use the\nYouTube 30 coupon code which will give\nyou a flat 30% off and with that in mind\nif you have any other questions you can\ncontact us on the numbers listed on the\nscreen if you would like to reach out by\na mail you can take a look at the email\naddress mentioned on screen as well\nforce advisers are there to help you get\nto the best course that helps you\nadvance your career 24/7 anytime you\nwant to contact us our course advisors\nare available and\nthank you so much for going through the\nentire presentation with me hopefully\nthis was helpful and informative\nand I'll see you in the next one\n",
  "words": [
    "session",
    "top",
    "five",
    "python",
    "libraries",
    "data",
    "science",
    "data",
    "science",
    "one",
    "important",
    "fields",
    "right",
    "python",
    "far",
    "one",
    "popular",
    "languages",
    "perform",
    "data",
    "science",
    "operations",
    "reason",
    "python",
    "popular",
    "field",
    "data",
    "centers",
    "lot",
    "libraries",
    "make",
    "easy",
    "perform",
    "data",
    "science",
    "processes",
    "take",
    "look",
    "top",
    "five",
    "five",
    "popular",
    "ones",
    "data",
    "science",
    "data",
    "built",
    "python",
    "libraries",
    "help",
    "daily",
    "basis",
    "well",
    "let",
    "take",
    "look",
    "begin",
    "please",
    "click",
    "subscribe",
    "button",
    "click",
    "notification",
    "well",
    "ca",
    "would",
    "never",
    "miss",
    "another",
    "update",
    "let",
    "take",
    "look",
    "agenda",
    "session",
    "begin",
    "understanding",
    "taking",
    "look",
    "numpy",
    "take",
    "look",
    "pandas",
    "take",
    "look",
    "take",
    "look",
    "matplotlib",
    "take",
    "look",
    "tensorflow",
    "finally",
    "take",
    "look",
    "libraries",
    "might",
    "popular",
    "definitely",
    "worth",
    "taking",
    "look",
    "let",
    "take",
    "look",
    "numpy",
    "case",
    "done",
    "data",
    "science",
    "work",
    "number",
    "times",
    "even",
    "started",
    "data",
    "sign",
    "numpy",
    "far",
    "one",
    "one",
    "libraries",
    "might",
    "come",
    "across",
    "might",
    "worked",
    "well",
    "numpy",
    "foundation",
    "many",
    "data",
    "science",
    "libraries",
    "well",
    "use",
    "numpy",
    "underneath",
    "hood",
    "open",
    "source",
    "python",
    "package",
    "used",
    "scientific",
    "computing",
    "easy",
    "use",
    "efficient",
    "terms",
    "scientific",
    "computation",
    "suposed",
    "large",
    "arrays",
    "matrices",
    "reason",
    "python",
    "numpy",
    "used",
    "python",
    "lists",
    "tuples",
    "sets",
    "build",
    "data",
    "structure",
    "mainly",
    "numpy",
    "efficient",
    "comes",
    "handling",
    "data",
    "even",
    "infraction",
    "point",
    "whole",
    "numbers",
    "takes",
    "care",
    "several",
    "details",
    "comes",
    "might",
    "need",
    "deal",
    "delivering",
    "scientific",
    "numbers",
    "numbers",
    "great",
    "accuracy",
    "precision",
    "also",
    "makes",
    "really",
    "really",
    "fast",
    "us",
    "access",
    "manipulate",
    "large",
    "list",
    "number",
    "arrays",
    "like",
    "python",
    "lists",
    "python",
    "arrays",
    "also",
    "popular",
    "field",
    "numpy",
    "far",
    "popular",
    "one",
    "speed",
    "accuracy",
    "let",
    "take",
    "look",
    "features",
    "made",
    "numbers",
    "popular",
    "provides",
    "fast",
    "precompiled",
    "functions",
    "numerical",
    "routines",
    "several",
    "functions",
    "available",
    "numpy",
    "library",
    "take",
    "add",
    "perform",
    "scientific",
    "numerical",
    "functions",
    "particular",
    "numbers",
    "take",
    "look",
    "sine",
    "function",
    "cosine",
    "function",
    "array",
    "oriented",
    "provides",
    "much",
    "better",
    "efficiency",
    "rather",
    "using",
    "python",
    "lists",
    "use",
    "numpy",
    "arrays",
    "nd",
    "arrays",
    "called",
    "easy",
    "create",
    "easy",
    "use",
    "powerful",
    "well",
    "efficient",
    "comes",
    "support",
    "programming",
    "programming",
    "anyone",
    "built",
    "sort",
    "application",
    "using",
    "python",
    "familiar",
    "programming",
    "far",
    "one",
    "popular",
    "paradigms",
    "building",
    "applications",
    "since",
    "familiar",
    "python",
    "python",
    "numpy",
    "support",
    "object",
    "oriented",
    "approach",
    "compact",
    "fast",
    "computation",
    "vectorization",
    "ector",
    "basically",
    "one",
    "dimensional",
    "array",
    "since",
    "vectorized",
    "vectorized",
    "list",
    "perform",
    "computations",
    "want",
    "addition",
    "multiplication",
    "sine",
    "wave",
    "calculation",
    "many",
    "calculations",
    "extremely",
    "fast",
    "inbuilt",
    "functions",
    "numpy",
    "package",
    "let",
    "take",
    "look",
    "pandas",
    "pandas",
    "also",
    "open",
    "source",
    "python",
    "packet",
    "provides",
    "high",
    "performance",
    "easy",
    "use",
    "data",
    "structures",
    "data",
    "analysis",
    "tools",
    "full",
    "label",
    "data",
    "case",
    "wondering",
    "ever",
    "worked",
    "data",
    "set",
    "rows",
    "columns",
    "need",
    "make",
    "sure",
    "handling",
    "properly",
    "able",
    "extract",
    "data",
    "extract",
    "required",
    "data",
    "required",
    "column",
    "specific",
    "columns",
    "get",
    "data",
    "entire",
    "data",
    "set",
    "matches",
    "certain",
    "criteria",
    "pandas",
    "makes",
    "kind",
    "tasks",
    "really",
    "kind",
    "data",
    "manipulation",
    "data",
    "wrangling",
    "really",
    "pandas",
    "popular",
    "easy",
    "perform",
    "win",
    "kinds",
    "data",
    "manipulation",
    "pipelines",
    "put",
    "data",
    "get",
    "plain",
    "source",
    "data",
    "machine",
    "learning",
    "models",
    "use",
    "understand",
    "let",
    "take",
    "look",
    "features",
    "made",
    "pandas",
    "essential",
    "makes",
    "data",
    "manipulation",
    "conversion",
    "easy",
    "allows",
    "read",
    "data",
    "several",
    "sources",
    "several",
    "encoding",
    "text",
    "file",
    "csv",
    "file",
    "database",
    "sqlite",
    "database",
    "file",
    "entire",
    "table",
    "data",
    "read",
    "using",
    "pandas",
    "need",
    "get",
    "multiple",
    "libraries",
    "create",
    "abstractions",
    "pandas",
    "help",
    "read",
    "multiple",
    "end",
    "codings",
    "well",
    "codings",
    "think",
    "encoding",
    "different",
    "way",
    "representing",
    "text",
    "see",
    "data",
    "format",
    "binary",
    "format",
    "work",
    "many",
    "encoding",
    "available",
    "know",
    "encoding",
    "use",
    "pandas",
    "encoding",
    "well",
    "pandas",
    "take",
    "care",
    "naylet",
    "details",
    "foil",
    "several",
    "ways",
    "dealing",
    "null",
    "available",
    "values",
    "n",
    "null",
    "values",
    "data",
    "set",
    "worked",
    "planning",
    "work",
    "real",
    "world",
    "data",
    "set",
    "quite",
    "common",
    "see",
    "datasets",
    "columns",
    "lot",
    "information",
    "lot",
    "null",
    "values",
    "null",
    "means",
    "absence",
    "values",
    "zero",
    "absence",
    "values",
    "absence",
    "values",
    "could",
    "result",
    "things",
    "like",
    "unavailability",
    "equipment",
    "data",
    "collected",
    "unavailability",
    "resources",
    "maybe",
    "person",
    "asked",
    "data",
    "simply",
    "data",
    "may",
    "may",
    "reasons",
    "well",
    "drips",
    "data",
    "need",
    "take",
    "care",
    "pandas",
    "extremely",
    "helpful",
    "scenario",
    "build",
    "support",
    "plotting",
    "data",
    "libraries",
    "allow",
    "plot",
    "data",
    "well",
    "pandas",
    "inbuilt",
    "support",
    "plotting",
    "data",
    "want",
    "create",
    "simple",
    "plots",
    "data",
    "set",
    "extracted",
    "using",
    "pandas",
    "quite",
    "easily",
    "comes",
    "taken",
    "data",
    "perform",
    "scientific",
    "computations",
    "perform",
    "data",
    "manipulation",
    "tasks",
    "created",
    "data",
    "set",
    "happy",
    "comes",
    "task",
    "building",
    "models",
    "comes",
    "play",
    "open",
    "source",
    "python",
    "package",
    "various",
    "feed",
    "classification",
    "regression",
    "clustering",
    "algorithms",
    "applied",
    "data",
    "sets",
    "built",
    "data",
    "sets",
    "well",
    "practice",
    "data",
    "sets",
    "import",
    "algorithm",
    "want",
    "perform",
    "data",
    "classification",
    "regression",
    "clustering",
    "train",
    "model",
    "make",
    "predictions",
    "also",
    "take",
    "look",
    "accuracies",
    "created",
    "using",
    "models",
    "created",
    "let",
    "take",
    "look",
    "features",
    "made",
    "popular",
    "makes",
    "really",
    "easy",
    "build",
    "models",
    "predefined",
    "algorithm",
    "ever",
    "worked",
    "algorithms",
    "like",
    "logistic",
    "regression",
    "linear",
    "regression",
    "random",
    "forests",
    "many",
    "algorithms",
    "code",
    "hand",
    "time",
    "already",
    "algorithms",
    "implemented",
    "need",
    "feed",
    "data",
    "need",
    "train",
    "need",
    "check",
    "accuracy",
    "case",
    "worked",
    "libraries",
    "mentioned",
    "far",
    "numpy",
    "pandas",
    "check",
    "channel",
    "lot",
    "content",
    "regarding",
    "libraries",
    "take",
    "look",
    "content",
    "learn",
    "things",
    "scratch",
    "free",
    "get",
    "head",
    "start",
    "journey",
    "data",
    "sense",
    "also",
    "questions",
    "regarding",
    "libraries",
    "regarding",
    "anything",
    "talking",
    "ask",
    "chat",
    "box",
    "team",
    "help",
    "let",
    "take",
    "look",
    "next",
    "thing",
    "makes",
    "easy",
    "creating",
    "training",
    "testing",
    "set",
    "data",
    "many",
    "times",
    "load",
    "data",
    "set",
    "need",
    "split",
    "data",
    "set",
    "two",
    "parts",
    "first",
    "part",
    "used",
    "training",
    "part",
    "used",
    "testing",
    "training",
    "part",
    "basically",
    "used",
    "teach",
    "model",
    "want",
    "model",
    "learns",
    "data",
    "training",
    "data",
    "job",
    "testing",
    "data",
    "help",
    "model",
    "make",
    "prediction",
    "check",
    "whether",
    "predictions",
    "correct",
    "correct",
    "model",
    "performing",
    "really",
    "well",
    "incorrect",
    "module",
    "performing",
    "well",
    "functions",
    "convert",
    "categorical",
    "data",
    "numerical",
    "one",
    "common",
    "things",
    "come",
    "across",
    "daily",
    "basis",
    "data",
    "scientists",
    "data",
    "sets",
    "data",
    "sets",
    "proper",
    "format",
    "machine",
    "learning",
    "model",
    "understand",
    "numerical",
    "data",
    "categorical",
    "data",
    "need",
    "convert",
    "data",
    "points",
    "numerical",
    "points",
    "well",
    "little",
    "difficult",
    "many",
    "attempts",
    "makes",
    "really",
    "easy",
    "inbuilt",
    "encoders",
    "help",
    "several",
    "ways",
    "going",
    "go",
    "detail",
    "take",
    "look",
    "around",
    "youtube",
    "channel",
    "find",
    "videos",
    "take",
    "look",
    "videos",
    "teaching",
    "something",
    "really",
    "important",
    "kinds",
    "technologies",
    "comes",
    "categorical",
    "numerical",
    "conversion",
    "far",
    "one",
    "common",
    "uses",
    "cyclotron",
    "also",
    "makes",
    "really",
    "easy",
    "us",
    "check",
    "whether",
    "model",
    "playing",
    "correctly",
    "whether",
    "accuracy",
    "use",
    "comes",
    "matplotlib",
    "ever",
    "tried",
    "visualize",
    "data",
    "set",
    "matplotlib",
    "far",
    "common",
    "library",
    "used",
    "impacted",
    "plot",
    "nib",
    "also",
    "open",
    "source",
    "python",
    "package",
    "used",
    "create",
    "several",
    "different",
    "kinds",
    "plots",
    "one",
    "scatter",
    "plot",
    "cover",
    "huge",
    "library",
    "gives",
    "lot",
    "control",
    "kind",
    "plots",
    "want",
    "create",
    "plots",
    "look",
    "plots",
    "could",
    "simple",
    "plots",
    "could",
    "graphs",
    "could",
    "bar",
    "charts",
    "histograms",
    "could",
    "simple",
    "visualizations",
    "3d",
    "visualizations",
    "many",
    "things",
    "let",
    "take",
    "look",
    "features",
    "matplotlib",
    "makes",
    "really",
    "really",
    "easy",
    "us",
    "create",
    "multiple",
    "plots",
    "based",
    "single",
    "data",
    "set",
    "single",
    "data",
    "set",
    "input",
    "different",
    "kind",
    "plots",
    "matplotlib",
    "start",
    "creating",
    "plots",
    "based",
    "data",
    "set",
    "also",
    "allows",
    "create",
    "multiple",
    "plots",
    "inside",
    "single",
    "figure",
    "want",
    "make",
    "several",
    "plots",
    "want",
    "display",
    "using",
    "problem",
    "also",
    "allows",
    "plot",
    "images",
    "one",
    "common",
    "themes",
    "occurs",
    "trying",
    "perform",
    "image",
    "classification",
    "want",
    "print",
    "images",
    "person",
    "using",
    "data",
    "sense",
    "project",
    "take",
    "look",
    "images",
    "instead",
    "open",
    "image",
    "one",
    "one",
    "display",
    "python",
    "code",
    "use",
    "product",
    "clip",
    "also",
    "used",
    "create",
    "3d",
    "plots",
    "3d",
    "plots",
    "really",
    "really",
    "complicated",
    "beginner",
    "even",
    "intermediate",
    "programmer",
    "difficult",
    "us",
    "create",
    "3d",
    "plots",
    "matplotlib",
    "exposes",
    "functionalities",
    "us",
    "able",
    "create",
    "3d",
    "plots",
    "based",
    "data",
    "comes",
    "tens",
    "loop",
    "tensorflow",
    "buy",
    "package",
    "developed",
    "google",
    "extensively",
    "used",
    "building",
    "training",
    "testing",
    "neural",
    "network",
    "ever",
    "come",
    "across",
    "neural",
    "networks",
    "perceptrons",
    "kinds",
    "terminologies",
    "tensorflow",
    "one",
    "libraries",
    "one",
    "popular",
    "famous",
    "celebrities",
    "used",
    "build",
    "neural",
    "networks",
    "really",
    "complicated",
    "tasks",
    "make",
    "make",
    "allow",
    "make",
    "model",
    "let",
    "take",
    "look",
    "features",
    "mesh",
    "tensorflow",
    "popular",
    "transom",
    "flow",
    "makes",
    "really",
    "easy",
    "us",
    "create",
    "train",
    "urine",
    "network",
    "law",
    "would",
    "take",
    "care",
    "lot",
    "details",
    "lot",
    "mathematical",
    "details",
    "propagation",
    "function",
    "error",
    "calculation",
    "forth",
    "tensorflow",
    "takes",
    "care",
    "us",
    "also",
    "allows",
    "us",
    "define",
    "topology",
    "layered",
    "human",
    "network",
    "lay",
    "perceptron",
    "many",
    "layers",
    "many",
    "input",
    "layers",
    "many",
    "output",
    "layers",
    "layer",
    "really",
    "important",
    "us",
    "understand",
    "things",
    "working",
    "could",
    "make",
    "break",
    "difference",
    "several",
    "models",
    "several",
    "accuracies",
    "model",
    "trying",
    "build",
    "neural",
    "network",
    "topology",
    "matters",
    "lot",
    "case",
    "tensorflow",
    "helps",
    "quite",
    "bit",
    "also",
    "used",
    "train",
    "models",
    "massive",
    "datasets",
    "tensorflow",
    "run",
    "google",
    "cloud",
    "platform",
    "many",
    "cloud",
    "platforms",
    "well",
    "datasets",
    "work",
    "built",
    "efficiency",
    "mind",
    "trying",
    "build",
    "model",
    "neural",
    "network",
    "model",
    "using",
    "massive",
    "data",
    "set",
    "tensorflow",
    "could",
    "help",
    "one",
    "reasons",
    "could",
    "extremely",
    "fast",
    "uses",
    "allows",
    "use",
    "something",
    "called",
    "tpu",
    "tpu",
    "special",
    "kind",
    "graph",
    "special",
    "kind",
    "processor",
    "called",
    "tension",
    "processing",
    "units",
    "cpu",
    "gpu",
    "use",
    "tp",
    "users",
    "work",
    "specifically",
    "tensorflow",
    "work",
    "really",
    "fast",
    "extremely",
    "fast",
    "much",
    "faster",
    "gpus",
    "cpus",
    "used",
    "machine",
    "learning",
    "machine",
    "learning",
    "training",
    "forth",
    "popular",
    "libraries",
    "popular",
    "used",
    "across",
    "world",
    "several",
    "libraries",
    "performs",
    "similar",
    "tasks",
    "tasks",
    "covered",
    "common",
    "tasks",
    "performed",
    "using",
    "libraries",
    "well",
    "let",
    "take",
    "look",
    "several",
    "libraries",
    "terms",
    "data",
    "sense",
    "mentioned",
    "take",
    "look",
    "others",
    "well",
    "one",
    "libraries",
    "mention",
    "previous",
    "section",
    "syfy",
    "trying",
    "perform",
    "scientific",
    "computation",
    "trying",
    "perform",
    "really",
    "complicated",
    "scientific",
    "computation",
    "mathematics",
    "graphs",
    "forth",
    "take",
    "look",
    "complements",
    "well",
    "numpy",
    "library",
    "also",
    "lot",
    "mathematical",
    "functions",
    "mathematical",
    "formulas",
    "everything",
    "built",
    "need",
    "import",
    "functionalities",
    "need",
    "use",
    "syfy",
    "really",
    "great",
    "comes",
    "seaborn",
    "seabone",
    "think",
    "abstraction",
    "matplotlib",
    "users",
    "might",
    "live",
    "underneath",
    "hood",
    "seabone",
    "really",
    "well",
    "allow",
    "gives",
    "really",
    "simple",
    "calls",
    "really",
    "simple",
    "syntax",
    "build",
    "complicated",
    "visualizations",
    "trying",
    "build",
    "something",
    "like",
    "heat",
    "map",
    "trying",
    "build",
    "something",
    "else",
    "resembles",
    "plot",
    "using",
    "seaborn",
    "also",
    "really",
    "helpful",
    "take",
    "look",
    "seaborn",
    "take",
    "look",
    "plot",
    "link",
    "find",
    "much",
    "difference",
    "however",
    "seabourn",
    "allow",
    "make",
    "sure",
    "makes",
    "customizing",
    "visualizations",
    "performing",
    "really",
    "easy",
    "comes",
    "chaos",
    "really",
    "important",
    "library",
    "terms",
    "machine",
    "learning",
    "networks",
    "tensorflow",
    "uses",
    "chaos",
    "underneath",
    "hood",
    "many",
    "libraries",
    "users",
    "use",
    "chaos",
    "well",
    "kera",
    "used",
    "define",
    "topology",
    "makes",
    "really",
    "easy",
    "us",
    "create",
    "layers",
    "neural",
    "network",
    "combine",
    "together",
    "create",
    "topology",
    "tensorflow",
    "uses",
    "underneath",
    "hood",
    "want",
    "take",
    "look",
    "use",
    "barebone",
    "chaos",
    "tensor",
    "flow",
    "abstraction",
    "use",
    "chaos",
    "level",
    "earth",
    "well",
    "comes",
    "nlt",
    "stands",
    "natural",
    "language",
    "toolkit",
    "ever",
    "come",
    "nlp",
    "natural",
    "language",
    "processing",
    "nlt",
    "k",
    "toolkit",
    "library",
    "used",
    "like",
    "sentiment",
    "analysis",
    "task",
    "requires",
    "take",
    "look",
    "lot",
    "text",
    "find",
    "extract",
    "information",
    "use",
    "natural",
    "language",
    "toolkit",
    "also",
    "called",
    "nlt",
    "kay",
    "languages",
    "well",
    "case",
    "one",
    "popular",
    "ones",
    "comes",
    "plotly",
    "similar",
    "see",
    "bon",
    "plotly",
    "also",
    "makes",
    "creating",
    "graphs",
    "easy",
    "creates",
    "daily",
    "advanced",
    "graph",
    "allows",
    "create",
    "really",
    "interactive",
    "graphs",
    "well",
    "uses",
    "chavez",
    "lot",
    "technologies",
    "looking",
    "package",
    "makes",
    "creating",
    "really",
    "complicated",
    "grass",
    "daily",
    "easy",
    "notley",
    "tool",
    "comes",
    "learning",
    "new",
    "things",
    "libraries",
    "mentioned",
    "port",
    "always",
    "keeps",
    "going",
    "investment",
    "knowledge",
    "always",
    "pays",
    "best",
    "interest",
    "keeping",
    "mind",
    "like",
    "tell",
    "bit",
    "platform",
    "community",
    "platform",
    "ask",
    "questions",
    "get",
    "questions",
    "answered",
    "peers",
    "pro",
    "subject",
    "experts",
    "questions",
    "regarding",
    "anything",
    "trying",
    "something",
    "library",
    "run",
    "error",
    "performing",
    "way",
    "want",
    "perform",
    "create",
    "question",
    "raise",
    "issue",
    "community",
    "advisors",
    "peers",
    "take",
    "look",
    "help",
    "best",
    "way",
    "possible",
    "growing",
    "community",
    "different",
    "kinds",
    "technologies",
    "ask",
    "questions",
    "different",
    "kinds",
    "technologies",
    "take",
    "look",
    "also",
    "blogging",
    "platform",
    "italian",
    "blog",
    "lot",
    "content",
    "go",
    "want",
    "trying",
    "learn",
    "something",
    "new",
    "chances",
    "lot",
    "content",
    "could",
    "take",
    "look",
    "take",
    "look",
    "things",
    "discussed",
    "probably",
    "gain",
    "knowledge",
    "visual",
    "person",
    "much",
    "reading",
    "person",
    "youtube",
    "channel",
    "browse",
    "around",
    "take",
    "look",
    "kinds",
    "free",
    "content",
    "putting",
    "putting",
    "new",
    "content",
    "every",
    "day",
    "put",
    "different",
    "kinds",
    "videos",
    "teach",
    "different",
    "topics",
    "ranging",
    "devops",
    "data",
    "science",
    "machine",
    "learning",
    "many",
    "topics",
    "take",
    "look",
    "well",
    "done",
    "want",
    "take",
    "bit",
    "solution",
    "career",
    "growth",
    "intel",
    "apart",
    "kademan",
    "allows",
    "enroll",
    "free",
    "courses",
    "provide",
    "courses",
    "range",
    "several",
    "several",
    "topics",
    "like",
    "java",
    "complete",
    "cool",
    "c",
    "data",
    "structures",
    "complete",
    "course",
    "many",
    "courses",
    "ms",
    "excel",
    "ms",
    "sql",
    "artificial",
    "intelligence",
    "devops",
    "cloud",
    "computing",
    "files",
    "data",
    "science",
    "tableau",
    "salesforce",
    "looking",
    "three",
    "content",
    "looking",
    "learn",
    "get",
    "basic",
    "knowledge",
    "kinds",
    "technologies",
    "enroll",
    "courses",
    "need",
    "sign",
    "enroll",
    "courses",
    "want",
    "get",
    "solid",
    "foundation",
    "case",
    "looking",
    "advancing",
    "career",
    "data",
    "science",
    "data",
    "sense",
    "mobsters",
    "architect",
    "cool",
    "take",
    "look",
    "subjects",
    "taught",
    "taught",
    "data",
    "size",
    "python",
    "machine",
    "learning",
    "ai",
    "big",
    "data",
    "tab",
    "new",
    "also",
    "taught",
    "excel",
    "mongodb",
    "take",
    "look",
    "course",
    "content",
    "could",
    "take",
    "look",
    "classes",
    "available",
    "courses",
    "available",
    "includes",
    "everything",
    "might",
    "need",
    "learn",
    "become",
    "data",
    "scientist",
    "lot",
    "projects",
    "lot",
    "good",
    "content",
    "available",
    "take",
    "look",
    "curriculum",
    "download",
    "curriculum",
    "take",
    "look",
    "one",
    "individually",
    "well",
    "lot",
    "projects",
    "build",
    "confidence",
    "abilities",
    "deal",
    "technologies",
    "done",
    "get",
    "certificates",
    "imagine",
    "name",
    "certificates",
    "accepted",
    "many",
    "multinational",
    "companies",
    "like",
    "cisco",
    "cognizant",
    "music",
    "matisse",
    "forth",
    "helps",
    "stand",
    "well",
    "many",
    "recruiters",
    "looking",
    "people",
    "certification",
    "know",
    "technology",
    "want",
    "people",
    "hired",
    "could",
    "help",
    "lot",
    "advisers",
    "questions",
    "ask",
    "could",
    "take",
    "look",
    "frequently",
    "asked",
    "questions",
    "find",
    "questions",
    "answer",
    "looking",
    "case",
    "question",
    "mentioned",
    "use",
    "youtube",
    "30",
    "coupon",
    "code",
    "give",
    "30",
    "today",
    "youtube",
    "viewers",
    "looking",
    "take",
    "look",
    "courses",
    "want",
    "buy",
    "course",
    "right",
    "use",
    "youtube",
    "30",
    "coupon",
    "code",
    "give",
    "flat",
    "30",
    "mind",
    "questions",
    "contact",
    "us",
    "numbers",
    "listed",
    "screen",
    "would",
    "like",
    "reach",
    "mail",
    "take",
    "look",
    "email",
    "address",
    "mentioned",
    "screen",
    "well",
    "force",
    "advisers",
    "help",
    "get",
    "best",
    "course",
    "helps",
    "advance",
    "career",
    "anytime",
    "want",
    "contact",
    "us",
    "course",
    "advisors",
    "available",
    "thank",
    "much",
    "going",
    "entire",
    "presentation",
    "hopefully",
    "helpful",
    "informative",
    "see",
    "next",
    "one"
  ],
  "keywords": [
    "five",
    "python",
    "libraries",
    "data",
    "science",
    "one",
    "important",
    "far",
    "popular",
    "perform",
    "lot",
    "make",
    "easy",
    "take",
    "look",
    "built",
    "help",
    "daily",
    "well",
    "let",
    "would",
    "numpy",
    "pandas",
    "matplotlib",
    "tensorflow",
    "might",
    "case",
    "done",
    "work",
    "even",
    "come",
    "across",
    "worked",
    "many",
    "use",
    "underneath",
    "hood",
    "open",
    "source",
    "package",
    "used",
    "scientific",
    "efficient",
    "terms",
    "computation",
    "arrays",
    "lists",
    "sets",
    "build",
    "comes",
    "numbers",
    "care",
    "several",
    "details",
    "need",
    "accuracy",
    "also",
    "makes",
    "really",
    "fast",
    "us",
    "like",
    "features",
    "made",
    "provides",
    "functions",
    "numerical",
    "available",
    "library",
    "function",
    "much",
    "using",
    "called",
    "create",
    "support",
    "programming",
    "building",
    "want",
    "extremely",
    "inbuilt",
    "ever",
    "set",
    "columns",
    "extract",
    "get",
    "entire",
    "kind",
    "tasks",
    "manipulation",
    "kinds",
    "machine",
    "learning",
    "models",
    "understand",
    "allows",
    "read",
    "encoding",
    "text",
    "file",
    "multiple",
    "different",
    "way",
    "see",
    "format",
    "null",
    "values",
    "quite",
    "common",
    "datasets",
    "absence",
    "could",
    "things",
    "person",
    "helpful",
    "allow",
    "plot",
    "simple",
    "plots",
    "created",
    "classification",
    "regression",
    "algorithms",
    "train",
    "model",
    "code",
    "check",
    "mentioned",
    "channel",
    "content",
    "regarding",
    "learn",
    "free",
    "sense",
    "questions",
    "ask",
    "creating",
    "training",
    "testing",
    "part",
    "whether",
    "performing",
    "categorical",
    "going",
    "youtube",
    "find",
    "videos",
    "something",
    "technologies",
    "uses",
    "graphs",
    "visualizations",
    "3d",
    "based",
    "single",
    "images",
    "trying",
    "complicated",
    "neural",
    "network",
    "networks",
    "mathematical",
    "forth",
    "topology",
    "layers",
    "helps",
    "bit",
    "cloud",
    "platform",
    "mind",
    "users",
    "seaborn",
    "chaos",
    "nlt",
    "natural",
    "language",
    "toolkit",
    "looking",
    "new",
    "knowledge",
    "best",
    "community",
    "topics",
    "career",
    "enroll",
    "courses",
    "course",
    "taught",
    "30"
  ]
}