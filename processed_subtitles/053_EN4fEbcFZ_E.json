{
  "text": "[Music]\nhello guys welcome to this complete\ncloud computing course by simply learn\nin this video we will be covering some\nof the most important concepts related\nto cloud computing\nsamuel our multi-platform cloud\narchitect with over 15 years of\nexperience in the cloud domain will take\nyou through the fundamentals of cloud\ncomputing we will talk about the cloud\nlifecycle important topics of aws\nmicrosoft azure and google cloud\nplatform we will also take a look at how\nto become an aws cloud architect we will\nalso look at the differences between the\nthree platforms finally we will take you\nthrough the most important interview\nquestions that you might face in your\ncloud interview first off we will have\nan introduction to cloud computing by\nour instructor samuel hi there i'm sam\nfrom simply learn and i work as a\nmulti-platform cloud architect and\ntrainer and let me welcome you to this\nlearning video called what is cloud\ncomputing as we learn what is cloud\ncomputing we will also be learning about\nhow things were before cloud computing\nand benefits of cloud computing\ndifferent types of cloud computing\navailable and some of the famous\ncompanies that are using cloud computing\nand they're getting benefited out of it\nwe're going to learn all that before\ncloud computing existed if we need any\nit servers or application let's say a\nbasic web server it does not come easy\nnow here is an owner of a business and i\nknow you would have guessed it already\nthat he's running and successful\nbusiness by looking at the hot and fresh\nbrewed coffee in his desk and lots and\nlots of paperwork to review and approve\nnow he had a smart not only smart\nlooking but a really smart worker in his\noffice called mark and on one fine day\nhe called mark and said that he would\nlike to do business online in other\nwords he would like to take his business\nonline and for that he needed his own\nwebsite as the first thing and mark puts\nall his knowledge together and comes up\nwith this requirement that his boss\nwould need lots of servers databases and\nsoftwares to get his business online\nwhich means a lot of investment and mark\nalso adds that his boss will need to\ninvest on acquiring technical expertise\nto manage the hardware and software that\nthey will be purchasing and also to\nmonitor the infrastructure and after\nhearing all this his boss was close to\ndropping his plan to go online but\nbefore he made a decision he chose to\ncheck if there are any alternatives\nwhere he don't have to spend a lot of\nmoney and don't have to spend acquiring\ntechnical expertise now that's when mark\nopened this discussion with his boss and\nhe explained his boss about cloud\ncomputing and he explained his boss the\nsame thing that i'm going to explain to\nyou in some time now about what is cloud\ncomputing what is cloud computing cloud\ncomputing is the use of a network of\nremote servers hosted on the internet to\nstore manage and process data rather\nthan having all that locally and using\nlocal server for that cloud computing is\nalso storing our data in the internet\nfrom anywhere and accessing our data\nfrom anywhere throughout the internet\nand the companies that offer those\nservices are called cloud providers\ncloud computing is also being able to\ndeploy and manage our applications\nservices and network throughout the\nglobe and manage them through the web\nmanagement or configuration portal in\nother words cloud computing service\nproviders give us the ability to manage\nour applications and services through a\nglobal network or internet example of\nsuch providers are amazon web servers\nand microsoft azure now that we have\nknown what cloud computing is let's talk\nabout the benefits of cloud computing\nnow i need to tell you the cloud\nbenefits is what is driving cloud\nadoption like anything in the recent\ndays if you want an it resource or a\nservice now with cloud it's available\nfor me almost instantaneously and it's\nready for production almost the same\ntime now this reduces the go live date\nand the product and the service hit the\nmarket almost instantaneously compared\nto the legacy environment and because of\nthis the companies have started to\ngenerate revenue almost the next day if\nnot the same day planning and buying the\nright size hardware has always been a\nchallenge in legacy environment and if\nyou're not careful when doing this we\nmight need to live with the hardware\nthat's undersized for the rest of our\nlives with cloud we do not buy any\nhardware but we use the hardware and pay\nfor the time we use it if that hardware\ndoes not fit our requirement release it\nand start using a better configuration\nand pay only for the time you use that\nnew and better configuration in legacy\nenvironments forecasting demand is an\nfull-time job but with cloud you can let\nthe monitoring and automation tool to\nwork for you and to rapidly scale up and\ndown the resources based on the need of\nthat r not only that the resources\nservices data can be accessed from\nanywhere as long as we are connected to\nthe internet and even there are tools\nand techniques now available which will\nlet you to work offline and will sync\nwhenever the internet is available\nmaking sure the data is stored in\ndurable storage and in a secure fashion\nis the talk of the business and cloud\nanswers that million dollar question\nwith cloud the data can be stored in a\nhighly durable storage and replicated to\nmultiple regions if you want and the\ndata that we store is encrypted and\nsecured in a fashion that's beyond what\nwe can imagine in local data centers now\nlet's bleed into the discussion about\nthe types of cloud computing very lately\nthere are multiple ways to categorize\ncloud computing because it's ever\ngrowing now we have more categories out\nof all these six sort of stand out you\nknow categorizing cloud based on\ndeployments and categorizing cloud based\non services and again under deployments\ncategorizing them based on how they have\nbeen implemented you know is it private\nis it public or is it hybrid and again\ncategorizing them based on the servers\nit provides is it infrastructure as a\nservice or is it platform as a service\nor is it software as a service let's\nlook at them one by one let's talk about\nthe different types of cloud based on\nthe deployment models first in public\ncloud everything is stored and accessed\nin and through the internet and any\ninternet users with proper permissions\ncan be given access to some of the\napplications and resources and in public\ncloud we literally own nothing beat the\nhardware or software everything is\nmanaged by the provider aws azure and\ngoogle are some examples of public cloud\nprivate cloud on the other hand with\nprivate cloud the infrastructure is\nexclusively for an single organization\nthe organizations can choose to run\ntheir own cloud locally or choose to\noutsource it to a public cloud provider\nas managed services and when this is\ndone the service the infrastructure will\nbe maintained on a private network some\nexamples are vmware cloud and some of\nthe aws products are very good example\nfor private cloud hybrid cloud has taken\nthings to the whole new level with\nhybrid cloud we get the benefit of both\npublic and private cloud organizations\nwill choose to keep some of their\napplications locally and some of the\napplication will be present in the cloud\none good example is nasa it uses hybrid\ncloud it uses private cloud to store\nsensitive data and uses public cloud to\nstore and share data which are not\nsensitive or confidential let's now\ndiscuss about cloud based on service\nmodel\nthe first and the broader category is\ninfrastructure as a service here we\nwould rent the servers network storage\nand will pay for them in an hourly basis\nbut we will have access to the resources\nwe provision and for some we will have\nroot level access as well ec2 in aws is\na very good example it's a vm for which\nwe have root level access to the os and\nadmin access to the hardware the next\ntype of service model would be platform\nas a service now in this model the\nproviders will give me a pre-built\nplatform where we can deploy our codes\nand our applications and they will be up\nand running we only need to manage the\ncodes and not the infrastructure here in\nsoftware as a service the cloud\nproviders sell the end product which is\na software or an application and we\ndirectly buy the software on an\nsubscription basis it's not the infra or\nthe platform but the end product or the\nsoftware or a functioning application\nand we pay for the hours we use the\nsoftware and in here the client\nmaintains full control of the software\nand does not maintain any equipment\namazon and azure also sell products that\nare software as service this chart sort\nof explains the difference between the\nfour models starting from on-premises to\ninfrastructure as a service to platform\nas a service to software as a service\nthis is self-explanatory that the\nresource managed by us are huge in on\npremises that towards your left as you\nwatch and it's little less in\ninfrastructure as a service as we move\nfurther towards the right and further\nreduced in platform as a service and\nthere's really nothing to manage when it\ncomes to software as a service because\nwe buy the software not any\ninfrastructure component attached to it\nnow let's talk about the life cycle of\nthe cloud computing solution the very\nfirst thing in the life cycle of a\nsolution or a cloud solution is to get a\nproper understanding of the requirement\ni didn't say get the requirement but\nsaid get a proper understanding of the\nrequirement it is very vital because\nonly then we will be able to properly\npick the right service offered by the\nprovider getting a sound understanding\nthe next thing would be to define the\nhardware meaning choose the compute\nservers that will provide the right\nsupport where you can resize the compute\ncapacity in the cloud to run application\nprograms getting a sound understanding\nof the requirement helps in picking the\nright hardware one size does not fit all\nthere are different services and\nhardwares for different needs you might\nhave like ec2 if you're looking for is\nand lambda if you're looking for\nserverless computing and ecs that\nprovides containerized service so there\nare a lot of hardware's available pick\nthe right hardware that suits your\nrequirement the third thing is to define\nthe storage choose the appropriate\nstorage service where you can backup\nyour data and a separate storage service\nwhere you can archive your data locally\nwithin the cloud or from the internet\nand choose the appropriate storage there\nis one separately for backup called s3\nand there is one separately for archival\nthat's for glaciers so you know you\nknowing the difference between them\nreally helps in picking the right\nservice for the right kind of need\ndefine the network define the network\nthat securely delivers data video and\napplications define and identify the\nnetwork services properly for example\nvpc for network route 53 for dns and\ndirect connection for private p2p line\nfrom your office to the aws data center\nset up the right security services im\nfor authentication and authorization and\nkms for data encryption at rest so there\nare variety of security products\navailable we got to pick the right one\nthat suits our need and there are a\nvariety of deployment and automation and\nmonitoring tools that you can pick from\nfor example cloud watch is for\nmonitoring auto scaling is for being\nelastic and cloud formation is define\nthe management process and tools you can\nhave complete control of your cloud\nenvironment if you define the management\ntools which monitors your aws resources\nand or the custom applications running\non aws platform there are variety of\ndeployment automation and monitoring\ntools you can pick from like cloud watch\nfor monitoring auto scaling for\nautomation and the cloud formation for a\ndeployment so knowing them will help you\nin defining the life cycle of the cloud\ncomputing solution properly and\nsimilarly there are a lot of tools for\ntesting a process like code star and\ncode build and code pipeline these are\ntools with which you can build test and\ndeploy your code quickly and finally\nonce everything is set and done click\nthe analytic service for analyzing and\nvisualizing the data using the analytics\nservices where we can start querying the\ndata instantly and get a result now if\nyou want to visually view the happenings\nin your environment you can pick antenna\nand other tools for analytics or emr and\nwhich is elastic mapreduce and cloud\nsearch thanks guys now we have samuel\nand rahul to take us through the full\ncourse in which they will explain basic\nframework of amazon web services and\nexplore all of its important services\nlike ec2 lambda s3 iam and\ncloudformation we'll also talk about\nazure and some of its popular services\nhello everyone let me introduce myself\nas sam a multi-platform cloud architect\nand trainer and i'm so glad and i'm\nequally excited to talk and walk you\nthrough the session about what aws is\nand talk to you about some services and\nofferings and about how companies get\nbenefited by migrating their\napplications and infra into aws so\nwhat's aws let's talk about that now\nbefore that let's talk about how life\nwas without any cloud provider and in\nthis case how life was without aws so\nlet's walk back and picture how things\nwere back in 2000 which is not so long\nago but a lot of changes a lot of\nchanges for better had happened since\nthat time now back in 2000 a request for\na new server is not an happy thing at\nall because a lot of\nmoney a lot of validations a lot of\nplanning are involved in getting a\nserver online or up and running and even\nafter we've finally got the server it's\nnot all said and done a lot of\noptimization that needs to be done on\nthat server to make it worth it and get\na good return on investment from that\nserver and even after we have optimized\nfor a good return on investment the work\nis still not done there will often be a\nfrequent increase and decrease in the\ncapacity and you know even news about\nour website getting popular and getting\nmore hits it's still an bittersweet\nexperience because now i need to add\nmore servers to the environment which\nmeans that it's going to cost me even\nmore but thanks to the present day cloud\ntechnology if the same situation were to\nhappen today my new server it's almost\nready and it's ready instantaneously and\nwith the swift tools and technologies\nthat amazon is providing uh in\nprovisioning my server instantaneously\nand adding any type of workload on top\nof it and making my storage and server\nsecure you know creating a durable\nstorage where data that i store in the\ncloud never gets lost with all that\nfeatures amazon has got our back so\nlet's talk about what is aws there are a\nlot of definitions for it but i'm going\nto put together a simple and a precise\ndefinition as much as possible now let\nme iron that out cloud still runs on and\nhardware all right and\nthere are certain features in that\ninfrastructure in that cloud\ninfrastructure that makes cloud cloud or\nthat makes aws a cloud provider now we\nget all the services all the\ntechnologies all the features and all\nthe benefits that we get in our local\ndata center like you know security and\ncompute capacity and databases and in\nfact you know we get even more cool\nfeatures like content caching in various\nglobal locations around the planet but\nagain out of all the features the best\npart is that i get or we get everything\non a pay as we go model the less i use\nthe less i pay and the more i use the\nless i pay per unit very attractive\nisn't it right and that's not all the\napplications that we provision in aws\nare very reliable because they run on a\nreliable infrastructure and it's very\nscalable because it runs on an on-demand\ninfrastructure and it's very flexible\nbecause of the designs and because of\nthe design options available for me in\nthe cloud let's talk about how all this\nhappened aws was launched in 2002 after\nthe amazon we know as the online retail\nstore wanted to sell their remaining or\nunused infrastructure as a service or as\nan offering for customers to buy and use\nit from them you know sell\ninfrastructure as a service the idea\nsort of clicked and aws launched their\nfirst product first product in 2006\nthat's like four years after the idea\nlaunch and in 2012 they held a big sized\ncustomer even to gather inputs and\nconcerns from customers and they were\nvery dedicated in making those requests\nhappen and that habit is still being\nfollowed it's still being followed as a\nreinvent by aws and at 2015 amazon\nannounced its revenue to be 4.6 billion\nand in 2015 through 2016 aws launched\nproducts and services that help migrate\ncustomer services into aws well there\nwere products even before but this is\nwhen a lot of focus was given on\ndeveloping migrating services and in the\nsame year that's in 2016 amazon's\nrevenue was 10 billion and not but not\nthe least as we speak amazon has more\nthan 100 products and services available\nfor customers and get benefited from all\nright let's talk about the\nservices that are available in amazon\nlet's start with this product called s3\nnow s3 is a great tool for internet\nbackup and it's it's the cheapest\nstorage option in the object storage\ncategory and not only that the data that\nwe put in s3 is retrievable from the\ninternet s3 is really cool and we have\nother products like migration and data\ncollection and data transfer products\nand here we can not only collect data\nseamlessly but also in a real-time way\nmonitor the data or analyze the data\nthat's being received that they're cool\nproducts like aws data transfers\navailable that helps achieve that and\nthen we have products like ec2 elastic\ncompute cloud that's an resizable\ncomputer where we can anytime anytime\nafter the size of the computer based on\nthe need or based on the forecast then\nwe have simple notification services\nsystems and tools available in amazon to\nupdate us with notifications through\nemail or through sms now anything\nanything can be sent through email or\nthrough sms if we use that service it\ncould be alarms or it could be service\nnotifications if you want stuff like\nthat and then we have some security\ntools like kms key management system\nwhich uses aes 256 bit encryption to\nencrypt our data at rest then we have\nlambda a service for which we pay only\nfor the time in seconds seconds it takes\nto execute our code and we're not paying\nfor the infrastructure here it's just\nthe seconds the program is going to take\nto execute the code for the short\nprogram we'll be paying in milliseconds\nif it's a bit bigger program we'll be\nprobably paying in 60 seconds or 120\nseconds but that's not cheap lot simple\nand lots cost effective as against\npaying for service on an ugly basis\nwhich a lot of other services are well\nthat's cheap but using lambda is a lot\ncheaper than that and then we have\nservices like route 53 a dns service in\nthe cloud and now i do not have to\nmaintain a dns account somewhere else\nand my cloud environment with aws i can\nget both in the same place all right let\nme talk to you about um how aws makes\nlife easier or how companies got\nbenefited by using aws as their i.t\nprovider for their applications or for\nthe infrastructure now uniliver is a\ncompany and they had a problem right and\nthey had a problem and they picked aws\nas a solution to their problem right now\nthis company was sort of spread across\n190 countries and they were relying on a\nlot of digital marketing for promoting\ntheir products and their existing\nenvironment their legacy local\nenvironment proved not to support their\nchanging id demands and they could not\nstandardize their old environment now\nthey chose to move part of their\napplications to aws because they were\nnot getting what they wanted in their\nlocal environment and since then you\nknow rollouts were easy provisioning new\napplications became easy and even\nprovisioning infrastructure became easy\nand they were able to do all that in\npush button scaling and needless to talk\nabout\nbackups that are safe and backups that\ncan be securely accessed from the cloud\nas needed now that company is growing\nalong with aws because of their swift\nspeed in rolling out deployments and\nbeing able to access secure backups from\nvarious places and generate reports and\nin fact useful reports out of it that\nhelps their business now on the same\nlines let me also talk to you about\nkellogg's and how they got benefited by\nusing amazon now kellogg's had a\ndifferent problem it's one of its kind\nnow their business model was very\ndependent on an infrared that will help\nto analyze data really fast right\nbecause they were running promotions\nbased on the analyzed data that they get\nso they're being able to respond to the\nanalyzed data as soon as possible was\ncritical or vital in their environment\nand luckily sap running on hana\nenvironment is what they needed and you\nknow they picked that service in the\ncloud and that's sort of solved the\nproblem now the company does not\nhave to deal with uh maintaining their\nlegacy infra and maintaining their heavy\ncompute capacity and maintaining their\ndatabase locally all that is now moved\nto the cloud or they are using cloud as\ntheir i.t service provider and and now\nthey have a greater and powerful it\nenvironment that very much complements\ntheir business hi there i'm samuel a\nmulti-platform cloud architect and i'm\nvery excited and honored to walk you\nthrough this learning series about aws\nlet me start the session with this\nscenario let's imagine how life would\nhave been without spotify for those who\nare hearing about spotify for the first\ntime spotify is an online music service\noffering and it offers instant access to\nover 16 million licensed songs spotify\nnow uses aws cloud to store the data and\nshare it with their customers but prior\nto aws they had some issues\nimagine using spotify before aws let's\ntalk about that back then users were\noften getting errors because spotify\ncould not keep up with the increased\ndemand for storage every new day and\nthat led to users getting upset and\nusers cancelling the subscription the\nproblem spotify was facing at that time\nwas their users were present globally\nand were accessing it from everywhere\nand they had different latency in their\napplications and spotify had a demanding\nsituation where they need to frequently\ncatalogue the songs released yesterday\ntoday and in the future and this was\nchanging every new day and the songs\ncoming in rate was about 20 000 a day\nand back then they could not keep up\nwith this requirement and needless to\nsay they were badly looking for a way to\nsolve this problem and that's when they\ngot introduced to aws and it was a\nperfect fit and match for their problem\naws offered at dynamically increasing\nstorage and that's what they needed aws\nalso offered tools and techniques like\nstorage lifecycle management and trusted\nadvisor to properly utilize the resource\nso we always get the best out of the\nresource used aws addressed their\nconcerns about easily being able to\nscale yes you can scale the aws\nenvironment very easily how easily one\nmight ask it's just a few button clicks\nand aws solved spotify's problem let's\ntalk about how it can help you with your\norganization's problem let's talk about\nwhat is aws first and then let's bleed\ninto how aws became so successful and\nthe different types of services that aws\nprovides and what's the future of cloud\nand aws in specific let's talk about\nthat and finally we'll talk about a use\ncase where you will see how easy it is\nto create a web application with aws all\nright let's talk about what is aws aws\nor amazon web services is a secure cloud\nservice platform it is also pay as you\ngo type billing model where there is no\nupfront or capital cost we'll talk about\nhow soon the service will be available\nwell the service will be available in a\nmatter of seconds with aws you can also\ndo identity and access management that\nis authenticating and authorizing a user\nor a program on the fly and almost all\nthe services are available on demand and\nmost of them are available\ninstantaneously and as we speak amazon\noffers 100 plus services and this list\nis growing every new week now that would\nmake you wonder how aws became so\nsuccessful of course it's their\ncustomers let's talk about the list of\nwell-known companies that has their idea\nenvironment in aws adobe adobe uses aws\nto provide multi-terabyte operating\nenvironments for its customers by\nintegrating its system with aws cloud\nadobe can focus on deploying and\noperating its own software instead of\ntrying to you know deploy and manage the\ninfrastructure airbnb is another company\nit's an community marketplace that\nallows property owners and travelers to\nconnect each other for the purpose of\nrenting unique vacation spaces around\nthe world and the airbnb community users\nactivities are conducted on the website\nand through iphones and android\napplications airbnb has a huge\ninfrastructure in aws and they are\nalmost using all the services in aws and\nare getting benefited from it another\nexample would be autodesk autodesk\ndevelops software for engineering\ndesigning and entertainment industries\nusing services like amazon rds or\nrational database service and amazon s3\nor amazon simple storage servers\nautodesk can focus on deploying or\ndeveloping its machine learning tools\ninstead of spending that time on\nmanaging the infrastructure aol or\namerican online uses aws and using aws\nthey have been able to close data\ncenters and decommission about 14 000\nin-house and co-located servers and move\nmission critical workload to the cloud\nand extend its global reach and save\nmillions of dollars on energy resources\nbitdefender is an internet security\nsoftware firm and their portfolio of\nsoftwares include antivirus and\nanti-spyware products bitdefender uses\nec2 and they are currently running few\nhundred instances that handle about five\nterabytes of data and they also use\nelastic load balancer to load balance\nthe connection coming in to those\ninstances across availability zones and\nthey provide seamless global delivery of\nservers because of that the bmw group it\nuses aws for its new connected car\napplication that collects sensor data\nfrom bmw 7 series cars to give drivers\ndynamically updated map information\ncanon's office imaging products division\nbenefits from faster deployment times\nlower cost and global reach by using aws\nto deliver cloud-based services such as\nmobile print the office imaging products\ndivision uses aws such as amazon s3 and\namazon route 53 amazon cloudfront and\namazon im for their testing development\nand production services comcast it's the\nworld's largest cable company and the\nleading provider of internet service in\nthe united states comcast uses aws in a\nhybrid environment out of all the other\ncloud providers comcast chose aws for\nits flexibility and scalable hybrid\ninfrastructure docker is a company\nthat's helping redefine the way\ndevelopers build ship and run\napplications this company focuses on\nmaking use of containers for this\npurpose and in aws the service called\nthe amazon ec2 container service is\nhelping them achieve it the esa or\neuropean space agency although much of\nesa's work is done by satellites some of\nthe programs data storage and computing\ninfrastructure is built on amazon web\nservices esa chose aws because of its\neconomical pay as ego system as well as\nits quick startup time the guardian\nnewspaper uses aws and it uses a wide\nrange of aws services including amazon\nkinesis amazon redshift that power an\nanalytic dashboard which editors used to\nsee how stories are trending in real\ntime financial times ft is one of the\nworld's largest leading business news\norganization and they used amazon\nredshift to perform their analysis a\nfunny thing happened amazon redshirt\nperformed so quickly that some analysis\nthought it was malfunctioning they were\nused to running queries overnight and\nthey found that the results were indeed\ncorrect just as much faster by using\namazon redshift fd is supporting the\nsame business functions with costs that\nare 80 percentage lower than what was\nbefore general electric ge is at the\nmoment as we speak migrating more than\n9000 workloads including 300 desperate\nerp systems to aws while reducing its\ndata center footprint from 34 to 4 over\nthe next three years similarly howard\nmedical school htc imdb mcdonald's nasa\nkellogg's and lot more are using the\nservices amazon provides and are getting\nbenefited from it and this huge success\nand customer portfolio is just the tip\nof the iceberg and if we think why so\nmany adapt aws and if we let aws answer\nthat question this is what aws would say\npeople are adapting aws because of the\nsecurity and durability of the data an\nend-to-end privacy and encryption of the\ndata and storage experience we can also\nrely on aws way of doing things by using\nthe aws tools and techniques and\nsuggested best practices built upon the\nyears of experience it has gained\nflexibility there is a greater\nflexibility in aws that allows us to\nselect the os language and database easy\nto use swiftness in deploying we can\nhost our applications quickly in aws be\nit a new application or migrating an\nexisting application into aws\nscalability the application can be\neasily scaled up or scaled down\ndepending on the user requirement cost\nsaving we only pay for the compute power\nstorage and other resources you use and\nthat too without any long-term\ncommitments now let's talk about the\ndifferent types of services that aws\nprovides the services that we talk about\nfall in any of the following categories\nyou see like you know compute storage\ndatabase security customer engagement\ndesktop and streaming machine learning\ndevelopers tools stuff like that and if\nyou do not see the service that you're\nlooking for it's probably is because aws\nis creating it as we speak now let's\nlook at some of them that are very\ncommonly used within computer services\nwe have amazon ec2 amazon elastic bean\nstock amazon light sale and amazon\nlambda amazon ec2 provides compute\ncapacity in the cloud now this capacity\nis secure and it is resizable based on\nthe user's requirement now look at this\nthe requirement for the web traffic\nkeeps changing and behind the scenes in\nthe cloud ec2 can expand its environment\nto three instances and during no load it\ncan shrink its environment to just one\nresource elastic beanstalk it helps us\nto scale and deploy web applications and\nit's made with a number of programming\nlanguages elastic beanstalk is also an\neasy to use service for deploying and\nscaling web applications and services\ndeployed a bit in java.net php nodejs\npython ruby docker and lot other\nfamiliar services such as apache\npassenger and iis we can simply upload\nour code and elastic beanstalk\nautomatically handles the deployment\nfrom capacity provisioning to load\nbalancing to auto scaling to application\nhealth monitoring and amazon lightsail\nis a virtual private server which is\neasy to launch and easy to manage amazon\nlightsail is the easiest way to get\nstarted with aws for developers who just\nneed a virtual private server lightsail\nincludes everything you need to launch\nyour project quickly on a virtual\nmachine like ssd based storage a virtual\nmachine tools for data transfer dns\nmanagement and a static ip and that too\nfor a very low and predictable price aws\nlambda has taken cloud computing\nservices to a whole new level it allows\nus to pay only for the compute time no\nneed for provisioning and managing\nservers and aws lambda is a compute\nservice that lets us run code without\nprovisioning or managing servers lambda\nexecutes your code only when needed and\nscales automatically from few requests\nper day to thousands per second you pay\nonly for the compute time you consume\nthere is no charge when your code is not\nrunning let's look at some storage\nservices that amazon provides like\namazon s3 amazon glacier amazon abs and\namazon elastic file system amazon s3 is\nan object storage that can store and\nretrieve data from anywhere websites\nmobile apps iot sensors and so on can\neasily use amazon s3 to store and\nretrieve data it's an object storage\nbuilt to store and retrieve any amount\nof data from anywhere with its features\nlike flexibility and managing data and\nthe durability it provides and the\nsecurity that it provides amazon simple\nstorage service or s3 is a storage for\nthe internet and glacier glacier is a\ncloud storage service that's used for\narchiving data and long-term backups and\nthis glacier is an secure durable and\nextremely low-cost cloud storage service\nfor data archiving and long-term backups\namazon ebs amazon elastic block store\nprovides block store volumes for the\ninstances of ec2 and this elastic block\nstore is highly available and a reliable\nstorage volume that can be attached to\nany running instance that is in the same\navailability zone abs volumes that are\nattached to the ec2 instances are\nexposed as storage volumes that\npersistent independently from the\nlifetime of the instance an amazon\nelastic file system or efs provides an\nelastic file storage which can be used\nwith aws cloud service and resources\nthat are on premises an amazon elastic\nfile system it's an simple it's scalable\nit's an elastic file storage for use\nwith amazon cloud services and for\non-premises resources it's easy to use\nand offers a simple interface that\nallows you to create and configure file\nsystems quickly and easily amazon file\nsystem is built to elastically scale on\ndemand without disturbing the\napplication growing and shrinking\nautomatically as you add and remove\nfiles your application have the storage\nthey need and when they need it now\nlet's talk about databases the two major\ndatabase flavors are amazon rds and\namazon redshift amazon rds it really\neases the process involved in setting up\noperating and scaling a relational\ndatabase in the cloud amazon rds\nprovides cost efficient and resizable\ncapacity while automating time-consuming\nadministrative tasks such as hardware\nprovisioning database setup patching and\nbackups it sort of frees us from\nmanaging the hardware and sort of helps\nus to focus on the application it's also\ncost effective and resizable and it's\nalso optimized for memory performance\nand input and output operations not only\nthat it also automates most of the\nservices like taking backups you know\nmonitoring stuff like that it automates\nmost of those services amazon redshift\namazon redshift is a data warehousing\nservice that enables users to analyze\nthe data using sql and other business\nintelligent tools amazon redshift is an\nfast and fully managed data warehouse\nthat makes it simple and cost effective\nanalyze all your data using standard sql\nand your existing business intelligent\ntools it also allows you to run complex\nanalytic queries against petabyte of\nstructured data using sophisticated\nquery optimizations and most of the\nresults they generally come back in\nseconds all right let's quickly talk\nabout some more services that aws offers\nthere are a lot more services that aws\nprovides but are we going to look at\nsome more services that are widely used\naws application discovery services help\nenterprise customers plan migration\nprojects by gathering information about\ntheir on-premises data centers in a\nplanning a data center migration can\ninvolve thousands of workloads they are\noften deeply interdependent server\nutilization data and dependency mapping\nare important early first step in\nmigration process and this aws\napplication discovery service collects\nand presents configuration usage and\nbehavior data from your servers to help\nyou better understand your workloads\nroute 53 it's a network and content\ndelivery service it's an highly\navailable and scalable cloud domain name\nsystem or dns service and amazon route\n53 is fully compliant with ipv6 as well\nelastic load balancing it's also a\nnetwork and content delivery service\nelastic load balancing automatically\ndistributes incoming application traffic\nacross multiple targets such as amazon\nec2 instance containers and ip addresses\nit can handle the varying load of your\napplication traffic in a single\navailable zones and also across\navailability zones away auto scaling it\nmonitors your application and\nautomatically adjusts the capacity to\nmaintain steady and predictable\nperformance at a lowest possible cost\nusing aws auto scaling it's easy to set\nup application scaling for multiple\nresources across multiple services in\nminutes autoscaling can be applied to\nweb services and also for db services\naws identity and access management it\nenables you to manage access to aws\nservices and resources securely using im\nyou can create and manage aws users and\ngroups and use permissions to allow and\ndeny their access to aws resources and\nmoreover it's a free service now let's\ntalk about the future of aws well let me\ntell you something cloud is here to stay\nhere's what in store for aws in the\nfuture as years pass by we're gonna have\na variety of cloud applications born\nlike iot artificial intelligence\nbusiness intelligence serverless\ncomputing and so on cloud will also\nexpand into other markets like\nhealthcare banking space automated cars\nand so on as i was mentioning some time\nback a lot or greater focus will be\ngiven to artificial intelligence and\neventually because of the flexibility\nand advantage that cloud provides we're\ngoing to see a lot of companies moving\ninto the cloud all right let's now talk\nabout how easy it is to deploy and web\napplication in the cloud so the scenario\nhere is that our users like a product\nand we need to have a mechanism to\nreceive input from them about their\nlikes and dislikes and you know give\nthem the appropriate product as per\ntheir need all right though the setup\nand the environment it sort of looks\ncomplicated we don't have to worry\nbecause aws has tools and technologies\nwhich can help us to achieve it now\nwe're going to use services like route\n53 services like cloud watch ec2 s3 and\nlot more and all these put together are\ngoing to give an application that's\nfully functionable and an application\nthat's going to receive the information\nlike using the services like route 53\ncloudwatch ec2 and s3 we're going to\ncreate an application and that's going\nto meet our need so back to our original\nrequirement all i want is to deploy a\nweb application for a product that keeps\nour users updated about the happenings\nand the new comings in the market and to\nfulfill this requirement here is all the\nservices we would need ec2 here is used\nfor provisioning the computational power\nneeded for this application\nand ec2 has a vast variety of family and\ntypes that we can pick from for the\ntypes of workloads and also for the\nintents of the workloads we're also\ngoing to use s3 for storage and s3\nprovides any additional storage\nrequirement for the resources or any\nadditional storage requirement for the\nweb applications and we are also going\nto use cloudwatch for monitoring the\nenvironment and cloudwatch monitors the\napplication and the environment and it\nprovides trigger for scaling in and\nscaling out the infrastructure and we're\nalso going to use route 53 for dns and\nroute 53 helps us to register the domain\nname for our web application and with\nall the tools and technologies together\nall of them put together we're going to\nmake an application a perfect\napplication that caters our need all\nright so i'm going to use elastic bean\nstock for this project and the name of\nthe application is going to be as you\nsee gsg sign up and the environment name\nis gsg signup environment one let me\nalso pick a name let me see if this name\nis available yes that's available that's\nthe domain name so let me pick that and\nthe application that i have is going to\nrun on node.js so let me pick that\nplatform and launch now as you see\nelastic bean stock this is going to\nlaunch an instance it's going to launch\nthe monitoring setup or the monitoring\nenvironment it's going to create a load\nbalancer as well and it's going to take\ncare of all the security features needed\nfor this application\nall right look at that i was able to go\nto that url which is what we gave and\nit's now having an default page shown up\nmeaning all the dependencies for the\nsoftware is installed and it's just\nwaiting for me to upload the code or in\nspecific the page required so let's do\nthat\nlet me upload the code i already have\nthe code saved here\nthat's my code\nand that's going to take some time all\nright it has done its thing and now if i\ngo to the same url look at that i'm\nbeing thrown an advertisement page all\nright so if i sign up with my name email\nand stuff like that you know it's going\nto receive the information and it's\ngoing to send an email to the owner\nsaying that somebody had subscribed to\nyour service that's the default feature\nof this app look at that email to the\nowner saying that somebody had\nsubscribed to your app and this is their\nemail address stuff like that not only\nthat it's also going to create an entry\nin the database and dynamodb is the\nservice that this application uses to\nstore data there's my dynamodb and if i\ngo to tables\nright and go to items i'm going to see\nthat a user with name samuel and email\naddress so and so has said okay or has\nshown interest in the preview of my site\nor product so this is where this is how\ni collect those information right and\nsome more things about the\ninfrastructure itself is\nit is running behind and load balancer\nlook at that it had created a load\nbalancer it had also created an auto\nscaling group now that's the feature of\nelastic load balancer that we have\nchosen it has created an auto scaling\ngroup and now let's put this url you see\nthis it's it's not a fancy url right\nit's an amazon given url a dynamic url\nso let's put this url behind our dns\nlet's do that\nso go to services go to route 53\ngo to hosted zone and there we can find\nthe\ndns name right so that's a dns name all\nright\nall right let's create an entry\nand map that url\nto our load balancer right\nand create now technically if i\ngo to this url it should take me\nto that application all right look at\nthat i went to my custom url and now\nthat's pointed to my application\npreviously my application was having a\nrandom url and now it's having a custom\nurl\nso what did we learn we started the\nsession with what is aws we looked at\nfeatures and tools technologies products\nthat aws provides and we also looked at\nthe how aws became very successful again\nwe looked into the benefits and features\nof aws in-depth and we also looked at\nsome of the services that aws provides\nin random and then we picked particular\nservices and we talked about them like\nec2 elastic bean stock light sale lambda\nstorage stuff like that then we also\nlooked at the future of aws what aws\nholds in the store for us we looked at\nthat and then finally we looked at a lab\nin which we created an application using\nelastic beanstalk and all that we had to\ndo was a couple of clicks and boom an\napplication was there available that was\nconnected to\nthe database and that was connected to\nthe simple notification system that was\nconnected to cloudwatch that was\nconnected to storage stuff like that\nwhat is azure what's the big cloud\nservice provider all about so azure is a\ncloud computing platform provided by\nmicrosoft now it's basically an online\nportal through which you can access and\nmanage resources and services\nnow resources and services are nothing\nbut you know you can store your data and\nyou can transform the data using\nservices that microsoft provides again\nall you need is the internet and being\nable to connect to the azure portal then\nyou get access to all of the resources\nand their services in case you want to\nknow more about how it's different from\nits rival which is aws i suggest you\nclick on the top right corner and watch\nthe aws versus azure video so that you\ncan clearly tell how both these cloud\nservice providers are different from\neach other now here are some things that\nyou need to know about azure it was\nlaunched in february 1st 2010 which is\nsignificantly later than when aws was\nlaunched it's free to start and has a\npay-per-use model which means like i\nsaid before you need to pay for the\nservices you use through azure and one\nof the most important selling points is\nthat 80 percent of fortune 500 companies\nuse as your services which means that\nmost of the bigger companies of the\nworld actually recommend using azure and\nthen azure supports a wide variety of\nprogramming languages the c-sharp\nnode.js java and so much more another\nvery important selling point of azure is\nthe amount of data centers it has across\nthe world now it's important for a cloud\nservice provider to have many data\ncenters around the world because it\nmeans that they can provide their\nservices to a wider audience now azure\nhas 42 which is more than any cloud\nservice provider has at the moment it\nexpects to have 12 more in a period of\ntime which brings its total number of\nregions it covers to 54. now let's talk\nabout azure services now azure services\nhave 18 categories and more than 200\nservices so we clearly can't go through\nall of them it has services that cover\ncompute and machine learning integration\nmanagement tools identity devops web and\nso much more you're going to have a hard\ntime trying to find a domain that azure\ndoesn't cover and if it doesn't cover it\nnow you can be certain they're working\non it as we speak so first let's start\nwith the compute services first virtual\nmachine with this service what you're\ngetting to do is to create a virtual\nmachine of linux or windows operating\nsystem it's easily configurable you can\nadd ram you can decrease ram you can add\nstorage remove it all of it is possible\nin a match of seconds now let's talk\nabout the second service cloud service\nnow with this you can create a\napplication within the cloud and all of\nthe work after you deploy it deploying\nthe application that is is taken care of\nby azure which includes you know\nprovisioning the application load\nbalancing ensuring that the application\nis in good health and all the other\nthings are handled by azure next up\nlet's talk about service fabric now with\nservice fabric the process of developing\na micro service is greatly simplified so\nyou might be wondering what exactly is a\nmicro service now a micro service is\nbasically an application that consists\nof smaller applications coupled together\nnext up functions now with functions you\ncan create applications in any\nprogramming language that you want\nanother very important part is that you\ndon't have to worry about any hardware\ncomponents you don't have to worry what\nram you require or how much storage you\nrequire all of that is taken care of by\nazure all you need is to provide the\ncode to azure and it will execute it and\nyou don't have to worry about anything\nelse now let's talk about some\nnetworking services first up we have\nazure cdn or the content delivery\nnetwork now the azure cdn service is\nbasically for delivering web content to\nusers now this content is of high\nbandwidth and can be transferred or can\nbe delivered to any person across the\nworld now these are actually a network\nof servers that are placed in strategic\npositions across the world so that the\ncustomers can obtain this data as fast\nas possible next up we have express\nroute now with this you can actually\nconnect your on-premise network onto the\nmicrosoft cloud or any of the services\nthat you want through a private\nconnection so the only communication\nthat happens is between your on-premise\nnetwork and the service that you want\nthen you have virtual network now with\nvirtual network you can have any of the\nazure services communicate with each\nother in a secure manner in a private\nmanner next we have azure dns so azure\ndns is a hosting service which allows\nyou to host their dns or domain name\nsystem domains in azure so you can host\nyour application using azure dns now for\nthe storage services first up we have\ndisk storage with this storage you are\ngiven a cost effective option of\nchoosing hdd or solid state drives to go\nalong with your virtual machines based\non your requirements then you have blob\nstorage now this is actually optimized\nto ensure that they can store massive\namounts of unstructured data which can\ninclude text data or even binary data\nnext you have file storage which is a\nmanaged file storage and can be\naccessible via the smb protocol or the\nserver message block protocol and\nfinally you have queue storage now with\nqueue storage you can provide durable\nmessage queuing for an extremely large\nworkload and the most important part is\nthat this can be accessed from anywhere\nin the world now let's talk about how\nazure can be used firstly for\napplication development it could be any\napplication mostly web applications then\nyou can test the application see how\nwell it works you can host the\napplication on the internet you can\ncreate virtual machines like i mentioned\nbefore with the service you can create\nthese virtual machines of any size or\nram that you want you can integrate in\nsync features you can collect and store\nmatrices for example how the data works\nhow the current data is how you can\nimprove upon it all of that is possible\nwith these services and you have virtual\nhard drives which is an extension of the\nvirtual machines where these services\nare able to provide you a large amount\nof storage where data can be stored talk\nabout azure in great length and breadth\nand if you're looking for a video that\ntalks and walks you through all the\nservices in azure then this could be one\nof the best video you could find in the\ninternet and without any further delay\nlet's get started\neverybody like story is it so let's get\nstarted with the story in a city not so\nfar away a ceo had plans to expand his\ncompany globally and called one of his\nid personal for an i.t opinion and this\nguy has been in the company for a long\ntime and is very seasoned with the\ncompany's infra and he nicely answered\nthe questions with what he foresaw and\nhe said i have a good news and a bad\nnews for us to go global and he starts\nwith the good news he said sir we're\nwell on our way to become one of the\nworld's largest shipping company and the\nbad news is however our data centers\nhave almost run out of space and setting\nup new ones around the world would be\ntoo expensive and very time consuming\nnow the i.t personnel let's call him\nmike now he explains the situation from\nhow he saw it but the ceo had done some\nhomework about how he was going to do it\nand he answered mike saying don't worry\nabout that mic i've come up with a\nsolution for a problem and it's called\nmicrosoft azure well mike is an\nhard-working and honest id professional\nworking for that company but he did not\nspend time on learning the latest\ntechnologies and he asked this question\nvery honestly oh how does it solve a\nproblem and the ceo begins to explain\nazure to mike and he starts with what is\ncloud computing and then he goes on and\ntalks about azure and the service is\noffered by azure and why azure is better\nthan the other cloud providers and what\nare the great companies that uses azure\nand how they got benefited out of it and\nthen he winds it all up with the use\ncases of azure so he begins his\nexplanation saying microsoft azure is\nknown as the cloud service provider and\nit works on the basis of cloud computing\nnow microsoft azure is formerly known as\nwindows azure and it's a microsoft's\npublic cloud computing platform it also\nprovides a range of cloud services\nincluding some of them are compute\nanalytics storage and networking we can\nalways pick and choose from these\nservices to develop and scale our\napplications or even plan on running\nexisting applications in the public\ncloud microsoft azure is both a platform\nas a service and infrastructure as a\nservice let's now fit their conversation\nout and let's talk about what is cloud\ncomputing azure services offered by\nazure how is azure leading when compared\nto other cloud service providers and\nwhat are the companies that are using\nazure let's talk about that in simple\nterms cloud computing is being able to\naccess compute services like servers\nstorage database networking\nsoftware analytics intelligence and lot\nmore over the internet which is the\ncloud with the\nflexibility of the resources that we use\nlike anytime i want a results i can use\none and it becomes available immediately\nand anytime if i want to retire and\nresults i can simply retire as a service\nand not pay for it and we also\ntypically pay only for the services that\nwe use and this helps greatly with our\noperating cost to run our infrastructure\nmore efficiently and scale our\nenvironment up or down depending on the\nbusiness needs and changes\nand all the servers and storages and\ndatabases and networking all that are\naccessed through the network of remote\nsystems or remote computers hosted in\nthe internet typically in the providers\ndata center which is azure in this case\nnow we don't use any physical server or\nan on-premises server here well we still\nuse physical servers and vms you know\nhosted on a hardware or a physical\nserver but they're all in the provider's\nenvironment and none of them sit on\npremises or in our data center we only\naccess them remotely it looks and feels\nthe same except for the fact that they\nare in a remote location we access them\nremotely do all the work remotely and\nwhen we're done we can shut it down and\nnot pay for them so some of the use\ncases some of the use cases of cloud\ncomputing are creating applications and\nservices the other use cases are storing\nor using cloud for storage alone\nif there is one thing that ever grows in\nour organization is the storage every\nnew day there is a new storage\nrequirement and it's very dynamic it's\nvery hard to predict and if we go out\nand buy a big storage capacity up front\nuntil we use the storage capacity fully\nthe empty storages you know we're\nwasting money on them so instead i can\ngo for a storage with scales dynamically\nthat's in the cloud put storage or put\ndata in the cloud and pay only for what\nyou're storing and for the next month if\nyou have deleted or flushed out some\nfiles or data pay less for it so it's a\nvery dynamic storage in the cloud and a\nlot of companies are getting benefited\nfrom storing data in the cloud because\nof its uh dynamic in nature and the cost\nthat comes along with it the cheap cost\nthat comes along with it and also they\ngive a lot of the providers like azure\nthey give a data replication for free\nthey promise an sla along with the data\nwe store in the cloud so there's an sla\nattached to it and they also provide\ndata recoveries as well if in case\nsomething goes wrong with the physical\ndisk where our data is stored azure\nautomatically makes our data available\nfrom the redundant or other places where\nit had stored our data because of the\nsla they wanted to keep the other use\ncase for azure is hosting websites and\nrunning blogs using the compute service\nbe it storing music and letting your\nusers stream the music azure is a good\nplace to store music and stream the\nmusic with the benefit of\ncdn content delivery network which\nallows us to stream a video or audio\nfiles with great speed you know with\nthat with azure our audio or video\napplication works seamlessly because\nthey are provided to the client with\nvery low latency and that improves the\ncustomer experience for our application\nazure compute service is a good place\nfor delivering software on demand there\nare a lot of software's embedded\nsoftwares that we can buy using azure\nand everything on a pay-as-you-go\nservice model so anytime we need a\nsoftware we can go out and immediately\nbuy the software for the next one or 2r\nlet's say and use them and then return\nit back\nwe're not bound to any yearly licensing\ncost by that azure computing services\nhas analytic available for us with which\nwe can analyze get a good visualization\nof what's going on in a network be it\nlogs be the performance be the metrics\nyou know instead of looking at logs and\nsearching logs and trying to do manual\nthings over the heaps and heaps of logs\nthat we have saved azure analytics\nservices helps us to get a good visual\nof what's going on in the network where\nhave we dropped where have we increased\nor what's causing what's the major\ndriver what is the top 10 errors that we\nget in the server in the application\nstuff like that those can be easily\ngathered from the azure analytic\nservices\nnow cloud is really a very cool term for\nthe internet a good analogy would be\nlooking back anytime we look at a\ndiagram when we do not know how things\nare transferred we simply draw a cloud\nright for example a mail gets sent from\na person in one country to a person in\nthe other country a lot of things\nhappening in between from the time you\nhit the send button and the time the\nother person hits the real button right\nand we the the simple and the easiest\nway of putting it in a picture is simply\ndraw a cloud and on the one end one\nperson will be sending the email and on\nthe other end the other person will be\nreading the email so a cloud is a really\ncool term for the internet now that's\nsome basics about cloud computing now\nthat we've understood about cloud\ncomputing in general let's talk about\nmicrosoft azure as a cloud service\nnow microsoft azure is a set of cloud\nservices to build\nmanage and deploy applications on a\nnetwork with the help of microsoft\nazure's frameworks now microsoft azure\nis a computing service created by\nmicrosoft basically for building testing\ndeploying and managing applications and\nservices through a global network of\nmicrosoft managed data centers\nnow microsoft azure provides sas which\nis software as a service and pass which\nis platform as a service and iaas\ninfrastructure as a service and they\nsupport many different programming\nlanguages tools and framework and those\ntools and framework include both\nmicrosoft specific and third-party\nsoftware now let me pick and talk about\na specific service for example\nmanagement azure automation provides a\nway for us to automate the manual long\nrunning and frequently repeated tasks\nthat are commonly performed tasks both\nin cloud and enterprise environment it\nsaves us a lot of time and increases the\nreliability and it kind of gives a good\nadministrative control and even\nschedules the task automatically to be\nperformed on a regular basis\nto give you a quick history of microsoft\nazure it was launched on first february\n2010\nand it was awarded or it was called\nan industry leader for infrastructure\nand platform as a service by a gartner\nnow gartner is the world's leading\nresearch and advisory company this\nmicrosoft azure supports a number of\nprogramming languages like c sharp java\nand python all these cool services we\nget to use and pay only for how much we\nuse for example if we use for an r we\nonly get to pay for an r even the\ncostliest system available if you use\nthem for an r we only pay for that\nparticular r and then we're done no more\nbilling on the resource that we have\nused a microsoft azure has spread itself\nmore than 50 regions around the world so\nit's quite easy for us to pick a region\nand it will start provisioning and\nrunning our applications probably from\nday one because the infrastructure and\nthe tools and technologies needed to run\nour application are already available\nall that we have to do is commit the\ncode in that particular region or build\nan application and launch it in that\nparticular region and they become live\nstarting day one now because we have 50\nregions around the world we can very\ncarefully design our environment to\nprovide low latency services to our\ncustomers all right instead of in\ntraditional data center let's say you\nknow customers will have to or their\nrequest will have to travel all the way\naround the globe to reach a data center\nwhich lives in the other side of the\nplanet and this adds more latency to it\nand it is really not feasible to build a\ndata center\nnear\neach customer location because of the\ncost involved but with azure it's\npossible azure already has data centers\naround the world and all that we have to\ndo is just pick a data center build an\nenvironment there they are available\nstarting day one number one and also the\ncost is considerably saved because we\nare using a public cloud instead of an\nphysical infrastructure to serve those\ncustomers from a very local location and\nthese services that azure is offering is\never increasing as of now as we speak we\nhave like 200 plus services offered and\nthey span through different domain or\ndifferent platform or different\ntechnologies available within the azure\nconsole portal now we're going to talk\nabout that later in this section so hold\nyour breath till we talk about it but\nfor now just know that we have like 200\nplus services offered\nby azure\nlet's now talk about different services\nand azure starting with artificial\nintelligence plus machine learning where\nwe have a lot of tools and technologies\nso the wide variety of services\navailable on azure includes artificial\nintelligence plus machine learning plus\nanalytic services to get and or to give\nus a good visual of how the data or how\nthe application is performing or the\ntype of the category of data stored and\nto read from the logs and variety of\ncompute services different vms with\ndifferent size and different operating\nsystems different containers available\ndifferent type of databases available a\nlot of developer tools that are\navailable for us\nand identity service to\nmanage our users in the azure cloud and\nthose users can be integrated or\nfederated with let's say google facebook\nyou know linkedin so there are some\nexternal federation services they can be\nused to integrate with our identity\nsystem iots iot services iot tools and\ntechnologies available and management\ntools to manage the users creating\nidentity is one and then managing them\non top of it is a totally different\nthing and we have tools technologies to\nmanage the users\ncool services for data migration data\nmigration is now made simple tools and\ntechnologies available for mobile\napplication development and i can plan\nmy own network in the cloud with the\nnetworking services i can implement my\nown security both azure provider and\nthird-party security services on azure\ncloud that's now possible and a lot of\nstorage options available in the cloud\nso these are just a glimpse of the big\nlist of services available in azure\ncloud so that was a glimpse of what's\navailable in the cloud let's talk about\nthe services in a specific let's take\ncompute for example you know whenever\nwe're building a new application or\ndeploying existing ones\nthe azure compute service provides the\ninfrastructure we need to run and\nmaintain our application we can easily\ntap in the capacity that azure cloud\nservice has and we can scale our compute\nrequirement on demand we can also\ncontainerize our application we have the\noption of choosing windows or linux via\nmachine and take the advantage of the\nflexible options azure provides for us\nto migrate our vms to azure and lot more\nand these compute services also include\na full-fledged identity solution meaning\nintegration with active directory in the\ncloud or an on-premises and lot more\nlet's look at some of the services that\nthis compute domain provides\nsome of the services the compute domain\nprovides are virtual machines and this\nazure virtual machines gives us the\nability to develop and manage a virtual\ncomputer environment or a virtualized\nenvironment inside azure's cloud\nenvironment that too in a virtual\nprivate network now we will talk about\nvirtual private network at a later point\nbut as of now just uh know that there\nare a lot of services available in azure\ncompute servers that we can get\nbenefited from we can always choose from\na very wide range of compute options\nfor example you know we have an option\nto choose the operating system we have\nthe option to choose whether the system\nshould be in on premises or in the cloud\nor do we want to maintain the\nenvironment both in on premises and in\nthe cloud we have the option of choosing\nthe operating system whether we want to\nuse our own operating system with some\nsoftware attached to it or do you want\nto go and buy the operating system from\nthe cloud from azure marketplace and\nthese are just a few of the options\navailable for us when we want to buy the\ncompute environment and these compute\nenvironments are easily scalable meaning\nwe can easily scale our vm instances\nfrom one instance to thousands of\nvirtual machines in a matter of minutes\nor simply put in a couple of button\nclicks and all these services are\navailable on a pay for what we use model\nmeaning there is no upfront cost we use\nthe service and then pay for the\nservices that we have used there is no\nliteral a long-term commitment when it\ncomes to using virtual machines in the\ncloud and these most of the services are\nbuilt on a pay-per-minute billing basis\nall right and at no point because of the\npay-per-minute billing model at no point\nwe will be overpaying for any of the\nservices that's that's attractive isn't\nit now let's talk about batch service\nnow bad service is always independent\nregardless of whether you choose windows\nor linux it's going to run fairly well\nand with batch servers we can take\nadvantage of the environment's unique\nfeatures and not only that in short the\nbatch service helps us to manage the\nwhole batch environment and also it\nhelps to schedule the jobs now this\nazure batch service is actually runs on\na large scale parallel and high\nperformance computing because of that\nbatch jobs are highly efficient in azure\nand when we run bad services this azure\nbatch creates a pool of computer nodes\nand installs the needed applications\nthat we want to run and then it\nschedules jobs to those individual nodes\nin those pools as a customer there is no\nneed for us to install a cluster or\nthere is no need for us to install a\nsoftware that actually can use the jobs\nor even to manage or even to scale those\ninfrastructure are the software because\neverything is managed by azure and this\nbatch service is a platform as a service\nthere is no additional charge for using\nthis batch service except for i mean the\nonly charges that we'll be paying is for\nthe virtual machines that the service\nuses and the storage that we will be\nusing of course and the networking\nservices that we would be using for this\nbatch service let's summarize this bad\nservice we have a choice of operating\nsystem that we can pick and use and it\nscales by itself now the alternative for\nthe batch would be queues but in queues\nwe'll have to pre-provision and pay for\nthe infrastructure even if we're not\nusing it but with a batch\nwe only pay for what we use and this bad\nservice helps us to manage the\napplication manage the scheduling as a\nwhole as if they are just one thing as\nnext thing in the compute domain let's\ntalk about this fabric service now this\nfabric service is actually a distributed\nsystem platform that helps us to package\ndeploy and manage a scalable and a very\nreliable microservice and containers and\nwhat does it help this azure fabric\nservice helps us or it helps the\ndevelopers and administrators so they\ncan avoid the complex infrastructure\nproblems and they can focus only on\nimplementing workloads or taking care of\ntheir development taking care of their\napplication instead of spending time on\ninfrastructure so what service fabric\nservice fabric it provides runtime\ncapabilities and life cycle management\ntwo applications that are composed of\nmicro services no infrastructure\nmanagement at all and with service\nfabric we can easily scale the\napplication to tens or hundreds or even\nto thousands of machines here machines\nrepresent containers as next thing in\ncompute domain let's talk about virtual\nmachine scale set now this virtual\nmachine scale that it lets us to create\na group of identical load balanced vms i\njust want to mention it again it helps\nus to manage a group identical and load\nbalanced vms the number of instances or\nthe number of vm instances in an in a\nscale set can increase or decrease\nin response to\nthe demand or in response to a schedule\nthat we define you know the resources\nneeded on a monday morning is not the\nsame as that would be required on a\nsaturday or a sunday morning all right\nand even within the day the resources\nthat would be needed in the beginning of\nthe business hour is not the resources\nthat would be needed at noon or you know\nafter eight or nine in the evening so\nthe demands could actually vary in the\nenvironment and the skill set helps us\nto take care of the varying demand or\ntake care of the different\ninfrastructure requirement at a\ndifferent schedule throughout the day\nthroughout the week throughout the month\nor could be throughout the year as well\nthe skill set also allows us to provide\nhigh availability to our applications\nand it helps us to centrally manage\nconfigure and update a large number of\nvms as if they they are just one thing\nnow you might ask well virtual machines\nare enough why would we need a virtual\nmachine skill set just like i said this\nvirtual machine skill set helps us with\na greater redundancy and improved\nperformance for our applications and\nthose applications can be accessed\nthrough a load balancer that actually\ndistributes the request to the\napplication instances so in a nutshell\nthis virtual machine scale set uh it\nhelps us to create a large number of\nidentical virtual machines number one\nand with skill set we can increase or\ndecrease the virtual machines with\nvirtual machine scale set we can\ncentrally manage and configure and\nupdate a big group of vms and it's a\ngreat use case when it comes to big data\nor container workloads as next thing in\ncompute domain let's talk about cloud\nservices now this azure cloud service is\nactually a platform as a service and\nit's very friendly in fact it is\ndesigned for applications that support\nscalability or an application that\nrequires scalability or reliability and\nand on top of it you want them to be\nvery inexpensive to operate so azure\ncloud service provides all these so\nwhere would this cloud service run well\nit runs on a vm but it's a platform as a\nservice vms are infrastructure as a\nservice and when we run applications on\nvm through cloud service it becomes\nplatform as a service so here is how you\ngot to be thinking with infrastructure\nas a service like vms we first create\nand configure the environment and then\nwe run applications on top of it let's\nlook at the responsibility the\nresponsibility for us in vm is that we\nmanage everything end to end like uh you\nknow deploying new patches picking the\nversions of the operating system and\nmaking sure they are intact and all that\nstuff it's all managed by us but on the\ncontrary with platform as a service it's\ni mean it's as if the environment is\nalready ready all that you have to do is\ndeploy your application in it and manage\nthe platform i mean manage the platform\nnot as an administrator because all the\nadministration is taken care by azure\nlike you know deploying new versions of\nthe operating system it's all handled by\nthe azure so we deploy the application\nand we manage the application that's it\ninfrastructure management is handled by\nazure so what does cloud service provide\nthis cloud service provides a platform\nuh where we can uh\nwrite the uh application code and we\ndon't have to worry about hardware\nsimply hand over the code and cloud\nservice takes care of it so no worry on\nthe hardware at all so responsibilities\nlike patching what do we do if something\ncrashes how do i update the\ninfrastructure how do i manage\nthe maintenance or the downtime in the\nunderlying infrastructure all that is\nhandled by azure it also provides a good\ntesting environment for us you know we\ncan simply run the code test it before\nit's actually released to the production\ni want to expand a bit on these testing\napplications so this azure cloud service\nit actually gives us a staging\nenvironment for testing a new release\nwithout it affecting the existing\nrelease which actually reduces the\ncustomer downtime so we can run the\napplication tested and anytime that's\nready for production all that's needed\nfor us to do to move it to production is\nsimply to swap the staging environment\ninto the production environment and the\nold production environment will now\nbecome the new staging environment where\nwe can\nadd more to it and then swap it back at\na later point so it kind of gives us\nunswappable environment for testing our\napplications and not only that it gives\nus health monitoring alerts it helps us\nto monitor the health and availability\nof our application and there is a\ndashboard we can benefit from when we\nuse azure cloud services and that shows\nthe key statistics all in one place and\nwe can also set up real-time alerts to\none when a service availability or a\ncertain metrics that we are concerned\nabout degrades as next thing in compute\ndomain let's talk about functions now\nfunctions are serverless computing many\ntime if you heard about azure being\nserverless a lot of time they are\nreferencing or the person who's talking\nto you is referencing to serverless\ncomputing or azure functions which is a\nserverless computing service hosted on\nmicrosoft azure the main motive of\na function is to accelerate and simplify\napplication development functions helps\nus to run code on demand without\nwe need to pre-provision or manage any\nazure infrastructure so azure functions\nare script or a piece of code that gets\nrun in response to an event that you\nwant to handle so in short we can just\nwrite a code that you need for a problem\nat hand without actually worrying about\nthe whole application or the\ninfrastructure that will be running that\ncode and the best of all the best is\nwhen we use functions we only pay for\nthe time that our code runs\nso what does functions provide or what\ndoes azure functions provide azure\nfunctions allow users to build\napplications using serverless\nsimple functions with the programming\nlanguage of our choice so the current\nprogramming languages that are supported\nis c sharp f sharp node.js java and php\nso here we really don't have to worry\nabout provisioning or maintaining\nservers if a code requires more resource\nyes azure functions handles or it\nprovides the additional resources needed\nby the code and the best part is we only\npay for the amount of time the functions\nare running not the resources but the\namount of time the function is running\nas next thing and moving to the new\ndomain let's talk about the container\ndomain in azure now the container domain\nor the container service it allows us to\nquickly deploy a production ready\nkubernetes or a docker swamp cluster now\nwhat's a container a container is a\nstandard unit of software that packages\nof code and all its dependencies so the\napplications run quickly and reliably\nfrom one computing environment to\nanother it could be a testing uh to\nstaging to developing development\nenvironment to staging to production or\nfrom one production to another\nproduction are on premises to cloud or\none cloud to another cloud vice versa\nnow imagine we had an option not to\nworry about the vm and just focus on the\napplication well that's exactly what\ncontainers helps us achieve so these\ncontainer instances enable us to focus\non applications and not worrying about\nmanaging vms or not worrying about the\nlearning the new tools required to\nmanage the vms or even the deployment\nand our applications that we create they\nrun in a container running in a\ncontainer is what helps us to achieve\nall these not being able to manage or\nnot needing to manage the virtual\nmachines so these containers uh they can\nbe deployed into the cloud using a\nsingle command if you're using a command\nline interface and a couple of button\nclicks if we are using the azure portal\nand these containers are kept\nlightweight but they are equally secure\nas virtual machines let's talk about\ncontainer services next thing the\ncontainer service or\nsometimes called as azure kubernetes\nservice it helps us to manage the\ncontainers container is one thing and a\nservice that's used to manage the\ncontainer is another thing now this\nkubernetes service or acs it helps us to\nmanage the containers so let's expand on\nthis a bit so this azure container\nservice or acs it it actually provides a\nway to simplify the creation\nconfiguration and management of a\ncluster of virtual machines that are\npre-configured to run containerized\napplications on top of them and\ndeploying them deploying these\ncontainers might take like 15 to 20\nminutes or deploying the virtual\nmachines that run containers in it might\ntake 15 to 20 minutes and once they are\nprovisioned we can actually manage them\nby using simple ssh tunnel into them and\nthis acs when it runs application it\nruns applications from docker images\nwhat does that mean a docker images\nmakes sure that the applications the\ncontainer runs are fully portable images\nare portable and\nacs also helps us to orchestrate the\ncontainer environment not only that it\nalso helps us to ensure that these\napplications that we run in containers\ncan be scaled to thousands or even tens\nof thousands of containers so in a\nnutshell managing an existing\napplication into a container and running\nit using aks or acs is really easy or\nthat's what it is all about to make the\napplication management or migration easy\nnow managing the container based\narchitecture and we discussed that\ncontainers could be tens or even tens of\nthousands of containers so managing them\nis made\nsimple using this container services and\neven training of model using a large\ndata set in a complex and resource\nintensive environment this aks helps us\nto simplify\nthat environment all right as next thing\nin container domain let's talk about\ncontainer registry we spoke about\nregistry a little bit when we spoke\nabout docker images so container\nregistry is a single place where we can\nstore our images which are docker images\nwhen we use when we use containers it's\nit's docker images that we use for our\nimage purposes so these container images\nare a central registry that can be used\nto ease container development by easing\nthe storage and management of container\nimages so there we can store all kinds\nof images like\ndocker swamp or the images used in\ndocker swarm are in kubernetes\neverything can be stored in container\nregistry in azure now anytime we store a\ncontainer image it provides us an option\nfor jio replication what that means is\nthat we can efficiently manage a single\nregistry replicated across multiple\nregions\nnow these jio replication it actually\nenables us to manage global deployments\nassuming we are having an environment\nthat\nrequires a global deployment so it helps\nus to manage global deployments as one\nentity because we are geo-replicating we\nwould be updating we would be editing\none image and that image gets replicated\nthroughout\nthe global replication centers we would\nhave set up and so just one editing\nwould have actually edited the global\nimages and those global images would\nhave provisioned at the global\napplication so one edit replication and\nthen provisioning of the applications\nglobal wide and this replication also\nhelps us to\nhelps us network latency because you\nknow anytime an application needs to\ndeploy it does not have to rely on a\nsingle source which which can be reached\nonly through high latency network\nbecause we have global replications\naround the world anytime the application\nwants to check back it would check back\nuh the application which is in a very\nnearby location for the application\nitself\nglobal replication means that we are\nmanaging it as a single entity that's\nbeing replicated across the multiple\nregions in the globe as next thing in\nour learning let's talk about\nazure databases now these azure\ndatabases are\nrational in fact they have many flavors\nin them we're going to look at different\nflavors or sql nosql cache type of\ndatabase that has your offer so we're\ngoing to learn one at a time or we're\ngoing to learn one by one so this azure\nsql database is a relational database in\nfact it's a regional database as a\nservice it's managed by azure we don't\nget to do a lot of management in it so\nit's a rational database as a service uh\nbased on microsoft\nsql server database engine and this\ndatabase is a high performance database\nit's very reliable and it's very secure\nas well and this high reliability high\nperformance and for this high security\nreally don't have to do anything it\ncomes along with it and it's managed by\nazure and there are two things that i\ndefinitely need to mention about azure\nsql database that is it's an intelligent\nservice number one it's fully managed by\nazure and it also has this one good\nthing which is it has built-in\nintelligence that learns app patterns\nand adapts to maximize performance and\nreliability and data protection of the\napplication that's something that's not\nfound in\nmany of the other cloud providers that\ni'm aware of so i thought i'll mention\nit so it uses built-in intelligence to\nlearn about the user's database patterns\nand helps improve performance and\nprotection and migration or importing\ndata is very easy when it comes to azure\nsql database so it can be readily or\nimmediately\nused for analytic reporting and\nintelligent applications in azure as\nnext thing let's talk about azure cosmo\ndb now azure cosmodb is a database\nservice that is for nosql type and\nit's it's created to provide low latency\nand\nan application that scales dynamically\nor that scales rapidly\nnow this azure cosmodb is an a globally\ndistributed service\nand it's a multi-model\ndatabase this can be provisioned in a\nclick of a button that's all we got to\ndo if we need to provision and azure\ncosmodb in the azure it helps with\nscaling the database now we can\nelastically and independently scale\nthroughput and storage across this\ndatabase and in any of the azure\ngeographic regions it provides a good\nthroughput it provides good latency it\nprovides good availability and\nit provides or\nazure promises a comprehensive sla that\nno other database can offer that's the\nbest part about cosmodb so this cosmodb\nwas built with a global distribution in\nmind and it's built\nwith the horizontal scale in mind and\nall this we can use by only paying for\nwhat we have used and remember the\ndifference between azure cosmodb and the\nsql database is that azure cosmodb\nsupports nosql whereas sql doesn't\nalright few other things about azure\ncosmodb is it allows users to use key\nvalue graph a column family and document\ndata it also gives users a number of ap\noptions like sql javascript mongodb and\nand few others that you might want to\ncheck the document at the time of\nreading and the best part here is that\nall that we mentioned we get to use only\nby paying for the amount of storage and\nthroughput that are required and the\nstorage and the throughput can be\nelastically scaled based on the\nrequirement of that r all right let's\ntalk about\nthat is cache discussion about azure\ndatabase won't be complete without we\ntalking about redis cache now redis\ncache is a secure data cache it's also\ncalled it's also sometimes called as\nmessaging broker that provides high\nthroughput and low latency access to\ndata for the applications now that is\ncash is based on an a popular open\nsource caching product which is what is\nsometimes called as that is cash now\nwhat's the use case it's typically used\nto cache to improve the performance and\nscalability of a system that rely\nheavily on backend data stores now\nperformance when we use zach is improved\nby temporarily copying the frequently\naccessed data to a fast storage located\nvery close to the application now with\nredis cache this fast storage is located\nin memory with redis cache instead of\nbeing loaded from the actual disk in the\ndatabase itself now this redis cache can\nalso be used as an in-memory data\nstructure store not only that it can be\nused as a distributed non-relational\ndatabase and a message broker so there\nare a variety of use cases for this\nredis cache and by using redis cache the\napplication performance is improved by\ntaking advantage of the low latency and\nthe height throughput performance that\nthis redis cache engine provides so to\nsummarize this redis cache when we use\nredis cache data is stored in the memory\ninstead of the disk to ensure that there\nis high throughput and low latency when\nthe application needs to read the data\nit provides various levels of scaling\nwithout any downtime or interference now\nthis redis cache is actually backed by\nreduce server and it supports\na string hashes linked list and various\nother data structures now let's talk\nabout security and identity services now\nidentity management in specific is a\nprocess of authenticating first and then\nauthorizing using security principles\nand not only that identity management\ninvolves controlling information about\nthose principle identities you might ask\nnow what's a principle identity now\nidentity or principle identity are\nservices applications users groups and a\nlot more the speciality about this\nidentity management is that it not only\nhelps authenticate and authorize\nprinciples in cloud it also helps\nauthenticate and authorize principles or\nresources on premises especially when\nyou run an hybrid cloud environment so\nall these services and features that\nthis identity management helps us to get\nadditional level of validation like\nidentity management can provide\nmulti-factor authentication it can\nprovide access policies based on\ncondition a permit or deny based on\ncondition it can also monitor suspicious\nactivity and not only that he can also\nreport it it can also help generate\nalerts for potential security issues and\nin a way to mitigate it can send us an\nalert so we can get involved and prevent\nand a security accident from happening\nso let's talk more about identity\nmanagement so some of the services under\nsecurity and identity management are\nazure security center now this azure\nsecurity center provides\nsecurity management and threat\nprotection across the workloads in both\ncloud and in the hybrid environment it\nhelps control user access and\napplication control to stop any\nmalicious activity if present it helps\nus to find and fix vulnerabilities\nbefore they can be even exploited it\nintegrates very well with analytic\nmethods that helps us to identify or it\ngives us the intelligent to identify or\ndetect attacks and prevent them before\nit can actually happen and it also works\nseamlessly with hybrid environments so\nyou don't have to have one policy for\non-premises and one policy for the cloud\nit's now a unified service both for\non-premises and the cloud the next\nservice and security and identity would\nbe key vault now a key vault is a\nservice or a feature that helps\nsafeguard the cryptographic keys and any\nother secrets used by the cloud\napplications and the services in other\nwords this azure keyword is a tool for\nsecurely storing and accessing the\nsecrets of the environment i mean the\nsecret keys now a secret is anything\nthat you really want to have a very\ntight control access like the\ncertificates like the passwords stuff\nlike that now if i tell you what keyword\nactually solves that would actually\nexplain what keyword is now key vault is\nused in secrets management it's helped\nin securely storing the tokens the\npasswords the certificates it helps in\nkey management and it really helps in\ncreating and controlling the encryption\nkeys that we would use to encrypt data\nit helps in certificate management\ntalking about certification management\nit helps us to easily provision manage\nand deploy public and private ssl tls\ncertificates in azure and lot more so in\na nutshell this keyword it provides\nusers the ability to provision new walls\nand keys in just a matter of minutes all\nthat in a single command or all that in\na couple of button clicks it also helps\nusers to centrally manage their keys\nsecrets and policies\nnext in the list let's talk about azure\nactive directory now azure active\ndirectory it helps us to create\nintelligent driven access policies to\nlimit resource usage and manage user\nidentities but what does that mean now\nthis azure active directory is a cloud\nbased active directory and identity\nmanagement service now azure active\ndirectory combines and it's actually a\ncombination of the core directory\nservices plus application access\nmanagement plus identity protection\nand one good thing about this azure in\nfact there are a lot of good things but\nespecially when you're running hybrid\nenvironments you might wonder well how\nthis azure active directory is going to\nbehave now this azure active directory\nis built to work on on-premises and\ncloud environment as well not only that\nit also works seamlessly with mobile\napplications as well\nso in a nutshell this azure active\ndirectory it acts as a central point of\nidentity and access management for our\ncloud environment it also provides good\nsecurity solutions that protect against\nunauthorized access of our app and the\ndata\nnow that we've discussed about security\nand identity let's talk about the\nmanagement tools that azure has to offer\nazure provides built-in management and\naccount governance tools that helps\nadministrators and\ndevelopers that helps them to keep the\nresources secure and very compliant and\nagain it helps both in on premises and\nin the cloud environment and these\nmanagement tools help us to monitor the\ninfrastructure monitor the applications\nit also helps in provisioning and\nconfiguring resources it also helps in\nupdating apps it helps in analyzing\nthreats taking backup of the resources\nbuild\ndisaster recoveries\nit also helps in applying policies and\nconditions to automate our environment\nwe use azure management tools and it's\nalso used in cost control methods so\nthis azure management plays a wide role\nacross the azure services\nand in the management tools first comes\nthe azure advisor now this azure advisor\nit acts as a guide to educate us about\nazure best practices it throws\nrecommendations that we can select on\nthe basis of the category of service and\nit also provides the impact it can have\nor the impact that would happen in our\nenvironment if we follow the\nrecommendations given and\nrecommendations are\nfirst one is the recommendations are\nkind of templatized and it throws the\ntemplatized recommendations not only\nthat it also provides customized\nrecommendations on the basis of the\nconfiguration on the basis of our usage\npatterns and these recommendations are\nnot hard it's not like something that it\nrecommends and then just leaves us\nhanging there these recommendations\nprovided are very easy to follow very\neasy to implement and see results you\ncan think of as your advisor as an a\nvery personalized cloud consultant that\nhelps you to follow best practices to\noptimize our deployments it kind of\nanalyzes our resources our\nconfigurations our usage and then it\nrecommends a solution for us that really\nhelps in improving the cost\neffectiveness improving the performance\nimproving high availability and\nimproving security in our azure\nenvironment so with this azure advisor\nwe can get a proactive\nactionable and personalized best\npractice recommendation now you don't\nhave to be an expert just follow the\nazure advisor and your environment is\ngoing to be good it also helps in\nimprove the performance security high\navailability of our environment and also\nit helps in bringing down the overall\nazure spend and the best part is it's a\nfree service that analyzes our azure\nusage and provides recommendations how\nwe can optimize our azure resource to\nreduce cost and reduce cost at the same\ntime boost the performance helps in\nstrengthening the security and improve\nthe overall reliability of our\nenvironment\nnext in the list would be network\nwatcher now this network watcher helps\nusers identify and gain insights in the\noverall network performance and the\nhealth of the overall environment now\nthese azure watchers provides enough\ntools to monitor to diagnose to view the\nmetrics and to enable or disable logs\nwhich means regenerate and collect the\nlogs for resources in the azure virtual\nnetwork so with network watcher you can\nmonitor and diagnose issues in\nnetworking without even logging into the\nvirtual machines with just the logs\nwhich are real time we can actually come\nto a conclusion what could be wrong in a\ncertain resource in a vm or in a\ndatabase you know by just looking at the\nlogs and not only that it's used for\nanalytic or to gain some intelligence of\nwhat's happening in our network we can\ngain a lot of insight to the current\nnetwork traffic pattern using the\nsecurity group flow logs that this\nnetwork watcher offers it also helps in\ninvestigating vpn connectivity issues\nusing detailed logs now you might or\nmight not know that you know vpn\ntroubleshooting requires both parties or\nit involves two parties another person\nthe network administrator on this side\nand the network administrator on the\nother side and they will have to check\nlogs in their end and we'll have to\ncheck logs and hour and stuff like that\nbut with the network watcher it kind of\ntakes it to the next level the logs\nitself we could easily identify which\nside is having the issue and suggest an\nappropriate fix\nand the next in the list would be\nmicrosoft azure portal now this\nmicrosoft azure portal it provides a\nsingle unified console to perform\nvarious number of activities like\nbuilding not only building managing and\nmonitoring the web applications that we\nbuild now this portal can be used to\norganize our environment or the\nappearance of the environment or the\nvisual of the environment based on our\nwork style and using azure portal users\ncan control who gets to manage or access\nthe resources all from the azure portal\nand this azure portal gives a very good\nvisibility on the spends that happen on\neach resource right and if we can\ncustomize it we can also identify spends\nbased on team spends based on days\nspends based on department stuff like\nthat so it kind of gives us a good\nvisual of\nwhere the money is spending or where is\nthe bill consumed within the azure\nenvironment\nnext in the list would be azure resource\nmanager now azure resource manager\nenables us to manage\nthe usage of the application resources\nnow we use resource manager to deploy\nmonitor and manage solution resources as\na group as if it's one single entity now\nthe infrastructure of our application is\ntypically made of various components\nwhich includes virtual machine storage\nvirtual network\nweb app database servers some other\nthird-party services that we might use\nin our environment and they are by\nnature separate services but with azure\nresource manager we don't see them as\ndifferent components or different\nentities instead we see them as\nrelated services in a group that\nsupports an application now we kind of\nget the relation between them instead of\nyou know letting them spread azure\nresource manager identifies the relation\nbetween them and helps us to visually\nsee them all as one or single entity not\nonly that azure resource manager helps\nor it ensures that the resources that we\nprovision are deployed at a constant\nrate along with the other application\nit also helps users to visually see\ntheir resources and how they are\nconnected and that helps in managing the\nresources lot better\nresource group also is used to control\nwho can access the resources within the\nusers organization kind of gives you the\nfine grained control over who gets to\naccess and who does not get access and\nthe last one in the management tools\nwould be automation and this automation\ngives us the ability to automate\nconfigure and install upgrades across\nhybrid environments\nit provides a cloud-based automation and\nconfiguration service not only that this\ncan be applied for non-azure\nenvironments as well which is\non-premises so some of the automation we\ncould do is process automation update\nmanagement automation configuration\nfeatures automation stuff like that and\nthis azure automation provides complete\ncontrol during the deployment operation\nand also during the decommissioning of\nthe workloads and resources\nwith automation we can actually automate\na time consuming or\nmundane or any task that's error prone\nbecause of human errors those things can\nbe automated so irrespective of how many\ntimes you run it it's gonna run the same\nway and that really helps in reducing\nthe overall time and also the overhead\ncost because a lot of the things are\nautomated which means it's human error\nfree which means the application is not\ngoing to break and keep running for a\nlonger time with automation we can\nactually build a good inventory of\noperating system resources and\nconfiguration items all in one place\nwith ease and this really helps in\ntracking the changes and investigating\nthe issue let's say something happened\nbecause we have automation because it's\nlogging the configuration changes it's\neasy to track easy to identify easy to\nidentify what has changed lately that\nhas broken the environment go back and\nfix it or kind of roll it back that\nsolves the problem and that actually\nsummarizes the azure management tools or\nmanagement services now let's talk about\nthe networking tools or the networking\nservices available in azure there are\nvariety of services especially\nnetworking services that azure offers\nand i'm sure it's going to be an\ninteresting one let's begin our\ndiscussion with content delivery network\nnow the content delivery network in\nshort cdn it allows us to perform secure\nand a very reliable content delivery not\nonly that it also helps in accelerating\nthe delivery time or in other words\nreducing the delivery time also called\nas low times it also helps in saving\nbandwidth and increases in\nresponsiveness to the application let's\nexpand on this the content delivery\nnetwork is actually a distributed\nnetwork of servers that can efficiently\ndeliver web content to users now cdns\nwe're going to use the word cdn here\ncdns store cached content on global edge\nservers also called as\npops point of presence locations that\nare very close to the end users so the\nlatency is minimized it's like taking a\ncopy of the data or taking a multiple\ncopy of the data and storing it in\ndifferent parts of the world and whoever\nis requesting it the data gets delivered\nto them from a server which is very\nlocally to them so this cdn offers\ndevelopers a global solution for\nrapidly delivering high bandwidth\ncontent to users by caching the content\nin a strategically placed location which\nis very near to them so these content\ndelivery networks it really helps in\nhandling that's one advantage you get\nfor content delivery network that's we\ncan handle spikes and heavy loads very\nefficiently and we can also run analytic\nagainst the locks that gets generated in\ncontent delivery network which helps in\ngaining good insight on the workflow and\nwhat would be the future business need\nfor that application and this just like\na lot of other services this is on a pay\nas you go type so you use the results\nfirst and then you only pay for what you\nhave used\nthe next one in networking would be\nexpress route now express route is\nactually a circuit or a link that\nprovides an a direct private connection\nto azure and because it's direct it\ngives low latency link to azure it gives\ngood speed and reliability for the azure\ndata transfer it could be on premises to\nazure so it gives very good speed it\ngives increased reliability and low\nlatency for that connection let's expand\non this a bit\nnow this express route is an service\nthat actually provides and private\nconnection between microsoft data center\nand infrastructure in our premises or in\na different collocation facility that we\nmight have now these express routes do\nnot go over the public internet and\nbecause they don't go over the public\ninternet they offer a high security\nreliability and speed and low latency\ncompared to the connections which are in\nthe internet because it's fast because\nit's reliable because it has low latency\nit can be used as an extension of our\nexisting data center you know users are\nnot going to feel the difference whether\nthey are accessing services from an\non-premises or in the cloud environment\nbecause latency is minimized as much as\npossible users are really not going to\nsee the difference and because it's a\nprivate line and not an public internet\nline it can be used to build hybrid\napplications without compromising a\nprivacy or the performance now these\nvirtual private cloud these express\nroutes can be used for taking backups if\nassume a backup going through the\ninternet that would be a nightmare if\nyou use express route for backups that's\ngoing to be fast and imagine recovering\na data through the internet from the\ncloud through the internet to the on\npremises in a time of disaster that\nwould be the worst nightmare so these\nexpress routes can be used not only to\nbackup but also to recover the data\nbecause it provides good speed low\nlatency recovering the data is going to\nbe a lot sooner the next product or\nservice we're gonna discuss in\nnetworking is azure dns\nnow azure dns allows us to host domain\nname in azure and these domain names\ncome with an exceptional performance and\navailability now azure dns is used to\nset up and manage dns zones and records\nfor our domain name in the cloud now\nthis azure dns is a service for dns just\nlike the name says and it provides name\nresolution by using azure's\ninfrastructure and by using this domain\nwe can actually manage the dns ourselves\nthrough the azure portal with the same\ncredential imagine having a dns provider\nwhich does not even belong in rit\nimagine that environment you know we\nwould have a separate portal to manage\nthe dns environment now those are gone\nand now we can actually manage the dns\nin the very same azure portal where we\nuse the rest of the other services and\nthis azure dns very much integrates with\nother dna service providers it uses a\nglobal network of name servers to\nprovide fast response to dns queries and\nthese domains are having additional\navailability compared to the other\ndomain service providers availability\npromises these are going to have more\navailability than the rest because most\nof the servers are maintained by a\nmicrosoft and it helps resolve sooner it\nhelps re-syncing let's say a server\nfails it kind of helps re-syncing with\nthe rest of the servers so all the\nmicrosoft's environment all the\nmicrosoft global network of name servers\nkind of ensures that our domain names\nare resolved properly not only properly\nbut also are available most of the time\nall right next in the list in networking\nservices is virtual network i'm sure\nthis is going to be very interesting and\ni'm sure you're going to like it so this\nnetworking or virtual networking in\nazure it actually allows us to set up\nour own private cloud in the public\ncloud it gives us an isolated and highly\nsecure environment for our application\nlet's expand on this on this azure\nvirtual network helps us to provision\nazure virtual machines and it helps us\nto securely communicate with other\non-premises and internet networks it\nalso helps in controlling the traffic\nthat flows through or flows in and out\nof this virtual network to other virtual\nnetworks and to the internet now this\nazure a virtual network sometimes called\nas v-net is actually a representation of\nour own network in the cloud it's\nactually a logical isolation of the\nazure cloud dedicated to our\nsubscription all our environments are\nprovisioned in a v-net that is separate\nfrom another customers we nets that way\nwe have that logical separation there so\nthis virtual network can also be used to\nprovision a vpns in the cloud so we can\nconnect the cloud and the on-premises\ninfrastructure and lot more especially\nin a environment where we have hybrid\nenvironment surely we will be using\nvirtual network because that's going to\nrequire a vpn for secure data transfer\nin and out of the cloud and in and out\nof the on-premises environment\nall right so it kind of gives us an\nboundary for all the resources so all\nthe traffic between the azure resources\nthey kind of logically stay in between\nor logically stay within the azure\nvirtual network and here we can design\nthe network it's given over to us you\nknow you can pick the ip you can pick\nthe routing you can pick the subnet and\na lot of freedom is given or i would say\na lot of control on how the network is\ndesigned it's not like something that's\nalready cooked and we only get to use it\nno we can actually build the network\nfrom the scratch we can pick the ip\naddress that we like we can pick you\nknow which subnet needs to communicate\nwith the other subnet stuff like that\nand like i said if you are using hybrid\nenvironment you definitely would be\nrequiring a virtual network because it\nhelps connect the on-premises and the\ncloud in a secure fashion using vpn the\nlast product we're going to discuss in\nnetworking is a load balancer this load\nbalancer actually provides application a\ngood availability and a good network\nperformance so how does it work it\nactually works by load balancing the\ntraffic to and from the virtual machine\nand the cloud resources not only that it\nalso load balances between cloud and\nacross premises virtual networks with\nazure load balancer we can actually\nscale our application and create high\navailability for our services which\nmeans our application will be available\nmost of the time if any of the server\ngoes dead the server does not get\ntraffic what happens if the server gets\ntraffic user is going to experience\ndowntime what happens if the server does\nnot get traffic user won't experience\nany downtime the connection is shifted\nto an healthy service so the user\nexperiences uptime all the time so this\nload balancer supports inbound and\noutbound scenarios and it provides low\nlatency it gives high throughput of the\ndata transfer and we can actually scale\nup the flow of the tcp and udp\nconnections from hundreds to thousands\nto even millions because we have a load\nbalancer now in between the user and the\napplication so how does it operate this\nload balancer actually receives the\ntraffic and it load balances the traffic\nto the back end pool of instances\nconnected to it according to the rule\nand the health probe that we set that's\nhow it maintains high availability so\nwhat does load balancer help it helps in\ncreation of high available scalable\napplication in the cloud in minutes it\ncan be used to automatically scale the\nenvironment with the increasing\napplication traffic and one feature of\nload balancer is to check the health of\nthe user's application instance and it\nremoves or it stops sending the request\nto the unhealthy instance and kind of\nshifts that connection to the healthy\ninstance that way a user or a connection\ndoes not get stuck with an instance\nthat's not healthy that's all that you\nneed to know about the networking\nservices now let's talk about the\nstorage services or the storage domain\nin azure now azure storage in general is\na microsoft manage service providing\ncloud storage which basically is highly\navailable secure durable scalable and\nredundant because it's all managed by\nazure we don't get to manage a lot of it\nand these azure storages are a group of\nstorage services they capture different\nneeds and the storage products include\nazure blobs which is actually an object\nstorage it includes\nazure data lake it includes azure files\nas you see it in it includes azure\nqueues it includes azure tables and lot\nmore but let's start our discussion with\nazure store simple azure store simple is\nan hybrid cloud storage solution that\nactually lowers the cost of storage to\nnearly 60 percent of how much you'd be\nactually spending without using it so\nazure simple storage or store simple is\nan integrated storage solution that\nmanages the storage task between\non-premises and the cloud storage what i\nreally like about azure is that it's\nbuilt around a hybrid environment in\nmight there are a lot of other cloud\nproviders that are there where running\nand hybrid environment is a big\nchallenge you know it has some\ncompatibility you won't be able to find\nan hybrid or a on-premises and cloud\nsolution for your need stuff like that\nbut with azure especially when it comes\nto storage a lot of the things that\nwe're gonna see it clearly is designed\nwith hybrid environment in mind all\nright so let's come back and talk about\nstore simple so store simple is a very\nefficient cost effective and a very\neasily manageable san storage area\nnetworking solution in the cloud i\nthought i'll throw in this information\nthe reason why it got store simple is\nreally because it uses store simple 8000\nseries devices which are used in azure\ndata center and this stores simple or\nsimple storage it comes along with\nstorage steering to manage the stored\ndata across the various storage media so\nthe current the very current data is\nactually stored in on-premises on\nsolid-state drives and data that is used\nless frequently is stored in hdds or\nhard disk drives and the data that\nrequires archived or that needs to be\narchived very old data let's say less\nfrequently used data candidate for\narchive they are actually pushed to the\ncloud so you see how this storage\nsteering automatically happens in store\nsimple and one another cool feature of\nstore simple is that it enables us to\ncreate an on-demand and scheduled\nbackups of data and then store the data\nlocally or in the cloud and these\nbackups are actually taken in the form\nof incremental snapshot which means that\nthey can be created and restored quickly\nit's not a complete backup it's an\nincremental backup and these cloud\nsnapshots they can be critically\nimportant when there is a disaster and\nwhen there is a disaster recovery\nscenario because these snapshots can be\ncalled in and they can be put on storage\nsystems and then they become the actual\ndata so recovering is faster if you have\nproper scheduled backups or if you have\nfrequent backups and this storage simple\nit really helps in easing our backup\nmechanism which means it kind of eases\nour disaster recovery steps or\nprocedures as well so this is so simple\nit can be used to automate data\nmanagement data migration data movement\ndata turing across the enterprise both\nin cloud and on-premises it actually\nimproves the compliance and accelerates\nthe disaster recovery for our\nenvironment and if there is one thing\nthat's increasing every new day in our\nenvironment that would be storage and\nthis store simple addresses that need\nand we really don't have to pre-plan or\nthink in deep or having a proper storage\nbecause now we have a simple storage\navailable in the cloud and moreover it's\non a pay-as-you-go type so not much\npre-planning on storage is needed yes\nthere will be a need but not as much as\ni would without the cloud or without the\nsimple storage and the next service\nunder storage that we would like to\ndiscuss is the data lake store this data\nlake store or storage it's a cost\neffective solution for big data\nanalytics in specific so let's expand\nthis so this data lake storage is an\nenterprise-wide repository for big data\nanalytic workload now that's the major\nservice that's dependent on this data\nlake store and this data lake enables us\nto capture data of any size of any type\nand of any injection speed and it kind\nof collects them in one single space or\nin one single place for operational\nefficiency i mean operational efficiency\nand for analytic purpose hadoop in azure\nis very dependent on this data lake\nstorage and this\ndata lake store is designed with\nperformance for analytics in mind so\nanytime you think of or anytime you're\nusing analytic in the cloud or anytime\nyou're using hadoop in the cloud in\nazure we are definitely using or we will\nbe to the most part or the normal\nprocedure or the right storage to pick\nwould be data lake store in azure it's\ndesigned with security in mind so\nanytime we use azure storage we can be\nrest assured that we are using storage\nfrom within a data center which has or\nwhich was built with security in mind so\nthis data store also uses azure blob\nstorage behind the scenes for global\nscale durability and for performance\nlet's talk about blob storage now blob\nstorage provides large amount of storage\nand scalability now this blob storage is\nthe object storage solution for azure\ncloud let's expand a bit on blob storage\nazure blob storage is microsoft offering\nfor object storage now this blob storage\nis optimized for storing massive amount\nof unstructured data which could be text\nor binary data it's designed and it's\noptimized for rapid reads if i explain\nto you on what scenarios we would be\nusing blob storage that might help you\nget a good understanding of what blob\nstorage is so it's help or its design as\nof now it's being used in many idea\nenvironments to serve images or\ndocuments directly to the browser it\nhelps in storing files for distributed\naccess a lot of features can fetch data\nfrom azure blob storage and it currently\nhelping users stream video and audio\nit's currently being used for writing\nlog files it's currently being used to\nstore data as backup and restore at a\nlater point in times of disaster\nrecovery it also is used as an archiving\nstorage in a lot of cloud id\nenvironments it's widely used in storing\nanalytic data not only storing but also\nrunning analytic query against the data\nstored in it so that's a wide use case\nfor blob storage not only that in\naddition to all that we mentioned it\nalso supports versioning so anytime\nsomebody updates and data a new version\ngets created which means at any point i\ncan roll back as in when needed and it\nprovides a lot of flexibility on\noptimizing the user's storage need it\nalso supports tiering of the data so\nbased on need when i actually explore i\nwould find a lot of options i can pick\nfrom that uh you know suits to my unique\nstorage environment or unique storage\nneed and like i said it stores\nunstructured data and this unstructured\ndata is available for customers through\nrest based object storage environment\nthe next product and storage service\nwould be queue storage now queue storage\nprovides durable cues for large volume\ncloud services it's a very simple and a\ncost effective durable messaging queue\nfor large workers let's expand this\nqueue storage for a moment now this\nqueue storage is a service for storing\nlarge amount of messages that can be\naccessed from anywhere in the world\nthrough http and https calls a single\nqueue or a single cube message can be up\nto like 24 kb in size and a single queue\ncan contain millions of such 24 kb in\nsize messages and how much can it hold\nit can hold up to the total capacity of\nthe storage account itself so that's\nkind of easy to translate how much would\nit hold and this azure queue storage it\nprovides an messaging solution between\napplications and components in the cloud\nwhat does it help it helps in designing\nan application for scale it helps in\ndecoupling the application so you know\nit's not very dependent or sometimes\nit's not at all dependent on the other\napplication because now we have a queue\nin between which kind of translates or\nwhich kind of connects or which kind of\ndecouples both the environment now we\nhave a queue in between both the\nenvironment can scale up or scale down\nindependently the next in the storage\nservice would be file storage let's talk\nabout file storage now these azure files\nprovide secure simple and managed cloud\nfile shares now with file share in the\ncloud it actually extends the user\nservers on premises performance and\ncapacity and lot of familiar tools for\nthe cloud file share management can be\nused along with the file storage that\nwe're talking about so let's expand a\nbit on file storage now this azure files\nor azure file storage offers a fully\nmanaged file shares in the cloud that\ncan be accessed via the smb protocol\nserver message block protocol now this\nazure file shares can be mounted\nconcurrently by cloud or in on-premises\ndeployments a lot of operating systems\nare compatible with it windows are\ncompatible linux is compatible mac os is\ncompatible in addition to all this being\nable to run on premises and on the cloud\nor being able to access from on premises\nand on the cloud it can also offer cache\nfor caching the data and keeping it\nlocally so it's immediately available\nwhen needed so that's some additional\nfeature i would say that's an advanced\nfeature that it offers compared to the\nother file shares available in the\nmarket let's talk about table storage\nlet's talk about table storage now table\nstorage is a no sql key value pair\nstorage for quick deployments with the\nlarge semi-structured data sets the\ndifference between one important thing\nto note with table storage is that it\nhas a flexible data schema and also it's\nhighly available let's expand a bit on\ntable storage so anytime you want to\npick a schema less a nosql type table\nstorage is the one we'll end up picking\nit provides an key pair attribute\nstorage with a schema-less design this\ntable storage is very fast and very cost\neffective for many of the applications\nand for the same amount of\ndata it's a lot cheaper when you compare\nit with the traditional sql data or data\nstorage so some of the things that we\ncan store in the table storage are of\ncourse they're going to be flexible data\nsheets such as user data for web\napplication address books device\ninformation and other types of metadata\nfor our service requirements and it can\nhave any number of tables up to the\ncapacity limit of the storage account\nnow this is not possible with sql this\nis only possible with nosql especially\nwith table storage in azure explanation\nof storage really concluded the length\nand breadth of the explanation this ceo\nwas giving his id personal but this id\npersonal is not done with it yet he\nstill has a question even after this\nlengthy discussion and his question was\nwell there are a lot of other cloud\nproviders available what made you\nspecifically choose azure i mean from\nthe kind of question that he asked we\ncan say that he is very curious and he\ndefinitely had asked a very thoughtful\nquestion so his ceo went on and started\nto explain about the uh other\ncapabilities of azure or how it\nkind of outruns the rest of the cloud\nproviders so he started or he again\nstarted his discussion but from a\ndifferent angle now so he started to\nexplain what are the capabilities or how\nazure is better than the competitors so\nhe started with explaining the platform\nas a service capabilities and i'm going\nto tell you what the ceo told his id\nperson so this platform as a service or\nin platform as a service the\ninfrastructure management is completely\ntaken care by uh microsoft allowing\nusers to focus completely on the\ninnovation no more infrastructure\nmanagement responsibilities go and focus\non innovation that's that's a fancy way\nof saying it when we buy platform as a\nservice that's what we get we can\ncontribute our time on innovation and\nnot just maintaining the infrastructure\nand azure especially\nis a dot-net friendly azure supports\ndotnet programming language and it has\nor it is built or designed or it is\noptimized to work with old and the new\napplications deployed using.net\nprogramming framework so if your\napplication is a dotnet most of the time\nyou would end up picking azure i mean if\nyou try to compare most of the time you\nwould end up picking azure as your cloud\nservice provider and the security\nofferings that azure offers is it's\ndesigned based on the security\ndevelopment uh life cycle which is an\nindustry leading assurance\nprocess when we buy services from azure\nit assures that the environment is\ndesigned based on security development\nlife cycle and like i mentioned many\ntimes in the past and i would like to\nmention it again azure has well thought\nabout the hybrid environments which a\nlot of other cloud providers have failed\nso it's very easy to set up and hybrid\nenvironment to migrate the data or not\nto migrate the data and still run a\nhybrid environment they work seamlessly\nwith the azure because azure provides\nseamless connection across on-premises\ndata centers and the public cloud it\nalso has a very gentle learning curve if\nyou look at the documentation it's\npicture rich and the documentations are\nneat and clear would really it would\nencourage you to learn more it would\nencourage you to think and imagine and\ntry easily get a grasp of how services\nwork so it has a very gentle learning\ncurve azure allows the utilization of\ntechnologies that several businesses\nhave used for years so there is a big\nhistory behind it it has a very gentle\nlearning curve the certifications the\ndocumentations at the stage by stage\ncertification levels it's all very\ngentle learning curve which is generally\nmissing in other cloud service providers\nnow this would really impress the ctos\nor people working in finance and\nbudgeting if an organization is already\nusing microsoft software they can\ndefinitely go and avail or be bold and\nask for a discount that can reduce the\noverall azure spending in other words\noverall a pricing of the azure so that's\nwhat helped or they are the information\nthat helped the ceo pick azure as his\ncloud service provider and then the ceo\ngoes on and talks about the different\ncompanies that are currently using azure\nand they are definitely using azure for\na reason like pixar boeing samsung\neasyjet xerox bmw 3m they are major\nmultinational multi-billion companies\nthey rely run\noperate their id in azure and this ceo\nhas a thought that his id person is\nstill not very convinced unless and\nuntil he shows him a visual of how easy\nthings are in azure so he goes on and\nexplains about a practical application\nof azure which is what exactly i'm going\nto show you as well all right a quick\nproject on building an azure app using\nor building a dotnet application\nin azure web app and making it connect\nto an sql database will solidify all the\nknowledge that we have gained so far so\nthis is what we're gonna do i have an\nazure account open as you see logged in\nand everything is fresh here let me go\nto resource group there's nothing in\nthere it's it's kind of fresh all right\ni'm logged in and this is what we're\ngonna do so we're gonna create an\napplication like this which is nothing\nbut an to-do application a to-do list\napplication which is going to run from\nthe web app get information from us and\nsave it in the database that's connected\nto it so you can already see it's a\ntwo-tiered application web and db all\nright so let me go back to my azure\naccount the first thing is to create an\nresource group let's give it an a\nmeaningful name let's call it azure\nsimply learn all right and it's going to\nbe a free trial and the location\npick one that's nearest to you or you\nknow wherever you want to launch your\napplication now for this use case i'm\ngoing to pick central us and create\nit's going to take a while to get\ncreated there you go it's created it's\ncalled azure simply learn now what do we\nneed we need an web app and and a\nseparate sql database let's first get\nour web app running so go to app\nservices and then click on add it's not\nthe web app plus sql that we want we\nwant web app alone for this\nexample so let's create and web app\ngive it a quick name let's call it\nazure\nsimply learn\nthe subscription is free trial and i'm\ngoing to use my existing resource group\na resource group that we created\nsometime back it's going to run out of\nwindows and we're going to publish\nthe code all set we can create it all\nright while this is running\nlet me create my database\nright sql database\ncreate a database\ngive it a name let's call it azure\nsimply learn db\nput it in our existing resource group\nthat we created it's going to be a blank\ndatabase all right and it's going to\nrequire some\nsettings like\nthe name of the server\nand the admin login the password that\ngoes along and in which location this is\ngoing to be created the server name is\ngoing to be azure simply learn db that's\nthe server name and the admin login can\nbe\nwhat can be the admin login name let's\nsee\nso let's call it simply learn that's my\nadmin login name\nand let me pick a password\nclick on create so what have we done so\nfar we have created an web app and we\nhave created an\na database in\nthe resource group that we have created\nso if i go to resource group it's going\nto take some time before things show up\nso if i go to my resource group i only\nhave one resource group as of now azure\nsimply learn and there i have a bunch of\nresources\nbeing created and that's still being\ncreated right in the meantime\ni have my application right here that's\nrunning out of uh or that's in visual\nstudio as of now right so once\nthe infrastructure is set and ready in\nthe azure console uh we're gonna go back\nto visual studio feed these inputs in\nthe visual studio so the code knows what\nthe database is the the credentials to\nlog into the database stuff like that so\nwe're going to feed those information in\nvisual studio by that we're actually\nfeeding it into the application and then\nwe're going to run it from there\ndeploying this application takes quite a\nwhile\nwe really got to be patient right now we\nhave all the resources that we need for\nthe application to run here is my\ndatabase and here is my app service\nthere's one more thing we need to do\nthat is\ncreate and firewall exception rule so\none more thing needed is to create and\nfirewall exception\nrule right so the application is going\nto run from my local desktop and it's\ngoing to connect to the\ndatabase right so let's add an exception\nrule by simply adding the client id it's\ngoing to pick my ip the ipf laptop i'm\nusing as of now and it's going to create\nan exception to access the\ndatabase so that's done now we can go\nback to our visual studio i already have\na couple of apps running or a couple of\nconfigurations pushed from\na visual studio i'm going to clean that\nup\nif you're doing it for the first time\nyou may not need to do this\nall right so let's start from the\nscratch\nthis is very similar to\nhow you would be doing\nin your environment all right so we're\ngoing to\nselect an existing azure app service now\nbefore that i have logged in as you can\nsee i have logged in\nwith my credentials so it's gonna pull\nfew things automatically from my azure\naccount so\nin this case i'm gonna use an existing\nazure app so select existing and then\nclick on publish\nall right if you recall these are the\nvery same resources that we created a\nwhile back\nall right we have clicked on save and\nit's\nrunning kind of validating the code\nand it's going to come up with an\nurl now initially the url is\nnot going to work because we haven't\nmapped the application to the database\nthat would be the next thing\nall right so the app has been\npublished and it's running from my\nweb app as of now\nit's going to throw an error\nlike you see\nit's throwing an error that's because we\nhaven't mapped\nthe app and the db together so let's do\nthat\nall right let's do that so let's go to\nserver explorer\nthis is where\nwe're going to see our\ndatabases that we have created now let's\nquickly verify that\ngo back to\nthe resource group\nall right appropriate service group\nwhich is right here\nand here i have my\ndatabase azure\nsimply learn\ndatabase\nall right it has some issues connecting\nto my database give me a quick moment\nlet's fix it\nall right so\nwe'll have to map the database into this\napplication\nall right so let's go to the solution\nexplorer click on\npublish\nand a page like this gets shown and from\nhere we can go to configure\nhere is our a web app all right with all\nits credentials let's validate the\nconnection number one\nall right and then click on next\nthis is my db connection string right\nwhich the app is going to use to connect\nto my db now if you recall rdb was uh\nazure simply learn db and that's not\nbeing shown here\nso let's fix that\nright so let's fix that\nclick on configure\nand here\nlet's put our db servers\nurl now before that let's change this to\nsql server\nall right and then in here\nput the\ndb's\nurl so go back to azure\nhere is my\ndb or\nserver's name\nput that here\nright the username to connect to the\nserver that's\nright here\nput that in\nand the password\nto connect to the server let's put that\nin\nall right it's trying to connect\nto our azure\nportal or the azure infrastructure and\nhere is my\ndatabase if you recall it's azure\nsldb that's the name of the database\nlet's test the connection\nconnection is good click on ok\nso now it's showing up correctly azure\nsimply learn db that's the name of the\ndatabase\nthat'll be created\nnow it's configured\nall right let's modify the data\nconnections\nright let's map it to the appropriate\ndatabase again\nall right so our name of the database is\nazure simply learn db\nand then\nit's going to be\nsql\nserver that's the data source\nthe\nusername is simply learn\nand the password is\nwhat we have given in the beginning\nall right let's validate\nthe connection it's good click ok\nnow we're all set\nand ready to publish\nour application\nagain now the application knows how to\nconnect uh to the database we have\neducated it with the uh\nthe correct connection strings the dns\nname\nthe username and the password for the\napplication to connect to the database\nso visual studio is building this\nproject and once it is up and running\nwill be prompted with an url\nto connect and\nanytime\nwe put or we give inputs to the url\nthat's going to\nreceive the input and save it in the\ndatabase\nall right so here is my to-do list app\nand i can start\ncreating to-do list for myself all right\nso i have items already listed\ni can create an entry and these entries\nget stored in\nthe\nin the database i can create another\nentry\nyou know take the doc for a walk that's\ngonna get stored i can create another\nentry\nuh book tickets for\nuh scientific\nexhibition\nand that's gonna receive and put that in\nthe database and that concludes our\nsession so through this session we saw\nhow i can use azure services to create a\nweb app and\nconnect that to the db instance and how\nthose two services which are\ndecoupled by default which are separate\nby default how i can you know use the\nconnection strings to make connection\nbetween the app server and the database\nand be able to create an working app hi\nguys i'm raul from simply learn and\ntoday i'd like to welcome you all to the\ngreatest debate of the century today i\nam joined by two giants of the cloud\ncomputing industry they'll be going head\nto head with each other to decide who\namongst them is better it's going to be\none hello fight now let's meet our\ncandidates on my left we have aws who's\nvoiced by a picture hi guys\nand on my right we have microsoft azure\nwho's voiced by anjali hey there\nso today we'll be deciding who's better\non the basis of their origin and the\nfeatures they provide their performance\non the present day and comparing them on\nthe basis of pricing market sharing\noptions free tier and instance\nconfiguration\nnow let's listen to their opening\nstatements let's start with aws\nlaunched in 2006 aws is one of the most\ncommonly used cloud computing platforms\nacross the world companies like adobe\nnetflix airbnb htc pinterest and spotify\nhave put their faith in aws for their\nproper functioning it also dominates the\ncloud computing domain with almost 40\npercent of the entire market share so\nfar nobody's even gotten close to\nbeating that number aws also provides a\nwide range of services that covers a\ngreat number of domains domains like\ncompute networking storage migration and\nso much more\nnow let's see what azure has to say\nabout that azure was launched in 2010\nand is trusted by almost 80 percent of\nall fortune 500 companies the best of\nthe best companies in the world choose\nto work only with azure azure also\nprovides its services to more regions\nthan any other cloud service provider in\nthe world azure covers 42 regions\nalready and 12 more are being planned to\nbe made azure also provides more than\n100 services spanning a variety of\ndomains now that the opening statements\nare done let's have a look at the\ncurrent market status of each of our\ncompetitors this is the performance\nroute here we have the stats for the\nmarket share of aws azure and other\ncloud service providers this is for the\nearly 2018 period amazon web services\ntakes up a whopping 40 percent of the\nmarket share closely followed by hdr at\n30\nand other cloud services adding 30\nthis 40 indicates most organizations\nclear interest in using aws we are\nnumber one because of our years of\nexperience and trust we've created among\nour users\nsure you're the market leader but we are\nnot very far behind let me remind you\nmore than 80 percent of the fortune 500\ncompanies trust azure with their cloud\ncomputing needs so it's only a match of\ntime before azure takes the lead the\nrest of the 30 percent that is in aws or\nazure accounts to the other cloud\nservice providers like google cloud\nplatform rackspace ibm software and so\non now for our next round the comparison\nround first we'll be comparing pricing\nwe'll be looking at the cost of a very\nbasic instance which is a virtual\nmachine of two virtual cpus and eight\ngbs of ram for aws this will cost you\napproximately\n0.0928 us dollars per hour and for the\nsame instance in azure it will cost you\napproximately 0.096 us dollars per hour\nnext up let's compare market share and\noptions as i mentioned before aws is the\nundisputed market leader when it comes\nto the cloud computing domain taking up\n40 percent of the market share by 2020\naws is also expected to produce twice\nits current revenue which comes close to\n44 billion dollars not to mention aws is\nconstantly expanding its already strong\nroaster of more than 100 services to\nfulfill the shifting business\nrequirements of organizations all that\nis great really good for you but the\nresearch company gardner has released a\nmagic quadrant that you have to see you\nsee the competition is now neck-to-neck\nbetween azure and aws it's only a matter\nof time before azure can increase from\nits 30 market share and surpass aws this\nbecomes more likely considering how all\ncompanies are migrating from aws to\nazure to help satisfy their business\nneeds azure is not far behind aws when\nthis comes to services as well azure\nservice offerings are constantly updated\nand improved on to help users satisfy\ntheir cloud computing requirement\nnow let's compare aws and azure's free\nofferings aws provides a significant\nnumber of services for free helping\nusers get hands-on experience with the\nplatform products and services the free\ntier services fall under two categories\nservices that will remain free forever\nand the others that are valid only for\none year the always free category offers\nmore than 20 services for example amazon\nsns sqs cloud watch etc and the valid\nfourier category offers approximately 20\nservices for example amazon s3 ec2\nelastic cache etc\nboth types of services have limits on\nthe usage for example storage number of\nrequests compute time etc but users are\nonly charged for using services that\nfall under the valid for a year category\nafter a year of their usage\na show provides a free tier as well it\nalso provides services that belong to\nthe categories of free for a year and\nalways free there are about 25 plus\nalways free services provided by azure\nthese include app service functions\ncontainer service active directory and\nlots more and as of the valid for a year\nthere are eight services offered there's\nlinux or windows virtual machines blob\nstorage sql database and few more azure\nalso provides the users with credits of\n200 us dollars to access all their\nservices for 30 days now this is a\nunique feature that azure provides where\nusers can use their credits to utilize\nany service of a choice for the entire\nmonth now let's compare instance\nconfiguration the largest instance that\naws offers is that of a whopping 256 gbs\nof ram and 16 virtual cpus the largest\nthat azure offers isn't very far behind\neither 224 gbs of ram and 16 virtual\ncpus and now for the final round now\neach of our contestants will be shown\nfacts and they have to give explanations\nfor these facts we call it the rapid\nfire round first we have features in\nwhich aws is good and azure is better\naws does not cut down on the features it\noffers its users however it requires\nslightly more management on the user's\npart\nazure goes slightly deeper with the\nservices that fall under certain\ncategories like platform as a service\nand infrastructure as a service\nnext we have hybrid cloud where aws is\ngood and azure is better okay although\naws did not emphasize on hybrid cloud\nearlier they are focusing more on\ntechnology now azure has always\nemphasized on hybrid cloud and has\nfeatures supporting it since the days of\nits inception for developers aws is\nbetter and azure is good of course it's\nbetter because aws supports integration\nwith third-party applications well azure\nprovides access to data centers that\nprovide a scalable architecture for\npricing both aws and azure are at the\nsame level it's good for aws because it\nprovides a competitive and constantly\ndecreasing pricing model and in the case\nof azure it provides offers that are\nconstantly experimented upon to provide\nits users with the best experience and\nthat's it our contestants have finished\ngiving their statements now let's see\nwho won surprisingly nobody each cloud\ncomputing platform has its own pros and\ncons choosing the right one is based\nentirely on your organization's\nrequirements hi guys today we've got\nsomething very special in store for you\nwe're going to talk about the best cloud\ncomputing platform available amazon web\nservices uh rahul i think you said\nsomething wrong here the best cloud\ncomputing platform is obviously google\ncloud platform no it isn't aws has more\nthan 100 services that span a variety of\ndomains all right but google cloud\nplatform has cheaper instances what do\nyou have to say about that well i guess\nthere's only one place we can actually\ndiscuss this a boxing ring so guys i'm\napeksha and i will be google cloud\nplatform and i'm rahul i'll be aws so\nwelcome to fight night this is aws\nversus gcp the winner will be chosen on\nthe basis of their origin and the\nfeatures they provide their performance\nin the present day and comparing them on\nthe basis of pricing market share and\noptions the things they give you for\nfree and instance configuration now\nfirst let's talk about aws aws was\nlaunched in 2004 and is a cloud service\nplatform that helps businesses grow and\nscale by providing them services in a\nnumber of different domains these\ndomains include compute database storage\nmigration networking and so on a very\nimportant aspect about aws is its years\nof experience now aws has been in the\nmarket a lot longer than any other cloud\nservice platform which means they know\nhow businesses work and how they can\ncontribute to the business growing also\naws has over 5.1 billion dollars of\nrevenue in the last quarter this is a\nclear indication of how much faith and\ntrust people have in aws they occupy\nmore than 40 percent of the market which\nis a significant chunk of the cloud\ncomputing market they have at least 100\nservices that are available at the\nmoment which means just about every\nissue that you have can be solved with\nan aws service now that was great but\nnow can we talk about gcp i hope you\nknow that gcp was launched very recently\nin 2011 and it is already helping\nbusinesses significantly with a suite of\nintelligent secure and flexible cloud\ncomputing services it lets you build\ndeploy and scale applications websites\nservices on the same infrastructure as\ngoogle the intuitive user experience\nthat gcp provides with dashboards\nwizards is way better in all the aspects\ntcp has just stepped in the market and\nit is already offering a modest number\nof services and the number is rapidly\nincreasing and the cost for a cpu\ninstance or regional storage that gcp\nprovides is a whole lot cheaper and you\nalso get a multi-regional cloud storage\nnow what do you have to say on that i'm\nso glad you asked let's look at present\nday in fact let's look at the cloud\nmarket share of the fourth quarter of\n2017. this will tell you once and for\nall that aws is the leader when it comes\nto cloud computing amazon web services\ncontributes 47\nof the market share others like\nrackspace or verizon cloud contribute 36\nmicrosoft azure contributes 10 the\ngoogle cloud platform contributes four\npercent and ibm software contributes\nthree percent forty seven percent of the\nmarket share is contributed by aws you\nneed me to convince you any more wait\nwait wait all that is fine but we only\nstarted a few years back and have\nalready grown so much in such a less\nspan of time haven't you heard the\nlatest news our revenue is already a\nbillion dollars per quarter wait for a\nfew more years and the world shall see\nand aws makes 5.3 billion dollars per\nquarter it's going to take a good long\ntime before you can even get close to us\nyes yes we'll see now let's compare a\nfew things for starters let's compare\nprices for aws a compute instance of two\ncpus in 8gb ram costs approximately 68\nus dollars now a computer instance is a\nvirtual machine in which you can specify\nwhat operating system ram or storage you\nwant to have for cloud storage it costs\n2.3 cents per gb per month with aws you\nreally want to do that because gcp wins\nthis hands down let's take the same\ncompute instance of two cpus with 8 gb\nram it will cost approximately 50\ndollars per month with gcp and as per my\ncalculations that's a 25\nannual cost reduction when compared to\naws talking about cloud storage costs it\nis only 2 cents per gb per month with\ngcp what else do you want me to say\nlet's talk about market share and\noptions now aws is the current market\nleader when it comes to cloud computing\nnow as you remember we contribute at\nleast 47 of the entire market share aws\nalso has at least 100 services available\nat the moment which is a clear\nindication of how well aws understands\nbusinesses and helps them grow yeah\nthat's true but you should also know\nthat gcp is steadily growing we have\nover 60 services that are up and running\nas you can see here and a lot more to\ncome it's only a matter of time when we\nwill have as many services as you do\nmany companies have already started\nadopting gcp as a cloud service provider\nnow let's talk about things you get for\nfree with aws you get access to almost\nall the services for an entire year with\nusage limits now these limits include an\nhourly or by the minute basis for\nexample with amazon ec2 you get 750\nhours per month you also have limits on\nthe number of requests to services for\nexample with aws lambda you have 1\nmillion requests per month now after\nthese limits across you get charged\nstandard rates with gcp you get access\nto all cloud platform products like\nfirebase the google maps api and so on\nyou also get 300 in credit to spend over\na 12-month period on all the cloud\nplatform products and interestingly\nafter the free trial ends you won't be\ncharged unless you manually upgrade to a\npaid account now there is also the\nalways free version for which you will\nneed an upgraded billing account here\nyou get to use a small instance for free\nand 5gb of cloud storage any usage above\nthis always free usage limits will be\nautomatically built at standard rates\nnow let's talk about how you can\nconfigure instances with aws the largest\ninstance that's offered is of 128 cpus\nand 4 tvs of ram now other than the on\ndemand method like i mentioned before\nyou can also use spot instances now\nthese are the situations where your\napplication is more fault tolerant and\ncan handle an interruption now you pay\nfor the spot price which is effective at\na particular r now these part prices do\nfluctuate but are adjusted over a period\nof time the largest instance offered\nwith google cloud is 160 cpus and 3.75\ntbs ram like spot instances of aws\ngoogle cloud offers short-lived compute\ninstances suitable for bad jobs and\nfault tolerant workloads they are called\nas preemptable instances so these\ninstances are available at eighty\npercent off on on demand price hence\nthey reduce your compute engine costs\nsignificantly and unlike aws these come\nat a fixed price google cloud platform\nis a lot more flexible when it comes to\ninstance configuration you simply choose\nyour cpu and ram combination of course\nyou can even create your own instance\ntypes this way before we wrap it up\nlet's compare on some other things as\nwell telemetry it's a process of\nautomatically collecting periodic\nmeasurements from remote devices for\nexample gps gcp is obviously better\nbecause they have superior telemetry\ntools which help in analyzing services\nand providing more opportunities for\nimprovement when it comes to application\nsupport aws is obviously better since\nthey have years of experience under\ntheir bed aws provides the best support\nthat can be given to the customers\ncontainers are better with gcp a\ncontainer is a virtual process running\nin user space as kubernetes was\noriginally developed by google gcp has\nfull native support for the tool other\ncloud services are just fine tuning a\nway to provide kubernetes as a service\nalso the containers help with\nabstracting applications from their\nenvironment they originally run it the\napplications can be deployed easily\nregardless of their environment when it\ncomes to geographies aws is better since\nthey have a head start of a few years\naws in this span of time has been able\nto cover a larger market share and\ngeographical locations now it's time for\nthe big decision so who's it going to be\nyeah who is it going to be gcp or aws i\nthink i'm going to go for\nchoosing the right cloud computing\nplatform is the decision that's made on\nthe basis of the user or the\norganization's requirement aws azure and\ngcp are three of the world's largest\ncloud service providers but how are they\ndifferent from each other let's find out\nhey guys i'm rahul and i'll be\nrepresenting amazon web services i'm\nchinmayi and i'll be representing\nmicrosoft azure and i am shruti and i'll\nbe representing google cloud platform so\nwelcome to this video on aws versus\nazure vs gcp talking about market share\namazon web services leads with around 32\nof the worldwide public cloud share\nazure owns up to 16 of the worldwide\nmarket share and gcp owns around 9 of\nthe world's market share let's talk\nabout each of these service providers in\ndetail aws provides services that enable\nusers to create and deploy applications\nover the cloud these services are\naccessible via the internet aws being\nthe oldest of the lot was launched in\nthe year 2006. azure launched in 2010 is\na computing platform that offers a wide\nrange of services to build manage and\ndeploy applications on the network using\ntools and frameworks\nlaunched in the year 2008 gcp offers\napplication development and integration\nservices for its end users in addition\nto cloud management it also offers\nservices for big data machine learning\nand iot now let's talk about\navailability zones these are isolated\nlocations within data center regions\nfrom which public cloud services\noriginate and operate talking about aws\nthey have 69 availability zones within\n22 geographical regions this includes\nregions in the united states south\namerica europe and asia pacific they are\nalso predicted to have 12 more editions\nin the future azure available in 140\ncountries has over 54 regions worldwide\ngrouped into six geographies these\ngeographical locations have more than\n100 data centers gcp is available in 200\nplus countries across the world as of\ntoday gcp is present in 61 zones and 20\nregions with osaka and zurich being the\nnewly added regions now let's talk about\npricing these services follow the pay as\nyou go approach you pay only for the\nindividual services you need for as long\nas you use them without requiring\nlong-term contracts or complex licensing\nnow on screen you can see the pricing\nfor each of these cloud service\nproviders with respect to various\ninstances like general purpose compute\noptimized memory optimized and gpu now\nlet's talk about the compute services\noffered first off we have virtual\nservers for aws we have ec2 it is a web\nservice which eliminates the need to\ninvest in hardware so that you can\ndevelop and deploy applications in a\nfaster manner it provides virtual\nmachines in which you can run your\napplications azure's virtual machines is\none of the several types of computing\nresources that azure offers azure gives\nthe user the flexibility to deploy and\nmanage a virtual environment inside a\nvirtual network gcp's vm service enables\nusers to build deploy and manage virtual\nmachines to run workloads on the cloud\nnow let's talk about the pricing of each\nof these services aws cc2 is free to try\nit is packaged as part of aws's free\ntier that lasts for 12 months and\nprovides 750 hours per month of both\nlinux and windows virtual machines azure\nvirtual machine service is a part of the\nfree tier that offers this service for\nabout 750 hours per month for a year the\nuser gets access to windows and linux\nvirtual machines gcp's vm service is a\npart of a free tier that includes micro\ninstance per month for up to 12 months\nnow let's talk about platform as a\nservice or pass services for aws elastic\nbean stock is an easy to use service for\ndeploying and scaling web applications\nand services developed with java dot net\nnode.js python and much more it is used\nfor maintaining capacity provisioning\nload balancing auto scaling and\napplication health monitoring the pass\nbackbone utilizes virtualization\ntechniques where the virtual machine is\nindependent of the actual hardware that\nhosts it hence the user can write\napplication code without worrying about\nthe underlying hardware google app\nengine is a cloud computing platform as\na service which is used by developers\nfor hosting and building apps in google\ndata centers the app engine requires the\napps to be written in java or python and\nstore data in google bigtable and use\nthe google query language for this next\nlet's talk about virtual private server\nservices aws provides light sale it\nprovides everything you need to build an\napplication or a website along with the\ncost effective monthly plan and minimum\nnumber of configurations in simple words\nvm image is a more comprehensive image\nfor microsoft azure virtual machines it\nhelps the user create many identical\nvirtual machines in a matter of minutes\nunfortunately gcp does not offer any\nsimilar service next up we have\nserverless computing services aws has\nlambda it is a serverless compute\nservice that lets you run your code\nwithout facilitating and managing\nservers you only pay for the compute\ntime you use it is used to execute\nbackend code and scales automatically\nwhen required azure functions is a\nserverless compute service that lets you\nrun even triggered code without having\nto explicitly provision or manage\ninfrastructure this allows the users to\nbuild applications using serverless\nsimple functions with the programming\nlanguage of their choice gcp cloud\nfunctions make it easy for developers to\nrun and scale code in the cloud and\nbuild image driven serverless\napplications it is highly available and\nfault tolerant now let's talk about\nstorage services offered by each of\nthese service providers first off we\nhave object storage aws provides s3 it\nis an object storage that provides\nindustry standard scalability data\navailability and performance it is\nextremely durable and can be used for\nstoring as well as recovering\ninformation or data from anywhere over\nthe internet blob storage is an azure\nfeature that lets developers store\nunstructured data in microsoft's cloud\nplatform along with storage it also\noffers scalability it stores the data in\nthe form of tears depending on how often\ndata is being accessed google cloud\nstorage is an online storage web service\nfor storing and accessing data on google\ncloud platform infrastructure unlike the\ngoogle drive google cloud storage is\nmore suitable for enterprises it also\nstores objects that are organized into\nbuckets amazon provides ebs or elastic\nblock store it provides high performance\nblock storage and is used along with ec2\ninstances for workloads that are\ntransaction or throughput intensive\nazure managed disk is a virtual hard\ndisk you can think of it like a physical\ndisk in an on-premises server but\nvirtualized these managed disks allow\nthe users to create up to 10 000 vm\ndisks in a single subscription\npersistent storage is a data storage\ndevice that retains data after power to\nthe device is shut off google persistent\ndisk is durable and high performance\nblock storage for gcp persistent disk\nprovides storage which can be attached\nto instances running in either google\ncompute engine or kubernetes engine next\nup we have disaster recovery services\naws provides a cloud-based recovery\nservice that ensures that your it\ninfrastructure and data are recovered\nwhile minimizing the amount of downtime\nthat could be experienced site recovery\nhelps ensure business continuity by\nkeeping business apps and workloads\nrunning during outages it allows\nrecovery by orchestrating and automating\nthe replication process of azure virtual\nmachines between regions unfortunately\ngcp has no disaster recovery service\nnext let's talk about database services\nfirst off for aws we have rds or\nrelational database service it is web\nservice that's cost effective and\nautomates administration tasks basically\nit simplifies the setup operation and\nscaling of a relational database\nmicrosoft azure sql database is a\nsoftware as a service platform that\nincludes built-in intelligence that\nlearns app patterns and adapts to\nmaximize performance reliability and\ndata protection it also eases the\nmigration of sql server databases\nwithout changing the user's applications\ncloud sql is a fully managed database\nservice which is easy to set up maintain\nand administer relational postgresql\nmysql and sql server databases in the\ncloud hosted on gcp cloud sql provides a\ndatabase infrastructure for applications\nrunning anywhere next we have nosql\ndatabase services aws provides dynamodb\nwhich is a managed durable database that\nprovides security backup and restore and\nin-memory caching for applications it is\nwell known for its low latency and\nscalable performance azure cosmos db is\nmicrosoft's globally distributed\nmulti-model database service it natively\nsupports nosql it natively supports\nnosql created for low latency and\nscalable applications gcp cloud data\nstore is a nosql database service\noffered by google on the gcp it handles\nreplication and scales automatically to\nyour application's load with cloud data\nstores interface data can easily be\naccessed by any deployment target now\nlet's talk about the key cloud tools for\neach of these service providers for aws\nin networking and content delivery we\nhave aws route 53 and aws cloud front\nfor management we have aws cloud watch\nand aws cloud formation for development\nwe have aws code start and aws code\nbuild for security we have iam and key\nmanagement service for microsoft azure\nnetworking and content delivery we have\ncontent delivery network and express\nroot for management tools we have azure\nadvisor and network watcher for\ndevelopment tools for management we have\nazure advisor and network watcher for\ndevelopment we have visual studio ide\nand azure blob studio for security we\nhave azure security center and azure\nactive directory for gcp we have the\nfollowing tools for networking and\ncontent delivery we have cloud cdn and\ncloud dns for management we have stack\ndriver and gcp monitoring for\ndevelopment we have cloud build and\ncloud sdk and finally for security we\nhave google cloud im and google and\ncloud security scanner now let's talk\nabout the companies using these cloud\nproviders for aws we have netflix\nunilever kellogg's nasa nokia and adobe\npixar samsung ebay fujitsu emc and bmw\namong others use microsoft azure so as\nseen on your screens the companies that\nuse gcp are spotify hsbc snapchat\ntwitter paypal and 20th century fox\nlet's talk about the advantages of each\nof these services amazon provides\nenterprise friendly services you can\nleverage amazon's 15 years of experience\ndelivering large-scale global\ninfrastructure and it still continues to\nhone and innovate its infrastructure\nmanagement skills and capabilities\nsecondly it provides instant access to\nresources aws is designed to allow\napplication providers isvs and vendors\nto quickly and securely host your\napplications whether an existing\napplication or a new sas based\napplication speed and agility aws\nprovides you access to its services\nwithin minutes all you need to select is\nwhat you require and you can proceed you\ncan access each of these applications\nanytime you need them and finally it's\nsecure and reliable amazon enables you\nto innovate and scale your application\nin a secure environment it secures and\nhardens your infrastructure more\nimportantly it provides security at a\ncheaper cost than on-premise\nenvironments now talking about some of\nthe advantages of azure microsoft azure\noffers better development operations it\nalso provides strong security profile\nazure has a strong focus on security\nfollowing the standard security model of\ndetect assess diagnose stabilize and\nclose azure also provides a\ncost-effective solution the cloud\nenvironment allows businesses to launch\nboth customer applications and internal\napps in the cloud which saves an id\ninfrastructure costs hence it's opex\nfriendly let's now look at the\nadvantages of gcp google builds in\nminute level increments so you only pay\nfor the compute time you use they also\nprovide discounted prices for\nlong-running workloads for example you\nuse the vm for a month and get a\ndiscount gcp also provides live\nmigration of virtual machines live\nmigration is the process of moving a\nrunning vm from one physical server to\nanother without disrupting its\navailability to the users this is a very\nimportant differentiator for google\ncloud compared to other cloud providers\ngcp provides automatic scalability this\nallows a size container scale to as many\ncpus as needed google cloud storage is\ndesigned for 99.9 durability it creates\nserver backup and stores them in an user\nconfigure location let's talk about the\ndisadvantages of each of these services\nfor aws there's a limitation of the ec2\nservice aws provides limitations on\nresources that vary from region to\nregion there may be a limit to the\nnumber of instances that can be created\nhowever you can request for these limits\nto be increased secondly they have a\ntechnical support fee aws charges you\nfor immediate support and you can opt\nfor any of these packages developer\nwhich costs 29 per month business which\ncosts more than hundred dollars an\nenterprise that costs more than fifteen\nthousand dollars it has certain network\nconnectivity issues it also has general\nissues when you move to the cloud like\ndowntime limited control backup\nprotection and so on however most of\nthese are temporary issues and can be\nhandled over time talking about some of\nthe disadvantages of microsoft azure\ncodebase is different when working\noffline and it requires modification\nwhen working on the cloud pass echo\nsystem is not as efficient as iaas azure\nmanagement console is frustrating to\nwork with it is slow to respond and\nupdate and requires far too many clicks\nto achieve simple tasks azure backup is\nintended for backing up and restoring\ndata located on your on-premises servers\nto the cloud that's a great feature but\nit's not really useful for doing bare\nmetal three stores of servers in a\nremote data center let's now look into\nthe disadvantages of gcp so when it\ncomes to cloud providers the support fee\nis very minimal but in the case of gcp\nit is quite costly it is around 150\ndollars per month for the most basic\nservice similar to aws s3 gcp has a\ncomplex pricing schema also it is not\nvery budget friendly when it comes to\ndownloading data from google cloud\nstorage now let us see the\ncertifications that are available for\naws and azure and how you can become a\ncloud engineer and an aws solutions\narchitect rahul will talk about these\ntopics we'll also cover some important\naws and azure interview questions right\nnow we're in the aws certification\nwebsite whose link will be in the\ndescription and now we're going to talk\nabout the types of aws certification as\nyou can see here there are three levels\nof aw certification there's the\nfoundational level associate level and\nprofessional level certification now the\nfoundational level certification only\nrequires you to have a basic\nunderstanding of how the aws cloud works\nthe aws certified dot practitioner is\noptional for the architect path\ndeveloper path and operations path it is\nmandatory for the specialty\ncertifications like the advanced\nnetworking big data and security\ncertifications now the associate level\ncertifications are mid-level\ncertifications for a technical role now\na professional certification is the\nhighest level of certification that you\ncan have for a technical role now you\nhave the solutions architect for the\narchitect path and the devops engineer\ncertification for both the developer and\noperations path so how do you decide\nwhich of these certifications is\nsuitable for you so you've seen here\nthat aws provides various certifications\nfor a number of job roles exisops\nadministrator solution architect\ndeveloper so you need to make the right\nchoice taking into consideration the\nareas of your interest and the\nexperience level that you have now we're\ngoing to talk about each of these\ncertifications in detail so first let's\ntalk about the aw certified cloud\npractitioner now we all understand that\naws is a widely recognized product in\nthe market so this certification helps\nyou validate how well you know the aws\ncloud so this is just the basic\nunderstanding now it is optional for the\ndeveloper path and the operations path i\nwould suggest it's a good idea to start\nhere because it forms a solid bedrock on\nall the other things that you're going\nto learn soon now more importantly it\ndoes not require any technical knowledge\nof other roles such as development\narchitecture administration and so on so\nit's a great place to start for\nnewcomers now you have the architect\nrole certifications now this is for you\nif you are interested in becoming a\nsolutions architect or a solution design\nengineer or someone who just works with\ndesigning applications or systems on the\naws platform now first we have the aw\ncertified solutions architect associate\nlevel certification now this\ncertification is for you if you want to\nshow off how well you can architect and\ndeploy applications on the aws platform\nnow it is recommended that you have at\nleast a year of experience working with\ndistributed systems on the aws platform\nat the same time it's also required that\nyou understand the aws services and be\nable to recommend a service based on\nrequirements you need to be able to use\narchitectural best practices and you\nneed to estimate the aws costs and how\nyou can reduce them next up you have the\naws certified solutions architect\nprofessional level certification now you\nwill not get the certification unless\nyou're done with the aw certified\nsolutions architect associate level\ncertification this is the show of your\ntechnical skills and experience in\ndesigning distributed applications on\nthe aws platform now this does require\nyou to have two years of experience\nworking with cloud architecture on aws\nat the same time it also requires you to\nbe able to evaluate requirements and\nthen make architectural recommendations\nyou also need to provide guidance on the\nbest practices on architectural design\nacross a number of different platforms\nthe developer level certifications are\nfor you if you're interested in becoming\na software developer now the aws\ncertified developer associate\ncertification is to test how well you\nknow how to develop and maintain\napplications on the aws platform it does\nrequire you to have a year or more of\nhands-on experience to design and\nmaintain aws based applications like any\nsoftware developer role it is necessary\nthat you know in-depth at least one\nhigh-level programming language it's\nalso necessary that you understand the\ncore of aws services uses and basic\narchitectural best practices you need to\nbe able to design develop and deploy\ncloud-based solutions on aws platform\nand you need to understand how\napplications can be created you need to\nhave experience in developing and\nmaintaining applications for a number of\naws services like amazon sns dynamodb\nsqs and so on now for the aw certified\ndevops engineer professional level\ncertification note here that this\ncertification is exactly the same as the\none you have under the operations role\nso both of them are the same thing so\nhere it tests your ability to create\noperate and manage distributed\napplications on the aws platform now it\nis necessary or it is mandatory to have\nthe aw certified developer associate\ncertification or the aws certified\nsysops administrator certification with\ntwo or more years of hands-on experience\nin doing the same in aws environments it\nrequires you to be able to develop code\nin at least one high-level language you\nneed to be able to automate and test\napplications via scripting and\nprogramming and to understand agile or\nother development processes the\noperation certifications are for you if\nyou want to become a sysops\nadministrator systems administrator or\nsomeone in devops role who wants to\ndeploy applications networks and systems\nin an automatable and beatable way the\naw certified sysops administrator\nassociate certification tests your\nknowledge in deployment management and\noperations on the aws platform now you\nneed to have one or more years of\nhands-on experience in aws based\napplications you need to be able to\nidentify and gather requirements then\ndefine a solution to be operated on aws\nyou need to be able to provide guidance\nfor the best practices through the life\ncycle of a project as well now the\nspecialty certifications are for you if\nyou're well-versed in aws and want to\nshowcase your expertise in other\ntechnical areas the aw certified big\ndata certification showcases your\nability to design and implement aws\nservices which can help derive value\nfrom a large amount of complex data you\nare however required to have completed\nthe foundational or associate level\ncertification before you can attempt\nthis you need a minimum of five years of\nhands-on experience in the data\nanalytics field as well next we have the\naw certified advanced networking\ncertification this validates your\nability to design and implement aws\nsolutions as well as other hybrid id\nnetwork architectures at scale this also\nrequires you to have completed the\nfoundational or associate level\ncertification you need to have a minimum\nof five years of hands-on experience\narchitecting and implementing network\nsolutions and lastly we have the awa\ncertified security certification it\nhelps showcase your ability to secure\nthe aws platform you're required to have\nan associate or cloud practitioner level\nof certification a minimum of five years\nof it security experience and two years\nof hands-on experience securing aws\nworkloads now say i wanted to schedule\nan examination so for example i want to\ndo the solutions architect certification\nso first i would go there now here i can\nclick on register now and the process\ncontinues or i can click on learn more\nby doing this again i can show you the\nexamination here i can also get access\nto other data like the number of\nquestions available the cost of an\nexamination the portions i need to study\nand so on now let's talk about solutions\narchitect certification with a little\nmore detail now this certification exam\ncost 150 us dollars and the practice\nexam cost 20 us dollars now here i can\nschedule the examination or download the\nexam guide i've already downloaded the\nexam guide and here it is now this exam\nguide tells you about what you need to\nlearn and what is expected from you here\nthey want you to define a solution based\non requirements and provide guidance in\nits implementation it is also\nrecommended that you know about how the\naws services work 1 years of hands-on\nexperience with distributed systems on\naws to identify and define technical\nrequirements and so on the rest is\navailable in the exam guide and most\nimportantly they tell you the main\ncontent domains and their weightages now\nwe have five domains first domain is to\ndesign resilient architectures which\nholds 34 percent of weightage at depend\ntwo you have to define performant\narchitectures three is to specify secure\napplications and architectures cost\noptimized architectures and five to\ndefine operationally excellent\narchitectures now like you've seen here\nyou've selected one certification and\nlearnt it in detail you can do the same\nfor any of these other certifications\nyou can press learn more and download\ntheir exam guide and learn everything\nthat you need to know hi guys i'm rahul\nfrom simply learn and today we will be\ntalking about azure certifications now\nbefore we go into a little bit of detail\nlet's first talk about what exactly is\nan azure certification so the azure\ncertifications are actually examinations\nthat are provided by microsoft these\nhelp you validate how well you\nunderstand the concepts of azure and how\nwell you can work with it these are\nbasically badges of honor that you can\nshow off these also play a very\nimportant role when it comes to hiring a\npromotion you're obviously more likely\nto be selected if you are a certified\nprofessional now these certifications\ncover a wide range of domains and these\ncertifications also work towards a\nspecified role for example you have\ncertifications that help you become a\nsolutions architect or an as your\nadministrator or an azure developer now\nif you need a little more convincing as\nto why you should be taking up an azure\ncertification here are a few more azir\nprovides powerful data and artificial\nintelligence services that help create\nintelligent applications azure has more\nthan 100 services that span a wide range\nof domains they also help satisfy a\ngreat number of requirements more than\n80 percent of the fortune 500 companies\nuse microsoft azure for their cloud\ncomputing requirements not to mention\nthese organizations that use microsoft\nproducts can actually avail an\nenterprise agreement that gives them\ndiscounts on azure services and finally\nazir provides services across 42 regions\nin the world which is more than any\nother cloud service provider does in the\nmarket right now now let's talk about\nazure certifications so it's highly\nlikely that you've heard of microsoft\nmore popular certifications the 70532\n70533 and 70535 but microsoft is\nchanging its approach towards\ncertifications microsoft's new\ncertifications aim to make the\nindividual fall into a particular role\nfor example as your administrator\nassociate as your developer associate as\nyour solutions architect and the azure\ndevops engineer expert this is what\nmicrosoft introduced in the ignite\nconference that took place on september\n24th there microsoft introduced new\ncertifications that fall under the az\ncategory now to become an azure\nadministrator associate you need to have\nthe az 100 certification or the\nmicrosoft as your infrastructure and\ndeployment and the az101 or microsoft as\nyour integration and security to become\nan azure developer you need the az200\nwhich is the microsoft azure developer\ncore solution certification and az201 or\nthe microsoft azure developer advanced\nsolution certification finally to become\na solutions architect you'll need the\nasa 300 or the microsoft as your\narchitect technologies and the az-301 or\nthe microsoft azure architect design now\nthese were all introduced on september\n24th when the ignite conference took\nplace now the old certifications the 532\n533 and 535 will be discontinued from\nthe 31st of december 2018. so what\nhappens to the people who've actually\ndone it that's why microsoft introduced\nthe az102 202 and 302 transition\ncertifications now we'll talk about that\nin a little bit so now let's go into all\nof the new certifications in detail so\nnow let's talk about exam az 100 or the\nmicrosoft as your infrastructure and\ndeployment certification so this is\nbasically part one of two when it comes\nto becoming an azure administrator this\ncosts 165 us dollars now let's have a\nlook at the syllabus for this exam some\nof the domains that you need to prepare\nfor and their approximate weightages so\nfirst off you need to know how you can\nmanage azure subscriptions and resources\nthis involves managing subscriptions\nanalyzing how resources are being used\nand how they're consumed and managing\nother resource groups secondly you have\nimplementing and managing storage you\nneed to know how you can create and\nconfigure storage accounts how you can\nimport and export data to azure\nconfigures your files and how you can\nimplement as your backup then you have\ndeploying and managing virtual machines\nyou need to know how you can create and\nconfigure virtual machines for windows\nor linux you need to know how you can\nautomate deployment of virtual machines\nyou need to know how you can manage\nazure virtual machines and manage\nvirtual machine backups then you need to\nknow how you can configure and manage\nvirtual networks you need to be able to\ncreate connectivity between virtual\nnetworks how you can implement and\nmanage virtual networking configure name\nresolution to groups finally you need to\nknow how you can manage identities you\nneed to be able to manage as your active\ndirectories and you need to know how you\ncan implement and manage hybrid\nidentities the next step in becoming an\nazure administrator is to do the az101\nor the microsoft azure integration and\nsecurity certification the az101 or the\nmicrosoft azure integration and security\ncertification goes into a little more\ndetail when it comes to becoming an\nazure administrator the certification\ncost 165 us dollars now let's have a\nlook at some of the important topics\nthat you need to know for this\nexamination so let's have a look at some\nof the portions that you need to be well\nversed with to perform well in this\nexamination first up we have evaluating\nand performing server migrations to\nazure then we have implementing and\nmanaging application services which\ninvolves configuring serverless\ncomputing managing app service plans and\nmanaging app services then you have\nimplementing advanced virtual networking\nthat involves implementing application\nload balancing implementing azure load\nbalancer monitoring and managing\nnetworking integrating the on-premise\nnetwork with the azure network and so on\nand finally securing identities you need\nto be able to implement a multi-factor\nauthentication manage a role-based\ncontrol system implementing as your\nactive directories and privilege\nidentity management so after you're done\nwith az100 and 101 you become a\nmicrosoft certified as your\nadministrator associate but what happens\nto the people who already done the\nimplementing microsoft azure\ninfrastructure solution certification or\nthe 70533 it's for these people that\nmicrosoft has the az102 or the microsoft\nazure administrator certification\ntransition now this examination that\ncosts 99 us dollars contains concepts\nfrom both az 100 and a z101 and this\nexam is only valid for people who've\nalready completed the 70533\ncertification now if you have completed\nthe 70533 i suggest you do this\ntransition certification immediately as\nthis will be discontinued by microsoft\nby the 31st of march 2019. now let's\nhave a look at how you can become a\nmicrosoft certified as your developer\nassociate to do this you need to\ncomplete two certifications the az200 or\nthe microsoft azure developer core\nsolution certification and the az201 or\nthe microsoft azure developer advanced\nsolution certification so now let's have\na look at the az200 now this\ncertification is part one of two when it\ncomes to becoming an azure developer\nassociate it costs 165 us dollars now\nthis examination is in its beta phase\nwhich means that unlike normal\nexaminations where you get your results\nas soon as you finish the examination\nthis exam will take at least one or two\nweeks before you can get your result the\nquestions are still being worked on and\nimproved upon there's also a limitation\nto how many people can take the exam at\nthe moment now let's have a look at some\nof the portions that you need to prepare\nfor for this examination you need to be\nable to select an appropriate cloud\ntechnology solution based on your\nrequirements this may involve a compute\nsolution integration or a storage\nsolution next you need to be able to\ndevelop for cloud storage which involves\ndeveloping solutions that involve\nstorage tables file storage relational\ndatabases and so much more you need to\nbe able to create platform as a service\nsolutions which involves creating web\napplications mobile applications app\nservices serverless functions and so\nmuch more and finally you need to be\nable to secure cloud solutions you need\nto implement authentication access\ncontrol and secure data solutions now\nmicrosoft recommends that you have at\nleast a year of experience working with\nmicrosoft azure creating applications\nwith azure tools and technologies while\nat the same time having a solid\nunderstanding of all the faces of\nsoftware development now let's have a\nlook at the next step to becoming a\nmicrosoft azure developer you need to do\nthe az201 or the microsoft azure\ndeveloper advanced solution\ncertification now let's have a look at\nthat now this examination is also in its\nbeta phase and will move to its final\nversion in the next few months as of now\nit costs 165 us dollars now let's have a\nlook at some of the portions that you\nneed to prepare for for this examination\nyou need to know how you can develop for\nan azure cloud model you need to develop\nfor auto scaling develop for\nlong-running tasks distribute a\ntransaction and so much more you need to\nknow how you can implement cloud\nintegration solutions like managing apis\nusing api management configure a message\nbased integration architecture to\ndevelop an application message model and\nso much more and finally you need to\nknow how you can develop azure's\ncognitive services bot and iot solutions\nyou need to be able to create and\nintegrate bots create and implement iot\nsolutions and to integrate the azure\ncognitive services in an application\nafter you're done with all of this you\nbecome a microsoft certified azure\ndeveloper associate now let's talk about\naz202 now this is a transition\nexamination for anyone who's done 70532\nor developing microsoft azure solution\ncertification now just like the other\ntransition certification this costs 99\nus dollars and it is in its beta phase\nnow this is accessible for only people\nwho have done the 70532 and is available\nonly for a limited period of time this\nwill be discontinued from the 31st of\nmarch 2019. now this has concepts that\nhave been included in both az 200 and as\n201 concepts like developing for crowd\nstorage creating platform as a service\nsolutions securing cloud solutions\ndeveloping for an azure cloud model\nimplementing cloud integration solutions\ndeveloping ai machine learning and iot\nsolutions now after you're done with\nthis you can become a microsoft\ncertified as your developer associate\nnow let's find out how you can become a\nmicrosoft certified as your solutions\narchitect expert for this you need to do\ntwo certifications the aza 300 and the\nazure 301 now let's have a look at az300\nwhich is the microsoft azure architect\ntechnology certification now the az 300\nis still in its beta phase and costs 165\ndollars this is part one of two for\nbecoming a microsoft certified as your\nsolutions architect expert now let's\ntalk about some of the topics that you\nneed to prepare for for this examination\nyou need to know how you can deploy and\nconfigure infrastructure which involves\nanalyzing resource utilization\nconsumption creating and configuring\nstorage accounts creating and\nconfiguring virtual machines for windows\nand linux automating deployment of\nvirtual machines and so much more then\nyou need to know how you can implement\nworkloads and security like migrating\nservers to assure configure serverless\ncomputing implementing application load\nbalancing managing role-based access\ncontrol implementing multi-factor\nauthentication and so on then you need\nto architect cloud technology solutions\nyou need to be able to select\nappropriate compute solutions integrate\nsolutions storage solutions you need to\nbe able to create and deploy\napplications like for example creating\nweb applications using pass create an\napplication or service that runs on\nservice fabric design and develop\napplications that run in containers and\nso on then you need to implement\nauthentications and secure data and\nfinally you need to develop for the\ncloud which means you need to know how\nyou can develop long-running tasks\nconfigure message-based integration\ndevelop for auto scaling implement\ndistributed transactions and so on now\nthis certification does require you to\nbe having expert level skills in at\nleast as your administration as your\ndevelopment or devops you also need to\nhave experience with the various steps\nin it operations like networking\nvirtualization security and so on this\nis because the azure solutions architect\nplay a very important role of advising\nstakeholders to convert their\nrequirements into scalable secure and\nreliable solutions so now the next step\nis to do the az301 or the microsoft\nazure architect design certification now\nlet's have a look at that now like all\nthe other certifications this costs 165\ndollars and is still in its beta phase\nthis is the final step in becoming an\nazure solutions architect expert now\nlet's have a look at some of the topics\nthat you need to prepare for for this\ncertification firstly you need to know\nhow you can determine workload\nrequirements you need to know how to\ngather information and requirements to\noptimize the consumption strategy and to\ndesign a auditing and monitoring\nstrategy you need to design for identity\nand security like design identity\nmanagement design authentication\nauthorization and a monitoring strategy\nfor identity and security then you need\nto know how you can design a data\nplatform solution you need to design a\ndata management strategy a data\nprotection strategy document data flows\nand so on then you need to design a\nbusiness continuity strategy for example\nto design a site recovery strategy\nensure that there's high availability\ndesign a disaster recovery strategy and\nto design a data archiving strategy then\nyou need to design for deployment\nmigration and integration you need to\ndesign deployments design migrations and\ndesign an api integration strategy and\nfinally you need to know how you can\ndesign a storage strategy a compute\nstrategy networking strategy and so on\nafter you're done with all of this you\nbecome a microsoft certified as your\nsolutions architect expert so what about\nthose people who've already done the\n70535 or the architecting microsoft as\nyour solution certification that's where\nthe asic 302 comes in now the az302 is a\ntransition certification which costs 99\nus dollars this acts as a replacement\nfor anyone who's done the 70535\ncertification now this is again in its\nbeta phase but will last only till march\n31st 2019. now if you finish the\ncertification you get to become an azure\nsolutions architect expert now this\nconsists of topics included in both az\n300 and 301 concepts like determining\nworkload requirements designing for\nidentity and security designing a\nbusiness continuity strategy\nimplementing workloads in security\nimplementing authentication and securing\ndata and developing for the cloud\nnow what we've mentioned in this video\nare the most important azure\ncertifications now there are older\ncertifications but we've not covered\nthem because we'll be focusing on the\nmore important role based examinations\nthat have been introduced recently the\ncloud tech services market is expected\nto grow 17.3 percent in the span of 2018\nto 19 which means there's a growth from\n175 175.8 billion dollars to a whopping\n206 billion dollars in 2019 and as of\n2020 it's expected that 90 of all\norganizations in the world would be\nusing cloud services not to mention\nseveral organizations around the world\nsuggest that using cloud computing\nservices has enabled their employees to\nexperiment a lot more with technologies\nlike machine learning and artificial\nintelligence so here's what we'll be\ngoing through today firstly we'll be\ntalking about who is a cloud computing\nengineer the steps you need to take to\nbecome a cloud computing engineer and\nthe cloud computing engineers salaries\nso first off who is a cloud computing\nengineer now a cloud computing engineer\nis an id professional who takes care of\nall the technical aspects of cloud\ncomputing now be it design planning\nmaintenance and support now a cloud\ncomputing engineer can take up a number\nof different career paths this could be\nthat of a cloud developer security\nengineer a full stack developer sysops\nadministrator solutions architect cloud\narchitect and so much more now let's\nhave a look at some of the major cloud\ncomputing roles first off we have\nsolutions architect now these are\nindividuals who are responsible for\nanalyzing the technical environment in\nwhich they are going to produce the\nsolutions the requirements and the\nspecifications secondly they are\nrequired to select an appropriate\ntechnology that satisfies set\nrequirements they need to estimate and\nmanage the usage and the operational\ncosts of the solutions they provide and\nthey need to support project management\nas well as solution development next we\nhave sysops administrators they are\ninvolved in deploying managing and\noperating highly scalable and fault\ntolerant systems they need to select an\nappropriate service based on compute\nsecurity or data requirements they need\nto estimate and manage usage and\noperational costs and they need to be\nable to migrate on-premises workloads\nonto an appropriate cloud computing\nplatform so among both of these roles\nthere are certain requirements that are\nremaining constant now let's have a look\nat the steps you need to take to become\na cloud computing engineer your first\nstep is to gain proficiency in a cloud\ncomputing platform now the first step is\nto become proficient in at least one of\nthe three major cloud computing\nplatforms beat aws azure or the google\ncloud platform now there are a huge\nnumber of resources that you can find on\nthe internet it could be youtube videos\narticles virtual or physical classrooms\nand so much more now after you're done\nlearning you can get certified by\nmicrosoft azure aws or the google cloud\nplatform now for aws you have a number\nof different certifications which can be\ndivided into three categories which are\nthe foundational which is just the\nbasics the associate level\ncertifications the professional level\ncertifications and the specialty\ncertifications similarly with microsoft\nazure you have certifications that\nenable you to become an azure developer\nassociate an azure administrator\nassociate an azure architect\nprofessional and a devops engineer now\nmost cloud computing platforms have a\nfree tier that you can take advantage of\nthese provide a number of free services\nfor a period of time some of which are\nfree forever so you can use these\nplatforms to your advantage and do as\nmuch practice as you can on them now if\nyou want to learn more about cloud\ncomputing you can also check out\nsimplylearn's youtube channel then you\ncan go on to the playlist section right\nhere and you can find comprehensive\nvideos on a number of different cloud\ncomputing platforms aws and microsoft\nazure our aws tutorial videos talk about\nwhat exactly is aws how you can become\nan aws solutions architect amazon ec2 s3\nsome of the other services and so much\nmore we also have detailed tutorials on\nazure which talks about what exactly is\nazure the certifications provided by\nazure some of the services like machine\nlearning as your active directory and so\nmuch more and now we're at step two\nbeing experienced in at least one\nprogramming language unlike general\npurpose programming languages like c c\nplus plus c sharp and so on cloud\ncomputing requires ones that are a lot\nmore data oriented now some of the major\nprogramming languages that are used in\ncloud computing are go python clojure\nand java now as i said before there is a\nwealth of resources that you can learn\nfrom there are free websites that you\ncan practice your code on like quick\ncode code academy and several others\nthere's also resources like youtube\nvideos as well as the option of online\nor offline classes now we're at step 3\nspecialization you'll also need to be\nwell versed with a number of key\nconcepts these are storage and\nnetworking now with storage you need to\nknow how data can be stored and where it\ncan be accessed from you need to know\nhow it can be accessed from multiple\ndifferent resources you'll also need to\nhave some experience with the services\nprovided by azure and aws like the\namazon s3 in aws and the appropriately\nnamed azure storage from microsoft azure\nwith networking you need to have a\nstrong understanding of the networking\nfundamentals as well as virtual networks\nnext up we have virtualization and\noperating systems with virtualization\nyou need to know how virtual networks\nwhich is just a combination of different\nvirtual machines can be used to emulate\ndifferent components in a particular\nsystem with operating systems you need\nto have a very strong understanding\noperating systems like windows and linux\nnext up we have security and disaster\nrecovery now you need to understand how\ndata application as well as\ninfrastructure can be protected from\nmalicious attacks with disaster recovery\nyou need to be prepared for any\nunexpected circumstance by making sure\nyour systems are always safe and are\nregularly backed up to prevent any sort\nof loss of data then we have web\nservices and devops now you need to have\na strong understanding of apis or\napplication program interfaces and web\nservices some amount of experience with\nweb design also can be of great help\nwith devops you need to have a strong\nunderstanding of how cloud computing is\nable to provide a centralized platform\non which you can perform testing\ndeployment and production for devops\nautomation moreover with devops you\nunderstand the synergy that the\noperations as well as the development\nteams have with each other and for the\nsuccess of any project and finally\nyou're a cloud computing engineer now\nlet's have a look at the salaries of\ncloud computing engineers in the united\nstates cloud computing engineers earn\naround 116 000 per annum in india a\ncloud computing engineer is paid\napproximately 6 lakh 66 000 rupees per\nannum now how can simply learn help you\nbecome a cloud computing engineer so\nlet's head on to simply learn's website\nhere we have the cloud architect masters\nprogram now this deals with a number of\ndifferent courses all of which that can\nhelp you get started in your journey to\nbecoming a cloud computing engineer this\nmaster's program covers a number of\ndifferent courses like aws technical\nessentials microsoft azure fundamentals\naws developer associate and so much more\nit provides you 40 plus in-demand skills\nand 25-plus services provides you a\nmaster's certification it has 16 plus\nreal life projects and helps you get a\nsalary that ranges between 15 to 25 lakh\nrupees per annum it also covers a\nvariety of tools like amazon ec2 azure\ndata factory virtual machines and so\nmuch more so why don't you head on to\nsimplylearn.com and get started on your\njourney to getting certified and getting\nahead i'm here to walk you through some\nof the aws interview questions which we\nfind are important and our hope is that\nyou would use this material in your\ninterview preparation and be able to\ncrack that cloud interview and step into\nyour dream cloud job by the way i'm and\ncloud technical architect trainer and an\ninterview panelist for cloud network and\ndevops so as you progress in watching\nyou're going to see that these questions\nare practical scenario based questions\nthat tests the depth of the knowledge of\na person in a particular aws product or\nin a particular aws architecture so why\nwait let's move on all right so in an\ninterview you would find yourself with a\nquestion that might ask you define and\nexplain the three basic types of cloud\nservices and the aws products that are\nbuilt based on them see here it's a very\nstraightforward question just explain\nthree basic types of cloud service and\nwhen we talk about basic type of cloud\nservice it's compute obviously that's a\nvery basic service storage obviously\nbecause you need to store your data\nsomewhere and networking that actually\nconnects a couple of other services to\nyour application these basic will not\ninclude monitoring these basic will not\ninclude analytics because they are\nconsidered as optional they are\nconsidered as advanced services you\ncould choose a non-cloud service or a\nproduct for monitoring of and for\nanalytics so they're not considered as\nbasic so when we talk about basics they\nare compute storage and networking and\nthe second part of the questions is\nexplain some of the aws products that\nare built based on them of course\ncompute ec2 is a major one that's that's\nthe major share of the compute resource\nand then we have platform as a service\nwhich is elastic bean stock and then\nfunction as a service which is lambda\nauto scaling and light cell are also\npart of compute services\nso the compute domain it really helps us\nto run any application and the compute\nservice helps us in managing the scaling\nand deployment of an application again\nlambda is a compute server so the\ncompute service also helps in running\nevent initiated stateless applications\nthe next one was storage a lot of\nemphasis is on storage these days\nbecause if there's one thing that grows\nin a network on a daily basis that\nstorage every new day we have new data\nto store process manage so storage is\nagain a basic and an important cloud\nservice and the products that are built\nbased on the storage services are s3\nobject storage glacier for archiving ebs\nelastic block storage as a drive\nattachment for the ec2 instances and the\nefs file share for the ec2 instances so\nthe storage domain helps in the\nfollowing aspects it holds all the\ninformation that the application uses so\nit's the application data and we can\nalso archive old data using storage\nwhich would be glacier and any object\nfiles and any requirement for block\nstorage can be met through elastic block\nstore and s3 which is again an object\nstorage talking about uh networks it's\njust not important to answer the\nquestion with the name of the services\nand the name of the product it'll also\nbe good if you could go in depth and\nexplain how\nthey can be used right so that actually\nproves you to be a person knowledgeable\nenough in that particular service or\nproduct so talking about networking\ndomain vpc networking can't imagine\nnetworking without vpc in in the cloud\nenvironment especially in aws cloud\nenvironment and then we have route 53\nfor domain resolution or\nfor dns and then we have cloudfront\nwhich is an edge caching service that\nhelps customers get our customers to\nread their application with low latency\nso networking domain helps with some of\nthe following use cases it controls and\nmanages the connectivity of the aws\nservices within our account and we can\nalso pick an ip address range\nif you're a network engineer or if you\nare somebody who works in networks or\nare planning to work a network you will\nsoon realize the importance of choosing\nyour own ip address for easy remembering\nso having an option to have your own ip\naddress in the cloud on range of ip\naddress in the cloud it really helps\nreally really helps in cloud networking\nthe other question that gets asked would\nbe the difference between the\navailability zone and the region\nactually the question generally gets\nasked\nso to test how well you can actually\ndifferentiate and also correlate the\navailability zone and the region\nrelationship right so a region is a\nseparate geographic area like the us2s1\ni mean which represents uh north\ncalifornia or the ap south which\nrepresents mumbai so regions are a\nseparate geographic area on the contrary\navailability zone resides\ninside the region you shouldn't stop\nthere you should go further and explain\nabout availability zones and\navailability zones are isolated from\neach other and some of the services will\nreplicate themselves within the\navailability zone so availability zone\ndoes replication within them but regions\nthey don't generally do replication\nbetween them the other question you\ncould be asked is what is auto scaling\nwhat do we achieve by auto scaling so in\nshort auto scaling it helps us to\nautomatically provision and launch new\ninstances whenever there is an demand it\nnot only helps us meeting the increasing\ndemand it also helps in reducing the\nresource usage when there is low demand\nso auto scaling also allows us to\ndecrease the resources or resource\ncapacity as per the need of that\nparticular r now this helps business in\nnot worrying about putting more effort\nin managing or continuously monitoring\nthe server to see if they have the\nneeded resource or not because auto\nscaling is going to handle it for us so\nbusiness does not need to worry about it\nand auto scaling is one big reason why\npeople would want to go and pick a cloud\nservice especially an awf service the\nability to increase and shrink based on\nthe need of that arc that's how powerful\nis auto scaling\nthe other question you could get asked\nis what's due targeting in cloud front\nnow we know that cloudfront is caching\nand it caches content globally in the\namazon caching servers global wide the\nwhole point is to provide users\nworldwide access to the data from a very\nnearest server possible that's the whole\npoint in using or going for cloud front\nthen what do you mean by geo targeting\njio\nis showing customer and specific content\nbased on language we can customize the\ncontent based on what's popular in that\nplace we can actually customize the\ncontent the url is the same but we could\nactually change the content a little bit\nnot the whole content otherwise it would\nbe dynamic but we can change the content\na little bit a specific a file or a\npicture or a particular link in a\nwebsite and show customized content to\nusers who will be in different parts of\nthe globe so how does it happen\ncloudfront will detect the country where\nthe viewers are located and it will\nforward the country code to the origin\nserver and once the origin server gets\nthe specialized or a specific country\ncode it will change the content and it\nwill send to the caching server and it\nget cached there forever and the user\ngets to view a content which is\npersonalized for them for the country\nthey are in the other question you could\nget asked is the steps involved in using\ncloud formation or creating a cloud\nformation or backing up an environment\nwithin cloud formation template we all\nknow that if there is a template we can\nsimply run it and it provisions the\nenvironment but there is a lot more\ngoing into it so the first step in\nmoving towards infrastructure as a code\nis to create the cloud formation\ntemplate which as of now supports json\nand yaml file format so first create the\ncloud formation template and then save\nthe code in an x3 bucket history bucket\nserves as the repository for our code\nand then from the cloud formation call\nthe file in the s3 bucket and create a\nstack and now cloud formation uses the\nfile reads the file understands services\nthat are being called understands the\norder understands how they are connected\nwith each other cloud formation is\nactually an intelligent service it\nunderstands the relation based on the\ncode it would understand the\nrelationship between the different\nservices and it would set an order for\nitself and then would provision the\nservices one after the other let's say a\nservice has a dependency and the\ndependent service the other service\nwhich this service let's say service a\nand b service b is dependent on service\na let's say cloud formation is an\nintelligent service it would provision\nthe resource a first and then would\nprovision resource b what happens if we\ninverse the order if we inverse the\norder resource b first gets provision\nand because it does not have dependency\nchances that the cloud formation's\ndefault behavior is that if something is\nnot provisioned properly something is\nnot healthy it could roll back chances\nthat the environment provisioning will\nroll back so to avoid that cloud\nformation first provisions all the\nservices that has or that's dependent on\nthat's depended by another service so it\nprovisions those service first and then\nprovisions the services that has\ndependencies and if you're being hired\nfor\na devops or you know if the interview\nwanted to test your skill on\nsystems side this definitely would be a\nquestion in his list how do you upgrade\nor downgrade a system with near zero\ndowntime now everybody's moving towards\nzero downtime or near zero downtime all\nof them want their application to be\nhighly available so the question would\nbe how do you actually upgrade or\ndowngrade a system with near zero\ndowntime now we all know that i can\nupgrade an ec2 instance to a better ec2\ninstance by changing the instance type\nstopping and starting but stopping and\nstarting is going to cause a downtime\nright so that's you should be answering\nor you shouldn't be thinking in those\nterms because that's the wrong answer\nspecifically the interviewer wants to\nknow how do you upgrade a system with\nzero downtime so upgrading system with\nzero downtime it includes launching\nanother system parallelly with the\nbigger ec2 instance type over the bigger\ncapacity and install all that's needed\nif you're going to use an ami of the old\nmachine well and good you don't have to\ngo through installing all the updates\nand installing all the application from\nthe ami once you've launched it in a\nbigger instance locally test the\napplication to see if it is working\ndon't put it on production yet test the\napplication to see if it is working and\nif the application works we can actually\nswap if your server is behind and\nbehind\nroute 53 let's say all that you could do\nis go to dot 53 update the\ninformation with the new ip address new\nip address of the new server and that's\ngoing to send traffic to the new server\nnow so the cut over is handled or if\nyou're using static ip you can actually\nremove the static ip from the old\nmachine and assign it to the new machine\nthat's one way of doing it or if you are\nusing elastic nic card you can actually\nremove the new card from the old machine\nand attach the new car to the new\nmachine so that way we would get near\nzero downtime if you are hired for an\narchitect level\nyou should be worrying about cost as\nwell along with the technology and this\nquestion would test how well you manage\ncost so what are the tools and\ntechniques we can use in aws to identify\nand correct identify and know that we\nare paying the correct amount for the\nresources that we are using or how do\nyou get a visibility of your aws\nresources running one way is to check\nthe billing there is a place where you\ncan check the top services that were\nutilized it could be free and it could\nbe paid service as well top services\nthat can be utilized it's actually in\nthe dashboard of the cost management\nconsole so that table here shows the top\nfive most used services so looking at it\nyou can get it all right so i'm using a\nlot of storage i'm using a lot of ec2\nwhy is storage high you can go and try\nto justify that and you will find if you\nare storing things that should be\nstoring and then clean it up why is\ncompute capacity so high why is data\ntransfer so high so if you start\nthinking in those levels you'll be able\nto dig in and clean up unnecessary and\nbe able to save your bill and there are\ncost explorer services available which\nwill help you to view your usage pattern\nor view your spending for the past 13\nmonths or so and it will also forecast\nfor the next three months now how much\nwill you be using if your pattern is\nlike this that will actually help and\nwill give you a visibility on how much\nyou have spent how much you will be\nspending if the trend continues budgets\nare another excellent a way to control\ncost you can actually set up budget\nalright this is how much i am willing to\nspend for this application for this team\nor for this month for this particular\nresource so you can actually put a\nbudget mark and anytime it exceeds any\ntime it's nearing you would get an alarm\nsaying that well we're about to reach\nthe allocated budget amount stuff like\nthat that way you can go back and know\nand you know that how much the bill is\ngoing to be for that month or you can\ntake steps to control bill amount for\nthat particular month so aws budget is\nanother very good tool that you could\nuse cost allocation tags helps in\nidentifying which team or which resource\nhas spent more in that particular month\ninstead of looking at the bill as one\nlist with no specifications into it and\nlooking at it as an expenditure list you\ncan actually break it down and tag the\nexpenditure to the teams with cost\nallocation tax the dev team has spent so\nmuch the production team has spent so\nmuch the training team has spent more\nthan the dev and the production team why\nis that now you'll be able to you know\nthink in those levels only if you have\ncost allocation tax now cost allocation\ntags are nothing but the tags that you\nwould put when you create a resource so\nfor production services you would put as\na production tag you would create a\nproduction tag and you would associate\nthat resources to it and at a later\npoint when you actually pull up your\nbill that's going to show a detailed a\nlist of this is the owner this is the\ngroup and this is how much they have\nused in the last month and you can move\nforward with your investigation and\nencourage or stop users using more\nservices with the cost allocation tax\nthe other famous question is are there\nany other tools or is there any other\nway of accessing aws resource other than\nthe console console is gui right so in\nother words other than gui how would you\nuse the aws resource and how familiar\nare you with those tools and\ntechnologies the other tools that are\navailable that we can leverage and\naccess the aws resource are of course\nputty you can configure puti to access\nthe aws resources like log into an ec2\ninstance and ec2 instance does not\nalways have to be logged in through the\nconsole you could use putty to log into\nan ec2 instance like the jump box like\nthe proxy machine and like the gateway\nmachine and from there you can actually\naccess the rest of the resources so this\nis an alternative to the console and of\ncourse we have the aws cli in any of the\nlinux machines or windows machines we\ncan install so that's point two three\nand four we can install aws cli for\nlinux windows also for mac so we can\ninstall them and from there from your\nlocal machine we can access run aws\ncommands and access provision monitor\nthe aws resources the other ones are we\ncan access the aws resource\nprogrammatically using aws sdk and\neclipse so these are bunch of options we\nhave to use the aws resource other than\nthe console if you're interviewed in a\ncompany or by a company that focuses\nmore on security and want to use aws\nnative services for their security then\nyou would come across this question what\nservices can be used to create a\ncentralized logging solution the basic\nservices we could use our cloud watch\nlogs store them in s3 and then use\nelasticsearch to visualize them and use\nkinesis to move the data from s3 to\nelasticsearch right so log management it\nactually helps organizations to track\nthe relationship between operational and\nsecurity changes and the events that got\ntriggered based on those logs\ninstead of logging into an instance or\ninstead of logging into the environment\nand checking the resources physically i\ncan come to a fair conclusion by just\nlooking at the logs every time there's a\nchange the system would scream and it\ngets tracked in the cloud watch and then\ncloud watch pushes it to s3 kinesis\npushes the data from s3 to elasticsearch\nand i can do a time-based filter and i\nwould get an a fair understanding of\nwhat was going on in the environment for\nthe past one or whatever the time window\nthat i wanted to look at so it helps in\ngetting a good understanding of the\ninfrastructure as a whole all the logs\nare getting saved in one place so all\nthe infrastructure logs are getting\nsaved in one place so it's easy for me\nto look at it in an infrastructure\nperspective\nso we know the services that can be used\nand here are some of the services and\nhow they actually connect to each other\nit could be logs that belongs to a one\naccount it could be logs that belongs to\nmultiple accounts it doesn't matter you\nknow those three services are gonna work\nfairly good and they're gonna inject or\nthey're gonna like suck logs from the\nother accounts put it in one place and\nhelp us to monitor so as you see you\nhave cloud watch here that actually\ntracks the metrics you can also use\ncloud trail if you want to log api calls\nas well push them in an s3 bucket so\nthere are different types of blog flow\nlogs are getting captured in an instance\napplication logs are getting captured\nfrom the same vpc from a different vpc\nfrom the same account from a different\naccount and all of them are analyzed\nusing elasticsearch using the kibana\nclient\nso step one is to deploy the ecs cluster\nstep two is to restrict access to the\necs cluster because it's valid data you\ndon't want anybody to put their hands\nand access their data so rustic access\nto the ecs dashboard and we could use\nlambda also to push the uh data from\ncloudwatch to\nthe elasticsearch domain and then kibana\nis actually the graphical tool that\nhelps us to visualize the logs instead\nof looking at log as just statements or\nin a bunch of characters a bunch of\nfiles kibana helps us to analyze the\nlogs in a graphical or a chart or a bar\ndiagram format\nagain in an interview the interviewer is\nmore concerned about testing your\nknowledge on aw security products\nespecially on the logging monitoring\neven management or incident management\nthen you could have a question like this\nwhat are the native aws security logging\ncapabilities now most of the services\nhave their own logging in them like have\ntheir own logging like s3 s3 has its own\nlogin and cloudfront has its own logging\nds has its own logging vpc has its own\nlogging in additional there are account\nlevel logins like a cloudtrail and aws\nconfig services so there are variety of\nlogging options available in the aws\nlike cloud trail config cloudfront\nredshift logging rds logging vpc flow\nlogs s3 object logging s3 access logging\nstuff like that so we're going to look\nat two servers in specific cloud trail\nnow this cloud trail the very first\nproduct in that picture we just thought\nthe cloud trail provides an very high\nlevel history of the api calls for all\nthe account and with that we can\nactually perform a very good security\nanalysis\na security analysis of our account and\nthese logs are actually delivered to you\ncan configure it they can be delivered\nto s3 for long time archivals and based\non a particular event it can also send\nan email notification to us saying hey\njust got this error thought i'll let you\nknow stuff like that the other one is\nconfig service a config service helps us\nto understand the configuration changes\nthat happened in our environment and we\ncan also set up notifications based on\nthe configuration changes so it records\nthe cumulative changes that are made in\na short period of time so if you want to\ngo through the lifetime of a particular\nresource what are the things that happen\nwhat are the things it went through they\ncan be looked at using aws config\nall right the other question you could\nget asked is if\nyou know your role includes taking care\nof cloud security as well then the other\nquestion you could get asked is the\nnative services that amazon provides or\nto mitigate ddos which is denial of\nservice now not all companies would go\nwith amazon native services but there\nare some companies which want to stick\nwith amazon native services just to save\nthem from the headache of managing the\nother softwares or bringing in another\ntool a third-party tool into managing\nddos they simply want to stick with\namazon proprietary amazon native\nservices and a lot of companies are\nusing amazon service to prevent ddos\ndenial of service now denial of service\nis if you already know what denial of\nservice is well and good if you do not\nknow then let's know it now denial of\nservice is a user trying to or\nmaliciously making attempt to access a\nwebsite or an application the user would\nactually create multiple sessions and he\nwould occupy all the sessions and he\nwould not let legitimate users access\nthe servers so he's in turn denying the\nservice for the user a quick picture\nreview of what denial of services now\nlook at it these users instead of making\none connection they are making multiple\nconnections and there are cheap software\nprograms available that would actually\ntrigger connections from different\ncomputers in the internet with different\nmac addresses so everything kind of\nlooks legitimate for the server and it\nwould accept those connections and it\nwill keep the sessions open the actual\nusers won't be able to use them so\nthat's denying the service for the\nactual users denial of service all right\nand distributed denial of service is uh\ngenerating attacks from multiple places\nyou know from a distributed environment\nso that's distributed denial of service\nso the tools the native tools that helps\nus to prevent the denial of service\nattacks in aws is cloud shield\nand web access firewall aw swap now they\nare the major ones they are designed to\nmitigate a denial of service if your\nwebsite is often bothered by denial of\nservice then we should be using aws\nshield or aws vaf and there are a couple\nof other tools that also does when i say\nthat also does denial of service is not\ntheir primary job but you could use them\nfor denial of service route 53's purpose\nis to provide dns cloudfront is to\nprovide caching elastic load balancer\nelbs work is to provide load balancing\nvpc is to create and secure a virtual\nprivate environment but they also\nsupport mitigating denial of service but\nnot to the extent you would get in aws\nshield and aws web so aws shield and\nwaff are the primary ones but the rest\ncan also be used to mitigate distributed\ndenial of service the other tricky\nquestion is\nthis actually will test your familiarity\nwith the region and the services\navailable in the region so when you're\ntrying to provision a service in a\nparticular region you're not seeing the\nservice in that region how do we go\nabout fixing it or how do we go about\nusing the service in the cloud it's a\ntricky question and if you have not gone\nthrough such situation you can totally\nblow it away you really need to have a\ngood understanding on regions the\nservices available in those regions and\nwhat if a particular service is not\navailable how to go about doing it the\nanswer is not all services are available\nin all regions anytime amazon announces\na new service they don't immediately\npublish them on all regions they start\nsmall and as in when the traffic\nincreases as and when it becomes more\nlikeable to the customers they actually\nmove the service to different regions so\nas you see in this picture within\namerica north virginia has more services\ncompared to ohio or compared to north\ncalifornia so within not america itself\nnorth virginia is the preferred one so\nsimilarly there are preferred regions\nwithin europe middle east and africa and\npreferred regions within asia pacific so\nanytime we don't see a service in a\nparticular region chances that the\nservice is not available in that region\nyet we got to check the documentation\nand find the nearest region that offers\nthat service and start using the service\nfrom that region now you might think\nwell if i'm looking for a service in\nasia let's say in mumbai and if it is\nnot available why not simply switch to\nnorth virginia and start using it you\ncould but you know that's going to add\nmore latency to your application so\nthat's why we need to check for\napplication which is check for region\nwhich is very near to the place where\nyou want to serve your customers and\nfind nearest region instead of always\ngoing back to north virginia and\ndeploying an application in north\nvirginia again there's a place there's a\nlink in aws.com that you can go and look\nfor services available in different\nregion and that's exactly what you're\nseeing here and if your service is not\navailable in a particular region switch\nto the other region that provides your\nservice the nearest other region that\nprovides that service and start using\nservice from there\nwith the\ncoming up of cloud a lot of companies\nhave turned down their monitoring team\ninstead they want to go with the\nmonitorings that cloud provides you know\nnobody wants to or at least many people\ndon't want to go through the hassle of\nat least new startups and new companies\nthat are thinking of having a monitoring\nenvironment now they don't want to go\nwith traditional knock monitoring\ninstead they would like to leverage aws\nmonitorings available because it\nmonitors a lot of stuff not just the\navailability but it monitors a lot of\nstuff like failures errors it also\ntriggers emails stuff like that so how\ndo you actually set up a monitor to\nwebsite how to set up a monitor to\nmonitor the website metrics in real time\nin aws the simple way anytime you have a\nquestion about monitoring cloudwatch\nshould strike your mind because\ncloudwatch is meant for monitoring is\nmeant for collecting metrics is meant\nfor providing graphical representation\nof what's going on in a particular\nnetwork at a particular point of time so\ncloudwatch cloudwatch helps us to\nmonitor applications and using\ncloudwatch we can monitor the state\nchanges not only the state changes the\nauto scaling life cycle events anytime\nthere are there are more services added\nthere is a reduction in the number of\nservers because of less usage and very\ninformative messages can be received\nthrough cloud watch any cloud watch can\nnow support scheduled events if you want\nto schedule anything cloudwatch has an\nevent that would schedule an action all\nright schedule a trigger time based not\nincident based you know anything\nhappening and then you get an action\nhappening that's incident based on the\nother hand you can simply schedule few\nthings on time based so that's possible\nwith cloud watch so this cloud watch\nintegrates very well with a lot of other\nservices like notifications for\nnotifying the user or for notifying the\nadministrator about it and it can\nintegrate well with lambda so to trigger\nan action anytime you are designing an\nauto healing environment this cloud\nwatch can actually monitor and send an\nemail if we are integrating it with sns\nsimple notification service or this\ncloud watch can monitor and\nbased on what's happening it can trigger\nan event in lambda and that would in\nturn run a function till the environment\ncomes back to normal so cloudwatch\nintegrates well with a lot of other aw\nservices\nall right so cloudwatch has\nthree statuses green when everything is\ngoing good yellow when the service is\ndegraded and red when the service is not\navailable green is good so we don't have\nto do anything about it but anytime\nthere is an ello the picture that we're\nlooking at it's actually calling and\nlambda function to debug the application\nand to fix it and anytime there's a red\nalert it immediately notifies the\nowner of the application about well the\nservice is down and here is the report\nthat i have here is the metrics that\ni've collected about the service stuff\nlike that if the job role requires you\nto manage the servers as well there are\ncertain job roles which are on the\nsystem side there are certain job roles\nwhich is development plus system side\nnow you're responsible for the\napplication and the server as well so if\nthat's the case you might be tested with\nsome basic questions like the different\ntypes of virtualization in aws and what\nare the difference between them all\nright the three major types of\nvirtualization are\nhvm which is hardware virtual machine\nthe other one is pv para virtualization\nand the third one is pv on hvm para\nvirtualization on hardware virtual\nmodule\nall right the difference between them or\nactually describing them is actually the\ndifference between them hvm it's\nactually a fully virtualized hardware\nyou know the whole hardware is\nvirtualized and all virtual machines act\nseparate from each other and these vms\nare booted by executing master boot\nrecord in the root block and when we\ntalk about para virtualization paragraph\nis actually the special boot loader\nwhich boots the pva mice and when we\ntalk about pv on hvm it's it's actually\nthe marriage between hvm and pv and this\npara virtualization on hvm in other\nwords pv on hvm it actually helps\noperating system take advantage in\nstorage and the network input output\navailable through the host\nanother good question is name some of\nthe services that are not region\nspecific now\nyou've been thought that all services\nare within a region and some services\nare within an availability zone for\nexample ec2 is within an availability\nzone ebs is within an availability zone\ns3 is region specific dynamodb is region\nspecific stuff like that vpc is both\navailability and\nregion specific meaning you know subnets\nare availability zone specific and vpc\nis region specific stuff like that so\nyou might have thought you might have\nlearned in that combination but there\ncould be some tricky questions that\ntests you how well you have understood\nthe region non-region and availability\nnon-availability services i should say\nthere are services that are not region\nspecific that would be iam so we can't\nhave im for every availability zone and\nfor every region which means you know\nusers will have to use one username and\npassword for one region and anytime they\nswitch to another region they will have\nto use another username and password\nthat that's more work and that's not a\ngood design as well authentication has\nto be global so im is a global service\nand which means its not region specific\non the other hand route 53 is again a\nregional specific so we can't have a\nroute 53 for every region route 53 is\nnot a region specific service it's a\nglobal service and it's one application\nusers access from everywhere or from\nevery part of the world so we can't have\none url or one dns name for each region\nif your application is a global\napplication and then web application\nfirewall works well with cloudfront then\ncloudfront is a region based service so\nthe web application firewall it's not\nregion specific service it's a global\nservice and cloudfront is again a global\nservice though you can you know cache\ncontent on a continent and country basis\nit's still considered a global service\nright it's not bound to any region so\nwhen you activate cloud front you're\nactivating it away from region or\navailability zone so when you're\nactivating a web application firewall\nbecause it's not a region specific\nservice you're activating it away from\navailability zone and regions\nso a quick recap i am users groups roles\nand accounts they are global services\nthey can be used globally route 53\nservices are offered at edge locations\nand they are global as well web\napplication firewall a service that\nprotects our web application from common\nweb exploits they are global service as\nwell cloud front cloudfront is global\ncontent delivery network cdn and they\nare offered at edge locations which are\na global service in other words\nnon-region specific service or beyond\nregion service all right this is another\ngood question as well in the project\nthat you are being interviewed if they\nreally want to secure their environment\nusing nat or if they are already\nsecuring their environment using nat by\nany of these two methods like nat\ngateway or nat instances you can expect\nthis question what are the difference\nbetween an ad gateway and that instances\nnow they both saw the same thing all\nright so they're not two different\nservices\ntrying to achieve two different things\nthey both serve the same thing but still\nthey do have differences in them right\non a high level they both achieve\nproviding netting for the service behind\nit but the difference comes when we talk\nabout\nthe availability of it\nthat gateway is a managed service by\namazon whereas nat instance is managed\nby us now i'm talking about the third\npoint maintenance here nat gateway is\nmanaged by amazon that instance is\nmanaged by us and availability of nat\ngateway is very high and availability of\nthat instance is\nless compared to the nat gateway because\nit's managed by us you know it's on an\nec2 instance which could actually fail\nand if it fails we'll have to relaunch\nit but if it is not gateway if something\nhappens to that service amazon would\ntake care of reprovisioning it and\ntalking about bandwidth it can burst up\nto 75 gigabits now traffic through the\nnet gateway can burst up to 75 gigabits\nbut for that instance it actually\ndepends on the server that we launched\nand if we are launching a t2 micro it\nbarely gets any bandwidth so there's a\ndifference there and the performance\nbecause it's highly available because of\nthe bigger pipe 75 gigabits now the\nperformance of the net gateway is very\nhigh but the performance of the nat\ninstance is going to be average again it\ndepends on the size of the nat instance\nthat we pick and billing a billing for\nnat gateway is the number of gateways\nthat we provision and the duration\nfor which we use the nat gateway but\nbilling for that instance is number of\ninstance and the type of instance that\nwe use of course number of instance\nduration and the type of instance that\nwe use\nsecurity in that gateway cannot be uh\nassigned meaning it already comes with\nfull packed security but in that\ninstance security is a bit customizable\ni can go and change the security because\nit's a server managed by me or managed\nby us i can always change the security\nwell allow this allow don't allow this\nstuff like that size and load of the\nnight gateway is uniform but the size\nand the load of the\nthat instance changes as per add gateway\nis a fixed product but not instance can\nbe small instance can be a big instance\nso the size and the load through it\nvaries\nright the other question you could get\nasked is what are the difference between\nstopping and terminating an ec2 instance\nnow you will be able to answer only if\nyou have worked on environments where\nyou have your instance stopped and where\nyou have your instance terminated if you\nhave only used lab and are attending the\ninterview chances are that you might you\nalways lost when answering this question\nit might look like both are the same\nwell stopping and terminating both are\nthe same but there is a difference in it\nso when you stop an instance it actually\nperforms a normal shutdown on the\ninstance and it simply moves the\ninstance to the stopped state but when\nyou actually terminate the instance the\ninstance is moved to this stop state the\nevs volumes that are attached to it are\ndeleted and removed and we'll never be\nable to recover them again so that's a\nbig difference between stopping and\nterminating an instance if you're\nthinking of using the instance again\nalong with the data in it you should\nonly be thinking of stopping the\ninstance but you should be terminating\nthe instance only if you want to get rid\nof that instance forever\nif you are being interviewed for an\narchitect level position or a junior\narchitect level position or even a cloud\nconsultant level position or even in an\nengineering position this is a very\ncommon question that gets asked what are\nthe different types of easy to instances\nbased on their cost or based on how we\npay them all right they're all compute\ncapacity for example the different types\nare on demand instances spot instances\nand reserved instances it kind of looks\nthe same they all provide the compute\ncapacity they all provide the same type\nof hardwares for us but if you are\nlooking at cost saving or optimizing\ncost in our environment we got to be\nvery careful about which one are we\npicking now we might think that well\ni'll go with on-demand instance because\ni pay on a per hour basis which is cheap\nyou know i can use them anytime i want\nand anytime i don't want i can simply\nget rid of it by terminating it you're\nright but if the requirement is to use\nthe service for one year the requirement\nis to use the service for three years\nthen you'll be wasting a lot of money\nbuying on-demand instances you'll be\nwasting a lot of money paying on an\nhourly basis instead we should be going\nfor reserved instance where we can\nreserve the capacity for the complete\none year or complete three years and\nsave huge amount in buying reserved\ninstances all right so under man is\ncheap to start with if you're only\nplanning to use it for a short while but\nif you're planning to run it for a long\nwhile then we should be going for\nreserved instance that is what is cost\nefficient so spot instance is cheaper\nthan on-demand instance and there are\ndifferent use cases for spot instance as\nwell so let's look at one after the\nother the on-demand instance the\non-demand instance is purchased at a\nfixed rate per r this is very short term\nand irregular workloads and for testing\nfor development on demand instance is a\nvery good use case we should be using on\ndemand for production spot instance spot\ninstance allows users to purchase ec2 at\na reduced price and any time we have\nmore instances we can always go and sell\nit in spot instances i'm referring to\nanytime we have more reserved instances\nwe can always sell them in spot instance\ncatalog and the way we buy spot instance\nis we actually put a budget this is how\nmuch i'm willing to pay all right would\nyou be able to give service within this\ncost so anytime the price comes down and\nmeets the cost that we have put in will\nbe assigned an instance and anytime the\nprice shoots up the instance will be\ntaken away from us but in case of\non-demand instances we have bought that\ninstance for that particular r and it\nstays with us but with spot instances it\nvaries based on the price if you meet\nthe price you get the instance if you\ndon't meet the price it goes away to\nsomebody else and the spot instance\navailability is actually based on supply\nand demand in the market there's no\nguarantee that you will get spot\ninstance at all time all right so that's\na caveat there you should be familiar\nwith that's a caveat that you should be\naware when you are proposing somebody\nthat we can go for spot instance and\nsave money it's not always going to be\navailable if you want your spot instance\nto be available to you then we need to\ncarefully watch the history of the price\nof the spot instance now how much was it\nlast month and how much was it how much\nis it this month so how can i code or\nhow much can i code stuff like that so\nyou got to look at those history before\nyou propose somebody that well we're\ngoing to save money using spot instance\non the other hand reserved instance\nprovide cost savings for the company we\ncan opt for reserved instances for you\nknow one year or three years there are\nactually three types of reserved\ninstances light medium and heavy\nreserved instances they are based on the\namount that we would be paying and cost\nbenefit also depends with reserved\ninstance the cost benefit also depends\nbased on are we doing all upfront or no\nupfront or partial payment then split\nthe rest as monthly payments so there\nare many purchase options available but\noverall if you're looking at using an\napplication for the next one year and\nthree years you should not be going for\non-demand instance you should be going\nfor reserved instance and that's what\ngives you the cost benefit\nand in an error-based interview\nsometimes you might be asked you know\nhow you interact with the aws\nenvironment are you using cli are you\nusing console and depending on your\nanswer whether console or a cli the\npanelist put a score okay this person is\ncli specific this person is console\nspecific or this person has used aws\nenvironment through the sdk stuff like\nthat so this question tests whether you\nare a cli person or an console person\nand the question goes like this how do\nyou set up ssh agent forwarding so that\nyou do not have to copy the key every\ntime you log in if you have used puri\nanytime if you want to log into an ec2\ninstance you will have to put the ip and\nthe port number along with that you will\nhave to map or we will have to map the\nkey in the puri and this has to be done\nevery time that's what we would have\ndone in our lab environments right but\nin production environment using the same\nkey or mapping the same key again and\nagain every time it's actually an hassle\nit's considered as a blocker so you\nmight want to cache it you might want to\npermanently add it in your putty session\nso you can immediately log in and start\nusing it so here in the place where you\nwould actually map the private key\nthere's a quick button that actually\nfixes or that actually binds your ssh to\nyour putty instance so we can enable ssh\nagent forwarding that will actually bind\nour key to the ssh and next time when we\ntry to log in you don't have to always\ngo through mapping the key and trying to\nlog in all right this question what are\nsolaris and ax operating systems are\nthey available with aws that question\ngenerally gets asked to test how\nfamiliar are you with the\namis available how familiar are you with\nec2 how familiar are you with the ec2\nhardwares available that basically test\nthat now the first question or the first\nthought that comes to your mind is well\neverything is available with aws i've\nseen windows i've seen ubuntu i've seen\nred hat i've seen amazon amis and if i\ndon't see my operating system there i\ncan always go to marketplace and try\nthem if i don't find a marketplace i can\nalways go to community and try them so a\nlot of amis available that lot of\noperating systems available i will be\nable to find solaris and ax but that's\nnot the case solar s and ax are not\navailable with aws that's because\nsolaris uses a different and solaris\ndoes not support the architecture does\nnot support public cloud currently the\nsame goes for ax as well and they run on\npower cpu and not on intel and as of now\namazon does not provide power machines\nthis should not be confused with the hpc\nwhich is a high performance computing\nshould not be confused with that now\nthese are different hardwares different\ncpu itself that the cloud providers they\ndo not provide yet another question you\ncould get asked in organizations that\nwould want to automate their\ninfrastructure using amazon native\nservices would be how do you actually\nrecover an ec2 instance or auto recover\nan ec2 instance when it fails well we\nknow that ec2 instances are considered\nas immutable meaning irreparable we\ndon't spend time fixing\nbugs in an os stuff like that you know\nonce an ec2 instance crashes like it\ngoes on a ospanic or there are various\nreasons why it would fail so we don't\nhave to really worry about fixing it we\ncan always relaunch that instance and\nthat would fix it but what if it happens\nat two o'clock in the night what if it\nhappens that during a weekend when\nnobody's in office\nlooking or monitoring those instances so\nyou would want to automate that not only\non a weekend or during midnight but it's\ngeneral practice good to automate it so\nyou could face this question how do you\nactually automate an ec2 instance once\nit fails and the answer to that question\nis using cloudwatch we can recover the\ninstance so as you see there is an alarm\nthreshold a set in cloudwatch and once\nthe threshold is met meaning if there is\nan error if there is a failure if the\nec2 instance is not responding for a\ncertain while we can set an alarm and\nonce the alarm is met let's say the cpu\nutilization stayed high for five minutes\nright it's not taking any new\nconnections or the instance is not\npinging for five minutes or in this case\nit's two minutes it's not pinging so\nit's not going to respond connection so\nin those cases you would want to\nautomatically recover that ec2 instance\nby rebooting the instance all right now\nlook at this the take this action\nsection under the action so there we\nhave a bunch of options like recover\nthis instance meaning reboot the\ninstance so that's how we would recover\nthe other two options are beyond the\nscope of the question but still you can\ngo ahead and apply just like i'm going\nto do it so the other option is stop the\ninstance that's very useful when you\nwant to stop instances that are having\nlow utilizations nobody's using the\nsystem as of now you don't want them to\nbe running and wasting the cloud\nexpenditure so you can actually set an\nalarm that stops the ec2 instance that's\nhaving low utilization so somebody was\nworking in an instance and they left it\nwithout or they forgot to shut down that\ninstance and it gets i mean they will\nonly use it again the next day morning\nso in between there could be like 12\nhours that the system is running idle\nnobody's using it and you're paying for\nit so you can identify such instances\nand actually stop them when the cpu\nutilization is low meaning nobody is\nusing it the other one is to terminate\nlet's say you want to give system to\nsomebody temporarily and you don't want\nthem to hand the system back to you\nright this is actually an idea in other\nwords this is actually the scenario so\nyou hand over a system to somebody and\nwhen they're done they're done we can\nactually terminate the system so you\ncould instruct the other person to\nterminate the system when they're done\nand they could forget then the instance\ncould be running forever or you can\nmonitor the system after the specified\ntime is over and you can terminate the\nsystem or best part you can automate the\nsystem termination so you assign a\nsystem to somebody and then turn on this\ncloud watch action to terminate the\ninstance when the cpu is low for like\ntwo hours meaning they've already left\nor cpu is low for 30 minutes meaning\nthey've already left stuff like that so\nthat's possible and if you're getting\nhired for an system side architect or\neven on the sysop site you could face\nthis question what are the common and\ndifferent types of ami designs there are\na lot of ami designs the question is the\ncommon ones and the difference between\nthem so the common ones are the full\nback a mice and the other one is just\nenough os ami j e os ami and the other\none is hybrid type amis so let's look at\nthe difference between them the full\nbacked ami just like the name says it's\nfully baked it's\nready to use ami and this is the\nsimplest ami to deploy can be a bit\nexpensive it can be a bit cumbersome\nbecause you'll have to do a lot of work\nbeforehand you could use the ami so a\nlot of planning a lot of thought process\nwill go into it and the ami is ready to\nuse right you hand over the ami to\nsomebody and it's ready to use or if you\nwant to reuse the ami it's already ready\nfor you to use so that's full baked ami\nthe other one is just enough operating\nsystem ami just like the name says it\nhas\ni mean as you can also see in the\ndiagram or in the picture it covers a\npart of the os all bootstraps are\nalready packed properly and the security\nmonitoring logging and the other stuff\nare configured at the time of deployment\nor at the time you would be using it so\nnot much thought process will go in here\nthe only focus is on choosing the\noperating system and what goes the\noperating system specific agents or\nbootstraps that goes into the operating\nsystem that's all we worry about the\nadvantage of this is it's flexible\nmeaning you can choose to install\nadditional softwares at the time of\ndeploying but that's going to require an\nadditional expertise on the person who\nwill be using the ami so that's another\noverhead there but the advantage is that\nit's kind of flexible i can change the\nconfigurations during the time of\ndeployment the other one is a hybrid ami\nnow the hybrid ami actually falls in\nbetween the fully baked ami and just\nenough operating system options so these\namis have some features of the big type\nand some features of the just enough os\ntype so as you see the security\nmonitoring logging\nare\npacked in that ami and the runtime\nenvironments are installed during the\ntime of a deployment so this is where\nthe strict company policies would go\ninto the ami company policies like you\ngotta log this you gotta monitor this\nthese are the ports that generally gets\nopen in all the systems stuff like that\nso they strictly go into the ami and\nsits in an ami format and during\ndeployment you have the flexibility of\nchoosing the different runtime and the\napplication that sits in an ec2 instance\nanother very famous question you would\nface in an interview is how can you\nrecover login to an ec2 instance to\nwhich you lost the key well we know that\nif the key is lost we can't recover it\nthere are some organizations that\nintegrate their ec2 instances with an 80\nthat's different all right so you can go\nand reset the password and the 80 and\nyou will be able to log into the new\npassword but here the specific tricky\nquestion is you are using a key to log\nin and how do you recover if you have\nlost the key generally companies would\nhave made a backup of the key so we can\npick from the backup but here the\nspecific question is we have lost the\nkey literally no backups on the key at\nall so how can we log in and we know\nthat we can't log into the instance\nwithout the key present with us so the\nsteps to recover is that make the\ninstance use another key and use that\nkey to log in once the key is lost it's\nlost forever we won't be able to recover\nit you can't raise the ticket with\namazon not possible they're not going to\nhelp it's beyond the scope so make the\ninstance use another key it's only the\nkey that's the problem you still have\nvalid data in it you got to recover the\ndata it's just the key that's having the\nproblem so we can actually focus on the\nkey part alone and change the key and\nthat will allow us to log in so how do\nwe do it step by step procedure so first\nverify the ec2 config service is running\nin that instance if you want you can\nactually beforehand install the easy to\nconfig in that service or you can\nactually make the easy to config run\nthrough the console just a couple of\nbutton clicks and that will make the\neasy to configure run in that ec2\ninstance and then detach the root volume\nfor that instance of course it's going\nto require a stop and start to detach\nthe root volume from the instance attach\nthe root volume to another instance as a\ntemporary volume or it could be a\ntemporary instance that you've launched\nonly to fix this issue and then log in\nto that instance and to that particular\nvolume and modify the configuration file\nconfiguration file modify it to use the\nnew key and then move the root volume\nback to its original position and\nrestart the instance and now the\ninstance is going to have the new key\nand you also have the new key with which\nyou can log in so that's how we go ahead\nand fix it now let's move on to some\nproduct specific or s3 product specific\nquestions a general perception is s3 and\nebs can be used interchangeably and the\ninterviewer would want to test your\nknowledge on s3 and evs well ebs uses s3\nthat's true but they can't be\ninterchangeably used so you might face\nthis question what are some key\ndifferences between aws s3 and ebs well\nthe differences are s3 is an object\nstore meaning you can't install anything\nin it you can store drive files but you\ncan't actually install in it it's not a\nfile system but ebs is a file system you\ncan install services i mean install\napplications in it and that's going to\nrun stuff like that and talking about\nperformance s3 is much faster and ebs is\nsuper faster when accessing from the\ninstance because from the instance if\nyou need to access s3 you'll actually\nhave to go out through the internet and\naccess the s3 or s3 is an external\nservice very external service you'll\nhave to go through or you'll have to go\noutside of your vpc to access s3 s3 does\nnot come under a vpc but ebs comes under\na vpc it's on the same vpc so you would\nbe able to use it kind of locally\ncompared to s3 ebs is very local\nso that way it's going to be faster and\nredundancy talking about redundancy of\ns3 and ebs s3 is\nreplicated the data in s3 is replicated\nacross the data centers but ebs is\nreplicated within the data center\nmeaning s3 is replicated across\navailability zones ebs is within an\navailability zone so that way the\nredundancy is a bit less in ebs in other\nwords redundancy is higher in s3 than\neps and talking about security of s3 is3\ncan be made private as well as public\nmeaning anybody can access s3 from\nanywhere in the internet that's possible\nwith s3 but ebs can only only be\naccessed when attached to an ec2\ninstance right just one instance can\naccess it whereas s3 is publicly\ndirectly accessible the other question\nrelated to s3 security is how do you\nallow access to a user to assert in a\nuser to a certain bucket which means\nthis user is not having access to s3 at\nall but this user needs to be given\naccess to a certain bucket how do we do\nit the same case applies to servers as\nwell in few cases there could be an\ninstance where a person is new to the\nteam and you actually don't want them to\naccess the production service now he's\nin the production group and by default\nhe or she is granted access to that\nserver but you specifically want to deny\naccess to that production server till\nthe time he or she is matured enough to\naccess or understand the process\nunderstand the do's and don'ts before\nthey can put their hands on the\nproduction server so how do we go about\ndoing it so first we would categorize\nour instances well these are critical\ninstances these are normal instances and\nwe would actually uh put a tag on them\nthat's how we categorize right so you\nput attack on them put attacks saying\nwell they are highly critical they are\nmedium critical and they are not\ncritical at all still there in\nproduction stuff like that and then you\nwould pick the users who wants to or who\nshould be or should not be given access\nto a certain server and you would\nactually allow the user to access or not\naccess servers based on a specific tag\nin other words you can use actually tags\nin in the previous step we put tags on\nthe critical server right so you would\ndefine that this user is not going to\nuse this tag all right this user is not\nallowed to use the resources with this\nstack so that's how you would make your\nstep forward so you would allow or deny\nbased on the tags that you have put so\nin this case he or she will not be\nallowed to servers which are tagged\ncritical servers so that's how you allow\ndeny access to them and the same goes\nfor bucket as well or if an organization\nis excessively using s3 for their data\nstorage because of the benefit that it\nprovides the cost and the\ndurability you might get asked this\nquestion which is organizations would\nreplicate the data from one region to\nanother region for additional data\ndurability and for having data\nredundancy not only for that they would\nalso do that for dr purposes for\ndisaster recovery if the whole region is\ndown you still have the data available\nsomewhere else and you can pick and use\nit some organizations would store data\nin different regions for compliance\nreasons to provide low latency access to\ntheir users who are local to that region\nstuff like that so when companies do\nreplication how do you make sure that\nthere is consistency in the replication\nhow do you make sure that the\nreplication is not failing and the data\ngets transferred for sure and there are\nlogs for that replication this is\nsomething that the companies would use\nwhere they're excessively using s3 and\nthey're fully relying on the replication\nin running their business\nand the way we could do it is we can set\nup a replication monitor it's actually a\nset of tools that we could use together\nto make sure that the cloud replication\na region level replication is happening\nproperly so this is how it happens now\non this side on the left hand side we\nhave the region 1 and on the right hand\nside we have region 2 and region 1 is\nthe source bucket and region 2 is the\ndestination bucket all right so object\nis put in the source bucket and it has\nto go directly to the region to bucket\nor or made a copy in the region to\nbucket and the problem is sometimes it\nfails and there is no consistency\nbetween them so the way you would do it\nis connect these services together and\ncreate and cross replication or cross\nregion replication monitor that actually\nmonitors that actually monitors your\nenvironment so there are cloud watch\nthat make sure that the data is\nmove no data is failing again there's\ncloud watch on the other end make sure\nthat the data is moving and then we have\nthe logs generated through cloudtrail\nand that's actually written in dynamodb\nand if there is an error if something is\nfailing you get notified through an sms\nor you get notified through an email\nusing the sns service so that's how we\ncould leverage these tools and set up\nand cross region replication monitor\nthat actually monitors your data\nreplication\nsome common issues that company\ncompanies face in vpc is that we all\nknow that i can use route 53 to resolve\nan ip address externally from the\ninternet but by default the servers\nwon't connect to the other servers using\nour custom dns name that it does not do\nthat by default so it's actually a\nproblem there are some additional things\nthat as an administrator or as an\narchitect or as a person who uses it you\nwill have to do and that's what we're\ngoing to discuss so the question could\nbe a vpc is not resolving the server\nthrough the dns you can access it\nthrough the ip but not through the dns\nname and what could be the issue and how\ndo you go about fixing it and you will\nbe able to answer this question only if\nyou have done it already it's a quick\nand simple step by default vpc does not\nallow that's the default feature and we\nwill have to enable the\ndns hostname resolution before\nnow this is for the custom dns not for\nthe default dns that comes along this is\nfor the custom dns so we will have to\nenable the dns host name resolution so\nour will have to enable dns hostname\nresolution so they actually resolve\nlet's say i want to connect to a\nserver1.simplylearn.com by default it's\nnot allowed but if i enable this option\nthen i will be able to connect to server\none simplylearn.com\nif a company has vpcs in different\nregions and they have a head office in a\ncentral place and the rest of them are\nbranch offices and they are connecting\nto the head office for access or you\nknow for saving data or for accessing\ncertain files or certain data or storing\ndata all right so they would actually\nmimic the hub and spoke topology where\nyou have the vpc which is centrally in\nan accessible region a centrally\naccessible region and then you would\nhave a local vpcs or branch offices in\ndifferent other regions and they get\nconnected to the vpc in the central\nlocation and the question is how do you\nactually connect the multiple sites to a\nvpc and make communication happen\nbetween them by default it does not do\nthat we know that vpcs they need to be\npaired between them in order to access\nthe resources let's look at this picture\nright so i have like a customer network\nor branch offices in different parts and\nthey get connected to a vpc that's fine\nso what we have achieved is those\ndifferent offices\nthe remote offices they are connecting\nto the vpc and they're talking but they\ncan't connect or they can't talk to each\nother that's what we have built but the\nrequirement is the traffic\nneeds to or they should be able to talk\nto each other but they should not have\ndirect connection between them which\nmeans that they will have to come and\nhit the vpc and then\nreach the other customer network which\nis in los angeles or which is in new\nyork right that's the requirement so\nthat's possible with some architecting\nin the cloud so that's using vpn cloud\nhub you look at this dotted lines which\nactually allows customers or which\nactually allows the\ncorporate networks to talk to each other\nthrough the vpc again by default it\ndoesn't happen cloud hub is an\narchitecture that we should be using to\nmake this happen and what's the\nadvantage of it as a central office or\nas the headquarters office which is in\nthe vpc or headquarters data center\nwhich is in the vpc you have control or\nthe vpc has control on who talks to who\nand what traffic can talk to i mean what\ntraffic can be routed to the other head\noffice stuff like that that centralized\ncontrol is on the vpc the other question\nyou could get asked is neiman explain\nsome security products and features\navailable in vpc well vpc itself is an\nsecurity service it provides security\nservice to the application but how do\nyou actually secure the vpc itself\nthat's the question and yes there are\nproducts that can actually secure the\nvpc or the vpc delivers those products\nto secure the application\naccess to the vpc is restricted through\na network access control list all right\nso that's and security product in vpc\nand a vpc has security groups that\nprotects the instances from unwanted\ninbound and outbound traffic and network\naccess control list protects the subnets\nfrom unwanted inbound and outbound\naccess and there are flow logs we can\ncapture in vpc\nthat captures incoming and outgoing\ntraffic through a vpc which will be used\nfor later analysis as in what's the\ntraffic pattern what's the behavior of\nthe traffic pattern and stuff like that\nso there are some security products and\nfeatures available in vpc now how do you\nmonitor vpc vpc is a very important\nconcept very important service as well\neverything sits in a vpc most of the\nservice sits in a vpc except for lambda\nand s3 and dynamodb and couple of other\nservices most of them sit in a vpc for\nsecurity reason so how do you monitor\nyour vpc how do you gain some visibility\non your vpc well we can gain visibility\non our vpc using vpc flow log that's the\nbasic service as you see it actually\ncaptures what's allowed what's not\nallowed stuff like that which ip is\nallowed which ip is not allowed stuff\nlike that so we can gather it and we can\nuse that for analysis and the other one\nis cloud watch and cloud watch logs the\ndata transfers that happen so this is\nyou know who gets allowed and who does\nnot get allowed i mean the flow logs is\nwho is allowed and who's not allowed\nthat kind of detail and cloud watch\ngives information about the data\ntransfer how much data is getting\ntransferred we can actually pick unusual\ndata transfers if there is a certain\nhike in the graph there's a sudden hike\nand something happens at 12 on a regular\nbasis and you weren't expecting it\nthere's something suspicious it could be\nvalid backups it could be a malicious\nactivity as well so that's how you know\nby looking at cloudwatch logs and\ncloudwatch dashboard now let's talk\nabout multiple choice questions when\ngoing for an interview you might\nsometimes find yourself that the company\nis conducting an online test based on\nthe score they can put you to a panelist\nand then they would take it forward so\nwe thought it will also include multiple\nchoice questions to help you better\nhandle such situation if you come across\nall right when you find yourself in such\nsituation the key to clear them is to\nunderstand the question properly read\nbetween the lines that's what they say\nyou know there can be like a big\nparagraph with three lines or ten lines\nyou really got to understand what the\nquestion is about and then try to find\nanswer for that question so that's a\nthumb rule number one and then the\nsecond rule is try to compare and\ncontrast the services\nmentioned or try to compare and contrast\nthe answers you can easily read out one\nor two answers and then you will be left\nwith only two answers to decide from you\nknow so that also helps you with time\nand that's all that also helps you with\nsome precision in your answer so number\none read between the lines number two\ncompare and contrast the services and\nyou'll be able to easily weed out the\nwrong ones so let's try answering this\nquestion suppose you are a game designer\nand you want to develop a game with a\nsingle digit millisecond latency which\nof the following database services would\nyou choose so we know that the following\nare database services are good enough\nall right and it talks about millisecond\nlatency that's a key point and the third\nthing is it's a game could be a mobile\ngame it's a game that you are trying to\ndesign and you need millisecond latency\nand it has to be a database all right so\nlet's talk about the options available\nrds rds is a database for sure is it\ngood for\na game design we'll come back to that\nneptune uh neptune is a graph a database\nservice in amazon so that's kind of out\nof the equation and snowball is actually\na storage right it's it's a transport\nmedium i would say so that's again out\nof the equation so the tie is between\nrds and dynamodb if we need to talk\nabout rds rds is an a platform as a\nservice it provides cost efficient\nresizable capacity but it's an sql\ndatabase meaning the tables are kind of\nstrict you know it's good for banking\nand other type of applications but not\nreally good for anything that has to do\nwith\ngaming so the only option left is\ndynamodb again it's the right answer\ndynamodb is actually an fast and\nflexible nosql database service and it\nprovides a single digit millisecond\nlatency at any scale and it's a database\nat the same time it's a key value store\nmodel database so the right answer is\ndynamodb all right let's look at the\nnext question if you need to perform\nreal-time monitoring of aws services and\nget actionable insights which service\nwould you use all right let's list the\nservices so it talks about real-time\nmonitoring firewall manager what does it\nprovide now firewall manager is not\nreally a monitor just like the name says\nit's a manager it manages multiple\nfirewalls and aws guard duty is an\nthread detection service it does\nmonitoring it does continuously monitor\nour environment but it monitors for\nthreats all right only threats now let's\ntalk about cloud watch a cloud watch is\na service that helps to track metrics\nit's a service that is used\nto\nmonitor the environment and give us a\nsystem-wide visibility and also it helps\nus to store logs so at the moment it\nkind of looks like that could be the\nright answer we don't know that yet but\ni mean we have one more option left\nthat's uh ebs so what's ebs ebs is a\nblock storage elastic block store if we\nabbreviate ebs it's elastic block store\nso all three of them are easily out of\nthe question the first one is to manage\nsecond one is to find threats\nof course it does monitoring so there's\ni mean if there is one relation between\ncloud watch and guard duty that's\nmonitoring so easily we can actually\nfind ourselves slipped towards picking\nguard duty but know that guard duty is\nonly for gaining security inside but not\nabout gaining aws service\ninside so cloudwatch is a service that\nhelps us to get a system wide or an aws\nwide or an account wide it has number of\nmetrics we can monitor and get a very\ngood insight of how a service is\nperforming be it cpu be it ram beat\nnetwork utilization beat\nconnection failures cloudwatch is a\nservice that helps us perform a\nreal-time monitoring and get some\nactionable insights on the services all\nright let's talk about this 33rd\nquestion as a web developer you are\ndeveloping an app especially for the\nmobile platform all right there is a\nmention that this is especially for the\nmobile platform so a lot of services\ngets filtered out mobile platform right\nwhich of the following lets you add user\nsign up sign in and access control to\nyour web and mobile app quickly and\neasily all right so this is all about\nsigning in to your mobile app so if we\nneed to read between the lines that's\nhow we can read sign up or sign in into\na mobile platform all right so we have\nlike four options here uh shield aws\nmassey aws inspector amazon cognito so\nlet's try to weed out services which are\nnot relevant to it so what's aws shield\naws shield is actually a service that\nprovides a ddos mitigation or ddos\nprotection denial of service protection\nit's a security feature let's talk about\nthe second option aws maxi is again a\nsecurity service that uses machine\nlearning to automatically discover and\nclassify the data it again talks about\nsecurity and this security is all about\nencrypting or saving the data does not\ncome close with signing up and mobile\nplatform all right let's talk about the\nother one aws inspector now aws\ninspector has something to do with apps\nit definitely has something to do with\napps so kind of looks like that's\nrelevant as of now so it actually helps\nwith the improving the security and\ncompliance of the apps that we deploy in\nthe cloud so kind of looks like it could\nbe because it has to do with apps the\nlast one cognito now cognito is a\nservice that actually lets the\nadministrator to have control access\nover web and mobile apps and it's a\nservice that helps us to sign up and\nassign in to an mobile and web app so\nthat very much looks like we found the\nanswer so cognito is a service that\nhelps web app and mobile app for sign up\nand signing in and also gives the\nadministrator to have control over who\nhas access control over the web and the\nmobile app pretty much we found it so\nit's cognito cognito is a service that\nhelps us to set up sign up sign in and\nhave access control over the users who\nwould be using our mobile and web app\nall right how about this question you\nare an ml engineer or a machine learning\nengineer who is on the lookout for a\nsolution that will discover sensitive\ninformation that your enterprise stores\nin aws and then uses nlp to classify\nthat data and provide business related\ninsights which among the following\nservices would you choose so we have a\nbunch of services that's going to help\nus achieve or one of it is going to help\nus achieve the above requirement so it's\na service that deals with machine\nlearning you're a machine learning\nengineer who's looking for a service\nthat\nwill help you to discover information at\nyour enterprise store so we're talking\nabout storage discover information in\nstore and then classify uh the data\ndepending on severity the sensitivity\nclassify the data so which service is\nthat so firewall manager just like the\nname says it's a manager and the aws iam\nif we abbreviate it it's a identity and\naccess management so it's identity and\naccess management nothing to do with\nidentifying sensitive data and managing\nit so the first two is already out of\nthe equation then the aw is massy we\nalready had a quick definition\ndescription for aws massey that it's\nactually a security service that uses\nmachine learning it kind of looks like\nit could be it it's a security service\nthat uses machine learning and it\ndiscovers and classifies the sensitive\ninformation not only that it does not\nstop there it goes beyond and protects\nthe sensitive data aws massey kind of\nlooks like but we still have one more\noption to look at which is cloud hms\ncloud hms is also a security service\nkind of looks like that could be the\nanswer as well and it enables us to\ngenerate encryption keys and save the\ndata so kind of fifty percent of it it's\na security service it encrypts helps us\nprotect the data but aws maxi is right\non spot it's a machine learning service\nit helps us to classify the data and\nalso to protect the data so the answer\nfor this question would be aws messy so\nhope you kind of get it how this is\ngoing so first we apply the thumb rule\nidentify the question that's being asked\nread between the lines and then try to\nfind the service that meets your\nrequirement then finding the service is\nby first weeding out the wrong ones\nrecollect everything that you've learned\nabout the service and see how well that\nmatches with those hints that you have\npicked up and if that doesn't match weed\nthat out then you'll end up with two\njust to to decide from at some point and\nthen it becomes easy for you to decide\nclick on the question submit it and then\nmove on to the other question in your\ninterview all right so how about this\none you are a system administrator in\nyour company which is running most of\nits infrastructure on aws you are\nrequired to\ntrack your users and keep a look on how\nyour users are being authenticated all\nright so this is where the problem\nstatement starts but you need to keep\ntrack of how your users are being\nauthenticated and you wish to create and\nmanage aws users and use permissions to\nallow and deny their access to the aws\nresources right so you are to give them\npermission number one and then i mean if\nwe put them in the right order first\ngiving them permissions and then\ntracking their usage let's see which of\nthe service will help us achieve it iam\nis a service that\nhelps us to\nlooking at the permissions we can\nactually predict whether the user or the\ngroup will have servers or not so that\nhelps us to get a track of who is able\nto use who's not able to use certain\nservers and all that stuff so it kind of\nlooks like but we have other three\noptions left let's look at aws firewall\nmanager just like the name says it's\nactually a firewall manager it helps us\nto manage multiple firewalls simple as\nthat and shield is a service it's a\nservice that's used to protect denial of\nservice or distributed denial of service\nan api gateway is a service that makes\nit easy for developers to create publish\nmaintain and monitor and secure api so i\nmean it's completely on the api side\nvery less on user and how you\nauthenticate your user we can get that\nby looking at the name itself right if\nyou abbreviate it or if you if you try\nto find a definition for the name api\ngateway you would get it it has to do\nwith api but if you aggregate aws iam\nits identity and access management\npretty much meets the requirement for\nthe problem statement about its aws\nidentity and access management that's\nthe right answer all right let's look at\nthis one if you want to allocate various\nprivate and public ip address in order\nto make them communicate\nwith the internet and other instances\nyou will use this service which of the\nfollowing is this service so it talks\nabout using public and private ip\naddress so this service uses ip address\nand then this service helps us to\nallow and deny connections to the\ninternet and to the other instances so\nyou get the question is it let's pick\nthe service that helps us achieve it\nroute 53 route 53 is actually a dns\nservice right so it's not a service\nthat's used to allow or deny no it does\nnot do that vpc vpc uses public and\nprivate ip address yes so kind of looks\nlike a vpc helps us\nto allow i mean the security in vpc the\nsecurity group the network access\ncontrol list in a vpc that outing table\nin a vpc that actually helps us to allow\nor deny a connection to a particular ip\naddress or to a particular service\nwithin the vpc or outside of the vpc so\nas of now it kind of looks like it could\nbe but let's look at the other services\nwhat if if we find a service that\nclosely matches to the above requirement\nthan the amazon vpc\ngateway api gateway we know that it's a\nmanaged service that makes it easy for\ndevelopers to create\npublish maintain and monitor apis and\nsecure api so that has completely do\nwith api not with ib cloudfront we know\nabout cloudfront that it's a content\ndelivery network and it provides global\ndistribution of\nservers where our content can be cached\nit could be video or bulk media or\nanything else they can be cached locally\nso users can easily access them and\ndownload them easily right so that's\ncloud front now at this point after\nlooking at all four it looks like vpc is\nthe right answer and in fact vpc is the\nright answer vpc has public ip address\nvpc can help us with private ip address\nvpc can be used to allow deny connection\nbased on the security group access\ncontrol list and routing table it has so\nthat's right answer is vpc all right how\nabout this one this platform as a\nservice or platform as a db service\nprovides us with the cost efficient and\nresizable capacity while automating time\nconsuming administrative tasks so this\nquestion is very clear it's a db service\nwe got to look for and it's a service\nthat can provide\nautomating some of the time consuming\ntasks it has to be resizable at the same\ntime so let's talk about amazon rational\ndatabase it's a database\nkind of matches the requirement we can\nresize it as and when needed\nall right looks like it's a fit as of\nnow it actually automates some of the\ntime consuming work looks like it's a\nfit as of now let's move on to elastic\ncache and then try to see if\nthat matches the definition that\nwe've figured out about elastic cache\nit's actually a caching service it's\nagain an in-memory data store which\nhelps in achieving high throughput and\nlow latency in memory data store so it's\nnot a full-blown database and it does\nnot come with\nany amazon provisioned automation in it\nfor automating any of the administration\ntasks no it does not come up with\nanything like that yeah we can resize\nthe capacity as and when needed but\nautomation\nit's not there yet and moreover it's not\na database so that's out of the equation\nvpc is\nnot a recessible one you know once we\nhave designed vpc it's fixed it can't be\nresized so that's out of the equation\nand\namazon glacier glacier is a storage but\nnot a database all right so that's again\nof the equation so that tie is kind of\nbetween amazon rational database service\nand amazon elastic cache because they\nboth aid the database service but\nelastic cache is not a full-blown\ndatabase it actually helps database but\nit's not a full-blown database so it's\namazon relational database so that's the\none which is a platform as a service\nit's the one which can be resized it's\nthe one which\ncan be used to automate the\ntime consuming administrative tasks all\nright let's talk about this one which of\nthe following is a means for accessing\nhuman researchers or consultants to help\nsolve a problem on a contractual or a\ntemporary basis all right let's read the\nquestion again which of the following is\na means for accessing human researchers\nor consultant to help solve problems on\na contractual or a temporary basis it's\nlike a signing task or hiring aws\nexperts for a temporary job so let's try\nto find that kind of service in the four\nservices that are listed amazon elastic\nmapreduce mapreduce is actually an\nframework service that makes it easy and\ncost effective to analyze large amount\nof data but that has\nnothing to do with accessing human\nresearchers all right let's talk about\nmechanical term it's a web service that\nprovides\na human workforce that's the definition\nfor it for example automation is good\nbut not everything can be automated for\nsomething to qualify for automation it\nhas to be an repetitive task one time\ntask can't be automated or the time and\nmoney that you would be spending in\nautomation is not worth it instead you\ncould have done it manually so that does\nnot qualify for automation and anything\nthat requires intelligence right\nanything that's a special case right\nautomation can do repetitive task\nautomation can do precise work but it\nhas to be a repetitive task the scenario\nyou know it should have been there\nalready only then that can be executed\nbut if it's a new scenario and it\nrequires uh appropriate addressing then\nit requires human thought so we could\nhire researchers and consultants who can\nhelp solve a problem using amazon\nmechanical turk the other two are\nalready out of the equation now dev pay\nis actually a payment system through\namazon and multi-factor authentication\nas it says it's an authentication system\nso the right answer is amazon mechanical\nturk all right this sounds interesting\nlet's look at this one this service is\nused to\nmake it easy to deploy manage and scale\ncontainerized applications using\nkubernetes on aws which of the following\nis this aws service so it's a service to\ndeploy manage and scale containerized\napplications so it deals with containers\nit also should have the ability to use\nkubernetes which is an container\norchestration service all right the\nfirst one amazon elastic container\nservice kind of looks like it's the one\nthe name itself has the word and the\nrelation we're looking for elastic\ncontainer service so this container\nservice is an highly scalable high\nperformance container orchestration\nservice let's look at the other one aws\nbatch it's a service that enables id\nprofessionals to schedule and execute\nbatch processing i mean the name itself\nsays that that's meant for batch\nprocessing elastic bean stock that's\nanother service that helps us to deploy\nmanage and scale\nbut it helps us with easy two instances\nnot with containerized uh instances so\nthat's again out of the equation would\nlight scale be a good time for elastic\ncontainer service what's light sale now\nlight scale is a service it's called as\na virtual private server without a vpc\nit's called as a virtual private\nserver it comes with a predefined\ncompute storage networking capacity it's\nactually a server not a container right\nso at this point that also becomes out\nof the equation so it's amazon elastic\ncontainer service that's the one that\nhelps us to easily deploy manage scale\ncontainer services and it helps us\norchestrate the containers using\nkubernetes all right how about this one\nall right this service lets us to run\ncode without provisioning or managing\nservers no servers run code select the\ncorrect service from the below option\nall right so no servers but we should be\nable to run code amazon easy to auto\nscaling easy to auto scaling ec2 is\nelastic compute cloud which is a server\nand auto scaling is a service that helps\nus to achieve scaling the server so\nthat's the definition for it could be\nthat's out of the equation aw is lambda\nnow lambda is a service it's actually an\nevent driven serverless computing\nplatform and lambda runs code in\nresponse to the event that it receives\nand it automatically manages the compute\nresource that's required for that code\nas long as we have uploaded a code\nthat's correct and set up events\ncorrectly to map to that code it's going\nto run seamlessly so that's about lambda\nit kind of looks like it could be the\nanswer because lambda runs code we don't\nhave to manage servers it manages\nservers by itself but we can't conclude\nas of now we have other two servers to\ntalk about aws batch all right batches\nservice that\nenables id professionals to run batch\njob we know that and about inspector\namazon inspector it's actually a service\nthat helps us to increase and identify\nany security issues and align our\napplication with compliance well that's\nnot the requirement of the question the\nrequirement in the question was run code\nwithout provisioning your server and\nwithout any more space for confusion aws\nlambda is a service or is the service\nthat runs code without provisioning and\nmanaging services right the right one\nwould be aws lambda the second part in\naws interview questions if you haven't\nwatched the first part yet please go\nback and watch the first part we have a\nlot of interesting questions there which\nwill better prepare you for the\ninterview all right let's get started so\nin an environment where there's a lot of\nautomation infrastructure automation\nyou'll be posted with this question how\ncan you add an existing instance to a\nnew auto scaling group now this is when\nyou are taking an instance away from the\nauto scaling group to\ntroubleshoot to fix a problem you know\nto look at logs or if you have suspended\nthe auto scaling you know you might need\nto re-add that instance to the auto\nscaling group only then it's going to\ntake part in it right only then the auto\nscaling is going to count it has part of\nit it's not a straight uh procedure you\nknow when you remove them you know it\ndoesn't get automatically re-added i've\nhad worked with some clients so when\ntheir developers were managing their own\nenvironment they had problems adding the\ninstance back to the auto scaling group\nyou know irrespective of what they tried\nthe instance was not getting added to\nthe auto scaling group and whatever they\nfixed that they were provided or\nwhatever fix that they have provided\nwere not you know getting encountered in\nthe auto scaling group so like i said\nit's not a straight you know a click\nbutton procedure there are ways we'll\nhave to do it so how can you add an\nexisting instance uh to the auto scaling\ngroup there are a few steps that we need\nto follow so the first one would be to\nunder the ec2 instance console right\nunder the uh instance under actions in\nspecific you know there's an option\ncalled attach to auto scaling group\nright if you have multiple auto scaling\ngroups in your account or in the region\nthat you're working in then you're going\nto be posted with the different auto\nscaling groups that you have in your\naccount let's say you have five auto\nscaling groups for five different\napplication you know you're going to be\nposted with five different auto scaling\ngroups and then you would select\nthe auto scaling the appropriate auto\nscaling group and attach the instance to\nthat particular auto scaling group while\nadding to the auto scaling group if you\nwant to change the instance type you and\nthat's possible as well sometimes when\nyou want to add the instance back to the\nauto scaling group there would be\nrequirement that you change the instance\ntype to a better one to a better family\nto the better instance type you could do\nthat at that time and after that you are\nor you have completely added the\ninstance back to the auto scaling group\nso it's actually an seven step up\nprocess adding an instance back to the\nauto scaling group in an environment\nwhere they're dealing with migrating the\ninstance or migrating an application or\nmigrating an instance migrating and vm\ninto the cloud you know if the project\nthat you're going to work with deals\nwith a lot of migrations you could be\nposted this question what are the\nfactors you will consider while\nmigrating to amazon web services the\nfirst one is cost is it worth\nmoving the instance to the cloud given\nthe additional bills and results\nfeatures available in the cloud is this\napplication going to use all of them is\nmoving into the cloud beneficial to the\napplication in the first place you know\nbeneficial to the users who will be\nusing the application in the first place\nso that's a factor to think of so this\nactually includes\nyou know cost of the infrastructure and\nthe ability to match the demand and\nsupply transparency is this application\nin high demand you know is it going to\nbe a big loss if the application becomes\nunavailable for some time so there are\nfew things that needs to be considered\nbefore we move the application to the\ncloud and then if uh the application\ndoes the application needs to be\nprovisioned immediately is that an urge\nis there an urge to provision the\napplication immediately that's something\nthat needs to be considered if the\napplication requires to go online if the\napplication needs to hit the market\nimmediately then we would need to move\nit to the cloud because in on-premises\nprocuring or buying an infrastructure\nbuying the bandwidth buying the\nswitchboard you know buying an instance\nyou know buying their softwares buying\nthe license related to it it's going to\ntake time at least like two weeks or so\nbefore you can\nbring up an server and launch an\napplication in it right so the\napplication cannot wait you know waiting\nmeans uh you know workforce productivity\nloss is it so we would want to\nimmediately launch instances and put\napplication on top of it in those case\nif your application is of that type if\nthere is urge in making the application\ngo online as soon as possible then\nthat's a candidate for moving to the\ncloud and if the application or if\nthe\nthe software or if the product that\nyou're launching it requires hardware it\nrequires an updated hardware all the\ntime that's not going to be possible in\non premises we try to deal with legacy\ninfrastructure all the time in on\npremises but in the cloud they're\nconstantly upgrading their hardwares\nonly then they can keep themselves up\ngoing in the market so they constantly\nthe cloud providers are constantly\nupdating their hardware and if you want\nto be benefited of your application\nwants to be benefited by the constant\nupgrading of the hardwares making sure\nthe hardware is as latest as possible\nthe software version the licensing is as\nlatest as possible then that's a\ncandidate to be moved to the cloud and\nif the application does not want to go\nthrough any risk if the application is\nvery sensitive to failures if the\napplication is very much tagged to the\nrevenue of the company and you don't\nwant to take a chance in\nyou know seeing the application fail and\nyou know seeing the revenue drop then\nthat's a candidate for moving to the\ncloud and business uh agility you know\nmoving to\nthe cloud at least half of the\nresponsibility is now taken care by the\nprovider in this case it's amazon at\nleast half of the responsibility is\ntaken care by them like if the hardware\nfails amazon makes sure that they're\nfixing the hardware immediately and\nnotifications you know if something\nhappens you know there are immediate\nnotifications available that we can set\nit up and make ourselves aware that\nsomething has broken and we can\nimmediately jump in and fix it so you\nsee there are the responsibility is now\nbeing shared between amazon and us so if\nyou want to get that benefit for your\napplication for your organization for\nthe product that you're launching then\nit needs to be moved to the cloud so you\ncan get that benefit from the cloud the\nother question you could get asked is\nwhat is rto and rpo in aws they are\nessentially disaster recovery terms when\nyou're planning for disaster recovery\nyou cannot avoid planning disaster\nrecovery without talking about rto and\nrpo now what's the rto what's the rpo in\nyour environment or how do you define\nrto how do you define rpo or some\ngeneral questions that get asked rto is\nrecovery time objective rto stands for\nthe maximum time the company is willing\nto wait for the recovery to happen or\nfor the recovery to finish\nwhen and disaster strikes so rto is uh\nin the future right how much time\nis it going to take to fix and bring\neverything to normal so that's rto on\nthe other hand rpo is recovery point\nobjective which is the maximum amount of\ndata laws your company is willing to\naccept as measured in time rpo always\nrefers to the backups the number of\nbackups the the frequency of the backups\nright because when an outage happens you\ncan always go back to the latest backup\nright and if the latest backup was\nbefore 12 hours you have lost the in\nbetween 12 hours of\ndata data storage right so rpo is the\nacceptable amount if the company wants\nless rpo rpo is 1r then you should be\nplanning on taking backups every one\nhour if rpo is 12 hours then you should\nbe planning on taking backups every 12\nhours so that's how rpo and rto you know\nhelps disaster recovery the fourth\nquestion you could get asked is if you'd\nlike to transfer huge amount of data\nwhich is the best option among a\nsnowball snowball edge and snowmobile\nagain this is a question that gets asked\nif the company is dealing with a lot of\ndata transfer into the cloud or if the\ncompany is dealing with the migrating\ndata into the cloud i'm talking about a\nhuge amount of data data in petabytes\nsnowball and all of the snowball series\ndeals with the petabyte-sized data\nmigrations so there are three options\navailable as of now aws snowball is an\ndata transport solution for moving high\nvolume of data into and out of a\nspecified aws region on the other hand\naws snowball edge as additional\ncomputing functions snowball is simple\nstorage and movement of data and\nsnowball edge has a compute function\nattached to it snow mobile on the other\nhand is an exabyte scale migration\nservice that allows us to transfer data\nup to 100 petabytes that's like 100 000\nterabytes so depending on the size of\ndata that we want to transfer from our\ndata center to the cloud we can hire we\ncan rent any of these three services\nlet's talk about some cloud formation\nquestions this is a classic question how\nis aws cloud formation different from\naws elastic bean stock you know from the\nsurface they both look like the same you\nknow you don't go through the console\nprovisioning resources you don't you\nknow you don't go through cli and\nprovision resources both of them\nprovision resources through click button\nright but underneath they are actually\ndifferent services they support they aid\ndifferent services so knowing that is\ngoing to help you understand this\nquestion a lot better let's talk about\nthe difference between them and this is\nwhat you will be explaining to the\ninterviewer or the panelist so the cloud\nformation the cloud formation service\nhelps you describe and provision all the\ninfrastructure resources in the cloud\nenvironment on the other hand elastic\nbean stock provides an simple\nenvironment to which we can deploy and\nrun application cloud formation gives us\nan infrastructure and elastic beanstalk\ngives us an small contained environment\nin which we can run our application and\nthe cloud formation supports the\ninfrastructure needs of many different\ntypes of application like the\nenterprise application the legacy\napplications and any new modern\napplication that you want to have in the\ncloud on the other hand the elastic bean\nstock it's a combination of developer\ntools they are tools that helps manage\nthe life cycle of a single application\nso cloud formation in short is managing\nthe infrastructure as a whole and\nelastic bean stock in short is managing\nand running an application in the cloud\nand if the company that you're getting\nhired is using uh cloud formation to\nmanage their infrastructure using or if\nthey're using infrastructure or any of\nthe infrastructure as a code services\nthen you would definitely face this\nquestion what are the elements of an aws\ncloud formation template so it has uh\nfour or five basic uh elements right and\nthe template is in the form of json or\nin yaml format all right so it has\nparameters it has\noutputs it has data it has resources and\nthen the\nformat or the format version or the file\nformat version for the cloud formation\ntemplate so parameter is nothing but\nit actually lets you to specify the type\nof ec2 instance that you want the type\nof rds that you want all right so ec2 is\nan umbrella rds is an umbrella and\nparameters within that ec2 and\nparameters within that rds are the\nspecific details of the ec2 or the\nspecific details of the rds service so\nthat's what parameters in a cloud\nformation template and then the element\nof the cloud formation template is\noutputs for example if you want to\noutput the name of an s3 bucket that was\ncreated if you want to output the name\nof the ec2 instance if you want to\noutput the name of some resources that\nhave been created instead of looking\ninto the template instead of you know\nnavigating through in the console and\nfinding the name of the resource we can\nactually have them outputted\nin the result section so we can simply\ngo and look at all the resources created\nthrough the template in the output\nsection and that's what output values or\noutput does in the cloud formation\ntemplate and then we have resources\nresources are nothing but what defines\nwhat are the cloud components or cloud\nresources that will be created through\nthis cloud formation template now ec2 is\na resource rds is a resource and s3\nbucket is a resource elastic load\nbalancer is a resource and not gateway\nis a resource vpc is a reserve so you\nsee all these components are the\nresources and the resource section in\nthe cloud formation defines what are the\naws cloud resources that will be created\nthrough this cloud formation template\nand then we have a version a version\nactually identifies the capabilities of\nthe template you know we just need to\nmake sure that it is of the latest\nversion type and the latest version is\nzero nine zero nine uh 2010 that's the\nlatest version number you'll be able to\nfind that on the top of the cloud\nformation template and that version\nnumber defines the capabilities of the\ncloud formation template so just need to\nmake sure that it's the latest all the\ntime still talking about cloud formation\nthis is another classic question what\nhappens when one of the resource in a\nstack cannot be created successfully\nwell if\nthe resource in a stack cannot be\ncreated the cloud formation\nautomatically rolls back and terminates\nall the resources that was created using\nthe cloud formation template so whatever\nresources that were created through the\ncloud formation template from the\nbeginning let's say we have created like\n10 resources and the 11th resource is\nnow failing cloud formation will roll\nback and delete all the 10 resources\nthat were created previously and this is\nvery useful uh when the cloud formation\ncannot you know go forward cloud\nformation cannot create additional\nresources because we have reached the\nelastic\nip limits elastic ip limit per region is\nfive right and if you have already used\nfive ips and a cloud formation is trying\nto buy\nthree more ips you know we've hit the\nsoft limit till we fix that with amazon\ncloudformation will not be able to you\nknow launch additional you know\nresources and additional ips so it's\ngoing to cancel and roll back everything\nthat's true with a missing ec2 ami as\nwell if an ami is included in the\ntemplate and but the ami is not actually\npresent then cloud formation is going to\nsearch for the mi and because it's not\npresent it's going to roll back and\ndelete all the resources that it created\nso that's what cloud formation does it\nsimply rolls back all the resources that\nit created i mean if it sees a failure\nit would simply roll back all the\nresources that it created and this\nfeature actually simplifies the system\nadministration and layered solutions\nbuilt on top of aws cloud formation so\nat any point we know that there are no\norphan resources in the in in our\nenvironment you know because something\ndid not work or because there was an you\nknow cloud formation executed some there\nare no orphan resources in our account\nat any point we can be sure that if\ncloud formation is launching a resource\nand if it's going to fail and it's going\nto come back and delete all the\nresources it's created so there are no\norphan resources in our account now\nlet's talk about some questions in\nelastic block store again if the\nenvironment deals with a lot of\nautomation you could be thrown this\nquestion how can you automate easy to\nbackup using ebs it's actually a six\nstep process to automate the ec2 backups\nwe'll need to write a script to automate\nthe below steps using aws api and these\nare the steps that should be found in\nthe scripts first to get the list of\ninstances and then and then the script\nthat we are writing should be able to\nconnect to aws using the api and list\nthe amazon abs volumes that are attached\nlocally to the instance and then it\nneeds to list the snapshots of each\nvolume make sure the snapshots are\npresent and it needs to assign a\nretention period for the snapshot\nbecause over time the snapshots are\ngoing to be\ninvalid right once you have some 10\nlatest\nsnapshots any snapshot that you have\ntaken before that 10 becomes invalid\nbecause you have captured the latest and\n10 snapshot coverage is enough for you\nand then the fifth point is to create a\nsnapshot of each volume create a new\nsnapshot of each volume and then delete\nthe old snapshot anytime a new snapshot\ngets created the oldest snapshot of the\nlist needs to go away so we need to\ninclude options we need to include\nscripts in our script lines in our\nscript that make sure that it's deleting\nthe older snapshots which are older than\nthe retention period that we are\nmentioning another question that you\ncould see in the interview be it written\ninterview beat online interview or beat\nand telephonic or face-to-face interview\nis what's the difference between ebs and\ninstant store let's talk about ebs first\nebs is kind of permanent storage the\ndata in it can be restored at a later\npoint when we save data in ebs the data\nlives even after the lifetime of the ec2\ninstance for example we can stop the\ninstance and the data is still going to\nbe present in ebs we can move the ebs\nfrom one instance to another instance\nand the data is simply going to be\npresent there so abs is kind of\npermanent storage when compared to\ninstance on the other hand instance\nstore is a temporary storage and that\nstorage is actually physically attached\nto the host of the machine ebs is an\nexternal storage an instant store is\nlocally attached to the instance or\nlocally attached to the host of the\nmachine we cannot detach an instant\nstore from one instance and attach it to\nanother but we can do that with eba so\nthat's a big difference one is permanent\ndata and another one is ebs is permanent\ninstant store is a volatile data and\ninstant store with instant store we\nwon't be able to detach the storage and\nattach it to another instance and\nanother feature of instant store is data\nin an instant store is lost if the disk\nfails or the instance is stopped or\nterminated so instant store is only good\nfor storing cache data if you want to\nstore permanent data then we should\nthink of using ebs and not instant store\nwhile talking about storage on the same\nlines this is another classic question\nhow can you take backups of efs like ebs\nand if you can take backup how do you\ntake that backup the answer is yes we\ncan take efs to efs backup solution efs\ndoes not support snapshot like ebs efs\ndoes not support snapshot snapshot is\nnot an option for efs elastic file\nsystem right we can only take backup\nfrom one efs to another efs and this\nbackup solution is to recover from\nunintended changes or deletions of the\nefs and this can be automated but any\ndata that we store in efs can be\nautomatically replicated to another efs\nand once this efs goes down or gets\ndeleted or data gets deleted or you know\nthe whole ef is is for some reason\ninterrupted or deleted we can recover\nthe data from we can use the other efs\nand bring the application to consistency\nand to achieve this it's not an\none-step configuration it's a cycle\nthere are series of steps that's\ninvolved before we can achieve efs to\nefs\nbackup the first thing is to sign in to\nthe aws management console and under efs\nor click on efs to efs restore button\nfrom the services list and from there we\ncan use the region selector in the\nconsole navigation bar to select the\nactual region in which we want to work\non and from there i'll ensure that we\nhave selected the right template you\nknow some of the templates would be you\nknow efs to efs backup granular backups\nincremental backups right so there are\nsome templates the kind of backups that\nyou want to take do you want to take\ngrant alert do you want to take\nincrement backups stuff like that and\nthen create a name to that solution the\nkind of backup that we have created and\nfinally review all the configurations\nthat you have done and click on save and\nfrom that point onwards the data is\ngoing to be copied and from that point\nonwards any additional data that you put\nis going to copy it and replicate it now\nyou have an efs to efs backup this is\nanother classic question in companies\nwhich deals with\na data management there are easy options\nto create snapshots but deleting\nsnapshots is\nnot always an you know click button or\nan single step configuration so you\nmight be facing a question like how do\nyou auto delete old snapshots and the\nprocedure is like this now as best\npractice we will take snapshots of ebs\nvolume to s3 all snapshots get stored in\ns3 we know that now and we can use aws\nops automator to automatically handle\nall snapshots the ops automator service\nit allows us to create copy delete ebs\nsnapshots so there are cloud formation\ntemplates available for aws ops\nautomator and this automator template\nwill scan the environment and it would\ntake snapshots it would you know copy\nthe snapshot from one region to another\nregion if you want i know if you're\nsetting up a dr environment and not only\nthat based on the retention period that\nwe\ncreate it's going to delete the\nsnapshots which are older than the\nretention period so life or managing\nsnapshot is made a lot easier because of\nthis ops automator cloudformation\ntemplate moving into questions and\nelastic load balancer this again could\nbe an uh question in the interview what\nare the different types of load\nbalancers in aws and what's their use\ncase what's the difference between them\nand as of now as we speak there are\nthree types of load balancers which are\navailable in aws the first one being\napplication load balancer just like the\nname says the application load balancer\nworks on the application layer and deals\nwith the http and https request and it\nit also supports part based routing for\nexample simplylearn.com slash some\nwebpage simplylearn.com\nanother website so it's going to direct\nthe path based on the slash value that\nyou give in the urls that's path based\nrouting so it supports that and not only\nthat it can support a port based colon\n8080 colon 8081 or colon 8090 you know\nbased on that port also it can take a\nrouting decision and that's what\napplication load balancer does on the\nother hand we have network load balancer\nand the network load balancer makes\nrouting decisions at the transport level\nit's faster because it has very less\nthing to work on it works on lower osi\nlayer it works on a lower layer so it\nhas very less information to work with\nthan compared with application layer so\ncomparatively it's a lot faster and it\nhandles millions of requests per second\nand after the load balancer receives the\nconnection it selects a target group for\nthe default rule using the flow hash\nrouting algorithm it does simple routing\nright it does not do path-based or\nport-based routing it does simple\nrouting and because of it it's faster\nand then we have classic load balancer\nwhich is kind of expiring as we speak\namazon is discouraging people using\nclassic load balancer but there are\ncompanies which are still using classic\nload balancer they are the ones who are\nthe first one to step in to amazon when\nclassic load balancer was the first load\nbalancer or the only load balancer\navailable at that point so it supports\nhttp https tcp ssl protocol and it has a\nfixed relationship between a load\nbalance report and the container port so\ninitially we only have classic load\nbalancer and then um at after some point\namazon said instead of having one load\nbalancer address all type of traffic\nwe're going to have two load balances\ncalled as the child from the classic two\nload balancer and one is going to\nspecifically address the application\nrequirement and one is going to\nspecifically address the network\nrequirement and let's call it as\napplication load balancer and network\nload balancer so that's how now we have\ntwo different load balancers talking\nabout load balancer another classic\nquestion could be what are the different\nuses of the various load balancer in aws\nelastic load balancing there are three\ntypes of load balancer we just spoke\nabout it application load balancer is\nused if we need a flexible application\nmanagement and tls termination and\nnetwork load balancer if we require\nextreme performance and the load\nbalancing should happen on based on\nstatic ips for the application and\nclassic load balancer is an old load\nbalancer which is for people who are\nstill running their environment from ec2\nclassic network now this is an older\nversion of vpc or this is what was\npresent before vpc was created easy to\nclassic network is what was present\nbefore ec2 was created so they are the\nthree types and they are the use cases\nof it let's talk about some of the\nsecurity related questions you would\nface in the interview when talking about\nsecurity and firewall in aws we cannot\navoid discussion talking about waff web\napplication firewall and you would\ndefinitely see yourself in this\nsituation where you've been asked how\ncan you use aws vaf in monitoring your\naws applications waff or web application\nfirewall protects our web application\nfrom common web exploits and vaf helps\nus control which traffic source your\napplication should be allowed or a block\nwhich traffic from a certain source and\nwhich source or which traffic from a\ncertain source should be allowed or\nblocked your application with waff we\ncan also create custom rules that blocks\ncommon attack patterns you know if it is\na banking application it has a certain\ntype of attacks and if it is simple data\nmanagement data storage application it\nhas\ni mean content management application it\nhas a separate type of attack so based\non the application type we can identify\na pattern and create rules that would\nactually block that attack based on the\nrule that we create and waff can be used\nfor three cases you know the first one\nis allow all requests and then a block\nall request and count all requests for a\nnew policy so it's also an monitoring\nand management service which actually\ncounts all the policies or counts all\nthe requests that matches a particular\npolicy that we create and some of the\ncharacteristics we can mention in awsof\nare the origin ips and the strings that\nappear in the request we can allow block\nbased on origin ip allow block based on\nstrings that appear in the request we\ncan allow block or count based on the\norigin country length of the request\nyeah we can block and count the presence\nof malicious scripts in an connection\nnow we can count the request headers or\nwe can allow block a certain request\nheader and we can count the presence of\na malicious sql code in a connection\nthat we get and that want to reach our\napplication still talking about security\nwhat are the different aws im categories\nwe can control using aws iam we can do\nthe following one is create and manage\nim users and once the user database gets\nbigger and bigger we can create and\nmanage them in groups and in im we can\nuse it\nto manage the security credentials kind\nof setting the complexity of the\npassword you know setting additional\nauthentications you know like mfa and uh\nyou know rotating the passwords you know\nresetting the password there are a few\nthings we could do with iam and finally\nwe can create policies that actually\ngrants access to aws services and\nresources another question you will see\nis what are the policies that you can\nset for your users password so some of\nthe policies that we can set for the\nuser password is at the minimum length\nor you know the complexity of the\npassword by at least having one number\nor one special characters in the\npassword so that's one and then the\nrequirement of a specific character\ntypes including you know uppercase\nlowercase number and non-alphabetic\ncharacters so it becomes very hard for\nsomebody else to guess what the password\nwould be and and try to hack them so we\ncan set\nthe length of the password we can set\nthe complexity in the password and then\nwe can set an automatic expiration of\nthe password so after a certain time the\nuser is forced to create a new password\nso the password is not still old and\neasy to guess in the environment and we\ncan also set settings like the user\nshould contact the admin i mean when the\npassword is about to expire so you know\nyou can get a hold of how the user is\nsetting their password is it\nhaving good complexity in it is it\nmeeting company standards or there are\nfew things that we can control and set\nfor the users when the users are setting\nor recreating the password another\nquestion that could be posted in an\ninterview so to understand your\nunderstanding of iem is what's the\ndifference between an iem role and an im\nuser let's talk about iem user let's\nstart small and then go big or let's\nstart simple and then talk about the\ncomplex one the im user has a permanent\nlong term credential and it's used to\ninteract directly with aws services and\non the other hand iem role is an iem\nentity that defines a set of permissions\nfor making aws service request so im\nuser is an permanent credential and role\nare temporary credentials and iem user\nhas full access to all aws iem\nfunctionalities and with role trusted\nentities such as iem users application\nor aws services\nassume the role so when an im user is\ngiven an\npermission you know it sticks within the\niem user but with roles we can give\npermissions to applications we can give\npermissions to users in the same account\nin a different account corporate id we\ncan give permissions to ec2 s3 rds vpc\nand lot more role is wide and im user is\nis not so wide you know it's very\nconstrained only for that i am user\nlet's talk about managed policies in aws\nmanaged policies there are two types you\nknow customer managed and amazon managed\nso manage policies are i am resources\nthat express permissions using the iam\npolicy language and we can create\npolicies edit them manage them manage\nthem separately from the im user group\nand roles which they are attached to so\nthey are something that we can do to\nmanaged policies if it is customer\nmanaged and we can now update policy in\none place and the permissions\nautomatically extend to all the attached\nentries so i can have like three\nservices four services point to a\nparticular policy and if i edit that\nparticular policy it's gonna reflect on\nthose three or four services so anything\nthat i allow is going to be allowed for\nthose four services anything that i\ndenied is going to be denied for uh the\nfour services imagine what would be\nwithout the i am managed policy will\nhave to go and specifically allow deny\non those different instances four or\nfive times depending on the number of\ninstances that we have so like i said\nthere are two types of managed policies\none is managed by us which is customer\nmanaged policies and then the other is\nmanaged by aws which is aws managed\npolicy this question can you give an\nexample of an iem policy and a policy\nsummary this is actually to test how\nwell-versed are you with the aws console\nthe answer to that question is look at\nthe following policy this policy is used\nto grant access to add update and delete\nobjects from a specific folder now in\nthis case name of the folder is example\nfolder and it's present in a bucket\ncalled example bucket so this is an iam\npolicy on the other hand the policy\nsummary is a list of access level\nresource and conditions for each service\ndefined in a policy so iam policy is all\nabout one particular resource and the\npolicy summary is all about multiple\nresources with iem policy it was only\ntalking about s3 bucket and one\nparticular s3 bucket here it talks about\ncloud formation template cloud watch\nlogs ec2 elastic bean stock services\nsummary summary of resources and the\npermissions and policies attached to\nthem that's what policy summary is all\nabout another question could be like\nthis what's the use case of iam and how\ndoes im help your business two important\nor primary work of iam is to help us\nmanage iam users and their access it\nprovides a secure access to multiple\nusers to their appropriate aws resources\nso that's one it does and the second\nthing it does is manage access for\nfederated users federated users or\nnon-iam users and through iam we can\nactually allow and provide secured\naccess to resources in our aws account\nto our employees without the im user no\nthey could be authenticated using the\nactive directory they could be\nauthenticated using the facebook\ncredential google credential amazon\ncredential and a couple of other\ncredentials third party\nidentity management right so we could\nactually trust them and we could give\nthem access to our account based on the\ntrust relationship that we have built\nwith the other identity of systems right\nso two things one is manage users and\ntheir access for manage iam user and\ntheir access in our aws environment and\nsecond is manage access for federated\nusers who are non-iam users and more\nimportantly im is a free service and\nwith that\nwill only be charged for the use of the\nresources not for the im username and\npassword that we create all right let's\nnow talk about some of the questions in\nroute 53.\none classic question that could be asked\nin an interview is what is the\ndifference between latency based routing\nand\ngeodns or jio based dns routing now the\njio based dns routing takes routing\ndecisions on the basis of the geographic\nlocation of the request and on the other\nhand the latency based routing utilizes\nlatency measurements between networks\nand\ndata centers now latency based routing\nis used where you want to give your\ncustomers the lowest latency as possible\nso that's when we would use latency\nbased routing and on the other hand the\ngeo based routing is when we want to\ndirect customers to different websites\nbased on the country they are browsing\nfrom you know you could have you know\ntwo different or three different\nwebsites for the same url you know take\namazon the shopping website for example\nwhen we go to\namazon.com from in the us it directs us\nto the us web page where the products\nare different the currency is different\nright and the flag and and a couple of\nother advertisements that shows up are\ndifferent and when we go to amazon.com\nfrom india it gets directed to the\namazon.com indian site where again the\ncurrency the product and the\nadvertisements they're all different\nright so depending on the\ncountry they're trying to browse if you\nwant to direct customers to two or three\ndifferent websites we would use a\ngeo-based routing another use case of\ngeo based routing is if you have a\ncompliance that you should handle all\nthe dns requires sorry if you should\nhandle all the requests you know from a\ncountry within the country then you\nwould do geo-based routing now you\nwouldn't direct the customer to a server\nwhich is in another country all right\nyou would direct the customer to a\nserver which is very local to them\nthat's another use case of jio based\nrouting and like i said for latency\nbased routing the whole goal or aim is\nto achieve minimum end user latency if\nyou are hired for the architect role and\nif that requires working lot on the dns\nthen you could be posted with this\nquestion what is the difference between\ndomain and a hosted zone a domain is\nactually a collection of\ndata describing a self-contained\nadministrative and technical unit on the\ninternet right so for example you know\nsimplylearn.com is actually a domain on\nthe other hand hosted zone is actually\nan container that holds information\nabout how you want to route traffic on\nthe internet to a specific domain for\nexample\nlms.simplylearn. is an hosted zone\nwhereas simplylearn.com is a domain so\nin other words in hosted zone you would\nsee the domain name plus and a prefix to\nit lms is a prefix here ftp is a prefix\nmail.simplylearn.com is a prefix so\nthat's how you would see a prefix in\nhosted zones another question\nfrom another classic question from route\n53 would be how does amazon drop 53\nprovide high availability and low\nlatency the way amazon rav53 provides\nhigh availability and low latency is by\nglobally distributed dns servers amazon\nis a global service and they have dna\nservices globally any customer doing a\nquery from different parts of the world\nthey get to reach an dns server which is\nvery local to them and that's how it\nprovides low latency now this is not\ntrue with all the dns providers there\nare dns providers who are very local to\na country who are very local to a\ncontinent so they don't they generally\ndon't provide low latency service right\nit's always high latency it's low\nlatency for local users but anybody\nbrowsing from a different country or a\ndifferent continent it's going to be\nhigh latency for them but that's not\nagain true with amazon amazon is a\nglobally distributed dns provider it has\ndns servers global wide and like i said\nit has optimal locations it has got\nglobal servers or in other words it has\ngot servers around the globe different\nparts in the globe and that's how they\nare able to provide high availability\nand because it's not running on just one\nserver but on many servers they provide\nhigh availability and low latency if the\nenvironment that you're going to work on\nis going to take a lot of configuration\nbackups environmental backups then you\ncan expect questions in aws config a\nclassic question would be how does aws\nconfig work along with aws cloudtrail\naws cloudtrail actually records user api\nactivity on the account and you know any\nhttp https access or any any sort of\naccess you know that's made to the cloud\nenvironment that's recorded in the cloud\ntrail in other words any api calls the\ntime is recorded the type of call is\nrecorded and what was the response given\nwas it a failure was it successful they\nalso get recorded in cloudtrail it's\nactually a log it actually records\nthe activity in your cloud environment\non the other hand config is an a point\nin time configuration details of your\nresources for example at a given point\nwhat are all the resources that were\npresent in my environment what are all\nthe resources or what are the\nconfiguration in those resources at a\ngiven point they get captured in aws\nconflict right so with that information\nyou can always answer the question what\ndid my aws resource look like at a given\npoint in time that question gets\nanswered when we use aws config on the\nother hand with cloudtrail you can\nanswer the question i mean by looking at\nthe cloud trail or with the help of\ncloudtrail you can easily answer the\nquestion who made an apa call to modify\nthis resource that's answered by\ncloudtrail and with the cloud trail we\ncan detect if a security group was\nincorrectly configured and who did that\nconfiguration let's say there happened\nto be a downtime and you want to\nidentify let's say there happened to be\na downtime and you want to identify who\nmade that uh change in the environment\nyou can simply look at cloudtrail and\nfind out who made the change and if you\nwant to look at how the environment\nlooks like before the change you can\nalways look at aws config can aws\nconfigure or aws config aggregate data\nacross different aws accounts yes it can\nnow this question is actually to test\nwhether you have used aws config or not\ni know some of the services are very\nlocal is it some of these services are\navailability zone specific some of them\nare regional specific and some of them\nare\nglobal\nservices in amazon and though some of\nthe services are region services you\nstill can do some changes you know add\nsome configuration to it and collect\nregional data in it for example s3 is a\nregional service but still you can\ncollect logs from all other regions into\nan s3 bucket in one particular region\nthat's possible and cloud trail is and\ncloud watch is an regional service but\nstill you can with some changes to it\nwith some adding permissions to it you\ncan always monitor the cloud watch that\nbelongs to cloudwatch logs that belongs\nto other regions you know they're not\nglobal by default but you can do some\nchanges and make it global similarly aws\nconfig is a service that's a region\nbased service but still you can make it\nact globally you can aggregate\ndata across a different region and\ndifferent accounts in an aws config and\ndeliver\nthe updates\nfrom different accounts to one s3 bucket\nand can access it from there aws config\nalso works or integrates seamlessly with\nsns topic so you know anytime there is a\nchange anytime a new data gets collected\nyou can always notify yourself or notify\na group of people about the new log or\nthe new config or new edit that happened\nin the environment let's look at some of\nthe database questions you know database\nshould be running on reserved instances\nso whether you know that fact or not the\ninterviewer wants to understand how well\nyou know that fact by asking this\nquestion how are reserved instances\ndifferent from on-demand db instances\nreserved instances and on-demand\ninstances are exactly the same when it\ncomes to their function but they only\ndiffer based on how they are\nbuilt reserved instances are purchased\nfor one year or three year reservation\nand in return we get a very low\nper hour pricing because we're paying\nupfront it's generally said that\nreserved instance is 75 percentage\ncheaper than on-demand instance and\namazon gives you that benefit because\nyou know you're committing for one year\nand sometimes you're paying in advance\nfor the whole year on the other hand\non-demand instances are built on an\noddly early price talking about auto\nscaling how will you understand the\ndifferent types of auto scaling the\ninterviewer might ask this question\nwhich type of scaling would you\nrecommend for rds and y the two types of\nscaling as you would know now\nvertical and horizontal and in vertical\nscaling we can vertically scale up the\nmaster database with a couple of clicks\nall right so that's vertical scaling\nvertical scaling is keeping the same\nnode and making it bigger and bigger if\npreviously it was running on t2 micro\nnow we would like to run it on m3 two\ntimes large instance previously it had\none virtual cpu one gigabit now it's\ngoing to have eight virtual cpu and 30\ngigabit of ram so that's vertical\nscaling on the other hand horizontal\nscaling is adding more nodes to it\npreviously it was running on one vm now\nit's going to run on 2 3 10 vms all\nright that's horizontal scaling so\ndatabase can only be scaled vertically\nand there are 18 different types of\ninstances we can resize our rds to all\nright so this is true for ids mysql\npostgres sql mariadb oracle microsoft\nsql servers there are 18 type of\ninstances we can vertically scale up to\non the other hand horizontal scaling are\ngood for replicas so they are read-only\nreplicas we're not going to touch the\nmaster\ndatabase we're not going to touch the\nprimary database but i can do horizontal\nscaling only with amazon aurora and i\ncan add additional read replicas i can\nadd up to 15 read replicas for amazon\naurora and up to five read replicas for\nrds mysql postgres sql and marie db rds\ninstances and when we add replica we are\nhorizontally scaling adding more nodes\nright a read-only nodes so that's\nhorizontal scaling so how do you really\ndecide between vertical and horizontal\nscaling if you're looking in to increase\nthe storage and the processing capacity\nwe'll have to do a vertical scaling if\nyou're looking at increasing the\nperformance or of the read heavy\ndatabase we need to be\nlooking for horizontal scaling or we\nneed to be implementing horizontal\nscaling in our environment still talking\nabout database this is another good\nquestion you can expect in the interview\nwhat is the maintenance window in amazon\nrds will your db instance be available\nduring the maintenance event all right\nso this is really to test how well you\nhave understood the sla how well you\nhave understood the amazon rdas uh the\nfailover mechanism of amazon rdas stuff\nlike that so audio's maintenance window\nit lets you decide\nwhen a db instance modification a\ndatabase engine upgrades or software\npatching has to occur and you you\nactually get to decide should it happen\nat 12 in the night or should it happen\nat afternoon should it happen early in\nthe morning should it happen in the\nevening you actually get to decide an\nautomatic scheduling by amazon is done\nonly for patches that are security and\ndurability related sometimes amazon\ntakes down and does automatic scheduling\nuh if you know if there is a need for a\npatch update that deals with security\nand durability and by default the\nmaintenance window is is for 30 minutes\nand the important point is the db\ninstance will be available during that\nevent because you're going to have\nprimary and secondary right so when that\nupgrade happens amazon would shift the\nconnection to the secondary do the\nupgrade and then switch back to the\nprimary another classic question would\nbe what are the consistency models in\ndynamodb in dynamodb there is eventual\nconsistency read this eventual\nconsistency model it actually maximizes\nyour read throughput and the best part\nwith eventual consistency is all copies\nof data reach\nconsistency within a second and\nsometimes when you write and when you're\nyou know trying to read immediately\nchances that you you would still be\nreading the old data that's eventual\nconsistency on the other hand there is\nanother consistency model called the\nstrong consistency or strongly\nconsistent read where there is going to\nbe a delay in writing the data you know\nmaking sure the data is written in all\nplaces but it guarantees one thing that\nis once you have done a write and then\nyou're trying to do a read it's going to\nmake sure that it's going to show you\nthe updated data not the old data and\nyou can be guaranteed of it that it is\ngoing to show the updated data and not\nthe old data that's strongly consistent\nstill talking about uh database talking\nabout nosql dynamodb or nosql database\nwhich is\ndynamodb and amazon you could be asked\nthis question what kind of query\nfunctionality does\ndynamodb support dynamodb supports get\nand put operation dynamodb supports or\ndynamodb provides flexible querying by\nletting you query on non-primary key\nattributes using global secondary index\nand local secondary indexes a primary\nkey can be either a single attribute\npartition key or a composite\npartition sort key in other words a\ndynamodb indexes a composite partition\nsort key as a partition key element and\nthe sort key element and by holding the\npartition key you know when doing a\nsearch or when doing a query by holding\nthe partition key element constant we\ncan search across the sort key element\nto retrieve the other items in that\ntable and the composite partition sort\nkey should be a combination of user id\npartition and a timestamp so that's what\nthe composite partition sort key is made\nof let's look at some of the multiple\nchoice questions you know sometimes some\ncompanies would have an a written test\nor an mcq type online test before they\ncall you for at the first level or\nbefore they call you for the second\nlevel so these are some classical\nquestions that companies asked or\ncompanies ask in their multiple choice\nonline questions let's look at this\nquestion as a developer using this\npay-per-use service you can send store\nand receive messages between software\ncomponents which of the following is\nbeing referred here let's look at it\nright we have aws step functions amazon\nmq amazon simple queue service amazon\nsimple notification service let's read\nthe question again as a developer using\nthis pay-per-use service so the service\nthat we are looking for is a\npay-per-view service you can send store\nand retrieve messages between two\nsoftware components kind of like a queue\nthere so what would be the right answer\nit would be amazon simple queue service\nnow amazon simply queue service is the\none that's used to decouple at the\nenvironment it breaks the tight coupling\nand then it introduces decoupling in\nthat environment by providing a queue or\nby inserting a queue between two\nsoftware components let's look at this\nother question if you would like to host\na real-time audio and video conferencing\napplication on aws it's an audio and\nvideo conferencing application on aws\nthis service provides you with a secure\nand easy to use application what is this\nservice let's look at the options they\nare amazon chime amazon workspace amazon\nmq amazon app stream well you might tend\nto look at\namazon app stream because it's real time\nand a video conference but it's actually\nfor a different purpose is actually\namazon chime that lets you create chat\nand create a chat board and then\ncollaborate with the security of the aws\nservices so it lets you do the audio it\nlets you do the video conference all\nsupported by aws security features it's\nactually amazon china let's look at this\nquestion as your company's aw solution\narchitect you are in charge of designing\nthousands of individual jobs which are\nsimilar which of the following service\nbest serves your requirement aws ec2\nauto scaling aws snowball aws fargate\naws batch let's read the question again\nas your company's aws solution architect\nyou are in charge of designing thousands\nof individual jobs which are similar it\nlooks like\nit's batch service let's look at the\nother options as well aw snowball is\nactually an storage uh transport service\nec2 auto scaling is you know in\nintroducing scalability and elasticity\nin the environment and aws far gate is\ncontainer services aws batch is the one\nis being referred here that actually\nruns thousands of individual jobs which\nare similar aws batch it's the right\nanswer but let's look at the other one\nyou are a machine learning engineer and\nyou're looking for a service that helps\nyou build and train machine learning\nmodels in aws which among the following\nare we referring to so we have amazon\nsage maker and aws deep lens amazon\ncomprehend aws device farm let's read\nthe question again you are a machine\nlearning engineer and you're looking for\na service that helps you build and train\nmachine learning models in aws which\namong the following are referred here\nthe answer is sage maker it provides\nevery developer and data scientist with\nthe ability to build train and deploy\nmission learning models quickly that's\nwhat sagemaker does now for you to be\nfamiliar with you know the the products\ni would recommend you to you know simply\ngo through the\nproduct description you know there's one\npage available on amazon that explains\nall the products a quick neat and simple\nnow that really helps you to be very\nfamiliar with you know what the product\nis all about and what it is capable of\nyou know is it a db service is it a\nmachine learning service or is it a\nmonitoring service is it a developer\nservice stuff like that so get that\ninformation get that details before you\nattend an interview and that should\nreally help to answer or face such\nquestions with a great confidence so the\nanswer is amazon sagemaker because\nthat's the one that provides developers\nand a data scientist the ability to\nbuild a train and deploy machine\nlearning models quickly as possible all\nright let's look at this one let's say\nthat you are working for your company's\nid team and you are designated to adjust\nthe capacity of the aws resource based\non the incoming application and network\ntraffic how do you do it so what's the\nservice that's actually helps us to\nadjust the capacity of the aws resource\nbased on the incoming application let's\nlook at it amazon vpc amazon iam amazon\ninspector amazon elastic load balancing\namazon vpc is a networking service\namazon iam is an username password\nauthentication amazon inspector is a\nservice that actually does security\naudit in our environment and amazon\nelastic load balancer is a service that\nhelps in scalability that's in one way\nyou know indirectly that helps in\nincreasing the availability of the\napplication right and monitoring it\nmonitoring you know how much requests\nare coming in through the elastic load\nbalancer we can actually adjust the\nenvironment that's running behind it so\nthe answer is going to be amazon elastic\nload balancer all right let's look at\nthis question this cross platform video\ngame development engine that supports pc\nxbox playstation ios and android\nplatforms allows developers to build and\nhost their games on amazon's servers so\nwe have amazon game lift amazon green\ngrass amazon lumber yard amazon sumerian\nlet's read the question again this\ncross-platform video game development\nengine that supports pc xbox playstation\nios and android platforms allows\ndevelopers to build and host their games\non amazon servers the answer is amazon\nlumberyard this lumberyard is an free\naaa gaming engine deeply integrated with\naws and twitch with full source this\nlumbar yard provides a growing set of\ntools that helps you create and highest\ngame quality applications and they\nconnect to a lot of games and vast\ncompute and storage in the cloud so it's\nthat service they are referring to let's\nlook at this question you are the\nproject manager of your company's cloud\narchitect team you are required to\nvisualize understand and manage your aws\ncost and usage over time which of the\nfollowing service will be the best fit\nfor this we have aws budgets we have aws\ncost explorer we have amazon work mail\nwe have amazon connect and the answer is\ngoing to be cost explorer now cost\nexplorer is an option in the amazon\nconsole that\nhelps you to visualize and understand\nand even manage the aws cost over time\nwho's spending more who's spending less\nand what is the trend what is the\nprojected cost for the coming month all\nthese can be visualized in aws cost\nexplorer let's look at this question you\nare a chief cloud architect at your\ncompany and how can you automatically\nmonitor and adjust computer resources to\nensure maximum performance and\nefficiency of all scalable resources so\nwe have a cloud formation as a service\nwe have aws aurora as a solution we have\naws auto scaling and amazon api gateway\nlet's read the question again you're the\nchief cloud architect at your company\nhow can you automatically monitor and\nadjust computer resources how can you\nautomatically monitor and adjust\ncomputer resources to ensure maximum\nperformance and efficiency of all\nscalable resources this is an easy\nquestion to answer the answer is auto\nscaling right that's a basic service and\nsolution architect\ncourse is it auto scaling is the service\nthat helps us to easily adjust monitor\nand ensure the maximum performance and\nefficiency of all scalable resources it\ndoes that by automatically scaling the\nenvironment to handle the inputs let's\nlook at this question as a database\nadministrator you will use a service\nthat is used to set up and manage\ndatabases such as mysql maya db and\npostgres sql which service are we\nreferring to amazon aurora amazon\nelastic cache aws rds aws database\nmigration service amazon arora is\namazon's flavor of\nthe rds service and elastic cache is is\nthe caching service provided by amazon\nthey are not full-fledged database and\ndatabase migration service just like the\nname says it helps to migrate the\ndatabase from on-premises to the cloud\nand from one database flavor to another\ndatabase flavor amazon rds is the\nservice is the console is the service is\nthe umbrella service that helps us to\nset up manage databases like mysql money\ndb and postgres sql it's amazon rds\nlet's look at this last question a part\nof your marketing work requires you to\npush messages to onto google facebook\nwindows and apple through apis or aws\nmanagement console you will use the\nfollowing service so the options are aws\ncloudtrail aws config amazon chime aws\nsimple notification service it says a\npart of your marketing work requires you\nto push messages it's dealing with\npushing messages to google facebook\nwindows and apple through apis or aws\nmanagement console you will use the\nfollowing service it's simple\nnotification service simple notification\nservice is an message pushing a service\nand sqs is pulling similarly sns is\npushing right here it talks about a\npushing system that pushes messages to\ngoogle facebook windows and apple\nthrough api and it's going to be a\nsimple notification system or a simple\nnotification service i would like to\nwelcome you to this azure interview\npreparation session\nknowing azure is one thing having worked\non azure is another thing and being able\nto answer interview questions in azure\nis a totally different thing although\none helps the other it's still different\nskills and our aim through this video is\nto prepare you with common product and\nscenario based interview questions\nso why wait let's get started a common\ncloud interview question is what's the\ndifference between sas pass and is we\nall know that a software as a service is\nthin client model of software\nprovisioning where client in this case\nusually is simply a web browser\nproviding the point of access to\nsoftware's running on the servers now\nsas is the most familiar form of cloud\nservice for customers sas moves the task\nof managing software and its deployment\nto third-party services meaning the\nvendor actually gets to manage all that\nso\nsas is software as a service involving\napplications being consumed and used by\norganization so it's generally using an\napplication and usually organizations\npay for their use of this particular\napplication now some examples of sas\nwould include office 365. salesforce is\nanother very good example of sas and a\nlot of google apps and storage solutions\nlike box and dropbox are a very good\nexample of software as a service talking\nabout platform as a service or pass it\nactually functions at the lower level\nthan sas now typically it provides a\nplatform on which software can be\ndeveloped and deployed now here we\ndevelop the software we deploy the\nsoftware now pass actually provides an\nabstract of much of the work dealing\nwith servers and giving client an\nenvironment in which the operating\nsystem and the server software and the\nhardwares and the network are managed\nand taken care in other words with a\nplatform as a service all the things\nthat i've mentioned like the servers the\nserver software the hardware everything\nis managed by the provider and we can\nfocus on business side of the\nscalability and we can focus on\napplication development of our product\nor the service so in short platform as a\nservice is a service that enables\ndevelopers to build and work with\napplications without even having to\nworry about the infrastructure or\nmanagement of the underlying hosting\nenvironments and some examples of uh\npass in azure is\nsql and azure storage talking about\ninfrastructure as a service i as now\nthis is moving down the stack even\nfurther now we get to the fundamental\nbuilding block of the cloud service\nwhich is infrastructure as a service is\nnow is is fully of highly automated\nscalable computer resources is is full\nof storage is full of the network\ncapability that's what is is now is\nclients have direct access to the\nservers and storage just as they would\nto do traditional servers but in this\ncase it's going to be in the cloud in\nthis case it's going to be more scalable\nso is is very similar to what you would\ndo in your on-premises physical data\ncenter but when we talk about is we get\nto do everything but it's stored in the\ncloud so if we need to build a\ndefinition around is is or\ninfrastructure as a service provides\nusers with components it provides\ncomponents it does not give us a built\nenvironment it simply provides a\ncomponent such as operating system\nnetworking capabilities and a lot more\nnow this is a paid for based on the\nusage and can be used to host\napplications in other words this is pay\nas you go type the more you use the more\nyou pay the less you use the less you\npay and some of the examples of is in\nazure is a virtual machine that's a\ngreat example for is and v-nets for\nnetworking that's another good example\nfor is in azure another common question\nin azure interview is what are the\ninstant types offered by azure the main\nintention of this question is how well\nhave you understood the different\nofferings in azure and how well are you\ntrained to pick the right offering for\nthe right service now one size does not\nfit all and thereof there are a lot of\nservices in azure that under the carpet\nit does the same thing but depending on\nhow different your requirement is we'll\nhave to pick the appropriate server so\nthis actually this question what are the\ndifferent instant types offered by azure\nit's to test how well have you used the\nproduct and services available in azure\nand how well have you applied them for\nthe given requirement you should be\nprovisioning more you should be\nprovisioning less at the same time so\nit's kind of matching the right service\nto the right requirement so what are the\ninstant types offered by azure as you\nsee in the list we have general purpose\ncompute optimized memory optimized\nstorage optimized gpu virtual machines\nand high performance compute virtual\nmachines now answering just the names\nwon't be enough in an interview you'll\nhave to go further and explain why and\nin what scenario you would use general\npurpose and what are the use cases what\ntype of servers is a good fit for a\ngeneral purpose and what type is a good\nfit for compute optimized so on and so\nforth and that's exactly what we're\ngoing to do now so the general purpose\nvms you know they provide a balanced cpu\nto memory ratio and it's very good for\ntesting very good for a development\nenvironment very good for small and\nmedium databases and also for low to\nmedium traffic web servers and some of\nthe use cases are like we said test\nservers low traffic web servers\nsmall to medium databases some\nenterprise great applications it's also\ngood for relational database it's also\ngood for servers used for in-memory\ncaching it's also good for some small\nanalytic database very good for micro\nservices and if you're trying to build a\nproof of concept for an idea that you\njust have or just parked this is another\ngood server for doing proof of concepts\nbecause you're not going to send actual\ntraffic to it i just want to show that\nyou know your idea works so general\npurpose server is a very good use case\nfor those scenarios and the largest\ninstance size we can get in general\npurpose is standard d64 v3 which comes\nwith 256 gigabit of memory and 1600\ngigabit of ssd temporary storage on the\nother hand compute optimized vms have an\na high cpu to memory ratio and are very\ngood for medium traffic web servers very\ngood for batch processing servers very\ngood for application servers now because\nit's computer optimized and compute\nmeans a cpu it's an excellent choice for\nworkloads that demand faster cpu but\ndoes not need as much memory or\ntemporary storage virtual cpu some of\nthe workloads that run very well on\ncomputer optimized are analytic\nworkloads gaming servers require more\ncpu they run really well batch\nprocessing are some of the applications\nthat can be placed in computer optimized\nand by doing that we get the actual\nbenefit of the compute optimized\ninstance and the largest instance size\nor the largest instance size type is\nstandard f72s v2 and here we get\n144 gigabit of memory and\n576 gigabit of ssd temporary storage in\ncompute optimized vms in the same lines\nmemory optimized to vm they offer high\nmemory to cpu ratio and that are great\nfor databases databases require more\nmemory so it's a great fit for database\nand it's a great fit for medium to\nlarge scale caches applications that\nrequire in-memory analytics so this\nmemory optimized memories more so it's\nvery good for in-memory analytics\napplications and the largest instant\nsize we get here is standard\nm128m and look at the\ngigabit of memory it's 3892\ngigabit of memory and\nlook at the temporary storage it's uh\n1400\n336 a gigabit of temporary storage on\nthe same lines storage optimized now i\nguess i don't have to explain to you\nwhat storage optimized is used for you\nmight have easily guessed looking at the\nflow yes storage optimized vm offer high\ndisk throughput and io and are very\nideal for big data\nsql nosql databases data warehousing\nservers large transactional databases\nand lot more and some of the examples of\nthe applications that can be launched on\nstorage optimized are cassandra mongodb\ncloudera redis these are some familiar\napplications that can get benefited when\nwe run them on storage optimized and one\ndifference between storage optimized and\nthe other servers are they are generally\noptimized to use the local disk on the\nnode attached directly to the vm rather\nthan using an durable disk which is\nactually in a remote\ndisk space now what does this allow this\nallows for greater input outputs per\nsecond or throughput for the workload so\nthat's what we get a greater throughput\nat greater input outputs per second is\nwhat we get when we use storage\noptimized and the largest instance size\navailable in storage optimized is\nstandard l32s and\nthe memory is 256 gigabit and look at\nthe temporary storage it's a\n5630 gigabit of temporary storage\ngpu type vms easy to guess gpu optimized\nvms are specialized virtual machines\navailable with\nmultiple gpus attached to them now these\nsizes are designed for or these vms are\ndesigned for compute intensive graphic\nintensive visualization workloads that\nrequire a lot of\ngraphical processing unit attached to it\nso in short these are virtual machines\nthat specialize in heavy graphic\nrendering and video editing it also\nhelps with model training and\ninterferencing with the standard nd\nnd24rs which has\n448 gigabit of memory and 2948\ngigabit of temporary storage and the\nlast but not the least but the best last\nbut the best is high performance compute\nor azure h series virtual machines now\nthey are the latest in high performance\ncomputing vms and are aimed to handle\nworkloads like batch processing analytic\nmolecular modeling and fluid dynamics a\nlot of complicated applications in this\nvm and this is the fastest and powerful\ncpu virtual machine with the optional\nhigh throughput interfaces and the\nlargest instance size that's available\nis a standard l32s which comes with 224\ngigabit of memory and 200 gigabit of ssd\ntemporary storage and a third common\nquestion is what are the deployment\nenvironments offered by azure there are\ntwo main deployment environments one is\nthe staging environment and the other\none is the production environment now in\nstaging environment let's talk about\nstaging first so when you're deploying\nyour web app or web app on linux you can\ndeploy them to a separate slot instead\nof the default production slot when\nrunning them in standard premium or\nisolated app service plan tiers now the\ndeployments slots are actually live app\nwith their own host name and at a later\npoint that the staging environment can\nbe swapped with the production\nenvironment so why do we need and\nstaging environment what are the benefit\nof it so the benefit of deploying our\napplication to a non-production or\nstaging environment it provides a\nplatform to validate changes to our\napplication before it can be made live\nin the production environment and in the\nstaging environment the app can be\nidentified using the azure's global\nunique identifier also called as the\nguid url and it's very very similar to\nthe production url except that it has a\ncustom name in front of it that\nidentifies it as the staging environment\nand for production environment this is\nthe live\nproduction environment that's serving\ncustomers request that serving the\ncustomer content now it can be slightly\ndifferent from the staging environment\nin a way that the url that's used to\nidentify the production environment\nthat's more often dns friendly name like\nthe name of the actual service dot cloud\napp.net that way it differs in case of\nstaging environment you have an custom\nname right before it so the custom name\nand then the cloudapp.net but in this\ncase you get the\ndirect service name as the name of the\nurl so this is live production\nenvironment which receives and handles\nand serves customer traffic another\ncommonly asked question in azure is what\nare the advantages of scaling in azure\nthe actual thought behind the question\nis to see\nhow much have you understood scaling how\nmuch have you seen and how much have you\napplied the scaling effect in the\nproduction environment and have received\nbenefits in return so let's talk about\nit advantages of scaling in azure some\nof the advantages are we get the maximum\napplication performance now auto scaling\nis a built-in feature for the cloud\nservices be it\naws azure\ngoogle and couple of other cloud service\nproviders it's a built-in feature for a\ncloud service a cloud service should be\nauto scalable and that includes mobile\nservices virtual machines and\nwhen we run our applications\non mobile services or virtual machines\nthe website actually gets the best\nperformance during\nthe change in the demand again a\ndifferent applications\nmight require different performance\nneeds for examples for some apps the\nperformance measured based on memory and\nanother a good example is the\nfluctuating demand for example you could\nhave a web app that handles millions of\nrequests during the day and literally\nnothing at the night and auto scaling\nthis environment auto scaling any of\nthese environment will automatically\nscale or fatten your environment so to\nreceive the all the incoming traffic and\nduring lean period it actually gets\nslimmer and slimmer so to help you with\nthe cost so it actually maximizes the\nperformance that's what auto scaling\ndoes and like we said auto scaling\nscales up and scales down based on\ndemand it not only scales up but also\nscales down so to help you with the cost\nand if you know the particular pattern\nin which the application is going to\nreceive traffic then we can very well go\nahead and schedule scaling to our\napplication or schedule scaling that\ninfrastructure based on time if we\nalready know that monday to friday\nthat's the traffic that i would get and\nit's a constant one it's not a public\nfacing but you know it's an internal\napplication so i know all the 500 users\nor the thousand or the 5000 users who\nwill be using it so at any given point\nit's just 5000 users it's not going to\ngo beyond that and during saturday and\nsunday literally nobody's going to be in\noffice so no load at all so in that case\ni pretty much know how the pattern is\ngoing to be i can go for scheduled\nscaling if i know at the pattern and\nauto scaling like i said not only helps\nwith keeping the application highly\navailable it also helps with the cost\neffectiveness of our infrastructure so\nanytime there's a vm or a group of vms\nrunning on less cpu auto scaling is\ngoing to actually get the environment\nslimmer and slimmer so we're not\nunnecessarily running any resources and\npaying for it if you're being\ninterviewed for the infrasight in azure\nthis is another common question that\ngets asked how are windows active\ndirectory and azure active directory\ndifferent let's talk about the windows\nactive directory first the non-cloud\nwindows active directory was the service\nwas released along with windows 2000\nserver edition and this active directory\nis essentially a database that helps\norganizations to organize the users\norganize the computers and a lot more it\nprovides authentication and\nauthorization to the applications not\nonly to the applications but also to\nfile servers to printers and a lot of\nother on-premises resources that's what\nthe basic non-cloud active directory\ndoes on the other hand the azure active\ndirectory is not designed to manage\nweb-based services the azure active\ndirectory on the other hand was designed\nto support web-based services that use\nrest api interfaces for office\n365 salesforce.com etc unlike the plain\nactive directory this uses a completely\ndifferent protocol so protocol wise it's\ndifferent and the services that it\nsupport is quite different now besides\nthat it also has couple of other\ndifferences as well and let's look at\nthem so the actual active directory or\nthe windows actual directory is a\ndirectory service that facilitates\nworking with interconnected complex and\ndifferent network resources in a very\nunified manner on the other hand azure\nactive directory is microsoft's\nmulti-tenant cloud-based directory and\nidentity management service and the\nwindows active directory has five layers\nto store data to store user details and\nto issue the management certifications\non the other hand azure active directory\nintegrates or compresses the five layers\ninto just two layers here windows active\ndirectory works with on-premises servers\nlike applications file servers and\nprinters etc on the other hand azure\nactive directory it works on web-based\nservices that use restful interfaces if\nyou're being hired for the development\nenvironment or for the cloud devops\nsupport environment or even for the\nproduction support environment you might\nfind yourself being asked this question\nwhat are the types of queues offered by\nazure now azure supports two types of\nqueue mechanisms the storage cube and\nthe service bus queue let's talk about\nstorage queue first now the storage\nqueue which are part of azure storage\ninfrastructure it provides a simple rest\nbased\ninterface simple rest based get put and\npeak interface it provides reliable\npersistent messaging within and between\nother services it follows the pub sub\nmodel or pub sub messaging\ninfrastructure and it's best suited for\nusers that need to store more than 80\ngigabit of messages in the queue it can\nprovide a logs for all the transactions\nexecuted against the user's queue so\nthat's what we get with storage queue\nand on the other hand service bus queue\nthe service bus cues are built on top of\nbroader messaging infrastructure and\nthey are designed to integrate\napplications and applications component\nthat can span multiple communication\nprotocols so that way it differs so this\nis good for applications and components\nthat may span multiple communication\nprotocols and even different totally\ndifferent network environments so in\nshort these service buses or the service\nbus queues in azure are part of azure's\nmessaging infrastructure and they\nintegrate applications or application\ncomponents that can actually span\nmultiple different protocols and\nmultiple different network environments\nit also provides and first and first out\nstyle for delivery and the user's queue\nsize has to remain under 80 gigabit\nanother familiar question is what are\nthe advantages of azure resource manager\nnow this resource manager helps us to\nmanage the usage of the application\nresources this question is actually to\ntest how well have you tested how well\nhave you used resource manager and have\ngotten the benefit of it this question\nactually tests how easy it has become\nafter the introduction of resource\nmanager compared to\nwhen doing deployments or when\nprovisioning resources without the\nresource manager so let's get into the\nanswers for the question what are the\nadvantages of azure resource manager the\nin chart resource manager is called arm\nso the arm helps deploy manage and\nmonitor all the resources for an\napplication a solution or a group so all\nthe interconnected application all the\ninterconnected services can be monitored\nas group using resource manager and\nusers can be granted to access to\nresources that they require within a\nresource manager so in an account i can\nhave like 10 different resources created\nby resource manager or a resource group\ncreated by resource managers and i can\nallow deny connection to those services\nor only to those services based on\nwhether the user should be accessing one\nand not accessing the other so that way\nit becomes easy to give access to a\ngroup of application it helps in getting\nbilling details for the group of\nresources now which group is using more\nwhich group is using less and which\ngroup has contributed more to this\nmonth's bill stuff like that so those\ndetails can be obtained using azure zos\nmanager and provisioning resources is\nmade much easier with the help of this\nresource manager another question is how\nhas integrating hybrid cloud been useful\nfor azure well with the use of hybrid\ncloud we get the best of both the worlds\nso what's hybrid cloud it's nothing but\na combining the public cloud and the\nprivate cloud and allowing data and\napplications to be shared between them\nso whenever the compute or the\nprocessing demand fluctuates hybrid\ncloud computing gives businesses the\nability to seamlessly scale their\non-premises infrastructure in the public\ncloud and handle any kind of uh\noverflow in the requirement or overflow\nin handling the application so it really\nhelps it helps it boost the productivity\nof our on-premises application so with\nthe hybrid cloud we get a greater\nefficiency with combination of azure\nservices devops processes and tools for\nthe application running in on-premises\nand by having an hybrid cloud\nenvironment users can take advantage of\na constantly updated azure service and\nother aws marketplace\napplications for their on-premises\nenvironment and the other benefit is\nwith hybrid cloud environment we can\nsimply deploy applications regardless of\nits locations in case of on-premises\nwe'll have to worry about the location\nbut when we expand our on-premises\nenvironment in the cloud and they can or\nwe can pick any of the locations and\nsimply deploy it in them and this\nenables the applications to be created\nat a greater speed what's federating in\nazure sql now this question is very\nspecific about sql how can we scale the\nsql database now this is a very good\nquestion or a valid question or an\nimportant question in the interview\nbecause\nmany customers or companies have\nnot been able to meet the user demand\nbecause they could not scale out the\ndatabases the theory of scaling out or\nadding servers to accommodate the\nincreased workloads and traffic\nis not hard to understand but the\nimplications can be very complicated the\nimplications can be very expensive we're\nwell aware of scaling the web servers\nthat's very common but how do we scale\nthe database so microsoft provides the\ntools and technologies so we can scale\nout the database in the cloud and that's\nwhat is called sql or\nfederation in azure sql so the way we\nscale out the sql database is by sharing\nsharding the database so sharing\nactually enables users to take\nadvantages of the resources in the cloud\nnot only that it allows users to have\ntheir own database or a shared database\namongst each other because we're\ncreating a highly available database\nbecause we're having shards in a\ndatabase it actually reduces the\npossibility of a single point of failure\nfor our database and\nmore importantly because we're sharing\nbecause we're using federation and azure\nsql it provides and cost effective\nscaling of our databases by using cloud\nresources or by using billing only for\nthe cloud resources that we have used so\nno pre-provisioning no over provisioning\nit provisions the right amount and we\npay the right amount let's talk about\nthis one what are the different types of\nstorage offered by azure now the\ndifferent types of storage offered by\nazure are as you already know and as you\ncan see they are azure blob storages\ntable storages file storage and queue\nstorage so let's expand one after the\nother now blob storage are nothing but a\nmassive scalable object storage and\nthat's very good for storing text and\nbinary data and azure blob storage is a\nmicrosoft object storage solution for\nthe cloud a lot of storage is optimized\nfor storing massive massive amount of\nunstructured data that can be in form of\ntext or or in form of binary data so in\nshort blob storage enables users to\nstore unstructured data and those data\ncan be in the format of pictures music\nvideo files and lot more and it stores\nthem along with their metadata and\nanother advantage or another feature\nbenefit that we get from blob storage is\nwhen object is changed it is verified to\nensure it is of the latest version\nnumber one and number two it provides\nmaximum flexibility to optimize the\nuser's storage needs and this\nunstructured data is available to\ncustomers through an url or an rest\nbased object storage so they are the\nbenefits that come along with the blob\nstorage table storage on the other hand\nis an a nosql store for schema-less\nstorage of secured data now this azure\ntable storage is a service that stores\nstructured nosql data in the cloud and\nbecause this table is schema-less it's\nvery easy to save your data it's very\neasy to adapt your data as the need for\nyour application grows and this table\nstorage is very fast and cost effective\nfor many type of applications so some of\nthe some of the type of data that we can\nstore is table storage is good for\nflexible databases like user data for\nweb applications address book storage\ndevice information storage and if you\nwant to store metadata this is a very\ngood use case to store them in azure\ntable storage azure files is another\nstorage here it's an managed file share\nfor cloud or on-premises\ndeployment so file storage provides the\nfile sharing capabilities accessible by\nthe server messaging block protocol and\nthis can be accessed from the cloud and\nthis can be accessed from on-premises as\nwell now here in file storage the data\nis protected by smb\n3.0 and https protocols and the more\nimportant thing is azure takes care of\nmanaging hardware and the operating\nsystem deployments for azure file\nstorage so this additional file storage\ncan be used when we want to burst the\nstorage capacity in on premises so\non-premises the primary and cloud is the\nsecondary or the extended on-premises\nstorage so it actually improves the\non-premises performance and capabilities\nfor our on-premises data center and then\nwe have queues azure queues it's a\nmessaging store for reliable messaging\nbetween the application components so we\nspoke a little about this uh in the\nprevious question so the azure queue\nstorage is a service for storing a large\namount of messages that can be accessed\nfrom anywhere in the world via http or\nhttps protocol in here\nthe a single message can be up to 64\nkilobits in size and in a queue we can\nhave millions of messages and the limit\ncan actually\ngo up if we have not reached the limit\nof the storage account so it's millions\nand millions of requests that can be\nstored in the storage queue or the queue\nstorage so the queue storage in chart\nprovides message queueing for large\nworkloads and it enables users to build\nflexible applications and separate\nthe functions one from another so one\nfailing doesn't affect the other\napplication which is running healthy and\nthis q storage it ensures the\napplication is scalable and less prone\nto individual component failures because\nthey are decoupled separate now it also\nhelps in monitoring the queue which\nensures the customers demands are met so\nqueue is a great place to monitor or a\ngreat component to monitor so we\nunderstand how much peak have we reached\nfor a particular application service or\na container\nwhat is text analysis api in azure\nmachine learning now a text analysis is\nactually an cloud based analytics api\nand it provides an advanced natural\nlanguage processing over the raw text\nand it has got\nfour main functions like the sentiment\nanalysis or and the key phrase analysis\nlanguage uh deduction and few other\nthings now what do you mean by sentiment\nanalysis now sentiment analysis is from\nthe logs from the comments from the text\ncomments that we receive do an analysis\nand find out whether that's a positive\nor a negative statement now if it is a\nthe api the api returns and sentiment\nscore between 0 and 1 and 1 is positive\nand 0 is negative and then in text\nanalysis we have\na key phrase extraction which is it will\nautomatically extract the key phrase to\nuh quickly identify the main points in\nthat\nkey phrase for example if you're\nanalyzing an text which says the food\nwas delicious and there were wonderful\nstuff then the api returns the main\ntalking points of that phrase like food\nfood is the main talking point and\nwonderful stuffs that was a main talking\npoint so that's another feature that\nthis text analysis has and then we have\nlanguage deduction in text analysis but\nirrespective of what you paste it can\ntry to gauge and try to align it to the\n120 or up to 120 languages that it\nsupports so i can simply take text from\nthe internet and i can paste it and text\nanalysis software is going to identify\nthe language and then can run phrase and\nsentiment analysis on those texts right\nso in short text analysis is an api a\nset of web services that can be used for\ntext analysis it can be used to analyze\nunstructured statement sentiment\nanalysis key phrase extraction and lot\nmore and the results are generally\nbetween 0 and 1 and 1 being positive and\n0 being the negative sentiment there is\nno much training or in other words this\nis not as complicated as couple of other\ntext analysis softwares are available in\nthe market we can simply paste we can\nsimply upload the text and we can call\nthe service and it runs a sentiment\nanalysis on it all by itself let's look\nat this question what are the advantages\nof azure queue storage if you're going\nto work in a development environment if\nyou're going to work on an environment\nthat\nembraces devops this could be a question\nwhat are the advantages of azure queue\nstorage now azure queue storage is built\nto flexibly operate the applications and\nseparate the functions between the\napplications that run large workloads so\nwhen we design applications for scale\nthese applications can be decoupled so\nthat they can scale independently you\nknow and thing happening on an\napplication is not dependent on another\napplication and anything happens to an\nsection of the application will not\naffect the other application because\nthey are now decoupled and connected\nthrough the queue storage so the queue\nstorage gives us asynchronous message\nqueuing for communication between the\napplications irrespective of whether\nthey are running in the cloud or whether\nthey are running in desktop or whether\nthey are running on premises or on\nmobile devices so in short this queue\nstorage enables message queueing for\nlarge workloads in a simple and cost\neffective and a durable manner talking\nabout the advantages advantages is it\nprovides rich client libraries for java\nandroid c plus plus php ruby and lot\nother services getting added during\nevery new release from azure and the\nmain advantage again is it enables users\nto build flexible apps and separate the\nfunctions for\nbigger or greater durability again\nintroduction of cues into our\napplication it ensures our users\napplications are scalable and less prone\nto individual component failures meaning\none component failing is not going to\ntake the whole application down right if\none component fails it's just that\ncomponent that stays fails the rest are\nhealthy and the rest are going to\nfunction it also helps us to monitor the\nqueues and ensure the servers aren't\noverhelmed by sudden traffic bursts so\nhow much do i have in the cube kind of\ndetermines\nthe traffic for my application and if\nthe queue is more i can always go and\nauto scale my environment and the queue\nis less i can always go and shrink or\nmake my environment thinner so we can\nsave cost and anytime there is more data\nin the queue i can auto scale monitor\nthe metric and do auto scaling based on\nthat metric so the environment knows\nthat there are more data's coming in i\nneed to expand myself to handle that\nmuch amount of data this is a very\ncommon question what are the two kinds\nof azure web service roles now a service\nrole is a set of managed and load\nbalanced virtual machines that work to\nperform some tasks and based on\nwhat it's going to run on top of it is\nit going to run a web service or is it\ngoing to run worker service defines what\nkind of roles that gets attached or that\ngoes on this virtual machines so we have\ntwo types web role and worker roles the\nweb role is a cloud service role that's\nconfigured to run web applications\ndeveloped on programming languages\ntechnologies and majorly they support\niis internet information service and\nthey support asp.net php windows\ncommunication foundation and so on so\nthat's web roles and these web roles it\nautomatically deploys and hosts\napplication through the user's iis\ninternet information service on the\nother hand worker roles are roles that\nruns applications and service level\ntasks which generally do not require iis\nso is is actually the differentiating\nfactor so in worker roles is not\ninstalled by default the worker roles\nare mainly used to perform supporting\nbackground process along with web roles\nand do tasks automatically compressing\nor uploading the images running scripts\nand\nor doing some changes in the database\ngetting new messages from the queue and\nprocessing a lot more you know the work\nthe applications are the work that does\nnot require ies that's what this\nworker role does again the main\ndifference between the web role and the\nworker role is that the web role\nautomatically deploys and hosts your\napplication through is whereas the\nworker role does not use iis and runs\nour application as standalone this is\nanother classic question what is azure\nservice fabric so azure service fabric\nis actually a distributed system\nplatform that makes it easy to pack\ndeploy and manage scalable and reliable\nmicroservices and containers now service\nfabric also addresses some of the\nsignificant challenges in developing and\nmanaging cloud native applications and\nthe problem that it addresses and fixes\nis now developers and administrators can\navoid complex infrastructure problems\nand focus on implementing mission\ncritical and demanding workloads that\ncan be scaled and that can be managed\nthrough the console or from the single\nplace in short service fabric provides a\nplatform that makes the process of\ndeveloping microservices and managing\napplication life cycle lot easier and\nthe advantages of service fabric is that\nnow we can produce application with\nfaster time to market because all the\nworry about the infrastructure is taken\naway from us we don't have to design an\ninfrastructure all that we need to worry\nabout is simply the application and the\napplication life cycle again the\nadvantage is it supports\nwindows it supports linux not only that\nit supports servers on-premises and in\nthe cloud with service fabric we can\nscale up our environment to even\nthousand machines in just a single\ncommand or if there is an immediate need\nfor a thousand machines i can\nimmediately scale them up 2 000 machines\nthat's possible with service fabric now\nlet's look at this question you can\nexpect this question if the customer is\nrunning hybrid environment meaning\nhaving some of the applications and\non-premises and running some of the\napplications from the cloud and for some\nreason when classifying the application\nthat goes to the cloud and that stays on\npremises they have decided to keep the\ndatabase in-house so in that environment\na lot of customers do that so in that\nenvironment this is a classic and a\nscenario based question a client wants\nthe front end of their application to be\nhosted on azure in the cloud and wants\nthe database to be hosted in on-premises\nfor security reasons or to have full\ncontrol on their databases how do we go\nabout suggesting a solution for this\ncustomer the ideal solution in this\nscenario is to use\nthe v-net based point-to-site vpn\nsolution so all the front-end\napplications will be in the cloud and\nthey'll be hosted in a v-net and from\nthe we net they'll be connecting to the\ndatabase through and point to site vpn\nso the traffic and the writings and the\nleads are not coming through the\ninternet but through a point to site vpn\nlink that's connecting the azure vnet\nand the on-premises environment and this\nmodel or this approach or this solution\nis best suited for scenarios where there\nare only a limited number of resource\nthat needs to be connected\nbetween on-premises and the cloud this\nis a very common question what's azure\ntraffic manager of course we no more\nrunning applications on a single server\nwe no more running applications on or\nfrom a single environment right the same\napplication is being run from multiple\nenvironments within azure and it can be\nrunning from azure and on-premise as\nwell so multiple environments between\nazure and on-premises a lot of customers\nhave such environment and if you are\nfacing an interview with such customer\nthis could be an ideal question what is\nazure traffic manager now the azure\ntraffic manager is a dns based\ntraffic load balancer that actually\nenables us to distribute traffic between\nservices across azure global regions and\nby doing this it provides a good\navailability and a good responsiveness\nto the application and this traffic\nmanager it uses dns to direct client\nrequests to the most appropriate service\nendpoint based on the traffic routing\nlogic and the health of the endpoints\nthat it maintains so in short this\ntraffic manager is a load balancer that\nenables users to provide high\navailability and responsiveness by\ndistributing traffic in an optimal\nmanner across the azure when we run the\nsame application in different regions so\nsome of the advantages or some of the\nuse cases of using azure traffic manager\nis it provides multiple automatic\nfailover options it also helps with\nreduced downtime it also helps with the\ndistribution of user traffic across\nmultiple locations so one location is\nnot overloaded and then it helps with\nusers knowing from where our customers\nare getting connected from that's\nanother big use case with azure traffic\nmanager let's look at this question\nright this is an ideal question now\nthere are group of servers connected\ntogether within an virtual network and\nnow we need to\nmove them or create a separation between\nthem how do you go about achieving it so\nthe question goes like this you need to\nisolate network traffic among vms in a\nsubnet which is part of a virtual\nnetwork with little downtime and impact\non the user so that's the given scenario\nand the best way we can do it is create\na new virtual network and move all the\nvms in that subnet to the new virtual\nnetwork now this feature is not possible\nwith a lot of other cloud service\nproviders like aws and a lot of other\nproviders now in those environments we\nmight need to shut down we might need to\nstop the vm create a new vm based on the\nimage and it's an hefty process but here\nin azure i can simply move the vms from\none subnet to another virtual network\nwithout needing for any additional\nsecurity like the network security group\ni can simply isolate them if i need to\nby creating a simple new virtual network\nand moving the servers to the new\nvirtual network look at this one this is\nanother common question with respect to\nazure what is public private and hybrid\ncloud so this is really to test how well\nhave you understood the different cloud\nofferings in the market public private\nand hybrid or at least the three basic\nofferings in the market public private\nand hybrid cloud now the public cloud is\nthe most common way of deploying cloud\ncomputing applications and\nit has resources like servers storage\nand are owned and operated by third\nparty cloud service providers like\nmicrosoft azure microsoft azure is a\nvery good example of public cloud so\nhere every component that the user is\nusing is running only on azure that's\npublic cloud right let me talk to you\nabout some of the advantages of public\ncloud some of the advantages is low cost\nbecause there's no need to purchase\nhardware or software and we pay only for\nthe services that we use in public cloud\nand there is literally no maintenance\nbecause\nthe service provider maintains the\nenvironment for us and with public cloud\nwe have nearly unlimited scalability\nmeaning we can get resources on demand\nand can meet our business requirements\non demand and the public clouds are very\nhighly reliable because they have a vast\nnetwork of servers and they ensure that\nour application does not fail so there\nare some advantages of public cloud\nlet's talk about private cloud now\nprivate cloud consists of compute\nresources used extensively by one\nbusiness or one organization now this\nprivate cloud can be physically located\nat our organizations on-site data center\nor it can be hosted by a third-party\nservice provider whichever the case the\nprivate cloud services and\ninfrastructure are always maintained on\na private network and they're maintained\non hardware and software that are\ndedicated solely for one organization or\nsolely for your organization so in short\nprivate cloud in azure is azure services\nbeing run within an on-premises data\ncenter or on-premises data center used\nby the user to host systems or\napplications and some of the advantages\nsome of the advantages is it gives more\nsecurity resources are not shared with\nothers so a higher level of control and\nsecurity over our resource and\napplication is possible and then we have\nhybrid cloud now hybrid cloud is the\nbest of both worlds so it combines the\nfeatures of both public and private\ncloud and some of the user components\nare being run on azure and others within\non-premises data center so they kind of\nshare the resources in other words they\nkind of share the application half of\nthe application would be running in on\npremises and half of them would be in\nthe cloud and they would be working in\nharmony to support the application and\nthe business need so that's hybrid cloud\nthis is one another good example\nquestion that wants to test how well you\npick services or how well have you\nunderstood the azure products and\nservices and are picking the right\nservice for the need so the question\nwould go like this what kind of storage\nis best suited to handle unstructured\ndata\nthere are a lot of storage options\navailable and the requirement here is\nwhat or which one would you choose for\nunstructured data the answer for that\nquestion is blob storage because blob\nstorage is designed to support\nunstructured data it works in this way\nit places the data into different tiers\nbased on how often they are accessed\ndifferent tier means different\nperformance different performance means\ndifferent cost associated with it so a\nlot of add-on advantages will be get\nwhen we use blob storage for\nunstructured data in addition to it any\ntype of unstructured data can be stored\nin blob storage this is not true with\ncouple of other storage options that we\nhave in azure only with blob storage we\ncan store any type of unstructured data\nand the data integrity is maintained\nevery time an object is changed in the\nblob storage and the best part is the\nblob storage helps increase applications\nperformance and reduces the bandwidth\nconsumption and reduces the bandwidth\nconsumption for that application so they\nare the benefits that we get for block\nstorage and blob storage are the ones\nthat are well suited for unstructured\ndata and that's what your answer should\nbe it's really an five-step process and\nif you've worked and if we have done\nsome labs some basic labs with azure you\ncan easily answer this question so it's\na five step process first step is to log\ninto the azure the second one is to\ncreate an\nresource resource or a resource manager\nand within the resource manager you will\nbe selecting the resource and then pick\nthe offering system do you want windows\nor linux and within windows what's the\nflavor you want or within linux what's\nthe flavor you want so decide on it and\nthen\nentering the relevant information\nrelevant information like the\nname of the\ninstance or the vm that we're going to\nlaunch and the password the url that\ngoes with it and couple of other\nrelevant information that goes gets\nitself attached with the\nvm and then select the size of the\nvirtual machine different size different\nuh\ntypes available for the kind of\napplication and for the intensity of the\napplication that will be running on top\nof it so select the virtual select the\nsize of the virtual machine review\neverything whether they're good or not\nif there are any changes required go\nback and edit them and then come back\nand launch and your vm is there for you\nto start working within like three or\nfour minutes not even five minutes\nwithin three or four minutes it gets\nready and you can start working on it so\nit's a quick and it's a five step\nprocess and you should be able to answer\nit easily if you have done a few labs\nin azure let's now look at some\nscenario-based question you've been\nposed with a scenario so we thought\nthrough it and we picked some common\nscenario based question that are being\nasked in interview and i thought we'll\npresent it for you with the answers with\nexplanation so you can get benefited\nthrough it so let's look at this\nquestion you're asked to make sure your\nvirtual machines are able to communicate\nsecurely with each other to ensure\nsecurity or to have good amount of\nsecurity what would you do and the\ncorrect and the best answer for this\nwould be using virtual network in azure\nwhich enables us to communicate with the\ninternet securely which enables us to\ncommunicate with the on-premises data\ncenter in a secure fashion so the\nadvantage of using virtual network is\nusers can create their own private\nnetwork users can pick their own private\nip ranges users can create their own\nsubnet users can create their own\nrouting between those two subnets a lot\nmore goes into that virtual network so\nit's very customizable and the users are\nprovided with an isolated and highly\nsecure environment for applications it's\ncompletely isolated from other customers\nit's completely isolated from other\napplications that are running in other\nvirtual network that we own so within\nour account we can have multiple virtual\nnetworks and one application running on\na virtual machine is completely isolated\nfrom other applications running on other\nvirtual machines and of course all\ntraffic stays within the azure network\nas your virtual machine or within the\nazure network depending on how you set\nup the routing if you have set up a\nrouting to go or reach the internet it's\ngoing to go otherwise it's going to stay\nwithin azure if you have set up routing\nto reach on-premises then it's going to\ngo and reach on-premises otherwise it's\nnot going to go and reach on-premises\nit's going to stay within the azure and\nit also allows users to design their own\nnetwork like we already discussed\npicking up ips picking routing you know\npicking subnets you know how many\nservers should be present in that\nparticular subnet or how many servers\nshould that subnet accommodate the size\nof the subnet the ip ranges the netting\nthe masking of ips creating of vpn all\nthat's possible with the virtual network\nso it really allows users to design\ntheir own network and using virtual\nmachine is how we secure applications in\nthe cloud let's look at this other\nscenario how do you ensure that every\ntime a user logs in they are not asked\nto re-enter the password as part of\nauthentication so you really don't want\nyour users to re-enter the password\nevery time they log in to a different\napplication well all the applications\nhave their authentication mechanism in\nplace all of them wants to authenticate\nthe user before they log in ensuring the\nuser does not log in every time does not\nmean that wiping away all the\nauthentication and authorization that's\npresent in that application you still\nneed that in place but how do you make\nthe user hassle free\nso they're not asked to re-enter the\npassword or the same password again and\nagain let's look at the options\navailable the first one is to enable\nmicrosoft account authentication well\nit's not going to fix because with that\nthe user will still need to re-enter the\nusername and password at deploy express\nroute it's not going to fix either\nbecause express route is a network level\nservice that connects on-premises to the\ncloud so that has got nothing to do with\nprompting or not prompting for password\nand then we have a setup vpn between\non-premises data center and azure set up\n80 domain controller in vm and implement\nintegrated windows authentication well\nyou can use the same username and\npassword for on-premises and the cloud\nbut this setup the the vpn and the ad\ncontroller setup it's not going to stop\nyou asking for repeated passwords so\nthis is all about\nusing the same password in on premises\nand in the cloud and this has got\nnothing to do with\nnot prompting the user to re-enter the\npassword all right that's same password\nis different from not prompting the user\nto re-enter the password they are two\ndifferent scenarios so\nthat is also out of the equation and the\nlast one is configure ad sync to use\nsingle sign-on that's the right one so\nwhen we configure the ad to use a single\nsign on then it's going it's not going\nto ask for the username and password\nevery time we access an application\nbecause we have logged in and that login\nis going to stay active for like 24\nhours or so depending on how you\nconfigure it and within that time you\ncan access a lot of other applications\nand it's not going to ask for the\nusername and password because you\nalready have a single signed on and you\nhave signed in using the right\ncredentials let's look at this one you\nneed to ensure that virtual machines\nremain available while migrating to\nazure what would be the appropriate\nservice to use right let's look at the\noptions traffic manager traffic manager\nis\nis literally a dna service and then\nlet's look at the other one update\ndomains it again has to do with traffic\nmanager updating the url so now the\ntraffic manager gets updated and then\nstarts sending requests to that\nparticular url it's gonna take some\ndowntime because when we update the url\nthey will have to be populated to all\ndifferent places and it takes time so\nwithin that time any user trying to\naccess it's going to fail and then we\nhave express route and cloud services\nexpress route could be the in fact it's\nthe right answer because express route\nit's an extension of our on-premises and\ncloud environment and in this question\nit really comes out from a customer\nwho's having an hybrid environment so\nthey have applications running in\non-premises they have applications\nrunning in the cloud and they want to\nhave a way to migrate applications from\non-premises to the cloud in other words\nkind of do a cut over between\non-premises and the cloud and this\nexpress route is a service that connects\nbetween on-premises and the cloud so\nwhen you do the cut over the traffic is\nnow sent to the cloud instead of being\nhandled in on-premises in fact the\nservices and the application is getting\ndown are getting shut down in on\npremises so the request will come in the\nsame pattern instead of they being\nhandled in on-premises they are now\nrouted to the cloud using express route\nand the api calls get addressed or the\nthe queries gets answered in the cloud\nthrough the express route service look\nat this question you are an\nadministrator for a website called web\ngame and you are required to validate\nand deploy changes made to your website\nby your development team with minimum\ndowntime so the real question is how do\nyou validate the deployment changes\nthat's made by the development team\nlet's look at the options create a new\nlinked resource create a staging\nenvironment for the site enable remote\ndebugging on the website and then create\na new website well why would you want to\ncreate a new website just to validate\nthe changes and doing a remote debugging\nis not going to help because debugging\nonly captures logs of the changes\nhappening it does not do anything with\nvalidating the changes create a staging\nenvironment could be or is the right\nanswer because when we have staging\nenvironments anything that we run on\nproduction can be run on staging\nenvironment and any failures that would\nhappen in production if we simply run it\nin production can be captured when we\nrun the application in the staging\nenvironment so that way staging\nenvironment is a very helpful and useful\nservice and that way i can catch\nany errors in other words i can validate\nthe changes that were done by my\ndevelopment team before i move it to\nproduction and that reduces the downtime\nin the production environment look at\nthis one last question that we have for\nyou it's\na standard tier application is used\nacross the world and uses azure website\nstandard tier it uses large amount of\nimage files so you can get it this could\nbe an e-commerce website which has a lot\nof pictures in it and this is causing\nthe application to load slow how can we\nhandle this situation let's look at the\noptions given configure blob storage\nwith custom domain well this application\nhas pictures but the pictures only the\npictures is not all that the application\nhas all right so configuring blob\nstorage might not help this could be an\nvery interactive website and that can't\nbe run from blob storage let's look at\nthe other options configure azure\nwebsite auto scaling to increase\ninstances at high loads now it's the\npicture that's causing issues for the\nwebsite it's not the cpu or it's not the\nmemory unavailable memory not enough\nthat's causing the application to be\nslow so we need to identify what's\ncausing the application to be slow so\nit's not the cpu it's not the memory so\nconfigure azure for auto scaling is not\ngonna help and then what are the other\noptions let's see configure azure cdn to\ncache all responses from the\napplications web endpoint a cdn could be\nthe right answer but look at that it\nsays a cdn to cache all responses from\nthe applications web endpoint cdn is not\ndesigned for that though it can do it\nthat's not the best way to use cdn to\ncapture all responses from the\napplication's web endpoint the proper\ndesign for cdn would be to cache the\nfrequently used ones in other words\ncache the static content which are\nphotos videos logos and pictures and lot\nmore static content that never changes\nlet's look at the last option configure\nazure cdn to cache site images and\ncontent stored in azure blob storage\nabsolutely correct so here we will have\nto redesign the application to store the\npictures high quality lazy loading or\nslow loading pictures because of the\nhigh quality and the bigger size so\nstore them in cdn and then the content\nlet it be stored in azure blob storage\nthat's the right way of designing the\napplication and if we do it this\napplication is going to run faster or\nthe application is going to respond\nfaster to the users thanks guys with\nthat we've reached the end of this\ncomplete cloud computing course i hope\nyou enjoyed this video do like and share\nit thank you for watching and stay tuned\nfor more from simply learn\n[Music]\nyou\n",
  "words": [
    "music",
    "hello",
    "guys",
    "welcome",
    "complete",
    "cloud",
    "computing",
    "course",
    "simply",
    "learn",
    "video",
    "covering",
    "important",
    "concepts",
    "related",
    "cloud",
    "computing",
    "samuel",
    "cloud",
    "architect",
    "15",
    "years",
    "experience",
    "cloud",
    "domain",
    "take",
    "fundamentals",
    "cloud",
    "computing",
    "talk",
    "cloud",
    "lifecycle",
    "important",
    "topics",
    "aws",
    "microsoft",
    "azure",
    "google",
    "cloud",
    "platform",
    "also",
    "take",
    "look",
    "become",
    "aws",
    "cloud",
    "architect",
    "also",
    "look",
    "differences",
    "three",
    "platforms",
    "finally",
    "take",
    "important",
    "interview",
    "questions",
    "might",
    "face",
    "cloud",
    "interview",
    "first",
    "introduction",
    "cloud",
    "computing",
    "instructor",
    "samuel",
    "hi",
    "sam",
    "simply",
    "learn",
    "work",
    "cloud",
    "architect",
    "trainer",
    "let",
    "welcome",
    "learning",
    "video",
    "called",
    "cloud",
    "computing",
    "learn",
    "cloud",
    "computing",
    "also",
    "learning",
    "things",
    "cloud",
    "computing",
    "benefits",
    "cloud",
    "computing",
    "different",
    "types",
    "cloud",
    "computing",
    "available",
    "famous",
    "companies",
    "using",
    "cloud",
    "computing",
    "getting",
    "benefited",
    "going",
    "learn",
    "cloud",
    "computing",
    "existed",
    "need",
    "servers",
    "application",
    "let",
    "say",
    "basic",
    "web",
    "server",
    "come",
    "easy",
    "owner",
    "business",
    "know",
    "would",
    "guessed",
    "already",
    "running",
    "successful",
    "business",
    "looking",
    "hot",
    "fresh",
    "brewed",
    "coffee",
    "desk",
    "lots",
    "lots",
    "paperwork",
    "review",
    "approve",
    "smart",
    "smart",
    "looking",
    "really",
    "smart",
    "worker",
    "office",
    "called",
    "mark",
    "one",
    "fine",
    "day",
    "called",
    "mark",
    "said",
    "would",
    "like",
    "business",
    "online",
    "words",
    "would",
    "like",
    "take",
    "business",
    "online",
    "needed",
    "website",
    "first",
    "thing",
    "mark",
    "puts",
    "knowledge",
    "together",
    "comes",
    "requirement",
    "boss",
    "would",
    "need",
    "lots",
    "servers",
    "databases",
    "softwares",
    "get",
    "business",
    "online",
    "means",
    "lot",
    "investment",
    "mark",
    "also",
    "adds",
    "boss",
    "need",
    "invest",
    "acquiring",
    "technical",
    "expertise",
    "manage",
    "hardware",
    "software",
    "purchasing",
    "also",
    "monitor",
    "infrastructure",
    "hearing",
    "boss",
    "close",
    "dropping",
    "plan",
    "go",
    "online",
    "made",
    "decision",
    "chose",
    "check",
    "alternatives",
    "spend",
    "lot",
    "money",
    "spend",
    "acquiring",
    "technical",
    "expertise",
    "mark",
    "opened",
    "discussion",
    "boss",
    "explained",
    "boss",
    "cloud",
    "computing",
    "explained",
    "boss",
    "thing",
    "going",
    "explain",
    "time",
    "cloud",
    "computing",
    "cloud",
    "computing",
    "cloud",
    "computing",
    "use",
    "network",
    "remote",
    "servers",
    "hosted",
    "internet",
    "store",
    "manage",
    "process",
    "data",
    "rather",
    "locally",
    "using",
    "local",
    "server",
    "cloud",
    "computing",
    "also",
    "storing",
    "data",
    "internet",
    "anywhere",
    "accessing",
    "data",
    "anywhere",
    "throughout",
    "internet",
    "companies",
    "offer",
    "services",
    "called",
    "cloud",
    "providers",
    "cloud",
    "computing",
    "also",
    "able",
    "deploy",
    "manage",
    "applications",
    "services",
    "network",
    "throughout",
    "globe",
    "manage",
    "web",
    "management",
    "configuration",
    "portal",
    "words",
    "cloud",
    "computing",
    "service",
    "providers",
    "give",
    "us",
    "ability",
    "manage",
    "applications",
    "services",
    "global",
    "network",
    "internet",
    "example",
    "providers",
    "amazon",
    "web",
    "servers",
    "microsoft",
    "azure",
    "known",
    "cloud",
    "computing",
    "let",
    "talk",
    "benefits",
    "cloud",
    "computing",
    "need",
    "tell",
    "cloud",
    "benefits",
    "driving",
    "cloud",
    "adoption",
    "like",
    "anything",
    "recent",
    "days",
    "want",
    "resource",
    "service",
    "cloud",
    "available",
    "almost",
    "instantaneously",
    "ready",
    "production",
    "almost",
    "time",
    "reduces",
    "go",
    "live",
    "date",
    "product",
    "service",
    "hit",
    "market",
    "almost",
    "instantaneously",
    "compared",
    "legacy",
    "environment",
    "companies",
    "started",
    "generate",
    "revenue",
    "almost",
    "next",
    "day",
    "day",
    "planning",
    "buying",
    "right",
    "size",
    "hardware",
    "always",
    "challenge",
    "legacy",
    "environment",
    "careful",
    "might",
    "need",
    "live",
    "hardware",
    "undersized",
    "rest",
    "lives",
    "cloud",
    "buy",
    "hardware",
    "use",
    "hardware",
    "pay",
    "time",
    "use",
    "hardware",
    "fit",
    "requirement",
    "release",
    "start",
    "using",
    "better",
    "configuration",
    "pay",
    "time",
    "use",
    "new",
    "better",
    "configuration",
    "legacy",
    "environments",
    "forecasting",
    "demand",
    "job",
    "cloud",
    "let",
    "monitoring",
    "automation",
    "tool",
    "work",
    "rapidly",
    "scale",
    "resources",
    "based",
    "need",
    "r",
    "resources",
    "services",
    "data",
    "accessed",
    "anywhere",
    "long",
    "connected",
    "internet",
    "even",
    "tools",
    "techniques",
    "available",
    "let",
    "work",
    "offline",
    "sync",
    "whenever",
    "internet",
    "available",
    "making",
    "sure",
    "data",
    "stored",
    "durable",
    "storage",
    "secure",
    "fashion",
    "talk",
    "business",
    "cloud",
    "answers",
    "million",
    "dollar",
    "question",
    "cloud",
    "data",
    "stored",
    "highly",
    "durable",
    "storage",
    "replicated",
    "multiple",
    "regions",
    "want",
    "data",
    "store",
    "encrypted",
    "secured",
    "fashion",
    "beyond",
    "imagine",
    "local",
    "data",
    "centers",
    "let",
    "bleed",
    "discussion",
    "types",
    "cloud",
    "computing",
    "lately",
    "multiple",
    "ways",
    "categorize",
    "cloud",
    "computing",
    "ever",
    "growing",
    "categories",
    "six",
    "sort",
    "stand",
    "know",
    "categorizing",
    "cloud",
    "based",
    "deployments",
    "categorizing",
    "cloud",
    "based",
    "services",
    "deployments",
    "categorizing",
    "based",
    "implemented",
    "know",
    "private",
    "public",
    "hybrid",
    "categorizing",
    "based",
    "servers",
    "provides",
    "infrastructure",
    "service",
    "platform",
    "service",
    "software",
    "service",
    "let",
    "look",
    "one",
    "one",
    "let",
    "talk",
    "different",
    "types",
    "cloud",
    "based",
    "deployment",
    "models",
    "first",
    "public",
    "cloud",
    "everything",
    "stored",
    "accessed",
    "internet",
    "internet",
    "users",
    "proper",
    "permissions",
    "given",
    "access",
    "applications",
    "resources",
    "public",
    "cloud",
    "literally",
    "nothing",
    "beat",
    "hardware",
    "software",
    "everything",
    "managed",
    "provider",
    "aws",
    "azure",
    "google",
    "examples",
    "public",
    "cloud",
    "private",
    "cloud",
    "hand",
    "private",
    "cloud",
    "infrastructure",
    "exclusively",
    "single",
    "organization",
    "organizations",
    "choose",
    "run",
    "cloud",
    "locally",
    "choose",
    "outsource",
    "public",
    "cloud",
    "provider",
    "managed",
    "services",
    "done",
    "service",
    "infrastructure",
    "maintained",
    "private",
    "network",
    "examples",
    "vmware",
    "cloud",
    "aws",
    "products",
    "good",
    "example",
    "private",
    "cloud",
    "hybrid",
    "cloud",
    "taken",
    "things",
    "whole",
    "new",
    "level",
    "hybrid",
    "cloud",
    "get",
    "benefit",
    "public",
    "private",
    "cloud",
    "organizations",
    "choose",
    "keep",
    "applications",
    "locally",
    "application",
    "present",
    "cloud",
    "one",
    "good",
    "example",
    "nasa",
    "uses",
    "hybrid",
    "cloud",
    "uses",
    "private",
    "cloud",
    "store",
    "sensitive",
    "data",
    "uses",
    "public",
    "cloud",
    "store",
    "share",
    "data",
    "sensitive",
    "confidential",
    "let",
    "discuss",
    "cloud",
    "based",
    "service",
    "model",
    "first",
    "broader",
    "category",
    "infrastructure",
    "service",
    "would",
    "rent",
    "servers",
    "network",
    "storage",
    "pay",
    "hourly",
    "basis",
    "access",
    "resources",
    "provision",
    "root",
    "level",
    "access",
    "well",
    "ec2",
    "aws",
    "good",
    "example",
    "vm",
    "root",
    "level",
    "access",
    "os",
    "admin",
    "access",
    "hardware",
    "next",
    "type",
    "service",
    "model",
    "would",
    "platform",
    "service",
    "model",
    "providers",
    "give",
    "platform",
    "deploy",
    "codes",
    "applications",
    "running",
    "need",
    "manage",
    "codes",
    "infrastructure",
    "software",
    "service",
    "cloud",
    "providers",
    "sell",
    "end",
    "product",
    "software",
    "application",
    "directly",
    "buy",
    "software",
    "subscription",
    "basis",
    "infra",
    "platform",
    "end",
    "product",
    "software",
    "functioning",
    "application",
    "pay",
    "hours",
    "use",
    "software",
    "client",
    "maintains",
    "full",
    "control",
    "software",
    "maintain",
    "equipment",
    "amazon",
    "azure",
    "also",
    "sell",
    "products",
    "software",
    "service",
    "chart",
    "sort",
    "explains",
    "difference",
    "four",
    "models",
    "starting",
    "infrastructure",
    "service",
    "platform",
    "service",
    "software",
    "service",
    "resource",
    "managed",
    "us",
    "huge",
    "premises",
    "towards",
    "left",
    "watch",
    "little",
    "less",
    "infrastructure",
    "service",
    "move",
    "towards",
    "right",
    "reduced",
    "platform",
    "service",
    "really",
    "nothing",
    "manage",
    "comes",
    "software",
    "service",
    "buy",
    "software",
    "infrastructure",
    "component",
    "attached",
    "let",
    "talk",
    "life",
    "cycle",
    "cloud",
    "computing",
    "solution",
    "first",
    "thing",
    "life",
    "cycle",
    "solution",
    "cloud",
    "solution",
    "get",
    "proper",
    "understanding",
    "requirement",
    "say",
    "get",
    "requirement",
    "said",
    "get",
    "proper",
    "understanding",
    "requirement",
    "vital",
    "able",
    "properly",
    "pick",
    "right",
    "service",
    "offered",
    "provider",
    "getting",
    "sound",
    "understanding",
    "next",
    "thing",
    "would",
    "define",
    "hardware",
    "meaning",
    "choose",
    "compute",
    "servers",
    "provide",
    "right",
    "support",
    "resize",
    "compute",
    "capacity",
    "cloud",
    "run",
    "application",
    "programs",
    "getting",
    "sound",
    "understanding",
    "requirement",
    "helps",
    "picking",
    "right",
    "hardware",
    "one",
    "size",
    "fit",
    "different",
    "services",
    "hardwares",
    "different",
    "needs",
    "might",
    "like",
    "ec2",
    "looking",
    "lambda",
    "looking",
    "serverless",
    "computing",
    "ecs",
    "provides",
    "containerized",
    "service",
    "lot",
    "hardware",
    "available",
    "pick",
    "right",
    "hardware",
    "suits",
    "requirement",
    "third",
    "thing",
    "define",
    "storage",
    "choose",
    "appropriate",
    "storage",
    "service",
    "backup",
    "data",
    "separate",
    "storage",
    "service",
    "archive",
    "data",
    "locally",
    "within",
    "cloud",
    "internet",
    "choose",
    "appropriate",
    "storage",
    "one",
    "separately",
    "backup",
    "called",
    "s3",
    "one",
    "separately",
    "archival",
    "glaciers",
    "know",
    "knowing",
    "difference",
    "really",
    "helps",
    "picking",
    "right",
    "service",
    "right",
    "kind",
    "need",
    "define",
    "network",
    "define",
    "network",
    "securely",
    "delivers",
    "data",
    "video",
    "applications",
    "define",
    "identify",
    "network",
    "services",
    "properly",
    "example",
    "vpc",
    "network",
    "route",
    "53",
    "dns",
    "direct",
    "connection",
    "private",
    "p2p",
    "line",
    "office",
    "aws",
    "data",
    "center",
    "set",
    "right",
    "security",
    "services",
    "im",
    "authentication",
    "authorization",
    "kms",
    "data",
    "encryption",
    "rest",
    "variety",
    "security",
    "products",
    "available",
    "got",
    "pick",
    "right",
    "one",
    "suits",
    "need",
    "variety",
    "deployment",
    "automation",
    "monitoring",
    "tools",
    "pick",
    "example",
    "cloud",
    "watch",
    "monitoring",
    "auto",
    "scaling",
    "elastic",
    "cloud",
    "formation",
    "define",
    "management",
    "process",
    "tools",
    "complete",
    "control",
    "cloud",
    "environment",
    "define",
    "management",
    "tools",
    "monitors",
    "aws",
    "resources",
    "custom",
    "applications",
    "running",
    "aws",
    "platform",
    "variety",
    "deployment",
    "automation",
    "monitoring",
    "tools",
    "pick",
    "like",
    "cloud",
    "watch",
    "monitoring",
    "auto",
    "scaling",
    "automation",
    "cloud",
    "formation",
    "deployment",
    "knowing",
    "help",
    "defining",
    "life",
    "cycle",
    "cloud",
    "computing",
    "solution",
    "properly",
    "similarly",
    "lot",
    "tools",
    "testing",
    "process",
    "like",
    "code",
    "star",
    "code",
    "build",
    "code",
    "pipeline",
    "tools",
    "build",
    "test",
    "deploy",
    "code",
    "quickly",
    "finally",
    "everything",
    "set",
    "done",
    "click",
    "analytic",
    "service",
    "analyzing",
    "visualizing",
    "data",
    "using",
    "analytics",
    "services",
    "start",
    "querying",
    "data",
    "instantly",
    "get",
    "result",
    "want",
    "visually",
    "view",
    "happenings",
    "environment",
    "pick",
    "antenna",
    "tools",
    "analytics",
    "emr",
    "elastic",
    "mapreduce",
    "cloud",
    "search",
    "thanks",
    "guys",
    "samuel",
    "rahul",
    "take",
    "us",
    "full",
    "course",
    "explain",
    "basic",
    "framework",
    "amazon",
    "web",
    "services",
    "explore",
    "important",
    "services",
    "like",
    "ec2",
    "lambda",
    "s3",
    "iam",
    "cloudformation",
    "also",
    "talk",
    "azure",
    "popular",
    "services",
    "hello",
    "everyone",
    "let",
    "introduce",
    "sam",
    "cloud",
    "architect",
    "trainer",
    "glad",
    "equally",
    "excited",
    "talk",
    "walk",
    "session",
    "aws",
    "talk",
    "services",
    "offerings",
    "companies",
    "get",
    "benefited",
    "migrating",
    "applications",
    "infra",
    "aws",
    "aws",
    "let",
    "talk",
    "let",
    "talk",
    "life",
    "without",
    "cloud",
    "provider",
    "case",
    "life",
    "without",
    "aws",
    "let",
    "walk",
    "back",
    "picture",
    "things",
    "back",
    "2000",
    "long",
    "ago",
    "lot",
    "changes",
    "lot",
    "changes",
    "better",
    "happened",
    "since",
    "time",
    "back",
    "2000",
    "request",
    "new",
    "server",
    "happy",
    "thing",
    "lot",
    "money",
    "lot",
    "validations",
    "lot",
    "planning",
    "involved",
    "getting",
    "server",
    "online",
    "running",
    "even",
    "finally",
    "got",
    "server",
    "said",
    "done",
    "lot",
    "optimization",
    "needs",
    "done",
    "server",
    "make",
    "worth",
    "get",
    "good",
    "return",
    "investment",
    "server",
    "even",
    "optimized",
    "good",
    "return",
    "investment",
    "work",
    "still",
    "done",
    "often",
    "frequent",
    "increase",
    "decrease",
    "capacity",
    "know",
    "even",
    "news",
    "website",
    "getting",
    "popular",
    "getting",
    "hits",
    "still",
    "bittersweet",
    "experience",
    "need",
    "add",
    "servers",
    "environment",
    "means",
    "going",
    "cost",
    "even",
    "thanks",
    "present",
    "day",
    "cloud",
    "technology",
    "situation",
    "happen",
    "today",
    "new",
    "server",
    "almost",
    "ready",
    "ready",
    "instantaneously",
    "swift",
    "tools",
    "technologies",
    "amazon",
    "providing",
    "uh",
    "provisioning",
    "server",
    "instantaneously",
    "adding",
    "type",
    "workload",
    "top",
    "making",
    "storage",
    "server",
    "secure",
    "know",
    "creating",
    "durable",
    "storage",
    "data",
    "store",
    "cloud",
    "never",
    "gets",
    "lost",
    "features",
    "amazon",
    "got",
    "back",
    "let",
    "talk",
    "aws",
    "lot",
    "definitions",
    "going",
    "put",
    "together",
    "simple",
    "precise",
    "definition",
    "much",
    "possible",
    "let",
    "iron",
    "cloud",
    "still",
    "runs",
    "hardware",
    "right",
    "certain",
    "features",
    "infrastructure",
    "cloud",
    "infrastructure",
    "makes",
    "cloud",
    "cloud",
    "makes",
    "aws",
    "cloud",
    "provider",
    "get",
    "services",
    "technologies",
    "features",
    "benefits",
    "get",
    "local",
    "data",
    "center",
    "like",
    "know",
    "security",
    "compute",
    "capacity",
    "databases",
    "fact",
    "know",
    "get",
    "even",
    "cool",
    "features",
    "like",
    "content",
    "caching",
    "various",
    "global",
    "locations",
    "around",
    "planet",
    "features",
    "best",
    "part",
    "get",
    "get",
    "everything",
    "pay",
    "go",
    "model",
    "less",
    "use",
    "less",
    "pay",
    "use",
    "less",
    "pay",
    "per",
    "unit",
    "attractive",
    "right",
    "applications",
    "provision",
    "aws",
    "reliable",
    "run",
    "reliable",
    "infrastructure",
    "scalable",
    "runs",
    "infrastructure",
    "flexible",
    "designs",
    "design",
    "options",
    "available",
    "cloud",
    "let",
    "talk",
    "happened",
    "aws",
    "launched",
    "2002",
    "amazon",
    "know",
    "online",
    "retail",
    "store",
    "wanted",
    "sell",
    "remaining",
    "unused",
    "infrastructure",
    "service",
    "offering",
    "customers",
    "buy",
    "use",
    "know",
    "sell",
    "infrastructure",
    "service",
    "idea",
    "sort",
    "clicked",
    "aws",
    "launched",
    "first",
    "product",
    "first",
    "product",
    "2006",
    "like",
    "four",
    "years",
    "idea",
    "launch",
    "2012",
    "held",
    "big",
    "sized",
    "customer",
    "even",
    "gather",
    "inputs",
    "concerns",
    "customers",
    "dedicated",
    "making",
    "requests",
    "happen",
    "habit",
    "still",
    "followed",
    "still",
    "followed",
    "reinvent",
    "aws",
    "2015",
    "amazon",
    "announced",
    "revenue",
    "billion",
    "2015",
    "2016",
    "aws",
    "launched",
    "products",
    "services",
    "help",
    "migrate",
    "customer",
    "services",
    "aws",
    "well",
    "products",
    "even",
    "lot",
    "focus",
    "given",
    "developing",
    "migrating",
    "services",
    "year",
    "2016",
    "amazon",
    "revenue",
    "10",
    "billion",
    "least",
    "speak",
    "amazon",
    "100",
    "products",
    "services",
    "available",
    "customers",
    "get",
    "benefited",
    "right",
    "let",
    "talk",
    "services",
    "available",
    "amazon",
    "let",
    "start",
    "product",
    "called",
    "s3",
    "s3",
    "great",
    "tool",
    "internet",
    "backup",
    "cheapest",
    "storage",
    "option",
    "object",
    "storage",
    "category",
    "data",
    "put",
    "s3",
    "retrievable",
    "internet",
    "s3",
    "really",
    "cool",
    "products",
    "like",
    "migration",
    "data",
    "collection",
    "data",
    "transfer",
    "products",
    "collect",
    "data",
    "seamlessly",
    "also",
    "way",
    "monitor",
    "data",
    "analyze",
    "data",
    "received",
    "cool",
    "products",
    "like",
    "aws",
    "data",
    "transfers",
    "available",
    "helps",
    "achieve",
    "products",
    "like",
    "ec2",
    "elastic",
    "compute",
    "cloud",
    "resizable",
    "computer",
    "anytime",
    "anytime",
    "size",
    "computer",
    "based",
    "need",
    "based",
    "forecast",
    "simple",
    "notification",
    "services",
    "systems",
    "tools",
    "available",
    "amazon",
    "update",
    "us",
    "notifications",
    "email",
    "sms",
    "anything",
    "anything",
    "sent",
    "email",
    "sms",
    "use",
    "service",
    "could",
    "alarms",
    "could",
    "service",
    "notifications",
    "want",
    "stuff",
    "like",
    "security",
    "tools",
    "like",
    "kms",
    "key",
    "management",
    "system",
    "uses",
    "aes",
    "256",
    "bit",
    "encryption",
    "encrypt",
    "data",
    "rest",
    "lambda",
    "service",
    "pay",
    "time",
    "seconds",
    "seconds",
    "takes",
    "execute",
    "code",
    "paying",
    "infrastructure",
    "seconds",
    "program",
    "going",
    "take",
    "execute",
    "code",
    "short",
    "program",
    "paying",
    "milliseconds",
    "bit",
    "bigger",
    "program",
    "probably",
    "paying",
    "60",
    "seconds",
    "120",
    "seconds",
    "cheap",
    "lot",
    "simple",
    "lots",
    "cost",
    "effective",
    "paying",
    "service",
    "ugly",
    "basis",
    "lot",
    "services",
    "well",
    "cheap",
    "using",
    "lambda",
    "lot",
    "cheaper",
    "services",
    "like",
    "route",
    "53",
    "dns",
    "service",
    "cloud",
    "maintain",
    "dns",
    "account",
    "somewhere",
    "else",
    "cloud",
    "environment",
    "aws",
    "get",
    "place",
    "right",
    "let",
    "talk",
    "um",
    "aws",
    "makes",
    "life",
    "easier",
    "companies",
    "got",
    "benefited",
    "using",
    "aws",
    "provider",
    "applications",
    "infrastructure",
    "uniliver",
    "company",
    "problem",
    "right",
    "problem",
    "picked",
    "aws",
    "solution",
    "problem",
    "right",
    "company",
    "sort",
    "spread",
    "across",
    "190",
    "countries",
    "relying",
    "lot",
    "digital",
    "marketing",
    "promoting",
    "products",
    "existing",
    "environment",
    "legacy",
    "local",
    "environment",
    "proved",
    "support",
    "changing",
    "id",
    "demands",
    "could",
    "standardize",
    "old",
    "environment",
    "chose",
    "move",
    "part",
    "applications",
    "aws",
    "getting",
    "wanted",
    "local",
    "environment",
    "since",
    "know",
    "rollouts",
    "easy",
    "provisioning",
    "new",
    "applications",
    "became",
    "easy",
    "even",
    "provisioning",
    "infrastructure",
    "became",
    "easy",
    "able",
    "push",
    "button",
    "scaling",
    "needless",
    "talk",
    "backups",
    "safe",
    "backups",
    "securely",
    "accessed",
    "cloud",
    "needed",
    "company",
    "growing",
    "along",
    "aws",
    "swift",
    "speed",
    "rolling",
    "deployments",
    "able",
    "access",
    "secure",
    "backups",
    "various",
    "places",
    "generate",
    "reports",
    "fact",
    "useful",
    "reports",
    "helps",
    "business",
    "lines",
    "let",
    "also",
    "talk",
    "kellogg",
    "got",
    "benefited",
    "using",
    "amazon",
    "kellogg",
    "different",
    "problem",
    "one",
    "kind",
    "business",
    "model",
    "dependent",
    "infrared",
    "help",
    "analyze",
    "data",
    "really",
    "fast",
    "right",
    "running",
    "promotions",
    "based",
    "analyzed",
    "data",
    "get",
    "able",
    "respond",
    "analyzed",
    "data",
    "soon",
    "possible",
    "critical",
    "vital",
    "environment",
    "luckily",
    "sap",
    "running",
    "hana",
    "environment",
    "needed",
    "know",
    "picked",
    "service",
    "cloud",
    "sort",
    "solved",
    "problem",
    "company",
    "deal",
    "uh",
    "maintaining",
    "legacy",
    "infra",
    "maintaining",
    "heavy",
    "compute",
    "capacity",
    "maintaining",
    "database",
    "locally",
    "moved",
    "cloud",
    "using",
    "cloud",
    "service",
    "provider",
    "greater",
    "powerful",
    "environment",
    "much",
    "complements",
    "business",
    "hi",
    "samuel",
    "cloud",
    "architect",
    "excited",
    "honored",
    "walk",
    "learning",
    "series",
    "aws",
    "let",
    "start",
    "session",
    "scenario",
    "let",
    "imagine",
    "life",
    "would",
    "without",
    "spotify",
    "hearing",
    "spotify",
    "first",
    "time",
    "spotify",
    "online",
    "music",
    "service",
    "offering",
    "offers",
    "instant",
    "access",
    "16",
    "million",
    "licensed",
    "songs",
    "spotify",
    "uses",
    "aws",
    "cloud",
    "store",
    "data",
    "share",
    "customers",
    "prior",
    "aws",
    "issues",
    "imagine",
    "using",
    "spotify",
    "aws",
    "let",
    "talk",
    "back",
    "users",
    "often",
    "getting",
    "errors",
    "spotify",
    "could",
    "keep",
    "increased",
    "demand",
    "storage",
    "every",
    "new",
    "day",
    "led",
    "users",
    "getting",
    "upset",
    "users",
    "cancelling",
    "subscription",
    "problem",
    "spotify",
    "facing",
    "time",
    "users",
    "present",
    "globally",
    "accessing",
    "everywhere",
    "different",
    "latency",
    "applications",
    "spotify",
    "demanding",
    "situation",
    "need",
    "frequently",
    "catalogue",
    "songs",
    "released",
    "yesterday",
    "today",
    "future",
    "changing",
    "every",
    "new",
    "day",
    "songs",
    "coming",
    "rate",
    "20",
    "000",
    "day",
    "back",
    "could",
    "keep",
    "requirement",
    "needless",
    "say",
    "badly",
    "looking",
    "way",
    "solve",
    "problem",
    "got",
    "introduced",
    "aws",
    "perfect",
    "fit",
    "match",
    "problem",
    "aws",
    "offered",
    "dynamically",
    "increasing",
    "storage",
    "needed",
    "aws",
    "also",
    "offered",
    "tools",
    "techniques",
    "like",
    "storage",
    "lifecycle",
    "management",
    "trusted",
    "advisor",
    "properly",
    "utilize",
    "resource",
    "always",
    "get",
    "best",
    "resource",
    "used",
    "aws",
    "addressed",
    "concerns",
    "easily",
    "able",
    "scale",
    "yes",
    "scale",
    "aws",
    "environment",
    "easily",
    "easily",
    "one",
    "might",
    "ask",
    "button",
    "clicks",
    "aws",
    "solved",
    "spotify",
    "problem",
    "let",
    "talk",
    "help",
    "organization",
    "problem",
    "let",
    "talk",
    "aws",
    "first",
    "let",
    "bleed",
    "aws",
    "became",
    "successful",
    "different",
    "types",
    "services",
    "aws",
    "provides",
    "future",
    "cloud",
    "aws",
    "specific",
    "let",
    "talk",
    "finally",
    "talk",
    "use",
    "case",
    "see",
    "easy",
    "create",
    "web",
    "application",
    "aws",
    "right",
    "let",
    "talk",
    "aws",
    "aws",
    "amazon",
    "web",
    "services",
    "secure",
    "cloud",
    "service",
    "platform",
    "also",
    "pay",
    "go",
    "type",
    "billing",
    "model",
    "upfront",
    "capital",
    "cost",
    "talk",
    "soon",
    "service",
    "available",
    "well",
    "service",
    "available",
    "matter",
    "seconds",
    "aws",
    "also",
    "identity",
    "access",
    "management",
    "authenticating",
    "authorizing",
    "user",
    "program",
    "fly",
    "almost",
    "services",
    "available",
    "demand",
    "available",
    "instantaneously",
    "speak",
    "amazon",
    "offers",
    "100",
    "plus",
    "services",
    "list",
    "growing",
    "every",
    "new",
    "week",
    "would",
    "make",
    "wonder",
    "aws",
    "became",
    "successful",
    "course",
    "customers",
    "let",
    "talk",
    "list",
    "companies",
    "idea",
    "environment",
    "aws",
    "adobe",
    "adobe",
    "uses",
    "aws",
    "provide",
    "operating",
    "environments",
    "customers",
    "integrating",
    "system",
    "aws",
    "cloud",
    "adobe",
    "focus",
    "deploying",
    "operating",
    "software",
    "instead",
    "trying",
    "know",
    "deploy",
    "manage",
    "infrastructure",
    "airbnb",
    "another",
    "company",
    "community",
    "marketplace",
    "allows",
    "property",
    "owners",
    "travelers",
    "connect",
    "purpose",
    "renting",
    "unique",
    "vacation",
    "spaces",
    "around",
    "world",
    "airbnb",
    "community",
    "users",
    "activities",
    "conducted",
    "website",
    "iphones",
    "android",
    "applications",
    "airbnb",
    "huge",
    "infrastructure",
    "aws",
    "almost",
    "using",
    "services",
    "aws",
    "getting",
    "benefited",
    "another",
    "example",
    "would",
    "autodesk",
    "autodesk",
    "develops",
    "software",
    "engineering",
    "designing",
    "entertainment",
    "industries",
    "using",
    "services",
    "like",
    "amazon",
    "rds",
    "rational",
    "database",
    "service",
    "amazon",
    "s3",
    "amazon",
    "simple",
    "storage",
    "servers",
    "autodesk",
    "focus",
    "deploying",
    "developing",
    "machine",
    "learning",
    "tools",
    "instead",
    "spending",
    "time",
    "managing",
    "infrastructure",
    "aol",
    "american",
    "online",
    "uses",
    "aws",
    "using",
    "aws",
    "able",
    "close",
    "data",
    "centers",
    "decommission",
    "14",
    "000",
    "servers",
    "move",
    "mission",
    "critical",
    "workload",
    "cloud",
    "extend",
    "global",
    "reach",
    "save",
    "millions",
    "dollars",
    "energy",
    "resources",
    "bitdefender",
    "internet",
    "security",
    "software",
    "firm",
    "portfolio",
    "softwares",
    "include",
    "antivirus",
    "products",
    "bitdefender",
    "uses",
    "ec2",
    "currently",
    "running",
    "hundred",
    "instances",
    "handle",
    "five",
    "terabytes",
    "data",
    "also",
    "use",
    "elastic",
    "load",
    "balancer",
    "load",
    "balance",
    "connection",
    "coming",
    "instances",
    "across",
    "availability",
    "zones",
    "provide",
    "seamless",
    "global",
    "delivery",
    "servers",
    "bmw",
    "group",
    "uses",
    "aws",
    "new",
    "connected",
    "car",
    "application",
    "collects",
    "sensor",
    "data",
    "bmw",
    "7",
    "series",
    "cars",
    "give",
    "drivers",
    "dynamically",
    "updated",
    "map",
    "information",
    "canon",
    "office",
    "imaging",
    "products",
    "division",
    "benefits",
    "faster",
    "deployment",
    "times",
    "lower",
    "cost",
    "global",
    "reach",
    "using",
    "aws",
    "deliver",
    "services",
    "mobile",
    "print",
    "office",
    "imaging",
    "products",
    "division",
    "uses",
    "aws",
    "amazon",
    "s3",
    "amazon",
    "route",
    "53",
    "amazon",
    "cloudfront",
    "amazon",
    "im",
    "testing",
    "development",
    "production",
    "services",
    "comcast",
    "world",
    "largest",
    "cable",
    "company",
    "leading",
    "provider",
    "internet",
    "service",
    "united",
    "states",
    "comcast",
    "uses",
    "aws",
    "hybrid",
    "environment",
    "cloud",
    "providers",
    "comcast",
    "chose",
    "aws",
    "flexibility",
    "scalable",
    "hybrid",
    "infrastructure",
    "docker",
    "company",
    "helping",
    "redefine",
    "way",
    "developers",
    "build",
    "ship",
    "run",
    "applications",
    "company",
    "focuses",
    "making",
    "use",
    "containers",
    "purpose",
    "aws",
    "service",
    "called",
    "amazon",
    "ec2",
    "container",
    "service",
    "helping",
    "achieve",
    "esa",
    "european",
    "space",
    "agency",
    "although",
    "much",
    "esa",
    "work",
    "done",
    "satellites",
    "programs",
    "data",
    "storage",
    "computing",
    "infrastructure",
    "built",
    "amazon",
    "web",
    "services",
    "esa",
    "chose",
    "aws",
    "economical",
    "pay",
    "ego",
    "system",
    "well",
    "quick",
    "startup",
    "time",
    "guardian",
    "newspaper",
    "uses",
    "aws",
    "uses",
    "wide",
    "range",
    "aws",
    "services",
    "including",
    "amazon",
    "kinesis",
    "amazon",
    "redshift",
    "power",
    "analytic",
    "dashboard",
    "editors",
    "used",
    "see",
    "stories",
    "trending",
    "real",
    "time",
    "financial",
    "times",
    "ft",
    "one",
    "world",
    "largest",
    "leading",
    "business",
    "news",
    "organization",
    "used",
    "amazon",
    "redshift",
    "perform",
    "analysis",
    "funny",
    "thing",
    "happened",
    "amazon",
    "redshirt",
    "performed",
    "quickly",
    "analysis",
    "thought",
    "malfunctioning",
    "used",
    "running",
    "queries",
    "overnight",
    "found",
    "results",
    "indeed",
    "correct",
    "much",
    "faster",
    "using",
    "amazon",
    "redshift",
    "fd",
    "supporting",
    "business",
    "functions",
    "costs",
    "80",
    "percentage",
    "lower",
    "general",
    "electric",
    "ge",
    "moment",
    "speak",
    "migrating",
    "9000",
    "workloads",
    "including",
    "300",
    "desperate",
    "erp",
    "systems",
    "aws",
    "reducing",
    "data",
    "center",
    "footprint",
    "34",
    "4",
    "next",
    "three",
    "years",
    "similarly",
    "howard",
    "medical",
    "school",
    "htc",
    "imdb",
    "mcdonald",
    "nasa",
    "kellogg",
    "lot",
    "using",
    "services",
    "amazon",
    "provides",
    "getting",
    "benefited",
    "huge",
    "success",
    "customer",
    "portfolio",
    "tip",
    "iceberg",
    "think",
    "many",
    "adapt",
    "aws",
    "let",
    "aws",
    "answer",
    "question",
    "aws",
    "would",
    "say",
    "people",
    "adapting",
    "aws",
    "security",
    "durability",
    "data",
    "privacy",
    "encryption",
    "data",
    "storage",
    "experience",
    "also",
    "rely",
    "aws",
    "way",
    "things",
    "using",
    "aws",
    "tools",
    "techniques",
    "suggested",
    "best",
    "practices",
    "built",
    "upon",
    "years",
    "experience",
    "gained",
    "flexibility",
    "greater",
    "flexibility",
    "aws",
    "allows",
    "us",
    "select",
    "os",
    "language",
    "database",
    "easy",
    "use",
    "swiftness",
    "deploying",
    "host",
    "applications",
    "quickly",
    "aws",
    "new",
    "application",
    "migrating",
    "existing",
    "application",
    "aws",
    "scalability",
    "application",
    "easily",
    "scaled",
    "scaled",
    "depending",
    "user",
    "requirement",
    "cost",
    "saving",
    "pay",
    "compute",
    "power",
    "storage",
    "resources",
    "use",
    "without",
    "commitments",
    "let",
    "talk",
    "different",
    "types",
    "services",
    "aws",
    "provides",
    "services",
    "talk",
    "fall",
    "following",
    "categories",
    "see",
    "like",
    "know",
    "compute",
    "storage",
    "database",
    "security",
    "customer",
    "engagement",
    "desktop",
    "streaming",
    "machine",
    "learning",
    "developers",
    "tools",
    "stuff",
    "like",
    "see",
    "service",
    "looking",
    "probably",
    "aws",
    "creating",
    "speak",
    "let",
    "look",
    "commonly",
    "used",
    "within",
    "computer",
    "services",
    "amazon",
    "ec2",
    "amazon",
    "elastic",
    "bean",
    "stock",
    "amazon",
    "light",
    "sale",
    "amazon",
    "lambda",
    "amazon",
    "ec2",
    "provides",
    "compute",
    "capacity",
    "cloud",
    "capacity",
    "secure",
    "resizable",
    "based",
    "user",
    "requirement",
    "look",
    "requirement",
    "web",
    "traffic",
    "keeps",
    "changing",
    "behind",
    "scenes",
    "cloud",
    "ec2",
    "expand",
    "environment",
    "three",
    "instances",
    "load",
    "shrink",
    "environment",
    "one",
    "resource",
    "elastic",
    "beanstalk",
    "helps",
    "us",
    "scale",
    "deploy",
    "web",
    "applications",
    "made",
    "number",
    "programming",
    "languages",
    "elastic",
    "beanstalk",
    "also",
    "easy",
    "use",
    "service",
    "deploying",
    "scaling",
    "web",
    "applications",
    "services",
    "deployed",
    "bit",
    "php",
    "nodejs",
    "python",
    "ruby",
    "docker",
    "lot",
    "familiar",
    "services",
    "apache",
    "passenger",
    "iis",
    "simply",
    "upload",
    "code",
    "elastic",
    "beanstalk",
    "automatically",
    "handles",
    "deployment",
    "capacity",
    "provisioning",
    "load",
    "balancing",
    "auto",
    "scaling",
    "application",
    "health",
    "monitoring",
    "amazon",
    "lightsail",
    "virtual",
    "private",
    "server",
    "easy",
    "launch",
    "easy",
    "manage",
    "amazon",
    "lightsail",
    "easiest",
    "way",
    "get",
    "started",
    "aws",
    "developers",
    "need",
    "virtual",
    "private",
    "server",
    "lightsail",
    "includes",
    "everything",
    "need",
    "launch",
    "project",
    "quickly",
    "virtual",
    "machine",
    "like",
    "ssd",
    "based",
    "storage",
    "virtual",
    "machine",
    "tools",
    "data",
    "transfer",
    "dns",
    "management",
    "static",
    "ip",
    "low",
    "predictable",
    "price",
    "aws",
    "lambda",
    "taken",
    "cloud",
    "computing",
    "services",
    "whole",
    "new",
    "level",
    "allows",
    "us",
    "pay",
    "compute",
    "time",
    "need",
    "provisioning",
    "managing",
    "servers",
    "aws",
    "lambda",
    "compute",
    "service",
    "lets",
    "us",
    "run",
    "code",
    "without",
    "provisioning",
    "managing",
    "servers",
    "lambda",
    "executes",
    "code",
    "needed",
    "scales",
    "automatically",
    "requests",
    "per",
    "day",
    "thousands",
    "per",
    "second",
    "pay",
    "compute",
    "time",
    "consume",
    "charge",
    "code",
    "running",
    "let",
    "look",
    "storage",
    "services",
    "amazon",
    "provides",
    "like",
    "amazon",
    "s3",
    "amazon",
    "glacier",
    "amazon",
    "abs",
    "amazon",
    "elastic",
    "file",
    "system",
    "amazon",
    "s3",
    "object",
    "storage",
    "store",
    "retrieve",
    "data",
    "anywhere",
    "websites",
    "mobile",
    "apps",
    "iot",
    "sensors",
    "easily",
    "use",
    "amazon",
    "s3",
    "store",
    "retrieve",
    "data",
    "object",
    "storage",
    "built",
    "store",
    "retrieve",
    "amount",
    "data",
    "anywhere",
    "features",
    "like",
    "flexibility",
    "managing",
    "data",
    "durability",
    "provides",
    "security",
    "provides",
    "amazon",
    "simple",
    "storage",
    "service",
    "s3",
    "storage",
    "internet",
    "glacier",
    "glacier",
    "cloud",
    "storage",
    "service",
    "used",
    "archiving",
    "data",
    "backups",
    "glacier",
    "secure",
    "durable",
    "extremely",
    "cloud",
    "storage",
    "service",
    "data",
    "archiving",
    "backups",
    "amazon",
    "ebs",
    "amazon",
    "elastic",
    "block",
    "store",
    "provides",
    "block",
    "store",
    "volumes",
    "instances",
    "ec2",
    "elastic",
    "block",
    "store",
    "highly",
    "available",
    "reliable",
    "storage",
    "volume",
    "attached",
    "running",
    "instance",
    "availability",
    "zone",
    "abs",
    "volumes",
    "attached",
    "ec2",
    "instances",
    "exposed",
    "storage",
    "volumes",
    "persistent",
    "independently",
    "lifetime",
    "instance",
    "amazon",
    "elastic",
    "file",
    "system",
    "efs",
    "provides",
    "elastic",
    "file",
    "storage",
    "used",
    "aws",
    "cloud",
    "service",
    "resources",
    "premises",
    "amazon",
    "elastic",
    "file",
    "system",
    "simple",
    "scalable",
    "elastic",
    "file",
    "storage",
    "use",
    "amazon",
    "cloud",
    "services",
    "resources",
    "easy",
    "use",
    "offers",
    "simple",
    "interface",
    "allows",
    "create",
    "configure",
    "file",
    "systems",
    "quickly",
    "easily",
    "amazon",
    "file",
    "system",
    "built",
    "elastically",
    "scale",
    "demand",
    "without",
    "disturbing",
    "application",
    "growing",
    "shrinking",
    "automatically",
    "add",
    "remove",
    "files",
    "application",
    "storage",
    "need",
    "need",
    "let",
    "talk",
    "databases",
    "two",
    "major",
    "database",
    "flavors",
    "amazon",
    "rds",
    "amazon",
    "redshift",
    "amazon",
    "rds",
    "really",
    "eases",
    "process",
    "involved",
    "setting",
    "operating",
    "scaling",
    "relational",
    "database",
    "cloud",
    "amazon",
    "rds",
    "provides",
    "cost",
    "efficient",
    "resizable",
    "capacity",
    "automating",
    "administrative",
    "tasks",
    "hardware",
    "provisioning",
    "database",
    "setup",
    "patching",
    "backups",
    "sort",
    "frees",
    "us",
    "managing",
    "hardware",
    "sort",
    "helps",
    "us",
    "focus",
    "application",
    "also",
    "cost",
    "effective",
    "resizable",
    "also",
    "optimized",
    "memory",
    "performance",
    "input",
    "output",
    "operations",
    "also",
    "automates",
    "services",
    "like",
    "taking",
    "backups",
    "know",
    "monitoring",
    "stuff",
    "like",
    "automates",
    "services",
    "amazon",
    "redshift",
    "amazon",
    "redshift",
    "data",
    "warehousing",
    "service",
    "enables",
    "users",
    "analyze",
    "data",
    "using",
    "sql",
    "business",
    "intelligent",
    "tools",
    "amazon",
    "redshift",
    "fast",
    "fully",
    "managed",
    "data",
    "warehouse",
    "makes",
    "simple",
    "cost",
    "effective",
    "analyze",
    "data",
    "using",
    "standard",
    "sql",
    "existing",
    "business",
    "intelligent",
    "tools",
    "also",
    "allows",
    "run",
    "complex",
    "analytic",
    "queries",
    "petabyte",
    "structured",
    "data",
    "using",
    "sophisticated",
    "query",
    "optimizations",
    "results",
    "generally",
    "come",
    "back",
    "seconds",
    "right",
    "let",
    "quickly",
    "talk",
    "services",
    "aws",
    "offers",
    "lot",
    "services",
    "aws",
    "provides",
    "going",
    "look",
    "services",
    "widely",
    "used",
    "aws",
    "application",
    "discovery",
    "services",
    "help",
    "enterprise",
    "customers",
    "plan",
    "migration",
    "projects",
    "gathering",
    "information",
    "data",
    "centers",
    "planning",
    "data",
    "center",
    "migration",
    "involve",
    "thousands",
    "workloads",
    "often",
    "deeply",
    "interdependent",
    "server",
    "utilization",
    "data",
    "dependency",
    "mapping",
    "important",
    "early",
    "first",
    "step",
    "migration",
    "process",
    "aws",
    "application",
    "discovery",
    "service",
    "collects",
    "presents",
    "configuration",
    "usage",
    "behavior",
    "data",
    "servers",
    "help",
    "better",
    "understand",
    "workloads",
    "route",
    "53",
    "network",
    "content",
    "delivery",
    "service",
    "highly",
    "available",
    "scalable",
    "cloud",
    "domain",
    "name",
    "system",
    "dns",
    "service",
    "amazon",
    "route",
    "53",
    "fully",
    "compliant",
    "ipv6",
    "well",
    "elastic",
    "load",
    "balancing",
    "also",
    "network",
    "content",
    "delivery",
    "service",
    "elastic",
    "load",
    "balancing",
    "automatically",
    "distributes",
    "incoming",
    "application",
    "traffic",
    "across",
    "multiple",
    "targets",
    "amazon",
    "ec2",
    "instance",
    "containers",
    "ip",
    "addresses",
    "handle",
    "varying",
    "load",
    "application",
    "traffic",
    "single",
    "available",
    "zones",
    "also",
    "across",
    "availability",
    "zones",
    "away",
    "auto",
    "scaling",
    "monitors",
    "application",
    "automatically",
    "adjusts",
    "capacity",
    "maintain",
    "steady",
    "predictable",
    "performance",
    "lowest",
    "possible",
    "cost",
    "using",
    "aws",
    "auto",
    "scaling",
    "easy",
    "set",
    "application",
    "scaling",
    "multiple",
    "resources",
    "across",
    "multiple",
    "services",
    "minutes",
    "autoscaling",
    "applied",
    "web",
    "services",
    "also",
    "db",
    "services",
    "aws",
    "identity",
    "access",
    "management",
    "enables",
    "manage",
    "access",
    "aws",
    "services",
    "resources",
    "securely",
    "using",
    "im",
    "create",
    "manage",
    "aws",
    "users",
    "groups",
    "use",
    "permissions",
    "allow",
    "deny",
    "access",
    "aws",
    "resources",
    "moreover",
    "free",
    "service",
    "let",
    "talk",
    "future",
    "aws",
    "well",
    "let",
    "tell",
    "something",
    "cloud",
    "stay",
    "store",
    "aws",
    "future",
    "years",
    "pass",
    "gon",
    "na",
    "variety",
    "cloud",
    "applications",
    "born",
    "like",
    "iot",
    "artificial",
    "intelligence",
    "business",
    "intelligence",
    "serverless",
    "computing",
    "cloud",
    "also",
    "expand",
    "markets",
    "like",
    "healthcare",
    "banking",
    "space",
    "automated",
    "cars",
    "mentioning",
    "time",
    "back",
    "lot",
    "greater",
    "focus",
    "given",
    "artificial",
    "intelligence",
    "eventually",
    "flexibility",
    "advantage",
    "cloud",
    "provides",
    "going",
    "see",
    "lot",
    "companies",
    "moving",
    "cloud",
    "right",
    "let",
    "talk",
    "easy",
    "deploy",
    "web",
    "application",
    "cloud",
    "scenario",
    "users",
    "like",
    "product",
    "need",
    "mechanism",
    "receive",
    "input",
    "likes",
    "dislikes",
    "know",
    "give",
    "appropriate",
    "product",
    "per",
    "need",
    "right",
    "though",
    "setup",
    "environment",
    "sort",
    "looks",
    "complicated",
    "worry",
    "aws",
    "tools",
    "technologies",
    "help",
    "us",
    "achieve",
    "going",
    "use",
    "services",
    "like",
    "route",
    "53",
    "services",
    "like",
    "cloud",
    "watch",
    "ec2",
    "s3",
    "lot",
    "put",
    "together",
    "going",
    "give",
    "application",
    "fully",
    "functionable",
    "application",
    "going",
    "receive",
    "information",
    "like",
    "using",
    "services",
    "like",
    "route",
    "53",
    "cloudwatch",
    "ec2",
    "s3",
    "going",
    "create",
    "application",
    "going",
    "meet",
    "need",
    "back",
    "original",
    "requirement",
    "want",
    "deploy",
    "web",
    "application",
    "product",
    "keeps",
    "users",
    "updated",
    "happenings",
    "new",
    "comings",
    "market",
    "fulfill",
    "requirement",
    "services",
    "would",
    "need",
    "ec2",
    "used",
    "provisioning",
    "computational",
    "power",
    "needed",
    "application",
    "ec2",
    "vast",
    "variety",
    "family",
    "types",
    "pick",
    "types",
    "workloads",
    "also",
    "intents",
    "workloads",
    "also",
    "going",
    "use",
    "s3",
    "storage",
    "s3",
    "provides",
    "additional",
    "storage",
    "requirement",
    "resources",
    "additional",
    "storage",
    "requirement",
    "web",
    "applications",
    "also",
    "going",
    "use",
    "cloudwatch",
    "monitoring",
    "environment",
    "cloudwatch",
    "monitors",
    "application",
    "environment",
    "provides",
    "trigger",
    "scaling",
    "scaling",
    "infrastructure",
    "also",
    "going",
    "use",
    "route",
    "53",
    "dns",
    "route",
    "53",
    "helps",
    "us",
    "register",
    "domain",
    "name",
    "web",
    "application",
    "tools",
    "technologies",
    "together",
    "put",
    "together",
    "going",
    "make",
    "application",
    "perfect",
    "application",
    "caters",
    "need",
    "right",
    "going",
    "use",
    "elastic",
    "bean",
    "stock",
    "project",
    "name",
    "application",
    "going",
    "see",
    "gsg",
    "sign",
    "environment",
    "name",
    "gsg",
    "signup",
    "environment",
    "one",
    "let",
    "also",
    "pick",
    "name",
    "let",
    "see",
    "name",
    "available",
    "yes",
    "available",
    "domain",
    "name",
    "let",
    "pick",
    "application",
    "going",
    "run",
    "let",
    "pick",
    "platform",
    "launch",
    "see",
    "elastic",
    "bean",
    "stock",
    "going",
    "launch",
    "instance",
    "going",
    "launch",
    "monitoring",
    "setup",
    "monitoring",
    "environment",
    "going",
    "create",
    "load",
    "balancer",
    "well",
    "going",
    "take",
    "care",
    "security",
    "features",
    "needed",
    "application",
    "right",
    "look",
    "able",
    "go",
    "url",
    "gave",
    "default",
    "page",
    "shown",
    "meaning",
    "dependencies",
    "software",
    "installed",
    "waiting",
    "upload",
    "code",
    "specific",
    "page",
    "required",
    "let",
    "let",
    "upload",
    "code",
    "already",
    "code",
    "saved",
    "code",
    "going",
    "take",
    "time",
    "right",
    "done",
    "thing",
    "go",
    "url",
    "look",
    "thrown",
    "advertisement",
    "page",
    "right",
    "sign",
    "name",
    "email",
    "stuff",
    "like",
    "know",
    "going",
    "receive",
    "information",
    "going",
    "send",
    "email",
    "owner",
    "saying",
    "somebody",
    "subscribed",
    "service",
    "default",
    "feature",
    "app",
    "look",
    "email",
    "owner",
    "saying",
    "somebody",
    "subscribed",
    "app",
    "email",
    "address",
    "stuff",
    "like",
    "also",
    "going",
    "create",
    "entry",
    "database",
    "dynamodb",
    "service",
    "application",
    "uses",
    "store",
    "data",
    "dynamodb",
    "go",
    "tables",
    "right",
    "go",
    "items",
    "going",
    "see",
    "user",
    "name",
    "samuel",
    "email",
    "address",
    "said",
    "okay",
    "shown",
    "interest",
    "preview",
    "site",
    "product",
    "collect",
    "information",
    "right",
    "things",
    "infrastructure",
    "running",
    "behind",
    "load",
    "balancer",
    "look",
    "created",
    "load",
    "balancer",
    "also",
    "created",
    "auto",
    "scaling",
    "group",
    "feature",
    "elastic",
    "load",
    "balancer",
    "chosen",
    "created",
    "auto",
    "scaling",
    "group",
    "let",
    "put",
    "url",
    "see",
    "fancy",
    "url",
    "right",
    "amazon",
    "given",
    "url",
    "dynamic",
    "url",
    "let",
    "put",
    "url",
    "behind",
    "dns",
    "let",
    "go",
    "services",
    "go",
    "route",
    "53",
    "go",
    "hosted",
    "zone",
    "find",
    "dns",
    "name",
    "right",
    "dns",
    "name",
    "right",
    "right",
    "let",
    "create",
    "entry",
    "map",
    "url",
    "load",
    "balancer",
    "right",
    "create",
    "technically",
    "go",
    "url",
    "take",
    "application",
    "right",
    "look",
    "went",
    "custom",
    "url",
    "pointed",
    "application",
    "previously",
    "application",
    "random",
    "url",
    "custom",
    "url",
    "learn",
    "started",
    "session",
    "aws",
    "looked",
    "features",
    "tools",
    "technologies",
    "products",
    "aws",
    "provides",
    "also",
    "looked",
    "aws",
    "became",
    "successful",
    "looked",
    "benefits",
    "features",
    "aws",
    "also",
    "looked",
    "services",
    "aws",
    "provides",
    "random",
    "picked",
    "particular",
    "services",
    "talked",
    "like",
    "ec2",
    "elastic",
    "bean",
    "stock",
    "light",
    "sale",
    "lambda",
    "storage",
    "stuff",
    "like",
    "also",
    "looked",
    "future",
    "aws",
    "aws",
    "holds",
    "store",
    "us",
    "looked",
    "finally",
    "looked",
    "lab",
    "created",
    "application",
    "using",
    "elastic",
    "beanstalk",
    "couple",
    "clicks",
    "boom",
    "application",
    "available",
    "connected",
    "database",
    "connected",
    "simple",
    "notification",
    "system",
    "connected",
    "cloudwatch",
    "connected",
    "storage",
    "stuff",
    "like",
    "azure",
    "big",
    "cloud",
    "service",
    "provider",
    "azure",
    "cloud",
    "computing",
    "platform",
    "provided",
    "microsoft",
    "basically",
    "online",
    "portal",
    "access",
    "manage",
    "resources",
    "services",
    "resources",
    "services",
    "nothing",
    "know",
    "store",
    "data",
    "transform",
    "data",
    "using",
    "services",
    "microsoft",
    "provides",
    "need",
    "internet",
    "able",
    "connect",
    "azure",
    "portal",
    "get",
    "access",
    "resources",
    "services",
    "case",
    "want",
    "know",
    "different",
    "rival",
    "aws",
    "suggest",
    "click",
    "top",
    "right",
    "corner",
    "watch",
    "aws",
    "versus",
    "azure",
    "video",
    "clearly",
    "tell",
    "cloud",
    "service",
    "providers",
    "different",
    "things",
    "need",
    "know",
    "azure",
    "launched",
    "february",
    "1st",
    "2010",
    "significantly",
    "later",
    "aws",
    "launched",
    "free",
    "start",
    "model",
    "means",
    "like",
    "said",
    "need",
    "pay",
    "services",
    "use",
    "azure",
    "one",
    "important",
    "selling",
    "points",
    "80",
    "percent",
    "fortune",
    "500",
    "companies",
    "use",
    "services",
    "means",
    "bigger",
    "companies",
    "world",
    "actually",
    "recommend",
    "using",
    "azure",
    "azure",
    "supports",
    "wide",
    "variety",
    "programming",
    "languages",
    "java",
    "much",
    "another",
    "important",
    "selling",
    "point",
    "azure",
    "amount",
    "data",
    "centers",
    "across",
    "world",
    "important",
    "cloud",
    "service",
    "provider",
    "many",
    "data",
    "centers",
    "around",
    "world",
    "means",
    "provide",
    "services",
    "wider",
    "audience",
    "azure",
    "42",
    "cloud",
    "service",
    "provider",
    "moment",
    "expects",
    "12",
    "period",
    "time",
    "brings",
    "total",
    "number",
    "regions",
    "covers",
    "let",
    "talk",
    "azure",
    "services",
    "azure",
    "services",
    "18",
    "categories",
    "200",
    "services",
    "clearly",
    "ca",
    "go",
    "services",
    "cover",
    "compute",
    "machine",
    "learning",
    "integration",
    "management",
    "tools",
    "identity",
    "devops",
    "web",
    "much",
    "going",
    "hard",
    "time",
    "trying",
    "find",
    "domain",
    "azure",
    "cover",
    "cover",
    "certain",
    "working",
    "speak",
    "first",
    "let",
    "start",
    "compute",
    "services",
    "first",
    "virtual",
    "machine",
    "service",
    "getting",
    "create",
    "virtual",
    "machine",
    "linux",
    "windows",
    "operating",
    "system",
    "easily",
    "configurable",
    "add",
    "ram",
    "decrease",
    "ram",
    "add",
    "storage",
    "remove",
    "possible",
    "match",
    "seconds",
    "let",
    "talk",
    "second",
    "service",
    "cloud",
    "service",
    "create",
    "application",
    "within",
    "cloud",
    "work",
    "deploy",
    "deploying",
    "application",
    "taken",
    "care",
    "azure",
    "includes",
    "know",
    "provisioning",
    "application",
    "load",
    "balancing",
    "ensuring",
    "application",
    "good",
    "health",
    "things",
    "handled",
    "azure",
    "next",
    "let",
    "talk",
    "service",
    "fabric",
    "service",
    "fabric",
    "process",
    "developing",
    "micro",
    "service",
    "greatly",
    "simplified",
    "might",
    "wondering",
    "exactly",
    "micro",
    "service",
    "micro",
    "service",
    "basically",
    "application",
    "consists",
    "smaller",
    "applications",
    "coupled",
    "together",
    "next",
    "functions",
    "functions",
    "create",
    "applications",
    "programming",
    "language",
    "want",
    "another",
    "important",
    "part",
    "worry",
    "hardware",
    "components",
    "worry",
    "ram",
    "require",
    "much",
    "storage",
    "require",
    "taken",
    "care",
    "azure",
    "need",
    "provide",
    "code",
    "azure",
    "execute",
    "worry",
    "anything",
    "else",
    "let",
    "talk",
    "networking",
    "services",
    "first",
    "azure",
    "cdn",
    "content",
    "delivery",
    "network",
    "azure",
    "cdn",
    "service",
    "basically",
    "delivering",
    "web",
    "content",
    "users",
    "content",
    "high",
    "bandwidth",
    "transferred",
    "delivered",
    "person",
    "across",
    "world",
    "actually",
    "network",
    "servers",
    "placed",
    "strategic",
    "positions",
    "across",
    "world",
    "customers",
    "obtain",
    "data",
    "fast",
    "possible",
    "next",
    "express",
    "route",
    "actually",
    "connect",
    "network",
    "onto",
    "microsoft",
    "cloud",
    "services",
    "want",
    "private",
    "connection",
    "communication",
    "happens",
    "network",
    "service",
    "want",
    "virtual",
    "network",
    "virtual",
    "network",
    "azure",
    "services",
    "communicate",
    "secure",
    "manner",
    "private",
    "manner",
    "next",
    "azure",
    "dns",
    "azure",
    "dns",
    "hosting",
    "service",
    "allows",
    "host",
    "dns",
    "domain",
    "name",
    "system",
    "domains",
    "azure",
    "host",
    "application",
    "using",
    "azure",
    "dns",
    "storage",
    "services",
    "first",
    "disk",
    "storage",
    "storage",
    "given",
    "cost",
    "effective",
    "option",
    "choosing",
    "hdd",
    "solid",
    "state",
    "drives",
    "go",
    "along",
    "virtual",
    "machines",
    "based",
    "requirements",
    "blob",
    "storage",
    "actually",
    "optimized",
    "ensure",
    "store",
    "massive",
    "amounts",
    "unstructured",
    "data",
    "include",
    "text",
    "data",
    "even",
    "binary",
    "data",
    "next",
    "file",
    "storage",
    "managed",
    "file",
    "storage",
    "accessible",
    "via",
    "smb",
    "protocol",
    "server",
    "message",
    "block",
    "protocol",
    "finally",
    "queue",
    "storage",
    "queue",
    "storage",
    "provide",
    "durable",
    "message",
    "queuing",
    "extremely",
    "large",
    "workload",
    "important",
    "part",
    "accessed",
    "anywhere",
    "world",
    "let",
    "talk",
    "azure",
    "used",
    "firstly",
    "application",
    "development",
    "could",
    "application",
    "mostly",
    "web",
    "applications",
    "test",
    "application",
    "see",
    "well",
    "works",
    "host",
    "application",
    "internet",
    "create",
    "virtual",
    "machines",
    "like",
    "mentioned",
    "service",
    "create",
    "virtual",
    "machines",
    "size",
    "ram",
    "want",
    "integrate",
    "sync",
    "features",
    "collect",
    "store",
    "matrices",
    "example",
    "data",
    "works",
    "current",
    "data",
    "improve",
    "upon",
    "possible",
    "services",
    "virtual",
    "hard",
    "drives",
    "extension",
    "virtual",
    "machines",
    "services",
    "able",
    "provide",
    "large",
    "amount",
    "storage",
    "data",
    "stored",
    "talk",
    "azure",
    "great",
    "length",
    "breadth",
    "looking",
    "video",
    "talks",
    "walks",
    "services",
    "azure",
    "could",
    "one",
    "best",
    "video",
    "could",
    "find",
    "internet",
    "without",
    "delay",
    "let",
    "get",
    "started",
    "everybody",
    "like",
    "story",
    "let",
    "get",
    "started",
    "story",
    "city",
    "far",
    "away",
    "ceo",
    "plans",
    "expand",
    "company",
    "globally",
    "called",
    "one",
    "id",
    "personal",
    "opinion",
    "guy",
    "company",
    "long",
    "time",
    "seasoned",
    "company",
    "infra",
    "nicely",
    "answered",
    "questions",
    "foresaw",
    "said",
    "good",
    "news",
    "bad",
    "news",
    "us",
    "go",
    "global",
    "starts",
    "good",
    "news",
    "said",
    "sir",
    "well",
    "way",
    "become",
    "one",
    "world",
    "largest",
    "shipping",
    "company",
    "bad",
    "news",
    "however",
    "data",
    "centers",
    "almost",
    "run",
    "space",
    "setting",
    "new",
    "ones",
    "around",
    "world",
    "would",
    "expensive",
    "time",
    "consuming",
    "personnel",
    "let",
    "call",
    "mike",
    "explains",
    "situation",
    "saw",
    "ceo",
    "done",
    "homework",
    "going",
    "answered",
    "mike",
    "saying",
    "worry",
    "mic",
    "come",
    "solution",
    "problem",
    "called",
    "microsoft",
    "azure",
    "well",
    "mike",
    "honest",
    "id",
    "professional",
    "working",
    "company",
    "spend",
    "time",
    "learning",
    "latest",
    "technologies",
    "asked",
    "question",
    "honestly",
    "oh",
    "solve",
    "problem",
    "ceo",
    "begins",
    "explain",
    "azure",
    "mike",
    "starts",
    "cloud",
    "computing",
    "goes",
    "talks",
    "azure",
    "service",
    "offered",
    "azure",
    "azure",
    "better",
    "cloud",
    "providers",
    "great",
    "companies",
    "uses",
    "azure",
    "got",
    "benefited",
    "winds",
    "use",
    "cases",
    "azure",
    "begins",
    "explanation",
    "saying",
    "microsoft",
    "azure",
    "known",
    "cloud",
    "service",
    "provider",
    "works",
    "basis",
    "cloud",
    "computing",
    "microsoft",
    "azure",
    "formerly",
    "known",
    "windows",
    "azure",
    "microsoft",
    "public",
    "cloud",
    "computing",
    "platform",
    "also",
    "provides",
    "range",
    "cloud",
    "services",
    "including",
    "compute",
    "analytics",
    "storage",
    "networking",
    "always",
    "pick",
    "choose",
    "services",
    "develop",
    "scale",
    "applications",
    "even",
    "plan",
    "running",
    "existing",
    "applications",
    "public",
    "cloud",
    "microsoft",
    "azure",
    "platform",
    "service",
    "infrastructure",
    "service",
    "let",
    "fit",
    "conversation",
    "let",
    "talk",
    "cloud",
    "computing",
    "azure",
    "services",
    "offered",
    "azure",
    "azure",
    "leading",
    "compared",
    "cloud",
    "service",
    "providers",
    "companies",
    "using",
    "azure",
    "let",
    "talk",
    "simple",
    "terms",
    "cloud",
    "computing",
    "able",
    "access",
    "compute",
    "services",
    "like",
    "servers",
    "storage",
    "database",
    "networking",
    "software",
    "analytics",
    "intelligence",
    "lot",
    "internet",
    "cloud",
    "flexibility",
    "resources",
    "use",
    "like",
    "anytime",
    "want",
    "results",
    "use",
    "one",
    "becomes",
    "available",
    "immediately",
    "anytime",
    "want",
    "retire",
    "results",
    "simply",
    "retire",
    "service",
    "pay",
    "also",
    "typically",
    "pay",
    "services",
    "use",
    "helps",
    "greatly",
    "operating",
    "cost",
    "run",
    "infrastructure",
    "efficiently",
    "scale",
    "environment",
    "depending",
    "business",
    "needs",
    "changes",
    "servers",
    "storages",
    "databases",
    "networking",
    "accessed",
    "network",
    "remote",
    "systems",
    "remote",
    "computers",
    "hosted",
    "internet",
    "typically",
    "providers",
    "data",
    "center",
    "azure",
    "case",
    "use",
    "physical",
    "server",
    "server",
    "well",
    "still",
    "use",
    "physical",
    "servers",
    "vms",
    "know",
    "hosted",
    "hardware",
    "physical",
    "server",
    "provider",
    "environment",
    "none",
    "sit",
    "premises",
    "data",
    "center",
    "access",
    "remotely",
    "looks",
    "feels",
    "except",
    "fact",
    "remote",
    "location",
    "access",
    "remotely",
    "work",
    "remotely",
    "done",
    "shut",
    "pay",
    "use",
    "cases",
    "use",
    "cases",
    "cloud",
    "computing",
    "creating",
    "applications",
    "services",
    "use",
    "cases",
    "storing",
    "using",
    "cloud",
    "storage",
    "alone",
    "one",
    "thing",
    "ever",
    "grows",
    "organization",
    "storage",
    "every",
    "new",
    "day",
    "new",
    "storage",
    "requirement",
    "dynamic",
    "hard",
    "predict",
    "go",
    "buy",
    "big",
    "storage",
    "capacity",
    "front",
    "use",
    "storage",
    "capacity",
    "fully",
    "empty",
    "storages",
    "know",
    "wasting",
    "money",
    "instead",
    "go",
    "storage",
    "scales",
    "dynamically",
    "cloud",
    "put",
    "storage",
    "put",
    "data",
    "cloud",
    "pay",
    "storing",
    "next",
    "month",
    "deleted",
    "flushed",
    "files",
    "data",
    "pay",
    "less",
    "dynamic",
    "storage",
    "cloud",
    "lot",
    "companies",
    "getting",
    "benefited",
    "storing",
    "data",
    "cloud",
    "uh",
    "dynamic",
    "nature",
    "cost",
    "comes",
    "along",
    "cheap",
    "cost",
    "comes",
    "along",
    "also",
    "give",
    "lot",
    "providers",
    "like",
    "azure",
    "give",
    "data",
    "replication",
    "free",
    "promise",
    "sla",
    "along",
    "data",
    "store",
    "cloud",
    "sla",
    "attached",
    "also",
    "provide",
    "data",
    "recoveries",
    "well",
    "case",
    "something",
    "goes",
    "wrong",
    "physical",
    "disk",
    "data",
    "stored",
    "azure",
    "automatically",
    "makes",
    "data",
    "available",
    "redundant",
    "places",
    "stored",
    "data",
    "sla",
    "wanted",
    "keep",
    "use",
    "case",
    "azure",
    "hosting",
    "websites",
    "running",
    "blogs",
    "using",
    "compute",
    "service",
    "storing",
    "music",
    "letting",
    "users",
    "stream",
    "music",
    "azure",
    "good",
    "place",
    "store",
    "music",
    "stream",
    "music",
    "benefit",
    "cdn",
    "content",
    "delivery",
    "network",
    "allows",
    "us",
    "stream",
    "video",
    "audio",
    "files",
    "great",
    "speed",
    "know",
    "azure",
    "audio",
    "video",
    "application",
    "works",
    "seamlessly",
    "provided",
    "client",
    "low",
    "latency",
    "improves",
    "customer",
    "experience",
    "application",
    "azure",
    "compute",
    "service",
    "good",
    "place",
    "delivering",
    "software",
    "demand",
    "lot",
    "software",
    "embedded",
    "softwares",
    "buy",
    "using",
    "azure",
    "everything",
    "service",
    "model",
    "anytime",
    "need",
    "software",
    "go",
    "immediately",
    "buy",
    "software",
    "next",
    "one",
    "2r",
    "let",
    "say",
    "use",
    "return",
    "back",
    "bound",
    "yearly",
    "licensing",
    "cost",
    "azure",
    "computing",
    "services",
    "analytic",
    "available",
    "us",
    "analyze",
    "get",
    "good",
    "visualization",
    "going",
    "network",
    "logs",
    "performance",
    "metrics",
    "know",
    "instead",
    "looking",
    "logs",
    "searching",
    "logs",
    "trying",
    "manual",
    "things",
    "heaps",
    "heaps",
    "logs",
    "saved",
    "azure",
    "analytics",
    "services",
    "helps",
    "us",
    "get",
    "good",
    "visual",
    "going",
    "network",
    "dropped",
    "increased",
    "causing",
    "major",
    "driver",
    "top",
    "10",
    "errors",
    "get",
    "server",
    "application",
    "stuff",
    "like",
    "easily",
    "gathered",
    "azure",
    "analytic",
    "services",
    "cloud",
    "really",
    "cool",
    "term",
    "internet",
    "good",
    "analogy",
    "would",
    "looking",
    "back",
    "anytime",
    "look",
    "diagram",
    "know",
    "things",
    "transferred",
    "simply",
    "draw",
    "cloud",
    "right",
    "example",
    "mail",
    "gets",
    "sent",
    "person",
    "one",
    "country",
    "person",
    "country",
    "lot",
    "things",
    "happening",
    "time",
    "hit",
    "send",
    "button",
    "time",
    "person",
    "hits",
    "real",
    "button",
    "right",
    "simple",
    "easiest",
    "way",
    "putting",
    "picture",
    "simply",
    "draw",
    "cloud",
    "one",
    "end",
    "one",
    "person",
    "sending",
    "email",
    "end",
    "person",
    "reading",
    "email",
    "cloud",
    "really",
    "cool",
    "term",
    "internet",
    "basics",
    "cloud",
    "computing",
    "understood",
    "cloud",
    "computing",
    "general",
    "let",
    "talk",
    "microsoft",
    "azure",
    "cloud",
    "service",
    "microsoft",
    "azure",
    "set",
    "cloud",
    "services",
    "build",
    "manage",
    "deploy",
    "applications",
    "network",
    "help",
    "microsoft",
    "azure",
    "frameworks",
    "microsoft",
    "azure",
    "computing",
    "service",
    "created",
    "microsoft",
    "basically",
    "building",
    "testing",
    "deploying",
    "managing",
    "applications",
    "services",
    "global",
    "network",
    "microsoft",
    "managed",
    "data",
    "centers",
    "microsoft",
    "azure",
    "provides",
    "sas",
    "software",
    "service",
    "pass",
    "platform",
    "service",
    "iaas",
    "infrastructure",
    "service",
    "support",
    "many",
    "different",
    "programming",
    "languages",
    "tools",
    "framework",
    "tools",
    "framework",
    "include",
    "microsoft",
    "specific",
    "software",
    "let",
    "pick",
    "talk",
    "specific",
    "service",
    "example",
    "management",
    "azure",
    "automation",
    "provides",
    "way",
    "us",
    "automate",
    "manual",
    "long",
    "running",
    "frequently",
    "repeated",
    "tasks",
    "commonly",
    "performed",
    "tasks",
    "cloud",
    "enterprise",
    "environment",
    "saves",
    "us",
    "lot",
    "time",
    "increases",
    "reliability",
    "kind",
    "gives",
    "good",
    "administrative",
    "control",
    "even",
    "schedules",
    "task",
    "automatically",
    "performed",
    "regular",
    "basis",
    "give",
    "quick",
    "history",
    "microsoft",
    "azure",
    "launched",
    "first",
    "february",
    "2010",
    "awarded",
    "called",
    "industry",
    "leader",
    "infrastructure",
    "platform",
    "service",
    "gartner",
    "gartner",
    "world",
    "leading",
    "research",
    "advisory",
    "company",
    "microsoft",
    "azure",
    "supports",
    "number",
    "programming",
    "languages",
    "like",
    "c",
    "sharp",
    "java",
    "python",
    "cool",
    "services",
    "get",
    "use",
    "pay",
    "much",
    "use",
    "example",
    "use",
    "r",
    "get",
    "pay",
    "r",
    "even",
    "costliest",
    "system",
    "available",
    "use",
    "r",
    "pay",
    "particular",
    "r",
    "done",
    "billing",
    "resource",
    "used",
    "microsoft",
    "azure",
    "spread",
    "50",
    "regions",
    "around",
    "world",
    "quite",
    "easy",
    "us",
    "pick",
    "region",
    "start",
    "provisioning",
    "running",
    "applications",
    "probably",
    "day",
    "one",
    "infrastructure",
    "tools",
    "technologies",
    "needed",
    "run",
    "application",
    "already",
    "available",
    "commit",
    "code",
    "particular",
    "region",
    "build",
    "application",
    "launch",
    "particular",
    "region",
    "become",
    "live",
    "starting",
    "day",
    "one",
    "50",
    "regions",
    "around",
    "world",
    "carefully",
    "design",
    "environment",
    "provide",
    "low",
    "latency",
    "services",
    "customers",
    "right",
    "instead",
    "traditional",
    "data",
    "center",
    "let",
    "say",
    "know",
    "customers",
    "request",
    "travel",
    "way",
    "around",
    "globe",
    "reach",
    "data",
    "center",
    "lives",
    "side",
    "planet",
    "adds",
    "latency",
    "really",
    "feasible",
    "build",
    "data",
    "center",
    "near",
    "customer",
    "location",
    "cost",
    "involved",
    "azure",
    "possible",
    "azure",
    "already",
    "data",
    "centers",
    "around",
    "world",
    "pick",
    "data",
    "center",
    "build",
    "environment",
    "available",
    "starting",
    "day",
    "one",
    "number",
    "one",
    "also",
    "cost",
    "considerably",
    "saved",
    "using",
    "public",
    "cloud",
    "instead",
    "physical",
    "infrastructure",
    "serve",
    "customers",
    "local",
    "location",
    "services",
    "azure",
    "offering",
    "ever",
    "increasing",
    "speak",
    "like",
    "200",
    "plus",
    "services",
    "offered",
    "span",
    "different",
    "domain",
    "different",
    "platform",
    "different",
    "technologies",
    "available",
    "within",
    "azure",
    "console",
    "portal",
    "going",
    "talk",
    "later",
    "section",
    "hold",
    "breath",
    "till",
    "talk",
    "know",
    "like",
    "200",
    "plus",
    "services",
    "offered",
    "azure",
    "let",
    "talk",
    "different",
    "services",
    "azure",
    "starting",
    "artificial",
    "intelligence",
    "plus",
    "machine",
    "learning",
    "lot",
    "tools",
    "technologies",
    "wide",
    "variety",
    "services",
    "available",
    "azure",
    "includes",
    "artificial",
    "intelligence",
    "plus",
    "machine",
    "learning",
    "plus",
    "analytic",
    "services",
    "get",
    "give",
    "us",
    "good",
    "visual",
    "data",
    "application",
    "performing",
    "type",
    "category",
    "data",
    "stored",
    "read",
    "logs",
    "variety",
    "compute",
    "services",
    "different",
    "vms",
    "different",
    "size",
    "different",
    "operating",
    "systems",
    "different",
    "containers",
    "available",
    "different",
    "type",
    "databases",
    "available",
    "lot",
    "developer",
    "tools",
    "available",
    "us",
    "identity",
    "service",
    "manage",
    "users",
    "azure",
    "cloud",
    "users",
    "integrated",
    "federated",
    "let",
    "say",
    "google",
    "facebook",
    "know",
    "linkedin",
    "external",
    "federation",
    "services",
    "used",
    "integrate",
    "identity",
    "system",
    "iots",
    "iot",
    "services",
    "iot",
    "tools",
    "technologies",
    "available",
    "management",
    "tools",
    "manage",
    "users",
    "creating",
    "identity",
    "one",
    "managing",
    "top",
    "totally",
    "different",
    "thing",
    "tools",
    "technologies",
    "manage",
    "users",
    "cool",
    "services",
    "data",
    "migration",
    "data",
    "migration",
    "made",
    "simple",
    "tools",
    "technologies",
    "available",
    "mobile",
    "application",
    "development",
    "plan",
    "network",
    "cloud",
    "networking",
    "services",
    "implement",
    "security",
    "azure",
    "provider",
    "security",
    "services",
    "azure",
    "cloud",
    "possible",
    "lot",
    "storage",
    "options",
    "available",
    "cloud",
    "glimpse",
    "big",
    "list",
    "services",
    "available",
    "azure",
    "cloud",
    "glimpse",
    "available",
    "cloud",
    "let",
    "talk",
    "services",
    "specific",
    "let",
    "take",
    "compute",
    "example",
    "know",
    "whenever",
    "building",
    "new",
    "application",
    "deploying",
    "existing",
    "ones",
    "azure",
    "compute",
    "service",
    "provides",
    "infrastructure",
    "need",
    "run",
    "maintain",
    "application",
    "easily",
    "tap",
    "capacity",
    "azure",
    "cloud",
    "service",
    "scale",
    "compute",
    "requirement",
    "demand",
    "also",
    "containerize",
    "application",
    "option",
    "choosing",
    "windows",
    "linux",
    "via",
    "machine",
    "take",
    "advantage",
    "flexible",
    "options",
    "azure",
    "provides",
    "us",
    "migrate",
    "vms",
    "azure",
    "lot",
    "compute",
    "services",
    "also",
    "include",
    "identity",
    "solution",
    "meaning",
    "integration",
    "active",
    "directory",
    "cloud",
    "lot",
    "let",
    "look",
    "services",
    "compute",
    "domain",
    "provides",
    "services",
    "compute",
    "domain",
    "provides",
    "virtual",
    "machines",
    "azure",
    "virtual",
    "machines",
    "gives",
    "us",
    "ability",
    "develop",
    "manage",
    "virtual",
    "computer",
    "environment",
    "virtualized",
    "environment",
    "inside",
    "azure",
    "cloud",
    "environment",
    "virtual",
    "private",
    "network",
    "talk",
    "virtual",
    "private",
    "network",
    "later",
    "point",
    "uh",
    "know",
    "lot",
    "services",
    "available",
    "azure",
    "compute",
    "servers",
    "get",
    "benefited",
    "always",
    "choose",
    "wide",
    "range",
    "compute",
    "options",
    "example",
    "know",
    "option",
    "choose",
    "operating",
    "system",
    "option",
    "choose",
    "whether",
    "system",
    "premises",
    "cloud",
    "want",
    "maintain",
    "environment",
    "premises",
    "cloud",
    "option",
    "choosing",
    "operating",
    "system",
    "whether",
    "want",
    "use",
    "operating",
    "system",
    "software",
    "attached",
    "want",
    "go",
    "buy",
    "operating",
    "system",
    "cloud",
    "azure",
    "marketplace",
    "options",
    "available",
    "us",
    "want",
    "buy",
    "compute",
    "environment",
    "compute",
    "environments",
    "easily",
    "scalable",
    "meaning",
    "easily",
    "scale",
    "vm",
    "instances",
    "one",
    "instance",
    "thousands",
    "virtual",
    "machines",
    "matter",
    "minutes",
    "simply",
    "put",
    "couple",
    "button",
    "clicks",
    "services",
    "available",
    "pay",
    "use",
    "model",
    "meaning",
    "upfront",
    "cost",
    "use",
    "service",
    "pay",
    "services",
    "used",
    "literal",
    "commitment",
    "comes",
    "using",
    "virtual",
    "machines",
    "cloud",
    "services",
    "built",
    "billing",
    "basis",
    "right",
    "point",
    "billing",
    "model",
    "point",
    "overpaying",
    "services",
    "attractive",
    "let",
    "talk",
    "batch",
    "service",
    "bad",
    "service",
    "always",
    "independent",
    "regardless",
    "whether",
    "choose",
    "windows",
    "linux",
    "going",
    "run",
    "fairly",
    "well",
    "batch",
    "servers",
    "take",
    "advantage",
    "environment",
    "unique",
    "features",
    "short",
    "batch",
    "service",
    "helps",
    "us",
    "manage",
    "whole",
    "batch",
    "environment",
    "also",
    "helps",
    "schedule",
    "jobs",
    "azure",
    "batch",
    "service",
    "actually",
    "runs",
    "large",
    "scale",
    "parallel",
    "high",
    "performance",
    "computing",
    "batch",
    "jobs",
    "highly",
    "efficient",
    "azure",
    "run",
    "bad",
    "services",
    "azure",
    "batch",
    "creates",
    "pool",
    "computer",
    "nodes",
    "installs",
    "needed",
    "applications",
    "want",
    "run",
    "schedules",
    "jobs",
    "individual",
    "nodes",
    "pools",
    "customer",
    "need",
    "us",
    "install",
    "cluster",
    "need",
    "us",
    "install",
    "software",
    "actually",
    "use",
    "jobs",
    "even",
    "manage",
    "even",
    "scale",
    "infrastructure",
    "software",
    "everything",
    "managed",
    "azure",
    "batch",
    "service",
    "platform",
    "service",
    "additional",
    "charge",
    "using",
    "batch",
    "service",
    "except",
    "mean",
    "charges",
    "paying",
    "virtual",
    "machines",
    "service",
    "uses",
    "storage",
    "using",
    "course",
    "networking",
    "services",
    "would",
    "using",
    "batch",
    "service",
    "let",
    "summarize",
    "bad",
    "service",
    "choice",
    "operating",
    "system",
    "pick",
    "use",
    "scales",
    "alternative",
    "batch",
    "would",
    "queues",
    "queues",
    "pay",
    "infrastructure",
    "even",
    "using",
    "batch",
    "pay",
    "use",
    "bad",
    "service",
    "helps",
    "us",
    "manage",
    "application",
    "manage",
    "scheduling",
    "whole",
    "one",
    "thing",
    "next",
    "thing",
    "compute",
    "domain",
    "let",
    "talk",
    "fabric",
    "service",
    "fabric",
    "service",
    "actually",
    "distributed",
    "system",
    "platform",
    "helps",
    "us",
    "package",
    "deploy",
    "manage",
    "scalable",
    "reliable",
    "microservice",
    "containers",
    "help",
    "azure",
    "fabric",
    "service",
    "helps",
    "us",
    "helps",
    "developers",
    "administrators",
    "avoid",
    "complex",
    "infrastructure",
    "problems",
    "focus",
    "implementing",
    "workloads",
    "taking",
    "care",
    "development",
    "taking",
    "care",
    "application",
    "instead",
    "spending",
    "time",
    "infrastructure",
    "service",
    "fabric",
    "service",
    "fabric",
    "provides",
    "runtime",
    "capabilities",
    "life",
    "cycle",
    "management",
    "two",
    "applications",
    "composed",
    "micro",
    "services",
    "infrastructure",
    "management",
    "service",
    "fabric",
    "easily",
    "scale",
    "application",
    "tens",
    "hundreds",
    "even",
    "thousands",
    "machines",
    "machines",
    "represent",
    "containers",
    "next",
    "thing",
    "compute",
    "domain",
    "let",
    "talk",
    "virtual",
    "machine",
    "scale",
    "set",
    "virtual",
    "machine",
    "scale",
    "lets",
    "us",
    "create",
    "group",
    "identical",
    "load",
    "balanced",
    "vms",
    "want",
    "mention",
    "helps",
    "us",
    "manage",
    "group",
    "identical",
    "load",
    "balanced",
    "vms",
    "number",
    "instances",
    "number",
    "vm",
    "instances",
    "scale",
    "set",
    "increase",
    "decrease",
    "response",
    "demand",
    "response",
    "schedule",
    "define",
    "know",
    "resources",
    "needed",
    "monday",
    "morning",
    "would",
    "required",
    "saturday",
    "sunday",
    "morning",
    "right",
    "even",
    "within",
    "day",
    "resources",
    "would",
    "needed",
    "beginning",
    "business",
    "hour",
    "resources",
    "would",
    "needed",
    "noon",
    "know",
    "eight",
    "nine",
    "evening",
    "demands",
    "could",
    "actually",
    "vary",
    "environment",
    "skill",
    "set",
    "helps",
    "us",
    "take",
    "care",
    "varying",
    "demand",
    "take",
    "care",
    "different",
    "infrastructure",
    "requirement",
    "different",
    "schedule",
    "throughout",
    "day",
    "throughout",
    "week",
    "throughout",
    "month",
    "could",
    "throughout",
    "year",
    "well",
    "skill",
    "set",
    "also",
    "allows",
    "us",
    "provide",
    "high",
    "availability",
    "applications",
    "helps",
    "us",
    "centrally",
    "manage",
    "configure",
    "update",
    "large",
    "number",
    "vms",
    "one",
    "thing",
    "might",
    "ask",
    "well",
    "virtual",
    "machines",
    "enough",
    "would",
    "need",
    "virtual",
    "machine",
    "skill",
    "set",
    "like",
    "said",
    "virtual",
    "machine",
    "skill",
    "set",
    "helps",
    "us",
    "greater",
    "redundancy",
    "improved",
    "performance",
    "applications",
    "applications",
    "accessed",
    "load",
    "balancer",
    "actually",
    "distributes",
    "request",
    "application",
    "instances",
    "nutshell",
    "virtual",
    "machine",
    "scale",
    "set",
    "uh",
    "helps",
    "us",
    "create",
    "large",
    "number",
    "identical",
    "virtual",
    "machines",
    "number",
    "one",
    "skill",
    "set",
    "increase",
    "decrease",
    "virtual",
    "machines",
    "virtual",
    "machine",
    "scale",
    "set",
    "centrally",
    "manage",
    "configure",
    "update",
    "big",
    "group",
    "vms",
    "great",
    "use",
    "case",
    "comes",
    "big",
    "data",
    "container",
    "workloads",
    "next",
    "thing",
    "compute",
    "domain",
    "let",
    "talk",
    "cloud",
    "services",
    "azure",
    "cloud",
    "service",
    "actually",
    "platform",
    "service",
    "friendly",
    "fact",
    "designed",
    "applications",
    "support",
    "scalability",
    "application",
    "requires",
    "scalability",
    "reliability",
    "top",
    "want",
    "inexpensive",
    "operate",
    "azure",
    "cloud",
    "service",
    "provides",
    "would",
    "cloud",
    "service",
    "run",
    "well",
    "runs",
    "vm",
    "platform",
    "service",
    "vms",
    "infrastructure",
    "service",
    "run",
    "applications",
    "vm",
    "cloud",
    "service",
    "becomes",
    "platform",
    "service",
    "got",
    "thinking",
    "infrastructure",
    "service",
    "like",
    "vms",
    "first",
    "create",
    "configure",
    "environment",
    "run",
    "applications",
    "top",
    "let",
    "look",
    "responsibility",
    "responsibility",
    "us",
    "vm",
    "manage",
    "everything",
    "end",
    "end",
    "like",
    "uh",
    "know",
    "deploying",
    "new",
    "patches",
    "picking",
    "versions",
    "operating",
    "system",
    "making",
    "sure",
    "intact",
    "stuff",
    "managed",
    "us",
    "contrary",
    "platform",
    "service",
    "mean",
    "environment",
    "already",
    "ready",
    "deploy",
    "application",
    "manage",
    "platform",
    "mean",
    "manage",
    "platform",
    "administrator",
    "administration",
    "taken",
    "care",
    "azure",
    "like",
    "know",
    "deploying",
    "new",
    "versions",
    "operating",
    "system",
    "handled",
    "azure",
    "deploy",
    "application",
    "manage",
    "application",
    "infrastructure",
    "management",
    "handled",
    "azure",
    "cloud",
    "service",
    "provide",
    "cloud",
    "service",
    "provides",
    "platform",
    "uh",
    "uh",
    "write",
    "uh",
    "application",
    "code",
    "worry",
    "hardware",
    "simply",
    "hand",
    "code",
    "cloud",
    "service",
    "takes",
    "care",
    "worry",
    "hardware",
    "responsibilities",
    "like",
    "patching",
    "something",
    "crashes",
    "update",
    "infrastructure",
    "manage",
    "maintenance",
    "downtime",
    "underlying",
    "infrastructure",
    "handled",
    "azure",
    "also",
    "provides",
    "good",
    "testing",
    "environment",
    "us",
    "know",
    "simply",
    "run",
    "code",
    "test",
    "actually",
    "released",
    "production",
    "want",
    "expand",
    "bit",
    "testing",
    "applications",
    "azure",
    "cloud",
    "service",
    "actually",
    "gives",
    "us",
    "staging",
    "environment",
    "testing",
    "new",
    "release",
    "without",
    "affecting",
    "existing",
    "release",
    "actually",
    "reduces",
    "customer",
    "downtime",
    "run",
    "application",
    "tested",
    "anytime",
    "ready",
    "production",
    "needed",
    "us",
    "move",
    "production",
    "simply",
    "swap",
    "staging",
    "environment",
    "production",
    "environment",
    "old",
    "production",
    "environment",
    "become",
    "new",
    "staging",
    "environment",
    "add",
    "swap",
    "back",
    "later",
    "point",
    "kind",
    "gives",
    "us",
    "unswappable",
    "environment",
    "testing",
    "applications",
    "gives",
    "us",
    "health",
    "monitoring",
    "alerts",
    "helps",
    "us",
    "monitor",
    "health",
    "availability",
    "application",
    "dashboard",
    "benefit",
    "use",
    "azure",
    "cloud",
    "services",
    "shows",
    "key",
    "statistics",
    "one",
    "place",
    "also",
    "set",
    "alerts",
    "one",
    "service",
    "availability",
    "certain",
    "metrics",
    "concerned",
    "degrades",
    "next",
    "thing",
    "compute",
    "domain",
    "let",
    "talk",
    "functions",
    "functions",
    "serverless",
    "computing",
    "many",
    "time",
    "heard",
    "azure",
    "serverless",
    "lot",
    "time",
    "referencing",
    "person",
    "talking",
    "referencing",
    "serverless",
    "computing",
    "azure",
    "functions",
    "serverless",
    "computing",
    "service",
    "hosted",
    "microsoft",
    "azure",
    "main",
    "motive",
    "function",
    "accelerate",
    "simplify",
    "application",
    "development",
    "functions",
    "helps",
    "us",
    "run",
    "code",
    "demand",
    "without",
    "need",
    "manage",
    "azure",
    "infrastructure",
    "azure",
    "functions",
    "script",
    "piece",
    "code",
    "gets",
    "run",
    "response",
    "event",
    "want",
    "handle",
    "short",
    "write",
    "code",
    "need",
    "problem",
    "hand",
    "without",
    "actually",
    "worrying",
    "whole",
    "application",
    "infrastructure",
    "running",
    "code",
    "best",
    "best",
    "use",
    "functions",
    "pay",
    "time",
    "code",
    "runs",
    "functions",
    "provide",
    "azure",
    "functions",
    "provide",
    "azure",
    "functions",
    "allow",
    "users",
    "build",
    "applications",
    "using",
    "serverless",
    "simple",
    "functions",
    "programming",
    "language",
    "choice",
    "current",
    "programming",
    "languages",
    "supported",
    "c",
    "sharp",
    "f",
    "sharp",
    "java",
    "php",
    "really",
    "worry",
    "provisioning",
    "maintaining",
    "servers",
    "code",
    "requires",
    "resource",
    "yes",
    "azure",
    "functions",
    "handles",
    "provides",
    "additional",
    "resources",
    "needed",
    "code",
    "best",
    "part",
    "pay",
    "amount",
    "time",
    "functions",
    "running",
    "resources",
    "amount",
    "time",
    "function",
    "running",
    "next",
    "thing",
    "moving",
    "new",
    "domain",
    "let",
    "talk",
    "container",
    "domain",
    "azure",
    "container",
    "domain",
    "container",
    "service",
    "allows",
    "us",
    "quickly",
    "deploy",
    "production",
    "ready",
    "kubernetes",
    "docker",
    "swamp",
    "cluster",
    "container",
    "container",
    "standard",
    "unit",
    "software",
    "packages",
    "code",
    "dependencies",
    "applications",
    "run",
    "quickly",
    "reliably",
    "one",
    "computing",
    "environment",
    "another",
    "could",
    "testing",
    "uh",
    "staging",
    "developing",
    "development",
    "environment",
    "staging",
    "production",
    "one",
    "production",
    "another",
    "production",
    "premises",
    "cloud",
    "one",
    "cloud",
    "another",
    "cloud",
    "vice",
    "versa",
    "imagine",
    "option",
    "worry",
    "vm",
    "focus",
    "application",
    "well",
    "exactly",
    "containers",
    "helps",
    "us",
    "achieve",
    "container",
    "instances",
    "enable",
    "us",
    "focus",
    "applications",
    "worrying",
    "managing",
    "vms",
    "worrying",
    "learning",
    "new",
    "tools",
    "required",
    "manage",
    "vms",
    "even",
    "deployment",
    "applications",
    "create",
    "run",
    "container",
    "running",
    "container",
    "helps",
    "us",
    "achieve",
    "able",
    "manage",
    "needing",
    "manage",
    "virtual",
    "machines",
    "containers",
    "uh",
    "deployed",
    "cloud",
    "using",
    "single",
    "command",
    "using",
    "command",
    "line",
    "interface",
    "couple",
    "button",
    "clicks",
    "using",
    "azure",
    "portal",
    "containers",
    "kept",
    "lightweight",
    "equally",
    "secure",
    "virtual",
    "machines",
    "let",
    "talk",
    "container",
    "services",
    "next",
    "thing",
    "container",
    "service",
    "sometimes",
    "called",
    "azure",
    "kubernetes",
    "service",
    "helps",
    "us",
    "manage",
    "containers",
    "container",
    "one",
    "thing",
    "service",
    "used",
    "manage",
    "container",
    "another",
    "thing",
    "kubernetes",
    "service",
    "acs",
    "helps",
    "us",
    "manage",
    "containers",
    "let",
    "expand",
    "bit",
    "azure",
    "container",
    "service",
    "acs",
    "actually",
    "provides",
    "way",
    "simplify",
    "creation",
    "configuration",
    "management",
    "cluster",
    "virtual",
    "machines",
    "run",
    "containerized",
    "applications",
    "top",
    "deploying",
    "deploying",
    "containers",
    "might",
    "take",
    "like",
    "15",
    "20",
    "minutes",
    "deploying",
    "virtual",
    "machines",
    "run",
    "containers",
    "might",
    "take",
    "15",
    "20",
    "minutes",
    "provisioned",
    "actually",
    "manage",
    "using",
    "simple",
    "ssh",
    "tunnel",
    "acs",
    "runs",
    "application",
    "runs",
    "applications",
    "docker",
    "images",
    "mean",
    "docker",
    "images",
    "makes",
    "sure",
    "applications",
    "container",
    "runs",
    "fully",
    "portable",
    "images",
    "portable",
    "acs",
    "also",
    "helps",
    "us",
    "orchestrate",
    "container",
    "environment",
    "also",
    "helps",
    "us",
    "ensure",
    "applications",
    "run",
    "containers",
    "scaled",
    "thousands",
    "even",
    "tens",
    "thousands",
    "containers",
    "nutshell",
    "managing",
    "existing",
    "application",
    "container",
    "running",
    "using",
    "aks",
    "acs",
    "really",
    "easy",
    "make",
    "application",
    "management",
    "migration",
    "easy",
    "managing",
    "container",
    "based",
    "architecture",
    "discussed",
    "containers",
    "could",
    "tens",
    "even",
    "tens",
    "thousands",
    "containers",
    "managing",
    "made",
    "simple",
    "using",
    "container",
    "services",
    "even",
    "training",
    "model",
    "using",
    "large",
    "data",
    "set",
    "complex",
    "resource",
    "intensive",
    "environment",
    "aks",
    "helps",
    "us",
    "simplify",
    "environment",
    "right",
    "next",
    "thing",
    "container",
    "domain",
    "let",
    "talk",
    "container",
    "registry",
    "spoke",
    "registry",
    "little",
    "bit",
    "spoke",
    "docker",
    "images",
    "container",
    "registry",
    "single",
    "place",
    "store",
    "images",
    "docker",
    "images",
    "use",
    "use",
    "containers",
    "docker",
    "images",
    "use",
    "image",
    "purposes",
    "container",
    "images",
    "central",
    "registry",
    "used",
    "ease",
    "container",
    "development",
    "easing",
    "storage",
    "management",
    "container",
    "images",
    "store",
    "kinds",
    "images",
    "like",
    "docker",
    "swamp",
    "images",
    "used",
    "docker",
    "swarm",
    "kubernetes",
    "everything",
    "stored",
    "container",
    "registry",
    "azure",
    "anytime",
    "store",
    "container",
    "image",
    "provides",
    "us",
    "option",
    "jio",
    "replication",
    "means",
    "efficiently",
    "manage",
    "single",
    "registry",
    "replicated",
    "across",
    "multiple",
    "regions",
    "jio",
    "replication",
    "actually",
    "enables",
    "us",
    "manage",
    "global",
    "deployments",
    "assuming",
    "environment",
    "requires",
    "global",
    "deployment",
    "helps",
    "us",
    "manage",
    "global",
    "deployments",
    "one",
    "entity",
    "would",
    "updating",
    "would",
    "editing",
    "one",
    "image",
    "image",
    "gets",
    "replicated",
    "throughout",
    "global",
    "replication",
    "centers",
    "would",
    "set",
    "one",
    "editing",
    "would",
    "actually",
    "edited",
    "global",
    "images",
    "global",
    "images",
    "would",
    "provisioned",
    "global",
    "application",
    "one",
    "edit",
    "replication",
    "provisioning",
    "applications",
    "global",
    "wide",
    "replication",
    "also",
    "helps",
    "us",
    "helps",
    "us",
    "network",
    "latency",
    "know",
    "anytime",
    "application",
    "needs",
    "deploy",
    "rely",
    "single",
    "source",
    "reached",
    "high",
    "latency",
    "network",
    "global",
    "replications",
    "around",
    "world",
    "anytime",
    "application",
    "wants",
    "check",
    "back",
    "would",
    "check",
    "back",
    "uh",
    "application",
    "nearby",
    "location",
    "application",
    "global",
    "replication",
    "means",
    "managing",
    "single",
    "entity",
    "replicated",
    "across",
    "multiple",
    "regions",
    "globe",
    "next",
    "thing",
    "learning",
    "let",
    "talk",
    "azure",
    "databases",
    "azure",
    "databases",
    "rational",
    "fact",
    "many",
    "flavors",
    "going",
    "look",
    "different",
    "flavors",
    "sql",
    "nosql",
    "cache",
    "type",
    "database",
    "offer",
    "going",
    "learn",
    "one",
    "time",
    "going",
    "learn",
    "one",
    "one",
    "azure",
    "sql",
    "database",
    "relational",
    "database",
    "fact",
    "regional",
    "database",
    "service",
    "managed",
    "azure",
    "get",
    "lot",
    "management",
    "rational",
    "database",
    "service",
    "uh",
    "based",
    "microsoft",
    "sql",
    "server",
    "database",
    "engine",
    "database",
    "high",
    "performance",
    "database",
    "reliable",
    "secure",
    "well",
    "high",
    "reliability",
    "high",
    "performance",
    "high",
    "security",
    "really",
    "anything",
    "comes",
    "along",
    "managed",
    "azure",
    "two",
    "things",
    "definitely",
    "need",
    "mention",
    "azure",
    "sql",
    "database",
    "intelligent",
    "service",
    "number",
    "one",
    "fully",
    "managed",
    "azure",
    "also",
    "one",
    "good",
    "thing",
    "intelligence",
    "learns",
    "app",
    "patterns",
    "adapts",
    "maximize",
    "performance",
    "reliability",
    "data",
    "protection",
    "application",
    "something",
    "found",
    "many",
    "cloud",
    "providers",
    "aware",
    "thought",
    "mention",
    "uses",
    "intelligence",
    "learn",
    "user",
    "database",
    "patterns",
    "helps",
    "improve",
    "performance",
    "protection",
    "migration",
    "importing",
    "data",
    "easy",
    "comes",
    "azure",
    "sql",
    "database",
    "readily",
    "immediately",
    "used",
    "analytic",
    "reporting",
    "intelligent",
    "applications",
    "azure",
    "next",
    "thing",
    "let",
    "talk",
    "azure",
    "cosmo",
    "db",
    "azure",
    "cosmodb",
    "database",
    "service",
    "nosql",
    "type",
    "created",
    "provide",
    "low",
    "latency",
    "application",
    "scales",
    "dynamically",
    "scales",
    "rapidly",
    "azure",
    "cosmodb",
    "globally",
    "distributed",
    "service",
    "database",
    "provisioned",
    "click",
    "button",
    "got",
    "need",
    "provision",
    "azure",
    "cosmodb",
    "azure",
    "helps",
    "scaling",
    "database",
    "elastically",
    "independently",
    "scale",
    "throughput",
    "storage",
    "across",
    "database",
    "azure",
    "geographic",
    "regions",
    "provides",
    "good",
    "throughput",
    "provides",
    "good",
    "latency",
    "provides",
    "good",
    "availability",
    "provides",
    "azure",
    "promises",
    "comprehensive",
    "sla",
    "database",
    "offer",
    "best",
    "part",
    "cosmodb",
    "cosmodb",
    "built",
    "global",
    "distribution",
    "mind",
    "built",
    "horizontal",
    "scale",
    "mind",
    "use",
    "paying",
    "used",
    "remember",
    "difference",
    "azure",
    "cosmodb",
    "sql",
    "database",
    "azure",
    "cosmodb",
    "supports",
    "nosql",
    "whereas",
    "sql",
    "alright",
    "things",
    "azure",
    "cosmodb",
    "allows",
    "users",
    "use",
    "key",
    "value",
    "graph",
    "column",
    "family",
    "document",
    "data",
    "also",
    "gives",
    "users",
    "number",
    "ap",
    "options",
    "like",
    "sql",
    "javascript",
    "mongodb",
    "others",
    "might",
    "want",
    "check",
    "document",
    "time",
    "reading",
    "best",
    "part",
    "mentioned",
    "get",
    "use",
    "paying",
    "amount",
    "storage",
    "throughput",
    "required",
    "storage",
    "throughput",
    "elastically",
    "scaled",
    "based",
    "requirement",
    "r",
    "right",
    "let",
    "talk",
    "cache",
    "discussion",
    "azure",
    "database",
    "wo",
    "complete",
    "without",
    "talking",
    "redis",
    "cache",
    "redis",
    "cache",
    "secure",
    "data",
    "cache",
    "also",
    "called",
    "also",
    "sometimes",
    "called",
    "messaging",
    "broker",
    "provides",
    "high",
    "throughput",
    "low",
    "latency",
    "access",
    "data",
    "applications",
    "cash",
    "based",
    "popular",
    "open",
    "source",
    "caching",
    "product",
    "sometimes",
    "called",
    "cash",
    "use",
    "case",
    "typically",
    "used",
    "cache",
    "improve",
    "performance",
    "scalability",
    "system",
    "rely",
    "heavily",
    "backend",
    "data",
    "stores",
    "performance",
    "use",
    "zach",
    "improved",
    "temporarily",
    "copying",
    "frequently",
    "accessed",
    "data",
    "fast",
    "storage",
    "located",
    "close",
    "application",
    "redis",
    "cache",
    "fast",
    "storage",
    "located",
    "memory",
    "redis",
    "cache",
    "instead",
    "loaded",
    "actual",
    "disk",
    "database",
    "redis",
    "cache",
    "also",
    "used",
    "data",
    "structure",
    "store",
    "used",
    "distributed",
    "database",
    "message",
    "broker",
    "variety",
    "use",
    "cases",
    "redis",
    "cache",
    "using",
    "redis",
    "cache",
    "application",
    "performance",
    "improved",
    "taking",
    "advantage",
    "low",
    "latency",
    "height",
    "throughput",
    "performance",
    "redis",
    "cache",
    "engine",
    "provides",
    "summarize",
    "redis",
    "cache",
    "use",
    "redis",
    "cache",
    "data",
    "stored",
    "memory",
    "instead",
    "disk",
    "ensure",
    "high",
    "throughput",
    "low",
    "latency",
    "application",
    "needs",
    "read",
    "data",
    "provides",
    "various",
    "levels",
    "scaling",
    "without",
    "downtime",
    "interference",
    "redis",
    "cache",
    "actually",
    "backed",
    "reduce",
    "server",
    "supports",
    "string",
    "hashes",
    "linked",
    "list",
    "various",
    "data",
    "structures",
    "let",
    "talk",
    "security",
    "identity",
    "services",
    "identity",
    "management",
    "specific",
    "process",
    "authenticating",
    "first",
    "authorizing",
    "using",
    "security",
    "principles",
    "identity",
    "management",
    "involves",
    "controlling",
    "information",
    "principle",
    "identities",
    "might",
    "ask",
    "principle",
    "identity",
    "identity",
    "principle",
    "identity",
    "services",
    "applications",
    "users",
    "groups",
    "lot",
    "speciality",
    "identity",
    "management",
    "helps",
    "authenticate",
    "authorize",
    "principles",
    "cloud",
    "also",
    "helps",
    "authenticate",
    "authorize",
    "principles",
    "resources",
    "premises",
    "especially",
    "run",
    "hybrid",
    "cloud",
    "environment",
    "services",
    "features",
    "identity",
    "management",
    "helps",
    "us",
    "get",
    "additional",
    "level",
    "validation",
    "like",
    "identity",
    "management",
    "provide",
    "authentication",
    "provide",
    "access",
    "policies",
    "based",
    "condition",
    "permit",
    "deny",
    "based",
    "condition",
    "also",
    "monitor",
    "suspicious",
    "activity",
    "also",
    "report",
    "also",
    "help",
    "generate",
    "alerts",
    "potential",
    "security",
    "issues",
    "way",
    "mitigate",
    "send",
    "us",
    "alert",
    "get",
    "involved",
    "prevent",
    "security",
    "accident",
    "happening",
    "let",
    "talk",
    "identity",
    "management",
    "services",
    "security",
    "identity",
    "management",
    "azure",
    "security",
    "center",
    "azure",
    "security",
    "center",
    "provides",
    "security",
    "management",
    "threat",
    "protection",
    "across",
    "workloads",
    "cloud",
    "hybrid",
    "environment",
    "helps",
    "control",
    "user",
    "access",
    "application",
    "control",
    "stop",
    "malicious",
    "activity",
    "present",
    "helps",
    "us",
    "find",
    "fix",
    "vulnerabilities",
    "even",
    "exploited",
    "integrates",
    "well",
    "analytic",
    "methods",
    "helps",
    "us",
    "identify",
    "gives",
    "us",
    "intelligent",
    "identify",
    "detect",
    "attacks",
    "prevent",
    "actually",
    "happen",
    "also",
    "works",
    "seamlessly",
    "hybrid",
    "environments",
    "one",
    "policy",
    "one",
    "policy",
    "cloud",
    "unified",
    "service",
    "cloud",
    "next",
    "service",
    "security",
    "identity",
    "would",
    "key",
    "vault",
    "key",
    "vault",
    "service",
    "feature",
    "helps",
    "safeguard",
    "cryptographic",
    "keys",
    "secrets",
    "used",
    "cloud",
    "applications",
    "services",
    "words",
    "azure",
    "keyword",
    "tool",
    "securely",
    "storing",
    "accessing",
    "secrets",
    "environment",
    "mean",
    "secret",
    "keys",
    "secret",
    "anything",
    "really",
    "want",
    "tight",
    "control",
    "access",
    "like",
    "certificates",
    "like",
    "passwords",
    "stuff",
    "like",
    "tell",
    "keyword",
    "actually",
    "solves",
    "would",
    "actually",
    "explain",
    "keyword",
    "key",
    "vault",
    "used",
    "secrets",
    "management",
    "helped",
    "securely",
    "storing",
    "tokens",
    "passwords",
    "certificates",
    "helps",
    "key",
    "management",
    "really",
    "helps",
    "creating",
    "controlling",
    "encryption",
    "keys",
    "would",
    "use",
    "encrypt",
    "data",
    "helps",
    "certificate",
    "management",
    "talking",
    "certification",
    "management",
    "helps",
    "us",
    "easily",
    "provision",
    "manage",
    "deploy",
    "public",
    "private",
    "ssl",
    "tls",
    "certificates",
    "azure",
    "lot",
    "nutshell",
    "keyword",
    "provides",
    "users",
    "ability",
    "provision",
    "new",
    "walls",
    "keys",
    "matter",
    "minutes",
    "single",
    "command",
    "couple",
    "button",
    "clicks",
    "also",
    "helps",
    "users",
    "centrally",
    "manage",
    "keys",
    "secrets",
    "policies",
    "next",
    "list",
    "let",
    "talk",
    "azure",
    "active",
    "directory",
    "azure",
    "active",
    "directory",
    "helps",
    "us",
    "create",
    "intelligent",
    "driven",
    "access",
    "policies",
    "limit",
    "resource",
    "usage",
    "manage",
    "user",
    "identities",
    "mean",
    "azure",
    "active",
    "directory",
    "cloud",
    "based",
    "active",
    "directory",
    "identity",
    "management",
    "service",
    "azure",
    "active",
    "directory",
    "combines",
    "actually",
    "combination",
    "core",
    "directory",
    "services",
    "plus",
    "application",
    "access",
    "management",
    "plus",
    "identity",
    "protection",
    "one",
    "good",
    "thing",
    "azure",
    "fact",
    "lot",
    "good",
    "things",
    "especially",
    "running",
    "hybrid",
    "environments",
    "might",
    "wonder",
    "well",
    "azure",
    "active",
    "directory",
    "going",
    "behave",
    "azure",
    "active",
    "directory",
    "built",
    "work",
    "cloud",
    "environment",
    "well",
    "also",
    "works",
    "seamlessly",
    "mobile",
    "applications",
    "well",
    "nutshell",
    "azure",
    "active",
    "directory",
    "acts",
    "central",
    "point",
    "identity",
    "access",
    "management",
    "cloud",
    "environment",
    "also",
    "provides",
    "good",
    "security",
    "solutions",
    "protect",
    "unauthorized",
    "access",
    "app",
    "data",
    "discussed",
    "security",
    "identity",
    "let",
    "talk",
    "management",
    "tools",
    "azure",
    "offer",
    "azure",
    "provides",
    "management",
    "account",
    "governance",
    "tools",
    "helps",
    "administrators",
    "developers",
    "helps",
    "keep",
    "resources",
    "secure",
    "compliant",
    "helps",
    "premises",
    "cloud",
    "environment",
    "management",
    "tools",
    "help",
    "us",
    "monitor",
    "infrastructure",
    "monitor",
    "applications",
    "also",
    "helps",
    "provisioning",
    "configuring",
    "resources",
    "also",
    "helps",
    "updating",
    "apps",
    "helps",
    "analyzing",
    "threats",
    "taking",
    "backup",
    "resources",
    "build",
    "disaster",
    "recoveries",
    "also",
    "helps",
    "applying",
    "policies",
    "conditions",
    "automate",
    "environment",
    "use",
    "azure",
    "management",
    "tools",
    "also",
    "used",
    "cost",
    "control",
    "methods",
    "azure",
    "management",
    "plays",
    "wide",
    "role",
    "across",
    "azure",
    "services",
    "management",
    "tools",
    "first",
    "comes",
    "azure",
    "advisor",
    "azure",
    "advisor",
    "acts",
    "guide",
    "educate",
    "us",
    "azure",
    "best",
    "practices",
    "throws",
    "recommendations",
    "select",
    "basis",
    "category",
    "service",
    "also",
    "provides",
    "impact",
    "impact",
    "would",
    "happen",
    "environment",
    "follow",
    "recommendations",
    "given",
    "recommendations",
    "first",
    "one",
    "recommendations",
    "kind",
    "templatized",
    "throws",
    "templatized",
    "recommendations",
    "also",
    "provides",
    "customized",
    "recommendations",
    "basis",
    "configuration",
    "basis",
    "usage",
    "patterns",
    "recommendations",
    "hard",
    "like",
    "something",
    "recommends",
    "leaves",
    "us",
    "hanging",
    "recommendations",
    "provided",
    "easy",
    "follow",
    "easy",
    "implement",
    "see",
    "results",
    "think",
    "advisor",
    "personalized",
    "cloud",
    "consultant",
    "helps",
    "follow",
    "best",
    "practices",
    "optimize",
    "deployments",
    "kind",
    "analyzes",
    "resources",
    "configurations",
    "usage",
    "recommends",
    "solution",
    "us",
    "really",
    "helps",
    "improving",
    "cost",
    "effectiveness",
    "improving",
    "performance",
    "improving",
    "high",
    "availability",
    "improving",
    "security",
    "azure",
    "environment",
    "azure",
    "advisor",
    "get",
    "proactive",
    "actionable",
    "personalized",
    "best",
    "practice",
    "recommendation",
    "expert",
    "follow",
    "azure",
    "advisor",
    "environment",
    "going",
    "good",
    "also",
    "helps",
    "improve",
    "performance",
    "security",
    "high",
    "availability",
    "environment",
    "also",
    "helps",
    "bringing",
    "overall",
    "azure",
    "spend",
    "best",
    "part",
    "free",
    "service",
    "analyzes",
    "azure",
    "usage",
    "provides",
    "recommendations",
    "optimize",
    "azure",
    "resource",
    "reduce",
    "cost",
    "reduce",
    "cost",
    "time",
    "boost",
    "performance",
    "helps",
    "strengthening",
    "security",
    "improve",
    "overall",
    "reliability",
    "environment",
    "next",
    "list",
    "would",
    "network",
    "watcher",
    "network",
    "watcher",
    "helps",
    "users",
    "identify",
    "gain",
    "insights",
    "overall",
    "network",
    "performance",
    "health",
    "overall",
    "environment",
    "azure",
    "watchers",
    "provides",
    "enough",
    "tools",
    "monitor",
    "diagnose",
    "view",
    "metrics",
    "enable",
    "disable",
    "logs",
    "means",
    "regenerate",
    "collect",
    "logs",
    "resources",
    "azure",
    "virtual",
    "network",
    "network",
    "watcher",
    "monitor",
    "diagnose",
    "issues",
    "networking",
    "without",
    "even",
    "logging",
    "virtual",
    "machines",
    "logs",
    "real",
    "time",
    "actually",
    "come",
    "conclusion",
    "could",
    "wrong",
    "certain",
    "resource",
    "vm",
    "database",
    "know",
    "looking",
    "logs",
    "used",
    "analytic",
    "gain",
    "intelligence",
    "happening",
    "network",
    "gain",
    "lot",
    "insight",
    "current",
    "network",
    "traffic",
    "pattern",
    "using",
    "security",
    "group",
    "flow",
    "logs",
    "network",
    "watcher",
    "offers",
    "also",
    "helps",
    "investigating",
    "vpn",
    "connectivity",
    "issues",
    "using",
    "detailed",
    "logs",
    "might",
    "might",
    "know",
    "know",
    "vpn",
    "troubleshooting",
    "requires",
    "parties",
    "involves",
    "two",
    "parties",
    "another",
    "person",
    "network",
    "administrator",
    "side",
    "network",
    "administrator",
    "side",
    "check",
    "logs",
    "end",
    "check",
    "logs",
    "hour",
    "stuff",
    "like",
    "network",
    "watcher",
    "kind",
    "takes",
    "next",
    "level",
    "logs",
    "could",
    "easily",
    "identify",
    "side",
    "issue",
    "suggest",
    "appropriate",
    "fix",
    "next",
    "list",
    "would",
    "microsoft",
    "azure",
    "portal",
    "microsoft",
    "azure",
    "portal",
    "provides",
    "single",
    "unified",
    "console",
    "perform",
    "various",
    "number",
    "activities",
    "like",
    "building",
    "building",
    "managing",
    "monitoring",
    "web",
    "applications",
    "build",
    "portal",
    "used",
    "organize",
    "environment",
    "appearance",
    "environment",
    "visual",
    "environment",
    "based",
    "work",
    "style",
    "using",
    "azure",
    "portal",
    "users",
    "control",
    "gets",
    "manage",
    "access",
    "resources",
    "azure",
    "portal",
    "azure",
    "portal",
    "gives",
    "good",
    "visibility",
    "spends",
    "happen",
    "resource",
    "right",
    "customize",
    "also",
    "identify",
    "spends",
    "based",
    "team",
    "spends",
    "based",
    "days",
    "spends",
    "based",
    "department",
    "stuff",
    "like",
    "kind",
    "gives",
    "us",
    "good",
    "visual",
    "money",
    "spending",
    "bill",
    "consumed",
    "within",
    "azure",
    "environment",
    "next",
    "list",
    "would",
    "azure",
    "resource",
    "manager",
    "azure",
    "resource",
    "manager",
    "enables",
    "us",
    "manage",
    "usage",
    "application",
    "resources",
    "use",
    "resource",
    "manager",
    "deploy",
    "monitor",
    "manage",
    "solution",
    "resources",
    "group",
    "one",
    "single",
    "entity",
    "infrastructure",
    "application",
    "typically",
    "made",
    "various",
    "components",
    "includes",
    "virtual",
    "machine",
    "storage",
    "virtual",
    "network",
    "web",
    "app",
    "database",
    "servers",
    "services",
    "might",
    "use",
    "environment",
    "nature",
    "separate",
    "services",
    "azure",
    "resource",
    "manager",
    "see",
    "different",
    "components",
    "different",
    "entities",
    "instead",
    "see",
    "related",
    "services",
    "group",
    "supports",
    "application",
    "kind",
    "get",
    "relation",
    "instead",
    "know",
    "letting",
    "spread",
    "azure",
    "resource",
    "manager",
    "identifies",
    "relation",
    "helps",
    "us",
    "visually",
    "see",
    "one",
    "single",
    "entity",
    "azure",
    "resource",
    "manager",
    "helps",
    "ensures",
    "resources",
    "provision",
    "deployed",
    "constant",
    "rate",
    "along",
    "application",
    "also",
    "helps",
    "users",
    "visually",
    "see",
    "resources",
    "connected",
    "helps",
    "managing",
    "resources",
    "lot",
    "better",
    "resource",
    "group",
    "also",
    "used",
    "control",
    "access",
    "resources",
    "within",
    "users",
    "organization",
    "kind",
    "gives",
    "fine",
    "grained",
    "control",
    "gets",
    "access",
    "get",
    "access",
    "last",
    "one",
    "management",
    "tools",
    "would",
    "automation",
    "automation",
    "gives",
    "us",
    "ability",
    "automate",
    "configure",
    "install",
    "upgrades",
    "across",
    "hybrid",
    "environments",
    "provides",
    "automation",
    "configuration",
    "service",
    "applied",
    "environments",
    "well",
    "automation",
    "could",
    "process",
    "automation",
    "update",
    "management",
    "automation",
    "configuration",
    "features",
    "automation",
    "stuff",
    "like",
    "azure",
    "automation",
    "provides",
    "complete",
    "control",
    "deployment",
    "operation",
    "also",
    "decommissioning",
    "workloads",
    "resources",
    "automation",
    "actually",
    "automate",
    "time",
    "consuming",
    "mundane",
    "task",
    "error",
    "prone",
    "human",
    "errors",
    "things",
    "automated",
    "irrespective",
    "many",
    "times",
    "run",
    "gon",
    "na",
    "run",
    "way",
    "really",
    "helps",
    "reducing",
    "overall",
    "time",
    "also",
    "overhead",
    "cost",
    "lot",
    "things",
    "automated",
    "means",
    "human",
    "error",
    "free",
    "means",
    "application",
    "going",
    "break",
    "keep",
    "running",
    "longer",
    "time",
    "automation",
    "actually",
    "build",
    "good",
    "inventory",
    "operating",
    "system",
    "resources",
    "configuration",
    "items",
    "one",
    "place",
    "ease",
    "really",
    "helps",
    "tracking",
    "changes",
    "investigating",
    "issue",
    "let",
    "say",
    "something",
    "happened",
    "automation",
    "logging",
    "configuration",
    "changes",
    "easy",
    "track",
    "easy",
    "identify",
    "easy",
    "identify",
    "changed",
    "lately",
    "broken",
    "environment",
    "go",
    "back",
    "fix",
    "kind",
    "roll",
    "back",
    "solves",
    "problem",
    "actually",
    "summarizes",
    "azure",
    "management",
    "tools",
    "management",
    "services",
    "let",
    "talk",
    "networking",
    "tools",
    "networking",
    "services",
    "available",
    "azure",
    "variety",
    "services",
    "especially",
    "networking",
    "services",
    "azure",
    "offers",
    "sure",
    "going",
    "interesting",
    "one",
    "let",
    "begin",
    "discussion",
    "content",
    "delivery",
    "network",
    "content",
    "delivery",
    "network",
    "short",
    "cdn",
    "allows",
    "us",
    "perform",
    "secure",
    "reliable",
    "content",
    "delivery",
    "also",
    "helps",
    "accelerating",
    "delivery",
    "time",
    "words",
    "reducing",
    "delivery",
    "time",
    "also",
    "called",
    "low",
    "times",
    "also",
    "helps",
    "saving",
    "bandwidth",
    "increases",
    "responsiveness",
    "application",
    "let",
    "expand",
    "content",
    "delivery",
    "network",
    "actually",
    "distributed",
    "network",
    "servers",
    "efficiently",
    "deliver",
    "web",
    "content",
    "users",
    "cdns",
    "going",
    "use",
    "word",
    "cdn",
    "cdns",
    "store",
    "cached",
    "content",
    "global",
    "edge",
    "servers",
    "also",
    "called",
    "pops",
    "point",
    "presence",
    "locations",
    "close",
    "end",
    "users",
    "latency",
    "minimized",
    "like",
    "taking",
    "copy",
    "data",
    "taking",
    "multiple",
    "copy",
    "data",
    "storing",
    "different",
    "parts",
    "world",
    "whoever",
    "requesting",
    "data",
    "gets",
    "delivered",
    "server",
    "locally",
    "cdn",
    "offers",
    "developers",
    "global",
    "solution",
    "rapidly",
    "delivering",
    "high",
    "bandwidth",
    "content",
    "users",
    "caching",
    "content",
    "strategically",
    "placed",
    "location",
    "near",
    "content",
    "delivery",
    "networks",
    "really",
    "helps",
    "handling",
    "one",
    "advantage",
    "get",
    "content",
    "delivery",
    "network",
    "handle",
    "spikes",
    "heavy",
    "loads",
    "efficiently",
    "also",
    "run",
    "analytic",
    "locks",
    "gets",
    "generated",
    "content",
    "delivery",
    "network",
    "helps",
    "gaining",
    "good",
    "insight",
    "workflow",
    "would",
    "future",
    "business",
    "need",
    "application",
    "like",
    "lot",
    "services",
    "pay",
    "go",
    "type",
    "use",
    "results",
    "first",
    "pay",
    "used",
    "next",
    "one",
    "networking",
    "would",
    "express",
    "route",
    "express",
    "route",
    "actually",
    "circuit",
    "link",
    "provides",
    "direct",
    "private",
    "connection",
    "azure",
    "direct",
    "gives",
    "low",
    "latency",
    "link",
    "azure",
    "gives",
    "good",
    "speed",
    "reliability",
    "azure",
    "data",
    "transfer",
    "could",
    "premises",
    "azure",
    "gives",
    "good",
    "speed",
    "gives",
    "increased",
    "reliability",
    "low",
    "latency",
    "connection",
    "let",
    "expand",
    "bit",
    "express",
    "route",
    "service",
    "actually",
    "provides",
    "private",
    "connection",
    "microsoft",
    "data",
    "center",
    "infrastructure",
    "premises",
    "different",
    "collocation",
    "facility",
    "might",
    "express",
    "routes",
    "go",
    "public",
    "internet",
    "go",
    "public",
    "internet",
    "offer",
    "high",
    "security",
    "reliability",
    "speed",
    "low",
    "latency",
    "compared",
    "connections",
    "internet",
    "fast",
    "reliable",
    "low",
    "latency",
    "used",
    "extension",
    "existing",
    "data",
    "center",
    "know",
    "users",
    "going",
    "feel",
    "difference",
    "whether",
    "accessing",
    "services",
    "cloud",
    "environment",
    "latency",
    "minimized",
    "much",
    "possible",
    "users",
    "really",
    "going",
    "see",
    "difference",
    "private",
    "line",
    "public",
    "internet",
    "line",
    "used",
    "build",
    "hybrid",
    "applications",
    "without",
    "compromising",
    "privacy",
    "performance",
    "virtual",
    "private",
    "cloud",
    "express",
    "routes",
    "used",
    "taking",
    "backups",
    "assume",
    "backup",
    "going",
    "internet",
    "would",
    "nightmare",
    "use",
    "express",
    "route",
    "backups",
    "going",
    "fast",
    "imagine",
    "recovering",
    "data",
    "internet",
    "cloud",
    "internet",
    "premises",
    "time",
    "disaster",
    "would",
    "worst",
    "nightmare",
    "express",
    "routes",
    "used",
    "backup",
    "also",
    "recover",
    "data",
    "provides",
    "good",
    "speed",
    "low",
    "latency",
    "recovering",
    "data",
    "going",
    "lot",
    "sooner",
    "next",
    "product",
    "service",
    "gon",
    "na",
    "discuss",
    "networking",
    "azure",
    "dns",
    "azure",
    "dns",
    "allows",
    "us",
    "host",
    "domain",
    "name",
    "azure",
    "domain",
    "names",
    "come",
    "exceptional",
    "performance",
    "availability",
    "azure",
    "dns",
    "used",
    "set",
    "manage",
    "dns",
    "zones",
    "records",
    "domain",
    "name",
    "cloud",
    "azure",
    "dns",
    "service",
    "dns",
    "like",
    "name",
    "says",
    "provides",
    "name",
    "resolution",
    "using",
    "azure",
    "infrastructure",
    "using",
    "domain",
    "actually",
    "manage",
    "dns",
    "azure",
    "portal",
    "credential",
    "imagine",
    "dns",
    "provider",
    "even",
    "belong",
    "rit",
    "imagine",
    "environment",
    "know",
    "would",
    "separate",
    "portal",
    "manage",
    "dns",
    "environment",
    "gone",
    "actually",
    "manage",
    "dns",
    "azure",
    "portal",
    "use",
    "rest",
    "services",
    "azure",
    "dns",
    "much",
    "integrates",
    "dna",
    "service",
    "providers",
    "uses",
    "global",
    "network",
    "name",
    "servers",
    "provide",
    "fast",
    "response",
    "dns",
    "queries",
    "domains",
    "additional",
    "availability",
    "compared",
    "domain",
    "service",
    "providers",
    "availability",
    "promises",
    "going",
    "availability",
    "rest",
    "servers",
    "maintained",
    "microsoft",
    "helps",
    "resolve",
    "sooner",
    "helps",
    "let",
    "say",
    "server",
    "fails",
    "kind",
    "helps",
    "rest",
    "servers",
    "microsoft",
    "environment",
    "microsoft",
    "global",
    "network",
    "name",
    "servers",
    "kind",
    "ensures",
    "domain",
    "names",
    "resolved",
    "properly",
    "properly",
    "also",
    "available",
    "time",
    "right",
    "next",
    "list",
    "networking",
    "services",
    "virtual",
    "network",
    "sure",
    "going",
    "interesting",
    "sure",
    "going",
    "like",
    "networking",
    "virtual",
    "networking",
    "azure",
    "actually",
    "allows",
    "us",
    "set",
    "private",
    "cloud",
    "public",
    "cloud",
    "gives",
    "us",
    "isolated",
    "highly",
    "secure",
    "environment",
    "application",
    "let",
    "expand",
    "azure",
    "virtual",
    "network",
    "helps",
    "us",
    "provision",
    "azure",
    "virtual",
    "machines",
    "helps",
    "us",
    "securely",
    "communicate",
    "internet",
    "networks",
    "also",
    "helps",
    "controlling",
    "traffic",
    "flows",
    "flows",
    "virtual",
    "network",
    "virtual",
    "networks",
    "internet",
    "azure",
    "virtual",
    "network",
    "sometimes",
    "called",
    "actually",
    "representation",
    "network",
    "cloud",
    "actually",
    "logical",
    "isolation",
    "azure",
    "cloud",
    "dedicated",
    "subscription",
    "environments",
    "provisioned",
    "separate",
    "another",
    "customers",
    "nets",
    "way",
    "logical",
    "separation",
    "virtual",
    "network",
    "also",
    "used",
    "provision",
    "vpns",
    "cloud",
    "connect",
    "cloud",
    "infrastructure",
    "lot",
    "especially",
    "environment",
    "hybrid",
    "environment",
    "surely",
    "using",
    "virtual",
    "network",
    "going",
    "require",
    "vpn",
    "secure",
    "data",
    "transfer",
    "cloud",
    "environment",
    "right",
    "kind",
    "gives",
    "us",
    "boundary",
    "resources",
    "traffic",
    "azure",
    "resources",
    "kind",
    "logically",
    "stay",
    "logically",
    "stay",
    "within",
    "azure",
    "virtual",
    "network",
    "design",
    "network",
    "given",
    "us",
    "know",
    "pick",
    "ip",
    "pick",
    "routing",
    "pick",
    "subnet",
    "lot",
    "freedom",
    "given",
    "would",
    "say",
    "lot",
    "control",
    "network",
    "designed",
    "like",
    "something",
    "already",
    "cooked",
    "get",
    "use",
    "actually",
    "build",
    "network",
    "scratch",
    "pick",
    "ip",
    "address",
    "like",
    "pick",
    "know",
    "subnet",
    "needs",
    "communicate",
    "subnet",
    "stuff",
    "like",
    "like",
    "said",
    "using",
    "hybrid",
    "environment",
    "definitely",
    "would",
    "requiring",
    "virtual",
    "network",
    "helps",
    "connect",
    "cloud",
    "secure",
    "fashion",
    "using",
    "vpn",
    "last",
    "product",
    "going",
    "discuss",
    "networking",
    "load",
    "balancer",
    "load",
    "balancer",
    "actually",
    "provides",
    "application",
    "good",
    "availability",
    "good",
    "network",
    "performance",
    "work",
    "actually",
    "works",
    "load",
    "balancing",
    "traffic",
    "virtual",
    "machine",
    "cloud",
    "resources",
    "also",
    "load",
    "balances",
    "cloud",
    "across",
    "premises",
    "virtual",
    "networks",
    "azure",
    "load",
    "balancer",
    "actually",
    "scale",
    "application",
    "create",
    "high",
    "availability",
    "services",
    "means",
    "application",
    "available",
    "time",
    "server",
    "goes",
    "dead",
    "server",
    "get",
    "traffic",
    "happens",
    "server",
    "gets",
    "traffic",
    "user",
    "going",
    "experience",
    "downtime",
    "happens",
    "server",
    "get",
    "traffic",
    "user",
    "wo",
    "experience",
    "downtime",
    "connection",
    "shifted",
    "healthy",
    "service",
    "user",
    "experiences",
    "uptime",
    "time",
    "load",
    "balancer",
    "supports",
    "inbound",
    "outbound",
    "scenarios",
    "provides",
    "low",
    "latency",
    "gives",
    "high",
    "throughput",
    "data",
    "transfer",
    "actually",
    "scale",
    "flow",
    "tcp",
    "udp",
    "connections",
    "hundreds",
    "thousands",
    "even",
    "millions",
    "load",
    "balancer",
    "user",
    "application",
    "operate",
    "load",
    "balancer",
    "actually",
    "receives",
    "traffic",
    "load",
    "balances",
    "traffic",
    "back",
    "end",
    "pool",
    "instances",
    "connected",
    "according",
    "rule",
    "health",
    "probe",
    "set",
    "maintains",
    "high",
    "availability",
    "load",
    "balancer",
    "help",
    "helps",
    "creation",
    "high",
    "available",
    "scalable",
    "application",
    "cloud",
    "minutes",
    "used",
    "automatically",
    "scale",
    "environment",
    "increasing",
    "application",
    "traffic",
    "one",
    "feature",
    "load",
    "balancer",
    "check",
    "health",
    "user",
    "application",
    "instance",
    "removes",
    "stops",
    "sending",
    "request",
    "unhealthy",
    "instance",
    "kind",
    "shifts",
    "connection",
    "healthy",
    "instance",
    "way",
    "user",
    "connection",
    "get",
    "stuck",
    "instance",
    "healthy",
    "need",
    "know",
    "networking",
    "services",
    "let",
    "talk",
    "storage",
    "services",
    "storage",
    "domain",
    "azure",
    "azure",
    "storage",
    "general",
    "microsoft",
    "manage",
    "service",
    "providing",
    "cloud",
    "storage",
    "basically",
    "highly",
    "available",
    "secure",
    "durable",
    "scalable",
    "redundant",
    "managed",
    "azure",
    "get",
    "manage",
    "lot",
    "azure",
    "storages",
    "group",
    "storage",
    "services",
    "capture",
    "different",
    "needs",
    "storage",
    "products",
    "include",
    "azure",
    "blobs",
    "actually",
    "object",
    "storage",
    "includes",
    "azure",
    "data",
    "lake",
    "includes",
    "azure",
    "files",
    "see",
    "includes",
    "azure",
    "queues",
    "includes",
    "azure",
    "tables",
    "lot",
    "let",
    "start",
    "discussion",
    "azure",
    "store",
    "simple",
    "azure",
    "store",
    "simple",
    "hybrid",
    "cloud",
    "storage",
    "solution",
    "actually",
    "lowers",
    "cost",
    "storage",
    "nearly",
    "60",
    "percent",
    "much",
    "actually",
    "spending",
    "without",
    "using",
    "azure",
    "simple",
    "storage",
    "store",
    "simple",
    "integrated",
    "storage",
    "solution",
    "manages",
    "storage",
    "task",
    "cloud",
    "storage",
    "really",
    "like",
    "azure",
    "built",
    "around",
    "hybrid",
    "environment",
    "might",
    "lot",
    "cloud",
    "providers",
    "running",
    "hybrid",
    "environment",
    "big",
    "challenge",
    "know",
    "compatibility",
    "wo",
    "able",
    "find",
    "hybrid",
    "cloud",
    "solution",
    "need",
    "stuff",
    "like",
    "azure",
    "especially",
    "comes",
    "storage",
    "lot",
    "things",
    "gon",
    "na",
    "see",
    "clearly",
    "designed",
    "hybrid",
    "environment",
    "mind",
    "right",
    "let",
    "come",
    "back",
    "talk",
    "store",
    "simple",
    "store",
    "simple",
    "efficient",
    "cost",
    "effective",
    "easily",
    "manageable",
    "san",
    "storage",
    "area",
    "networking",
    "solution",
    "cloud",
    "thought",
    "throw",
    "information",
    "reason",
    "got",
    "store",
    "simple",
    "really",
    "uses",
    "store",
    "simple",
    "8000",
    "series",
    "devices",
    "used",
    "azure",
    "data",
    "center",
    "stores",
    "simple",
    "simple",
    "storage",
    "comes",
    "along",
    "storage",
    "steering",
    "manage",
    "stored",
    "data",
    "across",
    "various",
    "storage",
    "media",
    "current",
    "current",
    "data",
    "actually",
    "stored",
    "drives",
    "data",
    "used",
    "less",
    "frequently",
    "stored",
    "hdds",
    "hard",
    "disk",
    "drives",
    "data",
    "requires",
    "archived",
    "needs",
    "archived",
    "old",
    "data",
    "let",
    "say",
    "less",
    "frequently",
    "used",
    "data",
    "candidate",
    "archive",
    "actually",
    "pushed",
    "cloud",
    "see",
    "storage",
    "steering",
    "automatically",
    "happens",
    "store",
    "simple",
    "one",
    "another",
    "cool",
    "feature",
    "store",
    "simple",
    "enables",
    "us",
    "create",
    "scheduled",
    "backups",
    "data",
    "store",
    "data",
    "locally",
    "cloud",
    "backups",
    "actually",
    "taken",
    "form",
    "incremental",
    "snapshot",
    "means",
    "created",
    "restored",
    "quickly",
    "complete",
    "backup",
    "incremental",
    "backup",
    "cloud",
    "snapshots",
    "critically",
    "important",
    "disaster",
    "disaster",
    "recovery",
    "scenario",
    "snapshots",
    "called",
    "put",
    "storage",
    "systems",
    "become",
    "actual",
    "data",
    "recovering",
    "faster",
    "proper",
    "scheduled",
    "backups",
    "frequent",
    "backups",
    "storage",
    "simple",
    "really",
    "helps",
    "easing",
    "backup",
    "mechanism",
    "means",
    "kind",
    "eases",
    "disaster",
    "recovery",
    "steps",
    "procedures",
    "well",
    "simple",
    "used",
    "automate",
    "data",
    "management",
    "data",
    "migration",
    "data",
    "movement",
    "data",
    "turing",
    "across",
    "enterprise",
    "cloud",
    "actually",
    "improves",
    "compliance",
    "accelerates",
    "disaster",
    "recovery",
    "environment",
    "one",
    "thing",
    "increasing",
    "every",
    "new",
    "day",
    "environment",
    "would",
    "storage",
    "store",
    "simple",
    "addresses",
    "need",
    "really",
    "think",
    "deep",
    "proper",
    "storage",
    "simple",
    "storage",
    "available",
    "cloud",
    "moreover",
    "type",
    "much",
    "storage",
    "needed",
    "yes",
    "need",
    "much",
    "would",
    "without",
    "cloud",
    "without",
    "simple",
    "storage",
    "next",
    "service",
    "storage",
    "would",
    "like",
    "discuss",
    "data",
    "lake",
    "store",
    "data",
    "lake",
    "store",
    "storage",
    "cost",
    "effective",
    "solution",
    "big",
    "data",
    "analytics",
    "specific",
    "let",
    "expand",
    "data",
    "lake",
    "storage",
    "repository",
    "big",
    "data",
    "analytic",
    "workload",
    "major",
    "service",
    "dependent",
    "data",
    "lake",
    "store",
    "data",
    "lake",
    "enables",
    "us",
    "capture",
    "data",
    "size",
    "type",
    "injection",
    "speed",
    "kind",
    "collects",
    "one",
    "single",
    "space",
    "one",
    "single",
    "place",
    "operational",
    "efficiency",
    "mean",
    "operational",
    "efficiency",
    "analytic",
    "purpose",
    "hadoop",
    "azure",
    "dependent",
    "data",
    "lake",
    "storage",
    "data",
    "lake",
    "store",
    "designed",
    "performance",
    "analytics",
    "mind",
    "anytime",
    "think",
    "anytime",
    "using",
    "analytic",
    "cloud",
    "anytime",
    "using",
    "hadoop",
    "cloud",
    "azure",
    "definitely",
    "using",
    "part",
    "normal",
    "procedure",
    "right",
    "storage",
    "pick",
    "would",
    "data",
    "lake",
    "store",
    "azure",
    "designed",
    "security",
    "mind",
    "anytime",
    "use",
    "azure",
    "storage",
    "rest",
    "assured",
    "using",
    "storage",
    "within",
    "data",
    "center",
    "built",
    "security",
    "mind",
    "data",
    "store",
    "also",
    "uses",
    "azure",
    "blob",
    "storage",
    "behind",
    "scenes",
    "global",
    "scale",
    "durability",
    "performance",
    "let",
    "talk",
    "blob",
    "storage",
    "blob",
    "storage",
    "provides",
    "large",
    "amount",
    "storage",
    "scalability",
    "blob",
    "storage",
    "object",
    "storage",
    "solution",
    "azure",
    "cloud",
    "let",
    "expand",
    "bit",
    "blob",
    "storage",
    "azure",
    "blob",
    "storage",
    "microsoft",
    "offering",
    "object",
    "storage",
    "blob",
    "storage",
    "optimized",
    "storing",
    "massive",
    "amount",
    "unstructured",
    "data",
    "could",
    "text",
    "binary",
    "data",
    "designed",
    "optimized",
    "rapid",
    "reads",
    "explain",
    "scenarios",
    "would",
    "using",
    "blob",
    "storage",
    "might",
    "help",
    "get",
    "good",
    "understanding",
    "blob",
    "storage",
    "help",
    "design",
    "used",
    "many",
    "idea",
    "environments",
    "serve",
    "images",
    "documents",
    "directly",
    "browser",
    "helps",
    "storing",
    "files",
    "distributed",
    "access",
    "lot",
    "features",
    "fetch",
    "data",
    "azure",
    "blob",
    "storage",
    "currently",
    "helping",
    "users",
    "stream",
    "video",
    "audio",
    "currently",
    "used",
    "writing",
    "log",
    "files",
    "currently",
    "used",
    "store",
    "data",
    "backup",
    "restore",
    "later",
    "point",
    "times",
    "disaster",
    "recovery",
    "also",
    "used",
    "archiving",
    "storage",
    "lot",
    "cloud",
    "id",
    "environments",
    "widely",
    "used",
    "storing",
    "analytic",
    "data",
    "storing",
    "also",
    "running",
    "analytic",
    "query",
    "data",
    "stored",
    "wide",
    "use",
    "case",
    "blob",
    "storage",
    "addition",
    "mentioned",
    "also",
    "supports",
    "versioning",
    "anytime",
    "somebody",
    "updates",
    "data",
    "new",
    "version",
    "gets",
    "created",
    "means",
    "point",
    "roll",
    "back",
    "needed",
    "provides",
    "lot",
    "flexibility",
    "optimizing",
    "user",
    "storage",
    "need",
    "also",
    "supports",
    "tiering",
    "data",
    "based",
    "need",
    "actually",
    "explore",
    "would",
    "find",
    "lot",
    "options",
    "pick",
    "uh",
    "know",
    "suits",
    "unique",
    "storage",
    "environment",
    "unique",
    "storage",
    "need",
    "like",
    "said",
    "stores",
    "unstructured",
    "data",
    "unstructured",
    "data",
    "available",
    "customers",
    "rest",
    "based",
    "object",
    "storage",
    "environment",
    "next",
    "product",
    "storage",
    "service",
    "would",
    "queue",
    "storage",
    "queue",
    "storage",
    "provides",
    "durable",
    "cues",
    "large",
    "volume",
    "cloud",
    "services",
    "simple",
    "cost",
    "effective",
    "durable",
    "messaging",
    "queue",
    "large",
    "workers",
    "let",
    "expand",
    "queue",
    "storage",
    "moment",
    "queue",
    "storage",
    "service",
    "storing",
    "large",
    "amount",
    "messages",
    "accessed",
    "anywhere",
    "world",
    "http",
    "https",
    "calls",
    "single",
    "queue",
    "single",
    "cube",
    "message",
    "like",
    "24",
    "kb",
    "size",
    "single",
    "queue",
    "contain",
    "millions",
    "24",
    "kb",
    "size",
    "messages",
    "much",
    "hold",
    "hold",
    "total",
    "capacity",
    "storage",
    "account",
    "kind",
    "easy",
    "translate",
    "much",
    "would",
    "hold",
    "azure",
    "queue",
    "storage",
    "provides",
    "messaging",
    "solution",
    "applications",
    "components",
    "cloud",
    "help",
    "helps",
    "designing",
    "application",
    "scale",
    "helps",
    "decoupling",
    "application",
    "know",
    "dependent",
    "sometimes",
    "dependent",
    "application",
    "queue",
    "kind",
    "translates",
    "kind",
    "connects",
    "kind",
    "decouples",
    "environment",
    "queue",
    "environment",
    "scale",
    "scale",
    "independently",
    "next",
    "storage",
    "service",
    "would",
    "file",
    "storage",
    "let",
    "talk",
    "file",
    "storage",
    "azure",
    "files",
    "provide",
    "secure",
    "simple",
    "managed",
    "cloud",
    "file",
    "shares",
    "file",
    "share",
    "cloud",
    "actually",
    "extends",
    "user",
    "servers",
    "premises",
    "performance",
    "capacity",
    "lot",
    "familiar",
    "tools",
    "cloud",
    "file",
    "share",
    "management",
    "used",
    "along",
    "file",
    "storage",
    "talking",
    "let",
    "expand",
    "bit",
    "file",
    "storage",
    "azure",
    "files",
    "azure",
    "file",
    "storage",
    "offers",
    "fully",
    "managed",
    "file",
    "shares",
    "cloud",
    "accessed",
    "via",
    "smb",
    "protocol",
    "server",
    "message",
    "block",
    "protocol",
    "azure",
    "file",
    "shares",
    "mounted",
    "concurrently",
    "cloud",
    "deployments",
    "lot",
    "operating",
    "systems",
    "compatible",
    "windows",
    "compatible",
    "linux",
    "compatible",
    "mac",
    "os",
    "compatible",
    "addition",
    "able",
    "run",
    "premises",
    "cloud",
    "able",
    "access",
    "premises",
    "cloud",
    "also",
    "offer",
    "cache",
    "caching",
    "data",
    "keeping",
    "locally",
    "immediately",
    "available",
    "needed",
    "additional",
    "feature",
    "would",
    "say",
    "advanced",
    "feature",
    "offers",
    "compared",
    "file",
    "shares",
    "available",
    "market",
    "let",
    "talk",
    "table",
    "storage",
    "let",
    "talk",
    "table",
    "storage",
    "table",
    "storage",
    "sql",
    "key",
    "value",
    "pair",
    "storage",
    "quick",
    "deployments",
    "large",
    "data",
    "sets",
    "difference",
    "one",
    "important",
    "thing",
    "note",
    "table",
    "storage",
    "flexible",
    "data",
    "schema",
    "also",
    "highly",
    "available",
    "let",
    "expand",
    "bit",
    "table",
    "storage",
    "anytime",
    "want",
    "pick",
    "schema",
    "less",
    "nosql",
    "type",
    "table",
    "storage",
    "one",
    "end",
    "picking",
    "provides",
    "key",
    "pair",
    "attribute",
    "storage",
    "design",
    "table",
    "storage",
    "fast",
    "cost",
    "effective",
    "many",
    "applications",
    "amount",
    "data",
    "lot",
    "cheaper",
    "compare",
    "traditional",
    "sql",
    "data",
    "data",
    "storage",
    "things",
    "store",
    "table",
    "storage",
    "course",
    "going",
    "flexible",
    "data",
    "sheets",
    "user",
    "data",
    "web",
    "application",
    "address",
    "books",
    "device",
    "information",
    "types",
    "metadata",
    "service",
    "requirements",
    "number",
    "tables",
    "capacity",
    "limit",
    "storage",
    "account",
    "possible",
    "sql",
    "possible",
    "nosql",
    "especially",
    "table",
    "storage",
    "azure",
    "explanation",
    "storage",
    "really",
    "concluded",
    "length",
    "breadth",
    "explanation",
    "ceo",
    "giving",
    "id",
    "personal",
    "id",
    "personal",
    "done",
    "yet",
    "still",
    "question",
    "even",
    "lengthy",
    "discussion",
    "question",
    "well",
    "lot",
    "cloud",
    "providers",
    "available",
    "made",
    "specifically",
    "choose",
    "azure",
    "mean",
    "kind",
    "question",
    "asked",
    "say",
    "curious",
    "definitely",
    "asked",
    "thoughtful",
    "question",
    "ceo",
    "went",
    "started",
    "explain",
    "uh",
    "capabilities",
    "azure",
    "kind",
    "outruns",
    "rest",
    "cloud",
    "providers",
    "started",
    "started",
    "discussion",
    "different",
    "angle",
    "started",
    "explain",
    "capabilities",
    "azure",
    "better",
    "competitors",
    "started",
    "explaining",
    "platform",
    "service",
    "capabilities",
    "going",
    "tell",
    "ceo",
    "told",
    "id",
    "person",
    "platform",
    "service",
    "platform",
    "service",
    "infrastructure",
    "management",
    "completely",
    "taken",
    "care",
    "uh",
    "microsoft",
    "allowing",
    "users",
    "focus",
    "completely",
    "innovation",
    "infrastructure",
    "management",
    "responsibilities",
    "go",
    "focus",
    "innovation",
    "fancy",
    "way",
    "saying",
    "buy",
    "platform",
    "service",
    "get",
    "contribute",
    "time",
    "innovation",
    "maintaining",
    "infrastructure",
    "azure",
    "especially",
    "friendly",
    "azure",
    "supports",
    "dotnet",
    "programming",
    "language",
    "built",
    "designed",
    "optimized",
    "work",
    "old",
    "new",
    "applications",
    "deployed",
    "programming",
    "framework",
    "application",
    "dotnet",
    "time",
    "would",
    "end",
    "picking",
    "azure",
    "mean",
    "try",
    "compare",
    "time",
    "would",
    "end",
    "picking",
    "azure",
    "cloud",
    "service",
    "provider",
    "security",
    "offerings",
    "azure",
    "offers",
    "designed",
    "based",
    "security",
    "development",
    "uh",
    "life",
    "cycle",
    "industry",
    "leading",
    "assurance",
    "process",
    "buy",
    "services",
    "azure",
    "assures",
    "environment",
    "designed",
    "based",
    "security",
    "development",
    "life",
    "cycle",
    "like",
    "mentioned",
    "many",
    "times",
    "past",
    "would",
    "like",
    "mention",
    "azure",
    "well",
    "thought",
    "hybrid",
    "environments",
    "lot",
    "cloud",
    "providers",
    "failed",
    "easy",
    "set",
    "hybrid",
    "environment",
    "migrate",
    "data",
    "migrate",
    "data",
    "still",
    "run",
    "hybrid",
    "environment",
    "work",
    "seamlessly",
    "azure",
    "azure",
    "provides",
    "seamless",
    "connection",
    "across",
    "data",
    "centers",
    "public",
    "cloud",
    "also",
    "gentle",
    "learning",
    "curve",
    "look",
    "documentation",
    "picture",
    "rich",
    "documentations",
    "neat",
    "clear",
    "would",
    "really",
    "would",
    "encourage",
    "learn",
    "would",
    "encourage",
    "think",
    "imagine",
    "try",
    "easily",
    "get",
    "grasp",
    "services",
    "work",
    "gentle",
    "learning",
    "curve",
    "azure",
    "allows",
    "utilization",
    "technologies",
    "several",
    "businesses",
    "used",
    "years",
    "big",
    "history",
    "behind",
    "gentle",
    "learning",
    "curve",
    "certifications",
    "documentations",
    "stage",
    "stage",
    "certification",
    "levels",
    "gentle",
    "learning",
    "curve",
    "generally",
    "missing",
    "cloud",
    "service",
    "providers",
    "would",
    "really",
    "impress",
    "ctos",
    "people",
    "working",
    "finance",
    "budgeting",
    "organization",
    "already",
    "using",
    "microsoft",
    "software",
    "definitely",
    "go",
    "avail",
    "bold",
    "ask",
    "discount",
    "reduce",
    "overall",
    "azure",
    "spending",
    "words",
    "overall",
    "pricing",
    "azure",
    "helped",
    "information",
    "helped",
    "ceo",
    "pick",
    "azure",
    "cloud",
    "service",
    "provider",
    "ceo",
    "goes",
    "talks",
    "different",
    "companies",
    "currently",
    "using",
    "azure",
    "definitely",
    "using",
    "azure",
    "reason",
    "like",
    "pixar",
    "boeing",
    "samsung",
    "easyjet",
    "xerox",
    "bmw",
    "3m",
    "major",
    "multinational",
    "companies",
    "rely",
    "run",
    "operate",
    "id",
    "azure",
    "ceo",
    "thought",
    "id",
    "person",
    "still",
    "convinced",
    "unless",
    "shows",
    "visual",
    "easy",
    "things",
    "azure",
    "goes",
    "explains",
    "practical",
    "application",
    "azure",
    "exactly",
    "going",
    "show",
    "well",
    "right",
    "quick",
    "project",
    "building",
    "azure",
    "app",
    "using",
    "building",
    "dotnet",
    "application",
    "azure",
    "web",
    "app",
    "making",
    "connect",
    "sql",
    "database",
    "solidify",
    "knowledge",
    "gained",
    "far",
    "gon",
    "na",
    "azure",
    "account",
    "open",
    "see",
    "logged",
    "everything",
    "fresh",
    "let",
    "go",
    "resource",
    "group",
    "nothing",
    "kind",
    "fresh",
    "right",
    "logged",
    "gon",
    "na",
    "gon",
    "na",
    "create",
    "application",
    "like",
    "nothing",
    "application",
    "list",
    "application",
    "going",
    "run",
    "web",
    "app",
    "get",
    "information",
    "us",
    "save",
    "database",
    "connected",
    "already",
    "see",
    "application",
    "web",
    "db",
    "right",
    "let",
    "go",
    "back",
    "azure",
    "account",
    "first",
    "thing",
    "create",
    "resource",
    "group",
    "let",
    "give",
    "meaningful",
    "name",
    "let",
    "call",
    "azure",
    "simply",
    "learn",
    "right",
    "going",
    "free",
    "trial",
    "location",
    "pick",
    "one",
    "nearest",
    "know",
    "wherever",
    "want",
    "launch",
    "application",
    "use",
    "case",
    "going",
    "pick",
    "central",
    "us",
    "create",
    "going",
    "take",
    "get",
    "created",
    "go",
    "created",
    "called",
    "azure",
    "simply",
    "learn",
    "need",
    "need",
    "web",
    "app",
    "separate",
    "sql",
    "database",
    "let",
    "first",
    "get",
    "web",
    "app",
    "running",
    "go",
    "app",
    "services",
    "click",
    "add",
    "web",
    "app",
    "plus",
    "sql",
    "want",
    "want",
    "web",
    "app",
    "alone",
    "example",
    "let",
    "create",
    "web",
    "app",
    "give",
    "quick",
    "name",
    "let",
    "call",
    "azure",
    "simply",
    "learn",
    "subscription",
    "free",
    "trial",
    "going",
    "use",
    "existing",
    "resource",
    "group",
    "resource",
    "group",
    "created",
    "sometime",
    "back",
    "going",
    "run",
    "windows",
    "going",
    "publish",
    "code",
    "set",
    "create",
    "right",
    "running",
    "let",
    "create",
    "database",
    "right",
    "sql",
    "database",
    "create",
    "database",
    "give",
    "name",
    "let",
    "call",
    "azure",
    "simply",
    "learn",
    "db",
    "put",
    "existing",
    "resource",
    "group",
    "created",
    "going",
    "blank",
    "database",
    "right",
    "going",
    "require",
    "settings",
    "like",
    "name",
    "server",
    "admin",
    "login",
    "password",
    "goes",
    "along",
    "location",
    "going",
    "created",
    "server",
    "name",
    "going",
    "azure",
    "simply",
    "learn",
    "db",
    "server",
    "name",
    "admin",
    "login",
    "admin",
    "login",
    "name",
    "let",
    "see",
    "let",
    "call",
    "simply",
    "learn",
    "admin",
    "login",
    "name",
    "let",
    "pick",
    "password",
    "click",
    "create",
    "done",
    "far",
    "created",
    "web",
    "app",
    "created",
    "database",
    "resource",
    "group",
    "created",
    "go",
    "resource",
    "group",
    "going",
    "take",
    "time",
    "things",
    "show",
    "go",
    "resource",
    "group",
    "one",
    "resource",
    "group",
    "azure",
    "simply",
    "learn",
    "bunch",
    "resources",
    "created",
    "still",
    "created",
    "right",
    "meantime",
    "application",
    "right",
    "running",
    "uh",
    "visual",
    "studio",
    "right",
    "infrastructure",
    "set",
    "ready",
    "azure",
    "console",
    "uh",
    "gon",
    "na",
    "go",
    "back",
    "visual",
    "studio",
    "feed",
    "inputs",
    "visual",
    "studio",
    "code",
    "knows",
    "database",
    "credentials",
    "log",
    "database",
    "stuff",
    "like",
    "going",
    "feed",
    "information",
    "visual",
    "studio",
    "actually",
    "feeding",
    "application",
    "going",
    "run",
    "deploying",
    "application",
    "takes",
    "quite",
    "really",
    "got",
    "patient",
    "right",
    "resources",
    "need",
    "application",
    "run",
    "database",
    "app",
    "service",
    "one",
    "thing",
    "need",
    "create",
    "firewall",
    "exception",
    "rule",
    "one",
    "thing",
    "needed",
    "create",
    "firewall",
    "exception",
    "rule",
    "right",
    "application",
    "going",
    "run",
    "local",
    "desktop",
    "going",
    "connect",
    "database",
    "right",
    "let",
    "add",
    "exception",
    "rule",
    "simply",
    "adding",
    "client",
    "id",
    "going",
    "pick",
    "ip",
    "ipf",
    "laptop",
    "using",
    "going",
    "create",
    "exception",
    "access",
    "database",
    "done",
    "go",
    "back",
    "visual",
    "studio",
    "already",
    "couple",
    "apps",
    "running",
    "couple",
    "configurations",
    "pushed",
    "visual",
    "studio",
    "going",
    "clean",
    "first",
    "time",
    "may",
    "need",
    "right",
    "let",
    "start",
    "scratch",
    "similar",
    "would",
    "environment",
    "right",
    "going",
    "select",
    "existing",
    "azure",
    "app",
    "service",
    "logged",
    "see",
    "logged",
    "credentials",
    "gon",
    "na",
    "pull",
    "things",
    "automatically",
    "azure",
    "account",
    "case",
    "gon",
    "na",
    "use",
    "existing",
    "azure",
    "app",
    "select",
    "existing",
    "click",
    "publish",
    "right",
    "recall",
    "resources",
    "created",
    "back",
    "right",
    "clicked",
    "save",
    "running",
    "kind",
    "validating",
    "code",
    "going",
    "come",
    "url",
    "initially",
    "url",
    "going",
    "work",
    "mapped",
    "application",
    "database",
    "would",
    "next",
    "thing",
    "right",
    "app",
    "published",
    "running",
    "web",
    "app",
    "going",
    "throw",
    "error",
    "like",
    "see",
    "throwing",
    "error",
    "mapped",
    "app",
    "db",
    "together",
    "let",
    "right",
    "let",
    "let",
    "go",
    "server",
    "explorer",
    "going",
    "see",
    "databases",
    "created",
    "let",
    "quickly",
    "verify",
    "go",
    "back",
    "resource",
    "group",
    "right",
    "appropriate",
    "service",
    "group",
    "right",
    "database",
    "azure",
    "simply",
    "learn",
    "database",
    "right",
    "issues",
    "connecting",
    "database",
    "give",
    "quick",
    "moment",
    "let",
    "fix",
    "right",
    "map",
    "database",
    "application",
    "right",
    "let",
    "go",
    "solution",
    "explorer",
    "click",
    "publish",
    "page",
    "like",
    "gets",
    "shown",
    "go",
    "configure",
    "web",
    "app",
    "right",
    "credentials",
    "let",
    "validate",
    "connection",
    "number",
    "one",
    "right",
    "click",
    "next",
    "db",
    "connection",
    "string",
    "right",
    "app",
    "going",
    "use",
    "connect",
    "db",
    "recall",
    "rdb",
    "uh",
    "azure",
    "simply",
    "learn",
    "db",
    "shown",
    "let",
    "fix",
    "right",
    "let",
    "fix",
    "click",
    "configure",
    "let",
    "put",
    "db",
    "servers",
    "url",
    "let",
    "change",
    "sql",
    "server",
    "right",
    "put",
    "db",
    "url",
    "go",
    "back",
    "azure",
    "db",
    "server",
    "name",
    "put",
    "right",
    "username",
    "connect",
    "server",
    "right",
    "put",
    "password",
    "connect",
    "server",
    "let",
    "put",
    "right",
    "trying",
    "connect",
    "azure",
    "portal",
    "azure",
    "infrastructure",
    "database",
    "recall",
    "azure",
    "sldb",
    "name",
    "database",
    "let",
    "test",
    "connection",
    "connection",
    "good",
    "click",
    "ok",
    "showing",
    "correctly",
    "azure",
    "simply",
    "learn",
    "db",
    "name",
    "database",
    "created",
    "configured",
    "right",
    "let",
    "modify",
    "data",
    "connections",
    "right",
    "let",
    "map",
    "appropriate",
    "database",
    "right",
    "name",
    "database",
    "azure",
    "simply",
    "learn",
    "db",
    "going",
    "sql",
    "server",
    "data",
    "source",
    "username",
    "simply",
    "learn",
    "password",
    "given",
    "beginning",
    "right",
    "let",
    "validate",
    "connection",
    "good",
    "click",
    "ok",
    "set",
    "ready",
    "publish",
    "application",
    "application",
    "knows",
    "connect",
    "uh",
    "database",
    "educated",
    "uh",
    "correct",
    "connection",
    "strings",
    "dns",
    "name",
    "username",
    "password",
    "application",
    "connect",
    "database",
    "visual",
    "studio",
    "building",
    "project",
    "running",
    "prompted",
    "url",
    "connect",
    "anytime",
    "put",
    "give",
    "inputs",
    "url",
    "going",
    "receive",
    "input",
    "save",
    "database",
    "right",
    "list",
    "app",
    "start",
    "creating",
    "list",
    "right",
    "items",
    "already",
    "listed",
    "create",
    "entry",
    "entries",
    "get",
    "stored",
    "database",
    "create",
    "another",
    "entry",
    "know",
    "take",
    "doc",
    "walk",
    "gon",
    "na",
    "get",
    "stored",
    "create",
    "another",
    "entry",
    "uh",
    "book",
    "tickets",
    "uh",
    "scientific",
    "exhibition",
    "gon",
    "na",
    "receive",
    "put",
    "database",
    "concludes",
    "session",
    "session",
    "saw",
    "use",
    "azure",
    "services",
    "create",
    "web",
    "app",
    "connect",
    "db",
    "instance",
    "two",
    "services",
    "decoupled",
    "default",
    "separate",
    "default",
    "know",
    "use",
    "connection",
    "strings",
    "make",
    "connection",
    "app",
    "server",
    "database",
    "able",
    "create",
    "working",
    "app",
    "hi",
    "guys",
    "raul",
    "simply",
    "learn",
    "today",
    "like",
    "welcome",
    "greatest",
    "debate",
    "century",
    "today",
    "joined",
    "two",
    "giants",
    "cloud",
    "computing",
    "industry",
    "going",
    "head",
    "head",
    "decide",
    "amongst",
    "better",
    "going",
    "one",
    "hello",
    "fight",
    "let",
    "meet",
    "candidates",
    "left",
    "aws",
    "voiced",
    "picture",
    "hi",
    "guys",
    "right",
    "microsoft",
    "azure",
    "voiced",
    "anjali",
    "hey",
    "today",
    "deciding",
    "better",
    "basis",
    "origin",
    "features",
    "provide",
    "performance",
    "present",
    "day",
    "comparing",
    "basis",
    "pricing",
    "market",
    "sharing",
    "options",
    "free",
    "tier",
    "instance",
    "configuration",
    "let",
    "listen",
    "opening",
    "statements",
    "let",
    "start",
    "aws",
    "launched",
    "2006",
    "aws",
    "one",
    "commonly",
    "used",
    "cloud",
    "computing",
    "platforms",
    "across",
    "world",
    "companies",
    "like",
    "adobe",
    "netflix",
    "airbnb",
    "htc",
    "pinterest",
    "spotify",
    "put",
    "faith",
    "aws",
    "proper",
    "functioning",
    "also",
    "dominates",
    "cloud",
    "computing",
    "domain",
    "almost",
    "40",
    "percent",
    "entire",
    "market",
    "share",
    "far",
    "nobody",
    "even",
    "gotten",
    "close",
    "beating",
    "number",
    "aws",
    "also",
    "provides",
    "wide",
    "range",
    "services",
    "covers",
    "great",
    "number",
    "domains",
    "domains",
    "like",
    "compute",
    "networking",
    "storage",
    "migration",
    "much",
    "let",
    "see",
    "azure",
    "say",
    "azure",
    "launched",
    "2010",
    "trusted",
    "almost",
    "80",
    "percent",
    "fortune",
    "500",
    "companies",
    "best",
    "best",
    "companies",
    "world",
    "choose",
    "work",
    "azure",
    "azure",
    "also",
    "provides",
    "services",
    "regions",
    "cloud",
    "service",
    "provider",
    "world",
    "azure",
    "covers",
    "42",
    "regions",
    "already",
    "12",
    "planned",
    "made",
    "azure",
    "also",
    "provides",
    "100",
    "services",
    "spanning",
    "variety",
    "domains",
    "opening",
    "statements",
    "done",
    "let",
    "look",
    "current",
    "market",
    "status",
    "competitors",
    "performance",
    "route",
    "stats",
    "market",
    "share",
    "aws",
    "azure",
    "cloud",
    "service",
    "providers",
    "early",
    "2018",
    "period",
    "amazon",
    "web",
    "services",
    "takes",
    "whopping",
    "40",
    "percent",
    "market",
    "share",
    "closely",
    "followed",
    "hdr",
    "30",
    "cloud",
    "services",
    "adding",
    "30",
    "40",
    "indicates",
    "organizations",
    "clear",
    "interest",
    "using",
    "aws",
    "number",
    "one",
    "years",
    "experience",
    "trust",
    "created",
    "among",
    "users",
    "sure",
    "market",
    "leader",
    "far",
    "behind",
    "let",
    "remind",
    "80",
    "percent",
    "fortune",
    "500",
    "companies",
    "trust",
    "azure",
    "cloud",
    "computing",
    "needs",
    "match",
    "time",
    "azure",
    "takes",
    "lead",
    "rest",
    "30",
    "percent",
    "aws",
    "azure",
    "accounts",
    "cloud",
    "service",
    "providers",
    "like",
    "google",
    "cloud",
    "platform",
    "rackspace",
    "ibm",
    "software",
    "next",
    "round",
    "comparison",
    "round",
    "first",
    "comparing",
    "pricing",
    "looking",
    "cost",
    "basic",
    "instance",
    "virtual",
    "machine",
    "two",
    "virtual",
    "cpus",
    "eight",
    "gbs",
    "ram",
    "aws",
    "cost",
    "approximately",
    "us",
    "dollars",
    "per",
    "hour",
    "instance",
    "azure",
    "cost",
    "approximately",
    "us",
    "dollars",
    "per",
    "hour",
    "next",
    "let",
    "compare",
    "market",
    "share",
    "options",
    "mentioned",
    "aws",
    "undisputed",
    "market",
    "leader",
    "comes",
    "cloud",
    "computing",
    "domain",
    "taking",
    "40",
    "percent",
    "market",
    "share",
    "2020",
    "aws",
    "also",
    "expected",
    "produce",
    "twice",
    "current",
    "revenue",
    "comes",
    "close",
    "44",
    "billion",
    "dollars",
    "mention",
    "aws",
    "constantly",
    "expanding",
    "already",
    "strong",
    "roaster",
    "100",
    "services",
    "fulfill",
    "shifting",
    "business",
    "requirements",
    "organizations",
    "great",
    "really",
    "good",
    "research",
    "company",
    "gardner",
    "released",
    "magic",
    "quadrant",
    "see",
    "see",
    "competition",
    "azure",
    "aws",
    "matter",
    "time",
    "azure",
    "increase",
    "30",
    "market",
    "share",
    "surpass",
    "aws",
    "becomes",
    "likely",
    "considering",
    "companies",
    "migrating",
    "aws",
    "azure",
    "help",
    "satisfy",
    "business",
    "needs",
    "azure",
    "far",
    "behind",
    "aws",
    "comes",
    "services",
    "well",
    "azure",
    "service",
    "offerings",
    "constantly",
    "updated",
    "improved",
    "help",
    "users",
    "satisfy",
    "cloud",
    "computing",
    "requirement",
    "let",
    "compare",
    "aws",
    "azure",
    "free",
    "offerings",
    "aws",
    "provides",
    "significant",
    "number",
    "services",
    "free",
    "helping",
    "users",
    "get",
    "experience",
    "platform",
    "products",
    "services",
    "free",
    "tier",
    "services",
    "fall",
    "two",
    "categories",
    "services",
    "remain",
    "free",
    "forever",
    "others",
    "valid",
    "one",
    "year",
    "always",
    "free",
    "category",
    "offers",
    "20",
    "services",
    "example",
    "amazon",
    "sns",
    "sqs",
    "cloud",
    "watch",
    "etc",
    "valid",
    "fourier",
    "category",
    "offers",
    "approximately",
    "20",
    "services",
    "example",
    "amazon",
    "s3",
    "ec2",
    "elastic",
    "cache",
    "etc",
    "types",
    "services",
    "limits",
    "usage",
    "example",
    "storage",
    "number",
    "requests",
    "compute",
    "time",
    "etc",
    "users",
    "charged",
    "using",
    "services",
    "fall",
    "valid",
    "year",
    "category",
    "year",
    "usage",
    "show",
    "provides",
    "free",
    "tier",
    "well",
    "also",
    "provides",
    "services",
    "belong",
    "categories",
    "free",
    "year",
    "always",
    "free",
    "25",
    "plus",
    "always",
    "free",
    "services",
    "provided",
    "azure",
    "include",
    "app",
    "service",
    "functions",
    "container",
    "service",
    "active",
    "directory",
    "lots",
    "valid",
    "year",
    "eight",
    "services",
    "offered",
    "linux",
    "windows",
    "virtual",
    "machines",
    "blob",
    "storage",
    "sql",
    "database",
    "azure",
    "also",
    "provides",
    "users",
    "credits",
    "200",
    "us",
    "dollars",
    "access",
    "services",
    "30",
    "days",
    "unique",
    "feature",
    "azure",
    "provides",
    "users",
    "use",
    "credits",
    "utilize",
    "service",
    "choice",
    "entire",
    "month",
    "let",
    "compare",
    "instance",
    "configuration",
    "largest",
    "instance",
    "aws",
    "offers",
    "whopping",
    "256",
    "gbs",
    "ram",
    "16",
    "virtual",
    "cpus",
    "largest",
    "azure",
    "offers",
    "far",
    "behind",
    "either",
    "224",
    "gbs",
    "ram",
    "16",
    "virtual",
    "cpus",
    "final",
    "round",
    "contestants",
    "shown",
    "facts",
    "give",
    "explanations",
    "facts",
    "call",
    "rapid",
    "fire",
    "round",
    "first",
    "features",
    "aws",
    "good",
    "azure",
    "better",
    "aws",
    "cut",
    "features",
    "offers",
    "users",
    "however",
    "requires",
    "slightly",
    "management",
    "user",
    "part",
    "azure",
    "goes",
    "slightly",
    "deeper",
    "services",
    "fall",
    "certain",
    "categories",
    "like",
    "platform",
    "service",
    "infrastructure",
    "service",
    "next",
    "hybrid",
    "cloud",
    "aws",
    "good",
    "azure",
    "better",
    "okay",
    "although",
    "aws",
    "emphasize",
    "hybrid",
    "cloud",
    "earlier",
    "focusing",
    "technology",
    "azure",
    "always",
    "emphasized",
    "hybrid",
    "cloud",
    "features",
    "supporting",
    "since",
    "days",
    "inception",
    "developers",
    "aws",
    "better",
    "azure",
    "good",
    "course",
    "better",
    "aws",
    "supports",
    "integration",
    "applications",
    "well",
    "azure",
    "provides",
    "access",
    "data",
    "centers",
    "provide",
    "scalable",
    "architecture",
    "pricing",
    "aws",
    "azure",
    "level",
    "good",
    "aws",
    "provides",
    "competitive",
    "constantly",
    "decreasing",
    "pricing",
    "model",
    "case",
    "azure",
    "provides",
    "offers",
    "constantly",
    "experimented",
    "upon",
    "provide",
    "users",
    "best",
    "experience",
    "contestants",
    "finished",
    "giving",
    "statements",
    "let",
    "see",
    "surprisingly",
    "nobody",
    "cloud",
    "computing",
    "platform",
    "pros",
    "cons",
    "choosing",
    "right",
    "one",
    "based",
    "entirely",
    "organization",
    "requirements",
    "hi",
    "guys",
    "today",
    "got",
    "something",
    "special",
    "store",
    "going",
    "talk",
    "best",
    "cloud",
    "computing",
    "platform",
    "available",
    "amazon",
    "web",
    "services",
    "uh",
    "rahul",
    "think",
    "said",
    "something",
    "wrong",
    "best",
    "cloud",
    "computing",
    "platform",
    "obviously",
    "google",
    "cloud",
    "platform",
    "aws",
    "100",
    "services",
    "span",
    "variety",
    "domains",
    "right",
    "google",
    "cloud",
    "platform",
    "cheaper",
    "instances",
    "say",
    "well",
    "guess",
    "one",
    "place",
    "actually",
    "discuss",
    "boxing",
    "ring",
    "guys",
    "apeksha",
    "google",
    "cloud",
    "platform",
    "rahul",
    "aws",
    "welcome",
    "fight",
    "night",
    "aws",
    "versus",
    "gcp",
    "winner",
    "chosen",
    "basis",
    "origin",
    "features",
    "provide",
    "performance",
    "present",
    "day",
    "comparing",
    "basis",
    "pricing",
    "market",
    "share",
    "options",
    "things",
    "give",
    "free",
    "instance",
    "configuration",
    "first",
    "let",
    "talk",
    "aws",
    "aws",
    "launched",
    "2004",
    "cloud",
    "service",
    "platform",
    "helps",
    "businesses",
    "grow",
    "scale",
    "providing",
    "services",
    "number",
    "different",
    "domains",
    "domains",
    "include",
    "compute",
    "database",
    "storage",
    "migration",
    "networking",
    "important",
    "aspect",
    "aws",
    "years",
    "experience",
    "aws",
    "market",
    "lot",
    "longer",
    "cloud",
    "service",
    "platform",
    "means",
    "know",
    "businesses",
    "work",
    "contribute",
    "business",
    "growing",
    "also",
    "aws",
    "billion",
    "dollars",
    "revenue",
    "last",
    "quarter",
    "clear",
    "indication",
    "much",
    "faith",
    "trust",
    "people",
    "aws",
    "occupy",
    "40",
    "percent",
    "market",
    "significant",
    "chunk",
    "cloud",
    "computing",
    "market",
    "least",
    "100",
    "services",
    "available",
    "moment",
    "means",
    "every",
    "issue",
    "solved",
    "aws",
    "service",
    "great",
    "talk",
    "gcp",
    "hope",
    "know",
    "gcp",
    "launched",
    "recently",
    "2011",
    "already",
    "helping",
    "businesses",
    "significantly",
    "suite",
    "intelligent",
    "secure",
    "flexible",
    "cloud",
    "computing",
    "services",
    "lets",
    "build",
    "deploy",
    "scale",
    "applications",
    "websites",
    "services",
    "infrastructure",
    "google",
    "intuitive",
    "user",
    "experience",
    "gcp",
    "provides",
    "dashboards",
    "wizards",
    "way",
    "better",
    "aspects",
    "tcp",
    "stepped",
    "market",
    "already",
    "offering",
    "modest",
    "number",
    "services",
    "number",
    "rapidly",
    "increasing",
    "cost",
    "cpu",
    "instance",
    "regional",
    "storage",
    "gcp",
    "provides",
    "whole",
    "lot",
    "cheaper",
    "also",
    "get",
    "cloud",
    "storage",
    "say",
    "glad",
    "asked",
    "let",
    "look",
    "present",
    "day",
    "fact",
    "let",
    "look",
    "cloud",
    "market",
    "share",
    "fourth",
    "quarter",
    "tell",
    "aws",
    "leader",
    "comes",
    "cloud",
    "computing",
    "amazon",
    "web",
    "services",
    "contributes",
    "47",
    "market",
    "share",
    "others",
    "like",
    "rackspace",
    "verizon",
    "cloud",
    "contribute",
    "36",
    "microsoft",
    "azure",
    "contributes",
    "10",
    "google",
    "cloud",
    "platform",
    "contributes",
    "four",
    "percent",
    "ibm",
    "software",
    "contributes",
    "three",
    "percent",
    "forty",
    "seven",
    "percent",
    "market",
    "share",
    "contributed",
    "aws",
    "need",
    "convince",
    "wait",
    "wait",
    "wait",
    "fine",
    "started",
    "years",
    "back",
    "already",
    "grown",
    "much",
    "less",
    "span",
    "time",
    "heard",
    "latest",
    "news",
    "revenue",
    "already",
    "billion",
    "dollars",
    "per",
    "quarter",
    "wait",
    "years",
    "world",
    "shall",
    "see",
    "aws",
    "makes",
    "billion",
    "dollars",
    "per",
    "quarter",
    "going",
    "take",
    "good",
    "long",
    "time",
    "even",
    "get",
    "close",
    "us",
    "yes",
    "yes",
    "see",
    "let",
    "compare",
    "things",
    "starters",
    "let",
    "compare",
    "prices",
    "aws",
    "compute",
    "instance",
    "two",
    "cpus",
    "8gb",
    "ram",
    "costs",
    "approximately",
    "68",
    "us",
    "dollars",
    "computer",
    "instance",
    "virtual",
    "machine",
    "specify",
    "operating",
    "system",
    "ram",
    "storage",
    "want",
    "cloud",
    "storage",
    "costs",
    "cents",
    "per",
    "gb",
    "per",
    "month",
    "aws",
    "really",
    "want",
    "gcp",
    "wins",
    "hands",
    "let",
    "take",
    "compute",
    "instance",
    "two",
    "cpus",
    "8",
    "gb",
    "ram",
    "cost",
    "approximately",
    "50",
    "dollars",
    "per",
    "month",
    "gcp",
    "per",
    "calculations",
    "25",
    "annual",
    "cost",
    "reduction",
    "compared",
    "aws",
    "talking",
    "cloud",
    "storage",
    "costs",
    "2",
    "cents",
    "per",
    "gb",
    "per",
    "month",
    "gcp",
    "else",
    "want",
    "say",
    "let",
    "talk",
    "market",
    "share",
    "options",
    "aws",
    "current",
    "market",
    "leader",
    "comes",
    "cloud",
    "computing",
    "remember",
    "contribute",
    "least",
    "47",
    "entire",
    "market",
    "share",
    "aws",
    "also",
    "least",
    "100",
    "services",
    "available",
    "moment",
    "clear",
    "indication",
    "well",
    "aws",
    "understands",
    "businesses",
    "helps",
    "grow",
    "yeah",
    "true",
    "also",
    "know",
    "gcp",
    "steadily",
    "growing",
    "60",
    "services",
    "running",
    "see",
    "lot",
    "come",
    "matter",
    "time",
    "many",
    "services",
    "many",
    "companies",
    "already",
    "started",
    "adopting",
    "gcp",
    "cloud",
    "service",
    "provider",
    "let",
    "talk",
    "things",
    "get",
    "free",
    "aws",
    "get",
    "access",
    "almost",
    "services",
    "entire",
    "year",
    "usage",
    "limits",
    "limits",
    "include",
    "hourly",
    "minute",
    "basis",
    "example",
    "amazon",
    "ec2",
    "get",
    "750",
    "hours",
    "per",
    "month",
    "also",
    "limits",
    "number",
    "requests",
    "services",
    "example",
    "aws",
    "lambda",
    "1",
    "million",
    "requests",
    "per",
    "month",
    "limits",
    "across",
    "get",
    "charged",
    "standard",
    "rates",
    "gcp",
    "get",
    "access",
    "cloud",
    "platform",
    "products",
    "like",
    "firebase",
    "google",
    "maps",
    "api",
    "also",
    "get",
    "300",
    "credit",
    "spend",
    "period",
    "cloud",
    "platform",
    "products",
    "interestingly",
    "free",
    "trial",
    "ends",
    "wo",
    "charged",
    "unless",
    "manually",
    "upgrade",
    "paid",
    "account",
    "also",
    "always",
    "free",
    "version",
    "need",
    "upgraded",
    "billing",
    "account",
    "get",
    "use",
    "small",
    "instance",
    "free",
    "5gb",
    "cloud",
    "storage",
    "usage",
    "always",
    "free",
    "usage",
    "limits",
    "automatically",
    "built",
    "standard",
    "rates",
    "let",
    "talk",
    "configure",
    "instances",
    "aws",
    "largest",
    "instance",
    "offered",
    "128",
    "cpus",
    "4",
    "tvs",
    "ram",
    "demand",
    "method",
    "like",
    "mentioned",
    "also",
    "use",
    "spot",
    "instances",
    "situations",
    "application",
    "fault",
    "tolerant",
    "handle",
    "interruption",
    "pay",
    "spot",
    "price",
    "effective",
    "particular",
    "r",
    "part",
    "prices",
    "fluctuate",
    "adjusted",
    "period",
    "time",
    "largest",
    "instance",
    "offered",
    "google",
    "cloud",
    "160",
    "cpus",
    "tbs",
    "ram",
    "like",
    "spot",
    "instances",
    "aws",
    "google",
    "cloud",
    "offers",
    "compute",
    "instances",
    "suitable",
    "bad",
    "jobs",
    "fault",
    "tolerant",
    "workloads",
    "called",
    "preemptable",
    "instances",
    "instances",
    "available",
    "eighty",
    "percent",
    "demand",
    "price",
    "hence",
    "reduce",
    "compute",
    "engine",
    "costs",
    "significantly",
    "unlike",
    "aws",
    "come",
    "fixed",
    "price",
    "google",
    "cloud",
    "platform",
    "lot",
    "flexible",
    "comes",
    "instance",
    "configuration",
    "simply",
    "choose",
    "cpu",
    "ram",
    "combination",
    "course",
    "even",
    "create",
    "instance",
    "types",
    "way",
    "wrap",
    "let",
    "compare",
    "things",
    "well",
    "telemetry",
    "process",
    "automatically",
    "collecting",
    "periodic",
    "measurements",
    "remote",
    "devices",
    "example",
    "gps",
    "gcp",
    "obviously",
    "better",
    "superior",
    "telemetry",
    "tools",
    "help",
    "analyzing",
    "services",
    "providing",
    "opportunities",
    "improvement",
    "comes",
    "application",
    "support",
    "aws",
    "obviously",
    "better",
    "since",
    "years",
    "experience",
    "bed",
    "aws",
    "provides",
    "best",
    "support",
    "given",
    "customers",
    "containers",
    "better",
    "gcp",
    "container",
    "virtual",
    "process",
    "running",
    "user",
    "space",
    "kubernetes",
    "originally",
    "developed",
    "google",
    "gcp",
    "full",
    "native",
    "support",
    "tool",
    "cloud",
    "services",
    "fine",
    "tuning",
    "way",
    "provide",
    "kubernetes",
    "service",
    "also",
    "containers",
    "help",
    "abstracting",
    "applications",
    "environment",
    "originally",
    "run",
    "applications",
    "deployed",
    "easily",
    "regardless",
    "environment",
    "comes",
    "geographies",
    "aws",
    "better",
    "since",
    "head",
    "start",
    "years",
    "aws",
    "span",
    "time",
    "able",
    "cover",
    "larger",
    "market",
    "share",
    "geographical",
    "locations",
    "time",
    "big",
    "decision",
    "going",
    "yeah",
    "going",
    "gcp",
    "aws",
    "think",
    "going",
    "go",
    "choosing",
    "right",
    "cloud",
    "computing",
    "platform",
    "decision",
    "made",
    "basis",
    "user",
    "organization",
    "requirement",
    "aws",
    "azure",
    "gcp",
    "three",
    "world",
    "largest",
    "cloud",
    "service",
    "providers",
    "different",
    "let",
    "find",
    "hey",
    "guys",
    "rahul",
    "representing",
    "amazon",
    "web",
    "services",
    "chinmayi",
    "representing",
    "microsoft",
    "azure",
    "shruti",
    "representing",
    "google",
    "cloud",
    "platform",
    "welcome",
    "video",
    "aws",
    "versus",
    "azure",
    "vs",
    "gcp",
    "talking",
    "market",
    "share",
    "amazon",
    "web",
    "services",
    "leads",
    "around",
    "32",
    "worldwide",
    "public",
    "cloud",
    "share",
    "azure",
    "owns",
    "16",
    "worldwide",
    "market",
    "share",
    "gcp",
    "owns",
    "around",
    "9",
    "world",
    "market",
    "share",
    "let",
    "talk",
    "service",
    "providers",
    "detail",
    "aws",
    "provides",
    "services",
    "enable",
    "users",
    "create",
    "deploy",
    "applications",
    "cloud",
    "services",
    "accessible",
    "via",
    "internet",
    "aws",
    "oldest",
    "lot",
    "launched",
    "year",
    "azure",
    "launched",
    "2010",
    "computing",
    "platform",
    "offers",
    "wide",
    "range",
    "services",
    "build",
    "manage",
    "deploy",
    "applications",
    "network",
    "using",
    "tools",
    "frameworks",
    "launched",
    "year",
    "2008",
    "gcp",
    "offers",
    "application",
    "development",
    "integration",
    "services",
    "end",
    "users",
    "addition",
    "cloud",
    "management",
    "also",
    "offers",
    "services",
    "big",
    "data",
    "machine",
    "learning",
    "iot",
    "let",
    "talk",
    "availability",
    "zones",
    "isolated",
    "locations",
    "within",
    "data",
    "center",
    "regions",
    "public",
    "cloud",
    "services",
    "originate",
    "operate",
    "talking",
    "aws",
    "69",
    "availability",
    "zones",
    "within",
    "22",
    "geographical",
    "regions",
    "includes",
    "regions",
    "united",
    "states",
    "south",
    "america",
    "europe",
    "asia",
    "pacific",
    "also",
    "predicted",
    "12",
    "editions",
    "future",
    "azure",
    "available",
    "140",
    "countries",
    "54",
    "regions",
    "worldwide",
    "grouped",
    "six",
    "geographies",
    "geographical",
    "locations",
    "100",
    "data",
    "centers",
    "gcp",
    "available",
    "200",
    "plus",
    "countries",
    "across",
    "world",
    "today",
    "gcp",
    "present",
    "61",
    "zones",
    "20",
    "regions",
    "osaka",
    "zurich",
    "newly",
    "added",
    "regions",
    "let",
    "talk",
    "pricing",
    "services",
    "follow",
    "pay",
    "go",
    "approach",
    "pay",
    "individual",
    "services",
    "need",
    "long",
    "use",
    "without",
    "requiring",
    "contracts",
    "complex",
    "licensing",
    "screen",
    "see",
    "pricing",
    "cloud",
    "service",
    "providers",
    "respect",
    "various",
    "instances",
    "like",
    "general",
    "purpose",
    "compute",
    "optimized",
    "memory",
    "optimized",
    "gpu",
    "let",
    "talk",
    "compute",
    "services",
    "offered",
    "first",
    "virtual",
    "servers",
    "aws",
    "ec2",
    "web",
    "service",
    "eliminates",
    "need",
    "invest",
    "hardware",
    "develop",
    "deploy",
    "applications",
    "faster",
    "manner",
    "provides",
    "virtual",
    "machines",
    "run",
    "applications",
    "azure",
    "virtual",
    "machines",
    "one",
    "several",
    "types",
    "computing",
    "resources",
    "azure",
    "offers",
    "azure",
    "gives",
    "user",
    "flexibility",
    "deploy",
    "manage",
    "virtual",
    "environment",
    "inside",
    "virtual",
    "network",
    "gcp",
    "vm",
    "service",
    "enables",
    "users",
    "build",
    "deploy",
    "manage",
    "virtual",
    "machines",
    "run",
    "workloads",
    "cloud",
    "let",
    "talk",
    "pricing",
    "services",
    "aws",
    "cc2",
    "free",
    "try",
    "packaged",
    "part",
    "aws",
    "free",
    "tier",
    "lasts",
    "12",
    "months",
    "provides",
    "750",
    "hours",
    "per",
    "month",
    "linux",
    "windows",
    "virtual",
    "machines",
    "azure",
    "virtual",
    "machine",
    "service",
    "part",
    "free",
    "tier",
    "offers",
    "service",
    "750",
    "hours",
    "per",
    "month",
    "year",
    "user",
    "gets",
    "access",
    "windows",
    "linux",
    "virtual",
    "machines",
    "gcp",
    "vm",
    "service",
    "part",
    "free",
    "tier",
    "includes",
    "micro",
    "instance",
    "per",
    "month",
    "12",
    "months",
    "let",
    "talk",
    "platform",
    "service",
    "pass",
    "services",
    "aws",
    "elastic",
    "bean",
    "stock",
    "easy",
    "use",
    "service",
    "deploying",
    "scaling",
    "web",
    "applications",
    "services",
    "developed",
    "java",
    "dot",
    "net",
    "python",
    "much",
    "used",
    "maintaining",
    "capacity",
    "provisioning",
    "load",
    "balancing",
    "auto",
    "scaling",
    "application",
    "health",
    "monitoring",
    "pass",
    "backbone",
    "utilizes",
    "virtualization",
    "techniques",
    "virtual",
    "machine",
    "independent",
    "actual",
    "hardware",
    "hosts",
    "hence",
    "user",
    "write",
    "application",
    "code",
    "without",
    "worrying",
    "underlying",
    "hardware",
    "google",
    "app",
    "engine",
    "cloud",
    "computing",
    "platform",
    "service",
    "used",
    "developers",
    "hosting",
    "building",
    "apps",
    "google",
    "data",
    "centers",
    "app",
    "engine",
    "requires",
    "apps",
    "written",
    "java",
    "python",
    "store",
    "data",
    "google",
    "bigtable",
    "use",
    "google",
    "query",
    "language",
    "next",
    "let",
    "talk",
    "virtual",
    "private",
    "server",
    "services",
    "aws",
    "provides",
    "light",
    "sale",
    "provides",
    "everything",
    "need",
    "build",
    "application",
    "website",
    "along",
    "cost",
    "effective",
    "monthly",
    "plan",
    "minimum",
    "number",
    "configurations",
    "simple",
    "words",
    "vm",
    "image",
    "comprehensive",
    "image",
    "microsoft",
    "azure",
    "virtual",
    "machines",
    "helps",
    "user",
    "create",
    "many",
    "identical",
    "virtual",
    "machines",
    "matter",
    "minutes",
    "unfortunately",
    "gcp",
    "offer",
    "similar",
    "service",
    "next",
    "serverless",
    "computing",
    "services",
    "aws",
    "lambda",
    "serverless",
    "compute",
    "service",
    "lets",
    "run",
    "code",
    "without",
    "facilitating",
    "managing",
    "servers",
    "pay",
    "compute",
    "time",
    "use",
    "used",
    "execute",
    "backend",
    "code",
    "scales",
    "automatically",
    "required",
    "azure",
    "functions",
    "serverless",
    "compute",
    "service",
    "lets",
    "run",
    "even",
    "triggered",
    "code",
    "without",
    "explicitly",
    "provision",
    "manage",
    "infrastructure",
    "allows",
    "users",
    "build",
    "applications",
    "using",
    "serverless",
    "simple",
    "functions",
    "programming",
    "language",
    "choice",
    "gcp",
    "cloud",
    "functions",
    "make",
    "easy",
    "developers",
    "run",
    "scale",
    "code",
    "cloud",
    "build",
    "image",
    "driven",
    "serverless",
    "applications",
    "highly",
    "available",
    "fault",
    "tolerant",
    "let",
    "talk",
    "storage",
    "services",
    "offered",
    "service",
    "providers",
    "first",
    "object",
    "storage",
    "aws",
    "provides",
    "s3",
    "object",
    "storage",
    "provides",
    "industry",
    "standard",
    "scalability",
    "data",
    "availability",
    "performance",
    "extremely",
    "durable",
    "used",
    "storing",
    "well",
    "recovering",
    "information",
    "data",
    "anywhere",
    "internet",
    "blob",
    "storage",
    "azure",
    "feature",
    "lets",
    "developers",
    "store",
    "unstructured",
    "data",
    "microsoft",
    "cloud",
    "platform",
    "along",
    "storage",
    "also",
    "offers",
    "scalability",
    "stores",
    "data",
    "form",
    "tears",
    "depending",
    "often",
    "data",
    "accessed",
    "google",
    "cloud",
    "storage",
    "online",
    "storage",
    "web",
    "service",
    "storing",
    "accessing",
    "data",
    "google",
    "cloud",
    "platform",
    "infrastructure",
    "unlike",
    "google",
    "drive",
    "google",
    "cloud",
    "storage",
    "suitable",
    "enterprises",
    "also",
    "stores",
    "objects",
    "organized",
    "buckets",
    "amazon",
    "provides",
    "ebs",
    "elastic",
    "block",
    "store",
    "provides",
    "high",
    "performance",
    "block",
    "storage",
    "used",
    "along",
    "ec2",
    "instances",
    "workloads",
    "transaction",
    "throughput",
    "intensive",
    "azure",
    "managed",
    "disk",
    "virtual",
    "hard",
    "disk",
    "think",
    "like",
    "physical",
    "disk",
    "server",
    "virtualized",
    "managed",
    "disks",
    "allow",
    "users",
    "create",
    "10",
    "000",
    "vm",
    "disks",
    "single",
    "subscription",
    "persistent",
    "storage",
    "data",
    "storage",
    "device",
    "retains",
    "data",
    "power",
    "device",
    "shut",
    "google",
    "persistent",
    "disk",
    "durable",
    "high",
    "performance",
    "block",
    "storage",
    "gcp",
    "persistent",
    "disk",
    "provides",
    "storage",
    "attached",
    "instances",
    "running",
    "either",
    "google",
    "compute",
    "engine",
    "kubernetes",
    "engine",
    "next",
    "disaster",
    "recovery",
    "services",
    "aws",
    "provides",
    "recovery",
    "service",
    "ensures",
    "infrastructure",
    "data",
    "recovered",
    "minimizing",
    "amount",
    "downtime",
    "could",
    "experienced",
    "site",
    "recovery",
    "helps",
    "ensure",
    "business",
    "continuity",
    "keeping",
    "business",
    "apps",
    "workloads",
    "running",
    "outages",
    "allows",
    "recovery",
    "orchestrating",
    "automating",
    "replication",
    "process",
    "azure",
    "virtual",
    "machines",
    "regions",
    "unfortunately",
    "gcp",
    "disaster",
    "recovery",
    "service",
    "next",
    "let",
    "talk",
    "database",
    "services",
    "first",
    "aws",
    "rds",
    "relational",
    "database",
    "service",
    "web",
    "service",
    "cost",
    "effective",
    "automates",
    "administration",
    "tasks",
    "basically",
    "simplifies",
    "setup",
    "operation",
    "scaling",
    "relational",
    "database",
    "microsoft",
    "azure",
    "sql",
    "database",
    "software",
    "service",
    "platform",
    "includes",
    "intelligence",
    "learns",
    "app",
    "patterns",
    "adapts",
    "maximize",
    "performance",
    "reliability",
    "data",
    "protection",
    "also",
    "eases",
    "migration",
    "sql",
    "server",
    "databases",
    "without",
    "changing",
    "user",
    "applications",
    "cloud",
    "sql",
    "fully",
    "managed",
    "database",
    "service",
    "easy",
    "set",
    "maintain",
    "administer",
    "relational",
    "postgresql",
    "mysql",
    "sql",
    "server",
    "databases",
    "cloud",
    "hosted",
    "gcp",
    "cloud",
    "sql",
    "provides",
    "database",
    "infrastructure",
    "applications",
    "running",
    "anywhere",
    "next",
    "nosql",
    "database",
    "services",
    "aws",
    "provides",
    "dynamodb",
    "managed",
    "durable",
    "database",
    "provides",
    "security",
    "backup",
    "restore",
    "caching",
    "applications",
    "well",
    "known",
    "low",
    "latency",
    "scalable",
    "performance",
    "azure",
    "cosmos",
    "db",
    "microsoft",
    "globally",
    "distributed",
    "database",
    "service",
    "natively",
    "supports",
    "nosql",
    "natively",
    "supports",
    "nosql",
    "created",
    "low",
    "latency",
    "scalable",
    "applications",
    "gcp",
    "cloud",
    "data",
    "store",
    "nosql",
    "database",
    "service",
    "offered",
    "google",
    "gcp",
    "handles",
    "replication",
    "scales",
    "automatically",
    "application",
    "load",
    "cloud",
    "data",
    "stores",
    "interface",
    "data",
    "easily",
    "accessed",
    "deployment",
    "target",
    "let",
    "talk",
    "key",
    "cloud",
    "tools",
    "service",
    "providers",
    "aws",
    "networking",
    "content",
    "delivery",
    "aws",
    "route",
    "53",
    "aws",
    "cloud",
    "front",
    "management",
    "aws",
    "cloud",
    "watch",
    "aws",
    "cloud",
    "formation",
    "development",
    "aws",
    "code",
    "start",
    "aws",
    "code",
    "build",
    "security",
    "iam",
    "key",
    "management",
    "service",
    "microsoft",
    "azure",
    "networking",
    "content",
    "delivery",
    "content",
    "delivery",
    "network",
    "express",
    "root",
    "management",
    "tools",
    "azure",
    "advisor",
    "network",
    "watcher",
    "development",
    "tools",
    "management",
    "azure",
    "advisor",
    "network",
    "watcher",
    "development",
    "visual",
    "studio",
    "ide",
    "azure",
    "blob",
    "studio",
    "security",
    "azure",
    "security",
    "center",
    "azure",
    "active",
    "directory",
    "gcp",
    "following",
    "tools",
    "networking",
    "content",
    "delivery",
    "cloud",
    "cdn",
    "cloud",
    "dns",
    "management",
    "stack",
    "driver",
    "gcp",
    "monitoring",
    "development",
    "cloud",
    "build",
    "cloud",
    "sdk",
    "finally",
    "security",
    "google",
    "cloud",
    "im",
    "google",
    "cloud",
    "security",
    "scanner",
    "let",
    "talk",
    "companies",
    "using",
    "cloud",
    "providers",
    "aws",
    "netflix",
    "unilever",
    "kellogg",
    "nasa",
    "nokia",
    "adobe",
    "pixar",
    "samsung",
    "ebay",
    "fujitsu",
    "emc",
    "bmw",
    "among",
    "others",
    "use",
    "microsoft",
    "azure",
    "seen",
    "screens",
    "companies",
    "use",
    "gcp",
    "spotify",
    "hsbc",
    "snapchat",
    "twitter",
    "paypal",
    "20th",
    "century",
    "fox",
    "let",
    "talk",
    "advantages",
    "services",
    "amazon",
    "provides",
    "enterprise",
    "friendly",
    "services",
    "leverage",
    "amazon",
    "15",
    "years",
    "experience",
    "delivering",
    "global",
    "infrastructure",
    "still",
    "continues",
    "hone",
    "innovate",
    "infrastructure",
    "management",
    "skills",
    "capabilities",
    "secondly",
    "provides",
    "instant",
    "access",
    "resources",
    "aws",
    "designed",
    "allow",
    "application",
    "providers",
    "isvs",
    "vendors",
    "quickly",
    "securely",
    "host",
    "applications",
    "whether",
    "existing",
    "application",
    "new",
    "sas",
    "based",
    "application",
    "speed",
    "agility",
    "aws",
    "provides",
    "access",
    "services",
    "within",
    "minutes",
    "need",
    "select",
    "require",
    "proceed",
    "access",
    "applications",
    "anytime",
    "need",
    "finally",
    "secure",
    "reliable",
    "amazon",
    "enables",
    "innovate",
    "scale",
    "application",
    "secure",
    "environment",
    "secures",
    "hardens",
    "infrastructure",
    "importantly",
    "provides",
    "security",
    "cheaper",
    "cost",
    "environments",
    "talking",
    "advantages",
    "azure",
    "microsoft",
    "azure",
    "offers",
    "better",
    "development",
    "operations",
    "also",
    "provides",
    "strong",
    "security",
    "profile",
    "azure",
    "strong",
    "focus",
    "security",
    "following",
    "standard",
    "security",
    "model",
    "detect",
    "assess",
    "diagnose",
    "stabilize",
    "close",
    "azure",
    "also",
    "provides",
    "solution",
    "cloud",
    "environment",
    "allows",
    "businesses",
    "launch",
    "customer",
    "applications",
    "internal",
    "apps",
    "cloud",
    "saves",
    "id",
    "infrastructure",
    "costs",
    "hence",
    "opex",
    "friendly",
    "let",
    "look",
    "advantages",
    "gcp",
    "google",
    "builds",
    "minute",
    "level",
    "increments",
    "pay",
    "compute",
    "time",
    "use",
    "also",
    "provide",
    "discounted",
    "prices",
    "workloads",
    "example",
    "use",
    "vm",
    "month",
    "get",
    "discount",
    "gcp",
    "also",
    "provides",
    "live",
    "migration",
    "virtual",
    "machines",
    "live",
    "migration",
    "process",
    "moving",
    "running",
    "vm",
    "one",
    "physical",
    "server",
    "another",
    "without",
    "disrupting",
    "availability",
    "users",
    "important",
    "differentiator",
    "google",
    "cloud",
    "compared",
    "cloud",
    "providers",
    "gcp",
    "provides",
    "automatic",
    "scalability",
    "allows",
    "size",
    "container",
    "scale",
    "many",
    "cpus",
    "needed",
    "google",
    "cloud",
    "storage",
    "designed",
    "durability",
    "creates",
    "server",
    "backup",
    "stores",
    "user",
    "configure",
    "location",
    "let",
    "talk",
    "disadvantages",
    "services",
    "aws",
    "limitation",
    "ec2",
    "service",
    "aws",
    "provides",
    "limitations",
    "resources",
    "vary",
    "region",
    "region",
    "may",
    "limit",
    "number",
    "instances",
    "created",
    "however",
    "request",
    "limits",
    "increased",
    "secondly",
    "technical",
    "support",
    "fee",
    "aws",
    "charges",
    "immediate",
    "support",
    "opt",
    "packages",
    "developer",
    "costs",
    "29",
    "per",
    "month",
    "business",
    "costs",
    "hundred",
    "dollars",
    "enterprise",
    "costs",
    "fifteen",
    "thousand",
    "dollars",
    "certain",
    "network",
    "connectivity",
    "issues",
    "also",
    "general",
    "issues",
    "move",
    "cloud",
    "like",
    "downtime",
    "limited",
    "control",
    "backup",
    "protection",
    "however",
    "temporary",
    "issues",
    "handled",
    "time",
    "talking",
    "disadvantages",
    "microsoft",
    "azure",
    "codebase",
    "different",
    "working",
    "offline",
    "requires",
    "modification",
    "working",
    "cloud",
    "pass",
    "echo",
    "system",
    "efficient",
    "iaas",
    "azure",
    "management",
    "console",
    "frustrating",
    "work",
    "slow",
    "respond",
    "update",
    "requires",
    "far",
    "many",
    "clicks",
    "achieve",
    "simple",
    "tasks",
    "azure",
    "backup",
    "intended",
    "backing",
    "restoring",
    "data",
    "located",
    "servers",
    "cloud",
    "great",
    "feature",
    "really",
    "useful",
    "bare",
    "metal",
    "three",
    "stores",
    "servers",
    "remote",
    "data",
    "center",
    "let",
    "look",
    "disadvantages",
    "gcp",
    "comes",
    "cloud",
    "providers",
    "support",
    "fee",
    "minimal",
    "case",
    "gcp",
    "quite",
    "costly",
    "around",
    "150",
    "dollars",
    "per",
    "month",
    "basic",
    "service",
    "similar",
    "aws",
    "s3",
    "gcp",
    "complex",
    "pricing",
    "schema",
    "also",
    "budget",
    "friendly",
    "comes",
    "downloading",
    "data",
    "google",
    "cloud",
    "storage",
    "let",
    "us",
    "see",
    "certifications",
    "available",
    "aws",
    "azure",
    "become",
    "cloud",
    "engineer",
    "aws",
    "solutions",
    "architect",
    "rahul",
    "talk",
    "topics",
    "also",
    "cover",
    "important",
    "aws",
    "azure",
    "interview",
    "questions",
    "right",
    "aws",
    "certification",
    "website",
    "whose",
    "link",
    "description",
    "going",
    "talk",
    "types",
    "aws",
    "certification",
    "see",
    "three",
    "levels",
    "aw",
    "certification",
    "foundational",
    "level",
    "associate",
    "level",
    "professional",
    "level",
    "certification",
    "foundational",
    "level",
    "certification",
    "requires",
    "basic",
    "understanding",
    "aws",
    "cloud",
    "works",
    "aws",
    "certified",
    "dot",
    "practitioner",
    "optional",
    "architect",
    "path",
    "developer",
    "path",
    "operations",
    "path",
    "mandatory",
    "specialty",
    "certifications",
    "like",
    "advanced",
    "networking",
    "big",
    "data",
    "security",
    "certifications",
    "associate",
    "level",
    "certifications",
    "certifications",
    "technical",
    "role",
    "professional",
    "certification",
    "highest",
    "level",
    "certification",
    "technical",
    "role",
    "solutions",
    "architect",
    "architect",
    "path",
    "devops",
    "engineer",
    "certification",
    "developer",
    "operations",
    "path",
    "decide",
    "certifications",
    "suitable",
    "seen",
    "aws",
    "provides",
    "various",
    "certifications",
    "number",
    "job",
    "roles",
    "exisops",
    "administrator",
    "solution",
    "architect",
    "developer",
    "need",
    "make",
    "right",
    "choice",
    "taking",
    "consideration",
    "areas",
    "interest",
    "experience",
    "level",
    "going",
    "talk",
    "certifications",
    "detail",
    "first",
    "let",
    "talk",
    "aw",
    "certified",
    "cloud",
    "practitioner",
    "understand",
    "aws",
    "widely",
    "recognized",
    "product",
    "market",
    "certification",
    "helps",
    "validate",
    "well",
    "know",
    "aws",
    "cloud",
    "basic",
    "understanding",
    "optional",
    "developer",
    "path",
    "operations",
    "path",
    "would",
    "suggest",
    "good",
    "idea",
    "start",
    "forms",
    "solid",
    "bedrock",
    "things",
    "going",
    "learn",
    "soon",
    "importantly",
    "require",
    "technical",
    "knowledge",
    "roles",
    "development",
    "architecture",
    "administration",
    "great",
    "place",
    "start",
    "newcomers",
    "architect",
    "role",
    "certifications",
    "interested",
    "becoming",
    "solutions",
    "architect",
    "solution",
    "design",
    "engineer",
    "someone",
    "works",
    "designing",
    "applications",
    "systems",
    "aws",
    "platform",
    "first",
    "aw",
    "certified",
    "solutions",
    "architect",
    "associate",
    "level",
    "certification",
    "certification",
    "want",
    "show",
    "well",
    "architect",
    "deploy",
    "applications",
    "aws",
    "platform",
    "recommended",
    "least",
    "year",
    "experience",
    "working",
    "distributed",
    "systems",
    "aws",
    "platform",
    "time",
    "also",
    "required",
    "understand",
    "aws",
    "services",
    "able",
    "recommend",
    "service",
    "based",
    "requirements",
    "need",
    "able",
    "use",
    "architectural",
    "best",
    "practices",
    "need",
    "estimate",
    "aws",
    "costs",
    "reduce",
    "next",
    "aws",
    "certified",
    "solutions",
    "architect",
    "professional",
    "level",
    "certification",
    "get",
    "certification",
    "unless",
    "done",
    "aw",
    "certified",
    "solutions",
    "architect",
    "associate",
    "level",
    "certification",
    "show",
    "technical",
    "skills",
    "experience",
    "designing",
    "distributed",
    "applications",
    "aws",
    "platform",
    "require",
    "two",
    "years",
    "experience",
    "working",
    "cloud",
    "architecture",
    "aws",
    "time",
    "also",
    "requires",
    "able",
    "evaluate",
    "requirements",
    "make",
    "architectural",
    "recommendations",
    "also",
    "need",
    "provide",
    "guidance",
    "best",
    "practices",
    "architectural",
    "design",
    "across",
    "number",
    "different",
    "platforms",
    "developer",
    "level",
    "certifications",
    "interested",
    "becoming",
    "software",
    "developer",
    "aws",
    "certified",
    "developer",
    "associate",
    "certification",
    "test",
    "well",
    "know",
    "develop",
    "maintain",
    "applications",
    "aws",
    "platform",
    "require",
    "year",
    "experience",
    "design",
    "maintain",
    "aws",
    "based",
    "applications",
    "like",
    "software",
    "developer",
    "role",
    "necessary",
    "know",
    "least",
    "one",
    "programming",
    "language",
    "also",
    "necessary",
    "understand",
    "core",
    "aws",
    "services",
    "uses",
    "basic",
    "architectural",
    "best",
    "practices",
    "need",
    "able",
    "design",
    "develop",
    "deploy",
    "solutions",
    "aws",
    "platform",
    "need",
    "understand",
    "applications",
    "created",
    "need",
    "experience",
    "developing",
    "maintaining",
    "applications",
    "number",
    "aws",
    "services",
    "like",
    "amazon",
    "sns",
    "dynamodb",
    "sqs",
    "aw",
    "certified",
    "devops",
    "engineer",
    "professional",
    "level",
    "certification",
    "note",
    "certification",
    "exactly",
    "one",
    "operations",
    "role",
    "thing",
    "tests",
    "ability",
    "create",
    "operate",
    "manage",
    "distributed",
    "applications",
    "aws",
    "platform",
    "necessary",
    "mandatory",
    "aw",
    "certified",
    "developer",
    "associate",
    "certification",
    "aws",
    "certified",
    "sysops",
    "administrator",
    "certification",
    "two",
    "years",
    "experience",
    "aws",
    "environments",
    "requires",
    "able",
    "develop",
    "code",
    "least",
    "one",
    "language",
    "need",
    "able",
    "automate",
    "test",
    "applications",
    "via",
    "scripting",
    "programming",
    "understand",
    "agile",
    "development",
    "processes",
    "operation",
    "certifications",
    "want",
    "become",
    "sysops",
    "administrator",
    "systems",
    "administrator",
    "someone",
    "devops",
    "role",
    "wants",
    "deploy",
    "applications",
    "networks",
    "systems",
    "automatable",
    "beatable",
    "way",
    "aw",
    "certified",
    "sysops",
    "administrator",
    "associate",
    "certification",
    "tests",
    "knowledge",
    "deployment",
    "management",
    "operations",
    "aws",
    "platform",
    "need",
    "one",
    "years",
    "experience",
    "aws",
    "based",
    "applications",
    "need",
    "able",
    "identify",
    "gather",
    "requirements",
    "define",
    "solution",
    "operated",
    "aws",
    "need",
    "able",
    "provide",
    "guidance",
    "best",
    "practices",
    "life",
    "cycle",
    "project",
    "well",
    "specialty",
    "certifications",
    "aws",
    "want",
    "showcase",
    "expertise",
    "technical",
    "areas",
    "aw",
    "certified",
    "big",
    "data",
    "certification",
    "showcases",
    "ability",
    "design",
    "implement",
    "aws",
    "services",
    "help",
    "derive",
    "value",
    "large",
    "amount",
    "complex",
    "data",
    "however",
    "required",
    "completed",
    "foundational",
    "associate",
    "level",
    "certification",
    "attempt",
    "need",
    "minimum",
    "five",
    "years",
    "experience",
    "data",
    "analytics",
    "field",
    "well",
    "next",
    "aw",
    "certified",
    "advanced",
    "networking",
    "certification",
    "validates",
    "ability",
    "design",
    "implement",
    "aws",
    "solutions",
    "well",
    "hybrid",
    "id",
    "network",
    "architectures",
    "scale",
    "also",
    "requires",
    "completed",
    "foundational",
    "associate",
    "level",
    "certification",
    "need",
    "minimum",
    "five",
    "years",
    "experience",
    "architecting",
    "implementing",
    "network",
    "solutions",
    "lastly",
    "awa",
    "certified",
    "security",
    "certification",
    "helps",
    "showcase",
    "ability",
    "secure",
    "aws",
    "platform",
    "required",
    "associate",
    "cloud",
    "practitioner",
    "level",
    "certification",
    "minimum",
    "five",
    "years",
    "security",
    "experience",
    "two",
    "years",
    "experience",
    "securing",
    "aws",
    "workloads",
    "say",
    "wanted",
    "schedule",
    "examination",
    "example",
    "want",
    "solutions",
    "architect",
    "certification",
    "first",
    "would",
    "go",
    "click",
    "register",
    "process",
    "continues",
    "click",
    "learn",
    "show",
    "examination",
    "also",
    "get",
    "access",
    "data",
    "like",
    "number",
    "questions",
    "available",
    "cost",
    "examination",
    "portions",
    "need",
    "study",
    "let",
    "talk",
    "solutions",
    "architect",
    "certification",
    "little",
    "detail",
    "certification",
    "exam",
    "cost",
    "150",
    "us",
    "dollars",
    "practice",
    "exam",
    "cost",
    "20",
    "us",
    "dollars",
    "schedule",
    "examination",
    "download",
    "exam",
    "guide",
    "already",
    "downloaded",
    "exam",
    "guide",
    "exam",
    "guide",
    "tells",
    "need",
    "learn",
    "expected",
    "want",
    "define",
    "solution",
    "based",
    "requirements",
    "provide",
    "guidance",
    "implementation",
    "also",
    "recommended",
    "know",
    "aws",
    "services",
    "work",
    "1",
    "years",
    "experience",
    "distributed",
    "systems",
    "aws",
    "identify",
    "define",
    "technical",
    "requirements",
    "rest",
    "available",
    "exam",
    "guide",
    "importantly",
    "tell",
    "main",
    "content",
    "domains",
    "weightages",
    "five",
    "domains",
    "first",
    "domain",
    "design",
    "resilient",
    "architectures",
    "holds",
    "34",
    "percent",
    "weightage",
    "depend",
    "two",
    "define",
    "performant",
    "architectures",
    "three",
    "specify",
    "secure",
    "applications",
    "architectures",
    "cost",
    "optimized",
    "architectures",
    "five",
    "define",
    "operationally",
    "excellent",
    "architectures",
    "like",
    "seen",
    "selected",
    "one",
    "certification",
    "learnt",
    "detail",
    "certifications",
    "press",
    "learn",
    "download",
    "exam",
    "guide",
    "learn",
    "everything",
    "need",
    "know",
    "hi",
    "guys",
    "rahul",
    "simply",
    "learn",
    "today",
    "talking",
    "azure",
    "certifications",
    "go",
    "little",
    "bit",
    "detail",
    "let",
    "first",
    "talk",
    "exactly",
    "azure",
    "certification",
    "azure",
    "certifications",
    "actually",
    "examinations",
    "provided",
    "microsoft",
    "help",
    "validate",
    "well",
    "understand",
    "concepts",
    "azure",
    "well",
    "work",
    "basically",
    "badges",
    "honor",
    "show",
    "also",
    "play",
    "important",
    "role",
    "comes",
    "hiring",
    "promotion",
    "obviously",
    "likely",
    "selected",
    "certified",
    "professional",
    "certifications",
    "cover",
    "wide",
    "range",
    "domains",
    "certifications",
    "also",
    "work",
    "towards",
    "specified",
    "role",
    "example",
    "certifications",
    "help",
    "become",
    "solutions",
    "architect",
    "administrator",
    "azure",
    "developer",
    "need",
    "little",
    "convincing",
    "taking",
    "azure",
    "certification",
    "azir",
    "provides",
    "powerful",
    "data",
    "artificial",
    "intelligence",
    "services",
    "help",
    "create",
    "intelligent",
    "applications",
    "azure",
    "100",
    "services",
    "span",
    "wide",
    "range",
    "domains",
    "also",
    "help",
    "satisfy",
    "great",
    "number",
    "requirements",
    "80",
    "percent",
    "fortune",
    "500",
    "companies",
    "use",
    "microsoft",
    "azure",
    "cloud",
    "computing",
    "requirements",
    "mention",
    "organizations",
    "use",
    "microsoft",
    "products",
    "actually",
    "avail",
    "enterprise",
    "agreement",
    "gives",
    "discounts",
    "azure",
    "services",
    "finally",
    "azir",
    "provides",
    "services",
    "across",
    "42",
    "regions",
    "world",
    "cloud",
    "service",
    "provider",
    "market",
    "right",
    "let",
    "talk",
    "azure",
    "certifications",
    "highly",
    "likely",
    "heard",
    "microsoft",
    "popular",
    "certifications",
    "70532",
    "70533",
    "70535",
    "microsoft",
    "changing",
    "approach",
    "towards",
    "certifications",
    "microsoft",
    "new",
    "certifications",
    "aim",
    "make",
    "individual",
    "fall",
    "particular",
    "role",
    "example",
    "administrator",
    "associate",
    "developer",
    "associate",
    "solutions",
    "architect",
    "azure",
    "devops",
    "engineer",
    "expert",
    "microsoft",
    "introduced",
    "ignite",
    "conference",
    "took",
    "place",
    "september",
    "24th",
    "microsoft",
    "introduced",
    "new",
    "certifications",
    "fall",
    "az",
    "category",
    "become",
    "azure",
    "administrator",
    "associate",
    "need",
    "az",
    "100",
    "certification",
    "microsoft",
    "infrastructure",
    "deployment",
    "az101",
    "microsoft",
    "integration",
    "security",
    "become",
    "azure",
    "developer",
    "need",
    "az200",
    "microsoft",
    "azure",
    "developer",
    "core",
    "solution",
    "certification",
    "az201",
    "microsoft",
    "azure",
    "developer",
    "advanced",
    "solution",
    "certification",
    "finally",
    "become",
    "solutions",
    "architect",
    "need",
    "asa",
    "300",
    "microsoft",
    "architect",
    "technologies",
    "microsoft",
    "azure",
    "architect",
    "design",
    "introduced",
    "september",
    "24th",
    "ignite",
    "conference",
    "took",
    "place",
    "old",
    "certifications",
    "532",
    "533",
    "535",
    "discontinued",
    "31st",
    "december",
    "happens",
    "people",
    "actually",
    "done",
    "microsoft",
    "introduced",
    "az102",
    "202",
    "302",
    "transition",
    "certifications",
    "talk",
    "little",
    "bit",
    "let",
    "go",
    "new",
    "certifications",
    "detail",
    "let",
    "talk",
    "exam",
    "az",
    "100",
    "microsoft",
    "infrastructure",
    "deployment",
    "certification",
    "basically",
    "part",
    "one",
    "two",
    "comes",
    "becoming",
    "azure",
    "administrator",
    "costs",
    "165",
    "us",
    "dollars",
    "let",
    "look",
    "syllabus",
    "exam",
    "domains",
    "need",
    "prepare",
    "approximate",
    "weightages",
    "first",
    "need",
    "know",
    "manage",
    "azure",
    "subscriptions",
    "resources",
    "involves",
    "managing",
    "subscriptions",
    "analyzing",
    "resources",
    "used",
    "consumed",
    "managing",
    "resource",
    "groups",
    "secondly",
    "implementing",
    "managing",
    "storage",
    "need",
    "know",
    "create",
    "configure",
    "storage",
    "accounts",
    "import",
    "export",
    "data",
    "azure",
    "configures",
    "files",
    "implement",
    "backup",
    "deploying",
    "managing",
    "virtual",
    "machines",
    "need",
    "know",
    "create",
    "configure",
    "virtual",
    "machines",
    "windows",
    "linux",
    "need",
    "know",
    "automate",
    "deployment",
    "virtual",
    "machines",
    "need",
    "know",
    "manage",
    "azure",
    "virtual",
    "machines",
    "manage",
    "virtual",
    "machine",
    "backups",
    "need",
    "know",
    "configure",
    "manage",
    "virtual",
    "networks",
    "need",
    "able",
    "create",
    "connectivity",
    "virtual",
    "networks",
    "implement",
    "manage",
    "virtual",
    "networking",
    "configure",
    "name",
    "resolution",
    "groups",
    "finally",
    "need",
    "know",
    "manage",
    "identities",
    "need",
    "able",
    "manage",
    "active",
    "directories",
    "need",
    "know",
    "implement",
    "manage",
    "hybrid",
    "identities",
    "next",
    "step",
    "becoming",
    "azure",
    "administrator",
    "az101",
    "microsoft",
    "azure",
    "integration",
    "security",
    "certification",
    "az101",
    "microsoft",
    "azure",
    "integration",
    "security",
    "certification",
    "goes",
    "little",
    "detail",
    "comes",
    "becoming",
    "azure",
    "administrator",
    "certification",
    "cost",
    "165",
    "us",
    "dollars",
    "let",
    "look",
    "important",
    "topics",
    "need",
    "know",
    "examination",
    "let",
    "look",
    "portions",
    "need",
    "well",
    "versed",
    "perform",
    "well",
    "examination",
    "first",
    "evaluating",
    "performing",
    "server",
    "migrations",
    "azure",
    "implementing",
    "managing",
    "application",
    "services",
    "involves",
    "configuring",
    "serverless",
    "computing",
    "managing",
    "app",
    "service",
    "plans",
    "managing",
    "app",
    "services",
    "implementing",
    "advanced",
    "virtual",
    "networking",
    "involves",
    "implementing",
    "application",
    "load",
    "balancing",
    "implementing",
    "azure",
    "load",
    "balancer",
    "monitoring",
    "managing",
    "networking",
    "integrating",
    "network",
    "azure",
    "network",
    "finally",
    "securing",
    "identities",
    "need",
    "able",
    "implement",
    "authentication",
    "manage",
    "control",
    "system",
    "implementing",
    "active",
    "directories",
    "privilege",
    "identity",
    "management",
    "done",
    "az100",
    "101",
    "become",
    "microsoft",
    "certified",
    "administrator",
    "associate",
    "happens",
    "people",
    "already",
    "done",
    "implementing",
    "microsoft",
    "azure",
    "infrastructure",
    "solution",
    "certification",
    "70533",
    "people",
    "microsoft",
    "az102",
    "microsoft",
    "azure",
    "administrator",
    "certification",
    "transition",
    "examination",
    "costs",
    "99",
    "us",
    "dollars",
    "contains",
    "concepts",
    "az",
    "100",
    "z101",
    "exam",
    "valid",
    "people",
    "already",
    "completed",
    "70533",
    "certification",
    "completed",
    "70533",
    "suggest",
    "transition",
    "certification",
    "immediately",
    "discontinued",
    "microsoft",
    "31st",
    "march",
    "let",
    "look",
    "become",
    "microsoft",
    "certified",
    "developer",
    "associate",
    "need",
    "complete",
    "two",
    "certifications",
    "az200",
    "microsoft",
    "azure",
    "developer",
    "core",
    "solution",
    "certification",
    "az201",
    "microsoft",
    "azure",
    "developer",
    "advanced",
    "solution",
    "certification",
    "let",
    "look",
    "az200",
    "certification",
    "part",
    "one",
    "two",
    "comes",
    "becoming",
    "azure",
    "developer",
    "associate",
    "costs",
    "165",
    "us",
    "dollars",
    "examination",
    "beta",
    "phase",
    "means",
    "unlike",
    "normal",
    "examinations",
    "get",
    "results",
    "soon",
    "finish",
    "examination",
    "exam",
    "take",
    "least",
    "one",
    "two",
    "weeks",
    "get",
    "result",
    "questions",
    "still",
    "worked",
    "improved",
    "upon",
    "also",
    "limitation",
    "many",
    "people",
    "take",
    "exam",
    "moment",
    "let",
    "look",
    "portions",
    "need",
    "prepare",
    "examination",
    "need",
    "able",
    "select",
    "appropriate",
    "cloud",
    "technology",
    "solution",
    "based",
    "requirements",
    "may",
    "involve",
    "compute",
    "solution",
    "integration",
    "storage",
    "solution",
    "next",
    "need",
    "able",
    "develop",
    "cloud",
    "storage",
    "involves",
    "developing",
    "solutions",
    "involve",
    "storage",
    "tables",
    "file",
    "storage",
    "relational",
    "databases",
    "much",
    "need",
    "able",
    "create",
    "platform",
    "service",
    "solutions",
    "involves",
    "creating",
    "web",
    "applications",
    "mobile",
    "applications",
    "app",
    "services",
    "serverless",
    "functions",
    "much",
    "finally",
    "need",
    "able",
    "secure",
    "cloud",
    "solutions",
    "need",
    "implement",
    "authentication",
    "access",
    "control",
    "secure",
    "data",
    "solutions",
    "microsoft",
    "recommends",
    "least",
    "year",
    "experience",
    "working",
    "microsoft",
    "azure",
    "creating",
    "applications",
    "azure",
    "tools",
    "technologies",
    "time",
    "solid",
    "understanding",
    "faces",
    "software",
    "development",
    "let",
    "look",
    "next",
    "step",
    "becoming",
    "microsoft",
    "azure",
    "developer",
    "need",
    "az201",
    "microsoft",
    "azure",
    "developer",
    "advanced",
    "solution",
    "certification",
    "let",
    "look",
    "examination",
    "also",
    "beta",
    "phase",
    "move",
    "final",
    "version",
    "next",
    "months",
    "costs",
    "165",
    "us",
    "dollars",
    "let",
    "look",
    "portions",
    "need",
    "prepare",
    "examination",
    "need",
    "know",
    "develop",
    "azure",
    "cloud",
    "model",
    "need",
    "develop",
    "auto",
    "scaling",
    "develop",
    "tasks",
    "distribute",
    "transaction",
    "much",
    "need",
    "know",
    "implement",
    "cloud",
    "integration",
    "solutions",
    "like",
    "managing",
    "apis",
    "using",
    "api",
    "management",
    "configure",
    "message",
    "based",
    "integration",
    "architecture",
    "develop",
    "application",
    "message",
    "model",
    "much",
    "finally",
    "need",
    "know",
    "develop",
    "azure",
    "cognitive",
    "services",
    "bot",
    "iot",
    "solutions",
    "need",
    "able",
    "create",
    "integrate",
    "bots",
    "create",
    "implement",
    "iot",
    "solutions",
    "integrate",
    "azure",
    "cognitive",
    "services",
    "application",
    "done",
    "become",
    "microsoft",
    "certified",
    "azure",
    "developer",
    "associate",
    "let",
    "talk",
    "az202",
    "transition",
    "examination",
    "anyone",
    "done",
    "70532",
    "developing",
    "microsoft",
    "azure",
    "solution",
    "certification",
    "like",
    "transition",
    "certification",
    "costs",
    "99",
    "us",
    "dollars",
    "beta",
    "phase",
    "accessible",
    "people",
    "done",
    "70532",
    "available",
    "limited",
    "period",
    "time",
    "discontinued",
    "31st",
    "march",
    "concepts",
    "included",
    "az",
    "200",
    "201",
    "concepts",
    "like",
    "developing",
    "crowd",
    "storage",
    "creating",
    "platform",
    "service",
    "solutions",
    "securing",
    "cloud",
    "solutions",
    "developing",
    "azure",
    "cloud",
    "model",
    "implementing",
    "cloud",
    "integration",
    "solutions",
    "developing",
    "ai",
    "machine",
    "learning",
    "iot",
    "solutions",
    "done",
    "become",
    "microsoft",
    "certified",
    "developer",
    "associate",
    "let",
    "find",
    "become",
    "microsoft",
    "certified",
    "solutions",
    "architect",
    "expert",
    "need",
    "two",
    "certifications",
    "aza",
    "300",
    "azure",
    "301",
    "let",
    "look",
    "az300",
    "microsoft",
    "azure",
    "architect",
    "technology",
    "certification",
    "az",
    "300",
    "still",
    "beta",
    "phase",
    "costs",
    "165",
    "dollars",
    "part",
    "one",
    "two",
    "becoming",
    "microsoft",
    "certified",
    "solutions",
    "architect",
    "expert",
    "let",
    "talk",
    "topics",
    "need",
    "prepare",
    "examination",
    "need",
    "know",
    "deploy",
    "configure",
    "infrastructure",
    "involves",
    "analyzing",
    "resource",
    "utilization",
    "consumption",
    "creating",
    "configuring",
    "storage",
    "accounts",
    "creating",
    "configuring",
    "virtual",
    "machines",
    "windows",
    "linux",
    "automating",
    "deployment",
    "virtual",
    "machines",
    "much",
    "need",
    "know",
    "implement",
    "workloads",
    "security",
    "like",
    "migrating",
    "servers",
    "assure",
    "configure",
    "serverless",
    "computing",
    "implementing",
    "application",
    "load",
    "balancing",
    "managing",
    "access",
    "control",
    "implementing",
    "authentication",
    "need",
    "architect",
    "cloud",
    "technology",
    "solutions",
    "need",
    "able",
    "select",
    "appropriate",
    "compute",
    "solutions",
    "integrate",
    "solutions",
    "storage",
    "solutions",
    "need",
    "able",
    "create",
    "deploy",
    "applications",
    "like",
    "example",
    "creating",
    "web",
    "applications",
    "using",
    "pass",
    "create",
    "application",
    "service",
    "runs",
    "service",
    "fabric",
    "design",
    "develop",
    "applications",
    "run",
    "containers",
    "need",
    "implement",
    "authentications",
    "secure",
    "data",
    "finally",
    "need",
    "develop",
    "cloud",
    "means",
    "need",
    "know",
    "develop",
    "tasks",
    "configure",
    "integration",
    "develop",
    "auto",
    "scaling",
    "implement",
    "distributed",
    "transactions",
    "certification",
    "require",
    "expert",
    "level",
    "skills",
    "least",
    "administration",
    "development",
    "devops",
    "also",
    "need",
    "experience",
    "various",
    "steps",
    "operations",
    "like",
    "networking",
    "virtualization",
    "security",
    "azure",
    "solutions",
    "architect",
    "play",
    "important",
    "role",
    "advising",
    "stakeholders",
    "convert",
    "requirements",
    "scalable",
    "secure",
    "reliable",
    "solutions",
    "next",
    "step",
    "az301",
    "microsoft",
    "azure",
    "architect",
    "design",
    "certification",
    "let",
    "look",
    "like",
    "certifications",
    "costs",
    "165",
    "dollars",
    "still",
    "beta",
    "phase",
    "final",
    "step",
    "becoming",
    "azure",
    "solutions",
    "architect",
    "expert",
    "let",
    "look",
    "topics",
    "need",
    "prepare",
    "certification",
    "firstly",
    "need",
    "know",
    "determine",
    "workload",
    "requirements",
    "need",
    "know",
    "gather",
    "information",
    "requirements",
    "optimize",
    "consumption",
    "strategy",
    "design",
    "auditing",
    "monitoring",
    "strategy",
    "need",
    "design",
    "identity",
    "security",
    "like",
    "design",
    "identity",
    "management",
    "design",
    "authentication",
    "authorization",
    "monitoring",
    "strategy",
    "identity",
    "security",
    "need",
    "know",
    "design",
    "data",
    "platform",
    "solution",
    "need",
    "design",
    "data",
    "management",
    "strategy",
    "data",
    "protection",
    "strategy",
    "document",
    "data",
    "flows",
    "need",
    "design",
    "business",
    "continuity",
    "strategy",
    "example",
    "design",
    "site",
    "recovery",
    "strategy",
    "ensure",
    "high",
    "availability",
    "design",
    "disaster",
    "recovery",
    "strategy",
    "design",
    "data",
    "archiving",
    "strategy",
    "need",
    "design",
    "deployment",
    "migration",
    "integration",
    "need",
    "design",
    "deployments",
    "design",
    "migrations",
    "design",
    "api",
    "integration",
    "strategy",
    "finally",
    "need",
    "know",
    "design",
    "storage",
    "strategy",
    "compute",
    "strategy",
    "networking",
    "strategy",
    "done",
    "become",
    "microsoft",
    "certified",
    "solutions",
    "architect",
    "expert",
    "people",
    "already",
    "done",
    "70535",
    "architecting",
    "microsoft",
    "solution",
    "certification",
    "asic",
    "302",
    "comes",
    "az302",
    "transition",
    "certification",
    "costs",
    "99",
    "us",
    "dollars",
    "acts",
    "replacement",
    "anyone",
    "done",
    "70535",
    "certification",
    "beta",
    "phase",
    "last",
    "till",
    "march",
    "31st",
    "finish",
    "certification",
    "get",
    "become",
    "azure",
    "solutions",
    "architect",
    "expert",
    "consists",
    "topics",
    "included",
    "az",
    "300",
    "301",
    "concepts",
    "like",
    "determining",
    "workload",
    "requirements",
    "designing",
    "identity",
    "security",
    "designing",
    "business",
    "continuity",
    "strategy",
    "implementing",
    "workloads",
    "security",
    "implementing",
    "authentication",
    "securing",
    "data",
    "developing",
    "cloud",
    "mentioned",
    "video",
    "important",
    "azure",
    "certifications",
    "older",
    "certifications",
    "covered",
    "focusing",
    "important",
    "role",
    "based",
    "examinations",
    "introduced",
    "recently",
    "cloud",
    "tech",
    "services",
    "market",
    "expected",
    "grow",
    "percent",
    "span",
    "2018",
    "19",
    "means",
    "growth",
    "175",
    "billion",
    "dollars",
    "whopping",
    "206",
    "billion",
    "dollars",
    "2019",
    "2020",
    "expected",
    "90",
    "organizations",
    "world",
    "would",
    "using",
    "cloud",
    "services",
    "mention",
    "several",
    "organizations",
    "around",
    "world",
    "suggest",
    "using",
    "cloud",
    "computing",
    "services",
    "enabled",
    "employees",
    "experiment",
    "lot",
    "technologies",
    "like",
    "machine",
    "learning",
    "artificial",
    "intelligence",
    "going",
    "today",
    "firstly",
    "talking",
    "cloud",
    "computing",
    "engineer",
    "steps",
    "need",
    "take",
    "become",
    "cloud",
    "computing",
    "engineer",
    "cloud",
    "computing",
    "engineers",
    "salaries",
    "first",
    "cloud",
    "computing",
    "engineer",
    "cloud",
    "computing",
    "engineer",
    "id",
    "professional",
    "takes",
    "care",
    "technical",
    "aspects",
    "cloud",
    "computing",
    "design",
    "planning",
    "maintenance",
    "support",
    "cloud",
    "computing",
    "engineer",
    "take",
    "number",
    "different",
    "career",
    "paths",
    "could",
    "cloud",
    "developer",
    "security",
    "engineer",
    "full",
    "stack",
    "developer",
    "sysops",
    "administrator",
    "solutions",
    "architect",
    "cloud",
    "architect",
    "much",
    "let",
    "look",
    "major",
    "cloud",
    "computing",
    "roles",
    "first",
    "solutions",
    "architect",
    "individuals",
    "responsible",
    "analyzing",
    "technical",
    "environment",
    "going",
    "produce",
    "solutions",
    "requirements",
    "specifications",
    "secondly",
    "required",
    "select",
    "appropriate",
    "technology",
    "satisfies",
    "set",
    "requirements",
    "need",
    "estimate",
    "manage",
    "usage",
    "operational",
    "costs",
    "solutions",
    "provide",
    "need",
    "support",
    "project",
    "management",
    "well",
    "solution",
    "development",
    "next",
    "sysops",
    "administrators",
    "involved",
    "deploying",
    "managing",
    "operating",
    "highly",
    "scalable",
    "fault",
    "tolerant",
    "systems",
    "need",
    "select",
    "appropriate",
    "service",
    "based",
    "compute",
    "security",
    "data",
    "requirements",
    "need",
    "estimate",
    "manage",
    "usage",
    "operational",
    "costs",
    "need",
    "able",
    "migrate",
    "workloads",
    "onto",
    "appropriate",
    "cloud",
    "computing",
    "platform",
    "among",
    "roles",
    "certain",
    "requirements",
    "remaining",
    "constant",
    "let",
    "look",
    "steps",
    "need",
    "take",
    "become",
    "cloud",
    "computing",
    "engineer",
    "first",
    "step",
    "gain",
    "proficiency",
    "cloud",
    "computing",
    "platform",
    "first",
    "step",
    "become",
    "proficient",
    "least",
    "one",
    "three",
    "major",
    "cloud",
    "computing",
    "platforms",
    "beat",
    "aws",
    "azure",
    "google",
    "cloud",
    "platform",
    "huge",
    "number",
    "resources",
    "find",
    "internet",
    "could",
    "youtube",
    "videos",
    "articles",
    "virtual",
    "physical",
    "classrooms",
    "much",
    "done",
    "learning",
    "get",
    "certified",
    "microsoft",
    "azure",
    "aws",
    "google",
    "cloud",
    "platform",
    "aws",
    "number",
    "different",
    "certifications",
    "divided",
    "three",
    "categories",
    "foundational",
    "basics",
    "associate",
    "level",
    "certifications",
    "professional",
    "level",
    "certifications",
    "specialty",
    "certifications",
    "similarly",
    "microsoft",
    "azure",
    "certifications",
    "enable",
    "become",
    "azure",
    "developer",
    "associate",
    "azure",
    "administrator",
    "associate",
    "azure",
    "architect",
    "professional",
    "devops",
    "engineer",
    "cloud",
    "computing",
    "platforms",
    "free",
    "tier",
    "take",
    "advantage",
    "provide",
    "number",
    "free",
    "services",
    "period",
    "time",
    "free",
    "forever",
    "use",
    "platforms",
    "advantage",
    "much",
    "practice",
    "want",
    "learn",
    "cloud",
    "computing",
    "also",
    "check",
    "simplylearn",
    "youtube",
    "channel",
    "go",
    "playlist",
    "section",
    "right",
    "find",
    "comprehensive",
    "videos",
    "number",
    "different",
    "cloud",
    "computing",
    "platforms",
    "aws",
    "microsoft",
    "azure",
    "aws",
    "tutorial",
    "videos",
    "talk",
    "exactly",
    "aws",
    "become",
    "aws",
    "solutions",
    "architect",
    "amazon",
    "ec2",
    "s3",
    "services",
    "much",
    "also",
    "detailed",
    "tutorials",
    "azure",
    "talks",
    "exactly",
    "azure",
    "certifications",
    "provided",
    "azure",
    "services",
    "like",
    "machine",
    "learning",
    "active",
    "directory",
    "much",
    "step",
    "two",
    "experienced",
    "least",
    "one",
    "programming",
    "language",
    "unlike",
    "general",
    "purpose",
    "programming",
    "languages",
    "like",
    "c",
    "c",
    "plus",
    "plus",
    "c",
    "sharp",
    "cloud",
    "computing",
    "requires",
    "ones",
    "lot",
    "data",
    "oriented",
    "major",
    "programming",
    "languages",
    "used",
    "cloud",
    "computing",
    "go",
    "python",
    "clojure",
    "java",
    "said",
    "wealth",
    "resources",
    "learn",
    "free",
    "websites",
    "practice",
    "code",
    "like",
    "quick",
    "code",
    "code",
    "academy",
    "several",
    "others",
    "also",
    "resources",
    "like",
    "youtube",
    "videos",
    "well",
    "option",
    "online",
    "offline",
    "classes",
    "step",
    "3",
    "specialization",
    "also",
    "need",
    "well",
    "versed",
    "number",
    "key",
    "concepts",
    "storage",
    "networking",
    "storage",
    "need",
    "know",
    "data",
    "stored",
    "accessed",
    "need",
    "know",
    "accessed",
    "multiple",
    "different",
    "resources",
    "also",
    "need",
    "experience",
    "services",
    "provided",
    "azure",
    "aws",
    "like",
    "amazon",
    "s3",
    "aws",
    "appropriately",
    "named",
    "azure",
    "storage",
    "microsoft",
    "azure",
    "networking",
    "need",
    "strong",
    "understanding",
    "networking",
    "fundamentals",
    "well",
    "virtual",
    "networks",
    "next",
    "virtualization",
    "operating",
    "systems",
    "virtualization",
    "need",
    "know",
    "virtual",
    "networks",
    "combination",
    "different",
    "virtual",
    "machines",
    "used",
    "emulate",
    "different",
    "components",
    "particular",
    "system",
    "operating",
    "systems",
    "need",
    "strong",
    "understanding",
    "operating",
    "systems",
    "like",
    "windows",
    "linux",
    "next",
    "security",
    "disaster",
    "recovery",
    "need",
    "understand",
    "data",
    "application",
    "well",
    "infrastructure",
    "protected",
    "malicious",
    "attacks",
    "disaster",
    "recovery",
    "need",
    "prepared",
    "unexpected",
    "circumstance",
    "making",
    "sure",
    "systems",
    "always",
    "safe",
    "regularly",
    "backed",
    "prevent",
    "sort",
    "loss",
    "data",
    "web",
    "services",
    "devops",
    "need",
    "strong",
    "understanding",
    "apis",
    "application",
    "program",
    "interfaces",
    "web",
    "services",
    "amount",
    "experience",
    "web",
    "design",
    "also",
    "great",
    "help",
    "devops",
    "need",
    "strong",
    "understanding",
    "cloud",
    "computing",
    "able",
    "provide",
    "centralized",
    "platform",
    "perform",
    "testing",
    "deployment",
    "production",
    "devops",
    "automation",
    "moreover",
    "devops",
    "understand",
    "synergy",
    "operations",
    "well",
    "development",
    "teams",
    "success",
    "project",
    "finally",
    "cloud",
    "computing",
    "engineer",
    "let",
    "look",
    "salaries",
    "cloud",
    "computing",
    "engineers",
    "united",
    "states",
    "cloud",
    "computing",
    "engineers",
    "earn",
    "around",
    "116",
    "000",
    "per",
    "annum",
    "india",
    "cloud",
    "computing",
    "engineer",
    "paid",
    "approximately",
    "6",
    "lakh",
    "66",
    "000",
    "rupees",
    "per",
    "annum",
    "simply",
    "learn",
    "help",
    "become",
    "cloud",
    "computing",
    "engineer",
    "let",
    "head",
    "simply",
    "learn",
    "website",
    "cloud",
    "architect",
    "masters",
    "program",
    "deals",
    "number",
    "different",
    "courses",
    "help",
    "get",
    "started",
    "journey",
    "becoming",
    "cloud",
    "computing",
    "engineer",
    "master",
    "program",
    "covers",
    "number",
    "different",
    "courses",
    "like",
    "aws",
    "technical",
    "essentials",
    "microsoft",
    "azure",
    "fundamentals",
    "aws",
    "developer",
    "associate",
    "much",
    "provides",
    "40",
    "plus",
    "skills",
    "services",
    "provides",
    "master",
    "certification",
    "16",
    "plus",
    "real",
    "life",
    "projects",
    "helps",
    "get",
    "salary",
    "ranges",
    "15",
    "25",
    "lakh",
    "rupees",
    "per",
    "annum",
    "also",
    "covers",
    "variety",
    "tools",
    "like",
    "amazon",
    "ec2",
    "azure",
    "data",
    "factory",
    "virtual",
    "machines",
    "much",
    "head",
    "get",
    "started",
    "journey",
    "getting",
    "certified",
    "getting",
    "ahead",
    "walk",
    "aws",
    "interview",
    "questions",
    "find",
    "important",
    "hope",
    "would",
    "use",
    "material",
    "interview",
    "preparation",
    "able",
    "crack",
    "cloud",
    "interview",
    "step",
    "dream",
    "cloud",
    "job",
    "way",
    "cloud",
    "technical",
    "architect",
    "trainer",
    "interview",
    "panelist",
    "cloud",
    "network",
    "devops",
    "progress",
    "watching",
    "going",
    "see",
    "questions",
    "practical",
    "scenario",
    "based",
    "questions",
    "tests",
    "depth",
    "knowledge",
    "person",
    "particular",
    "aws",
    "product",
    "particular",
    "aws",
    "architecture",
    "wait",
    "let",
    "move",
    "right",
    "interview",
    "would",
    "find",
    "question",
    "might",
    "ask",
    "define",
    "explain",
    "three",
    "basic",
    "types",
    "cloud",
    "services",
    "aws",
    "products",
    "built",
    "based",
    "see",
    "straightforward",
    "question",
    "explain",
    "three",
    "basic",
    "types",
    "cloud",
    "service",
    "talk",
    "basic",
    "type",
    "cloud",
    "service",
    "compute",
    "obviously",
    "basic",
    "service",
    "storage",
    "obviously",
    "need",
    "store",
    "data",
    "somewhere",
    "networking",
    "actually",
    "connects",
    "couple",
    "services",
    "application",
    "basic",
    "include",
    "monitoring",
    "basic",
    "include",
    "analytics",
    "considered",
    "optional",
    "considered",
    "advanced",
    "services",
    "could",
    "choose",
    "service",
    "product",
    "monitoring",
    "analytics",
    "considered",
    "basic",
    "talk",
    "basics",
    "compute",
    "storage",
    "networking",
    "second",
    "part",
    "questions",
    "explain",
    "aws",
    "products",
    "built",
    "based",
    "course",
    "compute",
    "ec2",
    "major",
    "one",
    "major",
    "share",
    "compute",
    "resource",
    "platform",
    "service",
    "elastic",
    "bean",
    "stock",
    "function",
    "service",
    "lambda",
    "auto",
    "scaling",
    "light",
    "cell",
    "also",
    "part",
    "compute",
    "services",
    "compute",
    "domain",
    "really",
    "helps",
    "us",
    "run",
    "application",
    "compute",
    "service",
    "helps",
    "us",
    "managing",
    "scaling",
    "deployment",
    "application",
    "lambda",
    "compute",
    "server",
    "compute",
    "service",
    "also",
    "helps",
    "running",
    "event",
    "initiated",
    "stateless",
    "applications",
    "next",
    "one",
    "storage",
    "lot",
    "emphasis",
    "storage",
    "days",
    "one",
    "thing",
    "grows",
    "network",
    "daily",
    "basis",
    "storage",
    "every",
    "new",
    "day",
    "new",
    "data",
    "store",
    "process",
    "manage",
    "storage",
    "basic",
    "important",
    "cloud",
    "service",
    "products",
    "built",
    "based",
    "storage",
    "services",
    "s3",
    "object",
    "storage",
    "glacier",
    "archiving",
    "ebs",
    "elastic",
    "block",
    "storage",
    "drive",
    "attachment",
    "ec2",
    "instances",
    "efs",
    "file",
    "share",
    "ec2",
    "instances",
    "storage",
    "domain",
    "helps",
    "following",
    "aspects",
    "holds",
    "information",
    "application",
    "uses",
    "application",
    "data",
    "also",
    "archive",
    "old",
    "data",
    "using",
    "storage",
    "would",
    "glacier",
    "object",
    "files",
    "requirement",
    "block",
    "storage",
    "met",
    "elastic",
    "block",
    "store",
    "s3",
    "object",
    "storage",
    "talking",
    "uh",
    "networks",
    "important",
    "answer",
    "question",
    "name",
    "services",
    "name",
    "product",
    "also",
    "good",
    "could",
    "go",
    "depth",
    "explain",
    "used",
    "right",
    "actually",
    "proves",
    "person",
    "knowledgeable",
    "enough",
    "particular",
    "service",
    "product",
    "talking",
    "networking",
    "domain",
    "vpc",
    "networking",
    "ca",
    "imagine",
    "networking",
    "without",
    "vpc",
    "cloud",
    "environment",
    "especially",
    "aws",
    "cloud",
    "environment",
    "route",
    "53",
    "domain",
    "resolution",
    "dns",
    "cloudfront",
    "edge",
    "caching",
    "service",
    "helps",
    "customers",
    "get",
    "customers",
    "read",
    "application",
    "low",
    "latency",
    "networking",
    "domain",
    "helps",
    "following",
    "use",
    "cases",
    "controls",
    "manages",
    "connectivity",
    "aws",
    "services",
    "within",
    "account",
    "also",
    "pick",
    "ip",
    "address",
    "range",
    "network",
    "engineer",
    "somebody",
    "works",
    "networks",
    "planning",
    "work",
    "network",
    "soon",
    "realize",
    "importance",
    "choosing",
    "ip",
    "address",
    "easy",
    "remembering",
    "option",
    "ip",
    "address",
    "cloud",
    "range",
    "ip",
    "address",
    "cloud",
    "really",
    "helps",
    "really",
    "really",
    "helps",
    "cloud",
    "networking",
    "question",
    "gets",
    "asked",
    "would",
    "difference",
    "availability",
    "zone",
    "region",
    "actually",
    "question",
    "generally",
    "gets",
    "asked",
    "test",
    "well",
    "actually",
    "differentiate",
    "also",
    "correlate",
    "availability",
    "zone",
    "region",
    "relationship",
    "right",
    "region",
    "separate",
    "geographic",
    "area",
    "like",
    "us2s1",
    "mean",
    "represents",
    "uh",
    "north",
    "california",
    "ap",
    "south",
    "represents",
    "mumbai",
    "regions",
    "separate",
    "geographic",
    "area",
    "contrary",
    "availability",
    "zone",
    "resides",
    "inside",
    "region",
    "stop",
    "go",
    "explain",
    "availability",
    "zones",
    "availability",
    "zones",
    "isolated",
    "services",
    "replicate",
    "within",
    "availability",
    "zone",
    "availability",
    "zone",
    "replication",
    "within",
    "regions",
    "generally",
    "replication",
    "question",
    "could",
    "asked",
    "auto",
    "scaling",
    "achieve",
    "auto",
    "scaling",
    "short",
    "auto",
    "scaling",
    "helps",
    "us",
    "automatically",
    "provision",
    "launch",
    "new",
    "instances",
    "whenever",
    "demand",
    "helps",
    "us",
    "meeting",
    "increasing",
    "demand",
    "also",
    "helps",
    "reducing",
    "resource",
    "usage",
    "low",
    "demand",
    "auto",
    "scaling",
    "also",
    "allows",
    "us",
    "decrease",
    "resources",
    "resource",
    "capacity",
    "per",
    "need",
    "particular",
    "r",
    "helps",
    "business",
    "worrying",
    "putting",
    "effort",
    "managing",
    "continuously",
    "monitoring",
    "server",
    "see",
    "needed",
    "resource",
    "auto",
    "scaling",
    "going",
    "handle",
    "us",
    "business",
    "need",
    "worry",
    "auto",
    "scaling",
    "one",
    "big",
    "reason",
    "people",
    "would",
    "want",
    "go",
    "pick",
    "cloud",
    "service",
    "especially",
    "awf",
    "service",
    "ability",
    "increase",
    "shrink",
    "based",
    "need",
    "arc",
    "powerful",
    "auto",
    "scaling",
    "question",
    "could",
    "get",
    "asked",
    "due",
    "targeting",
    "cloud",
    "front",
    "know",
    "cloudfront",
    "caching",
    "caches",
    "content",
    "globally",
    "amazon",
    "caching",
    "servers",
    "global",
    "wide",
    "whole",
    "point",
    "provide",
    "users",
    "worldwide",
    "access",
    "data",
    "nearest",
    "server",
    "possible",
    "whole",
    "point",
    "using",
    "going",
    "cloud",
    "front",
    "mean",
    "geo",
    "targeting",
    "jio",
    "showing",
    "customer",
    "specific",
    "content",
    "based",
    "language",
    "customize",
    "content",
    "based",
    "popular",
    "place",
    "actually",
    "customize",
    "content",
    "url",
    "could",
    "actually",
    "change",
    "content",
    "little",
    "bit",
    "whole",
    "content",
    "otherwise",
    "would",
    "dynamic",
    "change",
    "content",
    "little",
    "bit",
    "specific",
    "file",
    "picture",
    "particular",
    "link",
    "website",
    "show",
    "customized",
    "content",
    "users",
    "different",
    "parts",
    "globe",
    "happen",
    "cloudfront",
    "detect",
    "country",
    "viewers",
    "located",
    "forward",
    "country",
    "code",
    "origin",
    "server",
    "origin",
    "server",
    "gets",
    "specialized",
    "specific",
    "country",
    "code",
    "change",
    "content",
    "send",
    "caching",
    "server",
    "get",
    "cached",
    "forever",
    "user",
    "gets",
    "view",
    "content",
    "personalized",
    "country",
    "question",
    "could",
    "get",
    "asked",
    "steps",
    "involved",
    "using",
    "cloud",
    "formation",
    "creating",
    "cloud",
    "formation",
    "backing",
    "environment",
    "within",
    "cloud",
    "formation",
    "template",
    "know",
    "template",
    "simply",
    "run",
    "provisions",
    "environment",
    "lot",
    "going",
    "first",
    "step",
    "moving",
    "towards",
    "infrastructure",
    "code",
    "create",
    "cloud",
    "formation",
    "template",
    "supports",
    "json",
    "yaml",
    "file",
    "format",
    "first",
    "create",
    "cloud",
    "formation",
    "template",
    "save",
    "code",
    "x3",
    "bucket",
    "history",
    "bucket",
    "serves",
    "repository",
    "code",
    "cloud",
    "formation",
    "call",
    "file",
    "s3",
    "bucket",
    "create",
    "stack",
    "cloud",
    "formation",
    "uses",
    "file",
    "reads",
    "file",
    "understands",
    "services",
    "called",
    "understands",
    "order",
    "understands",
    "connected",
    "cloud",
    "formation",
    "actually",
    "intelligent",
    "service",
    "understands",
    "relation",
    "based",
    "code",
    "would",
    "understand",
    "relationship",
    "different",
    "services",
    "would",
    "set",
    "order",
    "would",
    "provision",
    "services",
    "one",
    "let",
    "say",
    "service",
    "dependency",
    "dependent",
    "service",
    "service",
    "service",
    "let",
    "say",
    "service",
    "b",
    "service",
    "b",
    "dependent",
    "service",
    "let",
    "say",
    "cloud",
    "formation",
    "intelligent",
    "service",
    "would",
    "provision",
    "resource",
    "first",
    "would",
    "provision",
    "resource",
    "b",
    "happens",
    "inverse",
    "order",
    "inverse",
    "order",
    "resource",
    "b",
    "first",
    "gets",
    "provision",
    "dependency",
    "chances",
    "cloud",
    "formation",
    "default",
    "behavior",
    "something",
    "provisioned",
    "properly",
    "something",
    "healthy",
    "could",
    "roll",
    "back",
    "chances",
    "environment",
    "provisioning",
    "roll",
    "back",
    "avoid",
    "cloud",
    "formation",
    "first",
    "provisions",
    "services",
    "dependent",
    "depended",
    "another",
    "service",
    "provisions",
    "service",
    "first",
    "provisions",
    "services",
    "dependencies",
    "hired",
    "devops",
    "know",
    "interview",
    "wanted",
    "test",
    "skill",
    "systems",
    "side",
    "definitely",
    "would",
    "question",
    "list",
    "upgrade",
    "downgrade",
    "system",
    "near",
    "zero",
    "downtime",
    "everybody",
    "moving",
    "towards",
    "zero",
    "downtime",
    "near",
    "zero",
    "downtime",
    "want",
    "application",
    "highly",
    "available",
    "question",
    "would",
    "actually",
    "upgrade",
    "downgrade",
    "system",
    "near",
    "zero",
    "downtime",
    "know",
    "upgrade",
    "ec2",
    "instance",
    "better",
    "ec2",
    "instance",
    "changing",
    "instance",
    "type",
    "stopping",
    "starting",
    "stopping",
    "starting",
    "going",
    "cause",
    "downtime",
    "right",
    "answering",
    "thinking",
    "terms",
    "wrong",
    "answer",
    "specifically",
    "interviewer",
    "wants",
    "know",
    "upgrade",
    "system",
    "zero",
    "downtime",
    "upgrading",
    "system",
    "zero",
    "downtime",
    "includes",
    "launching",
    "another",
    "system",
    "parallelly",
    "bigger",
    "ec2",
    "instance",
    "type",
    "bigger",
    "capacity",
    "install",
    "needed",
    "going",
    "use",
    "ami",
    "old",
    "machine",
    "well",
    "good",
    "go",
    "installing",
    "updates",
    "installing",
    "application",
    "ami",
    "launched",
    "bigger",
    "instance",
    "locally",
    "test",
    "application",
    "see",
    "working",
    "put",
    "production",
    "yet",
    "test",
    "application",
    "see",
    "working",
    "application",
    "works",
    "actually",
    "swap",
    "server",
    "behind",
    "behind",
    "route",
    "53",
    "let",
    "say",
    "could",
    "go",
    "dot",
    "53",
    "update",
    "information",
    "new",
    "ip",
    "address",
    "new",
    "ip",
    "address",
    "new",
    "server",
    "going",
    "send",
    "traffic",
    "new",
    "server",
    "cut",
    "handled",
    "using",
    "static",
    "ip",
    "actually",
    "remove",
    "static",
    "ip",
    "old",
    "machine",
    "assign",
    "new",
    "machine",
    "one",
    "way",
    "using",
    "elastic",
    "nic",
    "card",
    "actually",
    "remove",
    "new",
    "card",
    "old",
    "machine",
    "attach",
    "new",
    "car",
    "new",
    "machine",
    "way",
    "would",
    "get",
    "near",
    "zero",
    "downtime",
    "hired",
    "architect",
    "level",
    "worrying",
    "cost",
    "well",
    "along",
    "technology",
    "question",
    "would",
    "test",
    "well",
    "manage",
    "cost",
    "tools",
    "techniques",
    "use",
    "aws",
    "identify",
    "correct",
    "identify",
    "know",
    "paying",
    "correct",
    "amount",
    "resources",
    "using",
    "get",
    "visibility",
    "aws",
    "resources",
    "running",
    "one",
    "way",
    "check",
    "billing",
    "place",
    "check",
    "top",
    "services",
    "utilized",
    "could",
    "free",
    "could",
    "paid",
    "service",
    "well",
    "top",
    "services",
    "utilized",
    "actually",
    "dashboard",
    "cost",
    "management",
    "console",
    "table",
    "shows",
    "top",
    "five",
    "used",
    "services",
    "looking",
    "get",
    "right",
    "using",
    "lot",
    "storage",
    "using",
    "lot",
    "ec2",
    "storage",
    "high",
    "go",
    "try",
    "justify",
    "find",
    "storing",
    "things",
    "storing",
    "clean",
    "compute",
    "capacity",
    "high",
    "data",
    "transfer",
    "high",
    "start",
    "thinking",
    "levels",
    "able",
    "dig",
    "clean",
    "unnecessary",
    "able",
    "save",
    "bill",
    "cost",
    "explorer",
    "services",
    "available",
    "help",
    "view",
    "usage",
    "pattern",
    "view",
    "spending",
    "past",
    "13",
    "months",
    "also",
    "forecast",
    "next",
    "three",
    "months",
    "much",
    "using",
    "pattern",
    "like",
    "actually",
    "help",
    "give",
    "visibility",
    "much",
    "spent",
    "much",
    "spending",
    "trend",
    "continues",
    "budgets",
    "another",
    "excellent",
    "way",
    "control",
    "cost",
    "actually",
    "set",
    "budget",
    "alright",
    "much",
    "willing",
    "spend",
    "application",
    "team",
    "month",
    "particular",
    "resource",
    "actually",
    "put",
    "budget",
    "mark",
    "anytime",
    "exceeds",
    "time",
    "nearing",
    "would",
    "get",
    "alarm",
    "saying",
    "well",
    "reach",
    "allocated",
    "budget",
    "amount",
    "stuff",
    "like",
    "way",
    "go",
    "back",
    "know",
    "know",
    "much",
    "bill",
    "going",
    "month",
    "take",
    "steps",
    "control",
    "bill",
    "amount",
    "particular",
    "month",
    "aws",
    "budget",
    "another",
    "good",
    "tool",
    "could",
    "use",
    "cost",
    "allocation",
    "tags",
    "helps",
    "identifying",
    "team",
    "resource",
    "spent",
    "particular",
    "month",
    "instead",
    "looking",
    "bill",
    "one",
    "list",
    "specifications",
    "looking",
    "expenditure",
    "list",
    "actually",
    "break",
    "tag",
    "expenditure",
    "teams",
    "cost",
    "allocation",
    "tax",
    "dev",
    "team",
    "spent",
    "much",
    "production",
    "team",
    "spent",
    "much",
    "training",
    "team",
    "spent",
    "dev",
    "production",
    "team",
    "able",
    "know",
    "think",
    "levels",
    "cost",
    "allocation",
    "tax",
    "cost",
    "allocation",
    "tags",
    "nothing",
    "tags",
    "would",
    "put",
    "create",
    "resource",
    "production",
    "services",
    "would",
    "put",
    "production",
    "tag",
    "would",
    "create",
    "production",
    "tag",
    "would",
    "associate",
    "resources",
    "later",
    "point",
    "actually",
    "pull",
    "bill",
    "going",
    "show",
    "detailed",
    "list",
    "owner",
    "group",
    "much",
    "used",
    "last",
    "month",
    "move",
    "forward",
    "investigation",
    "encourage",
    "stop",
    "users",
    "using",
    "services",
    "cost",
    "allocation",
    "tax",
    "famous",
    "question",
    "tools",
    "way",
    "accessing",
    "aws",
    "resource",
    "console",
    "console",
    "gui",
    "right",
    "words",
    "gui",
    "would",
    "use",
    "aws",
    "resource",
    "familiar",
    "tools",
    "technologies",
    "tools",
    "available",
    "leverage",
    "access",
    "aws",
    "resource",
    "course",
    "putty",
    "configure",
    "puti",
    "access",
    "aws",
    "resources",
    "like",
    "log",
    "ec2",
    "instance",
    "ec2",
    "instance",
    "always",
    "logged",
    "console",
    "could",
    "use",
    "putty",
    "log",
    "ec2",
    "instance",
    "like",
    "jump",
    "box",
    "like",
    "proxy",
    "machine",
    "like",
    "gateway",
    "machine",
    "actually",
    "access",
    "rest",
    "resources",
    "alternative",
    "console",
    "course",
    "aws",
    "cli",
    "linux",
    "machines",
    "windows",
    "machines",
    "install",
    "point",
    "two",
    "three",
    "four",
    "install",
    "aws",
    "cli",
    "linux",
    "windows",
    "also",
    "mac",
    "install",
    "local",
    "machine",
    "access",
    "run",
    "aws",
    "commands",
    "access",
    "provision",
    "monitor",
    "aws",
    "resources",
    "ones",
    "access",
    "aws",
    "resource",
    "programmatically",
    "using",
    "aws",
    "sdk",
    "eclipse",
    "bunch",
    "options",
    "use",
    "aws",
    "resource",
    "console",
    "interviewed",
    "company",
    "company",
    "focuses",
    "security",
    "want",
    "use",
    "aws",
    "native",
    "services",
    "security",
    "would",
    "come",
    "across",
    "question",
    "services",
    "used",
    "create",
    "centralized",
    "logging",
    "solution",
    "basic",
    "services",
    "could",
    "use",
    "cloud",
    "watch",
    "logs",
    "store",
    "s3",
    "use",
    "elasticsearch",
    "visualize",
    "use",
    "kinesis",
    "move",
    "data",
    "s3",
    "elasticsearch",
    "right",
    "log",
    "management",
    "actually",
    "helps",
    "organizations",
    "track",
    "relationship",
    "operational",
    "security",
    "changes",
    "events",
    "got",
    "triggered",
    "based",
    "logs",
    "instead",
    "logging",
    "instance",
    "instead",
    "logging",
    "environment",
    "checking",
    "resources",
    "physically",
    "come",
    "fair",
    "conclusion",
    "looking",
    "logs",
    "every",
    "time",
    "change",
    "system",
    "would",
    "scream",
    "gets",
    "tracked",
    "cloud",
    "watch",
    "cloud",
    "watch",
    "pushes",
    "s3",
    "kinesis",
    "pushes",
    "data",
    "s3",
    "elasticsearch",
    "filter",
    "would",
    "get",
    "fair",
    "understanding",
    "going",
    "environment",
    "past",
    "one",
    "whatever",
    "time",
    "window",
    "wanted",
    "look",
    "helps",
    "getting",
    "good",
    "understanding",
    "infrastructure",
    "whole",
    "logs",
    "getting",
    "saved",
    "one",
    "place",
    "infrastructure",
    "logs",
    "getting",
    "saved",
    "one",
    "place",
    "easy",
    "look",
    "infrastructure",
    "perspective",
    "know",
    "services",
    "used",
    "services",
    "actually",
    "connect",
    "could",
    "logs",
    "belongs",
    "one",
    "account",
    "could",
    "logs",
    "belongs",
    "multiple",
    "accounts",
    "matter",
    "know",
    "three",
    "services",
    "gon",
    "na",
    "work",
    "fairly",
    "good",
    "gon",
    "na",
    "inject",
    "gon",
    "na",
    "like",
    "suck",
    "logs",
    "accounts",
    "put",
    "one",
    "place",
    "help",
    "us",
    "monitor",
    "see",
    "cloud",
    "watch",
    "actually",
    "tracks",
    "metrics",
    "also",
    "use",
    "cloud",
    "trail",
    "want",
    "log",
    "api",
    "calls",
    "well",
    "push",
    "s3",
    "bucket",
    "different",
    "types",
    "blog",
    "flow",
    "logs",
    "getting",
    "captured",
    "instance",
    "application",
    "logs",
    "getting",
    "captured",
    "vpc",
    "different",
    "vpc",
    "account",
    "different",
    "account",
    "analyzed",
    "using",
    "elasticsearch",
    "using",
    "kibana",
    "client",
    "step",
    "one",
    "deploy",
    "ecs",
    "cluster",
    "step",
    "two",
    "restrict",
    "access",
    "ecs",
    "cluster",
    "valid",
    "data",
    "want",
    "anybody",
    "put",
    "hands",
    "access",
    "data",
    "rustic",
    "access",
    "ecs",
    "dashboard",
    "could",
    "use",
    "lambda",
    "also",
    "push",
    "uh",
    "data",
    "cloudwatch",
    "elasticsearch",
    "domain",
    "kibana",
    "actually",
    "graphical",
    "tool",
    "helps",
    "us",
    "visualize",
    "logs",
    "instead",
    "looking",
    "log",
    "statements",
    "bunch",
    "characters",
    "bunch",
    "files",
    "kibana",
    "helps",
    "us",
    "analyze",
    "logs",
    "graphical",
    "chart",
    "bar",
    "diagram",
    "format",
    "interview",
    "interviewer",
    "concerned",
    "testing",
    "knowledge",
    "aw",
    "security",
    "products",
    "especially",
    "logging",
    "monitoring",
    "even",
    "management",
    "incident",
    "management",
    "could",
    "question",
    "like",
    "native",
    "aws",
    "security",
    "logging",
    "capabilities",
    "services",
    "logging",
    "like",
    "logging",
    "like",
    "s3",
    "s3",
    "login",
    "cloudfront",
    "logging",
    "ds",
    "logging",
    "vpc",
    "logging",
    "additional",
    "account",
    "level",
    "logins",
    "like",
    "cloudtrail",
    "aws",
    "config",
    "services",
    "variety",
    "logging",
    "options",
    "available",
    "aws",
    "like",
    "cloud",
    "trail",
    "config",
    "cloudfront",
    "redshift",
    "logging",
    "rds",
    "logging",
    "vpc",
    "flow",
    "logs",
    "s3",
    "object",
    "logging",
    "s3",
    "access",
    "logging",
    "stuff",
    "like",
    "going",
    "look",
    "two",
    "servers",
    "specific",
    "cloud",
    "trail",
    "cloud",
    "trail",
    "first",
    "product",
    "picture",
    "thought",
    "cloud",
    "trail",
    "provides",
    "high",
    "level",
    "history",
    "api",
    "calls",
    "account",
    "actually",
    "perform",
    "good",
    "security",
    "analysis",
    "security",
    "analysis",
    "account",
    "logs",
    "actually",
    "delivered",
    "configure",
    "delivered",
    "s3",
    "long",
    "time",
    "archivals",
    "based",
    "particular",
    "event",
    "also",
    "send",
    "email",
    "notification",
    "us",
    "saying",
    "hey",
    "got",
    "error",
    "thought",
    "let",
    "know",
    "stuff",
    "like",
    "one",
    "config",
    "service",
    "config",
    "service",
    "helps",
    "us",
    "understand",
    "configuration",
    "changes",
    "happened",
    "environment",
    "also",
    "set",
    "notifications",
    "based",
    "configuration",
    "changes",
    "records",
    "cumulative",
    "changes",
    "made",
    "short",
    "period",
    "time",
    "want",
    "go",
    "lifetime",
    "particular",
    "resource",
    "things",
    "happen",
    "things",
    "went",
    "looked",
    "using",
    "aws",
    "config",
    "right",
    "question",
    "could",
    "get",
    "asked",
    "know",
    "role",
    "includes",
    "taking",
    "care",
    "cloud",
    "security",
    "well",
    "question",
    "could",
    "get",
    "asked",
    "native",
    "services",
    "amazon",
    "provides",
    "mitigate",
    "ddos",
    "denial",
    "service",
    "companies",
    "would",
    "go",
    "amazon",
    "native",
    "services",
    "companies",
    "want",
    "stick",
    "amazon",
    "native",
    "services",
    "save",
    "headache",
    "managing",
    "softwares",
    "bringing",
    "another",
    "tool",
    "tool",
    "managing",
    "ddos",
    "simply",
    "want",
    "stick",
    "amazon",
    "proprietary",
    "amazon",
    "native",
    "services",
    "lot",
    "companies",
    "using",
    "amazon",
    "service",
    "prevent",
    "ddos",
    "denial",
    "service",
    "denial",
    "service",
    "already",
    "know",
    "denial",
    "service",
    "well",
    "good",
    "know",
    "let",
    "know",
    "denial",
    "service",
    "user",
    "trying",
    "maliciously",
    "making",
    "attempt",
    "access",
    "website",
    "application",
    "user",
    "would",
    "actually",
    "create",
    "multiple",
    "sessions",
    "would",
    "occupy",
    "sessions",
    "would",
    "let",
    "legitimate",
    "users",
    "access",
    "servers",
    "turn",
    "denying",
    "service",
    "user",
    "quick",
    "picture",
    "review",
    "denial",
    "services",
    "look",
    "users",
    "instead",
    "making",
    "one",
    "connection",
    "making",
    "multiple",
    "connections",
    "cheap",
    "software",
    "programs",
    "available",
    "would",
    "actually",
    "trigger",
    "connections",
    "different",
    "computers",
    "internet",
    "different",
    "mac",
    "addresses",
    "everything",
    "kind",
    "looks",
    "legitimate",
    "server",
    "would",
    "accept",
    "connections",
    "keep",
    "sessions",
    "open",
    "actual",
    "users",
    "wo",
    "able",
    "use",
    "denying",
    "service",
    "actual",
    "users",
    "denial",
    "service",
    "right",
    "distributed",
    "denial",
    "service",
    "uh",
    "generating",
    "attacks",
    "multiple",
    "places",
    "know",
    "distributed",
    "environment",
    "distributed",
    "denial",
    "service",
    "tools",
    "native",
    "tools",
    "helps",
    "us",
    "prevent",
    "denial",
    "service",
    "attacks",
    "aws",
    "cloud",
    "shield",
    "web",
    "access",
    "firewall",
    "aw",
    "swap",
    "major",
    "ones",
    "designed",
    "mitigate",
    "denial",
    "service",
    "website",
    "often",
    "bothered",
    "denial",
    "service",
    "using",
    "aws",
    "shield",
    "aws",
    "vaf",
    "couple",
    "tools",
    "also",
    "say",
    "also",
    "denial",
    "service",
    "primary",
    "job",
    "could",
    "use",
    "denial",
    "service",
    "route",
    "53",
    "purpose",
    "provide",
    "dns",
    "cloudfront",
    "provide",
    "caching",
    "elastic",
    "load",
    "balancer",
    "elbs",
    "work",
    "provide",
    "load",
    "balancing",
    "vpc",
    "create",
    "secure",
    "virtual",
    "private",
    "environment",
    "also",
    "support",
    "mitigating",
    "denial",
    "service",
    "extent",
    "would",
    "get",
    "aws",
    "shield",
    "aws",
    "web",
    "aws",
    "shield",
    "waff",
    "primary",
    "ones",
    "rest",
    "also",
    "used",
    "mitigate",
    "distributed",
    "denial",
    "service",
    "tricky",
    "question",
    "actually",
    "test",
    "familiarity",
    "region",
    "services",
    "available",
    "region",
    "trying",
    "provision",
    "service",
    "particular",
    "region",
    "seeing",
    "service",
    "region",
    "go",
    "fixing",
    "go",
    "using",
    "service",
    "cloud",
    "tricky",
    "question",
    "gone",
    "situation",
    "totally",
    "blow",
    "away",
    "really",
    "need",
    "good",
    "understanding",
    "regions",
    "services",
    "available",
    "regions",
    "particular",
    "service",
    "available",
    "go",
    "answer",
    "services",
    "available",
    "regions",
    "anytime",
    "amazon",
    "announces",
    "new",
    "service",
    "immediately",
    "publish",
    "regions",
    "start",
    "small",
    "traffic",
    "increases",
    "becomes",
    "likeable",
    "customers",
    "actually",
    "move",
    "service",
    "different",
    "regions",
    "see",
    "picture",
    "within",
    "america",
    "north",
    "virginia",
    "services",
    "compared",
    "ohio",
    "compared",
    "north",
    "california",
    "within",
    "america",
    "north",
    "virginia",
    "preferred",
    "one",
    "similarly",
    "preferred",
    "regions",
    "within",
    "europe",
    "middle",
    "east",
    "africa",
    "preferred",
    "regions",
    "within",
    "asia",
    "pacific",
    "anytime",
    "see",
    "service",
    "particular",
    "region",
    "chances",
    "service",
    "available",
    "region",
    "yet",
    "got",
    "check",
    "documentation",
    "find",
    "nearest",
    "region",
    "offers",
    "service",
    "start",
    "using",
    "service",
    "region",
    "might",
    "think",
    "well",
    "looking",
    "service",
    "asia",
    "let",
    "say",
    "mumbai",
    "available",
    "simply",
    "switch",
    "north",
    "virginia",
    "start",
    "using",
    "could",
    "know",
    "going",
    "add",
    "latency",
    "application",
    "need",
    "check",
    "application",
    "check",
    "region",
    "near",
    "place",
    "want",
    "serve",
    "customers",
    "find",
    "nearest",
    "region",
    "instead",
    "always",
    "going",
    "back",
    "north",
    "virginia",
    "deploying",
    "application",
    "north",
    "virginia",
    "place",
    "link",
    "go",
    "look",
    "services",
    "available",
    "different",
    "region",
    "exactly",
    "seeing",
    "service",
    "available",
    "particular",
    "region",
    "switch",
    "region",
    "provides",
    "service",
    "nearest",
    "region",
    "provides",
    "service",
    "start",
    "using",
    "service",
    "coming",
    "cloud",
    "lot",
    "companies",
    "turned",
    "monitoring",
    "team",
    "instead",
    "want",
    "go",
    "monitorings",
    "cloud",
    "provides",
    "know",
    "nobody",
    "wants",
    "least",
    "many",
    "people",
    "want",
    "go",
    "hassle",
    "least",
    "new",
    "startups",
    "new",
    "companies",
    "thinking",
    "monitoring",
    "environment",
    "want",
    "go",
    "traditional",
    "knock",
    "monitoring",
    "instead",
    "would",
    "like",
    "leverage",
    "aws",
    "monitorings",
    "available",
    "monitors",
    "lot",
    "stuff",
    "availability",
    "monitors",
    "lot",
    "stuff",
    "like",
    "failures",
    "errors",
    "also",
    "triggers",
    "emails",
    "stuff",
    "like",
    "actually",
    "set",
    "monitor",
    "website",
    "set",
    "monitor",
    "monitor",
    "website",
    "metrics",
    "real",
    "time",
    "aws",
    "simple",
    "way",
    "anytime",
    "question",
    "monitoring",
    "cloudwatch",
    "strike",
    "mind",
    "cloudwatch",
    "meant",
    "monitoring",
    "meant",
    "collecting",
    "metrics",
    "meant",
    "providing",
    "graphical",
    "representation",
    "going",
    "particular",
    "network",
    "particular",
    "point",
    "time",
    "cloudwatch",
    "cloudwatch",
    "helps",
    "us",
    "monitor",
    "applications",
    "using",
    "cloudwatch",
    "monitor",
    "state",
    "changes",
    "state",
    "changes",
    "auto",
    "scaling",
    "life",
    "cycle",
    "events",
    "anytime",
    "services",
    "added",
    "reduction",
    "number",
    "servers",
    "less",
    "usage",
    "informative",
    "messages",
    "received",
    "cloud",
    "watch",
    "cloud",
    "watch",
    "support",
    "scheduled",
    "events",
    "want",
    "schedule",
    "anything",
    "cloudwatch",
    "event",
    "would",
    "schedule",
    "action",
    "right",
    "schedule",
    "trigger",
    "time",
    "based",
    "incident",
    "based",
    "know",
    "anything",
    "happening",
    "get",
    "action",
    "happening",
    "incident",
    "based",
    "hand",
    "simply",
    "schedule",
    "things",
    "time",
    "based",
    "possible",
    "cloud",
    "watch",
    "cloud",
    "watch",
    "integrates",
    "well",
    "lot",
    "services",
    "like",
    "notifications",
    "notifying",
    "user",
    "notifying",
    "administrator",
    "integrate",
    "well",
    "lambda",
    "trigger",
    "action",
    "anytime",
    "designing",
    "auto",
    "healing",
    "environment",
    "cloud",
    "watch",
    "actually",
    "monitor",
    "send",
    "email",
    "integrating",
    "sns",
    "simple",
    "notification",
    "service",
    "cloud",
    "watch",
    "monitor",
    "based",
    "happening",
    "trigger",
    "event",
    "lambda",
    "would",
    "turn",
    "run",
    "function",
    "till",
    "environment",
    "comes",
    "back",
    "normal",
    "cloudwatch",
    "integrates",
    "well",
    "lot",
    "aw",
    "services",
    "right",
    "cloudwatch",
    "three",
    "statuses",
    "green",
    "everything",
    "going",
    "good",
    "yellow",
    "service",
    "degraded",
    "red",
    "service",
    "available",
    "green",
    "good",
    "anything",
    "anytime",
    "ello",
    "picture",
    "looking",
    "actually",
    "calling",
    "lambda",
    "function",
    "debug",
    "application",
    "fix",
    "anytime",
    "red",
    "alert",
    "immediately",
    "notifies",
    "owner",
    "application",
    "well",
    "service",
    "report",
    "metrics",
    "collected",
    "service",
    "stuff",
    "like",
    "job",
    "role",
    "requires",
    "manage",
    "servers",
    "well",
    "certain",
    "job",
    "roles",
    "system",
    "side",
    "certain",
    "job",
    "roles",
    "development",
    "plus",
    "system",
    "side",
    "responsible",
    "application",
    "server",
    "well",
    "case",
    "might",
    "tested",
    "basic",
    "questions",
    "like",
    "different",
    "types",
    "virtualization",
    "aws",
    "difference",
    "right",
    "three",
    "major",
    "types",
    "virtualization",
    "hvm",
    "hardware",
    "virtual",
    "machine",
    "one",
    "pv",
    "para",
    "virtualization",
    "third",
    "one",
    "pv",
    "hvm",
    "para",
    "virtualization",
    "hardware",
    "virtual",
    "module",
    "right",
    "difference",
    "actually",
    "describing",
    "actually",
    "difference",
    "hvm",
    "actually",
    "fully",
    "virtualized",
    "hardware",
    "know",
    "whole",
    "hardware",
    "virtualized",
    "virtual",
    "machines",
    "act",
    "separate",
    "vms",
    "booted",
    "executing",
    "master",
    "boot",
    "record",
    "root",
    "block",
    "talk",
    "para",
    "virtualization",
    "paragraph",
    "actually",
    "special",
    "boot",
    "loader",
    "boots",
    "pva",
    "mice",
    "talk",
    "pv",
    "hvm",
    "actually",
    "marriage",
    "hvm",
    "pv",
    "para",
    "virtualization",
    "hvm",
    "words",
    "pv",
    "hvm",
    "actually",
    "helps",
    "operating",
    "system",
    "take",
    "advantage",
    "storage",
    "network",
    "input",
    "output",
    "available",
    "host",
    "another",
    "good",
    "question",
    "name",
    "services",
    "region",
    "specific",
    "thought",
    "services",
    "within",
    "region",
    "services",
    "within",
    "availability",
    "zone",
    "example",
    "ec2",
    "within",
    "availability",
    "zone",
    "ebs",
    "within",
    "availability",
    "zone",
    "s3",
    "region",
    "specific",
    "dynamodb",
    "region",
    "specific",
    "stuff",
    "like",
    "vpc",
    "availability",
    "region",
    "specific",
    "meaning",
    "know",
    "subnets",
    "availability",
    "zone",
    "specific",
    "vpc",
    "region",
    "specific",
    "stuff",
    "like",
    "might",
    "thought",
    "might",
    "learned",
    "combination",
    "could",
    "tricky",
    "questions",
    "tests",
    "well",
    "understood",
    "region",
    "availability",
    "services",
    "say",
    "services",
    "region",
    "specific",
    "would",
    "iam",
    "ca",
    "im",
    "every",
    "availability",
    "zone",
    "every",
    "region",
    "means",
    "know",
    "users",
    "use",
    "one",
    "username",
    "password",
    "one",
    "region",
    "anytime",
    "switch",
    "another",
    "region",
    "use",
    "another",
    "username",
    "password",
    "work",
    "good",
    "design",
    "well",
    "authentication",
    "global",
    "im",
    "global",
    "service",
    "means",
    "region",
    "specific",
    "hand",
    "route",
    "53",
    "regional",
    "specific",
    "ca",
    "route",
    "53",
    "every",
    "region",
    "route",
    "53",
    "region",
    "specific",
    "service",
    "global",
    "service",
    "one",
    "application",
    "users",
    "access",
    "everywhere",
    "every",
    "part",
    "world",
    "ca",
    "one",
    "url",
    "one",
    "dns",
    "name",
    "region",
    "application",
    "global",
    "application",
    "web",
    "application",
    "firewall",
    "works",
    "well",
    "cloudfront",
    "cloudfront",
    "region",
    "based",
    "service",
    "web",
    "application",
    "firewall",
    "region",
    "specific",
    "service",
    "global",
    "service",
    "cloudfront",
    "global",
    "service",
    "though",
    "know",
    "cache",
    "content",
    "continent",
    "country",
    "basis",
    "still",
    "considered",
    "global",
    "service",
    "right",
    "bound",
    "region",
    "activate",
    "cloud",
    "front",
    "activating",
    "away",
    "region",
    "availability",
    "zone",
    "activating",
    "web",
    "application",
    "firewall",
    "region",
    "specific",
    "service",
    "activating",
    "away",
    "availability",
    "zone",
    "regions",
    "quick",
    "recap",
    "users",
    "groups",
    "roles",
    "accounts",
    "global",
    "services",
    "used",
    "globally",
    "route",
    "53",
    "services",
    "offered",
    "edge",
    "locations",
    "global",
    "well",
    "web",
    "application",
    "firewall",
    "service",
    "protects",
    "web",
    "application",
    "common",
    "web",
    "exploits",
    "global",
    "service",
    "well",
    "cloud",
    "front",
    "cloudfront",
    "global",
    "content",
    "delivery",
    "network",
    "cdn",
    "offered",
    "edge",
    "locations",
    "global",
    "service",
    "words",
    "specific",
    "service",
    "beyond",
    "region",
    "service",
    "right",
    "another",
    "good",
    "question",
    "well",
    "project",
    "interviewed",
    "really",
    "want",
    "secure",
    "environment",
    "using",
    "nat",
    "already",
    "securing",
    "environment",
    "using",
    "nat",
    "two",
    "methods",
    "like",
    "nat",
    "gateway",
    "nat",
    "instances",
    "expect",
    "question",
    "difference",
    "ad",
    "gateway",
    "instances",
    "saw",
    "thing",
    "right",
    "two",
    "different",
    "services",
    "trying",
    "achieve",
    "two",
    "different",
    "things",
    "serve",
    "thing",
    "still",
    "differences",
    "right",
    "high",
    "level",
    "achieve",
    "providing",
    "netting",
    "service",
    "behind",
    "difference",
    "comes",
    "talk",
    "availability",
    "gateway",
    "managed",
    "service",
    "amazon",
    "whereas",
    "nat",
    "instance",
    "managed",
    "us",
    "talking",
    "third",
    "point",
    "maintenance",
    "nat",
    "gateway",
    "managed",
    "amazon",
    "instance",
    "managed",
    "us",
    "availability",
    "nat",
    "gateway",
    "high",
    "availability",
    "instance",
    "less",
    "compared",
    "nat",
    "gateway",
    "managed",
    "us",
    "know",
    "ec2",
    "instance",
    "could",
    "actually",
    "fail",
    "fails",
    "relaunch",
    "gateway",
    "something",
    "happens",
    "service",
    "amazon",
    "would",
    "take",
    "care",
    "reprovisioning",
    "talking",
    "bandwidth",
    "burst",
    "75",
    "gigabits",
    "traffic",
    "net",
    "gateway",
    "burst",
    "75",
    "gigabits",
    "instance",
    "actually",
    "depends",
    "server",
    "launched",
    "launching",
    "t2",
    "micro",
    "barely",
    "gets",
    "bandwidth",
    "difference",
    "performance",
    "highly",
    "available",
    "bigger",
    "pipe",
    "75",
    "gigabits",
    "performance",
    "net",
    "gateway",
    "high",
    "performance",
    "nat",
    "instance",
    "going",
    "average",
    "depends",
    "size",
    "nat",
    "instance",
    "pick",
    "billing",
    "billing",
    "nat",
    "gateway",
    "number",
    "gateways",
    "provision",
    "duration",
    "use",
    "nat",
    "gateway",
    "billing",
    "instance",
    "number",
    "instance",
    "type",
    "instance",
    "use",
    "course",
    "number",
    "instance",
    "duration",
    "type",
    "instance",
    "use",
    "security",
    "gateway",
    "uh",
    "assigned",
    "meaning",
    "already",
    "comes",
    "full",
    "packed",
    "security",
    "instance",
    "security",
    "bit",
    "customizable",
    "go",
    "change",
    "security",
    "server",
    "managed",
    "managed",
    "us",
    "always",
    "change",
    "security",
    "well",
    "allow",
    "allow",
    "allow",
    "stuff",
    "like",
    "size",
    "load",
    "night",
    "gateway",
    "uniform",
    "size",
    "load",
    "instance",
    "changes",
    "per",
    "add",
    "gateway",
    "fixed",
    "product",
    "instance",
    "small",
    "instance",
    "big",
    "instance",
    "size",
    "load",
    "varies",
    "right",
    "question",
    "could",
    "get",
    "asked",
    "difference",
    "stopping",
    "terminating",
    "ec2",
    "instance",
    "able",
    "answer",
    "worked",
    "environments",
    "instance",
    "stopped",
    "instance",
    "terminated",
    "used",
    "lab",
    "attending",
    "interview",
    "chances",
    "might",
    "always",
    "lost",
    "answering",
    "question",
    "might",
    "look",
    "like",
    "well",
    "stopping",
    "terminating",
    "difference",
    "stop",
    "instance",
    "actually",
    "performs",
    "normal",
    "shutdown",
    "instance",
    "simply",
    "moves",
    "instance",
    "stopped",
    "state",
    "actually",
    "terminate",
    "instance",
    "instance",
    "moved",
    "stop",
    "state",
    "evs",
    "volumes",
    "attached",
    "deleted",
    "removed",
    "never",
    "able",
    "recover",
    "big",
    "difference",
    "stopping",
    "terminating",
    "instance",
    "thinking",
    "using",
    "instance",
    "along",
    "data",
    "thinking",
    "stopping",
    "instance",
    "terminating",
    "instance",
    "want",
    "get",
    "rid",
    "instance",
    "forever",
    "interviewed",
    "architect",
    "level",
    "position",
    "junior",
    "architect",
    "level",
    "position",
    "even",
    "cloud",
    "consultant",
    "level",
    "position",
    "even",
    "engineering",
    "position",
    "common",
    "question",
    "gets",
    "asked",
    "different",
    "types",
    "easy",
    "instances",
    "based",
    "cost",
    "based",
    "pay",
    "right",
    "compute",
    "capacity",
    "example",
    "different",
    "types",
    "demand",
    "instances",
    "spot",
    "instances",
    "reserved",
    "instances",
    "kind",
    "looks",
    "provide",
    "compute",
    "capacity",
    "provide",
    "type",
    "hardwares",
    "us",
    "looking",
    "cost",
    "saving",
    "optimizing",
    "cost",
    "environment",
    "got",
    "careful",
    "one",
    "picking",
    "might",
    "think",
    "well",
    "go",
    "instance",
    "pay",
    "per",
    "hour",
    "basis",
    "cheap",
    "know",
    "use",
    "anytime",
    "want",
    "anytime",
    "want",
    "simply",
    "get",
    "rid",
    "terminating",
    "right",
    "requirement",
    "use",
    "service",
    "one",
    "year",
    "requirement",
    "use",
    "service",
    "three",
    "years",
    "wasting",
    "lot",
    "money",
    "buying",
    "instances",
    "wasting",
    "lot",
    "money",
    "paying",
    "hourly",
    "basis",
    "instead",
    "going",
    "reserved",
    "instance",
    "reserve",
    "capacity",
    "complete",
    "one",
    "year",
    "complete",
    "three",
    "years",
    "save",
    "huge",
    "amount",
    "buying",
    "reserved",
    "instances",
    "right",
    "man",
    "cheap",
    "start",
    "planning",
    "use",
    "short",
    "planning",
    "run",
    "long",
    "going",
    "reserved",
    "instance",
    "cost",
    "efficient",
    "spot",
    "instance",
    "cheaper",
    "instance",
    "different",
    "use",
    "cases",
    "spot",
    "instance",
    "well",
    "let",
    "look",
    "one",
    "instance",
    "instance",
    "purchased",
    "fixed",
    "rate",
    "per",
    "r",
    "short",
    "term",
    "irregular",
    "workloads",
    "testing",
    "development",
    "demand",
    "instance",
    "good",
    "use",
    "case",
    "using",
    "demand",
    "production",
    "spot",
    "instance",
    "spot",
    "instance",
    "allows",
    "users",
    "purchase",
    "ec2",
    "reduced",
    "price",
    "time",
    "instances",
    "always",
    "go",
    "sell",
    "spot",
    "instances",
    "referring",
    "anytime",
    "reserved",
    "instances",
    "always",
    "sell",
    "spot",
    "instance",
    "catalog",
    "way",
    "buy",
    "spot",
    "instance",
    "actually",
    "put",
    "budget",
    "much",
    "willing",
    "pay",
    "right",
    "would",
    "able",
    "give",
    "service",
    "within",
    "cost",
    "anytime",
    "price",
    "comes",
    "meets",
    "cost",
    "put",
    "assigned",
    "instance",
    "anytime",
    "price",
    "shoots",
    "instance",
    "taken",
    "away",
    "us",
    "case",
    "instances",
    "bought",
    "instance",
    "particular",
    "r",
    "stays",
    "us",
    "spot",
    "instances",
    "varies",
    "based",
    "price",
    "meet",
    "price",
    "get",
    "instance",
    "meet",
    "price",
    "goes",
    "away",
    "somebody",
    "else",
    "spot",
    "instance",
    "availability",
    "actually",
    "based",
    "supply",
    "demand",
    "market",
    "guarantee",
    "get",
    "spot",
    "instance",
    "time",
    "right",
    "caveat",
    "familiar",
    "caveat",
    "aware",
    "proposing",
    "somebody",
    "go",
    "spot",
    "instance",
    "save",
    "money",
    "always",
    "going",
    "available",
    "want",
    "spot",
    "instance",
    "available",
    "need",
    "carefully",
    "watch",
    "history",
    "price",
    "spot",
    "instance",
    "much",
    "last",
    "month",
    "much",
    "much",
    "month",
    "code",
    "much",
    "code",
    "stuff",
    "like",
    "got",
    "look",
    "history",
    "propose",
    "somebody",
    "well",
    "going",
    "save",
    "money",
    "using",
    "spot",
    "instance",
    "hand",
    "reserved",
    "instance",
    "provide",
    "cost",
    "savings",
    "company",
    "opt",
    "reserved",
    "instances",
    "know",
    "one",
    "year",
    "three",
    "years",
    "actually",
    "three",
    "types",
    "reserved",
    "instances",
    "light",
    "medium",
    "heavy",
    "reserved",
    "instances",
    "based",
    "amount",
    "would",
    "paying",
    "cost",
    "benefit",
    "also",
    "depends",
    "reserved",
    "instance",
    "cost",
    "benefit",
    "also",
    "depends",
    "based",
    "upfront",
    "upfront",
    "partial",
    "payment",
    "split",
    "rest",
    "monthly",
    "payments",
    "many",
    "purchase",
    "options",
    "available",
    "overall",
    "looking",
    "using",
    "application",
    "next",
    "one",
    "year",
    "three",
    "years",
    "going",
    "instance",
    "going",
    "reserved",
    "instance",
    "gives",
    "cost",
    "benefit",
    "interview",
    "sometimes",
    "might",
    "asked",
    "know",
    "interact",
    "aws",
    "environment",
    "using",
    "cli",
    "using",
    "console",
    "depending",
    "answer",
    "whether",
    "console",
    "cli",
    "panelist",
    "put",
    "score",
    "okay",
    "person",
    "cli",
    "specific",
    "person",
    "console",
    "specific",
    "person",
    "used",
    "aws",
    "environment",
    "sdk",
    "stuff",
    "like",
    "question",
    "tests",
    "whether",
    "cli",
    "person",
    "console",
    "person",
    "question",
    "goes",
    "like",
    "set",
    "ssh",
    "agent",
    "forwarding",
    "copy",
    "key",
    "every",
    "time",
    "log",
    "used",
    "puri",
    "anytime",
    "want",
    "log",
    "ec2",
    "instance",
    "put",
    "ip",
    "port",
    "number",
    "along",
    "map",
    "map",
    "key",
    "puri",
    "done",
    "every",
    "time",
    "would",
    "done",
    "lab",
    "environments",
    "right",
    "production",
    "environment",
    "using",
    "key",
    "mapping",
    "key",
    "every",
    "time",
    "actually",
    "hassle",
    "considered",
    "blocker",
    "might",
    "want",
    "cache",
    "might",
    "want",
    "permanently",
    "add",
    "putty",
    "session",
    "immediately",
    "log",
    "start",
    "using",
    "place",
    "would",
    "actually",
    "map",
    "private",
    "key",
    "quick",
    "button",
    "actually",
    "fixes",
    "actually",
    "binds",
    "ssh",
    "putty",
    "instance",
    "enable",
    "ssh",
    "agent",
    "forwarding",
    "actually",
    "bind",
    "key",
    "ssh",
    "next",
    "time",
    "try",
    "log",
    "always",
    "go",
    "mapping",
    "key",
    "trying",
    "log",
    "right",
    "question",
    "solaris",
    "ax",
    "operating",
    "systems",
    "available",
    "aws",
    "question",
    "generally",
    "gets",
    "asked",
    "test",
    "familiar",
    "amis",
    "available",
    "familiar",
    "ec2",
    "familiar",
    "ec2",
    "hardwares",
    "available",
    "basically",
    "test",
    "first",
    "question",
    "first",
    "thought",
    "comes",
    "mind",
    "well",
    "everything",
    "available",
    "aws",
    "seen",
    "windows",
    "seen",
    "ubuntu",
    "seen",
    "red",
    "hat",
    "seen",
    "amazon",
    "amis",
    "see",
    "operating",
    "system",
    "always",
    "go",
    "marketplace",
    "try",
    "find",
    "marketplace",
    "always",
    "go",
    "community",
    "try",
    "lot",
    "amis",
    "available",
    "lot",
    "operating",
    "systems",
    "available",
    "able",
    "find",
    "solaris",
    "ax",
    "case",
    "solar",
    "ax",
    "available",
    "aws",
    "solaris",
    "uses",
    "different",
    "solaris",
    "support",
    "architecture",
    "support",
    "public",
    "cloud",
    "currently",
    "goes",
    "ax",
    "well",
    "run",
    "power",
    "cpu",
    "intel",
    "amazon",
    "provide",
    "power",
    "machines",
    "confused",
    "hpc",
    "high",
    "performance",
    "computing",
    "confused",
    "different",
    "hardwares",
    "different",
    "cpu",
    "cloud",
    "providers",
    "provide",
    "yet",
    "another",
    "question",
    "could",
    "get",
    "asked",
    "organizations",
    "would",
    "want",
    "automate",
    "infrastructure",
    "using",
    "amazon",
    "native",
    "services",
    "would",
    "actually",
    "recover",
    "ec2",
    "instance",
    "auto",
    "recover",
    "ec2",
    "instance",
    "fails",
    "well",
    "know",
    "ec2",
    "instances",
    "considered",
    "immutable",
    "meaning",
    "irreparable",
    "spend",
    "time",
    "fixing",
    "bugs",
    "os",
    "stuff",
    "like",
    "know",
    "ec2",
    "instance",
    "crashes",
    "like",
    "goes",
    "ospanic",
    "various",
    "reasons",
    "would",
    "fail",
    "really",
    "worry",
    "fixing",
    "always",
    "relaunch",
    "instance",
    "would",
    "fix",
    "happens",
    "two",
    "night",
    "happens",
    "weekend",
    "nobody",
    "office",
    "looking",
    "monitoring",
    "instances",
    "would",
    "want",
    "automate",
    "weekend",
    "midnight",
    "general",
    "practice",
    "good",
    "automate",
    "could",
    "face",
    "question",
    "actually",
    "automate",
    "ec2",
    "instance",
    "fails",
    "answer",
    "question",
    "using",
    "cloudwatch",
    "recover",
    "instance",
    "see",
    "alarm",
    "threshold",
    "set",
    "cloudwatch",
    "threshold",
    "met",
    "meaning",
    "error",
    "failure",
    "ec2",
    "instance",
    "responding",
    "certain",
    "set",
    "alarm",
    "alarm",
    "met",
    "let",
    "say",
    "cpu",
    "utilization",
    "stayed",
    "high",
    "five",
    "minutes",
    "right",
    "taking",
    "new",
    "connections",
    "instance",
    "pinging",
    "five",
    "minutes",
    "case",
    "two",
    "minutes",
    "pinging",
    "going",
    "respond",
    "connection",
    "cases",
    "would",
    "want",
    "automatically",
    "recover",
    "ec2",
    "instance",
    "rebooting",
    "instance",
    "right",
    "look",
    "take",
    "action",
    "section",
    "action",
    "bunch",
    "options",
    "like",
    "recover",
    "instance",
    "meaning",
    "reboot",
    "instance",
    "would",
    "recover",
    "two",
    "options",
    "beyond",
    "scope",
    "question",
    "still",
    "go",
    "ahead",
    "apply",
    "like",
    "going",
    "option",
    "stop",
    "instance",
    "useful",
    "want",
    "stop",
    "instances",
    "low",
    "utilizations",
    "nobody",
    "using",
    "system",
    "want",
    "running",
    "wasting",
    "cloud",
    "expenditure",
    "actually",
    "set",
    "alarm",
    "stops",
    "ec2",
    "instance",
    "low",
    "utilization",
    "somebody",
    "working",
    "instance",
    "left",
    "without",
    "forgot",
    "shut",
    "instance",
    "gets",
    "mean",
    "use",
    "next",
    "day",
    "morning",
    "could",
    "like",
    "12",
    "hours",
    "system",
    "running",
    "idle",
    "nobody",
    "using",
    "paying",
    "identify",
    "instances",
    "actually",
    "stop",
    "cpu",
    "utilization",
    "low",
    "meaning",
    "nobody",
    "using",
    "one",
    "terminate",
    "let",
    "say",
    "want",
    "give",
    "system",
    "somebody",
    "temporarily",
    "want",
    "hand",
    "system",
    "back",
    "right",
    "actually",
    "idea",
    "words",
    "actually",
    "scenario",
    "hand",
    "system",
    "somebody",
    "done",
    "done",
    "actually",
    "terminate",
    "system",
    "could",
    "instruct",
    "person",
    "terminate",
    "system",
    "done",
    "could",
    "forget",
    "instance",
    "could",
    "running",
    "forever",
    "monitor",
    "system",
    "specified",
    "time",
    "terminate",
    "system",
    "best",
    "part",
    "automate",
    "system",
    "termination",
    "assign",
    "system",
    "somebody",
    "turn",
    "cloud",
    "watch",
    "action",
    "terminate",
    "instance",
    "cpu",
    "low",
    "like",
    "two",
    "hours",
    "meaning",
    "already",
    "left",
    "cpu",
    "low",
    "30",
    "minutes",
    "meaning",
    "already",
    "left",
    "stuff",
    "like",
    "possible",
    "getting",
    "hired",
    "system",
    "side",
    "architect",
    "even",
    "sysop",
    "site",
    "could",
    "face",
    "question",
    "common",
    "different",
    "types",
    "ami",
    "designs",
    "lot",
    "ami",
    "designs",
    "question",
    "common",
    "ones",
    "difference",
    "common",
    "ones",
    "full",
    "back",
    "mice",
    "one",
    "enough",
    "os",
    "ami",
    "j",
    "e",
    "os",
    "ami",
    "one",
    "hybrid",
    "type",
    "amis",
    "let",
    "look",
    "difference",
    "full",
    "backed",
    "ami",
    "like",
    "name",
    "says",
    "fully",
    "baked",
    "ready",
    "use",
    "ami",
    "simplest",
    "ami",
    "deploy",
    "bit",
    "expensive",
    "bit",
    "cumbersome",
    "lot",
    "work",
    "beforehand",
    "could",
    "use",
    "ami",
    "lot",
    "planning",
    "lot",
    "thought",
    "process",
    "go",
    "ami",
    "ready",
    "use",
    "right",
    "hand",
    "ami",
    "somebody",
    "ready",
    "use",
    "want",
    "reuse",
    "ami",
    "already",
    "ready",
    "use",
    "full",
    "baked",
    "ami",
    "one",
    "enough",
    "operating",
    "system",
    "ami",
    "like",
    "name",
    "says",
    "mean",
    "also",
    "see",
    "diagram",
    "picture",
    "covers",
    "part",
    "os",
    "bootstraps",
    "already",
    "packed",
    "properly",
    "security",
    "monitoring",
    "logging",
    "stuff",
    "configured",
    "time",
    "deployment",
    "time",
    "would",
    "using",
    "much",
    "thought",
    "process",
    "go",
    "focus",
    "choosing",
    "operating",
    "system",
    "goes",
    "operating",
    "system",
    "specific",
    "agents",
    "bootstraps",
    "goes",
    "operating",
    "system",
    "worry",
    "advantage",
    "flexible",
    "meaning",
    "choose",
    "install",
    "additional",
    "softwares",
    "time",
    "deploying",
    "going",
    "require",
    "additional",
    "expertise",
    "person",
    "using",
    "ami",
    "another",
    "overhead",
    "advantage",
    "kind",
    "flexible",
    "change",
    "configurations",
    "time",
    "deployment",
    "one",
    "hybrid",
    "ami",
    "hybrid",
    "ami",
    "actually",
    "falls",
    "fully",
    "baked",
    "ami",
    "enough",
    "operating",
    "system",
    "options",
    "amis",
    "features",
    "big",
    "type",
    "features",
    "enough",
    "os",
    "type",
    "see",
    "security",
    "monitoring",
    "logging",
    "packed",
    "ami",
    "runtime",
    "environments",
    "installed",
    "time",
    "deployment",
    "strict",
    "company",
    "policies",
    "would",
    "go",
    "ami",
    "company",
    "policies",
    "like",
    "got",
    "ta",
    "log",
    "got",
    "ta",
    "monitor",
    "ports",
    "generally",
    "gets",
    "open",
    "systems",
    "stuff",
    "like",
    "strictly",
    "go",
    "ami",
    "sits",
    "ami",
    "format",
    "deployment",
    "flexibility",
    "choosing",
    "different",
    "runtime",
    "application",
    "sits",
    "ec2",
    "instance",
    "another",
    "famous",
    "question",
    "would",
    "face",
    "interview",
    "recover",
    "login",
    "ec2",
    "instance",
    "lost",
    "key",
    "well",
    "know",
    "key",
    "lost",
    "ca",
    "recover",
    "organizations",
    "integrate",
    "ec2",
    "instances",
    "80",
    "different",
    "right",
    "go",
    "reset",
    "password",
    "80",
    "able",
    "log",
    "new",
    "password",
    "specific",
    "tricky",
    "question",
    "using",
    "key",
    "log",
    "recover",
    "lost",
    "key",
    "generally",
    "companies",
    "would",
    "made",
    "backup",
    "key",
    "pick",
    "backup",
    "specific",
    "question",
    "lost",
    "key",
    "literally",
    "backups",
    "key",
    "log",
    "know",
    "ca",
    "log",
    "instance",
    "without",
    "key",
    "present",
    "us",
    "steps",
    "recover",
    "make",
    "instance",
    "use",
    "another",
    "key",
    "use",
    "key",
    "log",
    "key",
    "lost",
    "lost",
    "forever",
    "wo",
    "able",
    "recover",
    "ca",
    "raise",
    "ticket",
    "amazon",
    "possible",
    "going",
    "help",
    "beyond",
    "scope",
    "make",
    "instance",
    "use",
    "another",
    "key",
    "key",
    "problem",
    "still",
    "valid",
    "data",
    "got",
    "recover",
    "data",
    "key",
    "problem",
    "actually",
    "focus",
    "key",
    "part",
    "alone",
    "change",
    "key",
    "allow",
    "us",
    "log",
    "step",
    "step",
    "procedure",
    "first",
    "verify",
    "ec2",
    "config",
    "service",
    "running",
    "instance",
    "want",
    "actually",
    "beforehand",
    "install",
    "easy",
    "config",
    "service",
    "actually",
    "make",
    "easy",
    "config",
    "run",
    "console",
    "couple",
    "button",
    "clicks",
    "make",
    "easy",
    "configure",
    "run",
    "ec2",
    "instance",
    "detach",
    "root",
    "volume",
    "instance",
    "course",
    "going",
    "require",
    "stop",
    "start",
    "detach",
    "root",
    "volume",
    "instance",
    "attach",
    "root",
    "volume",
    "another",
    "instance",
    "temporary",
    "volume",
    "could",
    "temporary",
    "instance",
    "launched",
    "fix",
    "issue",
    "log",
    "instance",
    "particular",
    "volume",
    "modify",
    "configuration",
    "file",
    "configuration",
    "file",
    "modify",
    "use",
    "new",
    "key",
    "move",
    "root",
    "volume",
    "back",
    "original",
    "position",
    "restart",
    "instance",
    "instance",
    "going",
    "new",
    "key",
    "also",
    "new",
    "key",
    "log",
    "go",
    "ahead",
    "fix",
    "let",
    "move",
    "product",
    "specific",
    "s3",
    "product",
    "specific",
    "questions",
    "general",
    "perception",
    "s3",
    "ebs",
    "used",
    "interchangeably",
    "interviewer",
    "would",
    "want",
    "test",
    "knowledge",
    "s3",
    "evs",
    "well",
    "ebs",
    "uses",
    "s3",
    "true",
    "ca",
    "interchangeably",
    "used",
    "might",
    "face",
    "question",
    "key",
    "differences",
    "aws",
    "s3",
    "ebs",
    "well",
    "differences",
    "s3",
    "object",
    "store",
    "meaning",
    "ca",
    "install",
    "anything",
    "store",
    "drive",
    "files",
    "ca",
    "actually",
    "install",
    "file",
    "system",
    "ebs",
    "file",
    "system",
    "install",
    "services",
    "mean",
    "install",
    "applications",
    "going",
    "run",
    "stuff",
    "like",
    "talking",
    "performance",
    "s3",
    "much",
    "faster",
    "ebs",
    "super",
    "faster",
    "accessing",
    "instance",
    "instance",
    "need",
    "access",
    "s3",
    "actually",
    "go",
    "internet",
    "access",
    "s3",
    "s3",
    "external",
    "service",
    "external",
    "service",
    "go",
    "go",
    "outside",
    "vpc",
    "access",
    "s3",
    "s3",
    "come",
    "vpc",
    "ebs",
    "comes",
    "vpc",
    "vpc",
    "would",
    "able",
    "use",
    "kind",
    "locally",
    "compared",
    "s3",
    "ebs",
    "local",
    "way",
    "going",
    "faster",
    "redundancy",
    "talking",
    "redundancy",
    "s3",
    "ebs",
    "s3",
    "replicated",
    "data",
    "s3",
    "replicated",
    "across",
    "data",
    "centers",
    "ebs",
    "replicated",
    "within",
    "data",
    "center",
    "meaning",
    "s3",
    "replicated",
    "across",
    "availability",
    "zones",
    "ebs",
    "within",
    "availability",
    "zone",
    "way",
    "redundancy",
    "bit",
    "less",
    "ebs",
    "words",
    "redundancy",
    "higher",
    "s3",
    "eps",
    "talking",
    "security",
    "s3",
    "is3",
    "made",
    "private",
    "well",
    "public",
    "meaning",
    "anybody",
    "access",
    "s3",
    "anywhere",
    "internet",
    "possible",
    "s3",
    "ebs",
    "accessed",
    "attached",
    "ec2",
    "instance",
    "right",
    "one",
    "instance",
    "access",
    "whereas",
    "s3",
    "publicly",
    "directly",
    "accessible",
    "question",
    "related",
    "s3",
    "security",
    "allow",
    "access",
    "user",
    "assert",
    "user",
    "certain",
    "bucket",
    "means",
    "user",
    "access",
    "s3",
    "user",
    "needs",
    "given",
    "access",
    "certain",
    "bucket",
    "case",
    "applies",
    "servers",
    "well",
    "cases",
    "could",
    "instance",
    "person",
    "new",
    "team",
    "actually",
    "want",
    "access",
    "production",
    "service",
    "production",
    "group",
    "default",
    "granted",
    "access",
    "server",
    "specifically",
    "want",
    "deny",
    "access",
    "production",
    "server",
    "till",
    "time",
    "matured",
    "enough",
    "access",
    "understand",
    "process",
    "understand",
    "put",
    "hands",
    "production",
    "server",
    "go",
    "first",
    "would",
    "categorize",
    "instances",
    "well",
    "critical",
    "instances",
    "normal",
    "instances",
    "would",
    "actually",
    "uh",
    "put",
    "tag",
    "categorize",
    "right",
    "put",
    "attack",
    "put",
    "attacks",
    "saying",
    "well",
    "highly",
    "critical",
    "medium",
    "critical",
    "critical",
    "still",
    "production",
    "stuff",
    "like",
    "would",
    "pick",
    "users",
    "wants",
    "given",
    "access",
    "certain",
    "server",
    "would",
    "actually",
    "allow",
    "user",
    "access",
    "access",
    "servers",
    "based",
    "specific",
    "tag",
    "words",
    "use",
    "actually",
    "tags",
    "previous",
    "step",
    "put",
    "tags",
    "critical",
    "server",
    "right",
    "would",
    "define",
    "user",
    "going",
    "use",
    "tag",
    "right",
    "user",
    "allowed",
    "use",
    "resources",
    "stack",
    "would",
    "make",
    "step",
    "forward",
    "would",
    "allow",
    "deny",
    "based",
    "tags",
    "put",
    "case",
    "allowed",
    "servers",
    "tagged",
    "critical",
    "servers",
    "allow",
    "deny",
    "access",
    "goes",
    "bucket",
    "well",
    "organization",
    "excessively",
    "using",
    "s3",
    "data",
    "storage",
    "benefit",
    "provides",
    "cost",
    "durability",
    "might",
    "get",
    "asked",
    "question",
    "organizations",
    "would",
    "replicate",
    "data",
    "one",
    "region",
    "another",
    "region",
    "additional",
    "data",
    "durability",
    "data",
    "redundancy",
    "would",
    "also",
    "dr",
    "purposes",
    "disaster",
    "recovery",
    "whole",
    "region",
    "still",
    "data",
    "available",
    "somewhere",
    "else",
    "pick",
    "use",
    "organizations",
    "would",
    "store",
    "data",
    "different",
    "regions",
    "compliance",
    "reasons",
    "provide",
    "low",
    "latency",
    "access",
    "users",
    "local",
    "region",
    "stuff",
    "like",
    "companies",
    "replication",
    "make",
    "sure",
    "consistency",
    "replication",
    "make",
    "sure",
    "replication",
    "failing",
    "data",
    "gets",
    "transferred",
    "sure",
    "logs",
    "replication",
    "something",
    "companies",
    "would",
    "use",
    "excessively",
    "using",
    "s3",
    "fully",
    "relying",
    "replication",
    "running",
    "business",
    "way",
    "could",
    "set",
    "replication",
    "monitor",
    "actually",
    "set",
    "tools",
    "could",
    "use",
    "together",
    "make",
    "sure",
    "cloud",
    "replication",
    "region",
    "level",
    "replication",
    "happening",
    "properly",
    "happens",
    "side",
    "left",
    "hand",
    "side",
    "region",
    "1",
    "right",
    "hand",
    "side",
    "region",
    "2",
    "region",
    "1",
    "source",
    "bucket",
    "region",
    "2",
    "destination",
    "bucket",
    "right",
    "object",
    "put",
    "source",
    "bucket",
    "go",
    "directly",
    "region",
    "bucket",
    "made",
    "copy",
    "region",
    "bucket",
    "problem",
    "sometimes",
    "fails",
    "consistency",
    "way",
    "would",
    "connect",
    "services",
    "together",
    "create",
    "cross",
    "replication",
    "cross",
    "region",
    "replication",
    "monitor",
    "actually",
    "monitors",
    "actually",
    "monitors",
    "environment",
    "cloud",
    "watch",
    "make",
    "sure",
    "data",
    "move",
    "data",
    "failing",
    "cloud",
    "watch",
    "end",
    "make",
    "sure",
    "data",
    "moving",
    "logs",
    "generated",
    "cloudtrail",
    "actually",
    "written",
    "dynamodb",
    "error",
    "something",
    "failing",
    "get",
    "notified",
    "sms",
    "get",
    "notified",
    "email",
    "using",
    "sns",
    "service",
    "could",
    "leverage",
    "tools",
    "set",
    "cross",
    "region",
    "replication",
    "monitor",
    "actually",
    "monitors",
    "data",
    "replication",
    "common",
    "issues",
    "company",
    "companies",
    "face",
    "vpc",
    "know",
    "use",
    "route",
    "53",
    "resolve",
    "ip",
    "address",
    "externally",
    "internet",
    "default",
    "servers",
    "wo",
    "connect",
    "servers",
    "using",
    "custom",
    "dns",
    "name",
    "default",
    "actually",
    "problem",
    "additional",
    "things",
    "administrator",
    "architect",
    "person",
    "uses",
    "going",
    "discuss",
    "question",
    "could",
    "vpc",
    "resolving",
    "server",
    "dns",
    "access",
    "ip",
    "dns",
    "name",
    "could",
    "issue",
    "go",
    "fixing",
    "able",
    "answer",
    "question",
    "done",
    "already",
    "quick",
    "simple",
    "step",
    "default",
    "vpc",
    "allow",
    "default",
    "feature",
    "enable",
    "dns",
    "hostname",
    "resolution",
    "custom",
    "dns",
    "default",
    "dns",
    "comes",
    "along",
    "custom",
    "dns",
    "enable",
    "dns",
    "host",
    "name",
    "resolution",
    "enable",
    "dns",
    "hostname",
    "resolution",
    "actually",
    "resolve",
    "let",
    "say",
    "want",
    "connect",
    "default",
    "allowed",
    "enable",
    "option",
    "able",
    "connect",
    "server",
    "one",
    "company",
    "vpcs",
    "different",
    "regions",
    "head",
    "office",
    "central",
    "place",
    "rest",
    "branch",
    "offices",
    "connecting",
    "head",
    "office",
    "access",
    "know",
    "saving",
    "data",
    "accessing",
    "certain",
    "files",
    "certain",
    "data",
    "storing",
    "data",
    "right",
    "would",
    "actually",
    "mimic",
    "hub",
    "spoke",
    "topology",
    "vpc",
    "centrally",
    "accessible",
    "region",
    "centrally",
    "accessible",
    "region",
    "would",
    "local",
    "vpcs",
    "branch",
    "offices",
    "different",
    "regions",
    "get",
    "connected",
    "vpc",
    "central",
    "location",
    "question",
    "actually",
    "connect",
    "multiple",
    "sites",
    "vpc",
    "make",
    "communication",
    "happen",
    "default",
    "know",
    "vpcs",
    "need",
    "paired",
    "order",
    "access",
    "resources",
    "let",
    "look",
    "picture",
    "right",
    "like",
    "customer",
    "network",
    "branch",
    "offices",
    "different",
    "parts",
    "get",
    "connected",
    "vpc",
    "fine",
    "achieved",
    "different",
    "offices",
    "remote",
    "offices",
    "connecting",
    "vpc",
    "talking",
    "ca",
    "connect",
    "ca",
    "talk",
    "built",
    "requirement",
    "traffic",
    "needs",
    "able",
    "talk",
    "direct",
    "connection",
    "means",
    "come",
    "hit",
    "vpc",
    "reach",
    "customer",
    "network",
    "los",
    "angeles",
    "new",
    "york",
    "right",
    "requirement",
    "possible",
    "architecting",
    "cloud",
    "using",
    "vpn",
    "cloud",
    "hub",
    "look",
    "dotted",
    "lines",
    "actually",
    "allows",
    "customers",
    "actually",
    "allows",
    "corporate",
    "networks",
    "talk",
    "vpc",
    "default",
    "happen",
    "cloud",
    "hub",
    "architecture",
    "using",
    "make",
    "happen",
    "advantage",
    "central",
    "office",
    "headquarters",
    "office",
    "vpc",
    "headquarters",
    "data",
    "center",
    "vpc",
    "control",
    "vpc",
    "control",
    "talks",
    "traffic",
    "talk",
    "mean",
    "traffic",
    "routed",
    "head",
    "office",
    "stuff",
    "like",
    "centralized",
    "control",
    "vpc",
    "question",
    "could",
    "get",
    "asked",
    "neiman",
    "explain",
    "security",
    "products",
    "features",
    "available",
    "vpc",
    "well",
    "vpc",
    "security",
    "service",
    "provides",
    "security",
    "service",
    "application",
    "actually",
    "secure",
    "vpc",
    "question",
    "yes",
    "products",
    "actually",
    "secure",
    "vpc",
    "vpc",
    "delivers",
    "products",
    "secure",
    "application",
    "access",
    "vpc",
    "restricted",
    "network",
    "access",
    "control",
    "list",
    "right",
    "security",
    "product",
    "vpc",
    "vpc",
    "security",
    "groups",
    "protects",
    "instances",
    "unwanted",
    "inbound",
    "outbound",
    "traffic",
    "network",
    "access",
    "control",
    "list",
    "protects",
    "subnets",
    "unwanted",
    "inbound",
    "outbound",
    "access",
    "flow",
    "logs",
    "capture",
    "vpc",
    "captures",
    "incoming",
    "outgoing",
    "traffic",
    "vpc",
    "used",
    "later",
    "analysis",
    "traffic",
    "pattern",
    "behavior",
    "traffic",
    "pattern",
    "stuff",
    "like",
    "security",
    "products",
    "features",
    "available",
    "vpc",
    "monitor",
    "vpc",
    "vpc",
    "important",
    "concept",
    "important",
    "service",
    "well",
    "everything",
    "sits",
    "vpc",
    "service",
    "sits",
    "vpc",
    "except",
    "lambda",
    "s3",
    "dynamodb",
    "couple",
    "services",
    "sit",
    "vpc",
    "security",
    "reason",
    "monitor",
    "vpc",
    "gain",
    "visibility",
    "vpc",
    "well",
    "gain",
    "visibility",
    "vpc",
    "using",
    "vpc",
    "flow",
    "log",
    "basic",
    "service",
    "see",
    "actually",
    "captures",
    "allowed",
    "allowed",
    "stuff",
    "like",
    "ip",
    "allowed",
    "ip",
    "allowed",
    "stuff",
    "like",
    "gather",
    "use",
    "analysis",
    "one",
    "cloud",
    "watch",
    "cloud",
    "watch",
    "logs",
    "data",
    "transfers",
    "happen",
    "know",
    "gets",
    "allowed",
    "get",
    "allowed",
    "mean",
    "flow",
    "logs",
    "allowed",
    "allowed",
    "kind",
    "detail",
    "cloud",
    "watch",
    "gives",
    "information",
    "data",
    "transfer",
    "much",
    "data",
    "getting",
    "transferred",
    "actually",
    "pick",
    "unusual",
    "data",
    "transfers",
    "certain",
    "hike",
    "graph",
    "sudden",
    "hike",
    "something",
    "happens",
    "12",
    "regular",
    "basis",
    "expecting",
    "something",
    "suspicious",
    "could",
    "valid",
    "backups",
    "could",
    "malicious",
    "activity",
    "well",
    "know",
    "looking",
    "cloudwatch",
    "logs",
    "cloudwatch",
    "dashboard",
    "let",
    "talk",
    "multiple",
    "choice",
    "questions",
    "going",
    "interview",
    "might",
    "sometimes",
    "find",
    "company",
    "conducting",
    "online",
    "test",
    "based",
    "score",
    "put",
    "panelist",
    "would",
    "take",
    "forward",
    "thought",
    "also",
    "include",
    "multiple",
    "choice",
    "questions",
    "help",
    "better",
    "handle",
    "situation",
    "come",
    "across",
    "right",
    "find",
    "situation",
    "key",
    "clear",
    "understand",
    "question",
    "properly",
    "read",
    "lines",
    "say",
    "know",
    "like",
    "big",
    "paragraph",
    "three",
    "lines",
    "ten",
    "lines",
    "really",
    "got",
    "understand",
    "question",
    "try",
    "find",
    "answer",
    "question",
    "thumb",
    "rule",
    "number",
    "one",
    "second",
    "rule",
    "try",
    "compare",
    "contrast",
    "services",
    "mentioned",
    "try",
    "compare",
    "contrast",
    "answers",
    "easily",
    "read",
    "one",
    "two",
    "answers",
    "left",
    "two",
    "answers",
    "decide",
    "know",
    "also",
    "helps",
    "time",
    "also",
    "helps",
    "precision",
    "answer",
    "number",
    "one",
    "read",
    "lines",
    "number",
    "two",
    "compare",
    "contrast",
    "services",
    "able",
    "easily",
    "weed",
    "wrong",
    "ones",
    "let",
    "try",
    "answering",
    "question",
    "suppose",
    "game",
    "designer",
    "want",
    "develop",
    "game",
    "single",
    "digit",
    "millisecond",
    "latency",
    "following",
    "database",
    "services",
    "would",
    "choose",
    "know",
    "following",
    "database",
    "services",
    "good",
    "enough",
    "right",
    "talks",
    "millisecond",
    "latency",
    "key",
    "point",
    "third",
    "thing",
    "game",
    "could",
    "mobile",
    "game",
    "game",
    "trying",
    "design",
    "need",
    "millisecond",
    "latency",
    "database",
    "right",
    "let",
    "talk",
    "options",
    "available",
    "rds",
    "rds",
    "database",
    "sure",
    "good",
    "game",
    "design",
    "come",
    "back",
    "neptune",
    "uh",
    "neptune",
    "graph",
    "database",
    "service",
    "amazon",
    "kind",
    "equation",
    "snowball",
    "actually",
    "storage",
    "right",
    "transport",
    "medium",
    "would",
    "say",
    "equation",
    "tie",
    "rds",
    "dynamodb",
    "need",
    "talk",
    "rds",
    "rds",
    "platform",
    "service",
    "provides",
    "cost",
    "efficient",
    "resizable",
    "capacity",
    "sql",
    "database",
    "meaning",
    "tables",
    "kind",
    "strict",
    "know",
    "good",
    "banking",
    "type",
    "applications",
    "really",
    "good",
    "anything",
    "gaming",
    "option",
    "left",
    "dynamodb",
    "right",
    "answer",
    "dynamodb",
    "actually",
    "fast",
    "flexible",
    "nosql",
    "database",
    "service",
    "provides",
    "single",
    "digit",
    "millisecond",
    "latency",
    "scale",
    "database",
    "time",
    "key",
    "value",
    "store",
    "model",
    "database",
    "right",
    "answer",
    "dynamodb",
    "right",
    "let",
    "look",
    "next",
    "question",
    "need",
    "perform",
    "monitoring",
    "aws",
    "services",
    "get",
    "actionable",
    "insights",
    "service",
    "would",
    "use",
    "right",
    "let",
    "list",
    "services",
    "talks",
    "monitoring",
    "firewall",
    "manager",
    "provide",
    "firewall",
    "manager",
    "really",
    "monitor",
    "like",
    "name",
    "says",
    "manager",
    "manages",
    "multiple",
    "firewalls",
    "aws",
    "guard",
    "duty",
    "thread",
    "detection",
    "service",
    "monitoring",
    "continuously",
    "monitor",
    "environment",
    "monitors",
    "threats",
    "right",
    "threats",
    "let",
    "talk",
    "cloud",
    "watch",
    "cloud",
    "watch",
    "service",
    "helps",
    "track",
    "metrics",
    "service",
    "used",
    "monitor",
    "environment",
    "give",
    "us",
    "visibility",
    "also",
    "helps",
    "us",
    "store",
    "logs",
    "moment",
    "kind",
    "looks",
    "like",
    "could",
    "right",
    "answer",
    "know",
    "yet",
    "mean",
    "one",
    "option",
    "left",
    "uh",
    "ebs",
    "ebs",
    "ebs",
    "block",
    "storage",
    "elastic",
    "block",
    "store",
    "abbreviate",
    "ebs",
    "elastic",
    "block",
    "store",
    "three",
    "easily",
    "question",
    "first",
    "one",
    "manage",
    "second",
    "one",
    "find",
    "threats",
    "course",
    "monitoring",
    "mean",
    "one",
    "relation",
    "cloud",
    "watch",
    "guard",
    "duty",
    "monitoring",
    "easily",
    "actually",
    "find",
    "slipped",
    "towards",
    "picking",
    "guard",
    "duty",
    "know",
    "guard",
    "duty",
    "gaining",
    "security",
    "inside",
    "gaining",
    "aws",
    "service",
    "inside",
    "cloudwatch",
    "service",
    "helps",
    "us",
    "get",
    "system",
    "wide",
    "aws",
    "wide",
    "account",
    "wide",
    "number",
    "metrics",
    "monitor",
    "get",
    "good",
    "insight",
    "service",
    "performing",
    "cpu",
    "ram",
    "beat",
    "network",
    "utilization",
    "beat",
    "connection",
    "failures",
    "cloudwatch",
    "service",
    "helps",
    "us",
    "perform",
    "monitoring",
    "get",
    "actionable",
    "insights",
    "services",
    "right",
    "let",
    "talk",
    "33rd",
    "question",
    "web",
    "developer",
    "developing",
    "app",
    "especially",
    "mobile",
    "platform",
    "right",
    "mention",
    "especially",
    "mobile",
    "platform",
    "lot",
    "services",
    "gets",
    "filtered",
    "mobile",
    "platform",
    "right",
    "following",
    "lets",
    "add",
    "user",
    "sign",
    "sign",
    "access",
    "control",
    "web",
    "mobile",
    "app",
    "quickly",
    "easily",
    "right",
    "signing",
    "mobile",
    "app",
    "need",
    "read",
    "lines",
    "read",
    "sign",
    "sign",
    "mobile",
    "platform",
    "right",
    "like",
    "four",
    "options",
    "uh",
    "shield",
    "aws",
    "massey",
    "aws",
    "inspector",
    "amazon",
    "cognito",
    "let",
    "try",
    "weed",
    "services",
    "relevant",
    "aws",
    "shield",
    "aws",
    "shield",
    "actually",
    "service",
    "provides",
    "ddos",
    "mitigation",
    "ddos",
    "protection",
    "denial",
    "service",
    "protection",
    "security",
    "feature",
    "let",
    "talk",
    "second",
    "option",
    "aws",
    "maxi",
    "security",
    "service",
    "uses",
    "machine",
    "learning",
    "automatically",
    "discover",
    "classify",
    "data",
    "talks",
    "security",
    "security",
    "encrypting",
    "saving",
    "data",
    "come",
    "close",
    "signing",
    "mobile",
    "platform",
    "right",
    "let",
    "talk",
    "one",
    "aws",
    "inspector",
    "aws",
    "inspector",
    "something",
    "apps",
    "definitely",
    "something",
    "apps",
    "kind",
    "looks",
    "like",
    "relevant",
    "actually",
    "helps",
    "improving",
    "security",
    "compliance",
    "apps",
    "deploy",
    "cloud",
    "kind",
    "looks",
    "like",
    "could",
    "apps",
    "last",
    "one",
    "cognito",
    "cognito",
    "service",
    "actually",
    "lets",
    "administrator",
    "control",
    "access",
    "web",
    "mobile",
    "apps",
    "service",
    "helps",
    "us",
    "sign",
    "assign",
    "mobile",
    "web",
    "app",
    "much",
    "looks",
    "like",
    "found",
    "answer",
    "cognito",
    "service",
    "helps",
    "web",
    "app",
    "mobile",
    "app",
    "sign",
    "signing",
    "also",
    "gives",
    "administrator",
    "control",
    "access",
    "control",
    "web",
    "mobile",
    "app",
    "pretty",
    "much",
    "found",
    "cognito",
    "cognito",
    "service",
    "helps",
    "us",
    "set",
    "sign",
    "sign",
    "access",
    "control",
    "users",
    "would",
    "using",
    "mobile",
    "web",
    "app",
    "right",
    "question",
    "ml",
    "engineer",
    "machine",
    "learning",
    "engineer",
    "lookout",
    "solution",
    "discover",
    "sensitive",
    "information",
    "enterprise",
    "stores",
    "aws",
    "uses",
    "nlp",
    "classify",
    "data",
    "provide",
    "business",
    "related",
    "insights",
    "among",
    "following",
    "services",
    "would",
    "choose",
    "bunch",
    "services",
    "going",
    "help",
    "us",
    "achieve",
    "one",
    "going",
    "help",
    "us",
    "achieve",
    "requirement",
    "service",
    "deals",
    "machine",
    "learning",
    "machine",
    "learning",
    "engineer",
    "looking",
    "service",
    "help",
    "discover",
    "information",
    "enterprise",
    "store",
    "talking",
    "storage",
    "discover",
    "information",
    "store",
    "classify",
    "uh",
    "data",
    "depending",
    "severity",
    "sensitivity",
    "classify",
    "data",
    "service",
    "firewall",
    "manager",
    "like",
    "name",
    "says",
    "manager",
    "aws",
    "iam",
    "abbreviate",
    "identity",
    "access",
    "management",
    "identity",
    "access",
    "management",
    "nothing",
    "identifying",
    "sensitive",
    "data",
    "managing",
    "first",
    "two",
    "already",
    "equation",
    "aw",
    "massy",
    "already",
    "quick",
    "definition",
    "description",
    "aws",
    "massey",
    "actually",
    "security",
    "service",
    "uses",
    "machine",
    "learning",
    "kind",
    "looks",
    "like",
    "could",
    "security",
    "service",
    "uses",
    "machine",
    "learning",
    "discovers",
    "classifies",
    "sensitive",
    "information",
    "stop",
    "goes",
    "beyond",
    "protects",
    "sensitive",
    "data",
    "aws",
    "massey",
    "kind",
    "looks",
    "like",
    "still",
    "one",
    "option",
    "look",
    "cloud",
    "hms",
    "cloud",
    "hms",
    "also",
    "security",
    "service",
    "kind",
    "looks",
    "like",
    "could",
    "answer",
    "well",
    "enables",
    "us",
    "generate",
    "encryption",
    "keys",
    "save",
    "data",
    "kind",
    "fifty",
    "percent",
    "security",
    "service",
    "encrypts",
    "helps",
    "us",
    "protect",
    "data",
    "aws",
    "maxi",
    "right",
    "spot",
    "machine",
    "learning",
    "service",
    "helps",
    "us",
    "classify",
    "data",
    "also",
    "protect",
    "data",
    "answer",
    "question",
    "would",
    "aws",
    "messy",
    "hope",
    "kind",
    "get",
    "going",
    "first",
    "apply",
    "thumb",
    "rule",
    "identify",
    "question",
    "asked",
    "read",
    "lines",
    "try",
    "find",
    "service",
    "meets",
    "requirement",
    "finding",
    "service",
    "first",
    "weeding",
    "wrong",
    "ones",
    "recollect",
    "everything",
    "learned",
    "service",
    "see",
    "well",
    "matches",
    "hints",
    "picked",
    "match",
    "weed",
    "end",
    "two",
    "decide",
    "point",
    "becomes",
    "easy",
    "decide",
    "click",
    "question",
    "submit",
    "move",
    "question",
    "interview",
    "right",
    "one",
    "system",
    "administrator",
    "company",
    "running",
    "infrastructure",
    "aws",
    "required",
    "track",
    "users",
    "keep",
    "look",
    "users",
    "authenticated",
    "right",
    "problem",
    "statement",
    "starts",
    "need",
    "keep",
    "track",
    "users",
    "authenticated",
    "wish",
    "create",
    "manage",
    "aws",
    "users",
    "use",
    "permissions",
    "allow",
    "deny",
    "access",
    "aws",
    "resources",
    "right",
    "give",
    "permission",
    "number",
    "one",
    "mean",
    "put",
    "right",
    "order",
    "first",
    "giving",
    "permissions",
    "tracking",
    "usage",
    "let",
    "see",
    "service",
    "help",
    "us",
    "achieve",
    "iam",
    "service",
    "helps",
    "us",
    "looking",
    "permissions",
    "actually",
    "predict",
    "whether",
    "user",
    "group",
    "servers",
    "helps",
    "us",
    "get",
    "track",
    "able",
    "use",
    "able",
    "use",
    "certain",
    "servers",
    "stuff",
    "kind",
    "looks",
    "like",
    "three",
    "options",
    "left",
    "let",
    "look",
    "aws",
    "firewall",
    "manager",
    "like",
    "name",
    "says",
    "actually",
    "firewall",
    "manager",
    "helps",
    "us",
    "manage",
    "multiple",
    "firewalls",
    "simple",
    "shield",
    "service",
    "service",
    "used",
    "protect",
    "denial",
    "service",
    "distributed",
    "denial",
    "service",
    "api",
    "gateway",
    "service",
    "makes",
    "easy",
    "developers",
    "create",
    "publish",
    "maintain",
    "monitor",
    "secure",
    "api",
    "mean",
    "completely",
    "api",
    "side",
    "less",
    "user",
    "authenticate",
    "user",
    "get",
    "looking",
    "name",
    "right",
    "abbreviate",
    "try",
    "find",
    "definition",
    "name",
    "api",
    "gateway",
    "would",
    "get",
    "api",
    "aggregate",
    "aws",
    "iam",
    "identity",
    "access",
    "management",
    "pretty",
    "much",
    "meets",
    "requirement",
    "problem",
    "statement",
    "aws",
    "identity",
    "access",
    "management",
    "right",
    "answer",
    "right",
    "let",
    "look",
    "one",
    "want",
    "allocate",
    "various",
    "private",
    "public",
    "ip",
    "address",
    "order",
    "make",
    "communicate",
    "internet",
    "instances",
    "use",
    "service",
    "following",
    "service",
    "talks",
    "using",
    "public",
    "private",
    "ip",
    "address",
    "service",
    "uses",
    "ip",
    "address",
    "service",
    "helps",
    "us",
    "allow",
    "deny",
    "connections",
    "internet",
    "instances",
    "get",
    "question",
    "let",
    "pick",
    "service",
    "helps",
    "us",
    "achieve",
    "route",
    "53",
    "route",
    "53",
    "actually",
    "dns",
    "service",
    "right",
    "service",
    "used",
    "allow",
    "deny",
    "vpc",
    "vpc",
    "uses",
    "public",
    "private",
    "ip",
    "address",
    "yes",
    "kind",
    "looks",
    "like",
    "vpc",
    "helps",
    "us",
    "allow",
    "mean",
    "security",
    "vpc",
    "security",
    "group",
    "network",
    "access",
    "control",
    "list",
    "vpc",
    "outing",
    "table",
    "vpc",
    "actually",
    "helps",
    "us",
    "allow",
    "deny",
    "connection",
    "particular",
    "ip",
    "address",
    "particular",
    "service",
    "within",
    "vpc",
    "outside",
    "vpc",
    "kind",
    "looks",
    "like",
    "could",
    "let",
    "look",
    "services",
    "find",
    "service",
    "closely",
    "matches",
    "requirement",
    "amazon",
    "vpc",
    "gateway",
    "api",
    "gateway",
    "know",
    "managed",
    "service",
    "makes",
    "easy",
    "developers",
    "create",
    "publish",
    "maintain",
    "monitor",
    "apis",
    "secure",
    "api",
    "completely",
    "api",
    "ib",
    "cloudfront",
    "know",
    "cloudfront",
    "content",
    "delivery",
    "network",
    "provides",
    "global",
    "distribution",
    "servers",
    "content",
    "cached",
    "could",
    "video",
    "bulk",
    "media",
    "anything",
    "else",
    "cached",
    "locally",
    "users",
    "easily",
    "access",
    "download",
    "easily",
    "right",
    "cloud",
    "front",
    "point",
    "looking",
    "four",
    "looks",
    "like",
    "vpc",
    "right",
    "answer",
    "fact",
    "vpc",
    "right",
    "answer",
    "vpc",
    "public",
    "ip",
    "address",
    "vpc",
    "help",
    "us",
    "private",
    "ip",
    "address",
    "vpc",
    "used",
    "allow",
    "deny",
    "connection",
    "based",
    "security",
    "group",
    "access",
    "control",
    "list",
    "routing",
    "table",
    "right",
    "answer",
    "vpc",
    "right",
    "one",
    "platform",
    "service",
    "platform",
    "db",
    "service",
    "provides",
    "us",
    "cost",
    "efficient",
    "resizable",
    "capacity",
    "automating",
    "time",
    "consuming",
    "administrative",
    "tasks",
    "question",
    "clear",
    "db",
    "service",
    "got",
    "look",
    "service",
    "provide",
    "automating",
    "time",
    "consuming",
    "tasks",
    "resizable",
    "time",
    "let",
    "talk",
    "amazon",
    "rational",
    "database",
    "database",
    "kind",
    "matches",
    "requirement",
    "resize",
    "needed",
    "right",
    "looks",
    "like",
    "fit",
    "actually",
    "automates",
    "time",
    "consuming",
    "work",
    "looks",
    "like",
    "fit",
    "let",
    "move",
    "elastic",
    "cache",
    "try",
    "see",
    "matches",
    "definition",
    "figured",
    "elastic",
    "cache",
    "actually",
    "caching",
    "service",
    "data",
    "store",
    "helps",
    "achieving",
    "high",
    "throughput",
    "low",
    "latency",
    "memory",
    "data",
    "store",
    "database",
    "come",
    "amazon",
    "provisioned",
    "automation",
    "automating",
    "administration",
    "tasks",
    "come",
    "anything",
    "like",
    "yeah",
    "resize",
    "capacity",
    "needed",
    "automation",
    "yet",
    "moreover",
    "database",
    "equation",
    "vpc",
    "recessible",
    "one",
    "know",
    "designed",
    "vpc",
    "fixed",
    "ca",
    "resized",
    "equation",
    "amazon",
    "glacier",
    "glacier",
    "storage",
    "database",
    "right",
    "equation",
    "tie",
    "kind",
    "amazon",
    "rational",
    "database",
    "service",
    "amazon",
    "elastic",
    "cache",
    "aid",
    "database",
    "service",
    "elastic",
    "cache",
    "database",
    "actually",
    "helps",
    "database",
    "database",
    "amazon",
    "relational",
    "database",
    "one",
    "platform",
    "service",
    "one",
    "resized",
    "one",
    "used",
    "automate",
    "time",
    "consuming",
    "administrative",
    "tasks",
    "right",
    "let",
    "talk",
    "one",
    "following",
    "means",
    "accessing",
    "human",
    "researchers",
    "consultants",
    "help",
    "solve",
    "problem",
    "contractual",
    "temporary",
    "basis",
    "right",
    "let",
    "read",
    "question",
    "following",
    "means",
    "accessing",
    "human",
    "researchers",
    "consultant",
    "help",
    "solve",
    "problems",
    "contractual",
    "temporary",
    "basis",
    "like",
    "signing",
    "task",
    "hiring",
    "aws",
    "experts",
    "temporary",
    "job",
    "let",
    "try",
    "find",
    "kind",
    "service",
    "four",
    "services",
    "listed",
    "amazon",
    "elastic",
    "mapreduce",
    "mapreduce",
    "actually",
    "framework",
    "service",
    "makes",
    "easy",
    "cost",
    "effective",
    "analyze",
    "large",
    "amount",
    "data",
    "nothing",
    "accessing",
    "human",
    "researchers",
    "right",
    "let",
    "talk",
    "mechanical",
    "term",
    "web",
    "service",
    "provides",
    "human",
    "workforce",
    "definition",
    "example",
    "automation",
    "good",
    "everything",
    "automated",
    "something",
    "qualify",
    "automation",
    "repetitive",
    "task",
    "one",
    "time",
    "task",
    "ca",
    "automated",
    "time",
    "money",
    "would",
    "spending",
    "automation",
    "worth",
    "instead",
    "could",
    "done",
    "manually",
    "qualify",
    "automation",
    "anything",
    "requires",
    "intelligence",
    "right",
    "anything",
    "special",
    "case",
    "right",
    "automation",
    "repetitive",
    "task",
    "automation",
    "precise",
    "work",
    "repetitive",
    "task",
    "scenario",
    "know",
    "already",
    "executed",
    "new",
    "scenario",
    "requires",
    "uh",
    "appropriate",
    "addressing",
    "requires",
    "human",
    "thought",
    "could",
    "hire",
    "researchers",
    "consultants",
    "help",
    "solve",
    "problem",
    "using",
    "amazon",
    "mechanical",
    "turk",
    "two",
    "already",
    "equation",
    "dev",
    "pay",
    "actually",
    "payment",
    "system",
    "amazon",
    "authentication",
    "says",
    "authentication",
    "system",
    "right",
    "answer",
    "amazon",
    "mechanical",
    "turk",
    "right",
    "sounds",
    "interesting",
    "let",
    "look",
    "one",
    "service",
    "used",
    "make",
    "easy",
    "deploy",
    "manage",
    "scale",
    "containerized",
    "applications",
    "using",
    "kubernetes",
    "aws",
    "following",
    "aws",
    "service",
    "service",
    "deploy",
    "manage",
    "scale",
    "containerized",
    "applications",
    "deals",
    "containers",
    "also",
    "ability",
    "use",
    "kubernetes",
    "container",
    "orchestration",
    "service",
    "right",
    "first",
    "one",
    "amazon",
    "elastic",
    "container",
    "service",
    "kind",
    "looks",
    "like",
    "one",
    "name",
    "word",
    "relation",
    "looking",
    "elastic",
    "container",
    "service",
    "container",
    "service",
    "highly",
    "scalable",
    "high",
    "performance",
    "container",
    "orchestration",
    "service",
    "let",
    "look",
    "one",
    "aws",
    "batch",
    "service",
    "enables",
    "id",
    "professionals",
    "schedule",
    "execute",
    "batch",
    "processing",
    "mean",
    "name",
    "says",
    "meant",
    "batch",
    "processing",
    "elastic",
    "bean",
    "stock",
    "another",
    "service",
    "helps",
    "us",
    "deploy",
    "manage",
    "scale",
    "helps",
    "us",
    "easy",
    "two",
    "instances",
    "containerized",
    "uh",
    "instances",
    "equation",
    "would",
    "light",
    "scale",
    "good",
    "time",
    "elastic",
    "container",
    "service",
    "light",
    "sale",
    "light",
    "scale",
    "service",
    "called",
    "virtual",
    "private",
    "server",
    "without",
    "vpc",
    "called",
    "virtual",
    "private",
    "server",
    "comes",
    "predefined",
    "compute",
    "storage",
    "networking",
    "capacity",
    "actually",
    "server",
    "container",
    "right",
    "point",
    "also",
    "becomes",
    "equation",
    "amazon",
    "elastic",
    "container",
    "service",
    "one",
    "helps",
    "us",
    "easily",
    "deploy",
    "manage",
    "scale",
    "container",
    "services",
    "helps",
    "us",
    "orchestrate",
    "containers",
    "using",
    "kubernetes",
    "right",
    "one",
    "right",
    "service",
    "lets",
    "us",
    "run",
    "code",
    "without",
    "provisioning",
    "managing",
    "servers",
    "servers",
    "run",
    "code",
    "select",
    "correct",
    "service",
    "option",
    "right",
    "servers",
    "able",
    "run",
    "code",
    "amazon",
    "easy",
    "auto",
    "scaling",
    "easy",
    "auto",
    "scaling",
    "ec2",
    "elastic",
    "compute",
    "cloud",
    "server",
    "auto",
    "scaling",
    "service",
    "helps",
    "us",
    "achieve",
    "scaling",
    "server",
    "definition",
    "could",
    "equation",
    "aw",
    "lambda",
    "lambda",
    "service",
    "actually",
    "event",
    "driven",
    "serverless",
    "computing",
    "platform",
    "lambda",
    "runs",
    "code",
    "response",
    "event",
    "receives",
    "automatically",
    "manages",
    "compute",
    "resource",
    "required",
    "code",
    "long",
    "uploaded",
    "code",
    "correct",
    "set",
    "events",
    "correctly",
    "map",
    "code",
    "going",
    "run",
    "seamlessly",
    "lambda",
    "kind",
    "looks",
    "like",
    "could",
    "answer",
    "lambda",
    "runs",
    "code",
    "manage",
    "servers",
    "manages",
    "servers",
    "ca",
    "conclude",
    "two",
    "servers",
    "talk",
    "aws",
    "batch",
    "right",
    "batches",
    "service",
    "enables",
    "id",
    "professionals",
    "run",
    "batch",
    "job",
    "know",
    "inspector",
    "amazon",
    "inspector",
    "actually",
    "service",
    "helps",
    "us",
    "increase",
    "identify",
    "security",
    "issues",
    "align",
    "application",
    "compliance",
    "well",
    "requirement",
    "question",
    "requirement",
    "question",
    "run",
    "code",
    "without",
    "provisioning",
    "server",
    "without",
    "space",
    "confusion",
    "aws",
    "lambda",
    "service",
    "service",
    "runs",
    "code",
    "without",
    "provisioning",
    "managing",
    "services",
    "right",
    "right",
    "one",
    "would",
    "aws",
    "lambda",
    "second",
    "part",
    "aws",
    "interview",
    "questions",
    "watched",
    "first",
    "part",
    "yet",
    "please",
    "go",
    "back",
    "watch",
    "first",
    "part",
    "lot",
    "interesting",
    "questions",
    "better",
    "prepare",
    "interview",
    "right",
    "let",
    "get",
    "started",
    "environment",
    "lot",
    "automation",
    "infrastructure",
    "automation",
    "posted",
    "question",
    "add",
    "existing",
    "instance",
    "new",
    "auto",
    "scaling",
    "group",
    "taking",
    "instance",
    "away",
    "auto",
    "scaling",
    "group",
    "troubleshoot",
    "fix",
    "problem",
    "know",
    "look",
    "logs",
    "suspended",
    "auto",
    "scaling",
    "know",
    "might",
    "need",
    "instance",
    "auto",
    "scaling",
    "group",
    "going",
    "take",
    "part",
    "right",
    "auto",
    "scaling",
    "going",
    "count",
    "part",
    "straight",
    "uh",
    "procedure",
    "know",
    "remove",
    "know",
    "get",
    "automatically",
    "worked",
    "clients",
    "developers",
    "managing",
    "environment",
    "problems",
    "adding",
    "instance",
    "back",
    "auto",
    "scaling",
    "group",
    "know",
    "irrespective",
    "tried",
    "instance",
    "getting",
    "added",
    "auto",
    "scaling",
    "group",
    "whatever",
    "fixed",
    "provided",
    "whatever",
    "fix",
    "provided",
    "know",
    "getting",
    "encountered",
    "auto",
    "scaling",
    "group",
    "like",
    "said",
    "straight",
    "know",
    "click",
    "button",
    "procedure",
    "ways",
    "add",
    "existing",
    "instance",
    "uh",
    "auto",
    "scaling",
    "group",
    "steps",
    "need",
    "follow",
    "first",
    "one",
    "would",
    "ec2",
    "instance",
    "console",
    "right",
    "uh",
    "instance",
    "actions",
    "specific",
    "know",
    "option",
    "called",
    "attach",
    "auto",
    "scaling",
    "group",
    "right",
    "multiple",
    "auto",
    "scaling",
    "groups",
    "account",
    "region",
    "working",
    "going",
    "posted",
    "different",
    "auto",
    "scaling",
    "groups",
    "account",
    "let",
    "say",
    "five",
    "auto",
    "scaling",
    "groups",
    "five",
    "different",
    "application",
    "know",
    "going",
    "posted",
    "five",
    "different",
    "auto",
    "scaling",
    "groups",
    "would",
    "select",
    "auto",
    "scaling",
    "appropriate",
    "auto",
    "scaling",
    "group",
    "attach",
    "instance",
    "particular",
    "auto",
    "scaling",
    "group",
    "adding",
    "auto",
    "scaling",
    "group",
    "want",
    "change",
    "instance",
    "type",
    "possible",
    "well",
    "sometimes",
    "want",
    "add",
    "instance",
    "back",
    "auto",
    "scaling",
    "group",
    "would",
    "requirement",
    "change",
    "instance",
    "type",
    "better",
    "one",
    "better",
    "family",
    "better",
    "instance",
    "type",
    "could",
    "time",
    "completely",
    "added",
    "instance",
    "back",
    "auto",
    "scaling",
    "group",
    "actually",
    "seven",
    "step",
    "process",
    "adding",
    "instance",
    "back",
    "auto",
    "scaling",
    "group",
    "environment",
    "dealing",
    "migrating",
    "instance",
    "migrating",
    "application",
    "migrating",
    "instance",
    "migrating",
    "vm",
    "cloud",
    "know",
    "project",
    "going",
    "work",
    "deals",
    "lot",
    "migrations",
    "could",
    "posted",
    "question",
    "factors",
    "consider",
    "migrating",
    "amazon",
    "web",
    "services",
    "first",
    "one",
    "cost",
    "worth",
    "moving",
    "instance",
    "cloud",
    "given",
    "additional",
    "bills",
    "results",
    "features",
    "available",
    "cloud",
    "application",
    "going",
    "use",
    "moving",
    "cloud",
    "beneficial",
    "application",
    "first",
    "place",
    "know",
    "beneficial",
    "users",
    "using",
    "application",
    "first",
    "place",
    "factor",
    "think",
    "actually",
    "includes",
    "know",
    "cost",
    "infrastructure",
    "ability",
    "match",
    "demand",
    "supply",
    "transparency",
    "application",
    "high",
    "demand",
    "know",
    "going",
    "big",
    "loss",
    "application",
    "becomes",
    "unavailable",
    "time",
    "things",
    "needs",
    "considered",
    "move",
    "application",
    "cloud",
    "uh",
    "application",
    "application",
    "needs",
    "provisioned",
    "immediately",
    "urge",
    "urge",
    "provision",
    "application",
    "immediately",
    "something",
    "needs",
    "considered",
    "application",
    "requires",
    "go",
    "online",
    "application",
    "needs",
    "hit",
    "market",
    "immediately",
    "would",
    "need",
    "move",
    "cloud",
    "procuring",
    "buying",
    "infrastructure",
    "buying",
    "bandwidth",
    "buying",
    "switchboard",
    "know",
    "buying",
    "instance",
    "know",
    "buying",
    "softwares",
    "buying",
    "license",
    "related",
    "going",
    "take",
    "time",
    "least",
    "like",
    "two",
    "weeks",
    "bring",
    "server",
    "launch",
    "application",
    "right",
    "application",
    "wait",
    "know",
    "waiting",
    "means",
    "uh",
    "know",
    "workforce",
    "productivity",
    "loss",
    "would",
    "want",
    "immediately",
    "launch",
    "instances",
    "put",
    "application",
    "top",
    "case",
    "application",
    "type",
    "urge",
    "making",
    "application",
    "go",
    "online",
    "soon",
    "possible",
    "candidate",
    "moving",
    "cloud",
    "application",
    "software",
    "product",
    "launching",
    "requires",
    "hardware",
    "requires",
    "updated",
    "hardware",
    "time",
    "going",
    "possible",
    "premises",
    "try",
    "deal",
    "legacy",
    "infrastructure",
    "time",
    "premises",
    "cloud",
    "constantly",
    "upgrading",
    "hardwares",
    "keep",
    "going",
    "market",
    "constantly",
    "cloud",
    "providers",
    "constantly",
    "updating",
    "hardware",
    "want",
    "benefited",
    "application",
    "wants",
    "benefited",
    "constant",
    "upgrading",
    "hardwares",
    "making",
    "sure",
    "hardware",
    "latest",
    "possible",
    "software",
    "version",
    "licensing",
    "latest",
    "possible",
    "candidate",
    "moved",
    "cloud",
    "application",
    "want",
    "go",
    "risk",
    "application",
    "sensitive",
    "failures",
    "application",
    "much",
    "tagged",
    "revenue",
    "company",
    "want",
    "take",
    "chance",
    "know",
    "seeing",
    "application",
    "fail",
    "know",
    "seeing",
    "revenue",
    "drop",
    "candidate",
    "moving",
    "cloud",
    "business",
    "uh",
    "agility",
    "know",
    "moving",
    "cloud",
    "least",
    "half",
    "responsibility",
    "taken",
    "care",
    "provider",
    "case",
    "amazon",
    "least",
    "half",
    "responsibility",
    "taken",
    "care",
    "like",
    "hardware",
    "fails",
    "amazon",
    "makes",
    "sure",
    "fixing",
    "hardware",
    "immediately",
    "notifications",
    "know",
    "something",
    "happens",
    "know",
    "immediate",
    "notifications",
    "available",
    "set",
    "make",
    "aware",
    "something",
    "broken",
    "immediately",
    "jump",
    "fix",
    "see",
    "responsibility",
    "shared",
    "amazon",
    "us",
    "want",
    "get",
    "benefit",
    "application",
    "organization",
    "product",
    "launching",
    "needs",
    "moved",
    "cloud",
    "get",
    "benefit",
    "cloud",
    "question",
    "could",
    "get",
    "asked",
    "rto",
    "rpo",
    "aws",
    "essentially",
    "disaster",
    "recovery",
    "terms",
    "planning",
    "disaster",
    "recovery",
    "avoid",
    "planning",
    "disaster",
    "recovery",
    "without",
    "talking",
    "rto",
    "rpo",
    "rto",
    "rpo",
    "environment",
    "define",
    "rto",
    "define",
    "rpo",
    "general",
    "questions",
    "get",
    "asked",
    "rto",
    "recovery",
    "time",
    "objective",
    "rto",
    "stands",
    "maximum",
    "time",
    "company",
    "willing",
    "wait",
    "recovery",
    "happen",
    "recovery",
    "finish",
    "disaster",
    "strikes",
    "rto",
    "uh",
    "future",
    "right",
    "much",
    "time",
    "going",
    "take",
    "fix",
    "bring",
    "everything",
    "normal",
    "rto",
    "hand",
    "rpo",
    "recovery",
    "point",
    "objective",
    "maximum",
    "amount",
    "data",
    "laws",
    "company",
    "willing",
    "accept",
    "measured",
    "time",
    "rpo",
    "always",
    "refers",
    "backups",
    "number",
    "backups",
    "frequency",
    "backups",
    "right",
    "outage",
    "happens",
    "always",
    "go",
    "back",
    "latest",
    "backup",
    "right",
    "latest",
    "backup",
    "12",
    "hours",
    "lost",
    "12",
    "hours",
    "data",
    "data",
    "storage",
    "right",
    "rpo",
    "acceptable",
    "amount",
    "company",
    "wants",
    "less",
    "rpo",
    "rpo",
    "1r",
    "planning",
    "taking",
    "backups",
    "every",
    "one",
    "hour",
    "rpo",
    "12",
    "hours",
    "planning",
    "taking",
    "backups",
    "every",
    "12",
    "hours",
    "rpo",
    "rto",
    "know",
    "helps",
    "disaster",
    "recovery",
    "fourth",
    "question",
    "could",
    "get",
    "asked",
    "like",
    "transfer",
    "huge",
    "amount",
    "data",
    "best",
    "option",
    "among",
    "snowball",
    "snowball",
    "edge",
    "snowmobile",
    "question",
    "gets",
    "asked",
    "company",
    "dealing",
    "lot",
    "data",
    "transfer",
    "cloud",
    "company",
    "dealing",
    "migrating",
    "data",
    "cloud",
    "talking",
    "huge",
    "amount",
    "data",
    "data",
    "petabytes",
    "snowball",
    "snowball",
    "series",
    "deals",
    "data",
    "migrations",
    "three",
    "options",
    "available",
    "aws",
    "snowball",
    "data",
    "transport",
    "solution",
    "moving",
    "high",
    "volume",
    "data",
    "specified",
    "aws",
    "region",
    "hand",
    "aws",
    "snowball",
    "edge",
    "additional",
    "computing",
    "functions",
    "snowball",
    "simple",
    "storage",
    "movement",
    "data",
    "snowball",
    "edge",
    "compute",
    "function",
    "attached",
    "snow",
    "mobile",
    "hand",
    "exabyte",
    "scale",
    "migration",
    "service",
    "allows",
    "us",
    "transfer",
    "data",
    "100",
    "petabytes",
    "like",
    "100",
    "000",
    "terabytes",
    "depending",
    "size",
    "data",
    "want",
    "transfer",
    "data",
    "center",
    "cloud",
    "hire",
    "rent",
    "three",
    "services",
    "let",
    "talk",
    "cloud",
    "formation",
    "questions",
    "classic",
    "question",
    "aws",
    "cloud",
    "formation",
    "different",
    "aws",
    "elastic",
    "bean",
    "stock",
    "know",
    "surface",
    "look",
    "like",
    "know",
    "go",
    "console",
    "provisioning",
    "resources",
    "know",
    "go",
    "cli",
    "provision",
    "resources",
    "provision",
    "resources",
    "click",
    "button",
    "right",
    "underneath",
    "actually",
    "different",
    "services",
    "support",
    "aid",
    "different",
    "services",
    "knowing",
    "going",
    "help",
    "understand",
    "question",
    "lot",
    "better",
    "let",
    "talk",
    "difference",
    "explaining",
    "interviewer",
    "panelist",
    "cloud",
    "formation",
    "cloud",
    "formation",
    "service",
    "helps",
    "describe",
    "provision",
    "infrastructure",
    "resources",
    "cloud",
    "environment",
    "hand",
    "elastic",
    "bean",
    "stock",
    "provides",
    "simple",
    "environment",
    "deploy",
    "run",
    "application",
    "cloud",
    "formation",
    "gives",
    "us",
    "infrastructure",
    "elastic",
    "beanstalk",
    "gives",
    "us",
    "small",
    "contained",
    "environment",
    "run",
    "application",
    "cloud",
    "formation",
    "supports",
    "infrastructure",
    "needs",
    "many",
    "different",
    "types",
    "application",
    "like",
    "enterprise",
    "application",
    "legacy",
    "applications",
    "new",
    "modern",
    "application",
    "want",
    "cloud",
    "hand",
    "elastic",
    "bean",
    "stock",
    "combination",
    "developer",
    "tools",
    "tools",
    "helps",
    "manage",
    "life",
    "cycle",
    "single",
    "application",
    "cloud",
    "formation",
    "short",
    "managing",
    "infrastructure",
    "whole",
    "elastic",
    "bean",
    "stock",
    "short",
    "managing",
    "running",
    "application",
    "cloud",
    "company",
    "getting",
    "hired",
    "using",
    "uh",
    "cloud",
    "formation",
    "manage",
    "infrastructure",
    "using",
    "using",
    "infrastructure",
    "infrastructure",
    "code",
    "services",
    "would",
    "definitely",
    "face",
    "question",
    "elements",
    "aws",
    "cloud",
    "formation",
    "template",
    "uh",
    "four",
    "five",
    "basic",
    "uh",
    "elements",
    "right",
    "template",
    "form",
    "json",
    "yaml",
    "format",
    "right",
    "parameters",
    "outputs",
    "data",
    "resources",
    "format",
    "format",
    "version",
    "file",
    "format",
    "version",
    "cloud",
    "formation",
    "template",
    "parameter",
    "nothing",
    "actually",
    "lets",
    "specify",
    "type",
    "ec2",
    "instance",
    "want",
    "type",
    "rds",
    "want",
    "right",
    "ec2",
    "umbrella",
    "rds",
    "umbrella",
    "parameters",
    "within",
    "ec2",
    "parameters",
    "within",
    "rds",
    "specific",
    "details",
    "ec2",
    "specific",
    "details",
    "rds",
    "service",
    "parameters",
    "cloud",
    "formation",
    "template",
    "element",
    "cloud",
    "formation",
    "template",
    "outputs",
    "example",
    "want",
    "output",
    "name",
    "s3",
    "bucket",
    "created",
    "want",
    "output",
    "name",
    "ec2",
    "instance",
    "want",
    "output",
    "name",
    "resources",
    "created",
    "instead",
    "looking",
    "template",
    "instead",
    "know",
    "navigating",
    "console",
    "finding",
    "name",
    "resource",
    "actually",
    "outputted",
    "result",
    "section",
    "simply",
    "go",
    "look",
    "resources",
    "created",
    "template",
    "output",
    "section",
    "output",
    "values",
    "output",
    "cloud",
    "formation",
    "template",
    "resources",
    "resources",
    "nothing",
    "defines",
    "cloud",
    "components",
    "cloud",
    "resources",
    "created",
    "cloud",
    "formation",
    "template",
    "ec2",
    "resource",
    "rds",
    "resource",
    "s3",
    "bucket",
    "resource",
    "elastic",
    "load",
    "balancer",
    "resource",
    "gateway",
    "resource",
    "vpc",
    "reserve",
    "see",
    "components",
    "resources",
    "resource",
    "section",
    "cloud",
    "formation",
    "defines",
    "aws",
    "cloud",
    "resources",
    "created",
    "cloud",
    "formation",
    "template",
    "version",
    "version",
    "actually",
    "identifies",
    "capabilities",
    "template",
    "know",
    "need",
    "make",
    "sure",
    "latest",
    "version",
    "type",
    "latest",
    "version",
    "zero",
    "nine",
    "zero",
    "nine",
    "uh",
    "2010",
    "latest",
    "version",
    "number",
    "able",
    "find",
    "top",
    "cloud",
    "formation",
    "template",
    "version",
    "number",
    "defines",
    "capabilities",
    "cloud",
    "formation",
    "template",
    "need",
    "make",
    "sure",
    "latest",
    "time",
    "still",
    "talking",
    "cloud",
    "formation",
    "another",
    "classic",
    "question",
    "happens",
    "one",
    "resource",
    "stack",
    "created",
    "successfully",
    "well",
    "resource",
    "stack",
    "created",
    "cloud",
    "formation",
    "automatically",
    "rolls",
    "back",
    "terminates",
    "resources",
    "created",
    "using",
    "cloud",
    "formation",
    "template",
    "whatever",
    "resources",
    "created",
    "cloud",
    "formation",
    "template",
    "beginning",
    "let",
    "say",
    "created",
    "like",
    "10",
    "resources",
    "11th",
    "resource",
    "failing",
    "cloud",
    "formation",
    "roll",
    "back",
    "delete",
    "10",
    "resources",
    "created",
    "previously",
    "useful",
    "uh",
    "cloud",
    "formation",
    "know",
    "go",
    "forward",
    "cloud",
    "formation",
    "create",
    "additional",
    "resources",
    "reached",
    "elastic",
    "ip",
    "limits",
    "elastic",
    "ip",
    "limit",
    "per",
    "region",
    "five",
    "right",
    "already",
    "used",
    "five",
    "ips",
    "cloud",
    "formation",
    "trying",
    "buy",
    "three",
    "ips",
    "know",
    "hit",
    "soft",
    "limit",
    "till",
    "fix",
    "amazon",
    "cloudformation",
    "able",
    "know",
    "launch",
    "additional",
    "know",
    "resources",
    "additional",
    "ips",
    "going",
    "cancel",
    "roll",
    "back",
    "everything",
    "true",
    "missing",
    "ec2",
    "ami",
    "well",
    "ami",
    "included",
    "template",
    "ami",
    "actually",
    "present",
    "cloud",
    "formation",
    "going",
    "search",
    "mi",
    "present",
    "going",
    "roll",
    "back",
    "delete",
    "resources",
    "created",
    "cloud",
    "formation",
    "simply",
    "rolls",
    "back",
    "resources",
    "created",
    "mean",
    "sees",
    "failure",
    "would",
    "simply",
    "roll",
    "back",
    "resources",
    "created",
    "feature",
    "actually",
    "simplifies",
    "system",
    "administration",
    "layered",
    "solutions",
    "built",
    "top",
    "aws",
    "cloud",
    "formation",
    "point",
    "know",
    "orphan",
    "resources",
    "environment",
    "know",
    "something",
    "work",
    "know",
    "cloud",
    "formation",
    "executed",
    "orphan",
    "resources",
    "account",
    "point",
    "sure",
    "cloud",
    "formation",
    "launching",
    "resource",
    "going",
    "fail",
    "going",
    "come",
    "back",
    "delete",
    "resources",
    "created",
    "orphan",
    "resources",
    "account",
    "let",
    "talk",
    "questions",
    "elastic",
    "block",
    "store",
    "environment",
    "deals",
    "lot",
    "automation",
    "could",
    "thrown",
    "question",
    "automate",
    "easy",
    "backup",
    "using",
    "ebs",
    "actually",
    "six",
    "step",
    "process",
    "automate",
    "ec2",
    "backups",
    "need",
    "write",
    "script",
    "automate",
    "steps",
    "using",
    "aws",
    "api",
    "steps",
    "found",
    "scripts",
    "first",
    "get",
    "list",
    "instances",
    "script",
    "writing",
    "able",
    "connect",
    "aws",
    "using",
    "api",
    "list",
    "amazon",
    "abs",
    "volumes",
    "attached",
    "locally",
    "instance",
    "needs",
    "list",
    "snapshots",
    "volume",
    "make",
    "sure",
    "snapshots",
    "present",
    "needs",
    "assign",
    "retention",
    "period",
    "snapshot",
    "time",
    "snapshots",
    "going",
    "invalid",
    "right",
    "10",
    "latest",
    "snapshots",
    "snapshot",
    "taken",
    "10",
    "becomes",
    "invalid",
    "captured",
    "latest",
    "10",
    "snapshot",
    "coverage",
    "enough",
    "fifth",
    "point",
    "create",
    "snapshot",
    "volume",
    "create",
    "new",
    "snapshot",
    "volume",
    "delete",
    "old",
    "snapshot",
    "anytime",
    "new",
    "snapshot",
    "gets",
    "created",
    "oldest",
    "snapshot",
    "list",
    "needs",
    "go",
    "away",
    "need",
    "include",
    "options",
    "need",
    "include",
    "scripts",
    "script",
    "lines",
    "script",
    "make",
    "sure",
    "deleting",
    "older",
    "snapshots",
    "older",
    "retention",
    "period",
    "mentioning",
    "another",
    "question",
    "could",
    "see",
    "interview",
    "written",
    "interview",
    "beat",
    "online",
    "interview",
    "beat",
    "telephonic",
    "interview",
    "difference",
    "ebs",
    "instant",
    "store",
    "let",
    "talk",
    "ebs",
    "first",
    "ebs",
    "kind",
    "permanent",
    "storage",
    "data",
    "restored",
    "later",
    "point",
    "save",
    "data",
    "ebs",
    "data",
    "lives",
    "even",
    "lifetime",
    "ec2",
    "instance",
    "example",
    "stop",
    "instance",
    "data",
    "still",
    "going",
    "present",
    "ebs",
    "move",
    "ebs",
    "one",
    "instance",
    "another",
    "instance",
    "data",
    "simply",
    "going",
    "present",
    "abs",
    "kind",
    "permanent",
    "storage",
    "compared",
    "instance",
    "hand",
    "instance",
    "store",
    "temporary",
    "storage",
    "storage",
    "actually",
    "physically",
    "attached",
    "host",
    "machine",
    "ebs",
    "external",
    "storage",
    "instant",
    "store",
    "locally",
    "attached",
    "instance",
    "locally",
    "attached",
    "host",
    "machine",
    "detach",
    "instant",
    "store",
    "one",
    "instance",
    "attach",
    "another",
    "eba",
    "big",
    "difference",
    "one",
    "permanent",
    "data",
    "another",
    "one",
    "ebs",
    "permanent",
    "instant",
    "store",
    "volatile",
    "data",
    "instant",
    "store",
    "instant",
    "store",
    "wo",
    "able",
    "detach",
    "storage",
    "attach",
    "another",
    "instance",
    "another",
    "feature",
    "instant",
    "store",
    "data",
    "instant",
    "store",
    "lost",
    "disk",
    "fails",
    "instance",
    "stopped",
    "terminated",
    "instant",
    "store",
    "good",
    "storing",
    "cache",
    "data",
    "want",
    "store",
    "permanent",
    "data",
    "think",
    "using",
    "ebs",
    "instant",
    "store",
    "talking",
    "storage",
    "lines",
    "another",
    "classic",
    "question",
    "take",
    "backups",
    "efs",
    "like",
    "ebs",
    "take",
    "backup",
    "take",
    "backup",
    "answer",
    "yes",
    "take",
    "efs",
    "efs",
    "backup",
    "solution",
    "efs",
    "support",
    "snapshot",
    "like",
    "ebs",
    "efs",
    "support",
    "snapshot",
    "snapshot",
    "option",
    "efs",
    "elastic",
    "file",
    "system",
    "right",
    "take",
    "backup",
    "one",
    "efs",
    "another",
    "efs",
    "backup",
    "solution",
    "recover",
    "unintended",
    "changes",
    "deletions",
    "efs",
    "automated",
    "data",
    "store",
    "efs",
    "automatically",
    "replicated",
    "another",
    "efs",
    "efs",
    "goes",
    "gets",
    "deleted",
    "data",
    "gets",
    "deleted",
    "know",
    "whole",
    "ef",
    "reason",
    "interrupted",
    "deleted",
    "recover",
    "data",
    "use",
    "efs",
    "bring",
    "application",
    "consistency",
    "achieve",
    "configuration",
    "cycle",
    "series",
    "steps",
    "involved",
    "achieve",
    "efs",
    "efs",
    "backup",
    "first",
    "thing",
    "sign",
    "aws",
    "management",
    "console",
    "efs",
    "click",
    "efs",
    "efs",
    "restore",
    "button",
    "services",
    "list",
    "use",
    "region",
    "selector",
    "console",
    "navigation",
    "bar",
    "select",
    "actual",
    "region",
    "want",
    "work",
    "ensure",
    "selected",
    "right",
    "template",
    "know",
    "templates",
    "would",
    "know",
    "efs",
    "efs",
    "backup",
    "granular",
    "backups",
    "incremental",
    "backups",
    "right",
    "templates",
    "kind",
    "backups",
    "want",
    "take",
    "want",
    "take",
    "grant",
    "alert",
    "want",
    "take",
    "increment",
    "backups",
    "stuff",
    "like",
    "create",
    "name",
    "solution",
    "kind",
    "backup",
    "created",
    "finally",
    "review",
    "configurations",
    "done",
    "click",
    "save",
    "point",
    "onwards",
    "data",
    "going",
    "copied",
    "point",
    "onwards",
    "additional",
    "data",
    "put",
    "going",
    "copy",
    "replicate",
    "efs",
    "efs",
    "backup",
    "another",
    "classic",
    "question",
    "companies",
    "deals",
    "data",
    "management",
    "easy",
    "options",
    "create",
    "snapshots",
    "deleting",
    "snapshots",
    "always",
    "know",
    "click",
    "button",
    "single",
    "step",
    "configuration",
    "might",
    "facing",
    "question",
    "like",
    "auto",
    "delete",
    "old",
    "snapshots",
    "procedure",
    "like",
    "best",
    "practice",
    "take",
    "snapshots",
    "ebs",
    "volume",
    "s3",
    "snapshots",
    "get",
    "stored",
    "s3",
    "know",
    "use",
    "aws",
    "ops",
    "automator",
    "automatically",
    "handle",
    "snapshots",
    "ops",
    "automator",
    "service",
    "allows",
    "us",
    "create",
    "copy",
    "delete",
    "ebs",
    "snapshots",
    "cloud",
    "formation",
    "templates",
    "available",
    "aws",
    "ops",
    "automator",
    "automator",
    "template",
    "scan",
    "environment",
    "would",
    "take",
    "snapshots",
    "would",
    "know",
    "copy",
    "snapshot",
    "one",
    "region",
    "another",
    "region",
    "want",
    "know",
    "setting",
    "dr",
    "environment",
    "based",
    "retention",
    "period",
    "create",
    "going",
    "delete",
    "snapshots",
    "older",
    "retention",
    "period",
    "life",
    "managing",
    "snapshot",
    "made",
    "lot",
    "easier",
    "ops",
    "automator",
    "cloudformation",
    "template",
    "moving",
    "questions",
    "elastic",
    "load",
    "balancer",
    "could",
    "uh",
    "question",
    "interview",
    "different",
    "types",
    "load",
    "balancers",
    "aws",
    "use",
    "case",
    "difference",
    "speak",
    "three",
    "types",
    "load",
    "balancers",
    "available",
    "aws",
    "first",
    "one",
    "application",
    "load",
    "balancer",
    "like",
    "name",
    "says",
    "application",
    "load",
    "balancer",
    "works",
    "application",
    "layer",
    "deals",
    "http",
    "https",
    "request",
    "also",
    "supports",
    "part",
    "based",
    "routing",
    "example",
    "slash",
    "webpage",
    "another",
    "website",
    "going",
    "direct",
    "path",
    "based",
    "slash",
    "value",
    "give",
    "urls",
    "path",
    "based",
    "routing",
    "supports",
    "support",
    "port",
    "based",
    "colon",
    "8080",
    "colon",
    "8081",
    "colon",
    "8090",
    "know",
    "based",
    "port",
    "also",
    "take",
    "routing",
    "decision",
    "application",
    "load",
    "balancer",
    "hand",
    "network",
    "load",
    "balancer",
    "network",
    "load",
    "balancer",
    "makes",
    "routing",
    "decisions",
    "transport",
    "level",
    "faster",
    "less",
    "thing",
    "work",
    "works",
    "lower",
    "osi",
    "layer",
    "works",
    "lower",
    "layer",
    "less",
    "information",
    "work",
    "compared",
    "application",
    "layer",
    "comparatively",
    "lot",
    "faster",
    "handles",
    "millions",
    "requests",
    "per",
    "second",
    "load",
    "balancer",
    "receives",
    "connection",
    "selects",
    "target",
    "group",
    "default",
    "rule",
    "using",
    "flow",
    "hash",
    "routing",
    "algorithm",
    "simple",
    "routing",
    "right",
    "routing",
    "simple",
    "routing",
    "faster",
    "classic",
    "load",
    "balancer",
    "kind",
    "expiring",
    "speak",
    "amazon",
    "discouraging",
    "people",
    "using",
    "classic",
    "load",
    "balancer",
    "companies",
    "still",
    "using",
    "classic",
    "load",
    "balancer",
    "ones",
    "first",
    "one",
    "step",
    "amazon",
    "classic",
    "load",
    "balancer",
    "first",
    "load",
    "balancer",
    "load",
    "balancer",
    "available",
    "point",
    "supports",
    "http",
    "https",
    "tcp",
    "ssl",
    "protocol",
    "fixed",
    "relationship",
    "load",
    "balance",
    "report",
    "container",
    "port",
    "initially",
    "classic",
    "load",
    "balancer",
    "um",
    "point",
    "amazon",
    "said",
    "instead",
    "one",
    "load",
    "balancer",
    "address",
    "type",
    "traffic",
    "going",
    "two",
    "load",
    "balances",
    "called",
    "child",
    "classic",
    "two",
    "load",
    "balancer",
    "one",
    "going",
    "specifically",
    "address",
    "application",
    "requirement",
    "one",
    "going",
    "specifically",
    "address",
    "network",
    "requirement",
    "let",
    "call",
    "application",
    "load",
    "balancer",
    "network",
    "load",
    "balancer",
    "two",
    "different",
    "load",
    "balancers",
    "talking",
    "load",
    "balancer",
    "another",
    "classic",
    "question",
    "could",
    "different",
    "uses",
    "various",
    "load",
    "balancer",
    "aws",
    "elastic",
    "load",
    "balancing",
    "three",
    "types",
    "load",
    "balancer",
    "spoke",
    "application",
    "load",
    "balancer",
    "used",
    "need",
    "flexible",
    "application",
    "management",
    "tls",
    "termination",
    "network",
    "load",
    "balancer",
    "require",
    "extreme",
    "performance",
    "load",
    "balancing",
    "happen",
    "based",
    "static",
    "ips",
    "application",
    "classic",
    "load",
    "balancer",
    "old",
    "load",
    "balancer",
    "people",
    "still",
    "running",
    "environment",
    "ec2",
    "classic",
    "network",
    "older",
    "version",
    "vpc",
    "present",
    "vpc",
    "created",
    "easy",
    "classic",
    "network",
    "present",
    "ec2",
    "created",
    "three",
    "types",
    "use",
    "cases",
    "let",
    "talk",
    "security",
    "related",
    "questions",
    "would",
    "face",
    "interview",
    "talking",
    "security",
    "firewall",
    "aws",
    "avoid",
    "discussion",
    "talking",
    "waff",
    "web",
    "application",
    "firewall",
    "would",
    "definitely",
    "see",
    "situation",
    "asked",
    "use",
    "aws",
    "vaf",
    "monitoring",
    "aws",
    "applications",
    "waff",
    "web",
    "application",
    "firewall",
    "protects",
    "web",
    "application",
    "common",
    "web",
    "exploits",
    "vaf",
    "helps",
    "us",
    "control",
    "traffic",
    "source",
    "application",
    "allowed",
    "block",
    "traffic",
    "certain",
    "source",
    "source",
    "traffic",
    "certain",
    "source",
    "allowed",
    "blocked",
    "application",
    "waff",
    "also",
    "create",
    "custom",
    "rules",
    "blocks",
    "common",
    "attack",
    "patterns",
    "know",
    "banking",
    "application",
    "certain",
    "type",
    "attacks",
    "simple",
    "data",
    "management",
    "data",
    "storage",
    "application",
    "mean",
    "content",
    "management",
    "application",
    "separate",
    "type",
    "attack",
    "based",
    "application",
    "type",
    "identify",
    "pattern",
    "create",
    "rules",
    "would",
    "actually",
    "block",
    "attack",
    "based",
    "rule",
    "create",
    "waff",
    "used",
    "three",
    "cases",
    "know",
    "first",
    "one",
    "allow",
    "requests",
    "block",
    "request",
    "count",
    "requests",
    "new",
    "policy",
    "also",
    "monitoring",
    "management",
    "service",
    "actually",
    "counts",
    "policies",
    "counts",
    "requests",
    "matches",
    "particular",
    "policy",
    "create",
    "characteristics",
    "mention",
    "awsof",
    "origin",
    "ips",
    "strings",
    "appear",
    "request",
    "allow",
    "block",
    "based",
    "origin",
    "ip",
    "allow",
    "block",
    "based",
    "strings",
    "appear",
    "request",
    "allow",
    "block",
    "count",
    "based",
    "origin",
    "country",
    "length",
    "request",
    "yeah",
    "block",
    "count",
    "presence",
    "malicious",
    "scripts",
    "connection",
    "count",
    "request",
    "headers",
    "allow",
    "block",
    "certain",
    "request",
    "header",
    "count",
    "presence",
    "malicious",
    "sql",
    "code",
    "connection",
    "get",
    "want",
    "reach",
    "application",
    "still",
    "talking",
    "security",
    "different",
    "aws",
    "im",
    "categories",
    "control",
    "using",
    "aws",
    "iam",
    "following",
    "one",
    "create",
    "manage",
    "im",
    "users",
    "user",
    "database",
    "gets",
    "bigger",
    "bigger",
    "create",
    "manage",
    "groups",
    "im",
    "use",
    "manage",
    "security",
    "credentials",
    "kind",
    "setting",
    "complexity",
    "password",
    "know",
    "setting",
    "additional",
    "authentications",
    "know",
    "like",
    "mfa",
    "uh",
    "know",
    "rotating",
    "passwords",
    "know",
    "resetting",
    "password",
    "things",
    "could",
    "iam",
    "finally",
    "create",
    "policies",
    "actually",
    "grants",
    "access",
    "aws",
    "services",
    "resources",
    "another",
    "question",
    "see",
    "policies",
    "set",
    "users",
    "password",
    "policies",
    "set",
    "user",
    "password",
    "minimum",
    "length",
    "know",
    "complexity",
    "password",
    "least",
    "one",
    "number",
    "one",
    "special",
    "characters",
    "password",
    "one",
    "requirement",
    "specific",
    "character",
    "types",
    "including",
    "know",
    "uppercase",
    "lowercase",
    "number",
    "characters",
    "becomes",
    "hard",
    "somebody",
    "else",
    "guess",
    "password",
    "would",
    "try",
    "hack",
    "set",
    "length",
    "password",
    "set",
    "complexity",
    "password",
    "set",
    "automatic",
    "expiration",
    "password",
    "certain",
    "time",
    "user",
    "forced",
    "create",
    "new",
    "password",
    "password",
    "still",
    "old",
    "easy",
    "guess",
    "environment",
    "also",
    "set",
    "settings",
    "like",
    "user",
    "contact",
    "admin",
    "mean",
    "password",
    "expire",
    "know",
    "get",
    "hold",
    "user",
    "setting",
    "password",
    "good",
    "complexity",
    "meeting",
    "company",
    "standards",
    "things",
    "control",
    "set",
    "users",
    "users",
    "setting",
    "recreating",
    "password",
    "another",
    "question",
    "could",
    "posted",
    "interview",
    "understand",
    "understanding",
    "iem",
    "difference",
    "iem",
    "role",
    "im",
    "user",
    "let",
    "talk",
    "iem",
    "user",
    "let",
    "start",
    "small",
    "go",
    "big",
    "let",
    "start",
    "simple",
    "talk",
    "complex",
    "one",
    "im",
    "user",
    "permanent",
    "long",
    "term",
    "credential",
    "used",
    "interact",
    "directly",
    "aws",
    "services",
    "hand",
    "iem",
    "role",
    "iem",
    "entity",
    "defines",
    "set",
    "permissions",
    "making",
    "aws",
    "service",
    "request",
    "im",
    "user",
    "permanent",
    "credential",
    "role",
    "temporary",
    "credentials",
    "iem",
    "user",
    "full",
    "access",
    "aws",
    "iem",
    "functionalities",
    "role",
    "trusted",
    "entities",
    "iem",
    "users",
    "application",
    "aws",
    "services",
    "assume",
    "role",
    "im",
    "user",
    "given",
    "permission",
    "know",
    "sticks",
    "within",
    "iem",
    "user",
    "roles",
    "give",
    "permissions",
    "applications",
    "give",
    "permissions",
    "users",
    "account",
    "different",
    "account",
    "corporate",
    "id",
    "give",
    "permissions",
    "ec2",
    "s3",
    "rds",
    "vpc",
    "lot",
    "role",
    "wide",
    "im",
    "user",
    "wide",
    "know",
    "constrained",
    "user",
    "let",
    "talk",
    "managed",
    "policies",
    "aws",
    "managed",
    "policies",
    "two",
    "types",
    "know",
    "customer",
    "managed",
    "amazon",
    "managed",
    "manage",
    "policies",
    "resources",
    "express",
    "permissions",
    "using",
    "iam",
    "policy",
    "language",
    "create",
    "policies",
    "edit",
    "manage",
    "manage",
    "separately",
    "im",
    "user",
    "group",
    "roles",
    "attached",
    "something",
    "managed",
    "policies",
    "customer",
    "managed",
    "update",
    "policy",
    "one",
    "place",
    "permissions",
    "automatically",
    "extend",
    "attached",
    "entries",
    "like",
    "three",
    "services",
    "four",
    "services",
    "point",
    "particular",
    "policy",
    "edit",
    "particular",
    "policy",
    "gon",
    "na",
    "reflect",
    "three",
    "four",
    "services",
    "anything",
    "allow",
    "going",
    "allowed",
    "four",
    "services",
    "anything",
    "denied",
    "going",
    "denied",
    "uh",
    "four",
    "services",
    "imagine",
    "would",
    "without",
    "managed",
    "policy",
    "go",
    "specifically",
    "allow",
    "deny",
    "different",
    "instances",
    "four",
    "five",
    "times",
    "depending",
    "number",
    "instances",
    "like",
    "said",
    "two",
    "types",
    "managed",
    "policies",
    "one",
    "managed",
    "us",
    "customer",
    "managed",
    "policies",
    "managed",
    "aws",
    "aws",
    "managed",
    "policy",
    "question",
    "give",
    "example",
    "iem",
    "policy",
    "policy",
    "summary",
    "actually",
    "test",
    "aws",
    "console",
    "answer",
    "question",
    "look",
    "following",
    "policy",
    "policy",
    "used",
    "grant",
    "access",
    "add",
    "update",
    "delete",
    "objects",
    "specific",
    "folder",
    "case",
    "name",
    "folder",
    "example",
    "folder",
    "present",
    "bucket",
    "called",
    "example",
    "bucket",
    "iam",
    "policy",
    "hand",
    "policy",
    "summary",
    "list",
    "access",
    "level",
    "resource",
    "conditions",
    "service",
    "defined",
    "policy",
    "iam",
    "policy",
    "one",
    "particular",
    "resource",
    "policy",
    "summary",
    "multiple",
    "resources",
    "iem",
    "policy",
    "talking",
    "s3",
    "bucket",
    "one",
    "particular",
    "s3",
    "bucket",
    "talks",
    "cloud",
    "formation",
    "template",
    "cloud",
    "watch",
    "logs",
    "ec2",
    "elastic",
    "bean",
    "stock",
    "services",
    "summary",
    "summary",
    "resources",
    "permissions",
    "policies",
    "attached",
    "policy",
    "summary",
    "another",
    "question",
    "could",
    "like",
    "use",
    "case",
    "iam",
    "im",
    "help",
    "business",
    "two",
    "important",
    "primary",
    "work",
    "iam",
    "help",
    "us",
    "manage",
    "iam",
    "users",
    "access",
    "provides",
    "secure",
    "access",
    "multiple",
    "users",
    "appropriate",
    "aws",
    "resources",
    "one",
    "second",
    "thing",
    "manage",
    "access",
    "federated",
    "users",
    "federated",
    "users",
    "users",
    "iam",
    "actually",
    "allow",
    "provide",
    "secured",
    "access",
    "resources",
    "aws",
    "account",
    "employees",
    "without",
    "im",
    "user",
    "could",
    "authenticated",
    "using",
    "active",
    "directory",
    "could",
    "authenticated",
    "using",
    "facebook",
    "credential",
    "google",
    "credential",
    "amazon",
    "credential",
    "couple",
    "credentials",
    "third",
    "party",
    "identity",
    "management",
    "right",
    "could",
    "actually",
    "trust",
    "could",
    "give",
    "access",
    "account",
    "based",
    "trust",
    "relationship",
    "built",
    "identity",
    "systems",
    "right",
    "two",
    "things",
    "one",
    "manage",
    "users",
    "access",
    "manage",
    "iam",
    "user",
    "access",
    "aws",
    "environment",
    "second",
    "manage",
    "access",
    "federated",
    "users",
    "users",
    "importantly",
    "im",
    "free",
    "service",
    "charged",
    "use",
    "resources",
    "im",
    "username",
    "password",
    "create",
    "right",
    "let",
    "talk",
    "questions",
    "route",
    "one",
    "classic",
    "question",
    "could",
    "asked",
    "interview",
    "difference",
    "latency",
    "based",
    "routing",
    "geodns",
    "jio",
    "based",
    "dns",
    "routing",
    "jio",
    "based",
    "dns",
    "routing",
    "takes",
    "routing",
    "decisions",
    "basis",
    "geographic",
    "location",
    "request",
    "hand",
    "latency",
    "based",
    "routing",
    "utilizes",
    "latency",
    "measurements",
    "networks",
    "data",
    "centers",
    "latency",
    "based",
    "routing",
    "used",
    "want",
    "give",
    "customers",
    "lowest",
    "latency",
    "possible",
    "would",
    "use",
    "latency",
    "based",
    "routing",
    "hand",
    "geo",
    "based",
    "routing",
    "want",
    "direct",
    "customers",
    "different",
    "websites",
    "based",
    "country",
    "browsing",
    "know",
    "could",
    "know",
    "two",
    "different",
    "three",
    "different",
    "websites",
    "url",
    "know",
    "take",
    "amazon",
    "shopping",
    "website",
    "example",
    "go",
    "us",
    "directs",
    "us",
    "us",
    "web",
    "page",
    "products",
    "different",
    "currency",
    "different",
    "right",
    "flag",
    "couple",
    "advertisements",
    "shows",
    "different",
    "go",
    "india",
    "gets",
    "directed",
    "indian",
    "site",
    "currency",
    "product",
    "advertisements",
    "different",
    "right",
    "depending",
    "country",
    "trying",
    "browse",
    "want",
    "direct",
    "customers",
    "two",
    "three",
    "different",
    "websites",
    "would",
    "use",
    "routing",
    "another",
    "use",
    "case",
    "geo",
    "based",
    "routing",
    "compliance",
    "handle",
    "dns",
    "requires",
    "sorry",
    "handle",
    "requests",
    "know",
    "country",
    "within",
    "country",
    "would",
    "routing",
    "would",
    "direct",
    "customer",
    "server",
    "another",
    "country",
    "right",
    "would",
    "direct",
    "customer",
    "server",
    "local",
    "another",
    "use",
    "case",
    "jio",
    "based",
    "routing",
    "like",
    "said",
    "latency",
    "based",
    "routing",
    "whole",
    "goal",
    "aim",
    "achieve",
    "minimum",
    "end",
    "user",
    "latency",
    "hired",
    "architect",
    "role",
    "requires",
    "working",
    "lot",
    "dns",
    "could",
    "posted",
    "question",
    "difference",
    "domain",
    "hosted",
    "zone",
    "domain",
    "actually",
    "collection",
    "data",
    "describing",
    "administrative",
    "technical",
    "unit",
    "internet",
    "right",
    "example",
    "know",
    "actually",
    "domain",
    "hand",
    "hosted",
    "zone",
    "actually",
    "container",
    "holds",
    "information",
    "want",
    "route",
    "traffic",
    "internet",
    "specific",
    "domain",
    "example",
    "hosted",
    "zone",
    "whereas",
    "domain",
    "words",
    "hosted",
    "zone",
    "would",
    "see",
    "domain",
    "name",
    "plus",
    "prefix",
    "lms",
    "prefix",
    "ftp",
    "prefix",
    "prefix",
    "would",
    "see",
    "prefix",
    "hosted",
    "zones",
    "another",
    "question",
    "another",
    "classic",
    "question",
    "route",
    "53",
    "would",
    "amazon",
    "drop",
    "53",
    "provide",
    "high",
    "availability",
    "low",
    "latency",
    "way",
    "amazon",
    "rav53",
    "provides",
    "high",
    "availability",
    "low",
    "latency",
    "globally",
    "distributed",
    "dns",
    "servers",
    "amazon",
    "global",
    "service",
    "dna",
    "services",
    "globally",
    "customer",
    "query",
    "different",
    "parts",
    "world",
    "get",
    "reach",
    "dns",
    "server",
    "local",
    "provides",
    "low",
    "latency",
    "true",
    "dns",
    "providers",
    "dns",
    "providers",
    "local",
    "country",
    "local",
    "continent",
    "generally",
    "provide",
    "low",
    "latency",
    "service",
    "right",
    "always",
    "high",
    "latency",
    "low",
    "latency",
    "local",
    "users",
    "anybody",
    "browsing",
    "different",
    "country",
    "different",
    "continent",
    "going",
    "high",
    "latency",
    "true",
    "amazon",
    "amazon",
    "globally",
    "distributed",
    "dns",
    "provider",
    "dns",
    "servers",
    "global",
    "wide",
    "like",
    "said",
    "optimal",
    "locations",
    "got",
    "global",
    "servers",
    "words",
    "got",
    "servers",
    "around",
    "globe",
    "different",
    "parts",
    "globe",
    "able",
    "provide",
    "high",
    "availability",
    "running",
    "one",
    "server",
    "many",
    "servers",
    "provide",
    "high",
    "availability",
    "low",
    "latency",
    "environment",
    "going",
    "work",
    "going",
    "take",
    "lot",
    "configuration",
    "backups",
    "environmental",
    "backups",
    "expect",
    "questions",
    "aws",
    "config",
    "classic",
    "question",
    "would",
    "aws",
    "config",
    "work",
    "along",
    "aws",
    "cloudtrail",
    "aws",
    "cloudtrail",
    "actually",
    "records",
    "user",
    "api",
    "activity",
    "account",
    "know",
    "http",
    "https",
    "access",
    "sort",
    "access",
    "know",
    "made",
    "cloud",
    "environment",
    "recorded",
    "cloud",
    "trail",
    "words",
    "api",
    "calls",
    "time",
    "recorded",
    "type",
    "call",
    "recorded",
    "response",
    "given",
    "failure",
    "successful",
    "also",
    "get",
    "recorded",
    "cloudtrail",
    "actually",
    "log",
    "actually",
    "records",
    "activity",
    "cloud",
    "environment",
    "hand",
    "config",
    "point",
    "time",
    "configuration",
    "details",
    "resources",
    "example",
    "given",
    "point",
    "resources",
    "present",
    "environment",
    "resources",
    "configuration",
    "resources",
    "given",
    "point",
    "get",
    "captured",
    "aws",
    "conflict",
    "right",
    "information",
    "always",
    "answer",
    "question",
    "aws",
    "resource",
    "look",
    "like",
    "given",
    "point",
    "time",
    "question",
    "gets",
    "answered",
    "use",
    "aws",
    "config",
    "hand",
    "cloudtrail",
    "answer",
    "question",
    "mean",
    "looking",
    "cloud",
    "trail",
    "help",
    "cloudtrail",
    "easily",
    "answer",
    "question",
    "made",
    "apa",
    "call",
    "modify",
    "resource",
    "answered",
    "cloudtrail",
    "cloud",
    "trail",
    "detect",
    "security",
    "group",
    "incorrectly",
    "configured",
    "configuration",
    "let",
    "say",
    "happened",
    "downtime",
    "want",
    "identify",
    "let",
    "say",
    "happened",
    "downtime",
    "want",
    "identify",
    "made",
    "uh",
    "change",
    "environment",
    "simply",
    "look",
    "cloudtrail",
    "find",
    "made",
    "change",
    "want",
    "look",
    "environment",
    "looks",
    "like",
    "change",
    "always",
    "look",
    "aws",
    "config",
    "aws",
    "configure",
    "aws",
    "config",
    "aggregate",
    "data",
    "across",
    "different",
    "aws",
    "accounts",
    "yes",
    "question",
    "actually",
    "test",
    "whether",
    "used",
    "aws",
    "config",
    "know",
    "services",
    "local",
    "services",
    "availability",
    "zone",
    "specific",
    "regional",
    "specific",
    "global",
    "services",
    "amazon",
    "though",
    "services",
    "region",
    "services",
    "still",
    "changes",
    "know",
    "add",
    "configuration",
    "collect",
    "regional",
    "data",
    "example",
    "s3",
    "regional",
    "service",
    "still",
    "collect",
    "logs",
    "regions",
    "s3",
    "bucket",
    "one",
    "particular",
    "region",
    "possible",
    "cloud",
    "trail",
    "cloud",
    "watch",
    "regional",
    "service",
    "still",
    "changes",
    "adding",
    "permissions",
    "always",
    "monitor",
    "cloud",
    "watch",
    "belongs",
    "cloudwatch",
    "logs",
    "belongs",
    "regions",
    "know",
    "global",
    "default",
    "changes",
    "make",
    "global",
    "similarly",
    "aws",
    "config",
    "service",
    "region",
    "based",
    "service",
    "still",
    "make",
    "act",
    "globally",
    "aggregate",
    "data",
    "across",
    "different",
    "region",
    "different",
    "accounts",
    "aws",
    "config",
    "deliver",
    "updates",
    "different",
    "accounts",
    "one",
    "s3",
    "bucket",
    "access",
    "aws",
    "config",
    "also",
    "works",
    "integrates",
    "seamlessly",
    "sns",
    "topic",
    "know",
    "anytime",
    "change",
    "anytime",
    "new",
    "data",
    "gets",
    "collected",
    "always",
    "notify",
    "notify",
    "group",
    "people",
    "new",
    "log",
    "new",
    "config",
    "new",
    "edit",
    "happened",
    "environment",
    "let",
    "look",
    "database",
    "questions",
    "know",
    "database",
    "running",
    "reserved",
    "instances",
    "whether",
    "know",
    "fact",
    "interviewer",
    "wants",
    "understand",
    "well",
    "know",
    "fact",
    "asking",
    "question",
    "reserved",
    "instances",
    "different",
    "db",
    "instances",
    "reserved",
    "instances",
    "instances",
    "exactly",
    "comes",
    "function",
    "differ",
    "based",
    "built",
    "reserved",
    "instances",
    "purchased",
    "one",
    "year",
    "three",
    "year",
    "reservation",
    "return",
    "get",
    "low",
    "per",
    "hour",
    "pricing",
    "paying",
    "upfront",
    "generally",
    "said",
    "reserved",
    "instance",
    "75",
    "percentage",
    "cheaper",
    "instance",
    "amazon",
    "gives",
    "benefit",
    "know",
    "committing",
    "one",
    "year",
    "sometimes",
    "paying",
    "advance",
    "whole",
    "year",
    "hand",
    "instances",
    "built",
    "oddly",
    "early",
    "price",
    "talking",
    "auto",
    "scaling",
    "understand",
    "different",
    "types",
    "auto",
    "scaling",
    "interviewer",
    "might",
    "ask",
    "question",
    "type",
    "scaling",
    "would",
    "recommend",
    "rds",
    "two",
    "types",
    "scaling",
    "would",
    "know",
    "vertical",
    "horizontal",
    "vertical",
    "scaling",
    "vertically",
    "scale",
    "master",
    "database",
    "couple",
    "clicks",
    "right",
    "vertical",
    "scaling",
    "vertical",
    "scaling",
    "keeping",
    "node",
    "making",
    "bigger",
    "bigger",
    "previously",
    "running",
    "t2",
    "micro",
    "would",
    "like",
    "run",
    "m3",
    "two",
    "times",
    "large",
    "instance",
    "previously",
    "one",
    "virtual",
    "cpu",
    "one",
    "gigabit",
    "going",
    "eight",
    "virtual",
    "cpu",
    "30",
    "gigabit",
    "ram",
    "vertical",
    "scaling",
    "hand",
    "horizontal",
    "scaling",
    "adding",
    "nodes",
    "previously",
    "running",
    "one",
    "vm",
    "going",
    "run",
    "2",
    "3",
    "10",
    "vms",
    "right",
    "horizontal",
    "scaling",
    "database",
    "scaled",
    "vertically",
    "18",
    "different",
    "types",
    "instances",
    "resize",
    "rds",
    "right",
    "true",
    "ids",
    "mysql",
    "postgres",
    "sql",
    "mariadb",
    "oracle",
    "microsoft",
    "sql",
    "servers",
    "18",
    "type",
    "instances",
    "vertically",
    "scale",
    "hand",
    "horizontal",
    "scaling",
    "good",
    "replicas",
    "replicas",
    "going",
    "touch",
    "master",
    "database",
    "going",
    "touch",
    "primary",
    "database",
    "horizontal",
    "scaling",
    "amazon",
    "aurora",
    "add",
    "additional",
    "read",
    "replicas",
    "add",
    "15",
    "read",
    "replicas",
    "amazon",
    "aurora",
    "five",
    "read",
    "replicas",
    "rds",
    "mysql",
    "postgres",
    "sql",
    "marie",
    "db",
    "rds",
    "instances",
    "add",
    "replica",
    "horizontally",
    "scaling",
    "adding",
    "nodes",
    "right",
    "nodes",
    "horizontal",
    "scaling",
    "really",
    "decide",
    "vertical",
    "horizontal",
    "scaling",
    "looking",
    "increase",
    "storage",
    "processing",
    "capacity",
    "vertical",
    "scaling",
    "looking",
    "increasing",
    "performance",
    "read",
    "heavy",
    "database",
    "need",
    "looking",
    "horizontal",
    "scaling",
    "need",
    "implementing",
    "horizontal",
    "scaling",
    "environment",
    "still",
    "talking",
    "database",
    "another",
    "good",
    "question",
    "expect",
    "interview",
    "maintenance",
    "window",
    "amazon",
    "rds",
    "db",
    "instance",
    "available",
    "maintenance",
    "event",
    "right",
    "really",
    "test",
    "well",
    "understood",
    "sla",
    "well",
    "understood",
    "amazon",
    "rdas",
    "uh",
    "failover",
    "mechanism",
    "amazon",
    "rdas",
    "stuff",
    "like",
    "audio",
    "maintenance",
    "window",
    "lets",
    "decide",
    "db",
    "instance",
    "modification",
    "database",
    "engine",
    "upgrades",
    "software",
    "patching",
    "occur",
    "actually",
    "get",
    "decide",
    "happen",
    "12",
    "night",
    "happen",
    "afternoon",
    "happen",
    "early",
    "morning",
    "happen",
    "evening",
    "actually",
    "get",
    "decide",
    "automatic",
    "scheduling",
    "amazon",
    "done",
    "patches",
    "security",
    "durability",
    "related",
    "sometimes",
    "amazon",
    "takes",
    "automatic",
    "scheduling",
    "uh",
    "know",
    "need",
    "patch",
    "update",
    "deals",
    "security",
    "durability",
    "default",
    "maintenance",
    "window",
    "30",
    "minutes",
    "important",
    "point",
    "db",
    "instance",
    "available",
    "event",
    "going",
    "primary",
    "secondary",
    "right",
    "upgrade",
    "happens",
    "amazon",
    "would",
    "shift",
    "connection",
    "secondary",
    "upgrade",
    "switch",
    "back",
    "primary",
    "another",
    "classic",
    "question",
    "would",
    "consistency",
    "models",
    "dynamodb",
    "dynamodb",
    "eventual",
    "consistency",
    "read",
    "eventual",
    "consistency",
    "model",
    "actually",
    "maximizes",
    "read",
    "throughput",
    "best",
    "part",
    "eventual",
    "consistency",
    "copies",
    "data",
    "reach",
    "consistency",
    "within",
    "second",
    "sometimes",
    "write",
    "know",
    "trying",
    "read",
    "immediately",
    "chances",
    "would",
    "still",
    "reading",
    "old",
    "data",
    "eventual",
    "consistency",
    "hand",
    "another",
    "consistency",
    "model",
    "called",
    "strong",
    "consistency",
    "strongly",
    "consistent",
    "read",
    "going",
    "delay",
    "writing",
    "data",
    "know",
    "making",
    "sure",
    "data",
    "written",
    "places",
    "guarantees",
    "one",
    "thing",
    "done",
    "write",
    "trying",
    "read",
    "going",
    "make",
    "sure",
    "going",
    "show",
    "updated",
    "data",
    "old",
    "data",
    "guaranteed",
    "going",
    "show",
    "updated",
    "data",
    "old",
    "data",
    "strongly",
    "consistent",
    "still",
    "talking",
    "uh",
    "database",
    "talking",
    "nosql",
    "dynamodb",
    "nosql",
    "database",
    "dynamodb",
    "amazon",
    "could",
    "asked",
    "question",
    "kind",
    "query",
    "functionality",
    "dynamodb",
    "support",
    "dynamodb",
    "supports",
    "get",
    "put",
    "operation",
    "dynamodb",
    "supports",
    "dynamodb",
    "provides",
    "flexible",
    "querying",
    "letting",
    "query",
    "key",
    "attributes",
    "using",
    "global",
    "secondary",
    "index",
    "local",
    "secondary",
    "indexes",
    "primary",
    "key",
    "either",
    "single",
    "attribute",
    "partition",
    "key",
    "composite",
    "partition",
    "sort",
    "key",
    "words",
    "dynamodb",
    "indexes",
    "composite",
    "partition",
    "sort",
    "key",
    "partition",
    "key",
    "element",
    "sort",
    "key",
    "element",
    "holding",
    "partition",
    "key",
    "know",
    "search",
    "query",
    "holding",
    "partition",
    "key",
    "element",
    "constant",
    "search",
    "across",
    "sort",
    "key",
    "element",
    "retrieve",
    "items",
    "table",
    "composite",
    "partition",
    "sort",
    "key",
    "combination",
    "user",
    "id",
    "partition",
    "timestamp",
    "composite",
    "partition",
    "sort",
    "key",
    "made",
    "let",
    "look",
    "multiple",
    "choice",
    "questions",
    "know",
    "sometimes",
    "companies",
    "would",
    "written",
    "test",
    "mcq",
    "type",
    "online",
    "test",
    "call",
    "first",
    "level",
    "call",
    "second",
    "level",
    "classical",
    "questions",
    "companies",
    "asked",
    "companies",
    "ask",
    "multiple",
    "choice",
    "online",
    "questions",
    "let",
    "look",
    "question",
    "developer",
    "using",
    "service",
    "send",
    "store",
    "receive",
    "messages",
    "software",
    "components",
    "following",
    "referred",
    "let",
    "look",
    "right",
    "aws",
    "step",
    "functions",
    "amazon",
    "mq",
    "amazon",
    "simple",
    "queue",
    "service",
    "amazon",
    "simple",
    "notification",
    "service",
    "let",
    "read",
    "question",
    "developer",
    "using",
    "service",
    "service",
    "looking",
    "service",
    "send",
    "store",
    "retrieve",
    "messages",
    "two",
    "software",
    "components",
    "kind",
    "like",
    "queue",
    "would",
    "right",
    "answer",
    "would",
    "amazon",
    "simple",
    "queue",
    "service",
    "amazon",
    "simply",
    "queue",
    "service",
    "one",
    "used",
    "decouple",
    "environment",
    "breaks",
    "tight",
    "coupling",
    "introduces",
    "decoupling",
    "environment",
    "providing",
    "queue",
    "inserting",
    "queue",
    "two",
    "software",
    "components",
    "let",
    "look",
    "question",
    "would",
    "like",
    "host",
    "audio",
    "video",
    "conferencing",
    "application",
    "aws",
    "audio",
    "video",
    "conferencing",
    "application",
    "aws",
    "service",
    "provides",
    "secure",
    "easy",
    "use",
    "application",
    "service",
    "let",
    "look",
    "options",
    "amazon",
    "chime",
    "amazon",
    "workspace",
    "amazon",
    "mq",
    "amazon",
    "app",
    "stream",
    "well",
    "might",
    "tend",
    "look",
    "amazon",
    "app",
    "stream",
    "real",
    "time",
    "video",
    "conference",
    "actually",
    "different",
    "purpose",
    "actually",
    "amazon",
    "chime",
    "lets",
    "create",
    "chat",
    "create",
    "chat",
    "board",
    "collaborate",
    "security",
    "aws",
    "services",
    "lets",
    "audio",
    "lets",
    "video",
    "conference",
    "supported",
    "aws",
    "security",
    "features",
    "actually",
    "amazon",
    "china",
    "let",
    "look",
    "question",
    "company",
    "aw",
    "solution",
    "architect",
    "charge",
    "designing",
    "thousands",
    "individual",
    "jobs",
    "similar",
    "following",
    "service",
    "best",
    "serves",
    "requirement",
    "aws",
    "ec2",
    "auto",
    "scaling",
    "aws",
    "snowball",
    "aws",
    "fargate",
    "aws",
    "batch",
    "let",
    "read",
    "question",
    "company",
    "aws",
    "solution",
    "architect",
    "charge",
    "designing",
    "thousands",
    "individual",
    "jobs",
    "similar",
    "looks",
    "like",
    "batch",
    "service",
    "let",
    "look",
    "options",
    "well",
    "aw",
    "snowball",
    "actually",
    "storage",
    "uh",
    "transport",
    "service",
    "ec2",
    "auto",
    "scaling",
    "know",
    "introducing",
    "scalability",
    "elasticity",
    "environment",
    "aws",
    "far",
    "gate",
    "container",
    "services",
    "aws",
    "batch",
    "one",
    "referred",
    "actually",
    "runs",
    "thousands",
    "individual",
    "jobs",
    "similar",
    "aws",
    "batch",
    "right",
    "answer",
    "let",
    "look",
    "one",
    "machine",
    "learning",
    "engineer",
    "looking",
    "service",
    "helps",
    "build",
    "train",
    "machine",
    "learning",
    "models",
    "aws",
    "among",
    "following",
    "referring",
    "amazon",
    "sage",
    "maker",
    "aws",
    "deep",
    "lens",
    "amazon",
    "comprehend",
    "aws",
    "device",
    "farm",
    "let",
    "read",
    "question",
    "machine",
    "learning",
    "engineer",
    "looking",
    "service",
    "helps",
    "build",
    "train",
    "machine",
    "learning",
    "models",
    "aws",
    "among",
    "following",
    "referred",
    "answer",
    "sage",
    "maker",
    "provides",
    "every",
    "developer",
    "data",
    "scientist",
    "ability",
    "build",
    "train",
    "deploy",
    "mission",
    "learning",
    "models",
    "quickly",
    "sagemaker",
    "familiar",
    "know",
    "products",
    "would",
    "recommend",
    "know",
    "simply",
    "go",
    "product",
    "description",
    "know",
    "one",
    "page",
    "available",
    "amazon",
    "explains",
    "products",
    "quick",
    "neat",
    "simple",
    "really",
    "helps",
    "familiar",
    "know",
    "product",
    "capable",
    "know",
    "db",
    "service",
    "machine",
    "learning",
    "service",
    "monitoring",
    "service",
    "developer",
    "service",
    "stuff",
    "like",
    "get",
    "information",
    "get",
    "details",
    "attend",
    "interview",
    "really",
    "help",
    "answer",
    "face",
    "questions",
    "great",
    "confidence",
    "answer",
    "amazon",
    "sagemaker",
    "one",
    "provides",
    "developers",
    "data",
    "scientist",
    "ability",
    "build",
    "train",
    "deploy",
    "machine",
    "learning",
    "models",
    "quickly",
    "possible",
    "right",
    "let",
    "look",
    "one",
    "let",
    "say",
    "working",
    "company",
    "id",
    "team",
    "designated",
    "adjust",
    "capacity",
    "aws",
    "resource",
    "based",
    "incoming",
    "application",
    "network",
    "traffic",
    "service",
    "actually",
    "helps",
    "us",
    "adjust",
    "capacity",
    "aws",
    "resource",
    "based",
    "incoming",
    "application",
    "let",
    "look",
    "amazon",
    "vpc",
    "amazon",
    "iam",
    "amazon",
    "inspector",
    "amazon",
    "elastic",
    "load",
    "balancing",
    "amazon",
    "vpc",
    "networking",
    "service",
    "amazon",
    "iam",
    "username",
    "password",
    "authentication",
    "amazon",
    "inspector",
    "service",
    "actually",
    "security",
    "audit",
    "environment",
    "amazon",
    "elastic",
    "load",
    "balancer",
    "service",
    "helps",
    "scalability",
    "one",
    "way",
    "know",
    "indirectly",
    "helps",
    "increasing",
    "availability",
    "application",
    "right",
    "monitoring",
    "monitoring",
    "know",
    "much",
    "requests",
    "coming",
    "elastic",
    "load",
    "balancer",
    "actually",
    "adjust",
    "environment",
    "running",
    "behind",
    "answer",
    "going",
    "amazon",
    "elastic",
    "load",
    "balancer",
    "right",
    "let",
    "look",
    "question",
    "cross",
    "platform",
    "video",
    "game",
    "development",
    "engine",
    "supports",
    "pc",
    "xbox",
    "playstation",
    "ios",
    "android",
    "platforms",
    "allows",
    "developers",
    "build",
    "host",
    "games",
    "amazon",
    "servers",
    "amazon",
    "game",
    "lift",
    "amazon",
    "green",
    "grass",
    "amazon",
    "lumber",
    "yard",
    "amazon",
    "sumerian",
    "let",
    "read",
    "question",
    "video",
    "game",
    "development",
    "engine",
    "supports",
    "pc",
    "xbox",
    "playstation",
    "ios",
    "android",
    "platforms",
    "allows",
    "developers",
    "build",
    "host",
    "games",
    "amazon",
    "servers",
    "answer",
    "amazon",
    "lumberyard",
    "lumberyard",
    "free",
    "aaa",
    "gaming",
    "engine",
    "deeply",
    "integrated",
    "aws",
    "twitch",
    "full",
    "source",
    "lumbar",
    "yard",
    "provides",
    "growing",
    "set",
    "tools",
    "helps",
    "create",
    "highest",
    "game",
    "quality",
    "applications",
    "connect",
    "lot",
    "games",
    "vast",
    "compute",
    "storage",
    "cloud",
    "service",
    "referring",
    "let",
    "look",
    "question",
    "project",
    "manager",
    "company",
    "cloud",
    "architect",
    "team",
    "required",
    "visualize",
    "understand",
    "manage",
    "aws",
    "cost",
    "usage",
    "time",
    "following",
    "service",
    "best",
    "fit",
    "aws",
    "budgets",
    "aws",
    "cost",
    "explorer",
    "amazon",
    "work",
    "mail",
    "amazon",
    "connect",
    "answer",
    "going",
    "cost",
    "explorer",
    "cost",
    "explorer",
    "option",
    "amazon",
    "console",
    "helps",
    "visualize",
    "understand",
    "even",
    "manage",
    "aws",
    "cost",
    "time",
    "spending",
    "spending",
    "less",
    "trend",
    "projected",
    "cost",
    "coming",
    "month",
    "visualized",
    "aws",
    "cost",
    "explorer",
    "let",
    "look",
    "question",
    "chief",
    "cloud",
    "architect",
    "company",
    "automatically",
    "monitor",
    "adjust",
    "computer",
    "resources",
    "ensure",
    "maximum",
    "performance",
    "efficiency",
    "scalable",
    "resources",
    "cloud",
    "formation",
    "service",
    "aws",
    "aurora",
    "solution",
    "aws",
    "auto",
    "scaling",
    "amazon",
    "api",
    "gateway",
    "let",
    "read",
    "question",
    "chief",
    "cloud",
    "architect",
    "company",
    "automatically",
    "monitor",
    "adjust",
    "computer",
    "resources",
    "automatically",
    "monitor",
    "adjust",
    "computer",
    "resources",
    "ensure",
    "maximum",
    "performance",
    "efficiency",
    "scalable",
    "resources",
    "easy",
    "question",
    "answer",
    "answer",
    "auto",
    "scaling",
    "right",
    "basic",
    "service",
    "solution",
    "architect",
    "course",
    "auto",
    "scaling",
    "service",
    "helps",
    "us",
    "easily",
    "adjust",
    "monitor",
    "ensure",
    "maximum",
    "performance",
    "efficiency",
    "scalable",
    "resources",
    "automatically",
    "scaling",
    "environment",
    "handle",
    "inputs",
    "let",
    "look",
    "question",
    "database",
    "administrator",
    "use",
    "service",
    "used",
    "set",
    "manage",
    "databases",
    "mysql",
    "maya",
    "db",
    "postgres",
    "sql",
    "service",
    "referring",
    "amazon",
    "aurora",
    "amazon",
    "elastic",
    "cache",
    "aws",
    "rds",
    "aws",
    "database",
    "migration",
    "service",
    "amazon",
    "arora",
    "amazon",
    "flavor",
    "rds",
    "service",
    "elastic",
    "cache",
    "caching",
    "service",
    "provided",
    "amazon",
    "database",
    "database",
    "migration",
    "service",
    "like",
    "name",
    "says",
    "helps",
    "migrate",
    "database",
    "cloud",
    "one",
    "database",
    "flavor",
    "another",
    "database",
    "flavor",
    "amazon",
    "rds",
    "service",
    "console",
    "service",
    "umbrella",
    "service",
    "helps",
    "us",
    "set",
    "manage",
    "databases",
    "like",
    "mysql",
    "money",
    "db",
    "postgres",
    "sql",
    "amazon",
    "rds",
    "let",
    "look",
    "last",
    "question",
    "part",
    "marketing",
    "work",
    "requires",
    "push",
    "messages",
    "onto",
    "google",
    "facebook",
    "windows",
    "apple",
    "apis",
    "aws",
    "management",
    "console",
    "use",
    "following",
    "service",
    "options",
    "aws",
    "cloudtrail",
    "aws",
    "config",
    "amazon",
    "chime",
    "aws",
    "simple",
    "notification",
    "service",
    "says",
    "part",
    "marketing",
    "work",
    "requires",
    "push",
    "messages",
    "dealing",
    "pushing",
    "messages",
    "google",
    "facebook",
    "windows",
    "apple",
    "apis",
    "aws",
    "management",
    "console",
    "use",
    "following",
    "service",
    "simple",
    "notification",
    "service",
    "simple",
    "notification",
    "service",
    "message",
    "pushing",
    "service",
    "sqs",
    "pulling",
    "similarly",
    "sns",
    "pushing",
    "right",
    "talks",
    "pushing",
    "system",
    "pushes",
    "messages",
    "google",
    "facebook",
    "windows",
    "apple",
    "api",
    "going",
    "simple",
    "notification",
    "system",
    "simple",
    "notification",
    "service",
    "would",
    "like",
    "welcome",
    "azure",
    "interview",
    "preparation",
    "session",
    "knowing",
    "azure",
    "one",
    "thing",
    "worked",
    "azure",
    "another",
    "thing",
    "able",
    "answer",
    "interview",
    "questions",
    "azure",
    "totally",
    "different",
    "thing",
    "although",
    "one",
    "helps",
    "still",
    "different",
    "skills",
    "aim",
    "video",
    "prepare",
    "common",
    "product",
    "scenario",
    "based",
    "interview",
    "questions",
    "wait",
    "let",
    "get",
    "started",
    "common",
    "cloud",
    "interview",
    "question",
    "difference",
    "sas",
    "pass",
    "know",
    "software",
    "service",
    "thin",
    "client",
    "model",
    "software",
    "provisioning",
    "client",
    "case",
    "usually",
    "simply",
    "web",
    "browser",
    "providing",
    "point",
    "access",
    "software",
    "running",
    "servers",
    "sas",
    "familiar",
    "form",
    "cloud",
    "service",
    "customers",
    "sas",
    "moves",
    "task",
    "managing",
    "software",
    "deployment",
    "services",
    "meaning",
    "vendor",
    "actually",
    "gets",
    "manage",
    "sas",
    "software",
    "service",
    "involving",
    "applications",
    "consumed",
    "used",
    "organization",
    "generally",
    "using",
    "application",
    "usually",
    "organizations",
    "pay",
    "use",
    "particular",
    "application",
    "examples",
    "sas",
    "would",
    "include",
    "office",
    "salesforce",
    "another",
    "good",
    "example",
    "sas",
    "lot",
    "google",
    "apps",
    "storage",
    "solutions",
    "like",
    "box",
    "dropbox",
    "good",
    "example",
    "software",
    "service",
    "talking",
    "platform",
    "service",
    "pass",
    "actually",
    "functions",
    "lower",
    "level",
    "sas",
    "typically",
    "provides",
    "platform",
    "software",
    "developed",
    "deployed",
    "develop",
    "software",
    "deploy",
    "software",
    "pass",
    "actually",
    "provides",
    "abstract",
    "much",
    "work",
    "dealing",
    "servers",
    "giving",
    "client",
    "environment",
    "operating",
    "system",
    "server",
    "software",
    "hardwares",
    "network",
    "managed",
    "taken",
    "care",
    "words",
    "platform",
    "service",
    "things",
    "mentioned",
    "like",
    "servers",
    "server",
    "software",
    "hardware",
    "everything",
    "managed",
    "provider",
    "focus",
    "business",
    "side",
    "scalability",
    "focus",
    "application",
    "development",
    "product",
    "service",
    "short",
    "platform",
    "service",
    "service",
    "enables",
    "developers",
    "build",
    "work",
    "applications",
    "without",
    "even",
    "worry",
    "infrastructure",
    "management",
    "underlying",
    "hosting",
    "environments",
    "examples",
    "uh",
    "pass",
    "azure",
    "sql",
    "azure",
    "storage",
    "talking",
    "infrastructure",
    "service",
    "moving",
    "stack",
    "even",
    "get",
    "fundamental",
    "building",
    "block",
    "cloud",
    "service",
    "infrastructure",
    "service",
    "fully",
    "highly",
    "automated",
    "scalable",
    "computer",
    "resources",
    "full",
    "storage",
    "full",
    "network",
    "capability",
    "clients",
    "direct",
    "access",
    "servers",
    "storage",
    "would",
    "traditional",
    "servers",
    "case",
    "going",
    "cloud",
    "case",
    "going",
    "scalable",
    "similar",
    "would",
    "physical",
    "data",
    "center",
    "talk",
    "get",
    "everything",
    "stored",
    "cloud",
    "need",
    "build",
    "definition",
    "around",
    "infrastructure",
    "service",
    "provides",
    "users",
    "components",
    "provides",
    "components",
    "give",
    "us",
    "built",
    "environment",
    "simply",
    "provides",
    "component",
    "operating",
    "system",
    "networking",
    "capabilities",
    "lot",
    "paid",
    "based",
    "usage",
    "used",
    "host",
    "applications",
    "words",
    "pay",
    "go",
    "type",
    "use",
    "pay",
    "less",
    "use",
    "less",
    "pay",
    "examples",
    "azure",
    "virtual",
    "machine",
    "great",
    "example",
    "networking",
    "another",
    "good",
    "example",
    "azure",
    "another",
    "common",
    "question",
    "azure",
    "interview",
    "instant",
    "types",
    "offered",
    "azure",
    "main",
    "intention",
    "question",
    "well",
    "understood",
    "different",
    "offerings",
    "azure",
    "well",
    "trained",
    "pick",
    "right",
    "offering",
    "right",
    "service",
    "one",
    "size",
    "fit",
    "thereof",
    "lot",
    "services",
    "azure",
    "carpet",
    "thing",
    "depending",
    "different",
    "requirement",
    "pick",
    "appropriate",
    "server",
    "actually",
    "question",
    "different",
    "instant",
    "types",
    "offered",
    "azure",
    "test",
    "well",
    "used",
    "product",
    "services",
    "available",
    "azure",
    "well",
    "applied",
    "given",
    "requirement",
    "provisioning",
    "provisioning",
    "less",
    "time",
    "kind",
    "matching",
    "right",
    "service",
    "right",
    "requirement",
    "instant",
    "types",
    "offered",
    "azure",
    "see",
    "list",
    "general",
    "purpose",
    "compute",
    "optimized",
    "memory",
    "optimized",
    "storage",
    "optimized",
    "gpu",
    "virtual",
    "machines",
    "high",
    "performance",
    "compute",
    "virtual",
    "machines",
    "answering",
    "names",
    "wo",
    "enough",
    "interview",
    "go",
    "explain",
    "scenario",
    "would",
    "use",
    "general",
    "purpose",
    "use",
    "cases",
    "type",
    "servers",
    "good",
    "fit",
    "general",
    "purpose",
    "type",
    "good",
    "fit",
    "compute",
    "optimized",
    "forth",
    "exactly",
    "going",
    "general",
    "purpose",
    "vms",
    "know",
    "provide",
    "balanced",
    "cpu",
    "memory",
    "ratio",
    "good",
    "testing",
    "good",
    "development",
    "environment",
    "good",
    "small",
    "medium",
    "databases",
    "also",
    "low",
    "medium",
    "traffic",
    "web",
    "servers",
    "use",
    "cases",
    "like",
    "said",
    "test",
    "servers",
    "low",
    "traffic",
    "web",
    "servers",
    "small",
    "medium",
    "databases",
    "enterprise",
    "great",
    "applications",
    "also",
    "good",
    "relational",
    "database",
    "also",
    "good",
    "servers",
    "used",
    "caching",
    "also",
    "good",
    "small",
    "analytic",
    "database",
    "good",
    "micro",
    "services",
    "trying",
    "build",
    "proof",
    "concept",
    "idea",
    "parked",
    "another",
    "good",
    "server",
    "proof",
    "concepts",
    "going",
    "send",
    "actual",
    "traffic",
    "want",
    "show",
    "know",
    "idea",
    "works",
    "general",
    "purpose",
    "server",
    "good",
    "use",
    "case",
    "scenarios",
    "largest",
    "instance",
    "size",
    "get",
    "general",
    "purpose",
    "standard",
    "d64",
    "v3",
    "comes",
    "256",
    "gigabit",
    "memory",
    "1600",
    "gigabit",
    "ssd",
    "temporary",
    "storage",
    "hand",
    "compute",
    "optimized",
    "vms",
    "high",
    "cpu",
    "memory",
    "ratio",
    "good",
    "medium",
    "traffic",
    "web",
    "servers",
    "good",
    "batch",
    "processing",
    "servers",
    "good",
    "application",
    "servers",
    "computer",
    "optimized",
    "compute",
    "means",
    "cpu",
    "excellent",
    "choice",
    "workloads",
    "demand",
    "faster",
    "cpu",
    "need",
    "much",
    "memory",
    "temporary",
    "storage",
    "virtual",
    "cpu",
    "workloads",
    "run",
    "well",
    "computer",
    "optimized",
    "analytic",
    "workloads",
    "gaming",
    "servers",
    "require",
    "cpu",
    "run",
    "really",
    "well",
    "batch",
    "processing",
    "applications",
    "placed",
    "computer",
    "optimized",
    "get",
    "actual",
    "benefit",
    "compute",
    "optimized",
    "instance",
    "largest",
    "instance",
    "size",
    "largest",
    "instance",
    "size",
    "type",
    "standard",
    "f72s",
    "v2",
    "get",
    "144",
    "gigabit",
    "memory",
    "576",
    "gigabit",
    "ssd",
    "temporary",
    "storage",
    "compute",
    "optimized",
    "vms",
    "lines",
    "memory",
    "optimized",
    "vm",
    "offer",
    "high",
    "memory",
    "cpu",
    "ratio",
    "great",
    "databases",
    "databases",
    "require",
    "memory",
    "great",
    "fit",
    "database",
    "great",
    "fit",
    "medium",
    "large",
    "scale",
    "caches",
    "applications",
    "require",
    "analytics",
    "memory",
    "optimized",
    "memories",
    "good",
    "analytics",
    "applications",
    "largest",
    "instant",
    "size",
    "get",
    "standard",
    "m128m",
    "look",
    "gigabit",
    "memory",
    "3892",
    "gigabit",
    "memory",
    "look",
    "temporary",
    "storage",
    "uh",
    "1400",
    "336",
    "gigabit",
    "temporary",
    "storage",
    "lines",
    "storage",
    "optimized",
    "guess",
    "explain",
    "storage",
    "optimized",
    "used",
    "might",
    "easily",
    "guessed",
    "looking",
    "flow",
    "yes",
    "storage",
    "optimized",
    "vm",
    "offer",
    "high",
    "disk",
    "throughput",
    "io",
    "ideal",
    "big",
    "data",
    "sql",
    "nosql",
    "databases",
    "data",
    "warehousing",
    "servers",
    "large",
    "transactional",
    "databases",
    "lot",
    "examples",
    "applications",
    "launched",
    "storage",
    "optimized",
    "cassandra",
    "mongodb",
    "cloudera",
    "redis",
    "familiar",
    "applications",
    "get",
    "benefited",
    "run",
    "storage",
    "optimized",
    "one",
    "difference",
    "storage",
    "optimized",
    "servers",
    "generally",
    "optimized",
    "use",
    "local",
    "disk",
    "node",
    "attached",
    "directly",
    "vm",
    "rather",
    "using",
    "durable",
    "disk",
    "actually",
    "remote",
    "disk",
    "space",
    "allow",
    "allows",
    "greater",
    "input",
    "outputs",
    "per",
    "second",
    "throughput",
    "workload",
    "get",
    "greater",
    "throughput",
    "greater",
    "input",
    "outputs",
    "per",
    "second",
    "get",
    "use",
    "storage",
    "optimized",
    "largest",
    "instance",
    "size",
    "available",
    "storage",
    "optimized",
    "standard",
    "l32s",
    "memory",
    "256",
    "gigabit",
    "look",
    "temporary",
    "storage",
    "5630",
    "gigabit",
    "temporary",
    "storage",
    "gpu",
    "type",
    "vms",
    "easy",
    "guess",
    "gpu",
    "optimized",
    "vms",
    "specialized",
    "virtual",
    "machines",
    "available",
    "multiple",
    "gpus",
    "attached",
    "sizes",
    "designed",
    "vms",
    "designed",
    "compute",
    "intensive",
    "graphic",
    "intensive",
    "visualization",
    "workloads",
    "require",
    "lot",
    "graphical",
    "processing",
    "unit",
    "attached",
    "short",
    "virtual",
    "machines",
    "specialize",
    "heavy",
    "graphic",
    "rendering",
    "video",
    "editing",
    "also",
    "helps",
    "model",
    "training",
    "interferencing",
    "standard",
    "nd",
    "nd24rs",
    "448",
    "gigabit",
    "memory",
    "2948",
    "gigabit",
    "temporary",
    "storage",
    "last",
    "least",
    "best",
    "last",
    "best",
    "high",
    "performance",
    "compute",
    "azure",
    "h",
    "series",
    "virtual",
    "machines",
    "latest",
    "high",
    "performance",
    "computing",
    "vms",
    "aimed",
    "handle",
    "workloads",
    "like",
    "batch",
    "processing",
    "analytic",
    "molecular",
    "modeling",
    "fluid",
    "dynamics",
    "lot",
    "complicated",
    "applications",
    "vm",
    "fastest",
    "powerful",
    "cpu",
    "virtual",
    "machine",
    "optional",
    "high",
    "throughput",
    "interfaces",
    "largest",
    "instance",
    "size",
    "available",
    "standard",
    "l32s",
    "comes",
    "224",
    "gigabit",
    "memory",
    "200",
    "gigabit",
    "ssd",
    "temporary",
    "storage",
    "third",
    "common",
    "question",
    "deployment",
    "environments",
    "offered",
    "azure",
    "two",
    "main",
    "deployment",
    "environments",
    "one",
    "staging",
    "environment",
    "one",
    "production",
    "environment",
    "staging",
    "environment",
    "let",
    "talk",
    "staging",
    "first",
    "deploying",
    "web",
    "app",
    "web",
    "app",
    "linux",
    "deploy",
    "separate",
    "slot",
    "instead",
    "default",
    "production",
    "slot",
    "running",
    "standard",
    "premium",
    "isolated",
    "app",
    "service",
    "plan",
    "tiers",
    "deployments",
    "slots",
    "actually",
    "live",
    "app",
    "host",
    "name",
    "later",
    "point",
    "staging",
    "environment",
    "swapped",
    "production",
    "environment",
    "need",
    "staging",
    "environment",
    "benefit",
    "benefit",
    "deploying",
    "application",
    "staging",
    "environment",
    "provides",
    "platform",
    "validate",
    "changes",
    "application",
    "made",
    "live",
    "production",
    "environment",
    "staging",
    "environment",
    "app",
    "identified",
    "using",
    "azure",
    "global",
    "unique",
    "identifier",
    "also",
    "called",
    "guid",
    "url",
    "similar",
    "production",
    "url",
    "except",
    "custom",
    "name",
    "front",
    "identifies",
    "staging",
    "environment",
    "production",
    "environment",
    "live",
    "production",
    "environment",
    "serving",
    "customers",
    "request",
    "serving",
    "customer",
    "content",
    "slightly",
    "different",
    "staging",
    "environment",
    "way",
    "url",
    "used",
    "identify",
    "production",
    "environment",
    "often",
    "dns",
    "friendly",
    "name",
    "like",
    "name",
    "actual",
    "service",
    "dot",
    "cloud",
    "way",
    "differs",
    "case",
    "staging",
    "environment",
    "custom",
    "name",
    "right",
    "custom",
    "name",
    "case",
    "get",
    "direct",
    "service",
    "name",
    "name",
    "url",
    "live",
    "production",
    "environment",
    "receives",
    "handles",
    "serves",
    "customer",
    "traffic",
    "another",
    "commonly",
    "asked",
    "question",
    "azure",
    "advantages",
    "scaling",
    "azure",
    "actual",
    "thought",
    "behind",
    "question",
    "see",
    "much",
    "understood",
    "scaling",
    "much",
    "seen",
    "much",
    "applied",
    "scaling",
    "effect",
    "production",
    "environment",
    "received",
    "benefits",
    "return",
    "let",
    "talk",
    "advantages",
    "scaling",
    "azure",
    "advantages",
    "get",
    "maximum",
    "application",
    "performance",
    "auto",
    "scaling",
    "feature",
    "cloud",
    "services",
    "aws",
    "azure",
    "google",
    "couple",
    "cloud",
    "service",
    "providers",
    "feature",
    "cloud",
    "service",
    "cloud",
    "service",
    "auto",
    "scalable",
    "includes",
    "mobile",
    "services",
    "virtual",
    "machines",
    "run",
    "applications",
    "mobile",
    "services",
    "virtual",
    "machines",
    "website",
    "actually",
    "gets",
    "best",
    "performance",
    "change",
    "demand",
    "different",
    "applications",
    "might",
    "require",
    "different",
    "performance",
    "needs",
    "examples",
    "apps",
    "performance",
    "measured",
    "based",
    "memory",
    "another",
    "good",
    "example",
    "fluctuating",
    "demand",
    "example",
    "could",
    "web",
    "app",
    "handles",
    "millions",
    "requests",
    "day",
    "literally",
    "nothing",
    "night",
    "auto",
    "scaling",
    "environment",
    "auto",
    "scaling",
    "environment",
    "automatically",
    "scale",
    "fatten",
    "environment",
    "receive",
    "incoming",
    "traffic",
    "lean",
    "period",
    "actually",
    "gets",
    "slimmer",
    "slimmer",
    "help",
    "cost",
    "actually",
    "maximizes",
    "performance",
    "auto",
    "scaling",
    "like",
    "said",
    "auto",
    "scaling",
    "scales",
    "scales",
    "based",
    "demand",
    "scales",
    "also",
    "scales",
    "help",
    "cost",
    "know",
    "particular",
    "pattern",
    "application",
    "going",
    "receive",
    "traffic",
    "well",
    "go",
    "ahead",
    "schedule",
    "scaling",
    "application",
    "schedule",
    "scaling",
    "infrastructure",
    "based",
    "time",
    "already",
    "know",
    "monday",
    "friday",
    "traffic",
    "would",
    "get",
    "constant",
    "one",
    "public",
    "facing",
    "know",
    "internal",
    "application",
    "know",
    "500",
    "users",
    "thousand",
    "5000",
    "users",
    "using",
    "given",
    "point",
    "5000",
    "users",
    "going",
    "go",
    "beyond",
    "saturday",
    "sunday",
    "literally",
    "nobody",
    "going",
    "office",
    "load",
    "case",
    "pretty",
    "much",
    "know",
    "pattern",
    "going",
    "go",
    "scheduled",
    "scaling",
    "know",
    "pattern",
    "auto",
    "scaling",
    "like",
    "said",
    "helps",
    "keeping",
    "application",
    "highly",
    "available",
    "also",
    "helps",
    "cost",
    "effectiveness",
    "infrastructure",
    "anytime",
    "vm",
    "group",
    "vms",
    "running",
    "less",
    "cpu",
    "auto",
    "scaling",
    "going",
    "actually",
    "get",
    "environment",
    "slimmer",
    "slimmer",
    "unnecessarily",
    "running",
    "resources",
    "paying",
    "interviewed",
    "infrasight",
    "azure",
    "another",
    "common",
    "question",
    "gets",
    "asked",
    "windows",
    "active",
    "directory",
    "azure",
    "active",
    "directory",
    "different",
    "let",
    "talk",
    "windows",
    "active",
    "directory",
    "first",
    "windows",
    "active",
    "directory",
    "service",
    "released",
    "along",
    "windows",
    "2000",
    "server",
    "edition",
    "active",
    "directory",
    "essentially",
    "database",
    "helps",
    "organizations",
    "organize",
    "users",
    "organize",
    "computers",
    "lot",
    "provides",
    "authentication",
    "authorization",
    "applications",
    "applications",
    "also",
    "file",
    "servers",
    "printers",
    "lot",
    "resources",
    "basic",
    "active",
    "directory",
    "hand",
    "azure",
    "active",
    "directory",
    "designed",
    "manage",
    "services",
    "azure",
    "active",
    "directory",
    "hand",
    "designed",
    "support",
    "services",
    "use",
    "rest",
    "api",
    "interfaces",
    "office",
    "365",
    "etc",
    "unlike",
    "plain",
    "active",
    "directory",
    "uses",
    "completely",
    "different",
    "protocol",
    "protocol",
    "wise",
    "different",
    "services",
    "support",
    "quite",
    "different",
    "besides",
    "also",
    "couple",
    "differences",
    "well",
    "let",
    "look",
    "actual",
    "active",
    "directory",
    "windows",
    "actual",
    "directory",
    "directory",
    "service",
    "facilitates",
    "working",
    "interconnected",
    "complex",
    "different",
    "network",
    "resources",
    "unified",
    "manner",
    "hand",
    "azure",
    "active",
    "directory",
    "microsoft",
    "directory",
    "identity",
    "management",
    "service",
    "windows",
    "active",
    "directory",
    "five",
    "layers",
    "store",
    "data",
    "store",
    "user",
    "details",
    "issue",
    "management",
    "certifications",
    "hand",
    "azure",
    "active",
    "directory",
    "integrates",
    "compresses",
    "five",
    "layers",
    "two",
    "layers",
    "windows",
    "active",
    "directory",
    "works",
    "servers",
    "like",
    "applications",
    "file",
    "servers",
    "printers",
    "etc",
    "hand",
    "azure",
    "active",
    "directory",
    "works",
    "services",
    "use",
    "restful",
    "interfaces",
    "hired",
    "development",
    "environment",
    "cloud",
    "devops",
    "support",
    "environment",
    "even",
    "production",
    "support",
    "environment",
    "might",
    "find",
    "asked",
    "question",
    "types",
    "queues",
    "offered",
    "azure",
    "azure",
    "supports",
    "two",
    "types",
    "queue",
    "mechanisms",
    "storage",
    "cube",
    "service",
    "bus",
    "queue",
    "let",
    "talk",
    "storage",
    "queue",
    "first",
    "storage",
    "queue",
    "part",
    "azure",
    "storage",
    "infrastructure",
    "provides",
    "simple",
    "rest",
    "based",
    "interface",
    "simple",
    "rest",
    "based",
    "get",
    "put",
    "peak",
    "interface",
    "provides",
    "reliable",
    "persistent",
    "messaging",
    "within",
    "services",
    "follows",
    "pub",
    "sub",
    "model",
    "pub",
    "sub",
    "messaging",
    "infrastructure",
    "best",
    "suited",
    "users",
    "need",
    "store",
    "80",
    "gigabit",
    "messages",
    "queue",
    "provide",
    "logs",
    "transactions",
    "executed",
    "user",
    "queue",
    "get",
    "storage",
    "queue",
    "hand",
    "service",
    "bus",
    "queue",
    "service",
    "bus",
    "cues",
    "built",
    "top",
    "broader",
    "messaging",
    "infrastructure",
    "designed",
    "integrate",
    "applications",
    "applications",
    "component",
    "span",
    "multiple",
    "communication",
    "protocols",
    "way",
    "differs",
    "good",
    "applications",
    "components",
    "may",
    "span",
    "multiple",
    "communication",
    "protocols",
    "even",
    "different",
    "totally",
    "different",
    "network",
    "environments",
    "short",
    "service",
    "buses",
    "service",
    "bus",
    "queues",
    "azure",
    "part",
    "azure",
    "messaging",
    "infrastructure",
    "integrate",
    "applications",
    "application",
    "components",
    "actually",
    "span",
    "multiple",
    "different",
    "protocols",
    "multiple",
    "different",
    "network",
    "environments",
    "also",
    "provides",
    "first",
    "first",
    "style",
    "delivery",
    "user",
    "queue",
    "size",
    "remain",
    "80",
    "gigabit",
    "another",
    "familiar",
    "question",
    "advantages",
    "azure",
    "resource",
    "manager",
    "resource",
    "manager",
    "helps",
    "us",
    "manage",
    "usage",
    "application",
    "resources",
    "question",
    "actually",
    "test",
    "well",
    "tested",
    "well",
    "used",
    "resource",
    "manager",
    "gotten",
    "benefit",
    "question",
    "actually",
    "tests",
    "easy",
    "become",
    "introduction",
    "resource",
    "manager",
    "compared",
    "deployments",
    "provisioning",
    "resources",
    "without",
    "resource",
    "manager",
    "let",
    "get",
    "answers",
    "question",
    "advantages",
    "azure",
    "resource",
    "manager",
    "chart",
    "resource",
    "manager",
    "called",
    "arm",
    "arm",
    "helps",
    "deploy",
    "manage",
    "monitor",
    "resources",
    "application",
    "solution",
    "group",
    "interconnected",
    "application",
    "interconnected",
    "services",
    "monitored",
    "group",
    "using",
    "resource",
    "manager",
    "users",
    "granted",
    "access",
    "resources",
    "require",
    "within",
    "resource",
    "manager",
    "account",
    "like",
    "10",
    "different",
    "resources",
    "created",
    "resource",
    "manager",
    "resource",
    "group",
    "created",
    "resource",
    "managers",
    "allow",
    "deny",
    "connection",
    "services",
    "services",
    "based",
    "whether",
    "user",
    "accessing",
    "one",
    "accessing",
    "way",
    "becomes",
    "easy",
    "give",
    "access",
    "group",
    "application",
    "helps",
    "getting",
    "billing",
    "details",
    "group",
    "resources",
    "group",
    "using",
    "group",
    "using",
    "less",
    "group",
    "contributed",
    "month",
    "bill",
    "stuff",
    "like",
    "details",
    "obtained",
    "using",
    "azure",
    "zos",
    "manager",
    "provisioning",
    "resources",
    "made",
    "much",
    "easier",
    "help",
    "resource",
    "manager",
    "another",
    "question",
    "integrating",
    "hybrid",
    "cloud",
    "useful",
    "azure",
    "well",
    "use",
    "hybrid",
    "cloud",
    "get",
    "best",
    "worlds",
    "hybrid",
    "cloud",
    "nothing",
    "combining",
    "public",
    "cloud",
    "private",
    "cloud",
    "allowing",
    "data",
    "applications",
    "shared",
    "whenever",
    "compute",
    "processing",
    "demand",
    "fluctuates",
    "hybrid",
    "cloud",
    "computing",
    "gives",
    "businesses",
    "ability",
    "seamlessly",
    "scale",
    "infrastructure",
    "public",
    "cloud",
    "handle",
    "kind",
    "uh",
    "overflow",
    "requirement",
    "overflow",
    "handling",
    "application",
    "really",
    "helps",
    "helps",
    "boost",
    "productivity",
    "application",
    "hybrid",
    "cloud",
    "get",
    "greater",
    "efficiency",
    "combination",
    "azure",
    "services",
    "devops",
    "processes",
    "tools",
    "application",
    "running",
    "hybrid",
    "cloud",
    "environment",
    "users",
    "take",
    "advantage",
    "constantly",
    "updated",
    "azure",
    "service",
    "aws",
    "marketplace",
    "applications",
    "environment",
    "benefit",
    "hybrid",
    "cloud",
    "environment",
    "simply",
    "deploy",
    "applications",
    "regardless",
    "locations",
    "case",
    "worry",
    "location",
    "expand",
    "environment",
    "cloud",
    "pick",
    "locations",
    "simply",
    "deploy",
    "enables",
    "applications",
    "created",
    "greater",
    "speed",
    "federating",
    "azure",
    "sql",
    "question",
    "specific",
    "sql",
    "scale",
    "sql",
    "database",
    "good",
    "question",
    "valid",
    "question",
    "important",
    "question",
    "interview",
    "many",
    "customers",
    "companies",
    "able",
    "meet",
    "user",
    "demand",
    "could",
    "scale",
    "databases",
    "theory",
    "scaling",
    "adding",
    "servers",
    "accommodate",
    "increased",
    "workloads",
    "traffic",
    "hard",
    "understand",
    "implications",
    "complicated",
    "implications",
    "expensive",
    "well",
    "aware",
    "scaling",
    "web",
    "servers",
    "common",
    "scale",
    "database",
    "microsoft",
    "provides",
    "tools",
    "technologies",
    "scale",
    "database",
    "cloud",
    "called",
    "sql",
    "federation",
    "azure",
    "sql",
    "way",
    "scale",
    "sql",
    "database",
    "sharing",
    "sharding",
    "database",
    "sharing",
    "actually",
    "enables",
    "users",
    "take",
    "advantages",
    "resources",
    "cloud",
    "allows",
    "users",
    "database",
    "shared",
    "database",
    "amongst",
    "creating",
    "highly",
    "available",
    "database",
    "shards",
    "database",
    "actually",
    "reduces",
    "possibility",
    "single",
    "point",
    "failure",
    "database",
    "importantly",
    "sharing",
    "using",
    "federation",
    "azure",
    "sql",
    "provides",
    "cost",
    "effective",
    "scaling",
    "databases",
    "using",
    "cloud",
    "resources",
    "using",
    "billing",
    "cloud",
    "resources",
    "used",
    "provisioning",
    "provisions",
    "right",
    "amount",
    "pay",
    "right",
    "amount",
    "let",
    "talk",
    "one",
    "different",
    "types",
    "storage",
    "offered",
    "azure",
    "different",
    "types",
    "storage",
    "offered",
    "azure",
    "already",
    "know",
    "see",
    "azure",
    "blob",
    "storages",
    "table",
    "storages",
    "file",
    "storage",
    "queue",
    "storage",
    "let",
    "expand",
    "one",
    "blob",
    "storage",
    "nothing",
    "massive",
    "scalable",
    "object",
    "storage",
    "good",
    "storing",
    "text",
    "binary",
    "data",
    "azure",
    "blob",
    "storage",
    "microsoft",
    "object",
    "storage",
    "solution",
    "cloud",
    "lot",
    "storage",
    "optimized",
    "storing",
    "massive",
    "massive",
    "amount",
    "unstructured",
    "data",
    "form",
    "text",
    "form",
    "binary",
    "data",
    "short",
    "blob",
    "storage",
    "enables",
    "users",
    "store",
    "unstructured",
    "data",
    "data",
    "format",
    "pictures",
    "music",
    "video",
    "files",
    "lot",
    "stores",
    "along",
    "metadata",
    "another",
    "advantage",
    "another",
    "feature",
    "benefit",
    "get",
    "blob",
    "storage",
    "object",
    "changed",
    "verified",
    "ensure",
    "latest",
    "version",
    "number",
    "one",
    "number",
    "two",
    "provides",
    "maximum",
    "flexibility",
    "optimize",
    "user",
    "storage",
    "needs",
    "unstructured",
    "data",
    "available",
    "customers",
    "url",
    "rest",
    "based",
    "object",
    "storage",
    "benefits",
    "come",
    "along",
    "blob",
    "storage",
    "table",
    "storage",
    "hand",
    "nosql",
    "store",
    "storage",
    "secured",
    "data",
    "azure",
    "table",
    "storage",
    "service",
    "stores",
    "structured",
    "nosql",
    "data",
    "cloud",
    "table",
    "easy",
    "save",
    "data",
    "easy",
    "adapt",
    "data",
    "need",
    "application",
    "grows",
    "table",
    "storage",
    "fast",
    "cost",
    "effective",
    "many",
    "type",
    "applications",
    "type",
    "data",
    "store",
    "table",
    "storage",
    "good",
    "flexible",
    "databases",
    "like",
    "user",
    "data",
    "web",
    "applications",
    "address",
    "book",
    "storage",
    "device",
    "information",
    "storage",
    "want",
    "store",
    "metadata",
    "good",
    "use",
    "case",
    "store",
    "azure",
    "table",
    "storage",
    "azure",
    "files",
    "another",
    "storage",
    "managed",
    "file",
    "share",
    "cloud",
    "deployment",
    "file",
    "storage",
    "provides",
    "file",
    "sharing",
    "capabilities",
    "accessible",
    "server",
    "messaging",
    "block",
    "protocol",
    "accessed",
    "cloud",
    "accessed",
    "well",
    "file",
    "storage",
    "data",
    "protected",
    "smb",
    "https",
    "protocols",
    "important",
    "thing",
    "azure",
    "takes",
    "care",
    "managing",
    "hardware",
    "operating",
    "system",
    "deployments",
    "azure",
    "file",
    "storage",
    "additional",
    "file",
    "storage",
    "used",
    "want",
    "burst",
    "storage",
    "capacity",
    "premises",
    "primary",
    "cloud",
    "secondary",
    "extended",
    "storage",
    "actually",
    "improves",
    "performance",
    "capabilities",
    "data",
    "center",
    "queues",
    "azure",
    "queues",
    "messaging",
    "store",
    "reliable",
    "messaging",
    "application",
    "components",
    "spoke",
    "little",
    "uh",
    "previous",
    "question",
    "azure",
    "queue",
    "storage",
    "service",
    "storing",
    "large",
    "amount",
    "messages",
    "accessed",
    "anywhere",
    "world",
    "via",
    "http",
    "https",
    "protocol",
    "single",
    "message",
    "64",
    "kilobits",
    "size",
    "queue",
    "millions",
    "messages",
    "limit",
    "actually",
    "go",
    "reached",
    "limit",
    "storage",
    "account",
    "millions",
    "millions",
    "requests",
    "stored",
    "storage",
    "queue",
    "queue",
    "storage",
    "queue",
    "storage",
    "chart",
    "provides",
    "message",
    "queueing",
    "large",
    "workloads",
    "enables",
    "users",
    "build",
    "flexible",
    "applications",
    "separate",
    "functions",
    "one",
    "another",
    "one",
    "failing",
    "affect",
    "application",
    "running",
    "healthy",
    "q",
    "storage",
    "ensures",
    "application",
    "scalable",
    "less",
    "prone",
    "individual",
    "component",
    "failures",
    "decoupled",
    "separate",
    "also",
    "helps",
    "monitoring",
    "queue",
    "ensures",
    "customers",
    "demands",
    "met",
    "queue",
    "great",
    "place",
    "monitor",
    "great",
    "component",
    "monitor",
    "understand",
    "much",
    "peak",
    "reached",
    "particular",
    "application",
    "service",
    "container",
    "text",
    "analysis",
    "api",
    "azure",
    "machine",
    "learning",
    "text",
    "analysis",
    "actually",
    "cloud",
    "based",
    "analytics",
    "api",
    "provides",
    "advanced",
    "natural",
    "language",
    "processing",
    "raw",
    "text",
    "got",
    "four",
    "main",
    "functions",
    "like",
    "sentiment",
    "analysis",
    "key",
    "phrase",
    "analysis",
    "language",
    "uh",
    "deduction",
    "things",
    "mean",
    "sentiment",
    "analysis",
    "sentiment",
    "analysis",
    "logs",
    "comments",
    "text",
    "comments",
    "receive",
    "analysis",
    "find",
    "whether",
    "positive",
    "negative",
    "statement",
    "api",
    "api",
    "returns",
    "sentiment",
    "score",
    "0",
    "1",
    "1",
    "positive",
    "0",
    "negative",
    "text",
    "analysis",
    "key",
    "phrase",
    "extraction",
    "automatically",
    "extract",
    "key",
    "phrase",
    "uh",
    "quickly",
    "identify",
    "main",
    "points",
    "key",
    "phrase",
    "example",
    "analyzing",
    "text",
    "says",
    "food",
    "delicious",
    "wonderful",
    "stuff",
    "api",
    "returns",
    "main",
    "talking",
    "points",
    "phrase",
    "like",
    "food",
    "food",
    "main",
    "talking",
    "point",
    "wonderful",
    "stuffs",
    "main",
    "talking",
    "point",
    "another",
    "feature",
    "text",
    "analysis",
    "language",
    "deduction",
    "text",
    "analysis",
    "irrespective",
    "paste",
    "try",
    "gauge",
    "try",
    "align",
    "120",
    "120",
    "languages",
    "supports",
    "simply",
    "take",
    "text",
    "internet",
    "paste",
    "text",
    "analysis",
    "software",
    "going",
    "identify",
    "language",
    "run",
    "phrase",
    "sentiment",
    "analysis",
    "texts",
    "right",
    "short",
    "text",
    "analysis",
    "api",
    "set",
    "web",
    "services",
    "used",
    "text",
    "analysis",
    "used",
    "analyze",
    "unstructured",
    "statement",
    "sentiment",
    "analysis",
    "key",
    "phrase",
    "extraction",
    "lot",
    "results",
    "generally",
    "0",
    "1",
    "1",
    "positive",
    "0",
    "negative",
    "sentiment",
    "much",
    "training",
    "words",
    "complicated",
    "couple",
    "text",
    "analysis",
    "softwares",
    "available",
    "market",
    "simply",
    "paste",
    "simply",
    "upload",
    "text",
    "call",
    "service",
    "runs",
    "sentiment",
    "analysis",
    "let",
    "look",
    "question",
    "advantages",
    "azure",
    "queue",
    "storage",
    "going",
    "work",
    "development",
    "environment",
    "going",
    "work",
    "environment",
    "embraces",
    "devops",
    "could",
    "question",
    "advantages",
    "azure",
    "queue",
    "storage",
    "azure",
    "queue",
    "storage",
    "built",
    "flexibly",
    "operate",
    "applications",
    "separate",
    "functions",
    "applications",
    "run",
    "large",
    "workloads",
    "design",
    "applications",
    "scale",
    "applications",
    "decoupled",
    "scale",
    "independently",
    "know",
    "thing",
    "happening",
    "application",
    "dependent",
    "another",
    "application",
    "anything",
    "happens",
    "section",
    "application",
    "affect",
    "application",
    "decoupled",
    "connected",
    "queue",
    "storage",
    "queue",
    "storage",
    "gives",
    "us",
    "asynchronous",
    "message",
    "queuing",
    "communication",
    "applications",
    "irrespective",
    "whether",
    "running",
    "cloud",
    "whether",
    "running",
    "desktop",
    "whether",
    "running",
    "premises",
    "mobile",
    "devices",
    "short",
    "queue",
    "storage",
    "enables",
    "message",
    "queueing",
    "large",
    "workloads",
    "simple",
    "cost",
    "effective",
    "durable",
    "manner",
    "talking",
    "advantages",
    "advantages",
    "provides",
    "rich",
    "client",
    "libraries",
    "java",
    "android",
    "c",
    "plus",
    "plus",
    "php",
    "ruby",
    "lot",
    "services",
    "getting",
    "added",
    "every",
    "new",
    "release",
    "azure",
    "main",
    "advantage",
    "enables",
    "users",
    "build",
    "flexible",
    "apps",
    "separate",
    "functions",
    "bigger",
    "greater",
    "durability",
    "introduction",
    "cues",
    "application",
    "ensures",
    "users",
    "applications",
    "scalable",
    "less",
    "prone",
    "individual",
    "component",
    "failures",
    "meaning",
    "one",
    "component",
    "failing",
    "going",
    "take",
    "whole",
    "application",
    "right",
    "one",
    "component",
    "fails",
    "component",
    "stays",
    "fails",
    "rest",
    "healthy",
    "rest",
    "going",
    "function",
    "also",
    "helps",
    "us",
    "monitor",
    "queues",
    "ensure",
    "servers",
    "overhelmed",
    "sudden",
    "traffic",
    "bursts",
    "much",
    "cube",
    "kind",
    "determines",
    "traffic",
    "application",
    "queue",
    "always",
    "go",
    "auto",
    "scale",
    "environment",
    "queue",
    "less",
    "always",
    "go",
    "shrink",
    "make",
    "environment",
    "thinner",
    "save",
    "cost",
    "anytime",
    "data",
    "queue",
    "auto",
    "scale",
    "monitor",
    "metric",
    "auto",
    "scaling",
    "based",
    "metric",
    "environment",
    "knows",
    "data",
    "coming",
    "need",
    "expand",
    "handle",
    "much",
    "amount",
    "data",
    "common",
    "question",
    "two",
    "kinds",
    "azure",
    "web",
    "service",
    "roles",
    "service",
    "role",
    "set",
    "managed",
    "load",
    "balanced",
    "virtual",
    "machines",
    "work",
    "perform",
    "tasks",
    "based",
    "going",
    "run",
    "top",
    "going",
    "run",
    "web",
    "service",
    "going",
    "run",
    "worker",
    "service",
    "defines",
    "kind",
    "roles",
    "gets",
    "attached",
    "goes",
    "virtual",
    "machines",
    "two",
    "types",
    "web",
    "role",
    "worker",
    "roles",
    "web",
    "role",
    "cloud",
    "service",
    "role",
    "configured",
    "run",
    "web",
    "applications",
    "developed",
    "programming",
    "languages",
    "technologies",
    "majorly",
    "support",
    "iis",
    "internet",
    "information",
    "service",
    "support",
    "php",
    "windows",
    "communication",
    "foundation",
    "web",
    "roles",
    "web",
    "roles",
    "automatically",
    "deploys",
    "hosts",
    "application",
    "user",
    "iis",
    "internet",
    "information",
    "service",
    "hand",
    "worker",
    "roles",
    "roles",
    "runs",
    "applications",
    "service",
    "level",
    "tasks",
    "generally",
    "require",
    "iis",
    "actually",
    "differentiating",
    "factor",
    "worker",
    "roles",
    "installed",
    "default",
    "worker",
    "roles",
    "mainly",
    "used",
    "perform",
    "supporting",
    "background",
    "process",
    "along",
    "web",
    "roles",
    "tasks",
    "automatically",
    "compressing",
    "uploading",
    "images",
    "running",
    "scripts",
    "changes",
    "database",
    "getting",
    "new",
    "messages",
    "queue",
    "processing",
    "lot",
    "know",
    "work",
    "applications",
    "work",
    "require",
    "ies",
    "worker",
    "role",
    "main",
    "difference",
    "web",
    "role",
    "worker",
    "role",
    "web",
    "role",
    "automatically",
    "deploys",
    "hosts",
    "application",
    "whereas",
    "worker",
    "role",
    "use",
    "iis",
    "runs",
    "application",
    "standalone",
    "another",
    "classic",
    "question",
    "azure",
    "service",
    "fabric",
    "azure",
    "service",
    "fabric",
    "actually",
    "distributed",
    "system",
    "platform",
    "makes",
    "easy",
    "pack",
    "deploy",
    "manage",
    "scalable",
    "reliable",
    "microservices",
    "containers",
    "service",
    "fabric",
    "also",
    "addresses",
    "significant",
    "challenges",
    "developing",
    "managing",
    "cloud",
    "native",
    "applications",
    "problem",
    "addresses",
    "fixes",
    "developers",
    "administrators",
    "avoid",
    "complex",
    "infrastructure",
    "problems",
    "focus",
    "implementing",
    "mission",
    "critical",
    "demanding",
    "workloads",
    "scaled",
    "managed",
    "console",
    "single",
    "place",
    "short",
    "service",
    "fabric",
    "provides",
    "platform",
    "makes",
    "process",
    "developing",
    "microservices",
    "managing",
    "application",
    "life",
    "cycle",
    "lot",
    "easier",
    "advantages",
    "service",
    "fabric",
    "produce",
    "application",
    "faster",
    "time",
    "market",
    "worry",
    "infrastructure",
    "taken",
    "away",
    "us",
    "design",
    "infrastructure",
    "need",
    "worry",
    "simply",
    "application",
    "application",
    "life",
    "cycle",
    "advantage",
    "supports",
    "windows",
    "supports",
    "linux",
    "supports",
    "servers",
    "cloud",
    "service",
    "fabric",
    "scale",
    "environment",
    "even",
    "thousand",
    "machines",
    "single",
    "command",
    "immediate",
    "need",
    "thousand",
    "machines",
    "immediately",
    "scale",
    "2",
    "000",
    "machines",
    "possible",
    "service",
    "fabric",
    "let",
    "look",
    "question",
    "expect",
    "question",
    "customer",
    "running",
    "hybrid",
    "environment",
    "meaning",
    "applications",
    "running",
    "applications",
    "cloud",
    "reason",
    "classifying",
    "application",
    "goes",
    "cloud",
    "stays",
    "premises",
    "decided",
    "keep",
    "database",
    "environment",
    "lot",
    "customers",
    "environment",
    "classic",
    "scenario",
    "based",
    "question",
    "client",
    "wants",
    "front",
    "end",
    "application",
    "hosted",
    "azure",
    "cloud",
    "wants",
    "database",
    "hosted",
    "security",
    "reasons",
    "full",
    "control",
    "databases",
    "go",
    "suggesting",
    "solution",
    "customer",
    "ideal",
    "solution",
    "scenario",
    "use",
    "based",
    "vpn",
    "solution",
    "applications",
    "cloud",
    "hosted",
    "net",
    "connecting",
    "database",
    "point",
    "site",
    "vpn",
    "traffic",
    "writings",
    "leads",
    "coming",
    "internet",
    "point",
    "site",
    "vpn",
    "link",
    "connecting",
    "azure",
    "vnet",
    "environment",
    "model",
    "approach",
    "solution",
    "best",
    "suited",
    "scenarios",
    "limited",
    "number",
    "resource",
    "needs",
    "connected",
    "cloud",
    "common",
    "question",
    "azure",
    "traffic",
    "manager",
    "course",
    "running",
    "applications",
    "single",
    "server",
    "running",
    "applications",
    "single",
    "environment",
    "right",
    "application",
    "run",
    "multiple",
    "environments",
    "within",
    "azure",
    "running",
    "azure",
    "well",
    "multiple",
    "environments",
    "azure",
    "lot",
    "customers",
    "environment",
    "facing",
    "interview",
    "customer",
    "could",
    "ideal",
    "question",
    "azure",
    "traffic",
    "manager",
    "azure",
    "traffic",
    "manager",
    "dns",
    "based",
    "traffic",
    "load",
    "balancer",
    "actually",
    "enables",
    "us",
    "distribute",
    "traffic",
    "services",
    "across",
    "azure",
    "global",
    "regions",
    "provides",
    "good",
    "availability",
    "good",
    "responsiveness",
    "application",
    "traffic",
    "manager",
    "uses",
    "dns",
    "direct",
    "client",
    "requests",
    "appropriate",
    "service",
    "endpoint",
    "based",
    "traffic",
    "routing",
    "logic",
    "health",
    "endpoints",
    "maintains",
    "short",
    "traffic",
    "manager",
    "load",
    "balancer",
    "enables",
    "users",
    "provide",
    "high",
    "availability",
    "responsiveness",
    "distributing",
    "traffic",
    "optimal",
    "manner",
    "across",
    "azure",
    "run",
    "application",
    "different",
    "regions",
    "advantages",
    "use",
    "cases",
    "using",
    "azure",
    "traffic",
    "manager",
    "provides",
    "multiple",
    "automatic",
    "failover",
    "options",
    "also",
    "helps",
    "reduced",
    "downtime",
    "also",
    "helps",
    "distribution",
    "user",
    "traffic",
    "across",
    "multiple",
    "locations",
    "one",
    "location",
    "overloaded",
    "helps",
    "users",
    "knowing",
    "customers",
    "getting",
    "connected",
    "another",
    "big",
    "use",
    "case",
    "azure",
    "traffic",
    "manager",
    "let",
    "look",
    "question",
    "right",
    "ideal",
    "question",
    "group",
    "servers",
    "connected",
    "together",
    "within",
    "virtual",
    "network",
    "need",
    "move",
    "create",
    "separation",
    "go",
    "achieving",
    "question",
    "goes",
    "like",
    "need",
    "isolate",
    "network",
    "traffic",
    "among",
    "vms",
    "subnet",
    "part",
    "virtual",
    "network",
    "little",
    "downtime",
    "impact",
    "user",
    "given",
    "scenario",
    "best",
    "way",
    "create",
    "new",
    "virtual",
    "network",
    "move",
    "vms",
    "subnet",
    "new",
    "virtual",
    "network",
    "feature",
    "possible",
    "lot",
    "cloud",
    "service",
    "providers",
    "like",
    "aws",
    "lot",
    "providers",
    "environments",
    "might",
    "need",
    "shut",
    "might",
    "need",
    "stop",
    "vm",
    "create",
    "new",
    "vm",
    "based",
    "image",
    "hefty",
    "process",
    "azure",
    "simply",
    "move",
    "vms",
    "one",
    "subnet",
    "another",
    "virtual",
    "network",
    "without",
    "needing",
    "additional",
    "security",
    "like",
    "network",
    "security",
    "group",
    "simply",
    "isolate",
    "need",
    "creating",
    "simple",
    "new",
    "virtual",
    "network",
    "moving",
    "servers",
    "new",
    "virtual",
    "network",
    "look",
    "one",
    "another",
    "common",
    "question",
    "respect",
    "azure",
    "public",
    "private",
    "hybrid",
    "cloud",
    "really",
    "test",
    "well",
    "understood",
    "different",
    "cloud",
    "offerings",
    "market",
    "public",
    "private",
    "hybrid",
    "least",
    "three",
    "basic",
    "offerings",
    "market",
    "public",
    "private",
    "hybrid",
    "cloud",
    "public",
    "cloud",
    "common",
    "way",
    "deploying",
    "cloud",
    "computing",
    "applications",
    "resources",
    "like",
    "servers",
    "storage",
    "owned",
    "operated",
    "third",
    "party",
    "cloud",
    "service",
    "providers",
    "like",
    "microsoft",
    "azure",
    "microsoft",
    "azure",
    "good",
    "example",
    "public",
    "cloud",
    "every",
    "component",
    "user",
    "using",
    "running",
    "azure",
    "public",
    "cloud",
    "right",
    "let",
    "talk",
    "advantages",
    "public",
    "cloud",
    "advantages",
    "low",
    "cost",
    "need",
    "purchase",
    "hardware",
    "software",
    "pay",
    "services",
    "use",
    "public",
    "cloud",
    "literally",
    "maintenance",
    "service",
    "provider",
    "maintains",
    "environment",
    "us",
    "public",
    "cloud",
    "nearly",
    "unlimited",
    "scalability",
    "meaning",
    "get",
    "resources",
    "demand",
    "meet",
    "business",
    "requirements",
    "demand",
    "public",
    "clouds",
    "highly",
    "reliable",
    "vast",
    "network",
    "servers",
    "ensure",
    "application",
    "fail",
    "advantages",
    "public",
    "cloud",
    "let",
    "talk",
    "private",
    "cloud",
    "private",
    "cloud",
    "consists",
    "compute",
    "resources",
    "used",
    "extensively",
    "one",
    "business",
    "one",
    "organization",
    "private",
    "cloud",
    "physically",
    "located",
    "organizations",
    "data",
    "center",
    "hosted",
    "service",
    "provider",
    "whichever",
    "case",
    "private",
    "cloud",
    "services",
    "infrastructure",
    "always",
    "maintained",
    "private",
    "network",
    "maintained",
    "hardware",
    "software",
    "dedicated",
    "solely",
    "one",
    "organization",
    "solely",
    "organization",
    "short",
    "private",
    "cloud",
    "azure",
    "azure",
    "services",
    "run",
    "within",
    "data",
    "center",
    "data",
    "center",
    "used",
    "user",
    "host",
    "systems",
    "applications",
    "advantages",
    "advantages",
    "gives",
    "security",
    "resources",
    "shared",
    "others",
    "higher",
    "level",
    "control",
    "security",
    "resource",
    "application",
    "possible",
    "hybrid",
    "cloud",
    "hybrid",
    "cloud",
    "best",
    "worlds",
    "combines",
    "features",
    "public",
    "private",
    "cloud",
    "user",
    "components",
    "run",
    "azure",
    "others",
    "within",
    "data",
    "center",
    "kind",
    "share",
    "resources",
    "words",
    "kind",
    "share",
    "application",
    "half",
    "application",
    "would",
    "running",
    "premises",
    "half",
    "would",
    "cloud",
    "would",
    "working",
    "harmony",
    "support",
    "application",
    "business",
    "need",
    "hybrid",
    "cloud",
    "one",
    "another",
    "good",
    "example",
    "question",
    "wants",
    "test",
    "well",
    "pick",
    "services",
    "well",
    "understood",
    "azure",
    "products",
    "services",
    "picking",
    "right",
    "service",
    "need",
    "question",
    "would",
    "go",
    "like",
    "kind",
    "storage",
    "best",
    "suited",
    "handle",
    "unstructured",
    "data",
    "lot",
    "storage",
    "options",
    "available",
    "requirement",
    "one",
    "would",
    "choose",
    "unstructured",
    "data",
    "answer",
    "question",
    "blob",
    "storage",
    "blob",
    "storage",
    "designed",
    "support",
    "unstructured",
    "data",
    "works",
    "way",
    "places",
    "data",
    "different",
    "tiers",
    "based",
    "often",
    "accessed",
    "different",
    "tier",
    "means",
    "different",
    "performance",
    "different",
    "performance",
    "means",
    "different",
    "cost",
    "associated",
    "lot",
    "advantages",
    "get",
    "use",
    "blob",
    "storage",
    "unstructured",
    "data",
    "addition",
    "type",
    "unstructured",
    "data",
    "stored",
    "blob",
    "storage",
    "true",
    "couple",
    "storage",
    "options",
    "azure",
    "blob",
    "storage",
    "store",
    "type",
    "unstructured",
    "data",
    "data",
    "integrity",
    "maintained",
    "every",
    "time",
    "object",
    "changed",
    "blob",
    "storage",
    "best",
    "part",
    "blob",
    "storage",
    "helps",
    "increase",
    "applications",
    "performance",
    "reduces",
    "bandwidth",
    "consumption",
    "reduces",
    "bandwidth",
    "consumption",
    "application",
    "benefits",
    "get",
    "block",
    "storage",
    "blob",
    "storage",
    "ones",
    "well",
    "suited",
    "unstructured",
    "data",
    "answer",
    "really",
    "process",
    "worked",
    "done",
    "labs",
    "basic",
    "labs",
    "azure",
    "easily",
    "answer",
    "question",
    "five",
    "step",
    "process",
    "first",
    "step",
    "log",
    "azure",
    "second",
    "one",
    "create",
    "resource",
    "resource",
    "resource",
    "manager",
    "within",
    "resource",
    "manager",
    "selecting",
    "resource",
    "pick",
    "offering",
    "system",
    "want",
    "windows",
    "linux",
    "within",
    "windows",
    "flavor",
    "want",
    "within",
    "linux",
    "flavor",
    "want",
    "decide",
    "entering",
    "relevant",
    "information",
    "relevant",
    "information",
    "like",
    "name",
    "instance",
    "vm",
    "going",
    "launch",
    "password",
    "url",
    "goes",
    "couple",
    "relevant",
    "information",
    "goes",
    "gets",
    "attached",
    "vm",
    "select",
    "size",
    "virtual",
    "machine",
    "different",
    "size",
    "different",
    "uh",
    "types",
    "available",
    "kind",
    "application",
    "intensity",
    "application",
    "running",
    "top",
    "select",
    "virtual",
    "select",
    "size",
    "virtual",
    "machine",
    "review",
    "everything",
    "whether",
    "good",
    "changes",
    "required",
    "go",
    "back",
    "edit",
    "come",
    "back",
    "launch",
    "vm",
    "start",
    "working",
    "within",
    "like",
    "three",
    "four",
    "minutes",
    "even",
    "five",
    "minutes",
    "within",
    "three",
    "four",
    "minutes",
    "gets",
    "ready",
    "start",
    "working",
    "quick",
    "five",
    "step",
    "process",
    "able",
    "answer",
    "easily",
    "done",
    "labs",
    "azure",
    "let",
    "look",
    "question",
    "posed",
    "scenario",
    "thought",
    "picked",
    "common",
    "scenario",
    "based",
    "question",
    "asked",
    "interview",
    "thought",
    "present",
    "answers",
    "explanation",
    "get",
    "benefited",
    "let",
    "look",
    "question",
    "asked",
    "make",
    "sure",
    "virtual",
    "machines",
    "able",
    "communicate",
    "securely",
    "ensure",
    "security",
    "good",
    "amount",
    "security",
    "would",
    "correct",
    "best",
    "answer",
    "would",
    "using",
    "virtual",
    "network",
    "azure",
    "enables",
    "us",
    "communicate",
    "internet",
    "securely",
    "enables",
    "us",
    "communicate",
    "data",
    "center",
    "secure",
    "fashion",
    "advantage",
    "using",
    "virtual",
    "network",
    "users",
    "create",
    "private",
    "network",
    "users",
    "pick",
    "private",
    "ip",
    "ranges",
    "users",
    "create",
    "subnet",
    "users",
    "create",
    "routing",
    "two",
    "subnets",
    "lot",
    "goes",
    "virtual",
    "network",
    "customizable",
    "users",
    "provided",
    "isolated",
    "highly",
    "secure",
    "environment",
    "applications",
    "completely",
    "isolated",
    "customers",
    "completely",
    "isolated",
    "applications",
    "running",
    "virtual",
    "network",
    "within",
    "account",
    "multiple",
    "virtual",
    "networks",
    "one",
    "application",
    "running",
    "virtual",
    "machine",
    "completely",
    "isolated",
    "applications",
    "running",
    "virtual",
    "machines",
    "course",
    "traffic",
    "stays",
    "within",
    "azure",
    "network",
    "virtual",
    "machine",
    "within",
    "azure",
    "network",
    "depending",
    "set",
    "routing",
    "set",
    "routing",
    "go",
    "reach",
    "internet",
    "going",
    "go",
    "otherwise",
    "going",
    "stay",
    "within",
    "azure",
    "set",
    "routing",
    "reach",
    "going",
    "go",
    "reach",
    "otherwise",
    "going",
    "go",
    "reach",
    "going",
    "stay",
    "within",
    "azure",
    "also",
    "allows",
    "users",
    "design",
    "network",
    "like",
    "already",
    "discussed",
    "picking",
    "ips",
    "picking",
    "routing",
    "know",
    "picking",
    "subnets",
    "know",
    "many",
    "servers",
    "present",
    "particular",
    "subnet",
    "many",
    "servers",
    "subnet",
    "accommodate",
    "size",
    "subnet",
    "ip",
    "ranges",
    "netting",
    "masking",
    "ips",
    "creating",
    "vpn",
    "possible",
    "virtual",
    "network",
    "really",
    "allows",
    "users",
    "design",
    "network",
    "using",
    "virtual",
    "machine",
    "secure",
    "applications",
    "cloud",
    "let",
    "look",
    "scenario",
    "ensure",
    "every",
    "time",
    "user",
    "logs",
    "asked",
    "password",
    "part",
    "authentication",
    "really",
    "want",
    "users",
    "password",
    "every",
    "time",
    "log",
    "different",
    "application",
    "well",
    "applications",
    "authentication",
    "mechanism",
    "place",
    "wants",
    "authenticate",
    "user",
    "log",
    "ensuring",
    "user",
    "log",
    "every",
    "time",
    "mean",
    "wiping",
    "away",
    "authentication",
    "authorization",
    "present",
    "application",
    "still",
    "need",
    "place",
    "make",
    "user",
    "hassle",
    "free",
    "asked",
    "password",
    "password",
    "let",
    "look",
    "options",
    "available",
    "first",
    "one",
    "enable",
    "microsoft",
    "account",
    "authentication",
    "well",
    "going",
    "fix",
    "user",
    "still",
    "need",
    "username",
    "password",
    "deploy",
    "express",
    "route",
    "going",
    "fix",
    "either",
    "express",
    "route",
    "network",
    "level",
    "service",
    "connects",
    "cloud",
    "got",
    "nothing",
    "prompting",
    "prompting",
    "password",
    "setup",
    "vpn",
    "data",
    "center",
    "azure",
    "set",
    "80",
    "domain",
    "controller",
    "vm",
    "implement",
    "integrated",
    "windows",
    "authentication",
    "well",
    "use",
    "username",
    "password",
    "cloud",
    "setup",
    "vpn",
    "ad",
    "controller",
    "setup",
    "going",
    "stop",
    "asking",
    "repeated",
    "passwords",
    "using",
    "password",
    "premises",
    "cloud",
    "got",
    "nothing",
    "prompting",
    "user",
    "password",
    "right",
    "password",
    "different",
    "prompting",
    "user",
    "password",
    "two",
    "different",
    "scenarios",
    "also",
    "equation",
    "last",
    "one",
    "configure",
    "ad",
    "sync",
    "use",
    "single",
    "right",
    "one",
    "configure",
    "ad",
    "use",
    "single",
    "sign",
    "going",
    "going",
    "ask",
    "username",
    "password",
    "every",
    "time",
    "access",
    "application",
    "logged",
    "login",
    "going",
    "stay",
    "active",
    "like",
    "24",
    "hours",
    "depending",
    "configure",
    "within",
    "time",
    "access",
    "lot",
    "applications",
    "going",
    "ask",
    "username",
    "password",
    "already",
    "single",
    "signed",
    "signed",
    "using",
    "right",
    "credentials",
    "let",
    "look",
    "one",
    "need",
    "ensure",
    "virtual",
    "machines",
    "remain",
    "available",
    "migrating",
    "azure",
    "would",
    "appropriate",
    "service",
    "use",
    "right",
    "let",
    "look",
    "options",
    "traffic",
    "manager",
    "traffic",
    "manager",
    "literally",
    "dna",
    "service",
    "let",
    "look",
    "one",
    "update",
    "domains",
    "traffic",
    "manager",
    "updating",
    "url",
    "traffic",
    "manager",
    "gets",
    "updated",
    "starts",
    "sending",
    "requests",
    "particular",
    "url",
    "gon",
    "na",
    "take",
    "downtime",
    "update",
    "url",
    "populated",
    "different",
    "places",
    "takes",
    "time",
    "within",
    "time",
    "user",
    "trying",
    "access",
    "going",
    "fail",
    "express",
    "route",
    "cloud",
    "services",
    "express",
    "route",
    "could",
    "fact",
    "right",
    "answer",
    "express",
    "route",
    "extension",
    "cloud",
    "environment",
    "question",
    "really",
    "comes",
    "customer",
    "hybrid",
    "environment",
    "applications",
    "running",
    "applications",
    "running",
    "cloud",
    "want",
    "way",
    "migrate",
    "applications",
    "cloud",
    "words",
    "kind",
    "cut",
    "cloud",
    "express",
    "route",
    "service",
    "connects",
    "cloud",
    "cut",
    "traffic",
    "sent",
    "cloud",
    "instead",
    "handled",
    "fact",
    "services",
    "application",
    "getting",
    "getting",
    "shut",
    "premises",
    "request",
    "come",
    "pattern",
    "instead",
    "handled",
    "routed",
    "cloud",
    "using",
    "express",
    "route",
    "api",
    "calls",
    "get",
    "addressed",
    "queries",
    "gets",
    "answered",
    "cloud",
    "express",
    "route",
    "service",
    "look",
    "question",
    "administrator",
    "website",
    "called",
    "web",
    "game",
    "required",
    "validate",
    "deploy",
    "changes",
    "made",
    "website",
    "development",
    "team",
    "minimum",
    "downtime",
    "real",
    "question",
    "validate",
    "deployment",
    "changes",
    "made",
    "development",
    "team",
    "let",
    "look",
    "options",
    "create",
    "new",
    "linked",
    "resource",
    "create",
    "staging",
    "environment",
    "site",
    "enable",
    "remote",
    "debugging",
    "website",
    "create",
    "new",
    "website",
    "well",
    "would",
    "want",
    "create",
    "new",
    "website",
    "validate",
    "changes",
    "remote",
    "debugging",
    "going",
    "help",
    "debugging",
    "captures",
    "logs",
    "changes",
    "happening",
    "anything",
    "validating",
    "changes",
    "create",
    "staging",
    "environment",
    "could",
    "right",
    "answer",
    "staging",
    "environments",
    "anything",
    "run",
    "production",
    "run",
    "staging",
    "environment",
    "failures",
    "would",
    "happen",
    "production",
    "simply",
    "run",
    "production",
    "captured",
    "run",
    "application",
    "staging",
    "environment",
    "way",
    "staging",
    "environment",
    "helpful",
    "useful",
    "service",
    "way",
    "catch",
    "errors",
    "words",
    "validate",
    "changes",
    "done",
    "development",
    "team",
    "move",
    "production",
    "reduces",
    "downtime",
    "production",
    "environment",
    "look",
    "one",
    "last",
    "question",
    "standard",
    "tier",
    "application",
    "used",
    "across",
    "world",
    "uses",
    "azure",
    "website",
    "standard",
    "tier",
    "uses",
    "large",
    "amount",
    "image",
    "files",
    "get",
    "could",
    "website",
    "lot",
    "pictures",
    "causing",
    "application",
    "load",
    "slow",
    "handle",
    "situation",
    "let",
    "look",
    "options",
    "given",
    "configure",
    "blob",
    "storage",
    "custom",
    "domain",
    "well",
    "application",
    "pictures",
    "pictures",
    "pictures",
    "application",
    "right",
    "configuring",
    "blob",
    "storage",
    "might",
    "help",
    "could",
    "interactive",
    "website",
    "ca",
    "run",
    "blob",
    "storage",
    "let",
    "look",
    "options",
    "configure",
    "azure",
    "website",
    "auto",
    "scaling",
    "increase",
    "instances",
    "high",
    "loads",
    "picture",
    "causing",
    "issues",
    "website",
    "cpu",
    "memory",
    "unavailable",
    "memory",
    "enough",
    "causing",
    "application",
    "slow",
    "need",
    "identify",
    "causing",
    "application",
    "slow",
    "cpu",
    "memory",
    "configure",
    "azure",
    "auto",
    "scaling",
    "gon",
    "na",
    "help",
    "options",
    "let",
    "see",
    "configure",
    "azure",
    "cdn",
    "cache",
    "responses",
    "applications",
    "web",
    "endpoint",
    "cdn",
    "could",
    "right",
    "answer",
    "look",
    "says",
    "cdn",
    "cache",
    "responses",
    "applications",
    "web",
    "endpoint",
    "cdn",
    "designed",
    "though",
    "best",
    "way",
    "use",
    "cdn",
    "capture",
    "responses",
    "application",
    "web",
    "endpoint",
    "proper",
    "design",
    "cdn",
    "would",
    "cache",
    "frequently",
    "used",
    "ones",
    "words",
    "cache",
    "static",
    "content",
    "photos",
    "videos",
    "logos",
    "pictures",
    "lot",
    "static",
    "content",
    "never",
    "changes",
    "let",
    "look",
    "last",
    "option",
    "configure",
    "azure",
    "cdn",
    "cache",
    "site",
    "images",
    "content",
    "stored",
    "azure",
    "blob",
    "storage",
    "absolutely",
    "correct",
    "redesign",
    "application",
    "store",
    "pictures",
    "high",
    "quality",
    "lazy",
    "loading",
    "slow",
    "loading",
    "pictures",
    "high",
    "quality",
    "bigger",
    "size",
    "store",
    "cdn",
    "content",
    "let",
    "stored",
    "azure",
    "blob",
    "storage",
    "right",
    "way",
    "designing",
    "application",
    "application",
    "going",
    "run",
    "faster",
    "application",
    "going",
    "respond",
    "faster",
    "users",
    "thanks",
    "guys",
    "reached",
    "end",
    "complete",
    "cloud",
    "computing",
    "course",
    "hope",
    "enjoyed",
    "video",
    "like",
    "share",
    "thank",
    "watching",
    "stay",
    "tuned",
    "simply",
    "learn",
    "music"
  ],
  "keywords": [
    "cloud",
    "computing",
    "course",
    "simply",
    "learn",
    "video",
    "important",
    "architect",
    "years",
    "experience",
    "domain",
    "take",
    "talk",
    "aws",
    "microsoft",
    "azure",
    "google",
    "platform",
    "also",
    "look",
    "become",
    "three",
    "finally",
    "interview",
    "questions",
    "might",
    "first",
    "work",
    "let",
    "learning",
    "called",
    "things",
    "different",
    "types",
    "available",
    "companies",
    "using",
    "getting",
    "benefited",
    "going",
    "need",
    "servers",
    "application",
    "say",
    "basic",
    "web",
    "server",
    "come",
    "easy",
    "business",
    "know",
    "would",
    "already",
    "running",
    "looking",
    "really",
    "office",
    "one",
    "day",
    "said",
    "like",
    "online",
    "words",
    "needed",
    "website",
    "thing",
    "together",
    "comes",
    "requirement",
    "databases",
    "get",
    "means",
    "lot",
    "technical",
    "manage",
    "hardware",
    "software",
    "monitor",
    "infrastructure",
    "go",
    "made",
    "check",
    "money",
    "explain",
    "time",
    "use",
    "network",
    "remote",
    "hosted",
    "internet",
    "store",
    "process",
    "data",
    "locally",
    "local",
    "storing",
    "anywhere",
    "accessing",
    "services",
    "providers",
    "able",
    "deploy",
    "applications",
    "management",
    "configuration",
    "portal",
    "service",
    "give",
    "us",
    "ability",
    "global",
    "example",
    "amazon",
    "anything",
    "want",
    "resource",
    "almost",
    "ready",
    "production",
    "product",
    "market",
    "compared",
    "environment",
    "started",
    "next",
    "planning",
    "right",
    "size",
    "always",
    "rest",
    "buy",
    "pay",
    "fit",
    "start",
    "better",
    "new",
    "environments",
    "demand",
    "monitoring",
    "automation",
    "scale",
    "resources",
    "based",
    "r",
    "accessed",
    "long",
    "connected",
    "even",
    "tools",
    "making",
    "sure",
    "stored",
    "durable",
    "storage",
    "secure",
    "question",
    "highly",
    "multiple",
    "regions",
    "imagine",
    "centers",
    "sort",
    "deployments",
    "private",
    "public",
    "hybrid",
    "provides",
    "deployment",
    "everything",
    "users",
    "permissions",
    "given",
    "access",
    "nothing",
    "managed",
    "provider",
    "hand",
    "single",
    "organization",
    "organizations",
    "choose",
    "run",
    "done",
    "products",
    "good",
    "taken",
    "whole",
    "level",
    "benefit",
    "keep",
    "present",
    "uses",
    "share",
    "model",
    "basis",
    "provision",
    "well",
    "ec2",
    "vm",
    "type",
    "end",
    "hours",
    "client",
    "full",
    "control",
    "maintain",
    "difference",
    "four",
    "premises",
    "left",
    "watch",
    "little",
    "less",
    "move",
    "component",
    "attached",
    "life",
    "cycle",
    "solution",
    "understanding",
    "properly",
    "pick",
    "offered",
    "define",
    "meaning",
    "compute",
    "provide",
    "support",
    "capacity",
    "helps",
    "picking",
    "needs",
    "lambda",
    "serverless",
    "appropriate",
    "backup",
    "separate",
    "within",
    "s3",
    "kind",
    "identify",
    "vpc",
    "route",
    "53",
    "dns",
    "direct",
    "connection",
    "center",
    "set",
    "security",
    "im",
    "authentication",
    "variety",
    "got",
    "auto",
    "scaling",
    "elastic",
    "formation",
    "custom",
    "help",
    "testing",
    "code",
    "build",
    "test",
    "quickly",
    "click",
    "analytic",
    "analytics",
    "iam",
    "migrating",
    "without",
    "case",
    "back",
    "picture",
    "changes",
    "request",
    "make",
    "optimized",
    "still",
    "add",
    "cost",
    "happen",
    "technologies",
    "uh",
    "provisioning",
    "adding",
    "top",
    "creating",
    "gets",
    "lost",
    "features",
    "put",
    "simple",
    "much",
    "possible",
    "runs",
    "certain",
    "makes",
    "fact",
    "content",
    "caching",
    "various",
    "locations",
    "around",
    "best",
    "part",
    "per",
    "reliable",
    "scalable",
    "flexible",
    "design",
    "options",
    "launched",
    "customers",
    "launch",
    "big",
    "customer",
    "requests",
    "focus",
    "developing",
    "year",
    "10",
    "least",
    "100",
    "great",
    "option",
    "object",
    "migration",
    "transfer",
    "way",
    "achieve",
    "computer",
    "anytime",
    "notification",
    "systems",
    "update",
    "email",
    "could",
    "stuff",
    "key",
    "system",
    "bit",
    "takes",
    "paying",
    "short",
    "bigger",
    "effective",
    "account",
    "place",
    "company",
    "problem",
    "across",
    "existing",
    "id",
    "old",
    "button",
    "backups",
    "along",
    "lines",
    "fast",
    "database",
    "greater",
    "scenario",
    "spotify",
    "offers",
    "instant",
    "issues",
    "every",
    "globally",
    "latency",
    "used",
    "easily",
    "yes",
    "specific",
    "see",
    "create",
    "billing",
    "identity",
    "user",
    "plus",
    "list",
    "operating",
    "deploying",
    "instead",
    "trying",
    "another",
    "allows",
    "connect",
    "purpose",
    "world",
    "designing",
    "rds",
    "machine",
    "spending",
    "managing",
    "reach",
    "save",
    "dollars",
    "include",
    "instances",
    "handle",
    "five",
    "load",
    "balancer",
    "availability",
    "zones",
    "delivery",
    "group",
    "information",
    "faster",
    "mobile",
    "cloudfront",
    "development",
    "largest",
    "flexibility",
    "docker",
    "developers",
    "containers",
    "container",
    "built",
    "quick",
    "wide",
    "perform",
    "analysis",
    "thought",
    "functions",
    "costs",
    "80",
    "general",
    "workloads",
    "think",
    "many",
    "answer",
    "people",
    "select",
    "language",
    "host",
    "scalability",
    "depending",
    "following",
    "bean",
    "stock",
    "traffic",
    "behind",
    "expand",
    "number",
    "programming",
    "familiar",
    "automatically",
    "balancing",
    "virtual",
    "includes",
    "project",
    "ip",
    "low",
    "price",
    "lets",
    "scales",
    "thousands",
    "second",
    "file",
    "apps",
    "amount",
    "ebs",
    "block",
    "volume",
    "instance",
    "zone",
    "efs",
    "configure",
    "files",
    "two",
    "major",
    "tasks",
    "memory",
    "performance",
    "taking",
    "enables",
    "sql",
    "intelligent",
    "fully",
    "standard",
    "generally",
    "enterprise",
    "step",
    "usage",
    "understand",
    "name",
    "away",
    "minutes",
    "db",
    "groups",
    "allow",
    "deny",
    "free",
    "something",
    "pass",
    "gon",
    "na",
    "intelligence",
    "advantage",
    "moving",
    "looks",
    "worry",
    "cloudwatch",
    "additional",
    "sign",
    "care",
    "url",
    "default",
    "required",
    "send",
    "somebody",
    "feature",
    "app",
    "address",
    "dynamodb",
    "created",
    "find",
    "particular",
    "couple",
    "provided",
    "percent",
    "actually",
    "supports",
    "point",
    "12",
    "period",
    "ca",
    "integration",
    "devops",
    "working",
    "linux",
    "windows",
    "ram",
    "fabric",
    "exactly",
    "components",
    "require",
    "networking",
    "cdn",
    "high",
    "person",
    "express",
    "happens",
    "domains",
    "disk",
    "machines",
    "requirements",
    "blob",
    "ensure",
    "unstructured",
    "text",
    "message",
    "queue",
    "large",
    "works",
    "talks",
    "ones",
    "call",
    "latest",
    "asked",
    "goes",
    "cases",
    "develop",
    "becomes",
    "immediately",
    "vms",
    "location",
    "month",
    "replication",
    "logs",
    "visual",
    "country",
    "automate",
    "gives",
    "region",
    "side",
    "console",
    "read",
    "developer",
    "implement",
    "active",
    "directory",
    "whether",
    "batch",
    "schedule",
    "install",
    "mean",
    "choice",
    "distributed",
    "implementing",
    "capabilities",
    "enough",
    "designed",
    "requires",
    "administrator",
    "downtime",
    "staging",
    "talking",
    "main",
    "kubernetes",
    "enable",
    "sometimes",
    "images",
    "source",
    "wants",
    "nosql",
    "cache",
    "engine",
    "definitely",
    "throughput",
    "horizontal",
    "redis",
    "messaging",
    "stores",
    "actual",
    "especially",
    "policies",
    "stop",
    "fix",
    "policy",
    "certification",
    "solutions",
    "disaster",
    "role",
    "recommendations",
    "logging",
    "pattern",
    "vpn",
    "team",
    "manager",
    "last",
    "networks",
    "recover",
    "says",
    "routing",
    "subnet",
    "snapshot",
    "snapshots",
    "recovery",
    "steps",
    "log",
    "version",
    "messages",
    "table",
    "compare",
    "try",
    "certifications",
    "pricing",
    "show",
    "password",
    "firewall",
    "change",
    "username",
    "decide",
    "tier",
    "gcp",
    "cpu",
    "api",
    "spot",
    "native",
    "virtualization",
    "advantages",
    "temporary",
    "engineer",
    "aw",
    "associate",
    "certified",
    "roles",
    "becoming",
    "examination",
    "exam",
    "strategy",
    "template",
    "bucket",
    "ami",
    "gateway",
    "cloudtrail",
    "config",
    "denial",
    "common",
    "nat",
    "reserved",
    "allowed",
    "consistency",
    "game",
    "equation",
    "snowball",
    "processing",
    "rpo",
    "classic",
    "iem",
    "gigabit"
  ]
}