{
  "text": "AWS Amazon web services is one of the\noldest and one of the leading Cloud\nproviders in the market today offering\nclose to 200 100 plus services and it's\nvery easy for us to get lost in these\ndifferent 200 plus services so today in\nthis video I will talk about 24 most\npopular AWS products uh under these\ndifferent categories uh we will have a\nvery quick overview of what exactly\nthese services do to enable you to\nunderstand and whether you should use\nthis service or not so we'll take a very\nquick sneak peek into what exactly these\n24 services do and how you could use\nthese services in your Solutions so\nlet's get started so these are those 24\nServices which are according to me the\nmost used obviously you could differ on\ncertain services but let's quickly\nunderstand uh what exactly these\nservices do so the bread and butter of\nAWS has been its compute from the very\nbeginning so the very first and the most\npopular service is ec2 elastic compute\nCloud it is the is offering from AWS and\nyou using ec2 you could create your\nvirtual machines you can spin up your\nvirtual machines and you could add scale\nuh you could downgrade the machines very\neasily so this is the basic the most\nimportant and the strength of AWS which\nis it easy to service the second in the\nlist is Lambda which is a very important\nand widely used Services it is an event\ndriven comp compute service serverless\ncompute service and under Lambda you\ncould write your custom application code\nto do certain task which are very small\nwhich are which are required to do a\nspecific activity suppose you take a\nphotograph you upload it somewhere and\nthen you run a Lambda function on top of\nit so that it could be resized into a\ntablet or for a tablet or a laptop so\nthose kind of small things suppose you\nwant to upload an Excel file you can run\nthe Lambda to convert that Excel file\ninto a CSV I'm just giving you examples\nso if you want to create your end to\nendend web application Lambda functions\ncould be used at certain places to uh\nyou know to create those event driven uh\nfunctions so very important serverless\noffering under comput the third in the\nlist is elastic beanock and sometimes we\nget confused between Lambda and beanock\nbecause there are lot of similarity you\ncould deploy your code into beanock and\ncreate your web application beanock\nwould deploy and run your web\napplication without any compute uh\nfacility being managed by you\nspecifically so the difference between\nLambda and bean stock is Lambda is\ncreated for specific tasks which are\nsmaller in size wherein for bean stock\nyou could deploy your whole website on\nbeanock so it is to deploy your full\nfull scale web applications you could\ndeploy your code and then rest is taken\ncare by\nAWS Hello friends a quick reminder AWS\nfor dummies course which is for\nbeginners on cloud especially on AWS is\nnow live we have more than 12 plus hours\nof content on the course with Hands-On\nexercises and quizzes so do check this\noffer it's for limited time I really\nwant you guys to get onto this Cloud\nJourney so link is in the description\ncheck it out and I really want to see\nyou there now back to the video another\nvery important service in AWS is AWS S3\nwhich is an object storage which is\ncalled as simple storage Services it is\nan object store where you could store\nall kinds of data structured\nunstructured semi-structured data and\npotentially this becomes your Landing\nZone when whenever you're starting any\nkind of work in AWS S3 bucket you need\nto create an S3 bucket upload your files\nit could also create become your data\nlink Amazon S3 could also host a website\nwith static content there are plenty of\nuses you so you could upload your log\nfiles analytics data video music files\nTwitter feeds whatever you call it\nsimple storage service S3 bucket is the\nobject storage which you need to use the\nnext in the list is elastic Block store\nwhich is also called as EBS so this\nactually provides the block storage or\nblock volume for your ec2 instance you\ncan attach your SSD or your HDD uh Block\nstore uh for your ec2 instances and\nthese are very high performing block\nstorage so reads and writes become\nreally fast if you attach ec2 and EBS so\nyour elastic Block store becomes your\nbackbone of your ec2 instance and you\ncould store all the data into this block\nstore so under database the first\nproduct offering is uh Amazon Aurora\nwhich is the rdbms relational database\nManagement Service and it offers full\ncompatibility with mySQL and post SQL\ndatabases and with 5x and 3X throughput\nspeed so if you need a postra or a MySQL\ndata database instance you don't have to\nprovision it on ec2 you could simply use\nthis serverless uh service and rest all\nwill be managed by AWS while you\nleverage all the benefits of MySQL and\npost address and the second one is\nDynamo DB which is a nosql database if\nyou want to know more about no SQL\ndatabase there's a specific video I have\ncreated but this particular service is\nagain uh offered by AWS as a serverless\nservice wherein you could provision\nkey value or document databases so this\nis the nosql database offering so the\nnext in the list is RDS relational\ndatabase service which consist of six\ndifferent data uh databases offered by\nAWS Amazon Aurora comes under this then\npostgress SQL uh MySQL Maria DB um SQL\nServer Oracle all these kind of\ndifferent databases could be provisioned\nunder relational database service and\nagain everything is managed by AWS so\nthe last one is elastic cachier which is\nan inmemory DB offering by AWS you could\nget microsc performance using inmemory\ncaching uh use cases like gaming\nstreaming data hosting content which\nneeds high performance all that can be\ncashed in memory and for that you use\nelastic caching so the next category is\nnetwork and content delivery and under\nthis the first product is VPC virtual\nprivate cloud\nit's an offering which you might have\nheard of in Google and Azure as well\nwith the help of VPC you could\nunderstand how you would manage your\nresources how one resource would connect\nto the other resource within that\nvirtual Network environment how you\nwould secure your Cloud environment all\nthat happens through VPC and generally\nyour networking team would be doing this\nwork for you the second offering is\ncloudfront which is a Content delivery\nuh Network offering Whenever there is a\nrequirement to access certain content\nfrom a certain geographical location\nthis cloudfront service could provide\nthat particular data into that\nparticular Edge location AWS Edge\nlocation so that the user who's sitting\ncloser to that particular GE location\ncould fetch the data using Cloud front\nfrom that particular Edge location so\nit's a CDN offering so Route 53 is a\nvery fancy name for a simple DNS service\ndomain name service if you don't know\nwhat is DNS go check out my video\nthere's a complete playlist for\nnetworking so DNS domain name service\nhelps you get the IP address of any\nwebsite you want to navigate so Route 53\nis the component which you need to\nconfigure if you want to use the DNS\nservice within\nAWS elastic load balancing again it\nimplements load balancing for uh you\nknow application load balancer Gateway\nload balancer Network load balancer all\nthese kind of different load balancing\nactivities can be done using elastic\nload balancing service I have created\ntwo part series for understanding load\nbalancing in depth so you can check that\nas well API Gateway is all about\nmanaging creating publishing securing\napis testing apis so if you want to\nconnect two different systems with the\nhelp of API and you want to transact\nbetween the two systems using API then\nyou need to use API gateways so under\nanalytics the first product is Amazon\nKinesis which is which helps collect\nprocess store realtime streaming data\nfrom um for example streaming video\ngames for example from iot devices\nanything wherein we need streaming data\nto be captured and processed immediately\nwe need uh Amazon Kinesis as a service\nand then there are multiple offerings\nwithin that so you for example you have\nAmazon Kinesis video streams which is\nspecifically built to capture uh any\nkind of realtime video which is coming\nin live for example there's a football\nmatch which is going in live you want to\ncapture that and process information out\nof it then you'll plug in Amazon Kinesis\nvideo stream offering uh to process it\nso this is something which you need to\nconsider if you are if you are working\non processing real time streaming data\nso the second in the list is Amazon red\nshift which is AWS answer to Google big\nquery AWS red shift is AWS reply or a\ncompetitor product to Big query Google\nbig query it also helps you run\nanalytics workload meant for your data\nwarehouses and data Lakes it is SQL\nbased so you can use uh red shift for\nrunning all kind of your analytical use\ncases an analytical workloads and then\nyou can store the data in red shift and\nthen process it in your machine learning\nin your AI or ml models you could do\npretty much everything uh because it's\nreally really fast you could process xab\nof data in seconds so yeah it is one of\nof the very important service if you're\ncoming from a data analytics and data\ndata warehousing background AWS glue is\npurely an ETL product it is a data\nintegration service which helps you\nconnect with various kind of different\nsources it could be real time it could\nbe badge it could be iot whatever and\nthen you could use AWS glue to create\nETL workflows to process the data\nanalyze the data extract transform and\nload the data into the target systems\nthis is a very important piece if you\ndesigning your data Pipeline and if you\nwant to know more see or check out my\ndata pipeline video under machine\nlearning one product which I have\nhighlighted is Amazon Sage maker because\nthis product can be used to build train\nand deploy all types of machine learning\nmodels it can help you implement machine\nlearning operations which is also called\nas mlops so while working on these ml\nmodels you don't have to care about any\nbackend infrastructure needs because AWS\nprocess it for you so if you are a data\nscientist if you are an ml engineer you\nneed to understand more about Amazon\nSage maker so the next category is\nsecurity and in security the main\nservice which is used across all clouds\nis I am identity and access management\nso as the name suggest IM am goal is to\nunderstand who can access what where who\nis the user can access is the policies\nwhich you uh you know which you enforce\nand what is the actual resource which is\ncoming into the picture so you could\ncreate fine grain access controls using\nidentity and access management this is a\nvery important area and that's why we\nhave Cloud admins IM admins managing the\nsecurity of the platform managing the\naccess and authorization authentication\nand authorization of uh the cloud\nplatform so Cloud IM is a very important\nservice kmsk Management Service lets you\ncreate manage and control all kinds of\ncryptographic keys which you use to\nencrypt and decrypt your data so KMS is\na very important service coming to\nContainers eks elastic cuber service is\na manage service provided by Amazon to\nrun all kinds of your kubernetes\nworkload if you don't know much about\nkubernetes or containers you could check\nmy videos on the same the second in the\nlist under containers is fargate fargate\nis the serverless compute offering to\nrun all kinds of container workloads so\nif you have a container image you could\nsimply deploy it using fargate and rest\nall regarding the infrastructure needs\nwill be taken care by this service and\nthen this fargate can also integrate\nwith eks so the 24th and the last\nproduct in our list is Amazon Cloud\nwatch which comes under monitoring as\nthe name suggest it's the Watchmen of\nour whole AWS platform because you with\nthe help of cloud watch you could\ncollect you could process you could\nanalyze and then eventually act on all\nkinds of logs which gets generated by\ndifferent uh Services which we have\ndiscussed and other services as well so\nit gives you uh systemwide observability\nas far as AWS is concerned so if you are\nworking in Sr devop support roles then\ncloudwatch would be one of the very\ncommon Services which you would use guys\nwith this we come to the end of this\nvideo and I hope you know something\nabout these 24 Services which are quite\ncommon in AWS but I'm sure you know\nother services which are better than\nthese services so do let me know in the\ncomment section the service name and\nwhat exactly it does in one line and it\nwill help the audience to learn more\nabout AWS platform if you have anything\nwhich you want me to make on AWS like I\ndid in gcp let me know and I will learn\nit and I'll share with it so until next\ntime guys keep learning keep sharing all\nthe knowledge and yes keep hustling bye\nfor now\n",
  "words": [
    "aws",
    "amazon",
    "web",
    "services",
    "one",
    "oldest",
    "one",
    "leading",
    "cloud",
    "providers",
    "market",
    "today",
    "offering",
    "close",
    "200",
    "100",
    "plus",
    "services",
    "easy",
    "us",
    "get",
    "lost",
    "different",
    "200",
    "plus",
    "services",
    "today",
    "video",
    "talk",
    "24",
    "popular",
    "aws",
    "products",
    "uh",
    "different",
    "categories",
    "uh",
    "quick",
    "overview",
    "exactly",
    "services",
    "enable",
    "understand",
    "whether",
    "use",
    "service",
    "take",
    "quick",
    "sneak",
    "peek",
    "exactly",
    "24",
    "services",
    "could",
    "use",
    "services",
    "solutions",
    "let",
    "get",
    "started",
    "24",
    "services",
    "according",
    "used",
    "obviously",
    "could",
    "differ",
    "certain",
    "services",
    "let",
    "quickly",
    "understand",
    "uh",
    "exactly",
    "services",
    "bread",
    "butter",
    "aws",
    "compute",
    "beginning",
    "first",
    "popular",
    "service",
    "ec2",
    "elastic",
    "compute",
    "cloud",
    "offering",
    "aws",
    "using",
    "ec2",
    "could",
    "create",
    "virtual",
    "machines",
    "spin",
    "virtual",
    "machines",
    "could",
    "add",
    "scale",
    "uh",
    "could",
    "downgrade",
    "machines",
    "easily",
    "basic",
    "important",
    "strength",
    "aws",
    "easy",
    "service",
    "second",
    "list",
    "lambda",
    "important",
    "widely",
    "used",
    "services",
    "event",
    "driven",
    "comp",
    "compute",
    "service",
    "serverless",
    "compute",
    "service",
    "lambda",
    "could",
    "write",
    "custom",
    "application",
    "code",
    "certain",
    "task",
    "small",
    "required",
    "specific",
    "activity",
    "suppose",
    "take",
    "photograph",
    "upload",
    "somewhere",
    "run",
    "lambda",
    "function",
    "top",
    "could",
    "resized",
    "tablet",
    "tablet",
    "laptop",
    "kind",
    "small",
    "things",
    "suppose",
    "want",
    "upload",
    "excel",
    "file",
    "run",
    "lambda",
    "convert",
    "excel",
    "file",
    "csv",
    "giving",
    "examples",
    "want",
    "create",
    "end",
    "endend",
    "web",
    "application",
    "lambda",
    "functions",
    "could",
    "used",
    "certain",
    "places",
    "uh",
    "know",
    "create",
    "event",
    "driven",
    "uh",
    "functions",
    "important",
    "serverless",
    "offering",
    "comput",
    "third",
    "list",
    "elastic",
    "beanock",
    "sometimes",
    "get",
    "confused",
    "lambda",
    "beanock",
    "lot",
    "similarity",
    "could",
    "deploy",
    "code",
    "beanock",
    "create",
    "web",
    "application",
    "beanock",
    "would",
    "deploy",
    "run",
    "web",
    "application",
    "without",
    "compute",
    "uh",
    "facility",
    "managed",
    "specifically",
    "difference",
    "lambda",
    "bean",
    "stock",
    "lambda",
    "created",
    "specific",
    "tasks",
    "smaller",
    "size",
    "wherein",
    "bean",
    "stock",
    "could",
    "deploy",
    "whole",
    "website",
    "beanock",
    "deploy",
    "full",
    "full",
    "scale",
    "web",
    "applications",
    "could",
    "deploy",
    "code",
    "rest",
    "taken",
    "care",
    "aws",
    "hello",
    "friends",
    "quick",
    "reminder",
    "aws",
    "dummies",
    "course",
    "beginners",
    "cloud",
    "especially",
    "aws",
    "live",
    "12",
    "plus",
    "hours",
    "content",
    "course",
    "exercises",
    "quizzes",
    "check",
    "offer",
    "limited",
    "time",
    "really",
    "want",
    "guys",
    "get",
    "onto",
    "cloud",
    "journey",
    "link",
    "description",
    "check",
    "really",
    "want",
    "see",
    "back",
    "video",
    "another",
    "important",
    "service",
    "aws",
    "aws",
    "s3",
    "object",
    "storage",
    "called",
    "simple",
    "storage",
    "services",
    "object",
    "store",
    "could",
    "store",
    "kinds",
    "data",
    "structured",
    "unstructured",
    "data",
    "potentially",
    "becomes",
    "landing",
    "zone",
    "whenever",
    "starting",
    "kind",
    "work",
    "aws",
    "s3",
    "bucket",
    "need",
    "create",
    "s3",
    "bucket",
    "upload",
    "files",
    "could",
    "also",
    "create",
    "become",
    "data",
    "link",
    "amazon",
    "s3",
    "could",
    "also",
    "host",
    "website",
    "static",
    "content",
    "plenty",
    "uses",
    "could",
    "upload",
    "log",
    "files",
    "analytics",
    "data",
    "video",
    "music",
    "files",
    "twitter",
    "feeds",
    "whatever",
    "call",
    "simple",
    "storage",
    "service",
    "s3",
    "bucket",
    "object",
    "storage",
    "need",
    "use",
    "next",
    "list",
    "elastic",
    "block",
    "store",
    "also",
    "called",
    "ebs",
    "actually",
    "provides",
    "block",
    "storage",
    "block",
    "volume",
    "ec2",
    "instance",
    "attach",
    "ssd",
    "hdd",
    "uh",
    "block",
    "store",
    "uh",
    "ec2",
    "instances",
    "high",
    "performing",
    "block",
    "storage",
    "reads",
    "writes",
    "become",
    "really",
    "fast",
    "attach",
    "ec2",
    "ebs",
    "elastic",
    "block",
    "store",
    "becomes",
    "backbone",
    "ec2",
    "instance",
    "could",
    "store",
    "data",
    "block",
    "store",
    "database",
    "first",
    "product",
    "offering",
    "uh",
    "amazon",
    "aurora",
    "rdbms",
    "relational",
    "database",
    "management",
    "service",
    "offers",
    "full",
    "compatibility",
    "mysql",
    "post",
    "sql",
    "databases",
    "5x",
    "3x",
    "throughput",
    "speed",
    "need",
    "postra",
    "mysql",
    "data",
    "database",
    "instance",
    "provision",
    "ec2",
    "could",
    "simply",
    "use",
    "serverless",
    "uh",
    "service",
    "rest",
    "managed",
    "aws",
    "leverage",
    "benefits",
    "mysql",
    "post",
    "address",
    "second",
    "one",
    "dynamo",
    "db",
    "nosql",
    "database",
    "want",
    "know",
    "sql",
    "database",
    "specific",
    "video",
    "created",
    "particular",
    "service",
    "uh",
    "offered",
    "aws",
    "serverless",
    "service",
    "wherein",
    "could",
    "provision",
    "key",
    "value",
    "document",
    "databases",
    "nosql",
    "database",
    "offering",
    "next",
    "list",
    "rds",
    "relational",
    "database",
    "service",
    "consist",
    "six",
    "different",
    "data",
    "uh",
    "databases",
    "offered",
    "aws",
    "amazon",
    "aurora",
    "comes",
    "postgress",
    "sql",
    "uh",
    "mysql",
    "maria",
    "db",
    "um",
    "sql",
    "server",
    "oracle",
    "kind",
    "different",
    "databases",
    "could",
    "provisioned",
    "relational",
    "database",
    "service",
    "everything",
    "managed",
    "aws",
    "last",
    "one",
    "elastic",
    "cachier",
    "inmemory",
    "db",
    "offering",
    "aws",
    "could",
    "get",
    "microsc",
    "performance",
    "using",
    "inmemory",
    "caching",
    "uh",
    "use",
    "cases",
    "like",
    "gaming",
    "streaming",
    "data",
    "hosting",
    "content",
    "needs",
    "high",
    "performance",
    "cashed",
    "memory",
    "use",
    "elastic",
    "caching",
    "next",
    "category",
    "network",
    "content",
    "delivery",
    "first",
    "product",
    "vpc",
    "virtual",
    "private",
    "cloud",
    "offering",
    "might",
    "heard",
    "google",
    "azure",
    "well",
    "help",
    "vpc",
    "could",
    "understand",
    "would",
    "manage",
    "resources",
    "one",
    "resource",
    "would",
    "connect",
    "resource",
    "within",
    "virtual",
    "network",
    "environment",
    "would",
    "secure",
    "cloud",
    "environment",
    "happens",
    "vpc",
    "generally",
    "networking",
    "team",
    "would",
    "work",
    "second",
    "offering",
    "cloudfront",
    "content",
    "delivery",
    "uh",
    "network",
    "offering",
    "whenever",
    "requirement",
    "access",
    "certain",
    "content",
    "certain",
    "geographical",
    "location",
    "cloudfront",
    "service",
    "could",
    "provide",
    "particular",
    "data",
    "particular",
    "edge",
    "location",
    "aws",
    "edge",
    "location",
    "user",
    "sitting",
    "closer",
    "particular",
    "ge",
    "location",
    "could",
    "fetch",
    "data",
    "using",
    "cloud",
    "front",
    "particular",
    "edge",
    "location",
    "cdn",
    "offering",
    "route",
    "53",
    "fancy",
    "name",
    "simple",
    "dns",
    "service",
    "domain",
    "name",
    "service",
    "know",
    "dns",
    "go",
    "check",
    "video",
    "complete",
    "playlist",
    "networking",
    "dns",
    "domain",
    "name",
    "service",
    "helps",
    "get",
    "ip",
    "address",
    "website",
    "want",
    "navigate",
    "route",
    "53",
    "component",
    "need",
    "configure",
    "want",
    "use",
    "dns",
    "service",
    "within",
    "aws",
    "elastic",
    "load",
    "balancing",
    "implements",
    "load",
    "balancing",
    "uh",
    "know",
    "application",
    "load",
    "balancer",
    "gateway",
    "load",
    "balancer",
    "network",
    "load",
    "balancer",
    "kind",
    "different",
    "load",
    "balancing",
    "activities",
    "done",
    "using",
    "elastic",
    "load",
    "balancing",
    "service",
    "created",
    "two",
    "part",
    "series",
    "understanding",
    "load",
    "balancing",
    "depth",
    "check",
    "well",
    "api",
    "gateway",
    "managing",
    "creating",
    "publishing",
    "securing",
    "apis",
    "testing",
    "apis",
    "want",
    "connect",
    "two",
    "different",
    "systems",
    "help",
    "api",
    "want",
    "transact",
    "two",
    "systems",
    "using",
    "api",
    "need",
    "use",
    "api",
    "gateways",
    "analytics",
    "first",
    "product",
    "amazon",
    "kinesis",
    "helps",
    "collect",
    "process",
    "store",
    "realtime",
    "streaming",
    "data",
    "um",
    "example",
    "streaming",
    "video",
    "games",
    "example",
    "iot",
    "devices",
    "anything",
    "wherein",
    "need",
    "streaming",
    "data",
    "captured",
    "processed",
    "immediately",
    "need",
    "uh",
    "amazon",
    "kinesis",
    "service",
    "multiple",
    "offerings",
    "within",
    "example",
    "amazon",
    "kinesis",
    "video",
    "streams",
    "specifically",
    "built",
    "capture",
    "uh",
    "kind",
    "realtime",
    "video",
    "coming",
    "live",
    "example",
    "football",
    "match",
    "going",
    "live",
    "want",
    "capture",
    "process",
    "information",
    "plug",
    "amazon",
    "kinesis",
    "video",
    "stream",
    "offering",
    "uh",
    "process",
    "something",
    "need",
    "consider",
    "working",
    "processing",
    "real",
    "time",
    "streaming",
    "data",
    "second",
    "list",
    "amazon",
    "red",
    "shift",
    "aws",
    "answer",
    "google",
    "big",
    "query",
    "aws",
    "red",
    "shift",
    "aws",
    "reply",
    "competitor",
    "product",
    "big",
    "query",
    "google",
    "big",
    "query",
    "also",
    "helps",
    "run",
    "analytics",
    "workload",
    "meant",
    "data",
    "warehouses",
    "data",
    "lakes",
    "sql",
    "based",
    "use",
    "uh",
    "red",
    "shift",
    "running",
    "kind",
    "analytical",
    "use",
    "cases",
    "analytical",
    "workloads",
    "store",
    "data",
    "red",
    "shift",
    "process",
    "machine",
    "learning",
    "ai",
    "ml",
    "models",
    "could",
    "pretty",
    "much",
    "everything",
    "uh",
    "really",
    "really",
    "fast",
    "could",
    "process",
    "xab",
    "data",
    "seconds",
    "yeah",
    "one",
    "important",
    "service",
    "coming",
    "data",
    "analytics",
    "data",
    "data",
    "warehousing",
    "background",
    "aws",
    "glue",
    "purely",
    "etl",
    "product",
    "data",
    "integration",
    "service",
    "helps",
    "connect",
    "various",
    "kind",
    "different",
    "sources",
    "could",
    "real",
    "time",
    "could",
    "badge",
    "could",
    "iot",
    "whatever",
    "could",
    "use",
    "aws",
    "glue",
    "create",
    "etl",
    "workflows",
    "process",
    "data",
    "analyze",
    "data",
    "extract",
    "transform",
    "load",
    "data",
    "target",
    "systems",
    "important",
    "piece",
    "designing",
    "data",
    "pipeline",
    "want",
    "know",
    "see",
    "check",
    "data",
    "pipeline",
    "video",
    "machine",
    "learning",
    "one",
    "product",
    "highlighted",
    "amazon",
    "sage",
    "maker",
    "product",
    "used",
    "build",
    "train",
    "deploy",
    "types",
    "machine",
    "learning",
    "models",
    "help",
    "implement",
    "machine",
    "learning",
    "operations",
    "also",
    "called",
    "mlops",
    "working",
    "ml",
    "models",
    "care",
    "backend",
    "infrastructure",
    "needs",
    "aws",
    "process",
    "data",
    "scientist",
    "ml",
    "engineer",
    "need",
    "understand",
    "amazon",
    "sage",
    "maker",
    "next",
    "category",
    "security",
    "security",
    "main",
    "service",
    "used",
    "across",
    "clouds",
    "identity",
    "access",
    "management",
    "name",
    "suggest",
    "im",
    "goal",
    "understand",
    "access",
    "user",
    "access",
    "policies",
    "uh",
    "know",
    "enforce",
    "actual",
    "resource",
    "coming",
    "picture",
    "could",
    "create",
    "fine",
    "grain",
    "access",
    "controls",
    "using",
    "identity",
    "access",
    "management",
    "important",
    "area",
    "cloud",
    "admins",
    "im",
    "admins",
    "managing",
    "security",
    "platform",
    "managing",
    "access",
    "authorization",
    "authentication",
    "authorization",
    "uh",
    "cloud",
    "platform",
    "cloud",
    "im",
    "important",
    "service",
    "kmsk",
    "management",
    "service",
    "lets",
    "create",
    "manage",
    "control",
    "kinds",
    "cryptographic",
    "keys",
    "use",
    "encrypt",
    "decrypt",
    "data",
    "kms",
    "important",
    "service",
    "coming",
    "containers",
    "eks",
    "elastic",
    "cuber",
    "service",
    "manage",
    "service",
    "provided",
    "amazon",
    "run",
    "kinds",
    "kubernetes",
    "workload",
    "know",
    "much",
    "kubernetes",
    "containers",
    "could",
    "check",
    "videos",
    "second",
    "list",
    "containers",
    "fargate",
    "fargate",
    "serverless",
    "compute",
    "offering",
    "run",
    "kinds",
    "container",
    "workloads",
    "container",
    "image",
    "could",
    "simply",
    "deploy",
    "using",
    "fargate",
    "rest",
    "regarding",
    "infrastructure",
    "needs",
    "taken",
    "care",
    "service",
    "fargate",
    "also",
    "integrate",
    "eks",
    "24th",
    "last",
    "product",
    "list",
    "amazon",
    "cloud",
    "watch",
    "comes",
    "monitoring",
    "name",
    "suggest",
    "watchmen",
    "whole",
    "aws",
    "platform",
    "help",
    "cloud",
    "watch",
    "could",
    "collect",
    "could",
    "process",
    "could",
    "analyze",
    "eventually",
    "act",
    "kinds",
    "logs",
    "gets",
    "generated",
    "different",
    "uh",
    "services",
    "discussed",
    "services",
    "well",
    "gives",
    "uh",
    "systemwide",
    "observability",
    "far",
    "aws",
    "concerned",
    "working",
    "sr",
    "devop",
    "support",
    "roles",
    "cloudwatch",
    "would",
    "one",
    "common",
    "services",
    "would",
    "use",
    "guys",
    "come",
    "end",
    "video",
    "hope",
    "know",
    "something",
    "24",
    "services",
    "quite",
    "common",
    "aws",
    "sure",
    "know",
    "services",
    "better",
    "services",
    "let",
    "know",
    "comment",
    "section",
    "service",
    "name",
    "exactly",
    "one",
    "line",
    "help",
    "audience",
    "learn",
    "aws",
    "platform",
    "anything",
    "want",
    "make",
    "aws",
    "like",
    "gcp",
    "let",
    "know",
    "learn",
    "share",
    "next",
    "time",
    "guys",
    "keep",
    "learning",
    "keep",
    "sharing",
    "knowledge",
    "yes",
    "keep",
    "hustling",
    "bye"
  ],
  "keywords": [
    "aws",
    "amazon",
    "web",
    "services",
    "one",
    "cloud",
    "offering",
    "plus",
    "get",
    "different",
    "video",
    "24",
    "uh",
    "quick",
    "exactly",
    "understand",
    "use",
    "service",
    "could",
    "let",
    "used",
    "certain",
    "compute",
    "first",
    "ec2",
    "elastic",
    "using",
    "create",
    "virtual",
    "machines",
    "important",
    "second",
    "list",
    "lambda",
    "serverless",
    "application",
    "code",
    "specific",
    "upload",
    "run",
    "kind",
    "want",
    "know",
    "beanock",
    "deploy",
    "would",
    "managed",
    "created",
    "wherein",
    "website",
    "full",
    "rest",
    "care",
    "live",
    "content",
    "check",
    "time",
    "really",
    "guys",
    "s3",
    "object",
    "storage",
    "called",
    "simple",
    "store",
    "kinds",
    "data",
    "bucket",
    "need",
    "files",
    "also",
    "analytics",
    "next",
    "block",
    "instance",
    "database",
    "product",
    "relational",
    "management",
    "mysql",
    "sql",
    "databases",
    "db",
    "particular",
    "streaming",
    "needs",
    "network",
    "vpc",
    "google",
    "well",
    "help",
    "manage",
    "resource",
    "connect",
    "within",
    "access",
    "location",
    "edge",
    "name",
    "dns",
    "helps",
    "load",
    "balancing",
    "balancer",
    "two",
    "api",
    "managing",
    "systems",
    "kinesis",
    "process",
    "example",
    "coming",
    "working",
    "red",
    "shift",
    "big",
    "query",
    "machine",
    "learning",
    "ml",
    "models",
    "security",
    "im",
    "platform",
    "containers",
    "fargate",
    "keep"
  ]
}