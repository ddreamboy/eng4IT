{
  "text": "[Music]\nhello everyone i welcome you all to the\nlive session on data warehouse by\nintellipaat but before we begin the\nsession make sure to subscribe to our\nchannel and also hit on the bell icon so\nthat you will never miss an update from\nus now let's see the agenda of the day\nfirstly we will begin with introduction\nto data warehouse\nin that we will be explaining you what\nis data warehouse what are the types of\ndata warehouse and also tell you what\nare the popular data warehouse tools\nfor that we will be doing a hands-on\ndemo to show you how data flows in data\nwarehouse\nthen we will move on to introduction to\ndata mart followed by data modeling then\nfinally we have covered data warehouse\ninterview questions and answers\nso guys this is the agenda now let's\nbegin the session what is the need of a\ndata warehouse\nso the goal of every business is to make\nbetter decisions and this is where\nbusiness intelligence comes in\nbusiness intelligence turns the massive\namount of data from operational systems\ninto a proper format that is easy to\nunderstand so that this data could be\nanalyzed timely and accurately to obtain\nactionable insights of business and also\nto bring an effectiveness in our\ndecision-making for instance in the\ne-commerce industry we maintain data\nabout products customer login\ncredentials check out details and other\ntechnical and non-technical information\nnow all of this information would be\navailable in different servers so we\nneed a system which can combine all this\ninformation so that companies can\nextract and analyze this data in an\nintegrated manner and that's exactly\nwhat the requirement of data warehouse\ncomes into picture now let's understand\nwhat exactly is a data warehouse so the\nconcept of data warehousing is pretty\nsimple\ndata is extracted on a periodic basis\nfrom source systems which could be\napplications such as erp crm sales\nfinance and so on\nnow data from these systems is moved to\na dedicated server that contains a data\nwarehouse so when the data is moved it\nis cleansed formatted summarized and\nsupplemented with data from many other\nsources and this resulting data\nwarehouse will become the main source of\ninformation for report generation and\nanalysis via reporting tools that can be\nused for things such as ad hoc queries\nand dashboards\nnow sometimes it has been noticed that\nmany companies say they have a data\nwarehouse but they don't really have a\ntrue data warehouse rather it is\nactually a dumping ground for tables\nthat are copied from source systems with\nlittle modification so for a company to\nbe successful in future they must make\ngood decisions and to make good\ndecisions they require all relevant data\nto be taken into consideration and the\nbest source for that data is a\nwell-defined data warehouse so a data\nwarehouse is specially designed to\nperform business intelligence activities\nand enables professionals and employees\nto comprehend and improve the\norganization's overall performance and\nthe two major functions of a data\nwarehouse are to maintain past and\npresent records and also help\norganizations to take effective business\ndecisions with precise data analysis\nadditionally the data warehouse\nenvironment also supports etl data\nmining capabilities statistical analysis\nreporting and olep tools which help in\ninteractive and efficient data analysis\nin a multi-faceted view\nnow we'll look at some of the key\nfeatures of data warehousing so number\none in the list is subject oriented so\ndata warehousing gives you an option to\nanalyze a particular subject area thus\nsubject matter expert can answer\nrelevant questions from the data for\nexample if that particular subject is\nsales then a sales executive for an\nonline website can develop a\nsubject-oriented database including the\ndata fields he wants to query so the\nsalesperson can extract data writing\ndifferent queries like how many\ncustomers purchase the database\narchitect course today\nand next in the list is integrated so a\ndata warehouse supports consistency by\narranging data from diverse sources in a\nuniform and rational format so it should\nnot allow any conflicts in the field\nnames and other units of measure having\naccomplished the studiness we can refer\nit to be an integrated warehouse\nthe third key feature is non-volatile so\nas the name suggests non-volatile data\nwarehouse refers to no data change once\ncreated it is an important and relevant\nfeature since the aim of developing a\nwarehouse is to evaluate what has\noccurred until then and the fourth key\nfeature is time variant so the data\ncollected in a data warehouse is\nidentified with a particular time period\nso this data provides information from\nthe historical point of view for example\none can retrieve data from the past 3\nmonths 6 months 12 months or even all\nthe data from a data warehouse\nso now look at some of the most\nfrequently used terms in data\nwarehousing\nwe'll start with metadata in simple\nterms metadata provides the answers to\nall your data related questions in the\ndata warehouse it is referred as data\nabout data\nso it gives users a detailed explanation\nof the syntax and semantics and\ndescribing all relevant attributes of\nthe data in the data warehouse for\ninstance the number of tables in a\ndatabase can be referred as metadata\nnow the metadata is also commonly known\nas table of contents for the data data\ncatalog data directory data warehouse\nroadmap and the nerve center so with the\nhelp of metadata developers and database\nadministrators can create their own ad\nhoc reports which is of prime\nsignificance in this era of big data\nin fact without meta data the data\nwarehouse is considered futile it would\njust be a big box without any valuable\nand meaningful information then we have\nolap which expands to online analytical\nprocessing as the name suggests olap is\ncomputer processing which allows users\nto interactively analyze\nmulti-dimensional data from multiple\nprospects the various techniques of\nmulti-dimensional model of olap\nconstitute and encapsulate large volumes\nof data for rapid evaluation using\nonline analysis tools\nin a multi-dimensional environment each\nattribute of data is considered a\nseparate dimension\nand olap can establish an intersection\nbetween these dimensions\nso the olap cube is typically similar to\nthe shape of a cube and it has the\nmulti-dimensional representation of data\nwhich is optimized for data warehouse it\nis an array or metrics of facts and\ndimensions wherein a fact table contains\nfacts or measurements and the dimension\ntable contains attributes or dimensions\nof the fact it is useful when businesses\nrequire presenting a spreadsheet\ncontaining two or three dimensions for\ninstance in this image the data is\nsummarized with respect to time\ndepartment and store value\nthen we have dimension and dimensional\nmodel\nas we already know a dimension refers to\nsingle attribute of the same data type\nfor instance year month minute and\nsecond are all divisions of time\nattribute thus data warehouse supports\ndimensional model that enables users to\nstore and analyze information on each\ndimension\nunlike entity relationship model\ndimensional model does not involve a\nrelational database every time this type\nof modeling technique is useful for end\nuser queries in data warehouse\nthen we have extract transform and load\nwhich refers to movement of data from\none location to another\nnext we have drill down drill up drill\nacross and drill through\nso drill across allows data analysis\nacross multiple dimensions\nwhile drill up allows data analysis up\nto the parent attribute and drill down\nallows data analysis down to the child\nattribute and finally drill through\nhelps in analyzing data from an olap\ncube to the relational database\nthen we have data marts so our data mart\nis a subsection of data warehouse which\nis aligned to a specific business\nperspective\nwhile a data warehouse stores detailed\ninformation of multiple subjects\nthe latter focuses on storing data about\nonly one subject\nand the data mart concentrates on\nstoring more summarized form than\ncomplete data and integrating\ninformation within specific set of\nsource systems\nnow let's move further and discuss some\nof the major differences between olap\nand oltp\ngenerally people get confused with olap\nand oltp they are two different types of\ndata analysis techniques and are\ndistinct from each other in many ways so\nhere on the screen we see the\ncollaboration between oltp and olap in\nthis workflow architecture we can depict\nthe importance of each system-based\napplication and how they are linked with\neach other\nthe first difference is the name itself\noltp stands for online transaction\nprocessing while olap stands for online\nanalytical processing the main\ndifference between them is that oltp\nfocuses on small transactions and faster\nquery process\nolap on the other hand often involves\ncomplex queries involving aggregations\nanother difference between them is that\nthe data for oltp is mostly operational\nwhile for olap it has consolidated data\nwhich comes from various oltp databases\nand oltp system shows an image of all\nthe activities going on in a business\nenvironment\nwhile olap system shows different views\nof individual events\nnow that we've understood the concept of\ndata warehouse it's time to gain some\ninsights into the architecture of data\nwarehouse\nso there are two main components to\nbuilding a data warehouse\nan interface designed from operational\nsystems\nand the individual data warehouse design\nthus the construction of data warehouse\ndepends on the business requirements\nwhere one development stage depends on\nthe results of the previously developed\nfees\nthe structure of a data warehouse can be\nunderstood better through its layered\nmodel which lists all the main\ncomponents of the data whereas\narchitecture\nso here is a typical architecture of\ndata warehouse consisting of different\nimportant components\nyou can see that it is nothing but the\nmovement of data from source to the\nstaging area and then finally to the\nconfirmed data merged through etl\nthe first layer is the data source layer\nwhich refers to various data stores in\nmultiple formats like relational\ndatabase excel file and others these\nstores can consist of different types of\ndata such as business data web server\nlogs and internet research data the next\nstep is extract where the data from data\nsources is extracted and put into the\nwarehouse staging area\nthis extracted data is minimally cleaned\nwith no major transformations\nthen comes the staging area which is\ndivided into two parts data cleaning and\ndata ordering so as the name suggests\nthis layer takes care of data processing\nmethods thus removing data redundancy\nfiltering bad data and proper\nintegration of data\noverall the stage allows application of\nbusiness intelligent logic to transform\ntransactional data into analytical data\nit is indeed the most time consuming\nphase in the whole data warehouse\narchitecture and as the chief process\nbetween data source and presentation\nlayer of data warehouse\nfinally we have the data presentation\nlayer which has the target data\nwarehouse the place where the\nsuccessfully cleaned integrated and\ntransformed data is stored in a\nmulti-dimensional environment\nnow the data is available for analysis\nand query purposes the information is\nalso available to end users in the form\nof data mods this data can then be\naccessed by various business\nintelligence tools like tableau and\npresented in multiple formats like\ntables graphs and reports\nit is important to note that the data\nwarehouse supports and holds both the\npersistent data that is stored for\nlonger time and also temporary data the\nmajor purpose of a data warehouse is the\nattainment of cleansed integrated and\nproperly aligned data so that it is easy\nto analyze and present to clients and\ncustomers in several businesses\nnow we'll understand for what purpose\ndata warehouse is used in various\nsectors\nin the airline industry it is used for\noperation purpose like crew assignment\nanalysis of route profitability and\nfrequent flyer program promotions\nin the banking sector it is widely used\nto manage the resources available on\ndesk few banks also use data warehousing\nfor market research performance analysis\nof the product and operations\nhealthcare also uses data warehouse to\nstrategize and predict outcomes generate\npatients treatment reports and medical\naid services\nin the public sector data warehouse is\nused for intelligence gathering it helps\ngovernment agencies to maintain and\nanalyze tax records and health policy\nrecords for every individual\nin investment and insurance sector the\nwarehouses are primarily used to analyze\ndata patterns customer trends and to\ntrack market movements in retail chains\ndata warehouse is widely used for\ndistribution and marketing\nand telecommunication data warehouse is\nused for product promotions sales\ndecisions and to make distribution\ndecisions the hospitality industry\nutilizes warehouse services to design as\nwell as estimate their advertising and\npromotion campaigns where they want to\ntarget clients based on their feedback\nand travel patterns\nnow there are many data warehousing\ntools available in the market let's have\na look at some of the prominent ones\nso oracle is the industry leading\ndatabase it offers a wide range of data\nwarehouse solutions for both on-premise\nand cloud it helps to optimize customer\nexperience by increasing operational\nefficiency\namazon redshift is another data\nwarehouse tool it is a simple and\ncost-effective tool to analyze all types\nof data using standard sql and existing\nbi tools it also allows running complex\nqueries against beta bytes of structured\ndata using the technique of query\noptimization\nmark logic is another useful data\nwarehousing solution which makes data\nintegration easier and faster using an\narray of enterprise features\nthis tool helps to perform very complex\nsearch operations and helps in querying\ndifferent types of data like documents\nrelationships and metadata\nnow there are a lot of opportunities in\nthe market to build a career in data\nwarehousing\nso candidates who are interested to\nbecome data warehouse professionals can\nlook for job opportunities in sectors\nlike information technology financial\nservices health care and retail\naccording to the salary estimates of\nnatural salary data which is released by\nb scale the annual compensation of a\ndata warehouse professional ranges from\n68 thousand dollars to 149 000\nwith the median salary being about\nhundred thousand dollars per annum we'll\nstart with the data warehouse\nlet's say\nfor example\nthere is an atm machine\nokay\nso here we have one database\nokay so this atm machine is connected to\nthe database\nnot only atm machine so if you have an\naccount with the bank\nokay so we can do online transactions\nright so we can log into our internet\nbanking and then we can also do online\ntransactions so through atm machine or\nany front-end application or banking\napplication if we do any transactions\nall the transaction data is going to be\ninserted into a database\nokay so whether it is in my ms sql or\nany other database so there are\ndifferent types of databases in market\nright so ms sql oracle sybase db2\nteradata like that we have different\ntypes of databases so here let's say we\nhave a database so in this database we\nwill have the tables okay\nwe'll have the schemas inside the\nschemas we will have the tables like\nthis\nso whatever transactions made the user\nall the transaction data first it is\ngoing to be inserted into a database\nokay let's say an user he has made the\nfirst transaction\nso whatever first transaction he has\nmade\nthe same first transaction data is going\nto be inserted into a database table\nright transaction means withdrawing or\ndepositing the money through atm machine\nso the first transaction data is going\nto be inserted into the database so\nafter one hour let's say he has made the\nsecond transaction\nthe same second transaction data also is\ngoing to be inserted into the database\nafter one hour he has made the third\ntransaction the same third transaction\ndata also going to be inserted into the\ndatabase so like that let's say in user\nhe has made around\n1000 transactions in a day\nso if he has made 1000 transactions all\nthe 1000 transaction data should be\nthere in the database right okay so in\nuser through atm machine or any\nfront-end application or internet\nthrough internet banking so he has made\naround 1000 transactions in a day all\nthe transaction data should be there in\nthe database okay\nend of the day he has selected mini\nstatement option\nso as soon as we select that mini\nstatement option so this mini statement\nwe have in atm machine as well as in\ninternet banking also we have a mini\nstatement option as soon as we select\nthat option it is going to generate one\nmini statement so that will have some\ntransaction data okay so many statement\nwill have few transactions or recent\ntransactions will have the recent means\nlast five transactions or last 10\ntransactions will be there\nokay so it will not display all the\ntransactions or it will not display the\nolder transactions mini statement\ncontains only recent transactions okay\nso why it contains a recent transactions\nwhy not older transactions okay\nbecause you know one of the reasons\nwe have so whichever the database here\nconnected from atm machine or a\nfront-end application\nthis database itself is designed to\nmaintain limited number of transactions\nokay so this database itself is designed\nto maintain limited number of\ntransactions limited means let's say if\nthis database is designed to maintain\nlast 10 transactions\nokay as soon as user made the 11th\ntransaction\nbefore inserting the 11th record in the\ndatabase we'll delete the first record\nfrom this database table and then we\nwill insert the 11th record as soon as\nuser made the 12th transaction before\ninserting the 12th record in the\ndatabase table we'll delete the second\nrecord and then we'll insert the 12th\nrecord as soon as user made the 13th\ntransaction before inserting the 13th\nrecord we'll delete the third record and\nthen we'll insert the 13th record\nlike that if the database is designed\neven though user has made 1000\ntransactions in a day we will have total\nhow many transactions in the database\nwill have only lost the 10 transactions\nnot all the transactions\nso why the database is designed like\nthat\nwhy can't we maintain all the\ntransaction data in this database\nmeans\nsuppose let's say the same user from\nlast one year he has made one million\ntransactions\nso if he has made one million\ntransactions assume we have inserted all\nthe one million transaction database in\nthe database\nso an user he has made one million\ntransactions and all the 1 million\ntransactions we have inserted in the\ndatabase\nokay so inside the database will have\nthe tables let's say we have a\ntransaction table inside the transaction\ntable will have all the transaction data\nfor one user\ntoday he has selected balancing query\noption\nso we know there is a balancing query\noption right so in atm machine or in\nfront-end application also in internet\nbanking also we have a balancing query\noption\nso as soon as we click on that option\nwhat it will do at the back it will\nconnect to the database on top of the\ndatabase some query will execute right\nso this option\nat the back it will connect to the\ndatabase on top of the database some\nselect query will execute okay now for\none user we have one million transaction\ndata since we have one million\ntransaction data for one user assume to\ndisplay the balance the select query is\ngoing to execute on top of 1 million\ntransaction records okay so\nuser selected the balancing query option\nat the back it has connected to the\ndatabase on top of the database select\nquery is going to execute to display the\nbalance now for one user we have 1\nmillion transaction records so assume\nthe select query is going to execute on\ntop of 1 million records to display the\nbalance\nso if the query is going to execute on\ntop of huge records like this will it\ntake time or not\ndefinitely it will take time\nso assume it took five minutes of time\nso user selected balancing query option\nand it took five minutes of time\nokay so why it took five minutes because\nof huge transaction data we have in the\ndatabase huge transaction with millions\nof transaction records we have in the\ndatabase so that is the reason query\ntook a long time to display the balance\nokay\nlike that so here in the database if you\nmaintain all the transaction data or\nhuge transaction data queries will take\nlong time to execute and it will affect\nit to the customer\nso that is the reason we are not going\nto insert all the transaction data in\nthis database\nokay so instead of maintaining all the\nmillions of records if this database is\ndesigned to maintain only last 10\nregards in those last 10 records only if\nyou have all the user transaction\ndetails\ntoday if you select the balancing query\noption and if you have only last 10\nrecords query is going to execute on top\nof only last 10 records and within\nfraction of seconds it is going to\ndisplay the result right so whereas if\nyou maintain huge transaction data then\ndefinitely queries will take a long time\nto execute\nthere it will affect you to the customer\nso that is the reason we should not\nmaintain all the transaction data we\nshould have to maintain only a recent\ndata or latest transactions in this\ndatabase\nokay so latest or recent transaction\nmeans last five transactions are only\nlast 10 transactions\nokay\nnow we are clear that so this database\ncontains only recent data\nokay so recent data or latest data or we\nalso called it as a current data so why\nwe maintain only recenter data why can't\nwe maintain all the transaction data\nmeans we have seen if you maintain all\nthe transaction data then queries will\ntake long time to execute and it will\naffect to the customer\nokay so that is the reason this database\nwill have the latest data okay fine now\nlet's say user requested for last one\nmonth bank statement our last two months\nbank statement our last one year bank\nstatement\ndo we have last one year data here to\ngenerate last one year bank statement\nno right we don't have last one year\ndata to generate last one year bank\nstatement\nthen from where we will get lost one\nyear data means parallelly to this\ndatabase we will have one more database\nas soon as user made the first\ntransaction through atm machine or any\nfront-end application first transaction\ndata first it will be inserted into the\nfirst database the same first record\nalso going to insert into the second\ndatabase\nas soon as user made the second\ntransaction second transaction record\nfirst will insert into the first\ndatabase the same second transaction\nrecord we are also going to insert into\nthe second database\nas soon as user made the third\ntransaction third transaction record\nfirst it will be inserted into the first\ndatabase the same third record we are\nalso going to insert into the second\ndatabase\nlike that so if the user has made 11th\ntransaction we know first database is\ndesigned to maintain only last 10\nrecords\nas soon as user made the 11th\ntransaction before inserting the 11th\nrecord we delete the first record and\nthen we'll insert the 11th regard\nright whereas here in the second\ndatabase we are not going to delete\nanything we will be keep on inserting\nthe records like this\nokay so if the user has made one million\ntransactions first database contains\nonly a recent transactions or last 10\ntransactions whereas the second database\ncontains all the 1 million transactions\nso here we'll have all the transaction\ndata from day 1 to till date\nso all the millions of transactions will\nhave in the second database\nso whatever the data here we have in the\nsecond database so this data we called\nit as a historical data\nhistorical data means from day one to\ntill date if we insert or if you load\nall the transactions then we can call\nthat as a historical transactions okay\nso can we call the first database as a\nhistorical transaction database no\nbecause in the first database we have\nonly recent transactions so here in the\nsecond database we have all the\nhistorical transactions historical means\nfrom day one to till date all the\ntransactions we will be keep on\ninserting the data\nwe will not delete the data from this\ndatabase we will not update the data in\nthe second database if you delete the\ndata or if you update the data then we\ncan lose the\nhistorical data right so we will not\nhave the historical data so if you\ndelete some of the records here then how\ncome we'll have the historical data we\nwill not have the historical data in the\nsecond database okay so in the second\ndatabase here we'll have all the\nhistorical data so whichever the\ndatabase is having the historical data\nlike this\nthat database we call it as a data\nwarehouse database okay so in ms sql\nalso you know we will have tables right\nso in that database we'll have the\ntables in those tables you know if you\ninsert all the records from day one to\ntill date then that database also we\ncalled it as a historical database okay\nso now however the first database the\nfirst database contains the recent data\nthis database we call it as a vltp\ndatabase so oltp means online\ntransaction process so oeltp database\ncontains the recenter data whereas the\ndata warehouse contains the historical\ndata what is mean by historical data all\nthe transactions if we insert from day\none to till date we can call that as a\nhistorical data right data warehouse\ncontains the historical data so\nhistorical data means all the\ntransaction should be there\nfrom a data warehouse like from day one\nto till date all the transaction day\nwill be there okay so we'll see what is\nthe use of storing the historical data\nin data warehouse okay so suppose let's\nsay\nhere we have one more atm machine\nbelongs to same bank and this is another\natm machine belongs to same bank okay so\nlet's say this atm machine we have in uh\nhyd location and this is in\nbangalore location this is in chennai\nlocation\nso like this there are three atm\nmachines belongs to same bank in three\ndifferent locations okay so all of these\nthree first they have connected to oltp\ndatabase\nfrom oltp so we have connected to the\ndata warehouse database\nso all of these three databases we have\nconnected to oltp database from oltp we\nhave connected to the data warehouse\ndatabase so which means in data\nwarehouse we have historical data of all\nthese three atm machines right\nokay let's say for example we have the\nhistorical data like this\nso in the year of 2001 from hyd location\nmachine we have total 120 transactions\nokay so from blr location assume here we\nhave around 80 transactions\nfrom chennai location let's say we have\naround 40 transactions\nlike this we have whole year transaction\ndata belongs to these three atm machines\nwe have in data warehouse database\nokay so let's say in the next year from\nthis location we have around 90\ntransactions from this location we have\naround\nyou know 100 transactions from this\nlocation we have 30 transactions\nin the same way we have one more year\ntransaction data\nfrom this location we have around 150\ntransactions here we have some 90\ntransactions here we have 40\ntransactions\nlike this we have three years of\ntransaction data belongs to these three\natm machines in data warehouse database\nwe know data warehouse contains years of\ndata right okay so there will have the\nhuge transaction data our years of data\nwill be there in the data warehouse okay\nnext\nsince all of these three belongs to the\nsame man let's say they have some cut\noff transactions if the transactions are\ngreater than 50 that is in profits if it\nis in less than 50 that is in loss so\nlike this let's say they have some cut\noff transactions\nokay so here chennai location this is\nyou can see this is in loss right so if\nyou keep on maintaining like that\nalready it is in loss right\nnow what you did here you have some data\nby seeing this data you have done some\nanalysis based on your analysis you have\ntaken the decision on the business to\nkeep the business in profits right okay\nso whatever the data here we have\nso we can call this as a report by using\nwhich data we have generated this report\nby using the data warehouse data right\nso by using the data warehouse data we\ncan generate the report these reports\nare helpful to the business people to do\nanalysis on their business and to take\nthe decision on the business and to keep\nthe business in profits\nso if you don't have such type of report\nhow would we know that which is in\nprofit and which is in loss\nwe don't know right\nand also is it possible to generate this\ntype of report based on oltp data\nno right so we cannot generate because\noltp database contains the latest data\nor current data you know we cannot take\nthe decision or we cannot generate a\nreport based on oltp data so oltp\ndatabase contains the recent data\nso just by seeing the recenter data like\none day or two days of data we cannot\ntake the decision on the business right\nso to take the decision on the business\nwe need to have the historical data so\nby using the historical data we can\ngenerate the reports the reports are\nhelpful to the business people to do\nanalysis on their business and to take\nthe decision on the business\nso this is the overview of data\nwarehouse okay\nnow so first all the transactions are\ngoing to be inserted in oltp database\nright the same transactions here we\nshould have to insert okay into the data\nwarehouse it's whose responsibility to\nextract the data from oltp database\ntransform and load into the data\nwarehouse so who will take care to\nextract the data from oltp to data\nwarehouse\nmeans there are different process to\nmaintain the data or to process the data\nor to load the data from oltp to data\nwarehouse\nwhat process we have so that process we\ncall it as a edl process\nso etl team so etl means extract\ntransform and load so etl by using the\netl tools different types of edl tools\nare there in market\nlike informatica data stage of initial\npentaho\nright warehouse builder\nand also like through pl sql also we can\nwrite the code okay so like that so\nthere will be separate teams so they\nwill be taking care to maintain the data\nbetween these oltp and data warehouse so\nthey will be extracting the data from\noltp database transform and load into\nthe data warehouse\nokay once the data loaded into the data\nwarehouse on top of the data warehouse\nreports will be generated so here mainly\netl developers will be taking care to\nmaintain the data between oltp and data\nwarehouse okay so while loading the data\nfrom one database to another database\nthere are different scenarios\nokay for example let's say in oldp we\nhave a table\nlike this employee table we have this is\na source table employee number employee\nname salary\nokay so here we have the data like this\n100\nto be\n200\nand 3c 300\nagain 100\nto be 200 now like this we have a\nemployee table okay so if you have\nemployee table like this and if you\nobserve here there are duplicate rows\nso in a table in oldp database we have a\ntable in the table we have the duplicate\nrows these two are the duplicate rows\nokay\nnow let's say we have to load that data\nfrom you know\nhere oltp to data warehouse this is a\ntarget table\nso while loading the data from oltp to\ndata warehouse you know\nhere in oltp we have duplicate records\nlet's say we have processed all the\nduplicate records also\ninto the data warehouse table\nso if you process all the duplicate\nrecords also into the data warehouse\nstable\nyou know on top the data warehouse will\nhave the duplicate data or incorrect\ndata or invalid data we will have in the\ndata warehouse\nokay so if you have the incorrect data\nor invalid data in the data warehouse\nthen on top of the data warehouse we\nknow reports will be generated right\nokay so if you have the incorrect data\nhow the reports are going to be\ngenerated\nis it going to be valid report or\ninvalid report definitely they are going\nto be in valid report so that is the\nreason here generally\nif there are incorrect records so the\nfirst here the incorrect records to be\nfixed\nand then valid records only we have to\nextract transform and load into that\ndata warehouse tables\nokay so next so as i told you we will be\nloading the data from oltp to data\nwarehouse right so here this is a oltp\ndatabase and the data warehouse database\nthis is oltp which will have the latest\ndata and this data warehouse will have\nthe historical data okay now here to\nthis yltp database so let's say these\nare from different locations\nso atm machines are connected in a\ncountry millions of customers will be\nthere to the bank and they will be\naccessing their account details or they\nwill be doing the transactions from\ndifferent different locations\nokay let's say all these are atm\nmachines they are there from different\ndifferent location first they have\nconnected to oltp database okay and also\nusers they will be doing online\ntransactions let's say these are the\ninternet banking applications\nokay so like that we have different\ninternet banking applications so users\ncan log into their account and they can\ndo online transactions okay\nso we know that millions of customers\nwill be there and they will be accessing\ntheir account details or doing the\ntransactions now there is only one\ndatabase here which is oltp database\noltp means online transaction process\nright\nso which will have the recenter data so\nif millions of customers are accessing\nthe oltp database data at a time from\ndifferent different locations then\ndefinitely there may be chance to go the\ndatabase performance down right\nso that is the reason instead of\nconnecting all these applications to a\nsingle database you know here we will\nhave another database\nthis is called ods database\nods means operational database\nokay so in ms sql only we will have\nschemas okay inside the database we will\nhave schemas\nso this is one schema oltp is one schema\nor a database and this is another schema\nthis is another schema like that in the\nsame database only we will be creating\ndifferent schemas to maintain the data\nin different different layers\nokay so if this database performance is\ndown then definitely it will affect it\nto the customer so that is the reason\ninstead of connecting all these\napplications to a single database you\nknow some of the applications we will be\nconnecting to the oltp database some of\nthe applications are connecting to ods\ndatabase\nokay so here let's say if all the atm\nmachines are connected to oltp database\nyou know these front-end applications\nare banking applications we will be\nconnecting to the ods database\nods is a replica of oltp database\nso whatever tables present in ods\ndatabase the same tables also present in\nold bp\nwhatever tables present in oltp the same\nwill present in ods\nnot only tables or data also it will be\nin a sync between these two databases\nyou know the data will be in a sync okay\nso any transaction happen\nfrom when like inside the oldp database\nimmediately that transaction also is\ngoing to be updated or inserted or\ndeleted in ods database\nany transaction happen through this\nfront-end application or internet\nbanking which will be directly inserting\ninto ods database immediately that\ntransaction also going to be inserted in\noltp database like that these two\ndatabases will be in a sync\nokay\nso to maintain the data in a sync\nbetween these two databases jobs will be\ncreated mssqlr plsql\nor\nyou know etl jobs will be created to\nmaintain the data in a sync between\nthese two databases\nagain once the data is available in ods\ndatabase so to maintain the data in a\nsync between these two databases again\netl jobs will be created\nhere etl team they will be loading the\ndata into the data warehouse\nokay so like that the data flow so why\nwe have the audience database pms since\noltp is a sensitive database we cannot\ninsert all the transaction data in only\nyltp database or all the millions of\ncustomers should not access the same\ndatabase data at a time so that is the\nreason you know we have here ods\ndatabase since oltp is a sensitive\ndatabase so if we insert all the\ntransaction data it will affect it to\nthe customer so that is the reason we\nhave created the replica so in many of\nthe companies this replica of the\ndatabase will be the audio so from there\nagain the data will be loaded into the\ndata warehouse\nnext so another data flow will see in\ndata warehouse so this is yltp database\nright so let's say this is ods database\noperational data source\nand then\nall the data so whatever data present in\noltp database the same data also present\nin ods so immediately\nthere will be some jobs at the back they\nwill be taking care to maintain the data\nin a sync between these two databases\noldp and ods database\nthey will be in a sync so both the\ndatabases will be in a sync\nokay\nso if there are 100 tables in oltp the\nsame 100 tables also present in otp and\nods all the applications are not\nconnected to both the databases some of\nthe applications are connected to oltp\ndatabase some of the applications are\nconnected to ods database okay and the\nsame data will present in the data\nwarehouse also right so suppose let's\nsay here in oltp database if there are\n100 tables\ninstead of 100 tables we'll talk about\none table let's say in oltp we have\nemployee table so in this table if there\nare 100 records same employee table will\nalso have in ods database here also we\nwill insert all the 100 records and the\nsame employee table will have in the\ndata warehouse there also will insert\nall the 100 records\nso across these databases we will load\nthe data first data transfer will happen\nfrom old to ods once we have the data in\nods database so there will be some other\njobs they will be extracting the data\nfrom ods transform and load into the\ndata warehouse okay we'll see this data\nflow here in this scenario\nnow let's say this is oltp database\nand here we have podius database\nokay\nso as i told you these two will be in a\nsync\nokay let's say in oltp there are four\ntables the same four tables also present\nin ods database also\nthese are the tables\ninside the ods\nokay so this is t1 table\nt2 table\nt3 table\nt4 table\nso like that there are four tables in\nods okay\nnow as i told you here we'll have the\ndata warehouse\nso let's say this is data warehouse\ndatabase\nokay so inside the data warehouse we\nwill have dimension table and fact table\nso this is dimension\ndimension and this is fact table\nokay this is data warehouse\nokay and then\nin between ods and data warehouse we\nwill have another database called\nstaging area\nthis is called\nstaging area\nor stage database\nif you see staging area and stage data\nis also replication of ods database\nso whatever data present in\nods table perceives tables also present\nin staging database so first here there\nwill be some etl mappings to extract the\ndata from ods t1 table transform and\nload into the stage t1 table\nin the same way there will be another\netl mappings to extract the data from\nodsd odsd2 table\ntransform and loading to the stage d2\ntable so here also there will be some\netl mapping to load the data from t3\ntable extract the data from t3 table\ntransform and load into the stage d3\ntable in the same way t4 to t4 like that\nthe data will flow from ods to staging\ndatabase\nand then once this data is available\nhere in the staging database again etl\nwill happen to extract the data from\nthese transform and load into the data\nwarehouse so like that the data will\nflow to the data warehouse\nokay\njust a quick info guys intellipaat\nprovides business intelligence masters\nprogram in partnership with microsoft\nthe course link of which is given in the\ndescription below\nnow let's continue with the session\nso here from ods to data warehouse we\nshould not load the data directly\nokay for example let's say there is a\ntable in ods right t1 table so we this\nis a ods d1 table\nright so here we have some columns like\nthis employee number employee name\nsalary created\nupdate date\nso like this we have an ods\ntable\nokay so here we have some records like\nthis\ncreate data on date\nso let's say we have employee number 10\na 100 some created created let's take\ntoday's date so today\nis 8 24\nokay 20\n21\nokay\nsame run date also will have today's\ndate\nnext second record 20b\n200\nand here we have this one 30 c 300\nand here we have\nlike this\nfourth record\n40 d 400\nand here we have like this 50\ne 500\nso like that there are five rows in ods\nd1 table\nso for one of the row let's say created\nby mistake someone has inserted like\nthis\nso through some other application or\nlet's say we have got like this okay\ninstead of created so we will take you\nknow salary so let's say here salary for\none of the record we have the null value\nin ods d1 table we have the salary as\nnull value for one of the record okay\nnow\nhere in this case you know if you create\nhere if there is a etl which will\nextract the data from ods transform and\nload into the data warehouse\nthat etl what it will do it will extract\nthese five records and it will insert\nall the five records into the data\nwarehouse\nright so data warehouse there we will\nnot have the constraints\nso constraint means primary key foreign\nkey check constraint default you know\nnot null constraint so these constraints\nwe will not set in the data warehouse\nbecause if you have the constraints on\nthe data warehouse\nso the load will happen i mean like it\nwill take long time to execute because\nqueries also will take long time\nand the insert also will take a long\ntime if there are millions of records so\ngenerally we will not have any\nconstraints\nwe know we have to store historical data\nin data warehouse whatever the records\ncoming from the source all the records\nshould insert inside the data warehouse\nokay so that is the reason here we will\nnot have any constraints whatever data\ncoming from the source same as it is we\nwill insert into the data warehouse\nokay so now in data warehouse if you\ninsert all these five records\nthere for one of the row we have salary\nas null so which is incorrect record so\nthere should not be salary as null so\nsomeone by mistake they have inserted\nthe salary as null for one of the\nemployee in the source table\nokay so if the etl process will extract\nthese five records and if it is going to\ninsert all the five records into the\ndata warehouse data warehouse will have\nthe incorrect data on top of the data\nwarehouse if the reports are going to be\ngenerated incorrect or invalid reports\nare going to be generated\nso that is the reason before loading the\ndata into the data warehouse first here\nin the stage database or staging area so\nthere will have all the constraints in\nstage tables okay so inside the stage\ntable will have all the constraints date\nshould be 1 to 31 month should be 1 to\n12\nokay salary should not be null ok\nemployee number should not be duplicate\nso primary key like that all the\nconstraints at a database or table level\nwe will have in the staging database\nin staging also now let's say we have\nthe table so stage t1 table we have so\nif you have the stage d1 table like this\nso in ods we can have the validation but\nyou know sometimes it may happen to get\nincorrect data or duplicate data even\nthough you have the validation here so i\nwill tell you another example there even\nthough you have the validation sometime\nyou may get incorrect data so what type\nof incorrect data will get even though\nif there is a validation that we will\nsee\nso first here\nin staging table let's say\nstage\nt1 table you have here\nemployee number employee name salary\ncreate\ndate\nand then run date something like this we\nhave so these are the columns we have\nnow in on stage t1 table we have not\nnull constraint\nokay let's say here in ods let's say\nthey have not created the not null\nconstraint so because of that here it\nallowed to insert the null value okay\nsomehow there is no constraint on salary\ncolumn so that's the reason\nhere it allowed to insert the null value\notherwise if there is a normal\nconstraint here itself\nokay so here we will not get the null\nvalue so i am just giving the example of\nerror record how\nlike what is the purpose of staging area\nhere okay and why can't we load the data\ndirectly from the ods to data warehouse\nthat i am explaining currently\nokay so now if you have normal\nconstraint in this case what will happen\nso if the etl process happens to extract\nthe data from ods t1 table transform and\nload into the stage table\nokay so since we have the normal\nconstraint what will happen to that etl\nprocess so it will fail the execution it\nwill not be allowed to insert these\nrecords now let's say it has failed the\nexecution so after failing the execution\nthen etl team they will check\nwhy you know there is a failure because\nof the incorrect cut there is a failure\nthen uh we will check in ods so ods\nsource side here again there will be\nsome other team technical team will be\nthere\nthey will be maintaining the data\nbetween these two databases mainly\nvltp and ods there will be some other\ntechnical team they will be maintaining\nthe data between these two databases to\nmaintain in a sync\nokay so once we have the data in ods so\netl team will extract transform and\nloading to the staging of stage 2 data\nwarehouse\nso now while loading the data here it\nhas failed because of the null value so\nhere etl team they will inform to the\nods team or source a team saying that so\nfor one of the record there's the\nincorrect value so you have to fix it\nokay so after fixing again so suppose\nlet's say ods team they have updated\nsome salary here so again if the etl\nprocess runs you know that this time we\nwill have all the valid data that valid\ndata it will etl process will extract\ntransform and load into the staging\ndatabase and from stage again it will\nextract transform and load into the data\nwarehouse now this time data warehouse\nwill have all the valid data\nokay so we'll talk about another\nscenario so in another case we have some\nsalary here\nokay and by mistake someone has inserted\nso here created\nsomething like this 8 24 20 55\nokay created 820 for 2055\nokay since we have the future date here\nnow\nin this ods t1 table we have the\nvalidation let's say we have set on\nemployee number there is a primary key\nsalary we have normal constraint so date\nalso we are you know checking like\nwhether it is a 1 to 31\nour month is 1 to 12 like that it will\nallow but we do not have validation at a\ntable level whether it is a future date\nor less than or equal to system date so\nlike that such type of validation we do\nnot have\nright so to check whether the date is\nless than or equal to system data on the\nfuture date so that is the reason for\nthe year we do not have any validation\nso it allows someone by mistake they\nhave inserted the future date record\nhere\nso it is not possible to have the future\ndata record\nso in this case what will happen so this\nrecord future all the five records if\nyou execute when like if the etl process\nis executed so from audience to stage it\nwill extract all these five records and\nit will insert all the five records into\nthe stage d1 table\nagain so from stage to data warehouse\nagain these five records will be\nextracted it will be loaded into the\ndata warehouse\nright so in data warehouse also let's\nsay we have these five records\nwe know on top of the data warehouse\nreports will be generated let's say here\nwe have\nthere is separate team reporting team\nwill there so that team they will\nextract the data from the data warehouse\nand they will generate a report\nso in that report they have written a\nlogic to extract the records from data\nwarehouse where created less than or\nequal to system data\nso like that they have written the logic\nto extract the data from data warehouse\nwhere created less than or equal to\nsystem data so in this case it shows\nonly four employees information right\nso here we will get only four employees\ninformation\nbecause for one of the required there is\na created future date\nso we have all the validations but still\nso this incorrect record is present in\nods stage and the data warehouse\nokay\nnow what business people will do\nbusiness people as soon as they receive\nthe report so they are going to do the\nanalysis on their report so during their\nanalysis they found that only four\nemployees information they are expecting\nfive employees information but here we\nhave only four employees information now\nwhat business people will do they will\nraise a ticket or an incident\nso to the reporting team first so\nthen what reporting team will do they\nwill do the analysis during their\nanalysis they found that in a data\nwarehouse table there is an incorrect\nrecord\nfuture data record is there so because\nof that reason you know here in the\nreport it has extracted only four\nemployees information\nnow that ticket will move to the data\nwarehouse team\nso data warehouse team they only loaded\nthe data from stage to data warehouse\nright so as soon as that ticket data\nwarehouse team receives what data\nwarehouse team will do they will write a\nquery and see whether that record in\ncharacter card is present in the data\nwarehouse or not\nso after executing the query so they\nfound that that incorrect record present\nin data warehouse yes for one of the\nrequired there is a future date\nnow again from where that incorrect\nrecord has loaded from staging so like\nthat now they are going to do the back\ntrack\nnow first client side technical team\nwill be there our source team our ods\nteam so they should have to fix that\nrecord first in ods database\nokay so let's say if you are working in\nthe team so you have to write a update\nstatement or through front-end\napplication to you have to fix that\nrecord\nokay so here you will be uh let's say\nso they have done the analysis and\nso they have sent to ms sqlr database\nteam or dba team so they have sent that\nrequest whoever is responsible to\ncorrect the data in the database they\nshould have to take the responsibility\nand they have to\nfix that regard so first they have to\nfix that record by writing the update\nstatement let's say odst markline team\nour client that they have confirmed that\nthis is not it should not be 255 it\nshould be 251 so like that they have\nconfirmed so if they have confirmed to\ncorrect this date instead of\n2055 it should be 2021\nso if you have got the request you have\nto write a update statement to correct\nthat record in ods database\nso update created is equals to 824 2021\nwhere employee number is equals to 50.\nso like that we have to correct that\nrecord that is called data fixing in the\nsame way the same i know we also have to\nexecute the update statement in staging\ndatabase in stage t1 table also there\nalso that update statement should\nexecute\nright so like that we have to correct\nthe data so to correct the data we have\ntried to update statement so this time\nhere in this scenario we have only one\nincorrect record okay so in real time\nthere may be chance to have you know\nmany records also incorrect sometimes we\nmay get 10 records or 100 records or\n1000 records or 1 million records also\nwe will get such type of incorrect\nrecords because of you know sometimes\nbecause of suddenly the services failure\nour server went down so by mistake\nsomething if happens there may be chance\nto get the incorrect records or\nduplicate records or error records like\nthis in the source database when the\ndata is flowing to the data warehouse so\nthere may be chance to load such type of\nincorrect records across all these\ndatabases so here during the analysis\nsometimes you know instead of now this\ntime here a client has found that one\nemployee record is missing in the report\nsometimes here data analysis team also\nwill be there so if you are in data\nanalysis team\nso you will be writing the queries to\nfind the incorrect records in those\ndatabase tables okay so they will be\ngiving the some business criteria's okay\nso if this doesn't satisfy then\nconstruct that as a error record or\ncheck are there any duplicate records or\ncheck are there any future date records\nor check are there any null values in\nthis column so like that you will also\nbe writing the queries and doing the\nanalysis you know and finding for the\nerror records or incorrect records so\nafter\nfinding the error records then we should\nhave to get the confirmation with the\nclient okay so these are the records we\nhave found as in correct record so in\nthese rows we have the invalid\ninformation\nplease let us know what data we have to\nupdate here so once you get the\nconfirmation from the client then you\nhave to write an insert statement or\nupdate statement or delete statement\ndepends on our requirement so how we\nwant to fix so if there are duplicate\nrecords right so like that we'll be\nfixing those records here in ods days\nand data warehouse\nonce the data loaded into the data\nwarehouse on top of the data warehouse\nreports will be generated and those\nreports will send it to the business\npeople\nso like that the data will flow from one\ndatabase to another database\nright\nnext\nso this is standard data flow like the\ndifferent databases will be there\nokay and then the inside those will have\nthe tables so while loading the data you\nknow if there are any incorrect records\nso we should also have to fix those in\ncorrect regards and load only valid data\ninto the data warehouse so in some of\nthe companies again you know instead of\ndirectly generating the reports on top\nof the data warehouse here next to the\ndata warehouse we will have\ndata mart\nso inside ms sql also we can create data\nright so what is data mart data mart\nagain inside the\nmsa scale is a software type that's a\ntype of database software right\ndifferent databases we can create inside\nthe databases we have the schemas inside\nthe schemas will have the tables right\nso like that ms sql itself we can have\nthis data warehouse ods stage okay all\nthese databases we can have and also in\nthe same way we'll also have the data\nmarked\nso what is this data mart so why we have\nthis data mart means\nso we know data warehouse contains the\nhistorical data years of transaction\ndata will be there let's say here we\nhave 10 years of transaction data\nso if they are extracting the report on\ntop of 10 years of data definitely\nqueries will take time to execute so\nthey don't want to display all the 10\nyears of data in the report they just\nwant to display last three years of data\nso if they want to display only last\nthree years of data in the report\nand\nso if that three years of report query\nis going to execute on top of 10 years\nof data then definitely queries again\nwill take a long time to\nextract that report information last\nthree years of report information\nso that is the reason you know here\nwe'll have the data mods data mart also\nthis also contains the historical data\nbut this historical data is specific to\nthe report\nokay so now business people let's say\nthey want only three years of data in\nthat report\nokay so what here data mod here in the\ntable we will maintain only three years\nof data\nokay so again atl process will happen\nhere also\nto extract the data from the data\nwarehouse last three years of data\ntransform and load into the data mods\nso here instead of selecting all the 10\nyears of data so whichever the data is\nrequired to generate a report only that\ndata will be loaded into the data mods\nsuppose now let's say business people\nsays that i want only last six months\ndata for my report or last one year data\nso then in that table from data\nwarehouse you select the recent last one\nyear data or last two years data and\nmaintain only tasks that last one or two\nyears of data into the data mods\nokay so on top of the data marks if the\nreport is going to be extracted then it\nwill not take much time\nso very quickly the reports are going to\nbe generated\nright compared with the data warehouse\non top of the data mods if the reports\nare going to be generated it will be\nvery easily accessible\nokay so this is the data flow inside\nthat any type of database software will\nhave these databases again data will\nflow like this so finally it will be\nloading into the data warehouse we know\ndata warehouse contains the historical\ndata as i told you on top of the\nhistorical like historical means from\nlast 10 years or 20 years\nokay so we'll have\nyears of transaction data in the data\nwarehouse if you execute small query\nalso it will take a long time to execute\nor to written the result\nso that is the reason in instead of\nextracting all the\nreports on top of the data warehouse\nso instead of extracting all the data\nall the reports on top of the data\nwarehouse so as i told you so the from\ndata warehouse again in data marts will\nhave different different tables so\neach and every table you know so if the\nreport is going to be extracted on top\nof that table so that report if you want\nonly three years of data also from data\nwarehouse we in that data mod table will\nmaintain only three years of data\nokay\nso let's say in this data warehouse we\nwill store the data at enterprise level\nso enterprise level means let's say in a\ncompany if there are 10 departments are\nthere\nokay so data warehouse will store all\nthe tech departments data but while\ngenerating the report so for each and\nevery department we need to have the\nseparate report okay for department one\nwe need to have the separate report for\ndepartment 2 we need to have the\nseparate report for another report we\nneed to have another data for another\ndepartment we need to have the separate\nreport so for that you know instead of\nmaintaining all the 10 departments data\nin a single database which is a data\nwarehouse so again from data warehouse\nwe can connect to each data market like\nthis\nso again adl process will happen so the\ndata will warehouse to different data\nmods if there are 10 departments we can\nhave 10 data mods and on each and every\ndata mark corresponding to that\ndepartment report will be generated okay\nso we can create\nthe etl process so whatever the process\nhere will load the data extract\ntransform and load etl process will\ntaken care to maintain the data between\nthese databases we can also call it as a\ndata transformation or we called it as a\netl\nso there are different atl tools in the\nmarket like informatica power center\ndata stage abner show pentaho\nokay warehouse builder in sql uh when\nlike in uh we can also have the pl sql\npackages\nto transform the data from one database\nto another database but finally you know\nso very rare will be generating directly\non top of the data warehouse so again\nfrom the data warehouse data will be\ntransferred into the data mods\nso all these types of like otp ods will\nhave you know\nwill be there in ms sql so\nthese are the naming conventions of\nagain the databases which will be\ncreating inside that ms sql only the\ndata warehouse will have the dimensional\nfact table\nso all the other like wheel dp ods\nstaging and data mods or sometimes in\ndata marts we also called it as no\nreporting database so this is also we\ncall it as in\nin some of the companies they will call\nthis as a data mark or in some companies\nalso called it as a reporting database\nor some companies also called it as a\nmetalized views\nso metallized views also will be created\nuh you know because you know in data\nwarehouse let's say there is a table\nin that table if there are 100 columns\nokay\nand there are 1 million records in the\ntable but for the report they don't want\nall the 100 columns\nthey just want only some 40 columns of\nthe data in the report\nokay and also they don't want all the 1\nmillion records so in the table let's\nsay there are active and inactive\nrecords are there so they want to\nextract only active records and 40\ncolumns of data they need\nso in that case you know if the\nmetallized view is created on top of the\ndata warehouse stable\nokay to have only 40 columns and only\nactive records from that table the\nmetallized view physically it will be\ncreated in a database and that view\ncontains only active records and with 40\ncolumns of data and on top of that as a\nsource so materialize view as a source\nto generate a report\nso like that in some of the companies\nyou know they will be creating the\nmetallized views also after a data\nwarehouse in some companies data mods\nwill be created in some other companies\nalso called it as a reporting database\nso all these things will be there in a\nsame you know\nms sql or oracle\nor cybase db2 teradata depends on\ncompany\nso they will be creating such type of\ndatabases\nokay so we should have to be aware of\nthese things other data flow and\nwhat type of databases will be there\nso\nnow we'll talk about what is dimension\nand what is fact table\ndimension\ntable or we call it as a dim table\nor factor table\nso dimension table\ncontains\nprimary key\nand master data\nso if there is a table\nwhich we are calling as a dimension\ntable\nwe can say that it contains the primary\nkey and master data\nokay so master data also we called it as\na non-measurable data\nokay so whereas fact contains\nprimary keys of the dimensions\nokay or we also called it as a foreign\ncase\nand\nmeasurable data or measurable columns\ncolumns or data will have okay so this\nis the definition of dimension table and\nfact table so by loading the data from\nrelational table to a dimension fact\ntable so all the master data which is\nnon-measurable data we load into a\ndimension table and measurable columns\nor measurable data will have in a fact\ntable so i have one dimensional fact\nmodel here in the data warehouse we will\nhave the schemas\nlike star schema and snowflake schema\nokay so we have these two types of\nschemas in data warehouse\nokay so in star schema\ni mean like here you can see we have a\ndimension table and fact table\nokay so dimension table\nhere we have item dimension branch\ndimension and then\nyou know time dimension\nlocation dimension like that we have\ndifferent types of dimensions in data\nwarehouse\nokay so if you see in this dimension\ntable we have a primary key item key is\na primary key column right so apart from\nthe primary key column the other columns\nare item name brand name\nsold by category all these are non\nmeasurable\nin the same way here we have branch\ndimension so branch dimension also here\nwe have branch id which is one one\nprimary key column the other column\nbalance name owner name you know branch\nand owner name are non-measurable\ncolumns in the same way here time id\nit's a key column another day month\nquarter year are you know\nnon-measurable columns\nokay so location\nhere we have location id name state pin\ncode so here also location id is a key\ncolumn the other columns are\nnon-measurable columns in dimensions you\nwill not find the measurable columns\nthat's how it is designed so generally\nthis and all architect level architects\nthey will design the data models and\nthey will decide which column should be\nthere in a dimension and which column\nshould be there in effect\nokay but we just have to know what is\ndimension and\nwhat type of data will be there in a\ndimension table and what type of data\nwill be there in a fact table\nnow if you see fact so here we have\nforeign keys foreign keys means like\nprimary keys of the dimensions item key\nwhich is in a dimension table also\npresent in a fact table\nbranch id here we have a dimension table\nsame present in a\nfact table in the same way time id also\npresent in a\nwhatever is present we have in a time\ndimension the same time id and a branch\nid from the branch dimension location id\nfrom the location dimension like this\nfact table contains primary keys of the\ndimensions or foreign keys like this and\nalso other columns are measurable\ncolumns quantity sold so quantity is a\nnumber type of data so which is a\nmeasurable column amount sold amount\nagain it's a number type of data average\nsales it's a number type of data right\nso all these columns are you know\nmeasurable columns like this you know\ndimension contains the key column apart\nfrom the key column the other columns\nare non-measurable columns fact table\ncontains primary keys of the dimensions\nwhich are form case and the other\ncolumns are measurable columns\nokay so like that we will have the\nschema so inside the schema or we call\nit as a data model so in a data model or\nits schema in data warehouse you know we\nwill have dimensions and facts dimension\ncontains the primary key and\nnon-measurable columns whereas fact\ncontains primary keys of the dimensions\nin the measurable columns this is how\nthe dimension and fat will be\ndifferentiated and as i told you it's\narchitect responsibility to design the\ndata model like this\nbased on this they will be creating you\nknow dbs will be creating the tables and\nso if you store the data like this it\nwould be easy to generate a report so to\nfor easy access report so this dimension\nfact models are designed\nand compared with the relational so here\nyou know if it is designed based on the\ndata warehouse model reports would be\neasy to access so that is the reason\nthis dimensional fact model we have here\nnext\nso we have two types of schemas in data\nwarehouse the first one is star schema\nthe second one is snowflake\nso what is star schema model in data\nwarehouse means so you can see this is a\nstar schema model why we call this as a\nstar schema model means in a schema or a\ndata model if fact is connected with all\nthe dimensions\nthen we can call this as a star schema\nmodel connected means all the dimension\nkeys should present in the fact\nnow here there are four dimensions so\nthat is the reason we call this as a\nstar schema model if at least one of the\ndimensions suppose let's say this branch\nide is not present in this fact table\nthen we cannot call this as a star\nschema model\nokay so in star schema all the dimension\nkeys should present in the fact then\nonly we can call that as a star schema\nmodel\nwe have another schema here which is\ncalled snowflake okay\nso in this snowflake schema model we\nhave one fact and left side to the fact\nwe have four dimension tables right side\nto this fact we have to have five\ndimension tables\nso in this schema we have total nine\ndimensions are there even though we have\nnine dimensions we have only three keys\npresent like\ndate id store id product id so like that\nwe have only three dimension keys are\npresent in this fact table\nso like this in a schema or a data model\nif only few of the dimension keys are\npresent in the fact not all the\ndimension keys\nonly few of the dimension keys are\npresent in the fact then this model we\ncalled it as a snowflake schema model\nokay or so at least one of the dimension\nkey is not present us say you have total\nnine here you have eight dimension keys\nin this fact but the one dimension key\nis not present that means one dimension\nis not connected to that fact\nokay so in that case also we can call\nthis as a snowflake schema model so fact\ntable contains free of the dimension\nkeys and measurable columns in snowflake\nschema model whereas star schema model\nfact should have all the dimension keys\nagain so\nit's on all architect level they will\ndesign uh the data model schemas like\nthis and they will decide which column\nshould they're in a dimension and which\ncolumn should be there in effect so we\njust have to know what is star schema\nmodel and what is snowflake schema model\nso in data warehouse we have different\ntypes of dimensions we have four types\nof dimensions here one is confirmed\ndimension\nor reusable\nokay the fourth one is\nslowly changing dimension or scd\nso in slowly changing dimension again we\nhave three types\nokay so scd type 1\nscd type 2\nscd type 3\nso acd type 1 dimension contains the\nlatest data or current data\nwhereas s3 type 2 dimension contains you\nknow historical data\nso whereas acidic type 3 dimension\ncontains partial history\nokay so confirm\nour reusable dimension means if any\ndimension can be reused across multiple\nprojects\nsame dimension table so if you use\nacross multiple project then that is\ncalled conform dimension for example\nlet's say there is a employee dimension\nso\nemployee dimension is there here we have\nemployee number employee name salary\nsomething like this we have\nso you are working for let's say project\ncalled ge\nso you are working for a ge project so\nin this ge project there is a employee\ndimension so this employee dimension\ncontain you know ge employees\ninformation so let's say he is a ge\nemployee okay so in the same company\nthere is another project\ncalled ae aero electronics like that you\nhave another you know project in the\nsame company okay so\nhere also we have to create an employee\ndimension so here there is a employee\ntable created okay now here also we have\nto create an employee table so can we\nreuse whatever the employee dimension we\nhave created no right it's not possible\nwe cannot do like that because this\nemployee dimension contains ge employees\ninformation we cannot reuse this\ndimension into another accounts or\nanother projects\nokay so this is not valid so this is not\na confirm dimension okay so instead of\nemployee dimension let's say we have\nanother dimension in this ge called\ncalendar\nso in this calendar dimension we have\nall the calendar information\nokay\nso\nthe date and time and uh the calendar\ndimension generally it can take the\nholidays okay so public holidays and all\nso\nthose things will be there in the\ncalendar dimension so we are sure that\ncalendar data remains same across\nmultiple projects so that calendar\ninformation is not going to change\nokay so confirm dimension contains you\nknow\nthe data which can be reused across\nmultiple projects the same data again we\nshould not change anything\nsuch type of dimensions we can call it\nas a conform dimension we just have to\nknow the definitions\nand then junk dimension so junk\ndimension means\nif any dimension data every second or\nevery minute if it is getting keep on\nupdated the latest data if you are\ngetting for example it says stock market\ninformation if you store in any\ndimension so that data every second or\nevery minute we will be getting the\nlatest updates right so such type of\ninformation if you store any any\ndimension then that dimension we called\nit as a junk dimension then degenerated\ndimension so degenerated dimension means\nnow you know here we have a\npin code let's say in a location\ndimension here we have a pin code so pin\ncode contains characters sometimes we'll\nhave numbers also right so let's say\nthat one we have stored in a dimension\npin code column currently we have in a\ndimension\nokay very rare we will also store such\ntype of columns in fact also\nwhich is a non-measurable pin code pin\ncodes we cannot measure right but that\nwill have the number type of data also\nokay so such type of columns if you\nstore in a fact\nokay so if any dimension is sharing its\nnon-measurable column with a fact then\nsuch dimension we call it as a\ndegenerated dimension here for example\nlocation dimension we have in location\ndimension we have a pin code column so\nthat pin code column we have in a\nlocation dimension as well as in factor\ntable so that pin code column is coming\nfrom you know location dimension so in\nthis case so whichever the dimension is\nsharing its non-measurable column with\nthe fact in such type of dimension we\ncall it as a degenerated dimension\nnext slowly changing dimension in slowly\nchanging dimension we have three types\nscd type 1 sad type 2 scd type 3\nso type 1 data means let's say in a\nsource table you have a table like this\nemp underscore sad type 1 underscore\nsource here you have employee number\nemployee name address\nokay and here you have 10 a hyd 20 b blr\n30 cc like this you know we have a\nsource table and then\nso let's say here we have a target table\nthis is target\nnow by loading the data from source to\ntarget table how the data will be\nmaintaining this table for a cd type one\nmeans okay along with this we also have\nthe create it updated\nokay so how we will maintain the data\nmeans for the first time we will check\nwhether the source record present or not\nin the target table if the source record\ndoes not exist so it should be insert\nright okay so here we will be inserting\nlike this\nand a\nhydrated should be a system\nso it should be 8 24\n20 2021 and update it also will have\nsystem date\nokay and then\nfor the second record also source record\ndoes not exist so second record also is\ngoing to be insert\nlike this third record also does not\nexist this record also going to be\ninsert\nlike this\nso for the first time none of the\nrecords present in the target table so\nall the records is going to be inserted\nthis is how data transformation will\nhappen in a serie type one okay second\ntime let's say this employee has more\nhype to usa\nso here we have got an update as usa\nso let's say we have got this update on\n8 25 on august 25th he has moved to usa\nso if you have got an update here uh to\nmove to usa so this time if you execute\nthis film let's say we are executing\nthis mapping on next day tomorrow we are\nexecuting\nthis data transformation so what will\nhappen it will check whether the source\nemployee number exists or not in the\ntarget table\nokay\nso now in this case what will happen\nso we have to update here only\nspecific columns we have to update right\nso we have if the source employee number\nalready present in the target table we\nshould have to update the record in the\ntarget table so\nhyd with usa and also we also have to\nupdate the update date\nso like that it will happen\nin type 1\nso this is going to be 8 25\n20 21\nso we are not going to update the\nemployee name and also create it create\ndate is the date which actually the\nrecord got created\nokay so we no need to do anything for\nthe second and third record because\nthere is no change okay so no insert no\nupdate we just have to leave that record\nas it is okay next third time third time\nagain let's say this employee has more\nusb to uk\non august 30th\nokay let's say on august 30th we have\ngot an update here in this table so this\ntime in serie type one what we have to\ndo again if we are running this uh\ntransformation data transformation\nbetween uh source to target on 8th 30th\nit will check whether the source\nemployee number present or not so this\nsource employee number does not it's\nalready present and there is a change\nbetween source and target record so in\nthis case again it should have to update\na usa with uk\nso here we have to update with uk\nand then update date also it should be\nupdated to 825 to 830\nlike this it should be updated\nokay so for the second and third record\nno change so if we got the new record\nhere in the source table that new record\nshould be inserted inside the target\ntable\nso like that it should happen so a\nemployee number 10 he was there in hyd\nand then he moved to usa and currently\nis in uk so we have whatever data\npresent in the source same as it is we\nhave present in the target table we\ndon't have older transactions here\nright so whatever data present in the\nsource same as it is if you maintain in\nthe target table that is called you know\nlatest data\nit will not update automatically so\nthere will be some atl process\nokay so etl jobs will be there\ninformatica team or atl team so our pl\nsql team project depends on the client\nthey will decide what how they want to\nprocess the data\nokay so it will not be updated\nautomatically so there will be some\nprocess to transform the data from\nsource to target right so that process\nwill take care to maintain the data like\nthis in the target table\nokay\nso as soon as that process is executed\nthat will take the source employee\nnumber it will check in the target table\nwhether it is present or not so if it is\nnot present then it will insert if it is\nalready present then it will check is\nthere any change between source and\ntarget if there is a change then uh you\nknow it will update only the specific\ncolumns in the target okay so like that\nit will happen so this is in srd type\none next serie type two how it will\nhappen in a city type two\nso employee number employee name address\nso here for the first time we have like\nthis\nin the source table\nso now let's say here\nthis is the source and this is type 2\ntarget\nso here we will have another key column\nshould be there employee id\non top of this will have the primary key\nconstraint\nand then here we will have\neffective\nstart to date\nand effective end date also will be\nthere\nokay so here also what we have to do for\nthe first time we should have to check\nwith the source and buy number present\nor not in the target\nso here we have to insert the record\nwhile inserting in this eid primary key\ncolumn so identity should be defined on\nthis eid column or\nwe have to generate a auto increment\nsequence number so we have to set on top\nof this column so that will take care to\ngenerate a sequence value\n1 10 10\nhyd will come from the source effective\nstarted it should be a system date\n8 24 20 21 end date always it should be\n1 1 double 9 double 9 future day\nokay so like this so start to date\ncolumn here we should have to load the\nsystem date and here it should be always\nfuture date in type 2 next for the\nsecond record so employee number 20 also\ndoes not exist this also we have to\ninsert 2 20\nb blr and this one so like that we have\nto insert for employee number 30 also\ndoes not exist 3 30 c cni and this one\nlike this\nfor the first time none of the record\npresent in the target table\nso all the records that etl process\nyou know will extract transform and load\ninto the target\nso this is a data warehouse table sc\ntype 2\ntarget is the data warehouse table so\nhere we are seeing like how the data\nwill be maintain the historical data\nsecond time let's say this employee has\nmore hvac to usa on august 25th\nokay so this record we have got on\naugust 25th\nso tomorrow if you are executing this\nmapping to load the data\nfrom source to target\nso what will happen\nit will take the source employee number\ncheck in the target whether that is\npresent or not so this time already\npresent so if it is already present is\nthere any change between source and\ntarget yes there is a change source we\nhave latest address usa present target\ntable we have previous or old address\ninstead of updating the address what we\nhave to do is so we have to update the\nend date with the system date\nto make that record as inactive\nokay so here we should have to update\nthe end date with the system date first\nthat etl process will take care all of\nthese things\nwe just have to know the concept how it\nis going to maintain the history\nso it will be updating with the system\ndates this date is 8 25 let's say since\nwe are executing this mapping on next\nday so it will be updated with the\nsystem date\nand then\nthe latest updated record for the same\nemployee a new record will be created\nthis is a sequence value here it will be\ngenerated\nemployee number 10 a usa and 825\nand this is one one double nine double\nnine so like that we should have to\ninsert\nokay\nnext let's say again\nuh this employee has more usa to uk\nokay so we have got an update here\nuk so\nthis he has moved to uk on august 30th\nso we have got an update on august 30th\nthis time what do we have to do so we\nshould have to check in the source and\ntarget so do we have source empire\nnumber present or not this time for\nemployee number 10 how many rows are\npresent in the target there are two rows\nin these two rows to make the recorders\ninactive so we have to update the fourth\nrecord which is the active record this\nis we call it the active record the\nfirst row is inactive record for that\nemployee so active record end date\nshould be updated with the system date\nso this one it should have to update\njust a quick info guys\nintellipaat provides business\nintelligence masters program in\npartnership with microsoft\nthe course link of which is given in the\ndescription below\nnow let's continue with the session\nwith system date this date is 8 30 so if\nyou are running this\nload on 8 30 so it is going to be 8 30\nand then the new record is going to be\ninserted for the same employee\n5\n10\na\nok 8 30\nand then here\n1 1 double line double 9 like this it is\ngoing to be in center whenever we insert\nthis should be a system date and it\nshould be a future date\nokay next second and third record there\nis no change no insert no update\nso again fourth time if any new record\ncomes here\nthis employee number 40 record needs to\nbe inserted so fourth time if you if\nthis load happens so the data is going\nto have like this in the table so you\ncan see\n440 del only this record not for the\nhair six sequence number for the next\nrow six and here the system let's say if\nit is 8 30 so it is going to be inserted\nlike this this is how the historical\ndata will be maintained in the data\nwarehouse\nso next we have a serie type 3 partial\nhistory so we'll see how to maintain the\npartial history here\nemp scd3 underscore yes source table\nhere we'll have employee number employee\nname original address and current\naddress let's say here we have\naddressing two different columns\nokay\nso we have address in two different\ncolumns\nand then uh\ncurrently we have one a hyd current\norder is also hvad for the first time we\nhave the same\nor what we will do is here we will have\nonly one column for the address\ntarget will take two columns so like\nthat here we have the source 10\nhydr and r\n30 cc like this we have a source table\nso whereas in target table\nfor type 3\nwe'll have like this\nso here\nuh original address\nand current address\nokay so\noriginal address and current address and\nif you want you can also have created\nupdated columns okay\nso now for the first time none of the\nrecord present in the target table all\nthe three records needs to be inserted\n10 ea original address also hrd current\norder is also hyd and also we'll have\nthe create date update date columns so\ncreated today's e24 update it also we'll\nhave today's date only e24\nnext for the second record 20 bblr and\nthis is blr and this is 824\n824\nokay next 30 c cmi and this is also cli\nand 824 824\nso like that you know for the first time\none of the records will present on all\nthe records are going to be inserted\ninside the target table in a city type 3\nso next time let's see if we have got an\nupdate here\nokay so here\nthis employee has more hype to usa\nso we have got an update here\nso this update we have got on august\n25th\nokay so this employee moved to usa and\n25th so this time let's say we are\nexecuting data transformation happening\non 25th\nso in that case this date will be 25th\nso it will take the source employee\nnumber checking the target table whether\nit is present or not since it is present\nnow what it should have to do it will\ncheck whether is there any change\nbetween source and current address so we\nhere we should have to compare between\noriginal source address in the current\naddress\nthese two columns we should have to\ncompare so if there is a change yes then\nwhat we have to do we have to update the\ncurrent address and the updated these\ntwo columns we have to update here\noriginal address remain same so current\naddress only we will be updating to usa\nand then here the update it will be uh\nlike system date 825\nfor the second and third record there\nwill not be any change no insert no\nupdate so it will just leave that as it\nis\nokay next again let's say again we have\ngot an update this employee again he has\nmore usa to uk so in the source table we\nhave got an update here so let's say\nhere we have got an uk and this update\nwe have got on august 30th we have to\ncompare so we will check whether the\nsource employee number exist or not if\nit is already present check is there any\nchange between source and target while\ncomparing we have to compare with the\ncurrent address in source we have uk\nwhereas in target we have usa\nnow in this case what we have to do we\nhave to take the source address and\nupdate that source address in the target\ntable\nhere in the current address column\nright so we will be updating uk and also\nwill be updating the update date\nso updated with a system date says date\nis 8 25 so like that it will be 8 30 so\nit will be updated\nokay so for second and third record\nthere is no change\nright so like that it will be updated\nnow in this case you can see here so he\nwas there in hyd from basically from hyd\nand then he moved to usa\nokay and then he moved to uk we don't\nhave in between transaction we have\noriginal transaction\nand also we have the latest transaction\nin between transaction data we don't\nhave usa record we don't have so\noriginal transaction we have and also we\nhave the current transaction this is\ncalled a cd type three okay and if you\nhave any other columns here suppose\nlet's say contract number so you're\nsaying contract number so contract\nnumber some numbers you'll have like\nthis\nsomething like this if you have here\nalso will have only one column so\nbasically here in serie type three we\nshould have to\ndecide on based on which column we have\nto maintain the partial history\nso here we are maintaining the partial\nhistory based on the address column\nso based on personally we are deciding\nif there is a change between source and\ntarget\nokay so type 1 and type 3 difference if\nyou see here in type 1 finally we have\ngot an update as uk right the same uk\npresent but here he was there in hyd he\nwas then in usa original transaction\nalso we have here whereas here in type 1\nwe do not have original transaction we\nhave only reset a transaction here\nthat is the difference between type 1\nand type 3 so type 1 will have only a\nrecent transaction whereas in type 3\nwill have both like original and current\na transaction in between transaction we\ndo not have\nso these are the three types of you know\nmainly the slowly changing dimensions\nwe have in data warehouse\nnext\nwe'll have types of facts\nfacts also we have four types of facts\none is\nadditive fact\nthe second one is semi semi-additive\nfact\nthird one is\nnon-additive fact\nand fourth one is fatless fat\nsodium fat contains primary keys of the\ndimensions or we also called it as a\nforeign keys\nand measurable data\nwhereas this one contains\na semi-artifact\nfew\nof the\ndimension primary case\nand measurable columns\nmeasurable data\nand\nnon-additive fact contains no\nprimary use\nof\ndimensions\nand it contains only measurable data\nso fact less fact it contains only\nprimary keys of dimensions\nand no measurable data\nso the fact which we have in a star\nschema model this fact we called it as a\nadditive fact because it should have\nprimary keys of the dimensions and\nmeasurable data\nall the primary keys of the dimension\nshould be there inside this fact\nokay whereas\nsemi additive effect contains only few\nof the dimensions so the fact which we\nhave in a snowflake schema\nis called semi additive fact so semi\nadditive fact contains only few of the\ndimension keys and measurable data not\nall the dimensions\nokay and then non-additive fact no\nprimary case of the dimensions are only\nmeasurable data which means that fact\nwill not have any of the dimension keys\nso that will not be connected with any\nof the dimensions\nwhich contains only measurable columns\nthere will not be any dimension keys so\nif any fact contains only measurable\ndata no primary case of the dimensions\nthen we can call that as a non-additive\nfact\nokay and then factless fact so factless\nfact we have only primary keys of the\ndimensions and no measurable data\nso it should have\nall the dimension keys but this column\nshould not be there\nno measurable data such type of fact we\ncalled it as\nfactless fact so non-additive fact so in\ndata warehouse schema so any table which\ncontains only measurable data and no uh\nprimary case of the dimensions or no\nforeign is nothing then that is called\nnon-additive fact so that will be there\nin a data warehouse that's why we call\nthat as a fact\nnext so generally data marked contains a\nspecific department history whereas data\nwarehouse contains enterprise level\nhistory so enterprise level means all\nthe departments historical data if you\nstore in any data warehouse\nlike if we store all the departments\nhistorical data then that is called data\nwarehouse so if you store any specific\ndepartment history or\nreport based history if you store in any\ndatabase then that is called data marts\nso we can have n number of data marks\nbut data venous can be only one so where\nwe'll have all the departments\nhistorical data\nwhich will be for enterprise level\nhistory will be there in data warehouse\npresent data mods will have only\nspecific department level history\nokay so we have finally in data\nwarehouse we have a\ntop down\nand bottom top approach is there\nso top down approach means so from oltp\nto this is yltp this is ods this is\nstaging and then this is data warehouse\nokay so from data warehouse if you load\nthe data into the different data mods\nthis is called top down approach\nokay so this is oltp database and this\nis ods database and this is a staging\ndatabase\nand this is the data warehouse database\nand these are the data mods\ndata mart one\ndata mod 2\ndata mod 3\nokay so this is called top down approach\nso on top of the data mods reports if\nthey are going to generate a report in\ndata warehouse we call this approach as\na top down approach whereas bottom top\napproach means so instead of\nloading the data first into the data\nwarehouse\nso first\nwe load into the data mods from staging\nwe can also load the data into the data\nmods\nand then\nfrom data mod again instead of\ngenerating the report on top of the data\nmods so we can load the data into the\ndata warehouse and then the reports will\nbe generated this is very rare\nmost of the times top down approach only\nwill be there so here this is a data\nwarehouse so from data marts again if\nyou load the data into the data\nwarehouse on top of the data warehouse\nif the reports are going to be generated\nthen this is called\nbottom top approach\nokay but\ngenerally we'll have top down approach\nso these are the concepts we have in\ndata warehouse\ndata mart is nothing but\na subset of our data values\nso consider this is my\nuh the transactional database which we\nare having okay in real time\nso this is operational systems\nso\nwe are not going to\nload\nin the single stage\nto the data barriers we do have so many\nstages will be available okay so\nfrom the oltp to oil ap tran transfer\nrate data transfer so definitely we do\nhave multiple stages available in the\nreal time\nso\nlike staging\nstaging area is one of the\nstages in the etl process\nlike we will land all the data from\ndifferent different oil system to oltp\nsystem to staging from the staging too\nwe will move the data to data barriers\nso from the data values a subset of data\nvalues we will create\neither logically or separate data much\nwill be created again the data marks\nalso a database only\nbut it is a logically individ\nhow we do how one terabyte of hard disk\nhave been divided like c type d drive\nand e drive the same way so here also\nwe will logically divide\nthe data values or one particular\ndatabase into\nmultiple data mart the data mart will\nhave a subject oriented informations\nbased on their business\nso consider this is the two\nthis is the difference between data\nvalues and data mart\nthe data values\nit is it will have all the enterprise\ndata\nokay so it will have all the enterprise\ndata\nbut data mart will have a particular\nsubject a department by data\nso here we do have multiple subject\nareas are\navailable in this particular data values\nbut here it will be a single subject\narea each data mod will have single\nsubject area so multiple data sources\ndefinitely will have multiple from the\nmultiple data sources we\nuh we will accumulate all the data we\nwill integrate the data into paragraphs\nbut here it will be limited data source\nso might be this might be the source for\ndata mart\nagain we need to do the etl process to\nfetch the data from it database goes to\ndata mart here we used to do one etl\nprocess\nagain here etl tool will be uh\nintroduced\nso here\nit will occupy a large memory okay the\ndata values will occupy large memory but\nthe data mark will occupy limited memory\nso\nso this will take lot of lot of time to\nimplement this database but the data\nmarch will\ntake some shorter time to implement it\nso this is the major difference between\ndata match and\ndata values\nso we do have different types of data\nmarch\nin the real time\nso for example three different types of\ndata mods are available\nso the first types of data mark is\nindependent\ndata mart\nokay so the dependent data mart\nand independent data mart\nand hybrid data mart\nso what is meant by independent data\nmart\nso here we do have oltp systems\nso from the oltp we are moving the data\nto data variables so from the vargos we\nare\nwe are fetching the data for our data\nmode\nso this is called dependent data match\nthe reactor mark is dependent on the\ndata values\nokay so from the variables we are\npulling the data so the data is first\nextracted from the oltp system\nand then populated to the\ndata mart the central data bar goes to\ndata marked so from the variables the\ndata travels to the data mod but here\nindependent data merge here the data\nvarious will not be available okay\nso directly the data marked will be\nloaded from\noltp source so this is called\nindependent data merge\nand then we do have hybrid data marked\nwith a hybrid data match the data mark\nwill get the data from\neither from the oltp system or from the\ndatabase system\nso this is the three different data part\navailable in the\ndata values so what is the data modeling\nso data modeling is nothing but\nso\nfor example if the business users\nso will give us the business related\nterms\nokay business related\nuh terminologies\nhe knows or she knows the business\nand she wants to convert the business\ninto a model\nokay data model so how to convert that\nso we do have a different methodology\nto draw this okay to create that data\nmodel so we do have three different\nmethod\nso one is called conceptual model\nand logical model\nand physical data model\nso what it does mean so what is\nconceptual model so how to create this\nconceptual model and what is logical\nmodel what is physical model we will see\none by one you assume that so we are\ngoing to create the data model for one\nof the\nparticular a particular online portal or\nsomething okay so online\nportal\nthe online product uh selling portal we\nare going to create it\nthis online portal right definitely they\ndo have uh\nthey need to have so these are all the\nthe tables we should have\nso in order to\nhave our customers informations we need\nto have the customer table\nin order to maintain our employees\ndetails we will have the employees\ntables\nin order to maintain the customers\naccounts we will have the accounts table\nin order to maintain\nthe product information we have the\nproduct now the region table so to have\nthe different regions on the sales to\nanalyze which region is performing well\nto analyze which product is performing\nwell so which account they have they\nhave\ntransferring the money or doing the\ntransaction the money which employee is\ndoing well okay so\nhow is the performance on the customers\nokay so like like this we do have a lot\nof tables are involved in the\ndata modeling\nso if you consider these tables so\ncountries table regions table\naccounts table merchant table so a lot\nof tables are available okay\nso in this customer table so each\ncustomer will be identified by customer\nid\nso this id we will call it as a primary\nkey in a database\nokay so then we will have all other\ninformation of our customer\nso for example customer name\nso customer name might be\na duplicator okay so two customers may\nhave same name but the customer id will\nbe different\nthe customer mobile number okay we can\nget the customer mobile number to give\nthem the update\nthe mobile number\nwe can get the data but of the customer\nto identify to analyze the age of the\ncustomers\nso which type of customers which age\ngroup of the customers is ordering the\nproduct okay more\nso in order to get that we need to have\nthe data birth\nso we will get the address of the\ncustomers which location their customers\nare\nordering more\nand on the city of the customer\nand\ncountry of the customer from working at\ndifferent countries\nso these are all called the different\ndimensions\nokay different dimensions of the\ncustomers\nso if you consider customer is one of\nthe table then this is the customer id\nis the primary key\nso primary key in the sense it will not\nallow duplicate to the columns\nso primary key\nand customer name\nthe mobile number the data but is the\ndifferent dimensions of the customers\nthis is the dimension table we do have\nan employee table the same way employee\nid\nemployee name mobile number employee\nskill set employees of experience and\nemployee city address all those we can\nget it the account\nthe account number will be the primary\nkey\nand what is the type of account what is\nthe active account or inactive account\nso\ndifferent different details we can get\nthe\naccounts so these are all the tables are\ndiamonds and tables\nokay so different dimensions of the data\nand\nby using these dimensions if i'm going\nto create a sales\nokay\nsales\nthis table is called as pack table the\nsense fact table will have the\neach\nkey values here\nwhich customer has ordered the product\nokay which employees have helped\nto purchase the product employee id\nokay then which product he has\npurchased product id\nthen\nwhich account account number okay which\naccount number he has purchased\nwhich region is purchased the product so\nat the end of the day i want to analyze\nthe summarized data on the regions which\nregion is performing well\nokay which merchant is performing well\ni'll have the merchant id this is the\nway i will get all the\nkey values from the table\nokay key values from the table\nso these key values are called as\nforeign keys\nokay the integrity to maintain the\nintegrity will have the foreign keys so\nnormalization we will see more on the\nprimary and foreign key but as of now\nyou unders\nunderstand uh this\nforeign key primary key relationship so\neach column is called as foreign key\nthat is the the reference is coming from\nthe base table\nthe dimension table\nso this is like\nthe the diamond the fact table we have\nall the keys we have and then we do have\nthe quantity how much quantity he has\npurchased the product okay for example\ntwo qualities he has purchased\nwhat is the one quantity unit price\none quantity unit price\nand what is the\ntotal quantity yes persist\nor total price\nso if one quantity two quantity is\npurchased one quantity is 100\nthen the total price will be 200\nokay so these three\nare\ncall it as the measures the measurable\nvalues these three\nare called as the measures\nwhy because these are the measurable\nvalues\nand\nthis this\ncolumn is called as\nthe dimensions so these are like the\nforeign keys will be maintained in the\nfact table this is a fact table f\nunderscore sales is the fact table\nthe fact table is derived from the\ndimension table to have all the\nthe customers\nthe customers information the employee\nwe will not keep all the customers\ninformation here just we will keep the\ncustomer id which customer he has\npurchased\nwhich employee has purchased help to\npurchase which product has been\npurchased on which account number\nfrom which account he has purchased\nwhich region id and which merchandise\nall those\nin order to\nafter that if i want to get this\nparticular\ntotal sales for the day so even i will\nuse the date key\nokay date id update key\nto have this date\nso date dimensions i will get the date\nso which date so after that so i will\ncombine i will sum up this total price\nfor a particular day\nand then i will get the merchant\non the ranking and i will go for the\nmerchant id\njoin with this merchant table and then\nget which merchant\nis\nhaving the highest\nsales today\nso this is what the fact and dimension\ntables are related so again the data\nmodeling is having the three different\ntypes one is conceptual model and\nlogical model and physical model\nso what is that conceptual model so you\nhave concept okay you have business\nconcept okay so i want to create\na data model for this particular\nbusiness\nokay you take the online food delivering\nuh\nthe business okay online food delivery\nbusiness\nso this is the one of the con concept i\nhave as of now so for this i want to\ndraw a model data model\nso what are the tables needed for this\nfood delivering\nparticular\nbusiness\nso i will have the time okay we have the\ndate and time dimensions\ni will have the product okay different\nproduct i will have\ni will have a different store to\npurchase the products all those so\nwhatever the diamonds and tables you\nneeded for\nall the\nfor this particular business you will\ndraw all the dimension tables\nlike time dimensions product\nstore and regions and\nthe merchant account whatever the\ndimensions you want to have you have to\ndraw all the dimensions\nso with\nso with that only name okay only name no\nneed to mention any detailed\ninformations okay\nso these these are called its entities\nentities is nothing but a tables a\ntechnical word is stable\nbut in the conceptual data model we will\ncall it as entity\nso what are the entities we are going to\nhave all the entities we are going to\ndraw\nokay so includes the important entities\nand the relationship among them okay so\nwhat is the relationship we are going to\ncreate\nso the tables are\nlike divided into two parts\none is the upper the path is having the\nprimary keys\nso whatever the keys you want to have\nfor example this product i product table\nmight have the product id the store\ntable will have the store 80 the sales\ntable will have all the foreign keys\nhere\nso this is what the conceptual diagram\nwe will write so here we will not write\nany attributes attributes is nothing but\ncolumn names\nsince it is a conceptual data model we\nare not going to write any primary keys\nforeign keys all those\nwe are just mentioning the entity names\nand how the entities are related to each\nother\nso this is called conceptual model so\nyou can have a sing a simple paper\nand paint pen to draw this\nor you can have this paint\nokay so just you can drag and drop all\nthose and then you can have this\nconceptual data model in this\nconceptual data model it will be highly\nabstract okay so it will be highly\nabstract\nso you cannot have any uh column names\nyou cannot have any column names it will\nbe easily understood\nokay it will be easily understood uh\neach and every model so this conceptual\ndata model will have this highly\nabstract\nokay it will not have any uh\nattributes names attributes name in the\nsense the field name the column names it\nwill be easily understand you can easily\nenhance so you can add\nmore\nentities to the particular model\nokay so only the entities are visible so\nyou should not write any uh\nso it's like a first step of the\ndata model so we will have all the\nentities so only entities we will\ndrop that\nall the\nrelationship between the tables\nentities so no software tool is required\nto define a conceptual data model since\nit is only the concept\nwe will no need to have any software to\nto draw this\nso this is one of the\nthe conceptual data model so time\nproduct sales store regions account\nmerchant so n number of\ntables can be connected with uh the fact\ntables the fact tables might be\nconnected with different dimension\ntables as well\nso this is called a concept conceptual\ndata model then we have the logical data\nmodel\nin this logical meta model it has been\nenhanced from the conceptual data model\nso the first step is we will write the\nwe will draw this on the conceptual data\nmodel after that\nin this conceptual data model\nwe will have this what is the primary\nkey we will use okay so definitely each\nentity we need to have a primary key for\nthis\ntime dimensions we will have the date\nprimary key date key\nin product it will have obviously a\nproduct id\nso it is like a description of the\ncolumn not the column name\nnot the exact column name we will write\nso simply we will write product id okay\nwith space also\nif it is a column name so definitely if\nit is attribute name definitely we\nshould write with underscore\nso since it is a description so you can\nwrite\nwith this\nokay so date descriptions\nmonth descriptions\nand year\ngo all those so whatever the\nthe attributes you want to have you can\nhave all the attributes here\nin the product table\nin the products entity you can have\nproduct id product description category\nand category descriptions unit price\ncreated time on updated time you can\nhave all those\nand then the sales the store right the\nstore id store descriptions which region\nis from the store the region name\ncreated date updated all the all those\nyou can have it and then the store that\ni as i told the\nthe upper part of the\nfact table will have all the foreign\nkeys\nso from the store table you'll have the\nstore id\nfrom the product table you'll have a\nproduct id from the date from the time\ntable will have the date key\nafter that item sold item amount i told\nright it will be the measures only the\nmessage the foreign keys and messages\nwill be there on the fact table\nso item sold is the quantity again the\nsales amount is the price so these two\nare called as measures\nokay foreign keys and measures will be\nmaintained on the fact table\nso this is what we will maintain in the\nlogical data model\nwe will not write exact column names we\nwill not write any primary keys and all\nthose we will simply mention that the\ncolumn description\nit includes all the entities and\nrelationship among them\nall the attributes attributes of the\ncells the column names all the\nattributes for each entity are specified\nthe primary key is for each entity is\nspecified\nthe foreign key is also identified and\nspecified\nwith this fact table\nand normalization occurs at this level\nnormalization in the sense\nokay so for example i do have store\ntable\ni will i'm\nassuming that in the store table i have\nthe region and region name\nokay so i can split this store table\ninto one more\ntable okay consider\nthis is called normalization anyhow we\nare going to see tomorrow\nso consider this is one more table\nas the region table we are creating\nso\nthe region table we are creating here\nokay\non this region table so we we are going\nto delete these two fields from this\ntable\nand they\nhere we have only have the teacher id\nokay region id column so this region id\nis connected with this region id\nin this table\nso this is region id we have\nregister id so and then region name\nso\na single dimension table is again\nsplitted into other dimension table to\nhave\nto avoid the data redundancy\nso how we will avoid the data redundancy\nso i because if i have a particular\nstore\nokay a particular store\nin a different different regions okay so\ni do have different different regions\nand\nin a single region i have multiple store\n100 stores are there in the single\nregions so the 100 regions informations\nwill have 100 times the region names\nwill be repeated\nto avoid this\nwe will have only the region id here and\nwe will take that region name only one\ntime here region id and region\nso that the data redundancy will be\navoid by using the normalization so this\nis called normalization\nso normalization occurs this level so\nif any possibility of the normalization\non the tables we will split up this\ntable into multiple tables this is\ncalled logical data model\nso presence of attributes so definitely\nyou will have the attributes present in\neach entity\nand the key attributes the primary and\nforeign key\nand the non-key attributes the\ndescription you will have right the\nnon-key attributes you have\nthese are all the non-key attributes\nthis date is the key attribute here the\nproduct id the key attributes\nthen primary key foreign key\nrelationship definitely will have the\nprimary and foreign key relationship\nand user friendly attribute names you\ncan have only the descriptions no need\nto have\nthe\nthe primary can foreign key\nsorry no need to have that entire column\nname you can simply you can have these\ndescriptions\nand you can it will be more detailed\nthan the conceptual model so you'll have\nall the column names right\nso edwin is the data modeling tool our\npower designer okay can be used to\ncreate logical data models so this data\nmodel we are going to create\nand then this can be automatically\nconverted to a physical data model with\nthe help of this tool\nso\nif you create the logical data model so\nonly this model then the ervin tool will\nconvert this model into a physical data\nmodel\nokay so it will create the table names\nall those it will create the with the\ncolumns\nso this is the physical data model see\nhere so each and every table will have\nthe\ncolumn attributes as well as\nthe data type of the attributes and the\ndata length of the\nattributes okay for example if you\nconsider this is one of the uh table the\ntime table okay so here that the table\nname is uh mentioned as dim underscore\ntime so dim is nothing but so dim is\nnothing but dimensions\nso dim underscore time\ndem underscore product\nfact fact underscore sales i as i told\nuh the sales table will be a fact table\nso this is the actual\nformat we will give okay so deem\nunderscore store is a dimension table\nthe dimension tables are connected with\nuh the fact table here\nso see here here we have the\nall the column names underscore with\nunderscore exact column name should be\nthere\nokay so what is the data type or for\nexample it is an integer\nor it is a vector so how much is the\ndata length that is also will be\nprovided here\nso detailed the logical uh model from\nthe logical model the physical model\nwill be automatically drawn by using any\nother\ndata modeling tool so so we can have the\nadmin tool\nso if you if you give this for the\nairplane tool if you give this this\nmodel so automatically it will convert\nthat into this model\nokay this model of data\nso fact underscore sales\nso definitely it will have uh\nthe fact tables so all the foreign keys\nagain it is also integer integer integer\nand integer and float\nso mostly it will have the id columns\nthe key columns\nand these are dimensions so see here\nthe the specification of all tables and\ncolumns will be maintained\nin this physical data model\nthe foreign keys are used to identify\nthe relationship between the tables\nand the normalization may be occur okay\ndenormalization is in the sense\nwe will again\nwe will we have splitted the tables\nright two tables here\nmight be merge these two tables into a\nsingle table\nso if necessary we will do this\ndenomination based on the\nrequirement so physical consideration\nmay cause the physical data model okay\nto be quite different from the logical\ndata model so the physical data model\nagain it will create okay uh it will it\nwill differ from\neach database\nif it is teradata\nmight be the backer it will be okay\nthe integer big integer okay but if it\nis that oracle the integer might be\nnumber the worker might be webcast 2\nokay so different different databases so\nwhenever we are having that airbender\ntool if you create\nthe logical data model we should select\nwhat is the database we are going to\napply this\nso if you select oracle then\nbased on this particular database\nit will convert that logical into a\nphysical data model so this is the\nphysical data model it will create\nuh then\nso entities referred as a tables here so\nagain we will call it as since it is a\nphysical table\nso here we are going to\nmake\nthe terminologies as table here okay we\nwill not call this as entity we will\ncall it a table attributes will be\nreferred as column here\nso database compatible table uh database\nagain compatible the table names\ndatabase compatible column names we need\nto provide and database specific data\ntypes also mentioned\nso difficult for user to understand\nso those who do not have any technical\nknowledge\nso\nso they were somewhat difficult to\nunderstand but if they are seeing that\nthey can able to understand what is this\ncolumn names so overall they can able to\nunderstand\nbut in detail level they cannot they\ncould not able to understand\nagain we can create the index constraint\ntriggers all the db objects with this\nphysical data model so the create table\nstructure has been created automatically\nfor this period\nphysical data model okay by using any\nother tool and this is what\nthis is what the tool will create the\nautomated automatically logical data\nmodel to physical data model of the\ndifferent versions different database\nservers\nokay so this is the the concept of\nthree different\ndata model\nso let us get to the interview questions\nfirst question that we have is compare a\ndatabase with a data warehouse now there\nare obvious differences between the two\nfor instance the type of data which is\nused in databases include relational or\nobject oriented data while in data\nwarehouse since we are getting data from\nmultiple sources we have a large volume\nof data as well as multiple data types\nfor the data operations aspect databases\ndeal with transactional processing while\ndata warehouses deal with data modeling\nand analysis the dimension of data and\ndatabases is two dimensional because we\nare dealing with tables which are\nessentially 2d arrays while in data\nwarehouses we can have multi-dimensional\ndata they could be 3d 4d data design\ndatabases have er based and application\noriented database design while data\nwarehouses have star snowflake schema\nand subject oriented database design the\nsize of data and databases traditional\ndatabases not big data databases is\nsmall usually\nin the maximum they are in the gigabytes\nwhile in data warehouses they are in the\nterabytes functionality for databases\nit's high availability and performance\nwith data warehouse it's high\nflexibility and user autonomy because we\nare going to be performing a lot of\nanalysis with the data warehouse moving\non to question number two what is the\npurpose of cluster analysis and data\nwarehousing now one of the purposes of\ncluster analysis is to achieve\nscalability so regardless of the\nquantity of data we are able to analyze\nit ability to deal with different kinds\nof attributes so no matter the data type\nof the attributes present in the data\nset we are able to deal with it\ndiscovery of clusters with attribute\nshape high dimensionality which means we\ncan have multiple dimensions\nmore than 2d to be precise ability to\ndeal with noise so any\ninconsistencies in the data we are able\nto deal with that and interpretability\nmoving on to question number three what\nis the difference between agglomerative\nand divisive hierarchical clustering so\nagglomerative hierarchical constraining\nmethod allows clusters to be read from\nbottom to top so that the program always\nreads from the sub component first and\nthen moves to the parent in an upward\ndirection whereas divisive hierarchical\nclustering uses top to bottom approach\nin which the parent is visited first and\nthen the child and\nagglomerative hierarchical method it\nconsists of objects in which each object\ncreates its own clusters and these\nclusters are grouped together to form a\nlarger cluster it is also the process of\ncontinuous merging until all the single\nclusters are merged together into a\ncomplete big cluster that will consist\nof the objects of the chart clusters\nhowever in divisive clustering the\nparent cluster is divided into smaller\nclusters and it keeps on dividing until\neach cluster has a singular object to\nrepresent moving on to question number\nfour explain the chameleon method used\nin data warehousing so chameleon is a\nmethodology which is a hierarchical\nclustering algorithm that overcomes the\nlimitations of the existing models and\nmethods in data warehousing this method\noperates on the sparse graph having\nnodes that represent data items and\nedges which represent the weights of the\ndata items this representation allows\nlarge data sets to be created and\noperated successfully the method finds\nthe clusters that are used in the data\nset using the two-phase algorithm the\nfirst phase consists of the graph\npartitioning that allows the clustering\nof the data items into larger number of\nsubclusters the second phase on the\nother hand uses an agglomerative\nhierarchical clustering algorithm to\nsearch for the clusters that are genuine\nand can be combined together with the\nsub clusters that are produced moving on\nto question number five what is virtual\ndata warehousing now a virtual data\nwarehouse provides a collective view of\nthe completed data in that warehouse a\nvirtual data warehouse has no historic\ndata it can be considered as a logical\ndata model of the given metadata the\nvirtual data warehousing is the de facto\ninformation system strategy for\nsupporting analytical decision making it\nis one of the best ways for translating\nraw data and presenting it in the form\nthat can be used by decision makers it\nprovides a semantic map which allows the\nend user as well\nfor viewing as the data is virtualized\nmoving on to question number six now we\nneed to understand what active data\nwarehousing is an active data warehouse\nrepresents a single state of a business\nactive data warehousing considers the\nanalytical perspectives of customers and\nsuppliers just a quick info guys\nintellipaat provides business\nintelligence masters program in\npartnership with microsoft\nthe course link of which is given in the\ndescription below\nnow let's continue with the session it\nhelps deliver the updated data through\nreports\nnow this is the most common form of data\nwarehousing which is used for businesses\nlarge businesses and specific which deal\nin the industry of e-commerce or\ncommerce\na form of repository of captured\ntransactional data is known as the\nactive data warehousing using this\nconcept trends and patterns are found to\nbe used for future decision making so\nbased on the analytical results that you\nget from the data warehouse you can\nperform further business decisions\nactive data warehouse as a feature which\ncan integrate the changes of data while\nscheduled cycles refresh enterprises\nutilize an active data warehouse and\ndrawing the company's image in a very\nstatistical manner so everything\nessentially you get a combination of all\nthe data that is present in various data\nsources you combine it all together and\nthen you perform some analytics on it to\nget insights for further business\ndecisions\nwhat is a snapshot with reference to\ndata warehouse now snapshots are pretty\ncommon in software especially in\ndatabases so essentially it is what the\nname suggests snapshot refers to the\ncomplete visualization of data at the\ntime of extraction it occupies less\nspace and can be used to backup and\nrestore data quickly so you essentially\nsnapshot a data warehouse when you want\nto create a backup of it so using the\ndata warehouse catalog you're creating a\nreport and the report will be generated\nas shown as soon as you disconnect from\nthe data warehouse\nnumber eight what is xmla\nxmla is xml for analysis which can be\nused and considered as a standard for\naccessing data in the olap method data\nmining or data sources on the internet\nit is the simple object access protocol\nxmla uses discover and execute methods\ndiscover fetch's information from the\ninternet while the execute allows the\napplication to execute against the data\nsources that are present xmla is an\nindustry standard for accessing data in\nanalytical systems such as olap it is\nbased on xml soap and http xmla\nspecifies mdxml as a query language in\nxmla 1.1 version the only construct is\nthe md xml in an mdx statement enclosed\nin the tag moving on to question number\nnine what is ods now ods is the database\nwhich is designed to integrate data from\nmultiple sources for additional\noperations of the data the full form of\nods is operational data source so unlike\nthe master data source that you have the\ndata is not sent back to the operational\nsystems it may be\npassed for further operations and to the\ndata warehouse for reporting in ods data\ncan be scrubbed resolved for redundancy\nand checked for compliance with the\ncorresponding business rules so whatever\ndata you have in order to filter it out\nbasically to see if there is some data\nredundancy in the data it is checked and\nit also sees whether the data is\ncompliant with the organization's\nbusiness rules this data can be used for\nintegrating disparate data from multiple\nsources so that business operations\nanalysis and reporting can be carried\nout this is the place where most of the\ndata used in the current operation is\nhoused before it's transferred to the\ndata warehouse for longer term and for\nstorage and archiving and ods is\ndesigned for relatively simple queries\non small amounts of data such as finding\nthe status of a customer order so you\nhave a data warehouse which is present\nto you say for instance for a particular\ncustomer ticket you need to find\ninformation with regards to a customer\nthen you can use the ods rather than the\ncomplex queries on large amounts of data\ntypical of the data warehouse so you're\nnot going to be running it on the\nentirety of the data which will take a\nlot of time to find a single customer's\ndetails you would rather use ods for\nthat matter and ods is similar to the\nshort-term memory where it only stores\nvery recent information on the contrary\nthe data warehouse is more like a\nlong-term memory storing relatively\npermanent information because you're\ncreating a data warehouse for a\npermanent basis what is the level of\ngranularity of a fact table a fact table\nis usually designed at a low level of\ngranularity this means that we need to\nfind the lowest of information that can\nbe stored in a fact table for example\nemployee performance is a very high\nlevel of granularity while employee\nperformance daily and employee\nperformance weekly can be considered as\nlow levels of granularity because they\nare much more frequently recorded data\nthe granularity is the lowest level of\ninformation stored in the fact table the\ndepth of the data level is known as\ngranularity in date dimension the level\ncould be year month quarter period week\nand the day of granularity so the day\nbeing the lowest level the year being\nthe highest level the process consists\nof the following two steps determining\nthe dimensions that are to be included\nand determining the location to find the\nhierarchy of each dimension of that\ninformation the above factors of\ndetermination will be resent as per the\nrequirements moving on to question\nnumber 11 what is the difference between\nview and materialized view because the\nname suggests that now view simply means\nthe raid table data representation that\nis provided with a view to access the\ndata from its table that does not occupy\nspace and changes get affected in the\ncorresponding tables while in\nmaterialized view pre-calculated data\npersists it has physical data space\noccupation in the memory and changes\nwill not get affected in the\ncorresponding tables\nwhat is junk dimension in scenarios\nwhere data may not be appropriate to\nstore in the schema the data or\nattributes can be stored in a junk\ndimension the nature of the junk in this\nparticular dimension is usually boolean\nor flag values a single dimension is\nformed by lumping a small number of\ndimensions this is called a junk\ndimension adjunct dimension has\nunrelated attributes the process of\ngrouping these random flags and text\nattributes in a dimension by\ntransmitting them to a distinguished sub\ndimension is related to junk dimension\nso essentially any data that need not be\nstored in the data warehouse because it\nis unnecessary is stored in the junk\ndimension moving on to question number\n13 what are the different types of scds\nused in data warehousing scds are also\nshort for slowly changing dimensions\nthey are the dimensions in which the\ndata changes slowly rather than changing\nregularly on a timely basis there are\nthree types of stds the first is scd1 it\nis a record that is used to replace the\noriginal record even when there is only\none record existing in the database the\ncurrent data will be replaced and the\nnew data will take its place scd2 it is\nthe new record file that is added to the\ndimension table this record exists in\nthe database with the current data and\nthe previous data that is stored in the\nhistory scd3 this uses the original data\nthat is modified to the new data this\nconsists of two records one record that\nexists in the database and the another\nrecord which will replace the old\ndatabase record with this new\ninformation moving on to question number\n14 which one is faster multi-dimensional\nolap or relational olap now\nmulti-dimensional olap also known as\nmolap is faster than relational olap\nbecause of the following reasons in\nmolap the data is stored in a\nmulti-dimensional queue the storage is\nnot in the relational database but in\nproprietary formats one for example is\npower olap which is the of the\nextension.olp molab products are\ncompatible with excel which make data\ninteractions easy to use even for\nnon-technical members of a team enroll\nour products access a relational\ndatabase by using sql which is the\nstandard language that is used to define\nand manipulate data in an rdbms so since\nrollapp is not accessible by simple\nprograms like excel you need to know sql\nin order to be able to query that data\nthat is why it's not as compatible with\npeople who don't have that much\ntechnical knowledge subsequent\nprocessing may occur in the rdbms or\nwithin a mid-tier server which accepts\nrequests from clients translates them\ninto sql statements and passes them to\nthe rdbms so due to multi-dimensional\nolap using a proprietary file format it\nis faster than relational olap moving on\nto question number 15 what is hybrid scd\nnow we discussed uh std one two and\nthree earlier on hybrid stds are\ncombinations of both scd1 and scd2 uh it\nmay happen that in a table some columns\nare important and we need to track\nchanges for them that is capture the\nhistorical data for them whereas in some\ncolumns even if the data changes we do\nnot need to bother for such tables we\nimplement hybrid scds wherein some\ncolumns are of type 1 and some are of\ntype 2. so basically we are not applying\na blanket rule on the entire table we\ncan customize on which particular\ncolumns we want to apply what rule\nmoving on to question number 16 why do\nwe overwrite the execute method in\nstruts so as part of the start framework\nwe can develop the action servlets and\nthe action form servlets and other\nservlet classes in the action form class\nwe can develop validate method this\nmethod can return action errors object\nand in this method we can write the\nvalidation code as well if this method\nreturns null or action errors with the\nsize of 0 the web container will call\nexecute as part of the action class if\nit returns size greater than 0 it will\ncall the execute method it will rather\nexecute the jsp servlet or the html file\nas the value for the input attribute is\npart of the attribute in the\nstrutsconfig.xml file question number 17\nwhat is vldb so vldb stands for very\nlarge database and it is a database that\ncontains an extremely large number of\ntuples or rows or occupies an extremely\nlarge physical file system storage one\nterabyte database would normally be\nconsidered as vldb question number 18\nhow do you load the time dimension so\ntime dimensions are usually loaded by a\nprogram that loops through all possible\ndates appearing in the data\nit is not unusual for 100 years to be\nrepresented in a time dimension with one\nrow per day\nquestion number 19 what are conformed\ndimensions so conform dimensions are the\ndimensions which can be used across\nmultiple data marts in combination with\nmultiple fact tables a conform dimension\nis a dimension that has exactly the same\nmeaning and contents when being referred\nfrom different fact tables it can refer\nto multiple tables in multiple data\nmarts within the same organization\nitself\nquestion number 20. what is the main\ndifference between nmon and kimbel\nphilosophies of data warehousing so\nthese are two philosophies that we have\nin data warehousing so in the gimbal\nphilosophy data warehousing is viewed as\na constituency of data mods so data mods\nare focused on delivering business\nobjectives for departments in an\norganization and the data warehouse is a\nconfirmed dimension of the data marts\nhence a unified view of the enterprise\ncan be obtained from the dimension\nmodeling on a local departmental level\nand in the inman philosophy\nwe can create a data warehouse on a\nsubject by subject area basis hence the\ndevelopment of the data warehouse can\nstart with the data from the online\nstore other subject areas can be added\nto the data warehouse as their need\narises point of sale or pos data can be\nadded later if management decides that\nit is required and\nif we can look at it on a sort of\nalgorithmic basis in the gimbal\nphilosophy we first go with data marts\nand then we combine it and we get our\ndata warehouse while with inman\nphilosophy we first create our data\nwarehouse and then we create our data\nmarts question number 21 what is the\ndifference between a data warehouse and\na data mart so we understood both of the\nphilosophies in the previous slide let\nus now understand the actual difference\nbetween a data warehouse and a data mart\na data warehouse is a set of data\nisolated from operational systems so it\nis basically away from the database\nitself it is a view of the database this\nhelps an organization deal with its\ndecision making process a data mart is a\nsubset of a data warehouse that is\ngeared to a particular business line\ndata mods provide the stock of condensed\ndata collected in the organization for\nresearch on a particular field or entity\nso this is basically stating that the\ndata warehouse contains a whole variety\nof information while a data mart is just\na subset of that information based on a\nparticular business line or model so\nbasically say you have a data warehouse\nthat is based on customer and sales data\nyou can create a data mart that is\npurely based on transactional data with\nthe combination of those two data lines\ninstead of getting the entirety of the\ncustomer and sales data you're just\ngetting the data that is relevant to\nyour transactional data set the second\ndifference is a data warehouse typically\nhas a size greater than 100 gigabytes\nwhile the size of a data want is less\nthan 100 gigabytes due to the disparity\nin scope the design and utility of data\nmarts are comparatively simpler so\nnaturally since data marts are subsets\nof data warehouses their size is less as\nwell\nquestion number 22 explain the etl\ncycles three layer architecture now as\nwe all know etl stands for extraction\ntransformation and loading so there are\nthree phases involved in it so the first\nis the staging layer and then we have\nthe data integration layer and then we\nhave the access layer so these are the\nthree layers that are involved for the\nthree specific phases in the atl cycle\nso in the staging layer it is used for\nthe data extraction from various data\nstructures of the source in the data\nintegration layer data from the staging\nlayer is transformed and transferred to\nthe database using the integration layer\nthe data is arranged in hierarchical\ngroups often referred to as dimensions\nfacts or aggregates in a data\nwarehousing system the combination of\nfacts and dimension tables is called a\nschema so basically once you have the\ndata loaded once you have the data\nextracted in the staging layer you're\nbasically transforming it in the data\nintegration layer and finally you have\nthe access layer where the data is\naccessed and can be loaded for further\nanalytics question number 23 what does\ndata purging mean so data purging the\nname is quite straightforward it is the\nprocess involving methods that can erase\ndata permanently from the storage\nseveral techniques and strategies can be\nused for data purging the process of\ndata forging often contrasts with data\ndeletion so they are not the same the\nleading data is more on a temporary\nbasis while data purging permanently\nremoves the data this in turn frees up\nmore storage and memory space which can\nbe utilized for other purposes the\npurging process allows us to archive\ndata even if it is permanently removed\nfrom the main source giving us an option\nto recover that data in case we purge it\nthe deleting process also permanently\nremoves the data but does not\nnecessarily involve keeping a backup it\ngenerally involves\ninsignificant amounts of data question\nnumber 24 what are the five main testing\nphases of a project so the etl test is\nperformed in five stages which are the\nfollowing the identification of data\nsources and requirements first you will\nidentify which data sources you want for\nyour data warehouse and what is the\nrequirement of the data warehouse and\nthe analytical requirements that your\norganization needs the acquisition of\ndata naturally after identifying the\ndata source you will acquire that data\nimplementing business logic and\ndimensional modeling on that data\nbuilding and publishing that data and\nthe reports that you'll create out of\nthe analytics that you perform\nand finally question number 25 what do\nyou mean by the slice action how many\nslice operated dimensions are used so a\nslice operation is the filtration\nprocess in a data warehouse it selects a\nspecific dimension from a given cube and\nprovides a new sub cube in the slice\noperation only a single dimension is\nused so basically out of a\nmulti-dimensional data warehouse if you\nneed a very specific dimension that you\nneed for further analytics or processing\nthen you will use the slice operation in\nthat data warehouse just a quick info\nguys\nintellipaat provides business\nintelligence masters program in\npartnership with microsoft\nthe course link of which is given in the\ndescription below\nyou\n",
  "words": [
    "music",
    "hello",
    "everyone",
    "welcome",
    "live",
    "session",
    "data",
    "warehouse",
    "intellipaat",
    "begin",
    "session",
    "make",
    "sure",
    "subscribe",
    "channel",
    "also",
    "hit",
    "bell",
    "icon",
    "never",
    "miss",
    "update",
    "us",
    "let",
    "see",
    "agenda",
    "day",
    "firstly",
    "begin",
    "introduction",
    "data",
    "warehouse",
    "explaining",
    "data",
    "warehouse",
    "types",
    "data",
    "warehouse",
    "also",
    "tell",
    "popular",
    "data",
    "warehouse",
    "tools",
    "demo",
    "show",
    "data",
    "flows",
    "data",
    "warehouse",
    "move",
    "introduction",
    "data",
    "mart",
    "followed",
    "data",
    "modeling",
    "finally",
    "covered",
    "data",
    "warehouse",
    "interview",
    "questions",
    "answers",
    "guys",
    "agenda",
    "let",
    "begin",
    "session",
    "need",
    "data",
    "warehouse",
    "goal",
    "every",
    "business",
    "make",
    "better",
    "decisions",
    "business",
    "intelligence",
    "comes",
    "business",
    "intelligence",
    "turns",
    "massive",
    "amount",
    "data",
    "operational",
    "systems",
    "proper",
    "format",
    "easy",
    "understand",
    "data",
    "could",
    "analyzed",
    "timely",
    "accurately",
    "obtain",
    "actionable",
    "insights",
    "business",
    "also",
    "bring",
    "effectiveness",
    "instance",
    "industry",
    "maintain",
    "data",
    "products",
    "customer",
    "login",
    "credentials",
    "check",
    "details",
    "technical",
    "information",
    "information",
    "would",
    "available",
    "different",
    "servers",
    "need",
    "system",
    "combine",
    "information",
    "companies",
    "extract",
    "analyze",
    "data",
    "integrated",
    "manner",
    "exactly",
    "requirement",
    "data",
    "warehouse",
    "comes",
    "picture",
    "let",
    "understand",
    "exactly",
    "data",
    "warehouse",
    "concept",
    "data",
    "warehousing",
    "pretty",
    "simple",
    "data",
    "extracted",
    "periodic",
    "basis",
    "source",
    "systems",
    "could",
    "applications",
    "erp",
    "crm",
    "sales",
    "finance",
    "data",
    "systems",
    "moved",
    "dedicated",
    "server",
    "contains",
    "data",
    "warehouse",
    "data",
    "moved",
    "cleansed",
    "formatted",
    "summarized",
    "supplemented",
    "data",
    "many",
    "sources",
    "resulting",
    "data",
    "warehouse",
    "become",
    "main",
    "source",
    "information",
    "report",
    "generation",
    "analysis",
    "via",
    "reporting",
    "tools",
    "used",
    "things",
    "ad",
    "hoc",
    "queries",
    "dashboards",
    "sometimes",
    "noticed",
    "many",
    "companies",
    "say",
    "data",
    "warehouse",
    "really",
    "true",
    "data",
    "warehouse",
    "rather",
    "actually",
    "dumping",
    "ground",
    "tables",
    "copied",
    "source",
    "systems",
    "little",
    "modification",
    "company",
    "successful",
    "future",
    "must",
    "make",
    "good",
    "decisions",
    "make",
    "good",
    "decisions",
    "require",
    "relevant",
    "data",
    "taken",
    "consideration",
    "best",
    "source",
    "data",
    "data",
    "warehouse",
    "data",
    "warehouse",
    "specially",
    "designed",
    "perform",
    "business",
    "intelligence",
    "activities",
    "enables",
    "professionals",
    "employees",
    "comprehend",
    "improve",
    "organization",
    "overall",
    "performance",
    "two",
    "major",
    "functions",
    "data",
    "warehouse",
    "maintain",
    "past",
    "present",
    "records",
    "also",
    "help",
    "organizations",
    "take",
    "effective",
    "business",
    "decisions",
    "precise",
    "data",
    "analysis",
    "additionally",
    "data",
    "warehouse",
    "environment",
    "also",
    "supports",
    "etl",
    "data",
    "mining",
    "capabilities",
    "statistical",
    "analysis",
    "reporting",
    "olep",
    "tools",
    "help",
    "interactive",
    "efficient",
    "data",
    "analysis",
    "view",
    "look",
    "key",
    "features",
    "data",
    "warehousing",
    "number",
    "one",
    "list",
    "subject",
    "oriented",
    "data",
    "warehousing",
    "gives",
    "option",
    "analyze",
    "particular",
    "subject",
    "area",
    "thus",
    "subject",
    "matter",
    "expert",
    "answer",
    "relevant",
    "questions",
    "data",
    "example",
    "particular",
    "subject",
    "sales",
    "sales",
    "executive",
    "online",
    "website",
    "develop",
    "database",
    "including",
    "data",
    "fields",
    "wants",
    "query",
    "salesperson",
    "extract",
    "data",
    "writing",
    "different",
    "queries",
    "like",
    "many",
    "customers",
    "purchase",
    "database",
    "architect",
    "course",
    "today",
    "next",
    "list",
    "integrated",
    "data",
    "warehouse",
    "supports",
    "consistency",
    "arranging",
    "data",
    "diverse",
    "sources",
    "uniform",
    "rational",
    "format",
    "allow",
    "conflicts",
    "field",
    "names",
    "units",
    "measure",
    "accomplished",
    "studiness",
    "refer",
    "integrated",
    "warehouse",
    "third",
    "key",
    "feature",
    "name",
    "suggests",
    "data",
    "warehouse",
    "refers",
    "data",
    "change",
    "created",
    "important",
    "relevant",
    "feature",
    "since",
    "aim",
    "developing",
    "warehouse",
    "evaluate",
    "occurred",
    "fourth",
    "key",
    "feature",
    "time",
    "variant",
    "data",
    "collected",
    "data",
    "warehouse",
    "identified",
    "particular",
    "time",
    "period",
    "data",
    "provides",
    "information",
    "historical",
    "point",
    "view",
    "example",
    "one",
    "retrieve",
    "data",
    "past",
    "3",
    "months",
    "6",
    "months",
    "12",
    "months",
    "even",
    "data",
    "data",
    "warehouse",
    "look",
    "frequently",
    "used",
    "terms",
    "data",
    "warehousing",
    "start",
    "metadata",
    "simple",
    "terms",
    "metadata",
    "provides",
    "answers",
    "data",
    "related",
    "questions",
    "data",
    "warehouse",
    "referred",
    "data",
    "data",
    "gives",
    "users",
    "detailed",
    "explanation",
    "syntax",
    "semantics",
    "describing",
    "relevant",
    "attributes",
    "data",
    "data",
    "warehouse",
    "instance",
    "number",
    "tables",
    "database",
    "referred",
    "metadata",
    "metadata",
    "also",
    "commonly",
    "known",
    "table",
    "contents",
    "data",
    "data",
    "catalog",
    "data",
    "directory",
    "data",
    "warehouse",
    "roadmap",
    "nerve",
    "center",
    "help",
    "metadata",
    "developers",
    "database",
    "administrators",
    "create",
    "ad",
    "hoc",
    "reports",
    "prime",
    "significance",
    "era",
    "big",
    "data",
    "fact",
    "without",
    "meta",
    "data",
    "data",
    "warehouse",
    "considered",
    "futile",
    "would",
    "big",
    "box",
    "without",
    "valuable",
    "meaningful",
    "information",
    "olap",
    "expands",
    "online",
    "analytical",
    "processing",
    "name",
    "suggests",
    "olap",
    "computer",
    "processing",
    "allows",
    "users",
    "interactively",
    "analyze",
    "data",
    "multiple",
    "prospects",
    "various",
    "techniques",
    "model",
    "olap",
    "constitute",
    "encapsulate",
    "large",
    "volumes",
    "data",
    "rapid",
    "evaluation",
    "using",
    "online",
    "analysis",
    "tools",
    "environment",
    "attribute",
    "data",
    "considered",
    "separate",
    "dimension",
    "olap",
    "establish",
    "intersection",
    "dimensions",
    "olap",
    "cube",
    "typically",
    "similar",
    "shape",
    "cube",
    "representation",
    "data",
    "optimized",
    "data",
    "warehouse",
    "array",
    "metrics",
    "facts",
    "dimensions",
    "wherein",
    "fact",
    "table",
    "contains",
    "facts",
    "measurements",
    "dimension",
    "table",
    "contains",
    "attributes",
    "dimensions",
    "fact",
    "useful",
    "businesses",
    "require",
    "presenting",
    "spreadsheet",
    "containing",
    "two",
    "three",
    "dimensions",
    "instance",
    "image",
    "data",
    "summarized",
    "respect",
    "time",
    "department",
    "store",
    "value",
    "dimension",
    "dimensional",
    "model",
    "already",
    "know",
    "dimension",
    "refers",
    "single",
    "attribute",
    "data",
    "type",
    "instance",
    "year",
    "month",
    "minute",
    "second",
    "divisions",
    "time",
    "attribute",
    "thus",
    "data",
    "warehouse",
    "supports",
    "dimensional",
    "model",
    "enables",
    "users",
    "store",
    "analyze",
    "information",
    "dimension",
    "unlike",
    "entity",
    "relationship",
    "model",
    "dimensional",
    "model",
    "involve",
    "relational",
    "database",
    "every",
    "time",
    "type",
    "modeling",
    "technique",
    "useful",
    "end",
    "user",
    "queries",
    "data",
    "warehouse",
    "extract",
    "transform",
    "load",
    "refers",
    "movement",
    "data",
    "one",
    "location",
    "another",
    "next",
    "drill",
    "drill",
    "drill",
    "across",
    "drill",
    "drill",
    "across",
    "allows",
    "data",
    "analysis",
    "across",
    "multiple",
    "dimensions",
    "drill",
    "allows",
    "data",
    "analysis",
    "parent",
    "attribute",
    "drill",
    "allows",
    "data",
    "analysis",
    "child",
    "attribute",
    "finally",
    "drill",
    "helps",
    "analyzing",
    "data",
    "olap",
    "cube",
    "relational",
    "database",
    "data",
    "marts",
    "data",
    "mart",
    "subsection",
    "data",
    "warehouse",
    "aligned",
    "specific",
    "business",
    "perspective",
    "data",
    "warehouse",
    "stores",
    "detailed",
    "information",
    "multiple",
    "subjects",
    "latter",
    "focuses",
    "storing",
    "data",
    "one",
    "subject",
    "data",
    "mart",
    "concentrates",
    "storing",
    "summarized",
    "form",
    "complete",
    "data",
    "integrating",
    "information",
    "within",
    "specific",
    "set",
    "source",
    "systems",
    "let",
    "move",
    "discuss",
    "major",
    "differences",
    "olap",
    "oltp",
    "generally",
    "people",
    "get",
    "confused",
    "olap",
    "oltp",
    "two",
    "different",
    "types",
    "data",
    "analysis",
    "techniques",
    "distinct",
    "many",
    "ways",
    "screen",
    "see",
    "collaboration",
    "oltp",
    "olap",
    "workflow",
    "architecture",
    "depict",
    "importance",
    "application",
    "linked",
    "first",
    "difference",
    "name",
    "oltp",
    "stands",
    "online",
    "transaction",
    "processing",
    "olap",
    "stands",
    "online",
    "analytical",
    "processing",
    "main",
    "difference",
    "oltp",
    "focuses",
    "small",
    "transactions",
    "faster",
    "query",
    "process",
    "olap",
    "hand",
    "often",
    "involves",
    "complex",
    "queries",
    "involving",
    "aggregations",
    "another",
    "difference",
    "data",
    "oltp",
    "mostly",
    "operational",
    "olap",
    "consolidated",
    "data",
    "comes",
    "various",
    "oltp",
    "databases",
    "oltp",
    "system",
    "shows",
    "image",
    "activities",
    "going",
    "business",
    "environment",
    "olap",
    "system",
    "shows",
    "different",
    "views",
    "individual",
    "events",
    "understood",
    "concept",
    "data",
    "warehouse",
    "time",
    "gain",
    "insights",
    "architecture",
    "data",
    "warehouse",
    "two",
    "main",
    "components",
    "building",
    "data",
    "warehouse",
    "interface",
    "designed",
    "operational",
    "systems",
    "individual",
    "data",
    "warehouse",
    "design",
    "thus",
    "construction",
    "data",
    "warehouse",
    "depends",
    "business",
    "requirements",
    "one",
    "development",
    "stage",
    "depends",
    "results",
    "previously",
    "developed",
    "fees",
    "structure",
    "data",
    "warehouse",
    "understood",
    "better",
    "layered",
    "model",
    "lists",
    "main",
    "components",
    "data",
    "whereas",
    "architecture",
    "typical",
    "architecture",
    "data",
    "warehouse",
    "consisting",
    "different",
    "important",
    "components",
    "see",
    "nothing",
    "movement",
    "data",
    "source",
    "staging",
    "area",
    "finally",
    "confirmed",
    "data",
    "merged",
    "etl",
    "first",
    "layer",
    "data",
    "source",
    "layer",
    "refers",
    "various",
    "data",
    "stores",
    "multiple",
    "formats",
    "like",
    "relational",
    "database",
    "excel",
    "file",
    "others",
    "stores",
    "consist",
    "different",
    "types",
    "data",
    "business",
    "data",
    "web",
    "server",
    "logs",
    "internet",
    "research",
    "data",
    "next",
    "step",
    "extract",
    "data",
    "data",
    "sources",
    "extracted",
    "put",
    "warehouse",
    "staging",
    "area",
    "extracted",
    "data",
    "minimally",
    "cleaned",
    "major",
    "transformations",
    "comes",
    "staging",
    "area",
    "divided",
    "two",
    "parts",
    "data",
    "cleaning",
    "data",
    "ordering",
    "name",
    "suggests",
    "layer",
    "takes",
    "care",
    "data",
    "processing",
    "methods",
    "thus",
    "removing",
    "data",
    "redundancy",
    "filtering",
    "bad",
    "data",
    "proper",
    "integration",
    "data",
    "overall",
    "stage",
    "allows",
    "application",
    "business",
    "intelligent",
    "logic",
    "transform",
    "transactional",
    "data",
    "analytical",
    "data",
    "indeed",
    "time",
    "consuming",
    "phase",
    "whole",
    "data",
    "warehouse",
    "architecture",
    "chief",
    "process",
    "data",
    "source",
    "presentation",
    "layer",
    "data",
    "warehouse",
    "finally",
    "data",
    "presentation",
    "layer",
    "target",
    "data",
    "warehouse",
    "place",
    "successfully",
    "cleaned",
    "integrated",
    "transformed",
    "data",
    "stored",
    "environment",
    "data",
    "available",
    "analysis",
    "query",
    "purposes",
    "information",
    "also",
    "available",
    "end",
    "users",
    "form",
    "data",
    "mods",
    "data",
    "accessed",
    "various",
    "business",
    "intelligence",
    "tools",
    "like",
    "tableau",
    "presented",
    "multiple",
    "formats",
    "like",
    "tables",
    "graphs",
    "reports",
    "important",
    "note",
    "data",
    "warehouse",
    "supports",
    "holds",
    "persistent",
    "data",
    "stored",
    "longer",
    "time",
    "also",
    "temporary",
    "data",
    "major",
    "purpose",
    "data",
    "warehouse",
    "attainment",
    "cleansed",
    "integrated",
    "properly",
    "aligned",
    "data",
    "easy",
    "analyze",
    "present",
    "clients",
    "customers",
    "several",
    "businesses",
    "understand",
    "purpose",
    "data",
    "warehouse",
    "used",
    "various",
    "sectors",
    "airline",
    "industry",
    "used",
    "operation",
    "purpose",
    "like",
    "crew",
    "assignment",
    "analysis",
    "route",
    "profitability",
    "frequent",
    "flyer",
    "program",
    "promotions",
    "banking",
    "sector",
    "widely",
    "used",
    "manage",
    "resources",
    "available",
    "desk",
    "banks",
    "also",
    "use",
    "data",
    "warehousing",
    "market",
    "research",
    "performance",
    "analysis",
    "product",
    "operations",
    "healthcare",
    "also",
    "uses",
    "data",
    "warehouse",
    "strategize",
    "predict",
    "outcomes",
    "generate",
    "patients",
    "treatment",
    "reports",
    "medical",
    "aid",
    "services",
    "public",
    "sector",
    "data",
    "warehouse",
    "used",
    "intelligence",
    "gathering",
    "helps",
    "government",
    "agencies",
    "maintain",
    "analyze",
    "tax",
    "records",
    "health",
    "policy",
    "records",
    "every",
    "individual",
    "investment",
    "insurance",
    "sector",
    "warehouses",
    "primarily",
    "used",
    "analyze",
    "data",
    "patterns",
    "customer",
    "trends",
    "track",
    "market",
    "movements",
    "retail",
    "chains",
    "data",
    "warehouse",
    "widely",
    "used",
    "distribution",
    "marketing",
    "telecommunication",
    "data",
    "warehouse",
    "used",
    "product",
    "promotions",
    "sales",
    "decisions",
    "make",
    "distribution",
    "decisions",
    "hospitality",
    "industry",
    "utilizes",
    "warehouse",
    "services",
    "design",
    "well",
    "estimate",
    "advertising",
    "promotion",
    "campaigns",
    "want",
    "target",
    "clients",
    "based",
    "feedback",
    "travel",
    "patterns",
    "many",
    "data",
    "warehousing",
    "tools",
    "available",
    "market",
    "let",
    "look",
    "prominent",
    "ones",
    "oracle",
    "industry",
    "leading",
    "database",
    "offers",
    "wide",
    "range",
    "data",
    "warehouse",
    "solutions",
    "cloud",
    "helps",
    "optimize",
    "customer",
    "experience",
    "increasing",
    "operational",
    "efficiency",
    "amazon",
    "redshift",
    "another",
    "data",
    "warehouse",
    "tool",
    "simple",
    "tool",
    "analyze",
    "types",
    "data",
    "using",
    "standard",
    "sql",
    "existing",
    "bi",
    "tools",
    "also",
    "allows",
    "running",
    "complex",
    "queries",
    "beta",
    "bytes",
    "structured",
    "data",
    "using",
    "technique",
    "query",
    "optimization",
    "mark",
    "logic",
    "another",
    "useful",
    "data",
    "warehousing",
    "solution",
    "makes",
    "data",
    "integration",
    "easier",
    "faster",
    "using",
    "array",
    "enterprise",
    "features",
    "tool",
    "helps",
    "perform",
    "complex",
    "search",
    "operations",
    "helps",
    "querying",
    "different",
    "types",
    "data",
    "like",
    "documents",
    "relationships",
    "metadata",
    "lot",
    "opportunities",
    "market",
    "build",
    "career",
    "data",
    "warehousing",
    "candidates",
    "interested",
    "become",
    "data",
    "warehouse",
    "professionals",
    "look",
    "job",
    "opportunities",
    "sectors",
    "like",
    "information",
    "technology",
    "financial",
    "services",
    "health",
    "care",
    "retail",
    "according",
    "salary",
    "estimates",
    "natural",
    "salary",
    "data",
    "released",
    "b",
    "scale",
    "annual",
    "compensation",
    "data",
    "warehouse",
    "professional",
    "ranges",
    "68",
    "thousand",
    "dollars",
    "149",
    "000",
    "median",
    "salary",
    "hundred",
    "thousand",
    "dollars",
    "per",
    "annum",
    "start",
    "data",
    "warehouse",
    "let",
    "say",
    "example",
    "atm",
    "machine",
    "okay",
    "one",
    "database",
    "okay",
    "atm",
    "machine",
    "connected",
    "database",
    "atm",
    "machine",
    "account",
    "bank",
    "okay",
    "online",
    "transactions",
    "right",
    "log",
    "internet",
    "banking",
    "also",
    "online",
    "transactions",
    "atm",
    "machine",
    "application",
    "banking",
    "application",
    "transactions",
    "transaction",
    "data",
    "going",
    "inserted",
    "database",
    "okay",
    "whether",
    "ms",
    "sql",
    "database",
    "different",
    "types",
    "databases",
    "market",
    "right",
    "ms",
    "sql",
    "oracle",
    "sybase",
    "db2",
    "teradata",
    "like",
    "different",
    "types",
    "databases",
    "let",
    "say",
    "database",
    "database",
    "tables",
    "okay",
    "schemas",
    "inside",
    "schemas",
    "tables",
    "like",
    "whatever",
    "transactions",
    "made",
    "user",
    "transaction",
    "data",
    "first",
    "going",
    "inserted",
    "database",
    "okay",
    "let",
    "say",
    "user",
    "made",
    "first",
    "transaction",
    "whatever",
    "first",
    "transaction",
    "made",
    "first",
    "transaction",
    "data",
    "going",
    "inserted",
    "database",
    "table",
    "right",
    "transaction",
    "means",
    "withdrawing",
    "depositing",
    "money",
    "atm",
    "machine",
    "first",
    "transaction",
    "data",
    "going",
    "inserted",
    "database",
    "one",
    "hour",
    "let",
    "say",
    "made",
    "second",
    "transaction",
    "second",
    "transaction",
    "data",
    "also",
    "going",
    "inserted",
    "database",
    "one",
    "hour",
    "made",
    "third",
    "transaction",
    "third",
    "transaction",
    "data",
    "also",
    "going",
    "inserted",
    "database",
    "like",
    "let",
    "say",
    "user",
    "made",
    "around",
    "1000",
    "transactions",
    "day",
    "made",
    "1000",
    "transactions",
    "1000",
    "transaction",
    "data",
    "database",
    "right",
    "okay",
    "user",
    "atm",
    "machine",
    "application",
    "internet",
    "internet",
    "banking",
    "made",
    "around",
    "1000",
    "transactions",
    "day",
    "transaction",
    "data",
    "database",
    "okay",
    "end",
    "day",
    "selected",
    "mini",
    "statement",
    "option",
    "soon",
    "select",
    "mini",
    "statement",
    "option",
    "mini",
    "statement",
    "atm",
    "machine",
    "well",
    "internet",
    "banking",
    "also",
    "mini",
    "statement",
    "option",
    "soon",
    "select",
    "option",
    "going",
    "generate",
    "one",
    "mini",
    "statement",
    "transaction",
    "data",
    "okay",
    "many",
    "statement",
    "transactions",
    "recent",
    "transactions",
    "recent",
    "means",
    "last",
    "five",
    "transactions",
    "last",
    "10",
    "transactions",
    "okay",
    "display",
    "transactions",
    "display",
    "older",
    "transactions",
    "mini",
    "statement",
    "contains",
    "recent",
    "transactions",
    "okay",
    "contains",
    "recent",
    "transactions",
    "older",
    "transactions",
    "okay",
    "know",
    "one",
    "reasons",
    "whichever",
    "database",
    "connected",
    "atm",
    "machine",
    "application",
    "database",
    "designed",
    "maintain",
    "limited",
    "number",
    "transactions",
    "okay",
    "database",
    "designed",
    "maintain",
    "limited",
    "number",
    "transactions",
    "limited",
    "means",
    "let",
    "say",
    "database",
    "designed",
    "maintain",
    "last",
    "10",
    "transactions",
    "okay",
    "soon",
    "user",
    "made",
    "11th",
    "transaction",
    "inserting",
    "11th",
    "record",
    "database",
    "delete",
    "first",
    "record",
    "database",
    "table",
    "insert",
    "11th",
    "record",
    "soon",
    "user",
    "made",
    "12th",
    "transaction",
    "inserting",
    "12th",
    "record",
    "database",
    "table",
    "delete",
    "second",
    "record",
    "insert",
    "12th",
    "record",
    "soon",
    "user",
    "made",
    "13th",
    "transaction",
    "inserting",
    "13th",
    "record",
    "delete",
    "third",
    "record",
    "insert",
    "13th",
    "record",
    "like",
    "database",
    "designed",
    "even",
    "though",
    "user",
    "made",
    "1000",
    "transactions",
    "day",
    "total",
    "many",
    "transactions",
    "database",
    "lost",
    "10",
    "transactions",
    "transactions",
    "database",
    "designed",
    "like",
    "ca",
    "maintain",
    "transaction",
    "data",
    "database",
    "means",
    "suppose",
    "let",
    "say",
    "user",
    "last",
    "one",
    "year",
    "made",
    "one",
    "million",
    "transactions",
    "made",
    "one",
    "million",
    "transactions",
    "assume",
    "inserted",
    "one",
    "million",
    "transaction",
    "database",
    "database",
    "user",
    "made",
    "one",
    "million",
    "transactions",
    "1",
    "million",
    "transactions",
    "inserted",
    "database",
    "okay",
    "inside",
    "database",
    "tables",
    "let",
    "say",
    "transaction",
    "table",
    "inside",
    "transaction",
    "table",
    "transaction",
    "data",
    "one",
    "user",
    "today",
    "selected",
    "balancing",
    "query",
    "option",
    "know",
    "balancing",
    "query",
    "option",
    "right",
    "atm",
    "machine",
    "application",
    "also",
    "internet",
    "banking",
    "also",
    "balancing",
    "query",
    "option",
    "soon",
    "click",
    "option",
    "back",
    "connect",
    "database",
    "top",
    "database",
    "query",
    "execute",
    "right",
    "option",
    "back",
    "connect",
    "database",
    "top",
    "database",
    "select",
    "query",
    "execute",
    "okay",
    "one",
    "user",
    "one",
    "million",
    "transaction",
    "data",
    "since",
    "one",
    "million",
    "transaction",
    "data",
    "one",
    "user",
    "assume",
    "display",
    "balance",
    "select",
    "query",
    "going",
    "execute",
    "top",
    "1",
    "million",
    "transaction",
    "records",
    "okay",
    "user",
    "selected",
    "balancing",
    "query",
    "option",
    "back",
    "connected",
    "database",
    "top",
    "database",
    "select",
    "query",
    "going",
    "execute",
    "display",
    "balance",
    "one",
    "user",
    "1",
    "million",
    "transaction",
    "records",
    "assume",
    "select",
    "query",
    "going",
    "execute",
    "top",
    "1",
    "million",
    "records",
    "display",
    "balance",
    "query",
    "going",
    "execute",
    "top",
    "huge",
    "records",
    "like",
    "take",
    "time",
    "definitely",
    "take",
    "time",
    "assume",
    "took",
    "five",
    "minutes",
    "time",
    "user",
    "selected",
    "balancing",
    "query",
    "option",
    "took",
    "five",
    "minutes",
    "time",
    "okay",
    "took",
    "five",
    "minutes",
    "huge",
    "transaction",
    "data",
    "database",
    "huge",
    "transaction",
    "millions",
    "transaction",
    "records",
    "database",
    "reason",
    "query",
    "took",
    "long",
    "time",
    "display",
    "balance",
    "okay",
    "like",
    "database",
    "maintain",
    "transaction",
    "data",
    "huge",
    "transaction",
    "data",
    "queries",
    "take",
    "long",
    "time",
    "execute",
    "affect",
    "customer",
    "reason",
    "going",
    "insert",
    "transaction",
    "data",
    "database",
    "okay",
    "instead",
    "maintaining",
    "millions",
    "records",
    "database",
    "designed",
    "maintain",
    "last",
    "10",
    "regards",
    "last",
    "10",
    "records",
    "user",
    "transaction",
    "details",
    "today",
    "select",
    "balancing",
    "query",
    "option",
    "last",
    "10",
    "records",
    "query",
    "going",
    "execute",
    "top",
    "last",
    "10",
    "records",
    "within",
    "fraction",
    "seconds",
    "going",
    "display",
    "result",
    "right",
    "whereas",
    "maintain",
    "huge",
    "transaction",
    "data",
    "definitely",
    "queries",
    "take",
    "long",
    "time",
    "execute",
    "affect",
    "customer",
    "reason",
    "maintain",
    "transaction",
    "data",
    "maintain",
    "recent",
    "data",
    "latest",
    "transactions",
    "database",
    "okay",
    "latest",
    "recent",
    "transaction",
    "means",
    "last",
    "five",
    "transactions",
    "last",
    "10",
    "transactions",
    "okay",
    "clear",
    "database",
    "contains",
    "recent",
    "data",
    "okay",
    "recent",
    "data",
    "latest",
    "data",
    "also",
    "called",
    "current",
    "data",
    "maintain",
    "recenter",
    "data",
    "ca",
    "maintain",
    "transaction",
    "data",
    "means",
    "seen",
    "maintain",
    "transaction",
    "data",
    "queries",
    "take",
    "long",
    "time",
    "execute",
    "affect",
    "customer",
    "okay",
    "reason",
    "database",
    "latest",
    "data",
    "okay",
    "fine",
    "let",
    "say",
    "user",
    "requested",
    "last",
    "one",
    "month",
    "bank",
    "statement",
    "last",
    "two",
    "months",
    "bank",
    "statement",
    "last",
    "one",
    "year",
    "bank",
    "statement",
    "last",
    "one",
    "year",
    "data",
    "generate",
    "last",
    "one",
    "year",
    "bank",
    "statement",
    "right",
    "last",
    "one",
    "year",
    "data",
    "generate",
    "last",
    "one",
    "year",
    "bank",
    "statement",
    "get",
    "lost",
    "one",
    "year",
    "data",
    "means",
    "parallelly",
    "database",
    "one",
    "database",
    "soon",
    "user",
    "made",
    "first",
    "transaction",
    "atm",
    "machine",
    "application",
    "first",
    "transaction",
    "data",
    "first",
    "inserted",
    "first",
    "database",
    "first",
    "record",
    "also",
    "going",
    "insert",
    "second",
    "database",
    "soon",
    "user",
    "made",
    "second",
    "transaction",
    "second",
    "transaction",
    "record",
    "first",
    "insert",
    "first",
    "database",
    "second",
    "transaction",
    "record",
    "also",
    "going",
    "insert",
    "second",
    "database",
    "soon",
    "user",
    "made",
    "third",
    "transaction",
    "third",
    "transaction",
    "record",
    "first",
    "inserted",
    "first",
    "database",
    "third",
    "record",
    "also",
    "going",
    "insert",
    "second",
    "database",
    "like",
    "user",
    "made",
    "11th",
    "transaction",
    "know",
    "first",
    "database",
    "designed",
    "maintain",
    "last",
    "10",
    "records",
    "soon",
    "user",
    "made",
    "11th",
    "transaction",
    "inserting",
    "11th",
    "record",
    "delete",
    "first",
    "record",
    "insert",
    "11th",
    "regard",
    "right",
    "whereas",
    "second",
    "database",
    "going",
    "delete",
    "anything",
    "keep",
    "inserting",
    "records",
    "like",
    "okay",
    "user",
    "made",
    "one",
    "million",
    "transactions",
    "first",
    "database",
    "contains",
    "recent",
    "transactions",
    "last",
    "10",
    "transactions",
    "whereas",
    "second",
    "database",
    "contains",
    "1",
    "million",
    "transactions",
    "transaction",
    "data",
    "day",
    "1",
    "till",
    "date",
    "millions",
    "transactions",
    "second",
    "database",
    "whatever",
    "data",
    "second",
    "database",
    "data",
    "called",
    "historical",
    "data",
    "historical",
    "data",
    "means",
    "day",
    "one",
    "till",
    "date",
    "insert",
    "load",
    "transactions",
    "call",
    "historical",
    "transactions",
    "okay",
    "call",
    "first",
    "database",
    "historical",
    "transaction",
    "database",
    "first",
    "database",
    "recent",
    "transactions",
    "second",
    "database",
    "historical",
    "transactions",
    "historical",
    "means",
    "day",
    "one",
    "till",
    "date",
    "transactions",
    "keep",
    "inserting",
    "data",
    "delete",
    "data",
    "database",
    "update",
    "data",
    "second",
    "database",
    "delete",
    "data",
    "update",
    "data",
    "lose",
    "historical",
    "data",
    "right",
    "historical",
    "data",
    "delete",
    "records",
    "come",
    "historical",
    "data",
    "historical",
    "data",
    "second",
    "database",
    "okay",
    "second",
    "database",
    "historical",
    "data",
    "whichever",
    "database",
    "historical",
    "data",
    "like",
    "database",
    "call",
    "data",
    "warehouse",
    "database",
    "okay",
    "ms",
    "sql",
    "also",
    "know",
    "tables",
    "right",
    "database",
    "tables",
    "tables",
    "know",
    "insert",
    "records",
    "day",
    "one",
    "till",
    "date",
    "database",
    "also",
    "called",
    "historical",
    "database",
    "okay",
    "however",
    "first",
    "database",
    "first",
    "database",
    "contains",
    "recent",
    "data",
    "database",
    "call",
    "vltp",
    "database",
    "oltp",
    "means",
    "online",
    "transaction",
    "process",
    "oeltp",
    "database",
    "contains",
    "recenter",
    "data",
    "whereas",
    "data",
    "warehouse",
    "contains",
    "historical",
    "data",
    "mean",
    "historical",
    "data",
    "transactions",
    "insert",
    "day",
    "one",
    "till",
    "date",
    "call",
    "historical",
    "data",
    "right",
    "data",
    "warehouse",
    "contains",
    "historical",
    "data",
    "historical",
    "data",
    "means",
    "transaction",
    "data",
    "warehouse",
    "like",
    "day",
    "one",
    "till",
    "date",
    "transaction",
    "day",
    "okay",
    "see",
    "use",
    "storing",
    "historical",
    "data",
    "data",
    "warehouse",
    "okay",
    "suppose",
    "let",
    "say",
    "one",
    "atm",
    "machine",
    "belongs",
    "bank",
    "another",
    "atm",
    "machine",
    "belongs",
    "bank",
    "okay",
    "let",
    "say",
    "atm",
    "machine",
    "uh",
    "hyd",
    "location",
    "bangalore",
    "location",
    "chennai",
    "location",
    "like",
    "three",
    "atm",
    "machines",
    "belongs",
    "bank",
    "three",
    "different",
    "locations",
    "okay",
    "three",
    "first",
    "connected",
    "oltp",
    "database",
    "oltp",
    "connected",
    "data",
    "warehouse",
    "database",
    "three",
    "databases",
    "connected",
    "oltp",
    "database",
    "oltp",
    "connected",
    "data",
    "warehouse",
    "database",
    "means",
    "data",
    "warehouse",
    "historical",
    "data",
    "three",
    "atm",
    "machines",
    "right",
    "okay",
    "let",
    "say",
    "example",
    "historical",
    "data",
    "like",
    "year",
    "2001",
    "hyd",
    "location",
    "machine",
    "total",
    "120",
    "transactions",
    "okay",
    "blr",
    "location",
    "assume",
    "around",
    "80",
    "transactions",
    "chennai",
    "location",
    "let",
    "say",
    "around",
    "40",
    "transactions",
    "like",
    "whole",
    "year",
    "transaction",
    "data",
    "belongs",
    "three",
    "atm",
    "machines",
    "data",
    "warehouse",
    "database",
    "okay",
    "let",
    "say",
    "next",
    "year",
    "location",
    "around",
    "90",
    "transactions",
    "location",
    "around",
    "know",
    "100",
    "transactions",
    "location",
    "30",
    "transactions",
    "way",
    "one",
    "year",
    "transaction",
    "data",
    "location",
    "around",
    "150",
    "transactions",
    "90",
    "transactions",
    "40",
    "transactions",
    "like",
    "three",
    "years",
    "transaction",
    "data",
    "belongs",
    "three",
    "atm",
    "machines",
    "data",
    "warehouse",
    "database",
    "know",
    "data",
    "warehouse",
    "contains",
    "years",
    "data",
    "right",
    "okay",
    "huge",
    "transaction",
    "data",
    "years",
    "data",
    "data",
    "warehouse",
    "okay",
    "next",
    "since",
    "three",
    "belongs",
    "man",
    "let",
    "say",
    "cut",
    "transactions",
    "transactions",
    "greater",
    "50",
    "profits",
    "less",
    "50",
    "loss",
    "like",
    "let",
    "say",
    "cut",
    "transactions",
    "okay",
    "chennai",
    "location",
    "see",
    "loss",
    "right",
    "keep",
    "maintaining",
    "like",
    "already",
    "loss",
    "right",
    "data",
    "seeing",
    "data",
    "done",
    "analysis",
    "based",
    "analysis",
    "taken",
    "decision",
    "business",
    "keep",
    "business",
    "profits",
    "right",
    "okay",
    "whatever",
    "data",
    "call",
    "report",
    "using",
    "data",
    "generated",
    "report",
    "using",
    "data",
    "warehouse",
    "data",
    "right",
    "using",
    "data",
    "warehouse",
    "data",
    "generate",
    "report",
    "reports",
    "helpful",
    "business",
    "people",
    "analysis",
    "business",
    "take",
    "decision",
    "business",
    "keep",
    "business",
    "profits",
    "type",
    "report",
    "would",
    "know",
    "profit",
    "loss",
    "know",
    "right",
    "also",
    "possible",
    "generate",
    "type",
    "report",
    "based",
    "oltp",
    "data",
    "right",
    "generate",
    "oltp",
    "database",
    "contains",
    "latest",
    "data",
    "current",
    "data",
    "know",
    "take",
    "decision",
    "generate",
    "report",
    "based",
    "oltp",
    "data",
    "oltp",
    "database",
    "contains",
    "recent",
    "data",
    "seeing",
    "recenter",
    "data",
    "like",
    "one",
    "day",
    "two",
    "days",
    "data",
    "take",
    "decision",
    "business",
    "right",
    "take",
    "decision",
    "business",
    "need",
    "historical",
    "data",
    "using",
    "historical",
    "data",
    "generate",
    "reports",
    "reports",
    "helpful",
    "business",
    "people",
    "analysis",
    "business",
    "take",
    "decision",
    "business",
    "overview",
    "data",
    "warehouse",
    "okay",
    "first",
    "transactions",
    "going",
    "inserted",
    "oltp",
    "database",
    "right",
    "transactions",
    "insert",
    "okay",
    "data",
    "warehouse",
    "whose",
    "responsibility",
    "extract",
    "data",
    "oltp",
    "database",
    "transform",
    "load",
    "data",
    "warehouse",
    "take",
    "care",
    "extract",
    "data",
    "oltp",
    "data",
    "warehouse",
    "means",
    "different",
    "process",
    "maintain",
    "data",
    "process",
    "data",
    "load",
    "data",
    "oltp",
    "data",
    "warehouse",
    "process",
    "process",
    "call",
    "edl",
    "process",
    "etl",
    "team",
    "etl",
    "means",
    "extract",
    "transform",
    "load",
    "etl",
    "using",
    "etl",
    "tools",
    "different",
    "types",
    "edl",
    "tools",
    "market",
    "like",
    "informatica",
    "data",
    "stage",
    "initial",
    "pentaho",
    "right",
    "warehouse",
    "builder",
    "also",
    "like",
    "pl",
    "sql",
    "also",
    "write",
    "code",
    "okay",
    "like",
    "separate",
    "teams",
    "taking",
    "care",
    "maintain",
    "data",
    "oltp",
    "data",
    "warehouse",
    "extracting",
    "data",
    "oltp",
    "database",
    "transform",
    "load",
    "data",
    "warehouse",
    "okay",
    "data",
    "loaded",
    "data",
    "warehouse",
    "top",
    "data",
    "warehouse",
    "reports",
    "generated",
    "mainly",
    "etl",
    "developers",
    "taking",
    "care",
    "maintain",
    "data",
    "oltp",
    "data",
    "warehouse",
    "okay",
    "loading",
    "data",
    "one",
    "database",
    "another",
    "database",
    "different",
    "scenarios",
    "okay",
    "example",
    "let",
    "say",
    "oldp",
    "table",
    "like",
    "employee",
    "table",
    "source",
    "table",
    "employee",
    "number",
    "employee",
    "name",
    "salary",
    "okay",
    "data",
    "like",
    "100",
    "200",
    "3c",
    "300",
    "100",
    "200",
    "like",
    "employee",
    "table",
    "okay",
    "employee",
    "table",
    "like",
    "observe",
    "duplicate",
    "rows",
    "table",
    "oldp",
    "database",
    "table",
    "table",
    "duplicate",
    "rows",
    "two",
    "duplicate",
    "rows",
    "okay",
    "let",
    "say",
    "load",
    "data",
    "know",
    "oltp",
    "data",
    "warehouse",
    "target",
    "table",
    "loading",
    "data",
    "oltp",
    "data",
    "warehouse",
    "know",
    "oltp",
    "duplicate",
    "records",
    "let",
    "say",
    "processed",
    "duplicate",
    "records",
    "also",
    "data",
    "warehouse",
    "table",
    "process",
    "duplicate",
    "records",
    "also",
    "data",
    "warehouse",
    "stable",
    "know",
    "top",
    "data",
    "warehouse",
    "duplicate",
    "data",
    "incorrect",
    "data",
    "invalid",
    "data",
    "data",
    "warehouse",
    "okay",
    "incorrect",
    "data",
    "invalid",
    "data",
    "data",
    "warehouse",
    "top",
    "data",
    "warehouse",
    "know",
    "reports",
    "generated",
    "right",
    "okay",
    "incorrect",
    "data",
    "reports",
    "going",
    "generated",
    "going",
    "valid",
    "report",
    "invalid",
    "report",
    "definitely",
    "going",
    "valid",
    "report",
    "reason",
    "generally",
    "incorrect",
    "records",
    "first",
    "incorrect",
    "records",
    "fixed",
    "valid",
    "records",
    "extract",
    "transform",
    "load",
    "data",
    "warehouse",
    "tables",
    "okay",
    "next",
    "told",
    "loading",
    "data",
    "oltp",
    "data",
    "warehouse",
    "right",
    "oltp",
    "database",
    "data",
    "warehouse",
    "database",
    "oltp",
    "latest",
    "data",
    "data",
    "warehouse",
    "historical",
    "data",
    "okay",
    "yltp",
    "database",
    "let",
    "say",
    "different",
    "locations",
    "atm",
    "machines",
    "connected",
    "country",
    "millions",
    "customers",
    "bank",
    "accessing",
    "account",
    "details",
    "transactions",
    "different",
    "different",
    "locations",
    "okay",
    "let",
    "say",
    "atm",
    "machines",
    "different",
    "different",
    "location",
    "first",
    "connected",
    "oltp",
    "database",
    "okay",
    "also",
    "users",
    "online",
    "transactions",
    "let",
    "say",
    "internet",
    "banking",
    "applications",
    "okay",
    "like",
    "different",
    "internet",
    "banking",
    "applications",
    "users",
    "log",
    "account",
    "online",
    "transactions",
    "okay",
    "know",
    "millions",
    "customers",
    "accessing",
    "account",
    "details",
    "transactions",
    "one",
    "database",
    "oltp",
    "database",
    "oltp",
    "means",
    "online",
    "transaction",
    "process",
    "right",
    "recenter",
    "data",
    "millions",
    "customers",
    "accessing",
    "oltp",
    "database",
    "data",
    "time",
    "different",
    "different",
    "locations",
    "definitely",
    "may",
    "chance",
    "go",
    "database",
    "performance",
    "right",
    "reason",
    "instead",
    "connecting",
    "applications",
    "single",
    "database",
    "know",
    "another",
    "database",
    "called",
    "ods",
    "database",
    "ods",
    "means",
    "operational",
    "database",
    "okay",
    "ms",
    "sql",
    "schemas",
    "okay",
    "inside",
    "database",
    "schemas",
    "one",
    "schema",
    "oltp",
    "one",
    "schema",
    "database",
    "another",
    "schema",
    "another",
    "schema",
    "like",
    "database",
    "creating",
    "different",
    "schemas",
    "maintain",
    "data",
    "different",
    "different",
    "layers",
    "okay",
    "database",
    "performance",
    "definitely",
    "affect",
    "customer",
    "reason",
    "instead",
    "connecting",
    "applications",
    "single",
    "database",
    "know",
    "applications",
    "connecting",
    "oltp",
    "database",
    "applications",
    "connecting",
    "ods",
    "database",
    "okay",
    "let",
    "say",
    "atm",
    "machines",
    "connected",
    "oltp",
    "database",
    "know",
    "applications",
    "banking",
    "applications",
    "connecting",
    "ods",
    "database",
    "ods",
    "replica",
    "oltp",
    "database",
    "whatever",
    "tables",
    "present",
    "ods",
    "database",
    "tables",
    "also",
    "present",
    "old",
    "bp",
    "whatever",
    "tables",
    "present",
    "oltp",
    "present",
    "ods",
    "tables",
    "data",
    "also",
    "sync",
    "two",
    "databases",
    "know",
    "data",
    "sync",
    "okay",
    "transaction",
    "happen",
    "like",
    "inside",
    "oldp",
    "database",
    "immediately",
    "transaction",
    "also",
    "going",
    "updated",
    "inserted",
    "deleted",
    "ods",
    "database",
    "transaction",
    "happen",
    "application",
    "internet",
    "banking",
    "directly",
    "inserting",
    "ods",
    "database",
    "immediately",
    "transaction",
    "also",
    "going",
    "inserted",
    "oltp",
    "database",
    "like",
    "two",
    "databases",
    "sync",
    "okay",
    "maintain",
    "data",
    "sync",
    "two",
    "databases",
    "jobs",
    "created",
    "mssqlr",
    "plsql",
    "know",
    "etl",
    "jobs",
    "created",
    "maintain",
    "data",
    "sync",
    "two",
    "databases",
    "data",
    "available",
    "ods",
    "database",
    "maintain",
    "data",
    "sync",
    "two",
    "databases",
    "etl",
    "jobs",
    "created",
    "etl",
    "team",
    "loading",
    "data",
    "data",
    "warehouse",
    "okay",
    "like",
    "data",
    "flow",
    "audience",
    "database",
    "pms",
    "since",
    "oltp",
    "sensitive",
    "database",
    "insert",
    "transaction",
    "data",
    "yltp",
    "database",
    "millions",
    "customers",
    "access",
    "database",
    "data",
    "time",
    "reason",
    "know",
    "ods",
    "database",
    "since",
    "oltp",
    "sensitive",
    "database",
    "insert",
    "transaction",
    "data",
    "affect",
    "customer",
    "reason",
    "created",
    "replica",
    "many",
    "companies",
    "replica",
    "database",
    "audio",
    "data",
    "loaded",
    "data",
    "warehouse",
    "next",
    "another",
    "data",
    "flow",
    "see",
    "data",
    "warehouse",
    "yltp",
    "database",
    "right",
    "let",
    "say",
    "ods",
    "database",
    "operational",
    "data",
    "source",
    "data",
    "whatever",
    "data",
    "present",
    "oltp",
    "database",
    "data",
    "also",
    "present",
    "ods",
    "immediately",
    "jobs",
    "back",
    "taking",
    "care",
    "maintain",
    "data",
    "sync",
    "two",
    "databases",
    "oldp",
    "ods",
    "database",
    "sync",
    "databases",
    "sync",
    "okay",
    "100",
    "tables",
    "oltp",
    "100",
    "tables",
    "also",
    "present",
    "otp",
    "ods",
    "applications",
    "connected",
    "databases",
    "applications",
    "connected",
    "oltp",
    "database",
    "applications",
    "connected",
    "ods",
    "database",
    "okay",
    "data",
    "present",
    "data",
    "warehouse",
    "also",
    "right",
    "suppose",
    "let",
    "say",
    "oltp",
    "database",
    "100",
    "tables",
    "instead",
    "100",
    "tables",
    "talk",
    "one",
    "table",
    "let",
    "say",
    "oltp",
    "employee",
    "table",
    "table",
    "100",
    "records",
    "employee",
    "table",
    "also",
    "ods",
    "database",
    "also",
    "insert",
    "100",
    "records",
    "employee",
    "table",
    "data",
    "warehouse",
    "also",
    "insert",
    "100",
    "records",
    "across",
    "databases",
    "load",
    "data",
    "first",
    "data",
    "transfer",
    "happen",
    "old",
    "ods",
    "data",
    "ods",
    "database",
    "jobs",
    "extracting",
    "data",
    "ods",
    "transform",
    "load",
    "data",
    "warehouse",
    "okay",
    "see",
    "data",
    "flow",
    "scenario",
    "let",
    "say",
    "oltp",
    "database",
    "podius",
    "database",
    "okay",
    "told",
    "two",
    "sync",
    "okay",
    "let",
    "say",
    "oltp",
    "four",
    "tables",
    "four",
    "tables",
    "also",
    "present",
    "ods",
    "database",
    "also",
    "tables",
    "inside",
    "ods",
    "okay",
    "t1",
    "table",
    "t2",
    "table",
    "t3",
    "table",
    "t4",
    "table",
    "like",
    "four",
    "tables",
    "ods",
    "okay",
    "told",
    "data",
    "warehouse",
    "let",
    "say",
    "data",
    "warehouse",
    "database",
    "okay",
    "inside",
    "data",
    "warehouse",
    "dimension",
    "table",
    "fact",
    "table",
    "dimension",
    "dimension",
    "fact",
    "table",
    "okay",
    "data",
    "warehouse",
    "okay",
    "ods",
    "data",
    "warehouse",
    "another",
    "database",
    "called",
    "staging",
    "area",
    "called",
    "staging",
    "area",
    "stage",
    "database",
    "see",
    "staging",
    "area",
    "stage",
    "data",
    "also",
    "replication",
    "ods",
    "database",
    "whatever",
    "data",
    "present",
    "ods",
    "table",
    "perceives",
    "tables",
    "also",
    "present",
    "staging",
    "database",
    "first",
    "etl",
    "mappings",
    "extract",
    "data",
    "ods",
    "t1",
    "table",
    "transform",
    "load",
    "stage",
    "t1",
    "table",
    "way",
    "another",
    "etl",
    "mappings",
    "extract",
    "data",
    "odsd",
    "odsd2",
    "table",
    "transform",
    "loading",
    "stage",
    "d2",
    "table",
    "also",
    "etl",
    "mapping",
    "load",
    "data",
    "t3",
    "table",
    "extract",
    "data",
    "t3",
    "table",
    "transform",
    "load",
    "stage",
    "d3",
    "table",
    "way",
    "t4",
    "t4",
    "like",
    "data",
    "flow",
    "ods",
    "staging",
    "database",
    "data",
    "available",
    "staging",
    "database",
    "etl",
    "happen",
    "extract",
    "data",
    "transform",
    "load",
    "data",
    "warehouse",
    "like",
    "data",
    "flow",
    "data",
    "warehouse",
    "okay",
    "quick",
    "info",
    "guys",
    "intellipaat",
    "provides",
    "business",
    "intelligence",
    "masters",
    "program",
    "partnership",
    "microsoft",
    "course",
    "link",
    "given",
    "description",
    "let",
    "continue",
    "session",
    "ods",
    "data",
    "warehouse",
    "load",
    "data",
    "directly",
    "okay",
    "example",
    "let",
    "say",
    "table",
    "ods",
    "right",
    "t1",
    "table",
    "ods",
    "d1",
    "table",
    "right",
    "columns",
    "like",
    "employee",
    "number",
    "employee",
    "name",
    "salary",
    "created",
    "update",
    "date",
    "like",
    "ods",
    "table",
    "okay",
    "records",
    "like",
    "create",
    "data",
    "date",
    "let",
    "say",
    "employee",
    "number",
    "10",
    "100",
    "created",
    "created",
    "let",
    "take",
    "today",
    "date",
    "today",
    "8",
    "24",
    "okay",
    "20",
    "21",
    "okay",
    "run",
    "date",
    "also",
    "today",
    "date",
    "next",
    "second",
    "record",
    "20b",
    "200",
    "one",
    "30",
    "c",
    "300",
    "like",
    "fourth",
    "record",
    "40",
    "400",
    "like",
    "50",
    "e",
    "500",
    "like",
    "five",
    "rows",
    "ods",
    "d1",
    "table",
    "one",
    "row",
    "let",
    "say",
    "created",
    "mistake",
    "someone",
    "inserted",
    "like",
    "application",
    "let",
    "say",
    "got",
    "like",
    "okay",
    "instead",
    "created",
    "take",
    "know",
    "salary",
    "let",
    "say",
    "salary",
    "one",
    "record",
    "null",
    "value",
    "ods",
    "d1",
    "table",
    "salary",
    "null",
    "value",
    "one",
    "record",
    "okay",
    "case",
    "know",
    "create",
    "etl",
    "extract",
    "data",
    "ods",
    "transform",
    "load",
    "data",
    "warehouse",
    "etl",
    "extract",
    "five",
    "records",
    "insert",
    "five",
    "records",
    "data",
    "warehouse",
    "right",
    "data",
    "warehouse",
    "constraints",
    "constraint",
    "means",
    "primary",
    "key",
    "foreign",
    "key",
    "check",
    "constraint",
    "default",
    "know",
    "null",
    "constraint",
    "constraints",
    "set",
    "data",
    "warehouse",
    "constraints",
    "data",
    "warehouse",
    "load",
    "happen",
    "mean",
    "like",
    "take",
    "long",
    "time",
    "execute",
    "queries",
    "also",
    "take",
    "long",
    "time",
    "insert",
    "also",
    "take",
    "long",
    "time",
    "millions",
    "records",
    "generally",
    "constraints",
    "know",
    "store",
    "historical",
    "data",
    "data",
    "warehouse",
    "whatever",
    "records",
    "coming",
    "source",
    "records",
    "insert",
    "inside",
    "data",
    "warehouse",
    "okay",
    "reason",
    "constraints",
    "whatever",
    "data",
    "coming",
    "source",
    "insert",
    "data",
    "warehouse",
    "okay",
    "data",
    "warehouse",
    "insert",
    "five",
    "records",
    "one",
    "row",
    "salary",
    "null",
    "incorrect",
    "record",
    "salary",
    "null",
    "someone",
    "mistake",
    "inserted",
    "salary",
    "null",
    "one",
    "employee",
    "source",
    "table",
    "okay",
    "etl",
    "process",
    "extract",
    "five",
    "records",
    "going",
    "insert",
    "five",
    "records",
    "data",
    "warehouse",
    "data",
    "warehouse",
    "incorrect",
    "data",
    "top",
    "data",
    "warehouse",
    "reports",
    "going",
    "generated",
    "incorrect",
    "invalid",
    "reports",
    "going",
    "generated",
    "reason",
    "loading",
    "data",
    "data",
    "warehouse",
    "first",
    "stage",
    "database",
    "staging",
    "area",
    "constraints",
    "stage",
    "tables",
    "okay",
    "inside",
    "stage",
    "table",
    "constraints",
    "date",
    "1",
    "31",
    "month",
    "1",
    "12",
    "okay",
    "salary",
    "null",
    "ok",
    "employee",
    "number",
    "duplicate",
    "primary",
    "key",
    "like",
    "constraints",
    "database",
    "table",
    "level",
    "staging",
    "database",
    "staging",
    "also",
    "let",
    "say",
    "table",
    "stage",
    "t1",
    "table",
    "stage",
    "d1",
    "table",
    "like",
    "ods",
    "validation",
    "know",
    "sometimes",
    "may",
    "happen",
    "get",
    "incorrect",
    "data",
    "duplicate",
    "data",
    "even",
    "though",
    "validation",
    "tell",
    "another",
    "example",
    "even",
    "though",
    "validation",
    "sometime",
    "may",
    "get",
    "incorrect",
    "data",
    "type",
    "incorrect",
    "data",
    "get",
    "even",
    "though",
    "validation",
    "see",
    "first",
    "staging",
    "table",
    "let",
    "say",
    "stage",
    "t1",
    "table",
    "employee",
    "number",
    "employee",
    "name",
    "salary",
    "create",
    "date",
    "run",
    "date",
    "something",
    "like",
    "columns",
    "stage",
    "t1",
    "table",
    "null",
    "constraint",
    "okay",
    "let",
    "say",
    "ods",
    "let",
    "say",
    "created",
    "null",
    "constraint",
    "allowed",
    "insert",
    "null",
    "value",
    "okay",
    "somehow",
    "constraint",
    "salary",
    "column",
    "reason",
    "allowed",
    "insert",
    "null",
    "value",
    "otherwise",
    "normal",
    "constraint",
    "okay",
    "get",
    "null",
    "value",
    "giving",
    "example",
    "error",
    "record",
    "like",
    "purpose",
    "staging",
    "area",
    "okay",
    "ca",
    "load",
    "data",
    "directly",
    "ods",
    "data",
    "warehouse",
    "explaining",
    "currently",
    "okay",
    "normal",
    "constraint",
    "case",
    "happen",
    "etl",
    "process",
    "happens",
    "extract",
    "data",
    "ods",
    "t1",
    "table",
    "transform",
    "load",
    "stage",
    "table",
    "okay",
    "since",
    "normal",
    "constraint",
    "happen",
    "etl",
    "process",
    "fail",
    "execution",
    "allowed",
    "insert",
    "records",
    "let",
    "say",
    "failed",
    "execution",
    "failing",
    "execution",
    "etl",
    "team",
    "check",
    "know",
    "failure",
    "incorrect",
    "cut",
    "failure",
    "uh",
    "check",
    "ods",
    "ods",
    "source",
    "side",
    "team",
    "technical",
    "team",
    "maintaining",
    "data",
    "two",
    "databases",
    "mainly",
    "vltp",
    "ods",
    "technical",
    "team",
    "maintaining",
    "data",
    "two",
    "databases",
    "maintain",
    "sync",
    "okay",
    "data",
    "ods",
    "etl",
    "team",
    "extract",
    "transform",
    "loading",
    "staging",
    "stage",
    "2",
    "data",
    "warehouse",
    "loading",
    "data",
    "failed",
    "null",
    "value",
    "etl",
    "team",
    "inform",
    "ods",
    "team",
    "source",
    "team",
    "saying",
    "one",
    "record",
    "incorrect",
    "value",
    "fix",
    "okay",
    "fixing",
    "suppose",
    "let",
    "say",
    "ods",
    "team",
    "updated",
    "salary",
    "etl",
    "process",
    "runs",
    "know",
    "time",
    "valid",
    "data",
    "valid",
    "data",
    "etl",
    "process",
    "extract",
    "transform",
    "load",
    "staging",
    "database",
    "stage",
    "extract",
    "transform",
    "load",
    "data",
    "warehouse",
    "time",
    "data",
    "warehouse",
    "valid",
    "data",
    "okay",
    "talk",
    "another",
    "scenario",
    "another",
    "case",
    "salary",
    "okay",
    "mistake",
    "someone",
    "inserted",
    "created",
    "something",
    "like",
    "8",
    "24",
    "20",
    "55",
    "okay",
    "created",
    "820",
    "2055",
    "okay",
    "since",
    "future",
    "date",
    "ods",
    "t1",
    "table",
    "validation",
    "let",
    "say",
    "set",
    "employee",
    "number",
    "primary",
    "key",
    "salary",
    "normal",
    "constraint",
    "date",
    "also",
    "know",
    "checking",
    "like",
    "whether",
    "1",
    "31",
    "month",
    "1",
    "12",
    "like",
    "allow",
    "validation",
    "table",
    "level",
    "whether",
    "future",
    "date",
    "less",
    "equal",
    "system",
    "date",
    "like",
    "type",
    "validation",
    "right",
    "check",
    "whether",
    "date",
    "less",
    "equal",
    "system",
    "data",
    "future",
    "date",
    "reason",
    "year",
    "validation",
    "allows",
    "someone",
    "mistake",
    "inserted",
    "future",
    "date",
    "record",
    "possible",
    "future",
    "data",
    "record",
    "case",
    "happen",
    "record",
    "future",
    "five",
    "records",
    "execute",
    "like",
    "etl",
    "process",
    "executed",
    "audience",
    "stage",
    "extract",
    "five",
    "records",
    "insert",
    "five",
    "records",
    "stage",
    "d1",
    "table",
    "stage",
    "data",
    "warehouse",
    "five",
    "records",
    "extracted",
    "loaded",
    "data",
    "warehouse",
    "right",
    "data",
    "warehouse",
    "also",
    "let",
    "say",
    "five",
    "records",
    "know",
    "top",
    "data",
    "warehouse",
    "reports",
    "generated",
    "let",
    "say",
    "separate",
    "team",
    "reporting",
    "team",
    "team",
    "extract",
    "data",
    "data",
    "warehouse",
    "generate",
    "report",
    "report",
    "written",
    "logic",
    "extract",
    "records",
    "data",
    "warehouse",
    "created",
    "less",
    "equal",
    "system",
    "data",
    "like",
    "written",
    "logic",
    "extract",
    "data",
    "data",
    "warehouse",
    "created",
    "less",
    "equal",
    "system",
    "data",
    "case",
    "shows",
    "four",
    "employees",
    "information",
    "right",
    "get",
    "four",
    "employees",
    "information",
    "one",
    "required",
    "created",
    "future",
    "date",
    "validations",
    "still",
    "incorrect",
    "record",
    "present",
    "ods",
    "stage",
    "data",
    "warehouse",
    "okay",
    "business",
    "people",
    "business",
    "people",
    "soon",
    "receive",
    "report",
    "going",
    "analysis",
    "report",
    "analysis",
    "found",
    "four",
    "employees",
    "information",
    "expecting",
    "five",
    "employees",
    "information",
    "four",
    "employees",
    "information",
    "business",
    "people",
    "raise",
    "ticket",
    "incident",
    "reporting",
    "team",
    "first",
    "reporting",
    "team",
    "analysis",
    "analysis",
    "found",
    "data",
    "warehouse",
    "table",
    "incorrect",
    "record",
    "future",
    "data",
    "record",
    "reason",
    "know",
    "report",
    "extracted",
    "four",
    "employees",
    "information",
    "ticket",
    "move",
    "data",
    "warehouse",
    "team",
    "data",
    "warehouse",
    "team",
    "loaded",
    "data",
    "stage",
    "data",
    "warehouse",
    "right",
    "soon",
    "ticket",
    "data",
    "warehouse",
    "team",
    "receives",
    "data",
    "warehouse",
    "team",
    "write",
    "query",
    "see",
    "whether",
    "record",
    "character",
    "card",
    "present",
    "data",
    "warehouse",
    "executing",
    "query",
    "found",
    "incorrect",
    "record",
    "present",
    "data",
    "warehouse",
    "yes",
    "one",
    "required",
    "future",
    "date",
    "incorrect",
    "record",
    "loaded",
    "staging",
    "like",
    "going",
    "back",
    "track",
    "first",
    "client",
    "side",
    "technical",
    "team",
    "source",
    "team",
    "ods",
    "team",
    "fix",
    "record",
    "first",
    "ods",
    "database",
    "okay",
    "let",
    "say",
    "working",
    "team",
    "write",
    "update",
    "statement",
    "application",
    "fix",
    "record",
    "okay",
    "uh",
    "let",
    "say",
    "done",
    "analysis",
    "sent",
    "ms",
    "sqlr",
    "database",
    "team",
    "dba",
    "team",
    "sent",
    "request",
    "whoever",
    "responsible",
    "correct",
    "data",
    "database",
    "take",
    "responsibility",
    "fix",
    "regard",
    "first",
    "fix",
    "record",
    "writing",
    "update",
    "statement",
    "let",
    "say",
    "odst",
    "markline",
    "team",
    "client",
    "confirmed",
    "255",
    "251",
    "like",
    "confirmed",
    "confirmed",
    "correct",
    "date",
    "instead",
    "2055",
    "2021",
    "got",
    "request",
    "write",
    "update",
    "statement",
    "correct",
    "record",
    "ods",
    "database",
    "update",
    "created",
    "equals",
    "824",
    "2021",
    "employee",
    "number",
    "equals",
    "like",
    "correct",
    "record",
    "called",
    "data",
    "fixing",
    "way",
    "know",
    "also",
    "execute",
    "update",
    "statement",
    "staging",
    "database",
    "stage",
    "t1",
    "table",
    "also",
    "also",
    "update",
    "statement",
    "execute",
    "right",
    "like",
    "correct",
    "data",
    "correct",
    "data",
    "tried",
    "update",
    "statement",
    "time",
    "scenario",
    "one",
    "incorrect",
    "record",
    "okay",
    "real",
    "time",
    "may",
    "chance",
    "know",
    "many",
    "records",
    "also",
    "incorrect",
    "sometimes",
    "may",
    "get",
    "10",
    "records",
    "100",
    "records",
    "1000",
    "records",
    "1",
    "million",
    "records",
    "also",
    "get",
    "type",
    "incorrect",
    "records",
    "know",
    "sometimes",
    "suddenly",
    "services",
    "failure",
    "server",
    "went",
    "mistake",
    "something",
    "happens",
    "may",
    "chance",
    "get",
    "incorrect",
    "records",
    "duplicate",
    "records",
    "error",
    "records",
    "like",
    "source",
    "database",
    "data",
    "flowing",
    "data",
    "warehouse",
    "may",
    "chance",
    "load",
    "type",
    "incorrect",
    "records",
    "across",
    "databases",
    "analysis",
    "sometimes",
    "know",
    "instead",
    "time",
    "client",
    "found",
    "one",
    "employee",
    "record",
    "missing",
    "report",
    "sometimes",
    "data",
    "analysis",
    "team",
    "also",
    "data",
    "analysis",
    "team",
    "writing",
    "queries",
    "find",
    "incorrect",
    "records",
    "database",
    "tables",
    "okay",
    "giving",
    "business",
    "criteria",
    "okay",
    "satisfy",
    "construct",
    "error",
    "record",
    "check",
    "duplicate",
    "records",
    "check",
    "future",
    "date",
    "records",
    "check",
    "null",
    "values",
    "column",
    "like",
    "also",
    "writing",
    "queries",
    "analysis",
    "know",
    "finding",
    "error",
    "records",
    "incorrect",
    "records",
    "finding",
    "error",
    "records",
    "get",
    "confirmation",
    "client",
    "okay",
    "records",
    "found",
    "correct",
    "record",
    "rows",
    "invalid",
    "information",
    "please",
    "let",
    "us",
    "know",
    "data",
    "update",
    "get",
    "confirmation",
    "client",
    "write",
    "insert",
    "statement",
    "update",
    "statement",
    "delete",
    "statement",
    "depends",
    "requirement",
    "want",
    "fix",
    "duplicate",
    "records",
    "right",
    "like",
    "fixing",
    "records",
    "ods",
    "days",
    "data",
    "warehouse",
    "data",
    "loaded",
    "data",
    "warehouse",
    "top",
    "data",
    "warehouse",
    "reports",
    "generated",
    "reports",
    "send",
    "business",
    "people",
    "like",
    "data",
    "flow",
    "one",
    "database",
    "another",
    "database",
    "right",
    "next",
    "standard",
    "data",
    "flow",
    "like",
    "different",
    "databases",
    "okay",
    "inside",
    "tables",
    "loading",
    "data",
    "know",
    "incorrect",
    "records",
    "also",
    "fix",
    "correct",
    "regards",
    "load",
    "valid",
    "data",
    "data",
    "warehouse",
    "companies",
    "know",
    "instead",
    "directly",
    "generating",
    "reports",
    "top",
    "data",
    "warehouse",
    "next",
    "data",
    "warehouse",
    "data",
    "mart",
    "inside",
    "ms",
    "sql",
    "also",
    "create",
    "data",
    "right",
    "data",
    "mart",
    "data",
    "mart",
    "inside",
    "msa",
    "scale",
    "software",
    "type",
    "type",
    "database",
    "software",
    "right",
    "different",
    "databases",
    "create",
    "inside",
    "databases",
    "schemas",
    "inside",
    "schemas",
    "tables",
    "right",
    "like",
    "ms",
    "sql",
    "data",
    "warehouse",
    "ods",
    "stage",
    "okay",
    "databases",
    "also",
    "way",
    "also",
    "data",
    "marked",
    "data",
    "mart",
    "data",
    "mart",
    "means",
    "know",
    "data",
    "warehouse",
    "contains",
    "historical",
    "data",
    "years",
    "transaction",
    "data",
    "let",
    "say",
    "10",
    "years",
    "transaction",
    "data",
    "extracting",
    "report",
    "top",
    "10",
    "years",
    "data",
    "definitely",
    "queries",
    "take",
    "time",
    "execute",
    "want",
    "display",
    "10",
    "years",
    "data",
    "report",
    "want",
    "display",
    "last",
    "three",
    "years",
    "data",
    "want",
    "display",
    "last",
    "three",
    "years",
    "data",
    "report",
    "three",
    "years",
    "report",
    "query",
    "going",
    "execute",
    "top",
    "10",
    "years",
    "data",
    "definitely",
    "queries",
    "take",
    "long",
    "time",
    "extract",
    "report",
    "information",
    "last",
    "three",
    "years",
    "report",
    "information",
    "reason",
    "know",
    "data",
    "mods",
    "data",
    "mart",
    "also",
    "also",
    "contains",
    "historical",
    "data",
    "historical",
    "data",
    "specific",
    "report",
    "okay",
    "business",
    "people",
    "let",
    "say",
    "want",
    "three",
    "years",
    "data",
    "report",
    "okay",
    "data",
    "mod",
    "table",
    "maintain",
    "three",
    "years",
    "data",
    "okay",
    "atl",
    "process",
    "happen",
    "also",
    "extract",
    "data",
    "data",
    "warehouse",
    "last",
    "three",
    "years",
    "data",
    "transform",
    "load",
    "data",
    "mods",
    "instead",
    "selecting",
    "10",
    "years",
    "data",
    "whichever",
    "data",
    "required",
    "generate",
    "report",
    "data",
    "loaded",
    "data",
    "mods",
    "suppose",
    "let",
    "say",
    "business",
    "people",
    "says",
    "want",
    "last",
    "six",
    "months",
    "data",
    "report",
    "last",
    "one",
    "year",
    "data",
    "table",
    "data",
    "warehouse",
    "select",
    "recent",
    "last",
    "one",
    "year",
    "data",
    "last",
    "two",
    "years",
    "data",
    "maintain",
    "tasks",
    "last",
    "one",
    "two",
    "years",
    "data",
    "data",
    "mods",
    "okay",
    "top",
    "data",
    "marks",
    "report",
    "going",
    "extracted",
    "take",
    "much",
    "time",
    "quickly",
    "reports",
    "going",
    "generated",
    "right",
    "compared",
    "data",
    "warehouse",
    "top",
    "data",
    "mods",
    "reports",
    "going",
    "generated",
    "easily",
    "accessible",
    "okay",
    "data",
    "flow",
    "inside",
    "type",
    "database",
    "software",
    "databases",
    "data",
    "flow",
    "like",
    "finally",
    "loading",
    "data",
    "warehouse",
    "know",
    "data",
    "warehouse",
    "contains",
    "historical",
    "data",
    "told",
    "top",
    "historical",
    "like",
    "historical",
    "means",
    "last",
    "10",
    "years",
    "20",
    "years",
    "okay",
    "years",
    "transaction",
    "data",
    "data",
    "warehouse",
    "execute",
    "small",
    "query",
    "also",
    "take",
    "long",
    "time",
    "execute",
    "written",
    "result",
    "reason",
    "instead",
    "extracting",
    "reports",
    "top",
    "data",
    "warehouse",
    "instead",
    "extracting",
    "data",
    "reports",
    "top",
    "data",
    "warehouse",
    "told",
    "data",
    "warehouse",
    "data",
    "marts",
    "different",
    "different",
    "tables",
    "every",
    "table",
    "know",
    "report",
    "going",
    "extracted",
    "top",
    "table",
    "report",
    "want",
    "three",
    "years",
    "data",
    "also",
    "data",
    "warehouse",
    "data",
    "mod",
    "table",
    "maintain",
    "three",
    "years",
    "data",
    "okay",
    "let",
    "say",
    "data",
    "warehouse",
    "store",
    "data",
    "enterprise",
    "level",
    "enterprise",
    "level",
    "means",
    "let",
    "say",
    "company",
    "10",
    "departments",
    "okay",
    "data",
    "warehouse",
    "store",
    "tech",
    "departments",
    "data",
    "generating",
    "report",
    "every",
    "department",
    "need",
    "separate",
    "report",
    "okay",
    "department",
    "one",
    "need",
    "separate",
    "report",
    "department",
    "2",
    "need",
    "separate",
    "report",
    "another",
    "report",
    "need",
    "another",
    "data",
    "another",
    "department",
    "need",
    "separate",
    "report",
    "know",
    "instead",
    "maintaining",
    "10",
    "departments",
    "data",
    "single",
    "database",
    "data",
    "warehouse",
    "data",
    "warehouse",
    "connect",
    "data",
    "market",
    "like",
    "adl",
    "process",
    "happen",
    "data",
    "warehouse",
    "different",
    "data",
    "mods",
    "10",
    "departments",
    "10",
    "data",
    "mods",
    "every",
    "data",
    "mark",
    "corresponding",
    "department",
    "report",
    "generated",
    "okay",
    "create",
    "etl",
    "process",
    "whatever",
    "process",
    "load",
    "data",
    "extract",
    "transform",
    "load",
    "etl",
    "process",
    "taken",
    "care",
    "maintain",
    "data",
    "databases",
    "also",
    "call",
    "data",
    "transformation",
    "called",
    "etl",
    "different",
    "atl",
    "tools",
    "market",
    "like",
    "informatica",
    "power",
    "center",
    "data",
    "stage",
    "abner",
    "show",
    "pentaho",
    "okay",
    "warehouse",
    "builder",
    "sql",
    "uh",
    "like",
    "uh",
    "also",
    "pl",
    "sql",
    "packages",
    "transform",
    "data",
    "one",
    "database",
    "another",
    "database",
    "finally",
    "know",
    "rare",
    "generating",
    "directly",
    "top",
    "data",
    "warehouse",
    "data",
    "warehouse",
    "data",
    "transferred",
    "data",
    "mods",
    "types",
    "like",
    "otp",
    "ods",
    "know",
    "ms",
    "sql",
    "naming",
    "conventions",
    "databases",
    "creating",
    "inside",
    "ms",
    "sql",
    "data",
    "warehouse",
    "dimensional",
    "fact",
    "table",
    "like",
    "wheel",
    "dp",
    "ods",
    "staging",
    "data",
    "mods",
    "sometimes",
    "data",
    "marts",
    "also",
    "called",
    "reporting",
    "database",
    "also",
    "call",
    "companies",
    "call",
    "data",
    "mark",
    "companies",
    "also",
    "called",
    "reporting",
    "database",
    "companies",
    "also",
    "called",
    "metalized",
    "views",
    "metallized",
    "views",
    "also",
    "created",
    "uh",
    "know",
    "know",
    "data",
    "warehouse",
    "let",
    "say",
    "table",
    "table",
    "100",
    "columns",
    "okay",
    "1",
    "million",
    "records",
    "table",
    "report",
    "want",
    "100",
    "columns",
    "want",
    "40",
    "columns",
    "data",
    "report",
    "okay",
    "also",
    "want",
    "1",
    "million",
    "records",
    "table",
    "let",
    "say",
    "active",
    "inactive",
    "records",
    "want",
    "extract",
    "active",
    "records",
    "40",
    "columns",
    "data",
    "need",
    "case",
    "know",
    "metallized",
    "view",
    "created",
    "top",
    "data",
    "warehouse",
    "stable",
    "okay",
    "40",
    "columns",
    "active",
    "records",
    "table",
    "metallized",
    "view",
    "physically",
    "created",
    "database",
    "view",
    "contains",
    "active",
    "records",
    "40",
    "columns",
    "data",
    "top",
    "source",
    "materialize",
    "view",
    "source",
    "generate",
    "report",
    "like",
    "companies",
    "know",
    "creating",
    "metallized",
    "views",
    "also",
    "data",
    "warehouse",
    "companies",
    "data",
    "mods",
    "created",
    "companies",
    "also",
    "called",
    "reporting",
    "database",
    "things",
    "know",
    "ms",
    "sql",
    "oracle",
    "cybase",
    "db2",
    "teradata",
    "depends",
    "company",
    "creating",
    "type",
    "databases",
    "okay",
    "aware",
    "things",
    "data",
    "flow",
    "type",
    "databases",
    "talk",
    "dimension",
    "fact",
    "table",
    "dimension",
    "table",
    "call",
    "dim",
    "table",
    "factor",
    "table",
    "dimension",
    "table",
    "contains",
    "primary",
    "key",
    "master",
    "data",
    "table",
    "calling",
    "dimension",
    "table",
    "say",
    "contains",
    "primary",
    "key",
    "master",
    "data",
    "okay",
    "master",
    "data",
    "also",
    "called",
    "data",
    "okay",
    "whereas",
    "fact",
    "contains",
    "primary",
    "keys",
    "dimensions",
    "okay",
    "also",
    "called",
    "foreign",
    "case",
    "measurable",
    "data",
    "measurable",
    "columns",
    "columns",
    "data",
    "okay",
    "definition",
    "dimension",
    "table",
    "fact",
    "table",
    "loading",
    "data",
    "relational",
    "table",
    "dimension",
    "fact",
    "table",
    "master",
    "data",
    "data",
    "load",
    "dimension",
    "table",
    "measurable",
    "columns",
    "measurable",
    "data",
    "fact",
    "table",
    "one",
    "dimensional",
    "fact",
    "model",
    "data",
    "warehouse",
    "schemas",
    "like",
    "star",
    "schema",
    "snowflake",
    "schema",
    "okay",
    "two",
    "types",
    "schemas",
    "data",
    "warehouse",
    "okay",
    "star",
    "schema",
    "mean",
    "like",
    "see",
    "dimension",
    "table",
    "fact",
    "table",
    "okay",
    "dimension",
    "table",
    "item",
    "dimension",
    "branch",
    "dimension",
    "know",
    "time",
    "dimension",
    "location",
    "dimension",
    "like",
    "different",
    "types",
    "dimensions",
    "data",
    "warehouse",
    "okay",
    "see",
    "dimension",
    "table",
    "primary",
    "key",
    "item",
    "key",
    "primary",
    "key",
    "column",
    "right",
    "apart",
    "primary",
    "key",
    "column",
    "columns",
    "item",
    "name",
    "brand",
    "name",
    "sold",
    "category",
    "non",
    "measurable",
    "way",
    "branch",
    "dimension",
    "branch",
    "dimension",
    "also",
    "branch",
    "id",
    "one",
    "one",
    "primary",
    "key",
    "column",
    "column",
    "balance",
    "name",
    "owner",
    "name",
    "know",
    "branch",
    "owner",
    "name",
    "columns",
    "way",
    "time",
    "id",
    "key",
    "column",
    "another",
    "day",
    "month",
    "quarter",
    "year",
    "know",
    "columns",
    "okay",
    "location",
    "location",
    "id",
    "name",
    "state",
    "pin",
    "code",
    "also",
    "location",
    "id",
    "key",
    "column",
    "columns",
    "columns",
    "dimensions",
    "find",
    "measurable",
    "columns",
    "designed",
    "generally",
    "architect",
    "level",
    "architects",
    "design",
    "data",
    "models",
    "decide",
    "column",
    "dimension",
    "column",
    "effect",
    "okay",
    "know",
    "dimension",
    "type",
    "data",
    "dimension",
    "table",
    "type",
    "data",
    "fact",
    "table",
    "see",
    "fact",
    "foreign",
    "keys",
    "foreign",
    "keys",
    "means",
    "like",
    "primary",
    "keys",
    "dimensions",
    "item",
    "key",
    "dimension",
    "table",
    "also",
    "present",
    "fact",
    "table",
    "branch",
    "id",
    "dimension",
    "table",
    "present",
    "fact",
    "table",
    "way",
    "time",
    "id",
    "also",
    "present",
    "whatever",
    "present",
    "time",
    "dimension",
    "time",
    "id",
    "branch",
    "id",
    "branch",
    "dimension",
    "location",
    "id",
    "location",
    "dimension",
    "like",
    "fact",
    "table",
    "contains",
    "primary",
    "keys",
    "dimensions",
    "foreign",
    "keys",
    "like",
    "also",
    "columns",
    "measurable",
    "columns",
    "quantity",
    "sold",
    "quantity",
    "number",
    "type",
    "data",
    "measurable",
    "column",
    "amount",
    "sold",
    "amount",
    "number",
    "type",
    "data",
    "average",
    "sales",
    "number",
    "type",
    "data",
    "right",
    "columns",
    "know",
    "measurable",
    "columns",
    "like",
    "know",
    "dimension",
    "contains",
    "key",
    "column",
    "apart",
    "key",
    "column",
    "columns",
    "columns",
    "fact",
    "table",
    "contains",
    "primary",
    "keys",
    "dimensions",
    "form",
    "case",
    "columns",
    "measurable",
    "columns",
    "okay",
    "like",
    "schema",
    "inside",
    "schema",
    "call",
    "data",
    "model",
    "data",
    "model",
    "schema",
    "data",
    "warehouse",
    "know",
    "dimensions",
    "facts",
    "dimension",
    "contains",
    "primary",
    "key",
    "columns",
    "whereas",
    "fact",
    "contains",
    "primary",
    "keys",
    "dimensions",
    "measurable",
    "columns",
    "dimension",
    "fat",
    "differentiated",
    "told",
    "architect",
    "responsibility",
    "design",
    "data",
    "model",
    "like",
    "based",
    "creating",
    "know",
    "dbs",
    "creating",
    "tables",
    "store",
    "data",
    "like",
    "would",
    "easy",
    "generate",
    "report",
    "easy",
    "access",
    "report",
    "dimension",
    "fact",
    "models",
    "designed",
    "compared",
    "relational",
    "know",
    "designed",
    "based",
    "data",
    "warehouse",
    "model",
    "reports",
    "would",
    "easy",
    "access",
    "reason",
    "dimensional",
    "fact",
    "model",
    "next",
    "two",
    "types",
    "schemas",
    "data",
    "warehouse",
    "first",
    "one",
    "star",
    "schema",
    "second",
    "one",
    "snowflake",
    "star",
    "schema",
    "model",
    "data",
    "warehouse",
    "means",
    "see",
    "star",
    "schema",
    "model",
    "call",
    "star",
    "schema",
    "model",
    "means",
    "schema",
    "data",
    "model",
    "fact",
    "connected",
    "dimensions",
    "call",
    "star",
    "schema",
    "model",
    "connected",
    "means",
    "dimension",
    "keys",
    "present",
    "fact",
    "four",
    "dimensions",
    "reason",
    "call",
    "star",
    "schema",
    "model",
    "least",
    "one",
    "dimensions",
    "suppose",
    "let",
    "say",
    "branch",
    "ide",
    "present",
    "fact",
    "table",
    "call",
    "star",
    "schema",
    "model",
    "okay",
    "star",
    "schema",
    "dimension",
    "keys",
    "present",
    "fact",
    "call",
    "star",
    "schema",
    "model",
    "another",
    "schema",
    "called",
    "snowflake",
    "okay",
    "snowflake",
    "schema",
    "model",
    "one",
    "fact",
    "left",
    "side",
    "fact",
    "four",
    "dimension",
    "tables",
    "right",
    "side",
    "fact",
    "five",
    "dimension",
    "tables",
    "schema",
    "total",
    "nine",
    "dimensions",
    "even",
    "though",
    "nine",
    "dimensions",
    "three",
    "keys",
    "present",
    "like",
    "date",
    "id",
    "store",
    "id",
    "product",
    "id",
    "like",
    "three",
    "dimension",
    "keys",
    "present",
    "fact",
    "table",
    "like",
    "schema",
    "data",
    "model",
    "dimension",
    "keys",
    "present",
    "fact",
    "dimension",
    "keys",
    "dimension",
    "keys",
    "present",
    "fact",
    "model",
    "called",
    "snowflake",
    "schema",
    "model",
    "okay",
    "least",
    "one",
    "dimension",
    "key",
    "present",
    "us",
    "say",
    "total",
    "nine",
    "eight",
    "dimension",
    "keys",
    "fact",
    "one",
    "dimension",
    "key",
    "present",
    "means",
    "one",
    "dimension",
    "connected",
    "fact",
    "okay",
    "case",
    "also",
    "call",
    "snowflake",
    "schema",
    "model",
    "fact",
    "table",
    "contains",
    "free",
    "dimension",
    "keys",
    "measurable",
    "columns",
    "snowflake",
    "schema",
    "model",
    "whereas",
    "star",
    "schema",
    "model",
    "fact",
    "dimension",
    "keys",
    "architect",
    "level",
    "design",
    "uh",
    "data",
    "model",
    "schemas",
    "like",
    "decide",
    "column",
    "dimension",
    "column",
    "effect",
    "know",
    "star",
    "schema",
    "model",
    "snowflake",
    "schema",
    "model",
    "data",
    "warehouse",
    "different",
    "types",
    "dimensions",
    "four",
    "types",
    "dimensions",
    "one",
    "confirmed",
    "dimension",
    "reusable",
    "okay",
    "fourth",
    "one",
    "slowly",
    "changing",
    "dimension",
    "scd",
    "slowly",
    "changing",
    "dimension",
    "three",
    "types",
    "okay",
    "scd",
    "type",
    "1",
    "scd",
    "type",
    "2",
    "scd",
    "type",
    "3",
    "acd",
    "type",
    "1",
    "dimension",
    "contains",
    "latest",
    "data",
    "current",
    "data",
    "whereas",
    "s3",
    "type",
    "2",
    "dimension",
    "contains",
    "know",
    "historical",
    "data",
    "whereas",
    "acidic",
    "type",
    "3",
    "dimension",
    "contains",
    "partial",
    "history",
    "okay",
    "confirm",
    "reusable",
    "dimension",
    "means",
    "dimension",
    "reused",
    "across",
    "multiple",
    "projects",
    "dimension",
    "table",
    "use",
    "across",
    "multiple",
    "project",
    "called",
    "conform",
    "dimension",
    "example",
    "let",
    "say",
    "employee",
    "dimension",
    "employee",
    "dimension",
    "employee",
    "number",
    "employee",
    "name",
    "salary",
    "something",
    "like",
    "working",
    "let",
    "say",
    "project",
    "called",
    "ge",
    "working",
    "ge",
    "project",
    "ge",
    "project",
    "employee",
    "dimension",
    "employee",
    "dimension",
    "contain",
    "know",
    "ge",
    "employees",
    "information",
    "let",
    "say",
    "ge",
    "employee",
    "okay",
    "company",
    "another",
    "project",
    "called",
    "ae",
    "aero",
    "electronics",
    "like",
    "another",
    "know",
    "project",
    "company",
    "okay",
    "also",
    "create",
    "employee",
    "dimension",
    "employee",
    "table",
    "created",
    "okay",
    "also",
    "create",
    "employee",
    "table",
    "reuse",
    "whatever",
    "employee",
    "dimension",
    "created",
    "right",
    "possible",
    "like",
    "employee",
    "dimension",
    "contains",
    "ge",
    "employees",
    "information",
    "reuse",
    "dimension",
    "another",
    "accounts",
    "another",
    "projects",
    "okay",
    "valid",
    "confirm",
    "dimension",
    "okay",
    "instead",
    "employee",
    "dimension",
    "let",
    "say",
    "another",
    "dimension",
    "ge",
    "called",
    "calendar",
    "calendar",
    "dimension",
    "calendar",
    "information",
    "okay",
    "date",
    "time",
    "uh",
    "calendar",
    "dimension",
    "generally",
    "take",
    "holidays",
    "okay",
    "public",
    "holidays",
    "things",
    "calendar",
    "dimension",
    "sure",
    "calendar",
    "data",
    "remains",
    "across",
    "multiple",
    "projects",
    "calendar",
    "information",
    "going",
    "change",
    "okay",
    "confirm",
    "dimension",
    "contains",
    "know",
    "data",
    "reused",
    "across",
    "multiple",
    "projects",
    "data",
    "change",
    "anything",
    "type",
    "dimensions",
    "call",
    "conform",
    "dimension",
    "know",
    "definitions",
    "junk",
    "dimension",
    "junk",
    "dimension",
    "means",
    "dimension",
    "data",
    "every",
    "second",
    "every",
    "minute",
    "getting",
    "keep",
    "updated",
    "latest",
    "data",
    "getting",
    "example",
    "says",
    "stock",
    "market",
    "information",
    "store",
    "dimension",
    "data",
    "every",
    "second",
    "every",
    "minute",
    "getting",
    "latest",
    "updates",
    "right",
    "type",
    "information",
    "store",
    "dimension",
    "dimension",
    "called",
    "junk",
    "dimension",
    "degenerated",
    "dimension",
    "degenerated",
    "dimension",
    "means",
    "know",
    "pin",
    "code",
    "let",
    "say",
    "location",
    "dimension",
    "pin",
    "code",
    "pin",
    "code",
    "contains",
    "characters",
    "sometimes",
    "numbers",
    "also",
    "right",
    "let",
    "say",
    "one",
    "stored",
    "dimension",
    "pin",
    "code",
    "column",
    "currently",
    "dimension",
    "okay",
    "rare",
    "also",
    "store",
    "type",
    "columns",
    "fact",
    "also",
    "pin",
    "code",
    "pin",
    "codes",
    "measure",
    "right",
    "number",
    "type",
    "data",
    "also",
    "okay",
    "type",
    "columns",
    "store",
    "fact",
    "okay",
    "dimension",
    "sharing",
    "column",
    "fact",
    "dimension",
    "call",
    "degenerated",
    "dimension",
    "example",
    "location",
    "dimension",
    "location",
    "dimension",
    "pin",
    "code",
    "column",
    "pin",
    "code",
    "column",
    "location",
    "dimension",
    "well",
    "factor",
    "table",
    "pin",
    "code",
    "column",
    "coming",
    "know",
    "location",
    "dimension",
    "case",
    "whichever",
    "dimension",
    "sharing",
    "column",
    "fact",
    "type",
    "dimension",
    "call",
    "degenerated",
    "dimension",
    "next",
    "slowly",
    "changing",
    "dimension",
    "slowly",
    "changing",
    "dimension",
    "three",
    "types",
    "scd",
    "type",
    "1",
    "sad",
    "type",
    "2",
    "scd",
    "type",
    "3",
    "type",
    "1",
    "data",
    "means",
    "let",
    "say",
    "source",
    "table",
    "table",
    "like",
    "emp",
    "underscore",
    "sad",
    "type",
    "1",
    "underscore",
    "source",
    "employee",
    "number",
    "employee",
    "name",
    "address",
    "okay",
    "10",
    "hyd",
    "20",
    "b",
    "blr",
    "30",
    "cc",
    "like",
    "know",
    "source",
    "table",
    "let",
    "say",
    "target",
    "table",
    "target",
    "loading",
    "data",
    "source",
    "target",
    "table",
    "data",
    "maintaining",
    "table",
    "cd",
    "type",
    "one",
    "means",
    "okay",
    "along",
    "also",
    "create",
    "updated",
    "okay",
    "maintain",
    "data",
    "means",
    "first",
    "time",
    "check",
    "whether",
    "source",
    "record",
    "present",
    "target",
    "table",
    "source",
    "record",
    "exist",
    "insert",
    "right",
    "okay",
    "inserting",
    "like",
    "hydrated",
    "system",
    "8",
    "24",
    "20",
    "2021",
    "update",
    "also",
    "system",
    "date",
    "okay",
    "second",
    "record",
    "also",
    "source",
    "record",
    "exist",
    "second",
    "record",
    "also",
    "going",
    "insert",
    "like",
    "third",
    "record",
    "also",
    "exist",
    "record",
    "also",
    "going",
    "insert",
    "like",
    "first",
    "time",
    "none",
    "records",
    "present",
    "target",
    "table",
    "records",
    "going",
    "inserted",
    "data",
    "transformation",
    "happen",
    "serie",
    "type",
    "one",
    "okay",
    "second",
    "time",
    "let",
    "say",
    "employee",
    "hype",
    "usa",
    "got",
    "update",
    "usa",
    "let",
    "say",
    "got",
    "update",
    "8",
    "25",
    "august",
    "25th",
    "moved",
    "usa",
    "got",
    "update",
    "uh",
    "move",
    "usa",
    "time",
    "execute",
    "film",
    "let",
    "say",
    "executing",
    "mapping",
    "next",
    "day",
    "tomorrow",
    "executing",
    "data",
    "transformation",
    "happen",
    "check",
    "whether",
    "source",
    "employee",
    "number",
    "exists",
    "target",
    "table",
    "okay",
    "case",
    "happen",
    "update",
    "specific",
    "columns",
    "update",
    "right",
    "source",
    "employee",
    "number",
    "already",
    "present",
    "target",
    "table",
    "update",
    "record",
    "target",
    "table",
    "hyd",
    "usa",
    "also",
    "also",
    "update",
    "update",
    "date",
    "like",
    "happen",
    "type",
    "1",
    "going",
    "8",
    "25",
    "20",
    "21",
    "going",
    "update",
    "employee",
    "name",
    "also",
    "create",
    "create",
    "date",
    "date",
    "actually",
    "record",
    "got",
    "created",
    "okay",
    "need",
    "anything",
    "second",
    "third",
    "record",
    "change",
    "okay",
    "insert",
    "update",
    "leave",
    "record",
    "okay",
    "next",
    "third",
    "time",
    "third",
    "time",
    "let",
    "say",
    "employee",
    "usb",
    "uk",
    "august",
    "30th",
    "okay",
    "let",
    "say",
    "august",
    "30th",
    "got",
    "update",
    "table",
    "time",
    "serie",
    "type",
    "one",
    "running",
    "uh",
    "transformation",
    "data",
    "transformation",
    "uh",
    "source",
    "target",
    "8th",
    "30th",
    "check",
    "whether",
    "source",
    "employee",
    "number",
    "present",
    "source",
    "employee",
    "number",
    "already",
    "present",
    "change",
    "source",
    "target",
    "record",
    "case",
    "update",
    "usa",
    "uk",
    "update",
    "uk",
    "update",
    "date",
    "also",
    "updated",
    "825",
    "830",
    "like",
    "updated",
    "okay",
    "second",
    "third",
    "record",
    "change",
    "got",
    "new",
    "record",
    "source",
    "table",
    "new",
    "record",
    "inserted",
    "inside",
    "target",
    "table",
    "like",
    "happen",
    "employee",
    "number",
    "10",
    "hyd",
    "moved",
    "usa",
    "currently",
    "uk",
    "whatever",
    "data",
    "present",
    "source",
    "present",
    "target",
    "table",
    "older",
    "transactions",
    "right",
    "whatever",
    "data",
    "present",
    "source",
    "maintain",
    "target",
    "table",
    "called",
    "know",
    "latest",
    "data",
    "update",
    "automatically",
    "atl",
    "process",
    "okay",
    "etl",
    "jobs",
    "informatica",
    "team",
    "atl",
    "team",
    "pl",
    "sql",
    "team",
    "project",
    "depends",
    "client",
    "decide",
    "want",
    "process",
    "data",
    "okay",
    "updated",
    "automatically",
    "process",
    "transform",
    "data",
    "source",
    "target",
    "right",
    "process",
    "take",
    "care",
    "maintain",
    "data",
    "like",
    "target",
    "table",
    "okay",
    "soon",
    "process",
    "executed",
    "take",
    "source",
    "employee",
    "number",
    "check",
    "target",
    "table",
    "whether",
    "present",
    "present",
    "insert",
    "already",
    "present",
    "check",
    "change",
    "source",
    "target",
    "change",
    "uh",
    "know",
    "update",
    "specific",
    "columns",
    "target",
    "okay",
    "like",
    "happen",
    "srd",
    "type",
    "one",
    "next",
    "serie",
    "type",
    "two",
    "happen",
    "city",
    "type",
    "two",
    "employee",
    "number",
    "employee",
    "name",
    "address",
    "first",
    "time",
    "like",
    "source",
    "table",
    "let",
    "say",
    "source",
    "type",
    "2",
    "target",
    "another",
    "key",
    "column",
    "employee",
    "id",
    "top",
    "primary",
    "key",
    "constraint",
    "effective",
    "start",
    "date",
    "effective",
    "end",
    "date",
    "also",
    "okay",
    "also",
    "first",
    "time",
    "check",
    "source",
    "buy",
    "number",
    "present",
    "target",
    "insert",
    "record",
    "inserting",
    "eid",
    "primary",
    "key",
    "column",
    "identity",
    "defined",
    "eid",
    "column",
    "generate",
    "auto",
    "increment",
    "sequence",
    "number",
    "set",
    "top",
    "column",
    "take",
    "care",
    "generate",
    "sequence",
    "value",
    "1",
    "10",
    "10",
    "hyd",
    "come",
    "source",
    "effective",
    "started",
    "system",
    "date",
    "8",
    "24",
    "20",
    "21",
    "end",
    "date",
    "always",
    "1",
    "1",
    "double",
    "9",
    "double",
    "9",
    "future",
    "day",
    "okay",
    "like",
    "start",
    "date",
    "column",
    "load",
    "system",
    "date",
    "always",
    "future",
    "date",
    "type",
    "2",
    "next",
    "second",
    "record",
    "employee",
    "number",
    "20",
    "also",
    "exist",
    "also",
    "insert",
    "2",
    "20",
    "b",
    "blr",
    "one",
    "like",
    "insert",
    "employee",
    "number",
    "30",
    "also",
    "exist",
    "3",
    "30",
    "c",
    "cni",
    "one",
    "like",
    "first",
    "time",
    "none",
    "record",
    "present",
    "target",
    "table",
    "records",
    "etl",
    "process",
    "know",
    "extract",
    "transform",
    "load",
    "target",
    "data",
    "warehouse",
    "table",
    "sc",
    "type",
    "2",
    "target",
    "data",
    "warehouse",
    "table",
    "seeing",
    "like",
    "data",
    "maintain",
    "historical",
    "data",
    "second",
    "time",
    "let",
    "say",
    "employee",
    "hvac",
    "usa",
    "august",
    "25th",
    "okay",
    "record",
    "got",
    "august",
    "25th",
    "tomorrow",
    "executing",
    "mapping",
    "load",
    "data",
    "source",
    "target",
    "happen",
    "take",
    "source",
    "employee",
    "number",
    "check",
    "target",
    "whether",
    "present",
    "time",
    "already",
    "present",
    "already",
    "present",
    "change",
    "source",
    "target",
    "yes",
    "change",
    "source",
    "latest",
    "address",
    "usa",
    "present",
    "target",
    "table",
    "previous",
    "old",
    "address",
    "instead",
    "updating",
    "address",
    "update",
    "end",
    "date",
    "system",
    "date",
    "make",
    "record",
    "inactive",
    "okay",
    "update",
    "end",
    "date",
    "system",
    "date",
    "first",
    "etl",
    "process",
    "take",
    "care",
    "things",
    "know",
    "concept",
    "going",
    "maintain",
    "history",
    "updating",
    "system",
    "dates",
    "date",
    "8",
    "25",
    "let",
    "say",
    "since",
    "executing",
    "mapping",
    "next",
    "day",
    "updated",
    "system",
    "date",
    "latest",
    "updated",
    "record",
    "employee",
    "new",
    "record",
    "created",
    "sequence",
    "value",
    "generated",
    "employee",
    "number",
    "10",
    "usa",
    "825",
    "one",
    "one",
    "double",
    "nine",
    "double",
    "nine",
    "like",
    "insert",
    "okay",
    "next",
    "let",
    "say",
    "uh",
    "employee",
    "usa",
    "uk",
    "okay",
    "got",
    "update",
    "uk",
    "moved",
    "uk",
    "august",
    "30th",
    "got",
    "update",
    "august",
    "30th",
    "time",
    "check",
    "source",
    "target",
    "source",
    "empire",
    "number",
    "present",
    "time",
    "employee",
    "number",
    "10",
    "many",
    "rows",
    "present",
    "target",
    "two",
    "rows",
    "two",
    "rows",
    "make",
    "recorders",
    "inactive",
    "update",
    "fourth",
    "record",
    "active",
    "record",
    "call",
    "active",
    "record",
    "first",
    "row",
    "inactive",
    "record",
    "employee",
    "active",
    "record",
    "end",
    "date",
    "updated",
    "system",
    "date",
    "one",
    "update",
    "quick",
    "info",
    "guys",
    "intellipaat",
    "provides",
    "business",
    "intelligence",
    "masters",
    "program",
    "partnership",
    "microsoft",
    "course",
    "link",
    "given",
    "description",
    "let",
    "continue",
    "session",
    "system",
    "date",
    "date",
    "8",
    "30",
    "running",
    "load",
    "8",
    "30",
    "going",
    "8",
    "30",
    "new",
    "record",
    "going",
    "inserted",
    "employee",
    "5",
    "10",
    "ok",
    "8",
    "30",
    "1",
    "1",
    "double",
    "line",
    "double",
    "9",
    "like",
    "going",
    "center",
    "whenever",
    "insert",
    "system",
    "date",
    "future",
    "date",
    "okay",
    "next",
    "second",
    "third",
    "record",
    "change",
    "insert",
    "update",
    "fourth",
    "time",
    "new",
    "record",
    "comes",
    "employee",
    "number",
    "40",
    "record",
    "needs",
    "inserted",
    "fourth",
    "time",
    "load",
    "happens",
    "data",
    "going",
    "like",
    "table",
    "see",
    "440",
    "del",
    "record",
    "hair",
    "six",
    "sequence",
    "number",
    "next",
    "row",
    "six",
    "system",
    "let",
    "say",
    "8",
    "30",
    "going",
    "inserted",
    "like",
    "historical",
    "data",
    "maintained",
    "data",
    "warehouse",
    "next",
    "serie",
    "type",
    "3",
    "partial",
    "history",
    "see",
    "maintain",
    "partial",
    "history",
    "emp",
    "scd3",
    "underscore",
    "yes",
    "source",
    "table",
    "employee",
    "number",
    "employee",
    "name",
    "original",
    "address",
    "current",
    "address",
    "let",
    "say",
    "addressing",
    "two",
    "different",
    "columns",
    "okay",
    "address",
    "two",
    "different",
    "columns",
    "uh",
    "currently",
    "one",
    "hyd",
    "current",
    "order",
    "also",
    "hvad",
    "first",
    "time",
    "one",
    "column",
    "address",
    "target",
    "take",
    "two",
    "columns",
    "like",
    "source",
    "10",
    "hydr",
    "r",
    "30",
    "cc",
    "like",
    "source",
    "table",
    "whereas",
    "target",
    "table",
    "type",
    "3",
    "like",
    "uh",
    "original",
    "address",
    "current",
    "address",
    "okay",
    "original",
    "address",
    "current",
    "address",
    "want",
    "also",
    "created",
    "updated",
    "columns",
    "okay",
    "first",
    "time",
    "none",
    "record",
    "present",
    "target",
    "table",
    "three",
    "records",
    "needs",
    "inserted",
    "10",
    "ea",
    "original",
    "address",
    "also",
    "hrd",
    "current",
    "order",
    "also",
    "hyd",
    "also",
    "create",
    "date",
    "update",
    "date",
    "columns",
    "created",
    "today",
    "e24",
    "update",
    "also",
    "today",
    "date",
    "e24",
    "next",
    "second",
    "record",
    "20",
    "bblr",
    "blr",
    "824",
    "824",
    "okay",
    "next",
    "30",
    "c",
    "cmi",
    "also",
    "cli",
    "824",
    "824",
    "like",
    "know",
    "first",
    "time",
    "one",
    "records",
    "present",
    "records",
    "going",
    "inserted",
    "inside",
    "target",
    "table",
    "city",
    "type",
    "3",
    "next",
    "time",
    "let",
    "see",
    "got",
    "update",
    "okay",
    "employee",
    "hype",
    "usa",
    "got",
    "update",
    "update",
    "got",
    "august",
    "25th",
    "okay",
    "employee",
    "moved",
    "usa",
    "25th",
    "time",
    "let",
    "say",
    "executing",
    "data",
    "transformation",
    "happening",
    "25th",
    "case",
    "date",
    "25th",
    "take",
    "source",
    "employee",
    "number",
    "checking",
    "target",
    "table",
    "whether",
    "present",
    "since",
    "present",
    "check",
    "whether",
    "change",
    "source",
    "current",
    "address",
    "compare",
    "original",
    "source",
    "address",
    "current",
    "address",
    "two",
    "columns",
    "compare",
    "change",
    "yes",
    "update",
    "current",
    "address",
    "updated",
    "two",
    "columns",
    "update",
    "original",
    "address",
    "remain",
    "current",
    "address",
    "updating",
    "usa",
    "update",
    "uh",
    "like",
    "system",
    "date",
    "825",
    "second",
    "third",
    "record",
    "change",
    "insert",
    "update",
    "leave",
    "okay",
    "next",
    "let",
    "say",
    "got",
    "update",
    "employee",
    "usa",
    "uk",
    "source",
    "table",
    "got",
    "update",
    "let",
    "say",
    "got",
    "uk",
    "update",
    "got",
    "august",
    "30th",
    "compare",
    "check",
    "whether",
    "source",
    "employee",
    "number",
    "exist",
    "already",
    "present",
    "check",
    "change",
    "source",
    "target",
    "comparing",
    "compare",
    "current",
    "address",
    "source",
    "uk",
    "whereas",
    "target",
    "usa",
    "case",
    "take",
    "source",
    "address",
    "update",
    "source",
    "address",
    "target",
    "table",
    "current",
    "address",
    "column",
    "right",
    "updating",
    "uk",
    "also",
    "updating",
    "update",
    "date",
    "updated",
    "system",
    "date",
    "says",
    "date",
    "8",
    "25",
    "like",
    "8",
    "30",
    "updated",
    "okay",
    "second",
    "third",
    "record",
    "change",
    "right",
    "like",
    "updated",
    "case",
    "see",
    "hyd",
    "basically",
    "hyd",
    "moved",
    "usa",
    "okay",
    "moved",
    "uk",
    "transaction",
    "original",
    "transaction",
    "also",
    "latest",
    "transaction",
    "transaction",
    "data",
    "usa",
    "record",
    "original",
    "transaction",
    "also",
    "current",
    "transaction",
    "called",
    "cd",
    "type",
    "three",
    "okay",
    "columns",
    "suppose",
    "let",
    "say",
    "contract",
    "number",
    "saying",
    "contract",
    "number",
    "contract",
    "number",
    "numbers",
    "like",
    "something",
    "like",
    "also",
    "one",
    "column",
    "basically",
    "serie",
    "type",
    "three",
    "decide",
    "based",
    "column",
    "maintain",
    "partial",
    "history",
    "maintaining",
    "partial",
    "history",
    "based",
    "address",
    "column",
    "based",
    "personally",
    "deciding",
    "change",
    "source",
    "target",
    "okay",
    "type",
    "1",
    "type",
    "3",
    "difference",
    "see",
    "type",
    "1",
    "finally",
    "got",
    "update",
    "uk",
    "right",
    "uk",
    "present",
    "hyd",
    "usa",
    "original",
    "transaction",
    "also",
    "whereas",
    "type",
    "1",
    "original",
    "transaction",
    "reset",
    "transaction",
    "difference",
    "type",
    "1",
    "type",
    "3",
    "type",
    "1",
    "recent",
    "transaction",
    "whereas",
    "type",
    "3",
    "like",
    "original",
    "current",
    "transaction",
    "transaction",
    "three",
    "types",
    "know",
    "mainly",
    "slowly",
    "changing",
    "dimensions",
    "data",
    "warehouse",
    "next",
    "types",
    "facts",
    "facts",
    "also",
    "four",
    "types",
    "facts",
    "one",
    "additive",
    "fact",
    "second",
    "one",
    "semi",
    "fact",
    "third",
    "one",
    "fact",
    "fourth",
    "one",
    "fatless",
    "fat",
    "sodium",
    "fat",
    "contains",
    "primary",
    "keys",
    "dimensions",
    "also",
    "called",
    "foreign",
    "keys",
    "measurable",
    "data",
    "whereas",
    "one",
    "contains",
    "dimension",
    "primary",
    "case",
    "measurable",
    "columns",
    "measurable",
    "data",
    "fact",
    "contains",
    "primary",
    "use",
    "dimensions",
    "contains",
    "measurable",
    "data",
    "fact",
    "less",
    "fact",
    "contains",
    "primary",
    "keys",
    "dimensions",
    "measurable",
    "data",
    "fact",
    "star",
    "schema",
    "model",
    "fact",
    "called",
    "additive",
    "fact",
    "primary",
    "keys",
    "dimensions",
    "measurable",
    "data",
    "primary",
    "keys",
    "dimension",
    "inside",
    "fact",
    "okay",
    "whereas",
    "semi",
    "additive",
    "effect",
    "contains",
    "dimensions",
    "fact",
    "snowflake",
    "schema",
    "called",
    "semi",
    "additive",
    "fact",
    "semi",
    "additive",
    "fact",
    "contains",
    "dimension",
    "keys",
    "measurable",
    "data",
    "dimensions",
    "okay",
    "fact",
    "primary",
    "case",
    "dimensions",
    "measurable",
    "data",
    "means",
    "fact",
    "dimension",
    "keys",
    "connected",
    "dimensions",
    "contains",
    "measurable",
    "columns",
    "dimension",
    "keys",
    "fact",
    "contains",
    "measurable",
    "data",
    "primary",
    "case",
    "dimensions",
    "call",
    "fact",
    "okay",
    "factless",
    "fact",
    "factless",
    "fact",
    "primary",
    "keys",
    "dimensions",
    "measurable",
    "data",
    "dimension",
    "keys",
    "column",
    "measurable",
    "data",
    "type",
    "fact",
    "called",
    "factless",
    "fact",
    "fact",
    "data",
    "warehouse",
    "schema",
    "table",
    "contains",
    "measurable",
    "data",
    "uh",
    "primary",
    "case",
    "dimensions",
    "foreign",
    "nothing",
    "called",
    "fact",
    "data",
    "warehouse",
    "call",
    "fact",
    "next",
    "generally",
    "data",
    "marked",
    "contains",
    "specific",
    "department",
    "history",
    "whereas",
    "data",
    "warehouse",
    "contains",
    "enterprise",
    "level",
    "history",
    "enterprise",
    "level",
    "means",
    "departments",
    "historical",
    "data",
    "store",
    "data",
    "warehouse",
    "like",
    "store",
    "departments",
    "historical",
    "data",
    "called",
    "data",
    "warehouse",
    "store",
    "specific",
    "department",
    "history",
    "report",
    "based",
    "history",
    "store",
    "database",
    "called",
    "data",
    "marts",
    "n",
    "number",
    "data",
    "marks",
    "data",
    "venous",
    "one",
    "departments",
    "historical",
    "data",
    "enterprise",
    "level",
    "history",
    "data",
    "warehouse",
    "present",
    "data",
    "mods",
    "specific",
    "department",
    "level",
    "history",
    "okay",
    "finally",
    "data",
    "warehouse",
    "top",
    "bottom",
    "top",
    "approach",
    "top",
    "approach",
    "means",
    "oltp",
    "yltp",
    "ods",
    "staging",
    "data",
    "warehouse",
    "okay",
    "data",
    "warehouse",
    "load",
    "data",
    "different",
    "data",
    "mods",
    "called",
    "top",
    "approach",
    "okay",
    "oltp",
    "database",
    "ods",
    "database",
    "staging",
    "database",
    "data",
    "warehouse",
    "database",
    "data",
    "mods",
    "data",
    "mart",
    "one",
    "data",
    "mod",
    "2",
    "data",
    "mod",
    "3",
    "okay",
    "called",
    "top",
    "approach",
    "top",
    "data",
    "mods",
    "reports",
    "going",
    "generate",
    "report",
    "data",
    "warehouse",
    "call",
    "approach",
    "top",
    "approach",
    "whereas",
    "bottom",
    "top",
    "approach",
    "means",
    "instead",
    "loading",
    "data",
    "first",
    "data",
    "warehouse",
    "first",
    "load",
    "data",
    "mods",
    "staging",
    "also",
    "load",
    "data",
    "data",
    "mods",
    "data",
    "mod",
    "instead",
    "generating",
    "report",
    "top",
    "data",
    "mods",
    "load",
    "data",
    "data",
    "warehouse",
    "reports",
    "generated",
    "rare",
    "times",
    "top",
    "approach",
    "data",
    "warehouse",
    "data",
    "marts",
    "load",
    "data",
    "data",
    "warehouse",
    "top",
    "data",
    "warehouse",
    "reports",
    "going",
    "generated",
    "called",
    "bottom",
    "top",
    "approach",
    "okay",
    "generally",
    "top",
    "approach",
    "concepts",
    "data",
    "warehouse",
    "data",
    "mart",
    "nothing",
    "subset",
    "data",
    "values",
    "consider",
    "uh",
    "transactional",
    "database",
    "okay",
    "real",
    "time",
    "operational",
    "systems",
    "going",
    "load",
    "single",
    "stage",
    "data",
    "barriers",
    "many",
    "stages",
    "available",
    "okay",
    "oltp",
    "oil",
    "ap",
    "tran",
    "transfer",
    "rate",
    "data",
    "transfer",
    "definitely",
    "multiple",
    "stages",
    "available",
    "real",
    "time",
    "like",
    "staging",
    "staging",
    "area",
    "one",
    "stages",
    "etl",
    "process",
    "like",
    "land",
    "data",
    "different",
    "different",
    "oil",
    "system",
    "oltp",
    "system",
    "staging",
    "staging",
    "move",
    "data",
    "data",
    "barriers",
    "data",
    "values",
    "subset",
    "data",
    "values",
    "create",
    "either",
    "logically",
    "separate",
    "data",
    "much",
    "created",
    "data",
    "marks",
    "also",
    "database",
    "logically",
    "individ",
    "one",
    "terabyte",
    "hard",
    "disk",
    "divided",
    "like",
    "c",
    "type",
    "drive",
    "e",
    "drive",
    "way",
    "also",
    "logically",
    "divide",
    "data",
    "values",
    "one",
    "particular",
    "database",
    "multiple",
    "data",
    "mart",
    "data",
    "mart",
    "subject",
    "oriented",
    "informations",
    "based",
    "business",
    "consider",
    "two",
    "difference",
    "data",
    "values",
    "data",
    "mart",
    "data",
    "values",
    "enterprise",
    "data",
    "okay",
    "enterprise",
    "data",
    "data",
    "mart",
    "particular",
    "subject",
    "department",
    "data",
    "multiple",
    "subject",
    "areas",
    "available",
    "particular",
    "data",
    "values",
    "single",
    "subject",
    "area",
    "data",
    "mod",
    "single",
    "subject",
    "area",
    "multiple",
    "data",
    "sources",
    "definitely",
    "multiple",
    "multiple",
    "data",
    "sources",
    "uh",
    "accumulate",
    "data",
    "integrate",
    "data",
    "paragraphs",
    "limited",
    "data",
    "source",
    "might",
    "might",
    "source",
    "data",
    "mart",
    "need",
    "etl",
    "process",
    "fetch",
    "data",
    "database",
    "goes",
    "data",
    "mart",
    "used",
    "one",
    "etl",
    "process",
    "etl",
    "tool",
    "uh",
    "introduced",
    "occupy",
    "large",
    "memory",
    "okay",
    "data",
    "values",
    "occupy",
    "large",
    "memory",
    "data",
    "mark",
    "occupy",
    "limited",
    "memory",
    "take",
    "lot",
    "lot",
    "time",
    "implement",
    "database",
    "data",
    "march",
    "take",
    "shorter",
    "time",
    "implement",
    "major",
    "difference",
    "data",
    "match",
    "data",
    "values",
    "different",
    "types",
    "data",
    "march",
    "real",
    "time",
    "example",
    "three",
    "different",
    "types",
    "data",
    "mods",
    "available",
    "first",
    "types",
    "data",
    "mark",
    "independent",
    "data",
    "mart",
    "okay",
    "dependent",
    "data",
    "mart",
    "independent",
    "data",
    "mart",
    "hybrid",
    "data",
    "mart",
    "meant",
    "independent",
    "data",
    "mart",
    "oltp",
    "systems",
    "oltp",
    "moving",
    "data",
    "data",
    "variables",
    "vargos",
    "fetching",
    "data",
    "data",
    "mode",
    "called",
    "dependent",
    "data",
    "match",
    "reactor",
    "mark",
    "dependent",
    "data",
    "values",
    "okay",
    "variables",
    "pulling",
    "data",
    "data",
    "first",
    "extracted",
    "oltp",
    "system",
    "populated",
    "data",
    "mart",
    "central",
    "data",
    "bar",
    "goes",
    "data",
    "marked",
    "variables",
    "data",
    "travels",
    "data",
    "mod",
    "independent",
    "data",
    "merge",
    "data",
    "various",
    "available",
    "okay",
    "directly",
    "data",
    "marked",
    "loaded",
    "oltp",
    "source",
    "called",
    "independent",
    "data",
    "merge",
    "hybrid",
    "data",
    "marked",
    "hybrid",
    "data",
    "match",
    "data",
    "mark",
    "get",
    "data",
    "either",
    "oltp",
    "system",
    "database",
    "system",
    "three",
    "different",
    "data",
    "part",
    "available",
    "data",
    "values",
    "data",
    "modeling",
    "data",
    "modeling",
    "nothing",
    "example",
    "business",
    "users",
    "give",
    "us",
    "business",
    "related",
    "terms",
    "okay",
    "business",
    "related",
    "uh",
    "terminologies",
    "knows",
    "knows",
    "business",
    "wants",
    "convert",
    "business",
    "model",
    "okay",
    "data",
    "model",
    "convert",
    "different",
    "methodology",
    "draw",
    "okay",
    "create",
    "data",
    "model",
    "three",
    "different",
    "method",
    "one",
    "called",
    "conceptual",
    "model",
    "logical",
    "model",
    "physical",
    "data",
    "model",
    "mean",
    "conceptual",
    "model",
    "create",
    "conceptual",
    "model",
    "logical",
    "model",
    "physical",
    "model",
    "see",
    "one",
    "one",
    "assume",
    "going",
    "create",
    "data",
    "model",
    "one",
    "particular",
    "particular",
    "online",
    "portal",
    "something",
    "okay",
    "online",
    "portal",
    "online",
    "product",
    "uh",
    "selling",
    "portal",
    "going",
    "create",
    "online",
    "portal",
    "right",
    "definitely",
    "uh",
    "need",
    "tables",
    "order",
    "customers",
    "informations",
    "need",
    "customer",
    "table",
    "order",
    "maintain",
    "employees",
    "details",
    "employees",
    "tables",
    "order",
    "maintain",
    "customers",
    "accounts",
    "accounts",
    "table",
    "order",
    "maintain",
    "product",
    "information",
    "product",
    "region",
    "table",
    "different",
    "regions",
    "sales",
    "analyze",
    "region",
    "performing",
    "well",
    "analyze",
    "product",
    "performing",
    "well",
    "account",
    "transferring",
    "money",
    "transaction",
    "money",
    "employee",
    "well",
    "okay",
    "performance",
    "customers",
    "okay",
    "like",
    "like",
    "lot",
    "tables",
    "involved",
    "data",
    "modeling",
    "consider",
    "tables",
    "countries",
    "table",
    "regions",
    "table",
    "accounts",
    "table",
    "merchant",
    "table",
    "lot",
    "tables",
    "available",
    "okay",
    "customer",
    "table",
    "customer",
    "identified",
    "customer",
    "id",
    "id",
    "call",
    "primary",
    "key",
    "database",
    "okay",
    "information",
    "customer",
    "example",
    "customer",
    "name",
    "customer",
    "name",
    "might",
    "duplicator",
    "okay",
    "two",
    "customers",
    "may",
    "name",
    "customer",
    "id",
    "different",
    "customer",
    "mobile",
    "number",
    "okay",
    "get",
    "customer",
    "mobile",
    "number",
    "give",
    "update",
    "mobile",
    "number",
    "get",
    "data",
    "customer",
    "identify",
    "analyze",
    "age",
    "customers",
    "type",
    "customers",
    "age",
    "group",
    "customers",
    "ordering",
    "product",
    "okay",
    "order",
    "get",
    "need",
    "data",
    "birth",
    "get",
    "address",
    "customers",
    "location",
    "customers",
    "ordering",
    "city",
    "customer",
    "country",
    "customer",
    "working",
    "different",
    "countries",
    "called",
    "different",
    "dimensions",
    "okay",
    "different",
    "dimensions",
    "customers",
    "consider",
    "customer",
    "one",
    "table",
    "customer",
    "id",
    "primary",
    "key",
    "primary",
    "key",
    "sense",
    "allow",
    "duplicate",
    "columns",
    "primary",
    "key",
    "customer",
    "name",
    "mobile",
    "number",
    "data",
    "different",
    "dimensions",
    "customers",
    "dimension",
    "table",
    "employee",
    "table",
    "way",
    "employee",
    "id",
    "employee",
    "name",
    "mobile",
    "number",
    "employee",
    "skill",
    "set",
    "employees",
    "experience",
    "employee",
    "city",
    "address",
    "get",
    "account",
    "account",
    "number",
    "primary",
    "key",
    "type",
    "account",
    "active",
    "account",
    "inactive",
    "account",
    "different",
    "different",
    "details",
    "get",
    "accounts",
    "tables",
    "diamonds",
    "tables",
    "okay",
    "different",
    "dimensions",
    "data",
    "using",
    "dimensions",
    "going",
    "create",
    "sales",
    "okay",
    "sales",
    "table",
    "called",
    "pack",
    "table",
    "sense",
    "fact",
    "table",
    "key",
    "values",
    "customer",
    "ordered",
    "product",
    "okay",
    "employees",
    "helped",
    "purchase",
    "product",
    "employee",
    "id",
    "okay",
    "product",
    "purchased",
    "product",
    "id",
    "account",
    "account",
    "number",
    "okay",
    "account",
    "number",
    "purchased",
    "region",
    "purchased",
    "product",
    "end",
    "day",
    "want",
    "analyze",
    "summarized",
    "data",
    "regions",
    "region",
    "performing",
    "well",
    "okay",
    "merchant",
    "performing",
    "well",
    "merchant",
    "id",
    "way",
    "get",
    "key",
    "values",
    "table",
    "okay",
    "key",
    "values",
    "table",
    "key",
    "values",
    "called",
    "foreign",
    "keys",
    "okay",
    "integrity",
    "maintain",
    "integrity",
    "foreign",
    "keys",
    "normalization",
    "see",
    "primary",
    "foreign",
    "key",
    "unders",
    "understand",
    "uh",
    "foreign",
    "key",
    "primary",
    "key",
    "relationship",
    "column",
    "called",
    "foreign",
    "key",
    "reference",
    "coming",
    "base",
    "table",
    "dimension",
    "table",
    "like",
    "diamond",
    "fact",
    "table",
    "keys",
    "quantity",
    "much",
    "quantity",
    "purchased",
    "product",
    "okay",
    "example",
    "two",
    "qualities",
    "purchased",
    "one",
    "quantity",
    "unit",
    "price",
    "one",
    "quantity",
    "unit",
    "price",
    "total",
    "quantity",
    "yes",
    "persist",
    "total",
    "price",
    "one",
    "quantity",
    "two",
    "quantity",
    "purchased",
    "one",
    "quantity",
    "100",
    "total",
    "price",
    "200",
    "okay",
    "three",
    "call",
    "measures",
    "measurable",
    "values",
    "three",
    "called",
    "measures",
    "measurable",
    "values",
    "column",
    "called",
    "dimensions",
    "like",
    "foreign",
    "keys",
    "maintained",
    "fact",
    "table",
    "fact",
    "table",
    "f",
    "underscore",
    "sales",
    "fact",
    "table",
    "fact",
    "table",
    "derived",
    "dimension",
    "table",
    "customers",
    "customers",
    "information",
    "employee",
    "keep",
    "customers",
    "information",
    "keep",
    "customer",
    "id",
    "customer",
    "purchased",
    "employee",
    "purchased",
    "help",
    "purchase",
    "product",
    "purchased",
    "account",
    "number",
    "account",
    "purchased",
    "region",
    "id",
    "merchandise",
    "order",
    "want",
    "get",
    "particular",
    "total",
    "sales",
    "day",
    "even",
    "use",
    "date",
    "key",
    "okay",
    "date",
    "id",
    "update",
    "key",
    "date",
    "date",
    "dimensions",
    "get",
    "date",
    "date",
    "combine",
    "sum",
    "total",
    "price",
    "particular",
    "day",
    "get",
    "merchant",
    "ranking",
    "go",
    "merchant",
    "id",
    "join",
    "merchant",
    "table",
    "get",
    "merchant",
    "highest",
    "sales",
    "today",
    "fact",
    "dimension",
    "tables",
    "related",
    "data",
    "modeling",
    "three",
    "different",
    "types",
    "one",
    "conceptual",
    "model",
    "logical",
    "model",
    "physical",
    "model",
    "conceptual",
    "model",
    "concept",
    "okay",
    "business",
    "concept",
    "okay",
    "want",
    "create",
    "data",
    "model",
    "particular",
    "business",
    "okay",
    "take",
    "online",
    "food",
    "delivering",
    "uh",
    "business",
    "okay",
    "online",
    "food",
    "delivery",
    "business",
    "one",
    "con",
    "concept",
    "want",
    "draw",
    "model",
    "data",
    "model",
    "tables",
    "needed",
    "food",
    "delivering",
    "particular",
    "business",
    "time",
    "okay",
    "date",
    "time",
    "dimensions",
    "product",
    "okay",
    "different",
    "product",
    "different",
    "store",
    "purchase",
    "products",
    "whatever",
    "diamonds",
    "tables",
    "needed",
    "particular",
    "business",
    "draw",
    "dimension",
    "tables",
    "like",
    "time",
    "dimensions",
    "product",
    "store",
    "regions",
    "merchant",
    "account",
    "whatever",
    "dimensions",
    "want",
    "draw",
    "dimensions",
    "name",
    "okay",
    "name",
    "need",
    "mention",
    "detailed",
    "informations",
    "okay",
    "called",
    "entities",
    "entities",
    "nothing",
    "tables",
    "technical",
    "word",
    "stable",
    "conceptual",
    "data",
    "model",
    "call",
    "entity",
    "entities",
    "going",
    "entities",
    "going",
    "draw",
    "okay",
    "includes",
    "important",
    "entities",
    "relationship",
    "among",
    "okay",
    "relationship",
    "going",
    "create",
    "tables",
    "like",
    "divided",
    "two",
    "parts",
    "one",
    "upper",
    "path",
    "primary",
    "keys",
    "whatever",
    "keys",
    "want",
    "example",
    "product",
    "product",
    "table",
    "might",
    "product",
    "id",
    "store",
    "table",
    "store",
    "80",
    "sales",
    "table",
    "foreign",
    "keys",
    "conceptual",
    "diagram",
    "write",
    "write",
    "attributes",
    "attributes",
    "nothing",
    "column",
    "names",
    "since",
    "conceptual",
    "data",
    "model",
    "going",
    "write",
    "primary",
    "keys",
    "foreign",
    "keys",
    "mentioning",
    "entity",
    "names",
    "entities",
    "related",
    "called",
    "conceptual",
    "model",
    "sing",
    "simple",
    "paper",
    "paint",
    "pen",
    "draw",
    "paint",
    "okay",
    "drag",
    "drop",
    "conceptual",
    "data",
    "model",
    "conceptual",
    "data",
    "model",
    "highly",
    "abstract",
    "okay",
    "highly",
    "abstract",
    "uh",
    "column",
    "names",
    "column",
    "names",
    "easily",
    "understood",
    "okay",
    "easily",
    "understood",
    "uh",
    "every",
    "model",
    "conceptual",
    "data",
    "model",
    "highly",
    "abstract",
    "okay",
    "uh",
    "attributes",
    "names",
    "attributes",
    "name",
    "sense",
    "field",
    "name",
    "column",
    "names",
    "easily",
    "understand",
    "easily",
    "enhance",
    "add",
    "entities",
    "particular",
    "model",
    "okay",
    "entities",
    "visible",
    "write",
    "uh",
    "like",
    "first",
    "step",
    "data",
    "model",
    "entities",
    "entities",
    "drop",
    "relationship",
    "tables",
    "entities",
    "software",
    "tool",
    "required",
    "define",
    "conceptual",
    "data",
    "model",
    "since",
    "concept",
    "need",
    "software",
    "draw",
    "one",
    "conceptual",
    "data",
    "model",
    "time",
    "product",
    "sales",
    "store",
    "regions",
    "account",
    "merchant",
    "n",
    "number",
    "tables",
    "connected",
    "uh",
    "fact",
    "tables",
    "fact",
    "tables",
    "might",
    "connected",
    "different",
    "dimension",
    "tables",
    "well",
    "called",
    "concept",
    "conceptual",
    "data",
    "model",
    "logical",
    "data",
    "model",
    "logical",
    "meta",
    "model",
    "enhanced",
    "conceptual",
    "data",
    "model",
    "first",
    "step",
    "write",
    "draw",
    "conceptual",
    "data",
    "model",
    "conceptual",
    "data",
    "model",
    "primary",
    "key",
    "use",
    "okay",
    "definitely",
    "entity",
    "need",
    "primary",
    "key",
    "time",
    "dimensions",
    "date",
    "primary",
    "key",
    "date",
    "key",
    "product",
    "obviously",
    "product",
    "id",
    "like",
    "description",
    "column",
    "column",
    "name",
    "exact",
    "column",
    "name",
    "write",
    "simply",
    "write",
    "product",
    "id",
    "okay",
    "space",
    "also",
    "column",
    "name",
    "definitely",
    "attribute",
    "name",
    "definitely",
    "write",
    "underscore",
    "since",
    "description",
    "write",
    "okay",
    "date",
    "descriptions",
    "month",
    "descriptions",
    "year",
    "go",
    "whatever",
    "attributes",
    "want",
    "attributes",
    "product",
    "table",
    "products",
    "entity",
    "product",
    "id",
    "product",
    "description",
    "category",
    "category",
    "descriptions",
    "unit",
    "price",
    "created",
    "time",
    "updated",
    "time",
    "sales",
    "store",
    "right",
    "store",
    "id",
    "store",
    "descriptions",
    "region",
    "store",
    "region",
    "name",
    "created",
    "date",
    "updated",
    "store",
    "told",
    "upper",
    "part",
    "fact",
    "table",
    "foreign",
    "keys",
    "store",
    "table",
    "store",
    "id",
    "product",
    "table",
    "product",
    "id",
    "date",
    "time",
    "table",
    "date",
    "key",
    "item",
    "sold",
    "item",
    "amount",
    "told",
    "right",
    "measures",
    "message",
    "foreign",
    "keys",
    "messages",
    "fact",
    "table",
    "item",
    "sold",
    "quantity",
    "sales",
    "amount",
    "price",
    "two",
    "called",
    "measures",
    "okay",
    "foreign",
    "keys",
    "measures",
    "maintained",
    "fact",
    "table",
    "maintain",
    "logical",
    "data",
    "model",
    "write",
    "exact",
    "column",
    "names",
    "write",
    "primary",
    "keys",
    "simply",
    "mention",
    "column",
    "description",
    "includes",
    "entities",
    "relationship",
    "among",
    "attributes",
    "attributes",
    "cells",
    "column",
    "names",
    "attributes",
    "entity",
    "specified",
    "primary",
    "key",
    "entity",
    "specified",
    "foreign",
    "key",
    "also",
    "identified",
    "specified",
    "fact",
    "table",
    "normalization",
    "occurs",
    "level",
    "normalization",
    "sense",
    "okay",
    "example",
    "store",
    "table",
    "assuming",
    "store",
    "table",
    "region",
    "region",
    "name",
    "okay",
    "split",
    "store",
    "table",
    "one",
    "table",
    "okay",
    "consider",
    "called",
    "normalization",
    "anyhow",
    "going",
    "see",
    "tomorrow",
    "consider",
    "one",
    "table",
    "region",
    "table",
    "creating",
    "region",
    "table",
    "creating",
    "okay",
    "region",
    "table",
    "going",
    "delete",
    "two",
    "fields",
    "table",
    "teacher",
    "id",
    "okay",
    "region",
    "id",
    "column",
    "region",
    "id",
    "connected",
    "region",
    "id",
    "table",
    "region",
    "id",
    "register",
    "id",
    "region",
    "name",
    "single",
    "dimension",
    "table",
    "splitted",
    "dimension",
    "table",
    "avoid",
    "data",
    "redundancy",
    "avoid",
    "data",
    "redundancy",
    "particular",
    "store",
    "okay",
    "particular",
    "store",
    "different",
    "different",
    "regions",
    "okay",
    "different",
    "different",
    "regions",
    "single",
    "region",
    "multiple",
    "store",
    "100",
    "stores",
    "single",
    "regions",
    "100",
    "regions",
    "informations",
    "100",
    "times",
    "region",
    "names",
    "repeated",
    "avoid",
    "region",
    "id",
    "take",
    "region",
    "name",
    "one",
    "time",
    "region",
    "id",
    "region",
    "data",
    "redundancy",
    "avoid",
    "using",
    "normalization",
    "called",
    "normalization",
    "normalization",
    "occurs",
    "level",
    "possibility",
    "normalization",
    "tables",
    "split",
    "table",
    "multiple",
    "tables",
    "called",
    "logical",
    "data",
    "model",
    "presence",
    "attributes",
    "definitely",
    "attributes",
    "present",
    "entity",
    "key",
    "attributes",
    "primary",
    "foreign",
    "key",
    "attributes",
    "description",
    "right",
    "attributes",
    "attributes",
    "date",
    "key",
    "attribute",
    "product",
    "id",
    "key",
    "attributes",
    "primary",
    "key",
    "foreign",
    "key",
    "relationship",
    "definitely",
    "primary",
    "foreign",
    "key",
    "relationship",
    "user",
    "friendly",
    "attribute",
    "names",
    "descriptions",
    "need",
    "primary",
    "foreign",
    "key",
    "sorry",
    "need",
    "entire",
    "column",
    "name",
    "simply",
    "descriptions",
    "detailed",
    "conceptual",
    "model",
    "column",
    "names",
    "right",
    "edwin",
    "data",
    "modeling",
    "tool",
    "power",
    "designer",
    "okay",
    "used",
    "create",
    "logical",
    "data",
    "models",
    "data",
    "model",
    "going",
    "create",
    "automatically",
    "converted",
    "physical",
    "data",
    "model",
    "help",
    "tool",
    "create",
    "logical",
    "data",
    "model",
    "model",
    "ervin",
    "tool",
    "convert",
    "model",
    "physical",
    "data",
    "model",
    "okay",
    "create",
    "table",
    "names",
    "create",
    "columns",
    "physical",
    "data",
    "model",
    "see",
    "every",
    "table",
    "column",
    "attributes",
    "well",
    "data",
    "type",
    "attributes",
    "data",
    "length",
    "attributes",
    "okay",
    "example",
    "consider",
    "one",
    "uh",
    "table",
    "time",
    "table",
    "okay",
    "table",
    "name",
    "uh",
    "mentioned",
    "dim",
    "underscore",
    "time",
    "dim",
    "nothing",
    "dim",
    "nothing",
    "dimensions",
    "dim",
    "underscore",
    "time",
    "dem",
    "underscore",
    "product",
    "fact",
    "fact",
    "underscore",
    "sales",
    "told",
    "uh",
    "sales",
    "table",
    "fact",
    "table",
    "actual",
    "format",
    "give",
    "okay",
    "deem",
    "underscore",
    "store",
    "dimension",
    "table",
    "dimension",
    "tables",
    "connected",
    "uh",
    "fact",
    "table",
    "see",
    "column",
    "names",
    "underscore",
    "underscore",
    "exact",
    "column",
    "name",
    "okay",
    "data",
    "type",
    "example",
    "integer",
    "vector",
    "much",
    "data",
    "length",
    "also",
    "provided",
    "detailed",
    "logical",
    "uh",
    "model",
    "logical",
    "model",
    "physical",
    "model",
    "automatically",
    "drawn",
    "using",
    "data",
    "modeling",
    "tool",
    "admin",
    "tool",
    "give",
    "airplane",
    "tool",
    "give",
    "model",
    "automatically",
    "convert",
    "model",
    "okay",
    "model",
    "data",
    "fact",
    "underscore",
    "sales",
    "definitely",
    "uh",
    "fact",
    "tables",
    "foreign",
    "keys",
    "also",
    "integer",
    "integer",
    "integer",
    "integer",
    "float",
    "mostly",
    "id",
    "columns",
    "key",
    "columns",
    "dimensions",
    "see",
    "specification",
    "tables",
    "columns",
    "maintained",
    "physical",
    "data",
    "model",
    "foreign",
    "keys",
    "used",
    "identify",
    "relationship",
    "tables",
    "normalization",
    "may",
    "occur",
    "okay",
    "denormalization",
    "sense",
    "splitted",
    "tables",
    "right",
    "two",
    "tables",
    "might",
    "merge",
    "two",
    "tables",
    "single",
    "table",
    "necessary",
    "denomination",
    "based",
    "requirement",
    "physical",
    "consideration",
    "may",
    "cause",
    "physical",
    "data",
    "model",
    "okay",
    "quite",
    "different",
    "logical",
    "data",
    "model",
    "physical",
    "data",
    "model",
    "create",
    "okay",
    "uh",
    "differ",
    "database",
    "teradata",
    "might",
    "backer",
    "okay",
    "integer",
    "big",
    "integer",
    "okay",
    "oracle",
    "integer",
    "might",
    "number",
    "worker",
    "might",
    "webcast",
    "2",
    "okay",
    "different",
    "different",
    "databases",
    "whenever",
    "airbender",
    "tool",
    "create",
    "logical",
    "data",
    "model",
    "select",
    "database",
    "going",
    "apply",
    "select",
    "oracle",
    "based",
    "particular",
    "database",
    "convert",
    "logical",
    "physical",
    "data",
    "model",
    "physical",
    "data",
    "model",
    "create",
    "uh",
    "entities",
    "referred",
    "tables",
    "call",
    "since",
    "physical",
    "table",
    "going",
    "make",
    "terminologies",
    "table",
    "okay",
    "call",
    "entity",
    "call",
    "table",
    "attributes",
    "referred",
    "column",
    "database",
    "compatible",
    "table",
    "uh",
    "database",
    "compatible",
    "table",
    "names",
    "database",
    "compatible",
    "column",
    "names",
    "need",
    "provide",
    "database",
    "specific",
    "data",
    "types",
    "also",
    "mentioned",
    "difficult",
    "user",
    "understand",
    "technical",
    "knowledge",
    "somewhat",
    "difficult",
    "understand",
    "seeing",
    "able",
    "understand",
    "column",
    "names",
    "overall",
    "able",
    "understand",
    "detail",
    "level",
    "could",
    "able",
    "understand",
    "create",
    "index",
    "constraint",
    "triggers",
    "db",
    "objects",
    "physical",
    "data",
    "model",
    "create",
    "table",
    "structure",
    "created",
    "automatically",
    "period",
    "physical",
    "data",
    "model",
    "okay",
    "using",
    "tool",
    "tool",
    "create",
    "automated",
    "automatically",
    "logical",
    "data",
    "model",
    "physical",
    "data",
    "model",
    "different",
    "versions",
    "different",
    "database",
    "servers",
    "okay",
    "concept",
    "three",
    "different",
    "data",
    "model",
    "let",
    "us",
    "get",
    "interview",
    "questions",
    "first",
    "question",
    "compare",
    "database",
    "data",
    "warehouse",
    "obvious",
    "differences",
    "two",
    "instance",
    "type",
    "data",
    "used",
    "databases",
    "include",
    "relational",
    "object",
    "oriented",
    "data",
    "data",
    "warehouse",
    "since",
    "getting",
    "data",
    "multiple",
    "sources",
    "large",
    "volume",
    "data",
    "well",
    "multiple",
    "data",
    "types",
    "data",
    "operations",
    "aspect",
    "databases",
    "deal",
    "transactional",
    "processing",
    "data",
    "warehouses",
    "deal",
    "data",
    "modeling",
    "analysis",
    "dimension",
    "data",
    "databases",
    "two",
    "dimensional",
    "dealing",
    "tables",
    "essentially",
    "2d",
    "arrays",
    "data",
    "warehouses",
    "data",
    "could",
    "3d",
    "4d",
    "data",
    "design",
    "databases",
    "er",
    "based",
    "application",
    "oriented",
    "database",
    "design",
    "data",
    "warehouses",
    "star",
    "snowflake",
    "schema",
    "subject",
    "oriented",
    "database",
    "design",
    "size",
    "data",
    "databases",
    "traditional",
    "databases",
    "big",
    "data",
    "databases",
    "small",
    "usually",
    "maximum",
    "gigabytes",
    "data",
    "warehouses",
    "terabytes",
    "functionality",
    "databases",
    "high",
    "availability",
    "performance",
    "data",
    "warehouse",
    "high",
    "flexibility",
    "user",
    "autonomy",
    "going",
    "performing",
    "lot",
    "analysis",
    "data",
    "warehouse",
    "moving",
    "question",
    "number",
    "two",
    "purpose",
    "cluster",
    "analysis",
    "data",
    "warehousing",
    "one",
    "purposes",
    "cluster",
    "analysis",
    "achieve",
    "scalability",
    "regardless",
    "quantity",
    "data",
    "able",
    "analyze",
    "ability",
    "deal",
    "different",
    "kinds",
    "attributes",
    "matter",
    "data",
    "type",
    "attributes",
    "present",
    "data",
    "set",
    "able",
    "deal",
    "discovery",
    "clusters",
    "attribute",
    "shape",
    "high",
    "dimensionality",
    "means",
    "multiple",
    "dimensions",
    "2d",
    "precise",
    "ability",
    "deal",
    "noise",
    "inconsistencies",
    "data",
    "able",
    "deal",
    "interpretability",
    "moving",
    "question",
    "number",
    "three",
    "difference",
    "agglomerative",
    "divisive",
    "hierarchical",
    "clustering",
    "agglomerative",
    "hierarchical",
    "constraining",
    "method",
    "allows",
    "clusters",
    "read",
    "bottom",
    "top",
    "program",
    "always",
    "reads",
    "sub",
    "component",
    "first",
    "moves",
    "parent",
    "upward",
    "direction",
    "whereas",
    "divisive",
    "hierarchical",
    "clustering",
    "uses",
    "top",
    "bottom",
    "approach",
    "parent",
    "visited",
    "first",
    "child",
    "agglomerative",
    "hierarchical",
    "method",
    "consists",
    "objects",
    "object",
    "creates",
    "clusters",
    "clusters",
    "grouped",
    "together",
    "form",
    "larger",
    "cluster",
    "also",
    "process",
    "continuous",
    "merging",
    "single",
    "clusters",
    "merged",
    "together",
    "complete",
    "big",
    "cluster",
    "consist",
    "objects",
    "chart",
    "clusters",
    "however",
    "divisive",
    "clustering",
    "parent",
    "cluster",
    "divided",
    "smaller",
    "clusters",
    "keeps",
    "dividing",
    "cluster",
    "singular",
    "object",
    "represent",
    "moving",
    "question",
    "number",
    "four",
    "explain",
    "chameleon",
    "method",
    "used",
    "data",
    "warehousing",
    "chameleon",
    "methodology",
    "hierarchical",
    "clustering",
    "algorithm",
    "overcomes",
    "limitations",
    "existing",
    "models",
    "methods",
    "data",
    "warehousing",
    "method",
    "operates",
    "sparse",
    "graph",
    "nodes",
    "represent",
    "data",
    "items",
    "edges",
    "represent",
    "weights",
    "data",
    "items",
    "representation",
    "allows",
    "large",
    "data",
    "sets",
    "created",
    "operated",
    "successfully",
    "method",
    "finds",
    "clusters",
    "used",
    "data",
    "set",
    "using",
    "algorithm",
    "first",
    "phase",
    "consists",
    "graph",
    "partitioning",
    "allows",
    "clustering",
    "data",
    "items",
    "larger",
    "number",
    "subclusters",
    "second",
    "phase",
    "hand",
    "uses",
    "agglomerative",
    "hierarchical",
    "clustering",
    "algorithm",
    "search",
    "clusters",
    "genuine",
    "combined",
    "together",
    "sub",
    "clusters",
    "produced",
    "moving",
    "question",
    "number",
    "five",
    "virtual",
    "data",
    "warehousing",
    "virtual",
    "data",
    "warehouse",
    "provides",
    "collective",
    "view",
    "completed",
    "data",
    "warehouse",
    "virtual",
    "data",
    "warehouse",
    "historic",
    "data",
    "considered",
    "logical",
    "data",
    "model",
    "given",
    "metadata",
    "virtual",
    "data",
    "warehousing",
    "de",
    "facto",
    "information",
    "system",
    "strategy",
    "supporting",
    "analytical",
    "decision",
    "making",
    "one",
    "best",
    "ways",
    "translating",
    "raw",
    "data",
    "presenting",
    "form",
    "used",
    "decision",
    "makers",
    "provides",
    "semantic",
    "map",
    "allows",
    "end",
    "user",
    "well",
    "viewing",
    "data",
    "virtualized",
    "moving",
    "question",
    "number",
    "six",
    "need",
    "understand",
    "active",
    "data",
    "warehousing",
    "active",
    "data",
    "warehouse",
    "represents",
    "single",
    "state",
    "business",
    "active",
    "data",
    "warehousing",
    "considers",
    "analytical",
    "perspectives",
    "customers",
    "suppliers",
    "quick",
    "info",
    "guys",
    "intellipaat",
    "provides",
    "business",
    "intelligence",
    "masters",
    "program",
    "partnership",
    "microsoft",
    "course",
    "link",
    "given",
    "description",
    "let",
    "continue",
    "session",
    "helps",
    "deliver",
    "updated",
    "data",
    "reports",
    "common",
    "form",
    "data",
    "warehousing",
    "used",
    "businesses",
    "large",
    "businesses",
    "specific",
    "deal",
    "industry",
    "commerce",
    "form",
    "repository",
    "captured",
    "transactional",
    "data",
    "known",
    "active",
    "data",
    "warehousing",
    "using",
    "concept",
    "trends",
    "patterns",
    "found",
    "used",
    "future",
    "decision",
    "making",
    "based",
    "analytical",
    "results",
    "get",
    "data",
    "warehouse",
    "perform",
    "business",
    "decisions",
    "active",
    "data",
    "warehouse",
    "feature",
    "integrate",
    "changes",
    "data",
    "scheduled",
    "cycles",
    "refresh",
    "enterprises",
    "utilize",
    "active",
    "data",
    "warehouse",
    "drawing",
    "company",
    "image",
    "statistical",
    "manner",
    "everything",
    "essentially",
    "get",
    "combination",
    "data",
    "present",
    "various",
    "data",
    "sources",
    "combine",
    "together",
    "perform",
    "analytics",
    "get",
    "insights",
    "business",
    "decisions",
    "snapshot",
    "reference",
    "data",
    "warehouse",
    "snapshots",
    "pretty",
    "common",
    "software",
    "especially",
    "databases",
    "essentially",
    "name",
    "suggests",
    "snapshot",
    "refers",
    "complete",
    "visualization",
    "data",
    "time",
    "extraction",
    "occupies",
    "less",
    "space",
    "used",
    "backup",
    "restore",
    "data",
    "quickly",
    "essentially",
    "snapshot",
    "data",
    "warehouse",
    "want",
    "create",
    "backup",
    "using",
    "data",
    "warehouse",
    "catalog",
    "creating",
    "report",
    "report",
    "generated",
    "shown",
    "soon",
    "disconnect",
    "data",
    "warehouse",
    "number",
    "eight",
    "xmla",
    "xmla",
    "xml",
    "analysis",
    "used",
    "considered",
    "standard",
    "accessing",
    "data",
    "olap",
    "method",
    "data",
    "mining",
    "data",
    "sources",
    "internet",
    "simple",
    "object",
    "access",
    "protocol",
    "xmla",
    "uses",
    "discover",
    "execute",
    "methods",
    "discover",
    "fetch",
    "information",
    "internet",
    "execute",
    "allows",
    "application",
    "execute",
    "data",
    "sources",
    "present",
    "xmla",
    "industry",
    "standard",
    "accessing",
    "data",
    "analytical",
    "systems",
    "olap",
    "based",
    "xml",
    "soap",
    "http",
    "xmla",
    "specifies",
    "mdxml",
    "query",
    "language",
    "xmla",
    "version",
    "construct",
    "md",
    "xml",
    "mdx",
    "statement",
    "enclosed",
    "tag",
    "moving",
    "question",
    "number",
    "nine",
    "ods",
    "ods",
    "database",
    "designed",
    "integrate",
    "data",
    "multiple",
    "sources",
    "additional",
    "operations",
    "data",
    "full",
    "form",
    "ods",
    "operational",
    "data",
    "source",
    "unlike",
    "master",
    "data",
    "source",
    "data",
    "sent",
    "back",
    "operational",
    "systems",
    "may",
    "passed",
    "operations",
    "data",
    "warehouse",
    "reporting",
    "ods",
    "data",
    "scrubbed",
    "resolved",
    "redundancy",
    "checked",
    "compliance",
    "corresponding",
    "business",
    "rules",
    "whatever",
    "data",
    "order",
    "filter",
    "basically",
    "see",
    "data",
    "redundancy",
    "data",
    "checked",
    "also",
    "sees",
    "whether",
    "data",
    "compliant",
    "organization",
    "business",
    "rules",
    "data",
    "used",
    "integrating",
    "disparate",
    "data",
    "multiple",
    "sources",
    "business",
    "operations",
    "analysis",
    "reporting",
    "carried",
    "place",
    "data",
    "used",
    "current",
    "operation",
    "housed",
    "transferred",
    "data",
    "warehouse",
    "longer",
    "term",
    "storage",
    "archiving",
    "ods",
    "designed",
    "relatively",
    "simple",
    "queries",
    "small",
    "amounts",
    "data",
    "finding",
    "status",
    "customer",
    "order",
    "data",
    "warehouse",
    "present",
    "say",
    "instance",
    "particular",
    "customer",
    "ticket",
    "need",
    "find",
    "information",
    "regards",
    "customer",
    "use",
    "ods",
    "rather",
    "complex",
    "queries",
    "large",
    "amounts",
    "data",
    "typical",
    "data",
    "warehouse",
    "going",
    "running",
    "entirety",
    "data",
    "take",
    "lot",
    "time",
    "find",
    "single",
    "customer",
    "details",
    "would",
    "rather",
    "use",
    "ods",
    "matter",
    "ods",
    "similar",
    "memory",
    "stores",
    "recent",
    "information",
    "contrary",
    "data",
    "warehouse",
    "like",
    "memory",
    "storing",
    "relatively",
    "permanent",
    "information",
    "creating",
    "data",
    "warehouse",
    "permanent",
    "basis",
    "level",
    "granularity",
    "fact",
    "table",
    "fact",
    "table",
    "usually",
    "designed",
    "low",
    "level",
    "granularity",
    "means",
    "need",
    "find",
    "lowest",
    "information",
    "stored",
    "fact",
    "table",
    "example",
    "employee",
    "performance",
    "high",
    "level",
    "granularity",
    "employee",
    "performance",
    "daily",
    "employee",
    "performance",
    "weekly",
    "considered",
    "low",
    "levels",
    "granularity",
    "much",
    "frequently",
    "recorded",
    "data",
    "granularity",
    "lowest",
    "level",
    "information",
    "stored",
    "fact",
    "table",
    "depth",
    "data",
    "level",
    "known",
    "granularity",
    "date",
    "dimension",
    "level",
    "could",
    "year",
    "month",
    "quarter",
    "period",
    "week",
    "day",
    "granularity",
    "day",
    "lowest",
    "level",
    "year",
    "highest",
    "level",
    "process",
    "consists",
    "following",
    "two",
    "steps",
    "determining",
    "dimensions",
    "included",
    "determining",
    "location",
    "find",
    "hierarchy",
    "dimension",
    "information",
    "factors",
    "determination",
    "resent",
    "per",
    "requirements",
    "moving",
    "question",
    "number",
    "11",
    "difference",
    "view",
    "materialized",
    "view",
    "name",
    "suggests",
    "view",
    "simply",
    "means",
    "raid",
    "table",
    "data",
    "representation",
    "provided",
    "view",
    "access",
    "data",
    "table",
    "occupy",
    "space",
    "changes",
    "get",
    "affected",
    "corresponding",
    "tables",
    "materialized",
    "view",
    "data",
    "persists",
    "physical",
    "data",
    "space",
    "occupation",
    "memory",
    "changes",
    "get",
    "affected",
    "corresponding",
    "tables",
    "junk",
    "dimension",
    "scenarios",
    "data",
    "may",
    "appropriate",
    "store",
    "schema",
    "data",
    "attributes",
    "stored",
    "junk",
    "dimension",
    "nature",
    "junk",
    "particular",
    "dimension",
    "usually",
    "boolean",
    "flag",
    "values",
    "single",
    "dimension",
    "formed",
    "lumping",
    "small",
    "number",
    "dimensions",
    "called",
    "junk",
    "dimension",
    "adjunct",
    "dimension",
    "unrelated",
    "attributes",
    "process",
    "grouping",
    "random",
    "flags",
    "text",
    "attributes",
    "dimension",
    "transmitting",
    "distinguished",
    "sub",
    "dimension",
    "related",
    "junk",
    "dimension",
    "essentially",
    "data",
    "need",
    "stored",
    "data",
    "warehouse",
    "unnecessary",
    "stored",
    "junk",
    "dimension",
    "moving",
    "question",
    "number",
    "13",
    "different",
    "types",
    "scds",
    "used",
    "data",
    "warehousing",
    "scds",
    "also",
    "short",
    "slowly",
    "changing",
    "dimensions",
    "dimensions",
    "data",
    "changes",
    "slowly",
    "rather",
    "changing",
    "regularly",
    "timely",
    "basis",
    "three",
    "types",
    "stds",
    "first",
    "scd1",
    "record",
    "used",
    "replace",
    "original",
    "record",
    "even",
    "one",
    "record",
    "existing",
    "database",
    "current",
    "data",
    "replaced",
    "new",
    "data",
    "take",
    "place",
    "scd2",
    "new",
    "record",
    "file",
    "added",
    "dimension",
    "table",
    "record",
    "exists",
    "database",
    "current",
    "data",
    "previous",
    "data",
    "stored",
    "history",
    "scd3",
    "uses",
    "original",
    "data",
    "modified",
    "new",
    "data",
    "consists",
    "two",
    "records",
    "one",
    "record",
    "exists",
    "database",
    "another",
    "record",
    "replace",
    "old",
    "database",
    "record",
    "new",
    "information",
    "moving",
    "question",
    "number",
    "14",
    "one",
    "faster",
    "olap",
    "relational",
    "olap",
    "olap",
    "also",
    "known",
    "molap",
    "faster",
    "relational",
    "olap",
    "following",
    "reasons",
    "molap",
    "data",
    "stored",
    "queue",
    "storage",
    "relational",
    "database",
    "proprietary",
    "formats",
    "one",
    "example",
    "power",
    "olap",
    "molab",
    "products",
    "compatible",
    "excel",
    "make",
    "data",
    "interactions",
    "easy",
    "use",
    "even",
    "members",
    "team",
    "enroll",
    "products",
    "access",
    "relational",
    "database",
    "using",
    "sql",
    "standard",
    "language",
    "used",
    "define",
    "manipulate",
    "data",
    "rdbms",
    "since",
    "rollapp",
    "accessible",
    "simple",
    "programs",
    "like",
    "excel",
    "need",
    "know",
    "sql",
    "order",
    "able",
    "query",
    "data",
    "compatible",
    "people",
    "much",
    "technical",
    "knowledge",
    "subsequent",
    "processing",
    "may",
    "occur",
    "rdbms",
    "within",
    "server",
    "accepts",
    "requests",
    "clients",
    "translates",
    "sql",
    "statements",
    "passes",
    "rdbms",
    "due",
    "olap",
    "using",
    "proprietary",
    "file",
    "format",
    "faster",
    "relational",
    "olap",
    "moving",
    "question",
    "number",
    "15",
    "hybrid",
    "scd",
    "discussed",
    "uh",
    "std",
    "one",
    "two",
    "three",
    "earlier",
    "hybrid",
    "stds",
    "combinations",
    "scd1",
    "scd2",
    "uh",
    "may",
    "happen",
    "table",
    "columns",
    "important",
    "need",
    "track",
    "changes",
    "capture",
    "historical",
    "data",
    "whereas",
    "columns",
    "even",
    "data",
    "changes",
    "need",
    "bother",
    "tables",
    "implement",
    "hybrid",
    "scds",
    "wherein",
    "columns",
    "type",
    "1",
    "type",
    "basically",
    "applying",
    "blanket",
    "rule",
    "entire",
    "table",
    "customize",
    "particular",
    "columns",
    "want",
    "apply",
    "rule",
    "moving",
    "question",
    "number",
    "16",
    "overwrite",
    "execute",
    "method",
    "struts",
    "part",
    "start",
    "framework",
    "develop",
    "action",
    "servlets",
    "action",
    "form",
    "servlets",
    "servlet",
    "classes",
    "action",
    "form",
    "class",
    "develop",
    "validate",
    "method",
    "method",
    "return",
    "action",
    "errors",
    "object",
    "method",
    "write",
    "validation",
    "code",
    "well",
    "method",
    "returns",
    "null",
    "action",
    "errors",
    "size",
    "0",
    "web",
    "container",
    "call",
    "execute",
    "part",
    "action",
    "class",
    "returns",
    "size",
    "greater",
    "0",
    "call",
    "execute",
    "method",
    "rather",
    "execute",
    "jsp",
    "servlet",
    "html",
    "file",
    "value",
    "input",
    "attribute",
    "part",
    "attribute",
    "file",
    "question",
    "number",
    "17",
    "vldb",
    "vldb",
    "stands",
    "large",
    "database",
    "database",
    "contains",
    "extremely",
    "large",
    "number",
    "tuples",
    "rows",
    "occupies",
    "extremely",
    "large",
    "physical",
    "file",
    "system",
    "storage",
    "one",
    "terabyte",
    "database",
    "would",
    "normally",
    "considered",
    "vldb",
    "question",
    "number",
    "18",
    "load",
    "time",
    "dimension",
    "time",
    "dimensions",
    "usually",
    "loaded",
    "program",
    "loops",
    "possible",
    "dates",
    "appearing",
    "data",
    "unusual",
    "100",
    "years",
    "represented",
    "time",
    "dimension",
    "one",
    "row",
    "per",
    "day",
    "question",
    "number",
    "19",
    "conformed",
    "dimensions",
    "conform",
    "dimensions",
    "dimensions",
    "used",
    "across",
    "multiple",
    "data",
    "marts",
    "combination",
    "multiple",
    "fact",
    "tables",
    "conform",
    "dimension",
    "dimension",
    "exactly",
    "meaning",
    "contents",
    "referred",
    "different",
    "fact",
    "tables",
    "refer",
    "multiple",
    "tables",
    "multiple",
    "data",
    "marts",
    "within",
    "organization",
    "question",
    "number",
    "main",
    "difference",
    "nmon",
    "kimbel",
    "philosophies",
    "data",
    "warehousing",
    "two",
    "philosophies",
    "data",
    "warehousing",
    "gimbal",
    "philosophy",
    "data",
    "warehousing",
    "viewed",
    "constituency",
    "data",
    "mods",
    "data",
    "mods",
    "focused",
    "delivering",
    "business",
    "objectives",
    "departments",
    "organization",
    "data",
    "warehouse",
    "confirmed",
    "dimension",
    "data",
    "marts",
    "hence",
    "unified",
    "view",
    "enterprise",
    "obtained",
    "dimension",
    "modeling",
    "local",
    "departmental",
    "level",
    "inman",
    "philosophy",
    "create",
    "data",
    "warehouse",
    "subject",
    "subject",
    "area",
    "basis",
    "hence",
    "development",
    "data",
    "warehouse",
    "start",
    "data",
    "online",
    "store",
    "subject",
    "areas",
    "added",
    "data",
    "warehouse",
    "need",
    "arises",
    "point",
    "sale",
    "pos",
    "data",
    "added",
    "later",
    "management",
    "decides",
    "required",
    "look",
    "sort",
    "algorithmic",
    "basis",
    "gimbal",
    "philosophy",
    "first",
    "go",
    "data",
    "marts",
    "combine",
    "get",
    "data",
    "warehouse",
    "inman",
    "philosophy",
    "first",
    "create",
    "data",
    "warehouse",
    "create",
    "data",
    "marts",
    "question",
    "number",
    "21",
    "difference",
    "data",
    "warehouse",
    "data",
    "mart",
    "understood",
    "philosophies",
    "previous",
    "slide",
    "let",
    "us",
    "understand",
    "actual",
    "difference",
    "data",
    "warehouse",
    "data",
    "mart",
    "data",
    "warehouse",
    "set",
    "data",
    "isolated",
    "operational",
    "systems",
    "basically",
    "away",
    "database",
    "view",
    "database",
    "helps",
    "organization",
    "deal",
    "decision",
    "making",
    "process",
    "data",
    "mart",
    "subset",
    "data",
    "warehouse",
    "geared",
    "particular",
    "business",
    "line",
    "data",
    "mods",
    "provide",
    "stock",
    "condensed",
    "data",
    "collected",
    "organization",
    "research",
    "particular",
    "field",
    "entity",
    "basically",
    "stating",
    "data",
    "warehouse",
    "contains",
    "whole",
    "variety",
    "information",
    "data",
    "mart",
    "subset",
    "information",
    "based",
    "particular",
    "business",
    "line",
    "model",
    "basically",
    "say",
    "data",
    "warehouse",
    "based",
    "customer",
    "sales",
    "data",
    "create",
    "data",
    "mart",
    "purely",
    "based",
    "transactional",
    "data",
    "combination",
    "two",
    "data",
    "lines",
    "instead",
    "getting",
    "entirety",
    "customer",
    "sales",
    "data",
    "getting",
    "data",
    "relevant",
    "transactional",
    "data",
    "set",
    "second",
    "difference",
    "data",
    "warehouse",
    "typically",
    "size",
    "greater",
    "100",
    "gigabytes",
    "size",
    "data",
    "want",
    "less",
    "100",
    "gigabytes",
    "due",
    "disparity",
    "scope",
    "design",
    "utility",
    "data",
    "marts",
    "comparatively",
    "simpler",
    "naturally",
    "since",
    "data",
    "marts",
    "subsets",
    "data",
    "warehouses",
    "size",
    "less",
    "well",
    "question",
    "number",
    "22",
    "explain",
    "etl",
    "cycles",
    "three",
    "layer",
    "architecture",
    "know",
    "etl",
    "stands",
    "extraction",
    "transformation",
    "loading",
    "three",
    "phases",
    "involved",
    "first",
    "staging",
    "layer",
    "data",
    "integration",
    "layer",
    "access",
    "layer",
    "three",
    "layers",
    "involved",
    "three",
    "specific",
    "phases",
    "atl",
    "cycle",
    "staging",
    "layer",
    "used",
    "data",
    "extraction",
    "various",
    "data",
    "structures",
    "source",
    "data",
    "integration",
    "layer",
    "data",
    "staging",
    "layer",
    "transformed",
    "transferred",
    "database",
    "using",
    "integration",
    "layer",
    "data",
    "arranged",
    "hierarchical",
    "groups",
    "often",
    "referred",
    "dimensions",
    "facts",
    "aggregates",
    "data",
    "warehousing",
    "system",
    "combination",
    "facts",
    "dimension",
    "tables",
    "called",
    "schema",
    "basically",
    "data",
    "loaded",
    "data",
    "extracted",
    "staging",
    "layer",
    "basically",
    "transforming",
    "data",
    "integration",
    "layer",
    "finally",
    "access",
    "layer",
    "data",
    "accessed",
    "loaded",
    "analytics",
    "question",
    "number",
    "23",
    "data",
    "purging",
    "mean",
    "data",
    "purging",
    "name",
    "quite",
    "straightforward",
    "process",
    "involving",
    "methods",
    "erase",
    "data",
    "permanently",
    "storage",
    "several",
    "techniques",
    "strategies",
    "used",
    "data",
    "purging",
    "process",
    "data",
    "forging",
    "often",
    "contrasts",
    "data",
    "deletion",
    "leading",
    "data",
    "temporary",
    "basis",
    "data",
    "purging",
    "permanently",
    "removes",
    "data",
    "turn",
    "frees",
    "storage",
    "memory",
    "space",
    "utilized",
    "purposes",
    "purging",
    "process",
    "allows",
    "us",
    "archive",
    "data",
    "even",
    "permanently",
    "removed",
    "main",
    "source",
    "giving",
    "us",
    "option",
    "recover",
    "data",
    "case",
    "purge",
    "deleting",
    "process",
    "also",
    "permanently",
    "removes",
    "data",
    "necessarily",
    "involve",
    "keeping",
    "backup",
    "generally",
    "involves",
    "insignificant",
    "amounts",
    "data",
    "question",
    "number",
    "24",
    "five",
    "main",
    "testing",
    "phases",
    "project",
    "etl",
    "test",
    "performed",
    "five",
    "stages",
    "following",
    "identification",
    "data",
    "sources",
    "requirements",
    "first",
    "identify",
    "data",
    "sources",
    "want",
    "data",
    "warehouse",
    "requirement",
    "data",
    "warehouse",
    "analytical",
    "requirements",
    "organization",
    "needs",
    "acquisition",
    "data",
    "naturally",
    "identifying",
    "data",
    "source",
    "acquire",
    "data",
    "implementing",
    "business",
    "logic",
    "dimensional",
    "modeling",
    "data",
    "building",
    "publishing",
    "data",
    "reports",
    "create",
    "analytics",
    "perform",
    "finally",
    "question",
    "number",
    "25",
    "mean",
    "slice",
    "action",
    "many",
    "slice",
    "operated",
    "dimensions",
    "used",
    "slice",
    "operation",
    "filtration",
    "process",
    "data",
    "warehouse",
    "selects",
    "specific",
    "dimension",
    "given",
    "cube",
    "provides",
    "new",
    "sub",
    "cube",
    "slice",
    "operation",
    "single",
    "dimension",
    "used",
    "basically",
    "data",
    "warehouse",
    "need",
    "specific",
    "dimension",
    "need",
    "analytics",
    "processing",
    "use",
    "slice",
    "operation",
    "data",
    "warehouse",
    "quick",
    "info",
    "guys",
    "intellipaat",
    "provides",
    "business",
    "intelligence",
    "masters",
    "program",
    "partnership",
    "microsoft",
    "course",
    "link",
    "given",
    "description"
  ],
  "keywords": [
    "data",
    "warehouse",
    "make",
    "also",
    "update",
    "us",
    "let",
    "see",
    "day",
    "types",
    "tools",
    "mart",
    "modeling",
    "finally",
    "need",
    "every",
    "business",
    "decisions",
    "intelligence",
    "operational",
    "systems",
    "understand",
    "maintain",
    "customer",
    "check",
    "information",
    "available",
    "different",
    "system",
    "companies",
    "extract",
    "analyze",
    "concept",
    "warehousing",
    "extracted",
    "source",
    "applications",
    "sales",
    "moved",
    "contains",
    "many",
    "sources",
    "report",
    "analysis",
    "reporting",
    "used",
    "queries",
    "sometimes",
    "say",
    "tables",
    "future",
    "designed",
    "employees",
    "performance",
    "two",
    "present",
    "records",
    "take",
    "etl",
    "view",
    "key",
    "number",
    "one",
    "subject",
    "option",
    "particular",
    "area",
    "example",
    "online",
    "database",
    "query",
    "like",
    "customers",
    "today",
    "next",
    "names",
    "third",
    "name",
    "change",
    "created",
    "since",
    "time",
    "provides",
    "historical",
    "3",
    "even",
    "attributes",
    "table",
    "create",
    "reports",
    "fact",
    "olap",
    "analytical",
    "processing",
    "allows",
    "multiple",
    "various",
    "model",
    "large",
    "using",
    "attribute",
    "separate",
    "dimension",
    "dimensions",
    "facts",
    "three",
    "department",
    "store",
    "value",
    "dimensional",
    "already",
    "know",
    "single",
    "type",
    "year",
    "second",
    "entity",
    "relationship",
    "relational",
    "end",
    "user",
    "transform",
    "load",
    "location",
    "another",
    "drill",
    "across",
    "marts",
    "specific",
    "form",
    "set",
    "oltp",
    "generally",
    "people",
    "get",
    "application",
    "first",
    "difference",
    "transaction",
    "transactions",
    "process",
    "databases",
    "going",
    "design",
    "stage",
    "whereas",
    "nothing",
    "staging",
    "layer",
    "internet",
    "care",
    "target",
    "stored",
    "mods",
    "banking",
    "use",
    "market",
    "product",
    "generate",
    "well",
    "want",
    "based",
    "tool",
    "sql",
    "enterprise",
    "salary",
    "atm",
    "machine",
    "okay",
    "connected",
    "account",
    "bank",
    "right",
    "inserted",
    "whether",
    "ms",
    "schemas",
    "inside",
    "whatever",
    "made",
    "means",
    "statement",
    "soon",
    "select",
    "recent",
    "last",
    "five",
    "10",
    "display",
    "inserting",
    "record",
    "delete",
    "insert",
    "total",
    "million",
    "1",
    "top",
    "execute",
    "definitely",
    "millions",
    "reason",
    "long",
    "instead",
    "latest",
    "called",
    "current",
    "keep",
    "date",
    "call",
    "uh",
    "hyd",
    "40",
    "100",
    "30",
    "way",
    "years",
    "less",
    "decision",
    "generated",
    "team",
    "write",
    "code",
    "loaded",
    "loading",
    "employee",
    "duplicate",
    "rows",
    "incorrect",
    "valid",
    "told",
    "may",
    "ods",
    "schema",
    "creating",
    "sync",
    "happen",
    "updated",
    "flow",
    "access",
    "four",
    "t1",
    "description",
    "columns",
    "8",
    "20",
    "got",
    "null",
    "case",
    "constraints",
    "constraint",
    "primary",
    "foreign",
    "level",
    "validation",
    "column",
    "2",
    "correct",
    "values",
    "departments",
    "active",
    "keys",
    "measurable",
    "star",
    "snowflake",
    "branch",
    "id",
    "pin",
    "quantity",
    "history",
    "project",
    "junk",
    "underscore",
    "address",
    "usa",
    "august",
    "uk",
    "new",
    "original",
    "order",
    "basically",
    "approach",
    "might",
    "moving",
    "draw",
    "method",
    "conceptual",
    "logical",
    "physical",
    "region",
    "regions",
    "merchant",
    "purchased",
    "normalization",
    "entities",
    "integer",
    "question",
    "deal",
    "clusters"
  ]
}