{
  "text": "today in the workshop we've got our\nheads in the Arduino iot Cloud you'll\nsee all the new iot Cloud features for\n2024 including a new interface and\nsupport for many more devices we'll also\nbuild a cloud project that uses triggers\nto send notifications there are clouds\nin the forecast today so welcome to the\n[Music]\nworkshop\nwell hello and welcome to the workshop\nand today we're going back into the\ncloud the Arduino iot Cloud now we've\nused the Arduino iot Cloud several times\nhere in the dronebot workshop but it's\nbeen a little while and there have been\nmany many changes to the iot cloud so\nmany that it doesn't even look the same\nas it did before it's got a brand new\ninterface there's an updated editor\nthere are a number of new features in\nthe cloud including something called\ntriggers that will allow you to send the\npush notification or an email in\nresponse to specific events and there\nare many many more devices you can\nconnect to the Arduino iot cloud in fact\nyou can connect just about anything that\ncan connect to the internet to the\nArduino iot Cloud there are so many new\nfeatures in the cloud in fact that I\ncan't Jam them into one video so this is\nthe first in a series of videos that\nI'll be doing on the Arduino iot cloud\nand the updated features for\n2024 so if you've used the cloud before\nthis video will be an excellent update\nto get you back to speed with all of the\nnew features and if you've never used\nthe Arduino iot Cloud then this video\nwill serve as your introduction so let's\ngo and get our heads into the Arduino\niot\nCloud the Arduino iot cloud is an\nInternet of Things platform that works\nwith Arduino devices non Arduino devices\nAPI and pretty well anything that you\ncan connect to the\ninternet the iot cloud is an ideal\nplatform for makers and experimenters as\nit allows you to build Internet of\nThings projects without having to worry\nabout all of the tedious backend and\nsecurity stuff in order to work with the\nArduino iot Cloud you need to understand\na few simple Concepts and we'll go over\nthose\nnow the first concept is devices devices\nare essentially virtual twins of the\nHardware that you've attached to the iot\ncloud the platform supports both Arduino\nand non Arduino boards you can also use\nlauran ethernet and cellular boards\navailable from Arduino in addition to\nworking with C++ you can also work with\npython micropython or JavaScript devices\nin order to attach devices to the\nArduino iot Cloud you'll need to install\nthe Arduino create agent it's a very\nsimple program and it's available for\nLinux Mac and windows all new devices\nattached to the cloud will be assigned\nsome secret keys and you need to save\nthat Arduino provides a very simple\nmethod for doing\nthis the next fundamental concept of the\nArduino iot Cloud are things things\nrepresent connected devices and the data\nvariables associated with them a thing\nis actually a container that contains\ndevices the network credentials to\nattach those devices to the network work\nand Cloud\nvariables when creating a thing you're\ngoing to require that device secret key\nthat was assigned to your device when\nyou connected it to the iot cloud so\nmake sure you have a copy of that cloud\nvariables are one of the key concepts of\nworking with the Arduino iot Cloud these\nare variables that exist within the iot\ncloud you'll Define your Cloud variables\nwhen you define your things and Cloud\nvariables are used with all of your\ndevices\nany change made to a cloud variable on a\ndevice is passed to the\ncloud most standard variable types are\nsupported by Cloud variables and in\naddition there are some specialized\ntypes that are unique to Cloud variables\nCloud variables can be read right or\nreadon you can update the value in your\nCloud variables periodically or you can\nset them to update every time a value\nchanges another key concept of the\nArduino iot class is dashboards\ndashboards are your control panel for\nyour Cloud applications there are\ndesktop and mobile versions of dashboard\nand you can configure them\nindependently dashboards are very easy\nto use they employ drag and drop widgets\nand these widgets connect to Cloud\nvariables a trigger is a newer feature\nin the Arduino iot Cloud a trigger\noccurs when a cloud variable condition\nhas been met you'll use triggers to\ntrigger an action and this action can be\nsending out an email or a push\nnotification to the Arduino iot Cloud\nmobile app currently triggers only\nsupport Boolean and string Cloud\nvariables another update to the Arduino\niot cloud is the iot cloud remote app\nthis is available for both Android and\niOS and there have been more changes\nmade to the iot cloud editor as Arduino\ncontinues to bring it closer in\nfunctionality to the desktop editor\nand so that's the overview now let's go\nlog in to the Arduino iot\nCloud now here's the main console screen\nfor the Arduino iot cloud and if you\nhaven't been here for a while this is\ngoing to look very different than it did\nbefore they've pretty well Consolidated\neverything onto one screen and it's\npretty nice now I'm going to assume that\nyou already have an Arduino iot cloud\naccount if you don't it's pretty easy to\nset one up now this is the homepage over\nhere and it just kind of summarizes some\nfiles you've been working on recently\nand also has a couple of VO you can get\nstarted if you're brand new it's got\ndocumentation uh getting started wizard\nthat you can go through you can\nbasically build a little Cloud project\nright from here to get yourself familiar\nwith everything now down the side you'll\nsee all the main elements of the cloud\nso over here are the sketches that I've\ngot and for every sketch that also shows\nyou what it is associated with over here\nso here's the associated thing to that\nparticular sketch and what device It's\nassociated with as well and we'll go\ninto devices we can see all the devices\nthat I've added to the cloud we're going\nto be adding some more of them a little\nbit later uh here are the things that\nI've made for my cloud and here are my\ndashboards and here's a\ntrigger and so all of the main elements\nfor the cloud are right over here and\nvery easy to get at they've also got\nsome resources down here and these\nresources are things like their Forum\ntheir project Hub and uh a number of\ntutorials for getting started with the\ncloud there are complete courses over\nhere on using the Arduino and the\nArduino iot cloud and you can get going\nthrough those and you can also look at\nsome templates if you're going to build\na cloud project you don't necessarily\nneed to start from scratch you can use\none of these templates and they have a\nnumber of different templates over here\nyou can choose from finally we've got\nIntegrations these are products that\nI've integrated with the cloud in my\ncase I've integrated Edge impulse so it\nappears over here and the last bit here\nis just to personal usage for the cloud\nthat I have done my plan usage and so\nthis is the screen again the main\nconsole screen for the Arduino iot cloud\nand we are going to be using this to\nbuild our Cloud\nproject all right now that we've got all\nthe fundamentals down it's time to start\nworking with the Arduino iot cloud and\nso what we're going to do in today's\nvideo is we're going to build build a\ncloud project we're going to start off\nwith an Arduino Uno R4 WiFi board\nalthough you could use another Arduino\nCloud compatible board and it'll work\njust fine and we're going to build up a\nproject that eventually will also\ninclude a second microcontroller in\nesp32 so let's see how we hook up our\nUno R4 Wi-Fi and start working with the\nArduino iot\nCloud we're going to build the project\nusing the Arduino iot cloud and we'll be\nusing using an Arduino Uno R4 WiFi board\nas our device we'll be connecting a\nServo motor and a push button switch to\nthe Uno and then connecting it to the\niot\ncloud after that we'll build a dashboard\nso we can interact with our device we'll\nbe using the cloud editor and I'll also\nshow you how you can do your editing\nusing the IDE 2.0 that you're already\nfamiliar\nwith in addition to the Arduino Uno R4\nWi-Fi board Bo we're going to require a\nServo motor and the standard sg90 Servo\nwould be an ideal choice now some folks\npower the servo motors from the 5vt\nsupply on the Arduino board but I don't\nlike to do that and besides servos work\nbetter with 6vs anyway so we're going to\ngive it a 6vt power supply this can\nsimply be four ablea cells if you wish\nwe'll also require a push button switch\nthis is a momentary contact normally\nopen push button pretty well a standard\ndevice that you probably already have\nwe'll Begin by connecting a ground\nconnection from our Arduino to the\nnegative connection of the 6V DC Servo\npower supply we'll also connect that\nground connection to the ground\nconnection on the servo on most Servo\nMotors this will be a brown wire we'll\nconnect the positive side of our 6vt\npower supply to the positive side of the\nservo that'll be a red wire on most\nServo Motors and we'll connect to\nservo's control lead which is usually an\norange a yellow wire to gpio pin 11 on\nthe Arduino Uno R4 Wi-Fi board next\nwe'll connect one side of our push\nbutton to gpio pin 5 on the Uno and\nwe'll complete The Circuit by connecting\nthe ground to the other side of the push\nbutton and so now that our circuit is\nwired up let's connect it to the Arduino\niot\nCloud so now that we've wired up our Uno\nR4 we'll need to add it to the Arduino\niot cloud of of course this is a device\nso I'm in the device tab of my cloud\nconsole and right over here is a button\nthat says add device pretty well seem\nstraightforward let's click it and we\nget the setup device wizard now we have\nthree selections over here we can add an\nArduino board which of course is what we\nare going to do a third-party device and\nthis is mostly ESP 32s and\nesp8266 as well as Laura Wan products\nand over here a manual sele ction and\nhere we can add just about anything that\ncan speak python micropython or\nJavaScript of course we have an Arduino\nboard so we're going to click over\nhere and I've connected my board to the\nUSB port you'll need to do this of\ncourse now at this point it's found my\nArduino Uno R4 and we can continue but I\nshould mention that when you first do\nthis you're probably going to get a\npopup saying that you need to install\nthe Arduino create agent the Arduino\ncreate agent runs on your computer and\nit's kind of the bridge between the USB\nport and the Arduino iot Cloud website\nso you need that or this won't work uh\nif you're prompted you'll get a download\nlink for it it's available for Linux for\nmac and for Windows and just download it\nand install it you'll note that it runs\nin the background all the time and\nyou'll have a little Arduino symbol on\nyour taskbar to let you know it's\nworking so as I said I've got the agent\nand it's found my Arduino Uno R4 board\nso I'm going to go and configure that\nboard now it says to give your device a\nname and it will suggest a name for the\ndevice but you probably want the\ndifferent one so we're just going to\ncall this one Uno\nR4 test Uno R4 test board why not okay\nand I'm actually going to copy this as\nwell too and I'll show you why this is\nthis a little trick of my own going to\ncopy that name and I'm going to go next\nand now it's going to say that it's\ngiving me a device ID and a secret key\nnow this secret key is extremely\nimportant if you don't have this key you\ncan't proceed with the further steps\nbecause this is part of the security\nsetup so you can copy that right now to\nyour clipboard or you can download a PDF\nwhich is what I'm going to do I'm going\nto download the PDF and this is why I\ncopied the name what I'm going to do is\nI'm going to paste that over\nhere and so now I know what this is the\nsecret key for because it's always going\nto come up as Arduino device secret key\nPDF by pasting the name in front of it I\nknow what device it is so I'm going to\nsave my secret\nkey and I've saved my key I can confirm\nI saved my key and I will\ncontinue now it's going to make the\ndevice iot ready and as you see here it\nsays this process can take up to 5\nminutes and with the Uno R4 it often\ndoes Take 5 minutes so I'm going to stop\nright now cuz I don't think you want to\nwatch this for 5 minutes is just going\nto spin that number three wheel and\neventually check it off and our Uno R4\nwill be added as a device in our uino\niot\nCloud so now that our device is complete\nthe next thing we're going to do is\nbuild our thing and so I'm in The Things\ntab of the console and we can add a new\nthing we'll click add\nthing and we get a thing right now and\nit starts off as an Untitled thing so\nlet's give our thing a title first of\nall\nand I'll let's call my Uno test board\nthing you can call it anything you want\nof\ncourse and you can see we've got three\nsections we've got the cloud variables\nthe associated device and the network so\nlet's associate our device first of\nall and this is our Uno R4 test board\nwe'll associate that and now we need to\nput in our Network credentials and this\nis where you're going to need your\nsecret key so we click over here and\nwe'll give it our Wi-Fi\nname you need to give it your Wi-Fi\npassword and you need to put in your\nSeeker key and I've got mine in my\nclipboard right now so I'm going to\npaste it and we'll hit\nsave and the next thing we need to do is\nto add some Cloud variables to our thing\nwe're going to add two to our thing one\nfor each of the peripherals we have on\nthe board so the first one we going to\nadd is for the button\nso I'm going to call the variable button\nState and we're going to select the type\nfor our variable now there's a number of\ndifferent ones to choose from but the\nbasic ones are down here and in the case\nof our button I want it to be a Boolean\nso we'll do that now you have the\npermissions is it read right or is it\nread only well in this case the push\nbutton is only going to be sending a\nvalue and not accepting one so it's read\nonly and you have a choice as to whether\nto update it whenever the value Chang\nor periodically say once a second or so\nyou get to choose the period if you\nchoose that but I want it to update on\nchain so I'm going to add my\nvariable and you'll note over here in\nthe sketch tab I got a little one that\nmeans that the basic sketch that this is\nwriting in the background has now been\nmodified with one addition and that\nbeing my button variable I'm going to\nadd another Cloud variable\nnow I'm calling this one the servo\nposition and this is going to be an\ninteger so this is the number from 0 to\n180 that we will be feeding to position\nour Servo motor now we want this one to\nbe read and write because we need to be\nable to write to this and we're also\ngoing to keep it as on change and so\nwe'll add that\nvariable and you'll note that we've had\ntwo additions to our sketch now we'll go\nover to that sketch Tab and I'll need to\nlet you know something this is the basic\neditor and it actually is going to be\ngoing away Arduino is getting rid of\nthis basic editor at the end of March\n2024 so you'll eventually just go\ndirectly to the full editor so we may as\nwell just go directly there right\nnow and this is the full editor and I'm\njust going to hide this right now\nbecause I don't want to do a tour now\nthe full editor is becoming more and\nmore like the uh IDE on your desktop but\nit's still not quite there it's got a\nfew features on the side over here you\ncan go to all your examples like you do\nin the regular IDE here's where you add\nlibraries and over here there's a number\nof reference functions so you can look\nat all the different functions that are\nin the Arduino implementation of C++\nit's kind of nice at any case we're not\ngoing to look at that right now what you\nwill notice is that we have four files\nlet's just make it a bit bigger here uh\nthis is our main sketch and this is the\none that we're going to be working with\nthe read me is something a generates and\nyou can start adding your own\ninformation onto this like how you're\nwiring your circuit up and everything\nthe properties of the thing are being\ngenerated automatically whenever we\nchange properties in our thing panel and\nthe secret tab contains all of your\ninformation such as your Wi-Fi\ncredentials and that secret key so we're\njust going to be focusing on this one\nand this is what's already been\ngenerated for us it says it's added\nthese automatically that integer of\nServo position and button State those\nare into two Cloud variables otherwise\nit sets up a basic sketch that we can\nmodify and at the bottom here you'll\nnotice it also added the function on\nServo position change and this is\nbasically for the servo position Cloud\nvariable because it's a read write\nvariable this will be called every time\nthat variable is changed and uh so this\nis how we're going to interact with that\nvariable so now let's take a look at\nsome code we can add to this to make our\nproject actually\nwork now in order to make this bit\neasier for you to see on the screen I've\ngone into to my settings in the Arduino\niot cloud and I've changed my font size\nup to 24 so you should be able to see\nthat a bit better now we are going to\nstart adding code in fact I've added a\nfew lines of code already just for the\nservo motor remember we've got a Serv\nmotor and a push button switch attached\nto our board and the servo is controlled\nwith the servo position Cloud variable\nso keep that in mind now the first thing\nthat I did was I included the servo\nLibrary so that's just the standard way\nthat you would do it in any Arduino\nsketch and the same as you would with\nany other sketch I've defined an object\nfor the servo and I've just called mine\nmy Servo you could call it anything you\nwant of course then I go into setup and\nin setup I need to attach the servo to\nthe pin that it's attached to and we're\nusing GPO pin 11 so I did my Servo do\nattach to 11 over here and then we go\nall the way to the bottom to that\nfunction that they provided for us on\nServo position change and I've added\ncode to that now remember every time the\nvariable Servo position changes in the\ncloud this will be called and what we\nwant to do is we want to move the servo\nmotor when it changes so I'm going to\nmove the servo motor do a my Servo right\nand the value of Servo position the\ncloud variable that is going to contain\nthe position of the servo and so that's\nall I need to do and so now I can just\nload that up to my Arduino Uno and then\nstart creating a dashboard and see if\nthis will work so we just do do this to\ndo an\nupload and by the way the verify on the\nuh Cloud takes quite a while it's a lot\nlonger than it is on the local R weo ID\n2.0 also there is a little Quirk I've\nnoticed sometimes the very first time\nthat you attach to a board you might get\na failure if that's the case unplug it\nplug it back in do it again and it'll\nprobably work forever and ever after\nthat I'm not sure what causes that but\njust thought I'd throw that in and\nanyway we're going to verify and upload\nthis to our board and then we'll move on\nto make a dashboard for this so we can\ncontrol our\nserver and so now I've navigated back to\nthe dashboard screen and I'm going to\ncreate a new dashboard so we're going to\nhit the new\ndashboard and we can give our dashboard\na name other than\nUntitled and that should be\nfine and now we can start adding widgets\nto our dashboard\nand we're going to look for a widget to\ncontrol the servo motor I'm going to\npick this value widget to start off with\nnow the name of it is value but we can\ncall it something\nelse let's just call it\nSero and we need to link a variable to\nit and so we're going to go down to our\nUno test board thing and we see the two\nvariables and there only is one variable\nthat we can use an integer because a\nBoolean can't be linked to it so they\ngot that gray out so we'll pick that\ninteger and we'll link that\nvariable and we're basically done with\nthat and so now we have an integer over\nhere that says zero let's move this to\n180 and see if it affects our Servo\nmotor and it does indeed it moves the\nSero to 180 and we can type in 90 here\nto center\nit and it does move the servo I'm going\nto add another widget over here cuz I\nwant to show you something we're going\nto add another one to control the\nservo what would be\ngood a slider would be great we're going\nto link that same variable so you can\nlink the same variable to more than one\nwidget on a board going to link that\nvariable and we're going to make the\nrange go up to 180 over here because\nthat's\ncorrect and we're done and you'll notice\nit has the same value as the other one\nso if I were to go and let's say change\nthis again\nmanually the servo moves and you'll\nnotice the other widget because it's\nlinked to that value also moved as well\nso if I move it up I can move the servo\nusing the\nwidget and you'll notice that the two of\nthem track each other so let's just take\na look at what's going on over here\nwe've got two widgets here and they're\nlinked to a cloud variable that cloud\nvariable is controlling the position of\nour Servo so every time we make a change\nto it the widgets both respond to that\nor they can affect the change if they're\nthe one doing it and this is basically\nthe principle of building a dashboard\nwith the Arduino iot Cloud now there's\nalso a mobile layout for your dashboard\nso you can move these around so that on\nthe mobile app they're in different\npositions Etc and uh so you can do both\na desktop and mobile dashboard so it's a\nvery versatile\nsystem now up until this point we've\nbeen doing all of our editing inside the\nArduino Cloud editor and you can\ncontinue to use the cloud editor it has\na lot of good features to it and you can\ncertainly write your sketches with it\nhowever it doesn't have as many features\nas the desktop editor and many people\nmay prefer to use the desktop editor\ninstead and you can do that so I'm in\nthe desktop version 2.3 and I'm going to\ngo over to my Sketchbook my Sketchbook\nshows me all the things I have on my\ncomputer but if I click over here I can\ntake a look at what I've got in the\nArduino iot Cloud now the first time you\ndo this if you're not connected you're\ngoing to get prompted to log into the\ncloud you'll click a button it'll open a\nweb browser page where you log into your\nArduino account and after that you can\nclose the browser and from that point on\nyou'll always see the cloud here now all\nof these sketches that you see are still\nup in the cloud none of them are\nactually on my machine this is the one\nthat we were working with today if it\nwas on my machine this icon here would\nbe a full cloud like this one here and\nwhat you need to do is you need to pull\nit down so you'll notice when I\nhighlighted they get this little cloud\nwith a arrow on and if I click on that I\ncan pull the sketch and you see down\nhere it says it's done pulling the\nsketch and now my sketch has a little\nfull Cloud to it it's actually available\nfor me and if I double click it I can\nopen\nit and there we go and here's the sketch\nthat I had up in the\ncloud and it is now local on my machine\nand I can start working with\nit and so now I've modified our sketch\nto include the push button and the code\nI've used is very simplistic it's not\nthe best and it's not going to give\noperation that's completely consistent\nbut it will serve for illustration\npurpose because today we're learning\nabout the iot cloud not how to code push\nbuttons now as you recall there's a\nBoolean Cloud variable called button\nState and when that's state is high that\nmeans the button is pushed and when it's\nlow the button isn't pushed at least\nthat's the logic I'm going for here so\nwhat I've done is I've added a integer\nconstant for the actual button called\nbutton pin because we got it connected\nto pin five and then down in the setup\nI've defined the button pin as an input\nwith a pull-up because we don't have a\npull-up resistor and then I went to The\nLoop and this is where the code is kind\nof flaky now the proper way to deal with\na push button of course would be to use\nan interrupt that would complicate the\ncode and again I'm just trying to\nillustrate principles of the Arduino iot\nCloud so what I've done is I've just put\nthis line into the loop and I've got my\nbutton State that's the cloud variable\nand it is going to be the inverse of a\ndigital read of the button pin because I\nwant it to be high when the button is\npressed when I press that button it's\nactually going to go low on the pin so I\nwant the exact opposite logic and so\nthat should set the state of the button\nState Cloud variable now the reason I'm\nsaying this C code is going to be a bit\nflaky is because in the loop first of\nall we do this we do the Arduino Cloud\nupdate and we don't know how long that's\ngoing to take so it's entirely possible\nthat we could press the button and miss\nit because we're busy doing that or we\ncould release the button and not see it\nbecause we're doing that so bear that in\nmind when we're testing this out but\nagain we're just illustrating a\nprinciple now you can compile and load\nthis locally here in your IDE but you're\ngoing to have to do one thing and if I\ngo into my thing properties I'll show\nyou what it is in thing properties we're\ncalling two libraries Arduino iot cloud\nand Arduino connection Handler neither\nof those libraries are installed by\ndefault in your ID if you go into this\nand go and install the Arduino iot Cloud\nby going to your library manager you can\ninstall that and it'll install a number\nof dependent libraries including this\nconnection Handler so you're going to\nhave to do that\nbefore you can compile this but once\nyou've done this should be able to\ncompile and you can actually load it\ndirectly onto the board from here and\ngive it a try in the cloud so let's go\nand do\nthat and it seems to work and another\nthing that we can do of course is that\nuh since our out we're out of sync now\nwith what's in the cloud there's another\nbutton here to push everything back up\nso I can go and push this back up to the\ncloud it's telling me I'm going to\noverwrite what's in the cloud I'm I'm\ngoing to do\nthat and it's pushed back up to the\ncloud so now my sketch in the cloud is\nsynchronized with this and it's a good\nidea to do that because even though I\ndid load this onto the Arduino from here\nI don't want the two out of sync and so\nI can work on the cloud without worrying\nthat I don't have the same code as I\nhave down here so let's go and see if\nthis worked so now that we've added the\ncode to our board the next logical thing\nwould be to go to our dashboard and add\nan element to represent the push button\nwe can do that in a moment but where I\nam right now is in the thing and I want\nto look at the cloud varibles so I've\nmagnified my screen quite a bit so you\ncan see it this is the button State\nCloud variable and it says the last\nvalue on it is false watch what happens\nwhen I press the\nbutton you can see it goes to True when\nI'm pressing it and that basically is\nproving out that our code is working\nit's going true every time I hold the\nbutton\ndown and this is a great way of testing\nand troubleshooting to see if your Cloud\nvariables are working uh it gives you a\nlot of data over here the current state\nof it the last time it was updated Etc\nso if you're having problems with your\nCloud project you might want to go into\nthe thing and make sure your variables\nare operating the way that you think\nthey should and now we're back in the\ndashboard I want to show you something\nin the dashboard I didn't point out\nearlier you'll notice right now I don't\nseem to have the option to add any\nwidgets and that's because I'm in view\nmode the mode you would normally keep\nthe dashboard in when you're using it\nand you can toggle it over here into\nedit mode by doing that and now I can\nadd more widgets and move them around so\nI'm going to add a widget to this for\nthe push button and uh good widget is\nprobably the LED widget and the LED\nwidget is basically just an indicator\nyou can make a red LED a green LED or\nyou can actually have two LEDs as well a\nred and a green one now now we'll link\nthat of course to a cloud\nvariable and the button State the\nBoolean is the only one it can link\nto and we'll say\ndone now we'll see if that\nworks we press it it's\non and release it and it goes off and so\nthe LED does seem to work as well uh\nit's attached to that same Cloud\nvariable that we just monitored earlier\nand as you can see it's pretty easy to\nadd things to the Arduino iot\nCloud so we've examined a lot of cloud\nfeatures with our Arduino Uno R4 device\nand now we're going to add another\ndevice onto our iot Network specifically\nan esp32 board now I'm just using one of\nthe esp32 dev kits and you could use\njust about any\nesp32 the key concept over here is we're\nusing a non Arduino board we're also\ngoing to examine another couple of\nConcepts one of them otaa or over theair\nUpdates this is a great feature that\nallows you to update the code on your\nboard without uh disconnecting it from\nthe cloud and connecting it to your\ncomputer you can just do your updates\ndirectly over the cloud that's a really\nhandy feature and another thing we're\ngoing to work with our device-to-device\nCommunications where our two\nmicrocontroller boards will be able to\ntalk to one another using Cloud\nvariables over the Arduino iot Cloud so\nlet's go and see how we hook up our\nsecond microcontroller to our\nCloud we're going to expand our iot\nCloud Network by bringing in another\nboard and that board is going to be an\nesp32 we'll attach a potentiometer and\nan LED to our\nesp32 and then we'll attach it to the\nArduino iot Cloud by doing this you'll\nlearn how to add a non Arduino device to\nthe cloud we'll also be able to\nexperiment with device to device Direct\nCommunications and we can can work with\noverthe a updates to update the code on\nour devices while it's connected to the\niot\ncloud I'm using an es32 devkit module\nfor this and you could pretty well use\nany esp32 that you want if you don't\nhave the gpio pins that I'm using you\ncould just change them in code we're\nalso going to need a potentiometer and\nI'm using a 10K linear pot although any\nvalue above 10K would also work just\nmake sure it's linear a light emitting\ndial and I'm just using a standard red\nLED and a dropping resistor for that\ndiode and a 150 Ohm resistor will work\nwell we'll Begin by connecting one side\nof our potentiometer to the 3.3 volt\noutput on the\nesp32 the wiper of our pot will be\nconnected to GPI pin 34 this is also\nanalog to digital converter 1 channel 6\nand finally we'll connect the other side\nof the pot to one of the ground\nconnections on our esp3 32 module we'll\nconnect GPO pin 4 to one side of the\ndropping resistor and the other side of\nthat dropping resistor will go to the\nanode or the long lead on our led the\ncathode or short lead on the LED will be\nconnected to one of the ground\npins and that takes care of our wiring\nnow let's add our esp32 to our Arduino\niot\nCloud okay so of course the first thing\nwe need to do with our new board the\nesp32 is to add a new device to the\ncloud so I'm in the device Setup Wizard\nagain and this will be a thirdparty\ndevice so we'll go into here and we can\nselect\nesp32 now there's a drop- down to select\nthe model and there's quite a few models\nhere and unfortunately this is not\nalphabetical however you can search it\nso I have a w Rover one and this will be\nthe esp32 Rover kit all\nversions we'll continue give it a name\nand I'll give it a new name of of\ncourse it's probably a good enough name\nand again I'm going to copy\nit and download the\nPDF with that name on\nit saved my\ndevice and I'm all set there's nothing\nelse to it when you're SE selecting a\nnon Arduino device it's actually pretty\nquick and so now my esp32 has been added\nas a device and we can start the code\nfor\nit so now that I've added my esp32 in as\na device I've created the thing for it\nwhich I named esp32 thingy now I've got\nmy Associated device that's the device\nthat we just set up and I've added my\nnetwork CHS in my secret key and I've\nalso added two Cloud variables for the\ntwo items we have attached to it for the\nLED I have LED control and this is a\nBoolean it's got read and write\npermission because we need to be able to\nwrite to it to control the LED and it's\nupdated on\nchange the other one I added I called\npotor value and this is an integer it's\nread only because we're just going to\nread the value of the potentiometer and\nit's also updated on change threshold of\nzero means it's a minimum change you can\nset that threshold so it doesn't update\nall that often if you\nwish okay now we'll go and look at the\nsketch in the simple editor although as\nyou know the simple editor is going away\nat the end of March but it'll show us\nwhat we need to know and so it's already\nsaid we've got two Cloud variables pot\nvalue and LED control I've added the\ncode already for the pot but not the LED\nso we Define the PIN for the\npotentiometer that's on pin 34 and the\nonly other code to add is in the loop\nand this is where we get the value so\npot value is the cloud variable and it's\ngoing to be the value of an analog read\nof the pot pin so that's pretty simple\nso let's go back into the esp32 thingy I\nhave over here we'll take a look at my\nboard I've got the pot here and as I'm\nmoving the pot as you can\nsee the values are going up and down all\nthe way at the top it's 4095 which is\nwhat we would expect as it's a 12bit\nanalog to digital converter in the\nesp32 and the other end of its travel at\nzero and so we've already set up our\nCloud variables and our thing for our\nnew esp32\nboard okay now we're back in our\ndashboard and we're going to add a\nwidget to connect to that potentiometer\nso we'll look in our widgets and there's\na number of ones we could use I decide I\nwant to use a gauge a gauge is an\ninteresting widget as it can display\nnumbers now you'll notice the value\nrange at the bottom look at the format\nof it with the decimal points watch what\nhappens when I link it to a variable so\nI'm going to link it to a variable on\nesp32 thingy and that's the pot value\nthe only one that'll work with it it's\nan integer so I linked the variable and\nnow if you look the range has gone to\ninteger ranges and not the float range\nit had before the top however at 100 is\ninsufficient for this pot so I'll have\nto change\nthat and then we can click\ndone and now let's move the pot and see\nif that\nworks and there you go all the way up to\n4095\nall the way down to zero and all kinds\nof values in between and so the gauge\nworks it was a very simple B of\nconnecting it to a cloud variable and\ngetting it to\ngo so I've gone back and modified our\nsketch to add some code for the LED now\nyou remember we have a Boolean called\nLED control that's our Cloud variable\nand we're going to use it to control the\nLED on and off so I've added an integer\nto represent the pin the LEDs on it's on\nGPO pin 4 and then down in setup I've\nset the LED as an output using a pin\nmode command and then I've gone down to\nthe bottom where they gave us a function\ncalled on LED control change and in\nthere I've added the statement to do a\ndigital WR to the LED pin with the value\nof LED control the cloud variable so\nthat's a Boolean so if it's high the LED\nshould go on and if it's low the L\nshould go off now all that's pretty\nsimple but I've done something a little\ndifferently right now that I wanted to\nshow you if you take a look at my esp32\nboard you'll notice it's being powered\nNow by a power bank instead of being\nconnected to my computer and I'm going\nto do what's called an overthe a update\nyou can see over here it says over the A\nand so what this is going to do is it's\ngoing to update over the cloud it's uh\ngoing to let me update the code without\nhaving to disconnect the microcontroller\nand connected to my computer and of\ncourse that can be very very handy when\nyou've deployed a number of cloud-based\nuh microcontrollers so let's just update\nit it's going to go through the verify\nwe'll open this we'll see if we can get\nsome information in the\nconsole and it says the upload over the\nairor has succeeded and we've updated\nour code without even having the\nmicrocontroller attached to the\ncomputer so now I'm back in my dashboard\nand we're going to add something for the\nLED that we just coded for so let's just\ngo into edit\nmode and we'll add a push button that\nsounds a good way to control an LED link\nit to the\nvariable of LED control the only Boolean\nthat we have\nhere and that's about it and so what\nhappens when I press the Buton\nbutton I'm holding it down the LED is on\nlet go the LED is\noff it's pretty well the behavior that\nwe\nexpect and so once again you can see how\nsimple it is to add items to the\ndashboard on the Arduino iot Cloud now\nthe next thing that we're going to look\nat is device to device Communications we\nnow have two devices the esp32 device\nand the Arduino Uno r four and we've\nalready seen that we can use One\ndashboard with both devices but we can\nalso make them communicate directly and\nwe do that by synchronizing their\nvariables now in order to do that we\nneed Cloud variables that are of the\nsame type so you can only synchronize a\nBoolean with a Boolean or an integer\nwith an integer Etc so what I'm going to\ndo is set it up so that pressing the\npush button on the Uno R4 will light the\nLED on the esp32 and I'm in the thing\nfor the Uno R4 right now and I'm looking\nat the button State button and I'm going\nto edit the properties of that\nbutton and so this is basically the same\nscreen you get when you first create the\nbutton and you can do this initially\nwhen you created if you wish you'll see\nthis thing that says sync with other\nthings we'll click on that and now it's\ngoing to show me all of the different\nbooleans that I have with all the\ndevices in my cloud because you can only\nsync between the same type of Vari\nNow button state is the one we're trying\nto sync and I want to sync it with LED\ncontrol on the esp32 thingy so I'm going\nto click that one off and note that you\ncan sync multiple variables if you wish\nand click synchronize\nvariables and I'll save\nthat and so now you'll notice there's a\nlittle thing over here that says the\nvariable has been synchronized so let's\ngo and test that out and see if it\nworks okay so we're going to test out\nour synchronized variable and so as you\ncan see I've got my white push button\nover here and the LED over here in the\nesp32 and press the\nbutton and the LED lights let go of it\nand it\ndoesn't it's pretty simple and we have\nsynchronized those two variables through\nthe Arduino iot Cloud now of course we\ncould do this the other way as well and\nI've got a little bit of a homework for\nyou if you choose to go ahead and do it\nuh your if you choose to accept it is to\ntake the potentiometer over here and\nhave it drive the servo motor that's\nover here now both of these devices are\nusing integers for their Cloud variables\nso you can synchronize them however the\npot is giving you a value of 0 to\n4095 and we need a value of 0 to 180 for\nthe servo so what you would need to do\nis you'd need to modify the esp32 code\nand add a map function into it to map\nthat down to 0 to 180 and then synchron\nthe two variables so give that a shot\nyou should be able to control your Servo\nmotor with the potentiometer on the\nother device proving out the cloud to\nCloud variable synchronization in the\nArduino iot Cloud triggers are a\nrelatively new feature in the Arduino\niot cloud and we haven't discussed them\nbefore triggers allow you to send off a\npush notification or an email in\nresponse to an event and you can use\ntriggers for a number of different\nmonitoring applic ations or you can use\nit just to send yourself a regular\nstatus report on something so they're\nvery useful now we have a push button on\none of our micro controllers and it\nseems to me that that would be an\nexcellent device to fire off a trigger\nso let's go and see how we would set\nthat\nup so here's our existing iot Cloud\nsetup let's bring the mobile app in we\ncan use triggers to send push\nnotifications to the app this is how\nthis is going to\nwork one of our devices which in our\ncase this is the Uno R4 WiFi board has a\npush button on it that push button state\nis maintained by a cloud variable called\nbutton State when the button has not\nbeen pressed the button state will be\nzero and nothing is going to happen\nhowever if we press the button the\nbutton state will change to one this\nwill cause a trigger to be fired and\nwill send a push notification out to our\nmobile app let's see how we set this\nup now in order to create our triggers\nwe will go into the trigger section of\nour console and add a new trigger and\nfirst we'll give our trigger a name so\nlet's rename the trigger to I don't know\nhow about button\ntrigger okay now we need to associate a\ntrigger with a cloud variable and so\nwe're going for one on our Uno test\nboard thing and the button State\nvariable which is the Boolean that will\nchange state every time the push button\nis\npressed now if you can see this here it\nsays if the cloud variable button state\nfrom Uno test board thing is true then\nyou take an action and the action we're\ngoing to take is to send a push\nnotification to the app on my phone you\ncould also send an email if you wish so\nsend a push notification it's telling me\nwho it's going to which is myself we'll\ngive it a\ntitle button press and some\ntext the white button was pressed now\nyou can also use variables inside here\nif uh you're passing a string instead of\na Boolean so you can use the thing name\nand the variable name inside there and\nput it inside your message if you wish\nbut this is all that we need right now\nso I'll say\ndone turn my trigger\non and we should be ready to\ngo okay well now it's time to test our\ntrigger so we will press the push button\nand on my app I've Got a notification\nthat says the button is pressed the\nwhite button was pressed and on the\nconsole if you go under the history you\ncan see the triggers I've actually\npushed it twice so here's my button\ntrigger and it tells me exactly when it\nis I have pressed this so you get a\nrecord of all the triggers as well and\nthat's a pretty handy thing too so as\nyou can see triggers is a very handy\nfeature in the Arduino iot\ncloud and so that wraps up our look at\nthe fundamentals of the Arduino iot\nCloud you should be able to take the\ninformation you learned today and start\ncreating some amazing cloud-based\napplications now if you want some more\ninformation about what we covered today\nthere is of course an article on the\ndronebot workshop.com website that\naccompanies this video and there's a\nlink right below the video to that\narticle now I want to let you know what\nwe're going to be covering in our future\nArduino iot cloud videos we're not going\nto do these back to back I'm going to\nslip a few other videos in but since I\nstarted to make shorter videos I should\nbe able to make more and more of them so\nyou'll be seeing a lot more dronebot\nWorkshop videos including some upcoming\ncloud videos now what we're going to be\ncovering in the next Cloud video is\nmicro python everything we've done so\nfar has been with C++ but you can also\nuse micro python with the Arduino iot\ncloud and so we're going to see how that\nworks and we're going to do another\nanother video on using your Amazon home\ndevices your alexas I don't want to say\nthe word cuz there's one behind me over\nhere but by connecting your Amazon home\ndevices into the iot cloud you really\nopen up a wealth of possibilities\nbecause of course these devices can\ncontrol so many things already when you\nadd them onto the cloud you can pretty\nwell control your whole world so you'll\nhave to take a look out for those\nepisodes the best way to find out about\nthe episodes of course is to subscribe\nto the YouTube channel all you need to\ndo do is click that red subscribe button\nand if you click on the Bell\nnotifications and if you've actually\nenabled notifications for YouTube then\nyou will get notified every time I make\na new video including videos in the\nArduino iot Cloud now when you're on the\nwebsite you might want to sign up for my\nnewsletter it's not a salesletter just\nmy way of keeping in touch with you to\nlet you know what's going on in the\nworkshop and also to let you know what\nthe subject for future videos is going\nto be and it's free to sign up for the\nnewsletter and another freebie to sign\nup for is a dronebot workshop forums if\nyou want to discuss your Cloud projects\nor anything related to electronics The\nForum is a great place to go it's free\nto sign up and there's information for\ndoing that right below this video as\nwell and so until we meet again please\ntake care of yourself please stay safe\nout there enjoy using the Arduino iot\ncloud and I'll see you again soon here\nin the dronebot workshop goodbye for\nnow\n[Music]\na\n",
  "words": [
    "today",
    "workshop",
    "got",
    "heads",
    "arduino",
    "iot",
    "cloud",
    "see",
    "new",
    "iot",
    "cloud",
    "features",
    "2024",
    "including",
    "new",
    "interface",
    "support",
    "many",
    "devices",
    "also",
    "build",
    "cloud",
    "project",
    "uses",
    "triggers",
    "send",
    "notifications",
    "clouds",
    "forecast",
    "today",
    "welcome",
    "music",
    "workshop",
    "well",
    "hello",
    "welcome",
    "workshop",
    "today",
    "going",
    "back",
    "cloud",
    "arduino",
    "iot",
    "cloud",
    "used",
    "arduino",
    "iot",
    "cloud",
    "several",
    "times",
    "dronebot",
    "workshop",
    "little",
    "many",
    "many",
    "changes",
    "iot",
    "cloud",
    "many",
    "even",
    "look",
    "got",
    "brand",
    "new",
    "interface",
    "updated",
    "editor",
    "number",
    "new",
    "features",
    "cloud",
    "including",
    "something",
    "called",
    "triggers",
    "allow",
    "send",
    "push",
    "notification",
    "email",
    "response",
    "specific",
    "events",
    "many",
    "many",
    "devices",
    "connect",
    "arduino",
    "iot",
    "cloud",
    "fact",
    "connect",
    "anything",
    "connect",
    "internet",
    "arduino",
    "iot",
    "cloud",
    "many",
    "new",
    "features",
    "cloud",
    "fact",
    "ca",
    "jam",
    "one",
    "video",
    "first",
    "series",
    "videos",
    "arduino",
    "iot",
    "cloud",
    "updated",
    "features",
    "2024",
    "used",
    "cloud",
    "video",
    "excellent",
    "update",
    "get",
    "back",
    "speed",
    "new",
    "features",
    "never",
    "used",
    "arduino",
    "iot",
    "cloud",
    "video",
    "serve",
    "introduction",
    "let",
    "go",
    "get",
    "heads",
    "arduino",
    "iot",
    "cloud",
    "arduino",
    "iot",
    "cloud",
    "internet",
    "things",
    "platform",
    "works",
    "arduino",
    "devices",
    "non",
    "arduino",
    "devices",
    "api",
    "pretty",
    "well",
    "anything",
    "connect",
    "internet",
    "iot",
    "cloud",
    "ideal",
    "platform",
    "makers",
    "experimenters",
    "allows",
    "build",
    "internet",
    "things",
    "projects",
    "without",
    "worry",
    "tedious",
    "backend",
    "security",
    "stuff",
    "order",
    "work",
    "arduino",
    "iot",
    "cloud",
    "need",
    "understand",
    "simple",
    "concepts",
    "go",
    "first",
    "concept",
    "devices",
    "devices",
    "essentially",
    "virtual",
    "twins",
    "hardware",
    "attached",
    "iot",
    "cloud",
    "platform",
    "supports",
    "arduino",
    "non",
    "arduino",
    "boards",
    "also",
    "use",
    "lauran",
    "ethernet",
    "cellular",
    "boards",
    "available",
    "arduino",
    "addition",
    "working",
    "also",
    "work",
    "python",
    "micropython",
    "javascript",
    "devices",
    "order",
    "attach",
    "devices",
    "arduino",
    "iot",
    "cloud",
    "need",
    "install",
    "arduino",
    "create",
    "agent",
    "simple",
    "program",
    "available",
    "linux",
    "mac",
    "windows",
    "new",
    "devices",
    "attached",
    "cloud",
    "assigned",
    "secret",
    "keys",
    "need",
    "save",
    "arduino",
    "provides",
    "simple",
    "method",
    "next",
    "fundamental",
    "concept",
    "arduino",
    "iot",
    "cloud",
    "things",
    "things",
    "represent",
    "connected",
    "devices",
    "data",
    "variables",
    "associated",
    "thing",
    "actually",
    "container",
    "contains",
    "devices",
    "network",
    "credentials",
    "attach",
    "devices",
    "network",
    "work",
    "cloud",
    "variables",
    "creating",
    "thing",
    "going",
    "require",
    "device",
    "secret",
    "key",
    "assigned",
    "device",
    "connected",
    "iot",
    "cloud",
    "make",
    "sure",
    "copy",
    "cloud",
    "variables",
    "one",
    "key",
    "concepts",
    "working",
    "arduino",
    "iot",
    "cloud",
    "variables",
    "exist",
    "within",
    "iot",
    "cloud",
    "define",
    "cloud",
    "variables",
    "define",
    "things",
    "cloud",
    "variables",
    "used",
    "devices",
    "change",
    "made",
    "cloud",
    "variable",
    "device",
    "passed",
    "cloud",
    "standard",
    "variable",
    "types",
    "supported",
    "cloud",
    "variables",
    "addition",
    "specialized",
    "types",
    "unique",
    "cloud",
    "variables",
    "cloud",
    "variables",
    "read",
    "right",
    "readon",
    "update",
    "value",
    "cloud",
    "variables",
    "periodically",
    "set",
    "update",
    "every",
    "time",
    "value",
    "changes",
    "another",
    "key",
    "concept",
    "arduino",
    "iot",
    "class",
    "dashboards",
    "dashboards",
    "control",
    "panel",
    "cloud",
    "applications",
    "desktop",
    "mobile",
    "versions",
    "dashboard",
    "configure",
    "independently",
    "dashboards",
    "easy",
    "use",
    "employ",
    "drag",
    "drop",
    "widgets",
    "widgets",
    "connect",
    "cloud",
    "variables",
    "trigger",
    "newer",
    "feature",
    "arduino",
    "iot",
    "cloud",
    "trigger",
    "occurs",
    "cloud",
    "variable",
    "condition",
    "met",
    "use",
    "triggers",
    "trigger",
    "action",
    "action",
    "sending",
    "email",
    "push",
    "notification",
    "arduino",
    "iot",
    "cloud",
    "mobile",
    "app",
    "currently",
    "triggers",
    "support",
    "boolean",
    "string",
    "cloud",
    "variables",
    "another",
    "update",
    "arduino",
    "iot",
    "cloud",
    "iot",
    "cloud",
    "remote",
    "app",
    "available",
    "android",
    "ios",
    "changes",
    "made",
    "iot",
    "cloud",
    "editor",
    "arduino",
    "continues",
    "bring",
    "closer",
    "functionality",
    "desktop",
    "editor",
    "overview",
    "let",
    "go",
    "log",
    "arduino",
    "iot",
    "cloud",
    "main",
    "console",
    "screen",
    "arduino",
    "iot",
    "cloud",
    "going",
    "look",
    "different",
    "pretty",
    "well",
    "consolidated",
    "everything",
    "onto",
    "one",
    "screen",
    "pretty",
    "nice",
    "going",
    "assume",
    "already",
    "arduino",
    "iot",
    "cloud",
    "account",
    "pretty",
    "easy",
    "set",
    "one",
    "homepage",
    "kind",
    "summarizes",
    "files",
    "working",
    "recently",
    "also",
    "couple",
    "vo",
    "get",
    "started",
    "brand",
    "new",
    "got",
    "documentation",
    "uh",
    "getting",
    "started",
    "wizard",
    "go",
    "basically",
    "build",
    "little",
    "cloud",
    "project",
    "right",
    "get",
    "familiar",
    "everything",
    "side",
    "see",
    "main",
    "elements",
    "cloud",
    "sketches",
    "got",
    "every",
    "sketch",
    "also",
    "shows",
    "associated",
    "associated",
    "thing",
    "particular",
    "sketch",
    "device",
    "associated",
    "well",
    "go",
    "devices",
    "see",
    "devices",
    "added",
    "cloud",
    "going",
    "adding",
    "little",
    "bit",
    "later",
    "uh",
    "things",
    "made",
    "cloud",
    "dashboards",
    "trigger",
    "main",
    "elements",
    "cloud",
    "right",
    "easy",
    "get",
    "also",
    "got",
    "resources",
    "resources",
    "things",
    "like",
    "forum",
    "project",
    "hub",
    "uh",
    "number",
    "tutorials",
    "getting",
    "started",
    "cloud",
    "complete",
    "courses",
    "using",
    "arduino",
    "arduino",
    "iot",
    "cloud",
    "get",
    "going",
    "also",
    "look",
    "templates",
    "going",
    "build",
    "cloud",
    "project",
    "necessarily",
    "need",
    "start",
    "scratch",
    "use",
    "one",
    "templates",
    "number",
    "different",
    "templates",
    "choose",
    "finally",
    "got",
    "integrations",
    "products",
    "integrated",
    "cloud",
    "case",
    "integrated",
    "edge",
    "impulse",
    "appears",
    "last",
    "bit",
    "personal",
    "usage",
    "cloud",
    "done",
    "plan",
    "usage",
    "screen",
    "main",
    "console",
    "screen",
    "arduino",
    "iot",
    "cloud",
    "going",
    "using",
    "build",
    "cloud",
    "project",
    "right",
    "got",
    "fundamentals",
    "time",
    "start",
    "working",
    "arduino",
    "iot",
    "cloud",
    "going",
    "today",
    "video",
    "going",
    "build",
    "build",
    "cloud",
    "project",
    "going",
    "start",
    "arduino",
    "uno",
    "r4",
    "wifi",
    "board",
    "although",
    "could",
    "use",
    "another",
    "arduino",
    "cloud",
    "compatible",
    "board",
    "work",
    "fine",
    "going",
    "build",
    "project",
    "eventually",
    "also",
    "include",
    "second",
    "microcontroller",
    "esp32",
    "let",
    "see",
    "hook",
    "uno",
    "r4",
    "start",
    "working",
    "arduino",
    "iot",
    "cloud",
    "going",
    "build",
    "project",
    "using",
    "arduino",
    "iot",
    "cloud",
    "using",
    "using",
    "arduino",
    "uno",
    "r4",
    "wifi",
    "board",
    "device",
    "connecting",
    "servo",
    "motor",
    "push",
    "button",
    "switch",
    "uno",
    "connecting",
    "iot",
    "cloud",
    "build",
    "dashboard",
    "interact",
    "device",
    "using",
    "cloud",
    "editor",
    "also",
    "show",
    "editing",
    "using",
    "ide",
    "already",
    "familiar",
    "addition",
    "arduino",
    "uno",
    "r4",
    "board",
    "bo",
    "going",
    "require",
    "servo",
    "motor",
    "standard",
    "sg90",
    "servo",
    "would",
    "ideal",
    "choice",
    "folks",
    "power",
    "servo",
    "motors",
    "5vt",
    "supply",
    "arduino",
    "board",
    "like",
    "besides",
    "servos",
    "work",
    "better",
    "6vs",
    "anyway",
    "going",
    "give",
    "6vt",
    "power",
    "supply",
    "simply",
    "four",
    "ablea",
    "cells",
    "wish",
    "also",
    "require",
    "push",
    "button",
    "switch",
    "momentary",
    "contact",
    "normally",
    "open",
    "push",
    "button",
    "pretty",
    "well",
    "standard",
    "device",
    "probably",
    "already",
    "begin",
    "connecting",
    "ground",
    "connection",
    "arduino",
    "negative",
    "connection",
    "6v",
    "dc",
    "servo",
    "power",
    "supply",
    "also",
    "connect",
    "ground",
    "connection",
    "ground",
    "connection",
    "servo",
    "servo",
    "motors",
    "brown",
    "wire",
    "connect",
    "positive",
    "side",
    "6vt",
    "power",
    "supply",
    "positive",
    "side",
    "servo",
    "red",
    "wire",
    "servo",
    "motors",
    "connect",
    "servo",
    "control",
    "lead",
    "usually",
    "orange",
    "yellow",
    "wire",
    "gpio",
    "pin",
    "11",
    "arduino",
    "uno",
    "r4",
    "board",
    "next",
    "connect",
    "one",
    "side",
    "push",
    "button",
    "gpio",
    "pin",
    "5",
    "uno",
    "complete",
    "circuit",
    "connecting",
    "ground",
    "side",
    "push",
    "button",
    "circuit",
    "wired",
    "let",
    "connect",
    "arduino",
    "iot",
    "cloud",
    "wired",
    "uno",
    "r4",
    "need",
    "add",
    "arduino",
    "iot",
    "cloud",
    "course",
    "device",
    "device",
    "tab",
    "cloud",
    "console",
    "right",
    "button",
    "says",
    "add",
    "device",
    "pretty",
    "well",
    "seem",
    "straightforward",
    "let",
    "click",
    "get",
    "setup",
    "device",
    "wizard",
    "three",
    "selections",
    "add",
    "arduino",
    "board",
    "course",
    "going",
    "device",
    "mostly",
    "esp",
    "32s",
    "esp8266",
    "well",
    "laura",
    "wan",
    "products",
    "manual",
    "sele",
    "ction",
    "add",
    "anything",
    "speak",
    "python",
    "micropython",
    "javascript",
    "course",
    "arduino",
    "board",
    "going",
    "click",
    "connected",
    "board",
    "usb",
    "port",
    "need",
    "course",
    "point",
    "found",
    "arduino",
    "uno",
    "r4",
    "continue",
    "mention",
    "first",
    "probably",
    "going",
    "get",
    "popup",
    "saying",
    "need",
    "install",
    "arduino",
    "create",
    "agent",
    "arduino",
    "create",
    "agent",
    "runs",
    "computer",
    "kind",
    "bridge",
    "usb",
    "port",
    "arduino",
    "iot",
    "cloud",
    "website",
    "need",
    "wo",
    "work",
    "uh",
    "prompted",
    "get",
    "download",
    "link",
    "available",
    "linux",
    "mac",
    "windows",
    "download",
    "install",
    "note",
    "runs",
    "background",
    "time",
    "little",
    "arduino",
    "symbol",
    "taskbar",
    "let",
    "know",
    "working",
    "said",
    "got",
    "agent",
    "found",
    "arduino",
    "uno",
    "r4",
    "board",
    "going",
    "go",
    "configure",
    "board",
    "says",
    "give",
    "device",
    "name",
    "suggest",
    "name",
    "device",
    "probably",
    "want",
    "different",
    "one",
    "going",
    "call",
    "one",
    "uno",
    "r4",
    "test",
    "uno",
    "r4",
    "test",
    "board",
    "okay",
    "actually",
    "going",
    "copy",
    "well",
    "show",
    "little",
    "trick",
    "going",
    "copy",
    "name",
    "going",
    "go",
    "next",
    "going",
    "say",
    "giving",
    "device",
    "id",
    "secret",
    "key",
    "secret",
    "key",
    "extremely",
    "important",
    "key",
    "ca",
    "proceed",
    "steps",
    "part",
    "security",
    "setup",
    "copy",
    "right",
    "clipboard",
    "download",
    "pdf",
    "going",
    "going",
    "download",
    "pdf",
    "copied",
    "name",
    "going",
    "going",
    "paste",
    "know",
    "secret",
    "key",
    "always",
    "going",
    "come",
    "arduino",
    "device",
    "secret",
    "key",
    "pdf",
    "pasting",
    "name",
    "front",
    "know",
    "device",
    "going",
    "save",
    "secret",
    "key",
    "saved",
    "key",
    "confirm",
    "saved",
    "key",
    "continue",
    "going",
    "make",
    "device",
    "iot",
    "ready",
    "see",
    "says",
    "process",
    "take",
    "5",
    "minutes",
    "uno",
    "r4",
    "often",
    "take",
    "5",
    "minutes",
    "going",
    "stop",
    "right",
    "cuz",
    "think",
    "want",
    "watch",
    "5",
    "minutes",
    "going",
    "spin",
    "number",
    "three",
    "wheel",
    "eventually",
    "check",
    "uno",
    "r4",
    "added",
    "device",
    "uino",
    "iot",
    "cloud",
    "device",
    "complete",
    "next",
    "thing",
    "going",
    "build",
    "thing",
    "things",
    "tab",
    "console",
    "add",
    "new",
    "thing",
    "click",
    "add",
    "thing",
    "get",
    "thing",
    "right",
    "starts",
    "untitled",
    "thing",
    "let",
    "give",
    "thing",
    "title",
    "first",
    "let",
    "call",
    "uno",
    "test",
    "board",
    "thing",
    "call",
    "anything",
    "want",
    "course",
    "see",
    "got",
    "three",
    "sections",
    "got",
    "cloud",
    "variables",
    "associated",
    "device",
    "network",
    "let",
    "associate",
    "device",
    "first",
    "uno",
    "r4",
    "test",
    "board",
    "associate",
    "need",
    "put",
    "network",
    "credentials",
    "going",
    "need",
    "secret",
    "key",
    "click",
    "give",
    "name",
    "need",
    "give",
    "password",
    "need",
    "put",
    "seeker",
    "key",
    "got",
    "mine",
    "clipboard",
    "right",
    "going",
    "paste",
    "hit",
    "save",
    "next",
    "thing",
    "need",
    "add",
    "cloud",
    "variables",
    "thing",
    "going",
    "add",
    "two",
    "thing",
    "one",
    "peripherals",
    "board",
    "first",
    "one",
    "going",
    "add",
    "button",
    "going",
    "call",
    "variable",
    "button",
    "state",
    "going",
    "select",
    "type",
    "variable",
    "number",
    "different",
    "ones",
    "choose",
    "basic",
    "ones",
    "case",
    "button",
    "want",
    "boolean",
    "permissions",
    "read",
    "right",
    "read",
    "well",
    "case",
    "push",
    "button",
    "going",
    "sending",
    "value",
    "accepting",
    "one",
    "read",
    "choice",
    "whether",
    "update",
    "whenever",
    "value",
    "chang",
    "periodically",
    "say",
    "second",
    "get",
    "choose",
    "period",
    "choose",
    "want",
    "update",
    "chain",
    "going",
    "add",
    "variable",
    "note",
    "sketch",
    "tab",
    "got",
    "little",
    "one",
    "means",
    "basic",
    "sketch",
    "writing",
    "background",
    "modified",
    "one",
    "addition",
    "button",
    "variable",
    "going",
    "add",
    "another",
    "cloud",
    "variable",
    "calling",
    "one",
    "servo",
    "position",
    "going",
    "integer",
    "number",
    "0",
    "180",
    "feeding",
    "position",
    "servo",
    "motor",
    "want",
    "one",
    "read",
    "write",
    "need",
    "able",
    "write",
    "also",
    "going",
    "keep",
    "change",
    "add",
    "variable",
    "note",
    "two",
    "additions",
    "sketch",
    "go",
    "sketch",
    "tab",
    "need",
    "let",
    "know",
    "something",
    "basic",
    "editor",
    "actually",
    "going",
    "going",
    "away",
    "arduino",
    "getting",
    "rid",
    "basic",
    "editor",
    "end",
    "march",
    "2024",
    "eventually",
    "go",
    "directly",
    "full",
    "editor",
    "may",
    "well",
    "go",
    "directly",
    "right",
    "full",
    "editor",
    "going",
    "hide",
    "right",
    "want",
    "tour",
    "full",
    "editor",
    "becoming",
    "like",
    "uh",
    "ide",
    "desktop",
    "still",
    "quite",
    "got",
    "features",
    "side",
    "go",
    "examples",
    "like",
    "regular",
    "ide",
    "add",
    "libraries",
    "number",
    "reference",
    "functions",
    "look",
    "different",
    "functions",
    "arduino",
    "implementation",
    "kind",
    "nice",
    "case",
    "going",
    "look",
    "right",
    "notice",
    "four",
    "files",
    "let",
    "make",
    "bit",
    "bigger",
    "uh",
    "main",
    "sketch",
    "one",
    "going",
    "working",
    "read",
    "something",
    "generates",
    "start",
    "adding",
    "information",
    "onto",
    "like",
    "wiring",
    "circuit",
    "everything",
    "properties",
    "thing",
    "generated",
    "automatically",
    "whenever",
    "change",
    "properties",
    "thing",
    "panel",
    "secret",
    "tab",
    "contains",
    "information",
    "credentials",
    "secret",
    "key",
    "going",
    "focusing",
    "one",
    "already",
    "generated",
    "us",
    "says",
    "added",
    "automatically",
    "integer",
    "servo",
    "position",
    "button",
    "state",
    "two",
    "cloud",
    "variables",
    "otherwise",
    "sets",
    "basic",
    "sketch",
    "modify",
    "bottom",
    "notice",
    "also",
    "added",
    "function",
    "servo",
    "position",
    "change",
    "basically",
    "servo",
    "position",
    "cloud",
    "variable",
    "read",
    "write",
    "variable",
    "called",
    "every",
    "time",
    "variable",
    "changed",
    "uh",
    "going",
    "interact",
    "variable",
    "let",
    "take",
    "look",
    "code",
    "add",
    "make",
    "project",
    "actually",
    "work",
    "order",
    "make",
    "bit",
    "easier",
    "see",
    "screen",
    "gone",
    "settings",
    "arduino",
    "iot",
    "cloud",
    "changed",
    "font",
    "size",
    "24",
    "able",
    "see",
    "bit",
    "better",
    "going",
    "start",
    "adding",
    "code",
    "fact",
    "added",
    "lines",
    "code",
    "already",
    "servo",
    "motor",
    "remember",
    "got",
    "serv",
    "motor",
    "push",
    "button",
    "switch",
    "attached",
    "board",
    "servo",
    "controlled",
    "servo",
    "position",
    "cloud",
    "variable",
    "keep",
    "mind",
    "first",
    "thing",
    "included",
    "servo",
    "library",
    "standard",
    "way",
    "would",
    "arduino",
    "sketch",
    "would",
    "sketch",
    "defined",
    "object",
    "servo",
    "called",
    "mine",
    "servo",
    "could",
    "call",
    "anything",
    "want",
    "course",
    "go",
    "setup",
    "setup",
    "need",
    "attach",
    "servo",
    "pin",
    "attached",
    "using",
    "gpo",
    "pin",
    "11",
    "servo",
    "attach",
    "11",
    "go",
    "way",
    "bottom",
    "function",
    "provided",
    "us",
    "servo",
    "position",
    "change",
    "added",
    "code",
    "remember",
    "every",
    "time",
    "variable",
    "servo",
    "position",
    "changes",
    "cloud",
    "called",
    "want",
    "want",
    "move",
    "servo",
    "motor",
    "changes",
    "going",
    "move",
    "servo",
    "motor",
    "servo",
    "right",
    "value",
    "servo",
    "position",
    "cloud",
    "variable",
    "going",
    "contain",
    "position",
    "servo",
    "need",
    "load",
    "arduino",
    "uno",
    "start",
    "creating",
    "dashboard",
    "see",
    "work",
    "upload",
    "way",
    "verify",
    "uh",
    "cloud",
    "takes",
    "quite",
    "lot",
    "longer",
    "local",
    "r",
    "weo",
    "id",
    "also",
    "little",
    "quirk",
    "noticed",
    "sometimes",
    "first",
    "time",
    "attach",
    "board",
    "might",
    "get",
    "failure",
    "case",
    "unplug",
    "plug",
    "back",
    "probably",
    "work",
    "forever",
    "ever",
    "sure",
    "causes",
    "thought",
    "throw",
    "anyway",
    "going",
    "verify",
    "upload",
    "board",
    "move",
    "make",
    "dashboard",
    "control",
    "server",
    "navigated",
    "back",
    "dashboard",
    "screen",
    "going",
    "create",
    "new",
    "dashboard",
    "going",
    "hit",
    "new",
    "dashboard",
    "give",
    "dashboard",
    "name",
    "untitled",
    "fine",
    "start",
    "adding",
    "widgets",
    "dashboard",
    "going",
    "look",
    "widget",
    "control",
    "servo",
    "motor",
    "going",
    "pick",
    "value",
    "widget",
    "start",
    "name",
    "value",
    "call",
    "something",
    "else",
    "let",
    "call",
    "sero",
    "need",
    "link",
    "variable",
    "going",
    "go",
    "uno",
    "test",
    "board",
    "thing",
    "see",
    "two",
    "variables",
    "one",
    "variable",
    "use",
    "integer",
    "boolean",
    "ca",
    "linked",
    "got",
    "gray",
    "pick",
    "integer",
    "link",
    "variable",
    "basically",
    "done",
    "integer",
    "says",
    "zero",
    "let",
    "move",
    "180",
    "see",
    "affects",
    "servo",
    "motor",
    "indeed",
    "moves",
    "sero",
    "180",
    "type",
    "90",
    "center",
    "move",
    "servo",
    "going",
    "add",
    "another",
    "widget",
    "cuz",
    "want",
    "show",
    "something",
    "going",
    "add",
    "another",
    "one",
    "control",
    "servo",
    "would",
    "good",
    "slider",
    "would",
    "great",
    "going",
    "link",
    "variable",
    "link",
    "variable",
    "one",
    "widget",
    "board",
    "going",
    "link",
    "variable",
    "going",
    "make",
    "range",
    "go",
    "180",
    "correct",
    "done",
    "notice",
    "value",
    "one",
    "go",
    "let",
    "say",
    "change",
    "manually",
    "servo",
    "moves",
    "notice",
    "widget",
    "linked",
    "value",
    "also",
    "moved",
    "well",
    "move",
    "move",
    "servo",
    "using",
    "widget",
    "notice",
    "two",
    "track",
    "let",
    "take",
    "look",
    "going",
    "got",
    "two",
    "widgets",
    "linked",
    "cloud",
    "variable",
    "cloud",
    "variable",
    "controlling",
    "position",
    "servo",
    "every",
    "time",
    "make",
    "change",
    "widgets",
    "respond",
    "affect",
    "change",
    "one",
    "basically",
    "principle",
    "building",
    "dashboard",
    "arduino",
    "iot",
    "cloud",
    "also",
    "mobile",
    "layout",
    "dashboard",
    "move",
    "around",
    "mobile",
    "app",
    "different",
    "positions",
    "etc",
    "uh",
    "desktop",
    "mobile",
    "dashboard",
    "versatile",
    "system",
    "point",
    "editing",
    "inside",
    "arduino",
    "cloud",
    "editor",
    "continue",
    "use",
    "cloud",
    "editor",
    "lot",
    "good",
    "features",
    "certainly",
    "write",
    "sketches",
    "however",
    "many",
    "features",
    "desktop",
    "editor",
    "many",
    "people",
    "may",
    "prefer",
    "use",
    "desktop",
    "editor",
    "instead",
    "desktop",
    "version",
    "going",
    "go",
    "sketchbook",
    "sketchbook",
    "shows",
    "things",
    "computer",
    "click",
    "take",
    "look",
    "got",
    "arduino",
    "iot",
    "cloud",
    "first",
    "time",
    "connected",
    "going",
    "get",
    "prompted",
    "log",
    "cloud",
    "click",
    "button",
    "open",
    "web",
    "browser",
    "page",
    "log",
    "arduino",
    "account",
    "close",
    "browser",
    "point",
    "always",
    "see",
    "cloud",
    "sketches",
    "see",
    "still",
    "cloud",
    "none",
    "actually",
    "machine",
    "one",
    "working",
    "today",
    "machine",
    "icon",
    "would",
    "full",
    "cloud",
    "like",
    "one",
    "need",
    "need",
    "pull",
    "notice",
    "highlighted",
    "get",
    "little",
    "cloud",
    "arrow",
    "click",
    "pull",
    "sketch",
    "see",
    "says",
    "done",
    "pulling",
    "sketch",
    "sketch",
    "little",
    "full",
    "cloud",
    "actually",
    "available",
    "double",
    "click",
    "open",
    "go",
    "sketch",
    "cloud",
    "local",
    "machine",
    "start",
    "working",
    "modified",
    "sketch",
    "include",
    "push",
    "button",
    "code",
    "used",
    "simplistic",
    "best",
    "going",
    "give",
    "operation",
    "completely",
    "consistent",
    "serve",
    "illustration",
    "purpose",
    "today",
    "learning",
    "iot",
    "cloud",
    "code",
    "push",
    "buttons",
    "recall",
    "boolean",
    "cloud",
    "variable",
    "called",
    "button",
    "state",
    "state",
    "high",
    "means",
    "button",
    "pushed",
    "low",
    "button",
    "pushed",
    "least",
    "logic",
    "going",
    "done",
    "added",
    "integer",
    "constant",
    "actual",
    "button",
    "called",
    "button",
    "pin",
    "got",
    "connected",
    "pin",
    "five",
    "setup",
    "defined",
    "button",
    "pin",
    "input",
    "resistor",
    "went",
    "loop",
    "code",
    "kind",
    "flaky",
    "proper",
    "way",
    "deal",
    "push",
    "button",
    "course",
    "would",
    "use",
    "interrupt",
    "would",
    "complicate",
    "code",
    "trying",
    "illustrate",
    "principles",
    "arduino",
    "iot",
    "cloud",
    "done",
    "put",
    "line",
    "loop",
    "got",
    "button",
    "state",
    "cloud",
    "variable",
    "going",
    "inverse",
    "digital",
    "read",
    "button",
    "pin",
    "want",
    "high",
    "button",
    "pressed",
    "press",
    "button",
    "actually",
    "going",
    "go",
    "low",
    "pin",
    "want",
    "exact",
    "opposite",
    "logic",
    "set",
    "state",
    "button",
    "state",
    "cloud",
    "variable",
    "reason",
    "saying",
    "c",
    "code",
    "going",
    "bit",
    "flaky",
    "loop",
    "first",
    "arduino",
    "cloud",
    "update",
    "know",
    "long",
    "going",
    "take",
    "entirely",
    "possible",
    "could",
    "press",
    "button",
    "miss",
    "busy",
    "could",
    "release",
    "button",
    "see",
    "bear",
    "mind",
    "testing",
    "illustrating",
    "principle",
    "compile",
    "load",
    "locally",
    "ide",
    "going",
    "one",
    "thing",
    "go",
    "thing",
    "properties",
    "show",
    "thing",
    "properties",
    "calling",
    "two",
    "libraries",
    "arduino",
    "iot",
    "cloud",
    "arduino",
    "connection",
    "handler",
    "neither",
    "libraries",
    "installed",
    "default",
    "id",
    "go",
    "go",
    "install",
    "arduino",
    "iot",
    "cloud",
    "going",
    "library",
    "manager",
    "install",
    "install",
    "number",
    "dependent",
    "libraries",
    "including",
    "connection",
    "handler",
    "going",
    "compile",
    "done",
    "able",
    "compile",
    "actually",
    "load",
    "directly",
    "onto",
    "board",
    "give",
    "try",
    "cloud",
    "let",
    "go",
    "seems",
    "work",
    "another",
    "thing",
    "course",
    "uh",
    "since",
    "sync",
    "cloud",
    "another",
    "button",
    "push",
    "everything",
    "back",
    "go",
    "push",
    "back",
    "cloud",
    "telling",
    "going",
    "overwrite",
    "cloud",
    "going",
    "pushed",
    "back",
    "cloud",
    "sketch",
    "cloud",
    "synchronized",
    "good",
    "idea",
    "even",
    "though",
    "load",
    "onto",
    "arduino",
    "want",
    "two",
    "sync",
    "work",
    "cloud",
    "without",
    "worrying",
    "code",
    "let",
    "go",
    "see",
    "worked",
    "added",
    "code",
    "board",
    "next",
    "logical",
    "thing",
    "would",
    "go",
    "dashboard",
    "add",
    "element",
    "represent",
    "push",
    "button",
    "moment",
    "right",
    "thing",
    "want",
    "look",
    "cloud",
    "varibles",
    "magnified",
    "screen",
    "quite",
    "bit",
    "see",
    "button",
    "state",
    "cloud",
    "variable",
    "says",
    "last",
    "value",
    "false",
    "watch",
    "happens",
    "press",
    "button",
    "see",
    "goes",
    "true",
    "pressing",
    "basically",
    "proving",
    "code",
    "working",
    "going",
    "true",
    "every",
    "time",
    "hold",
    "button",
    "great",
    "way",
    "testing",
    "troubleshooting",
    "see",
    "cloud",
    "variables",
    "working",
    "uh",
    "gives",
    "lot",
    "data",
    "current",
    "state",
    "last",
    "time",
    "updated",
    "etc",
    "problems",
    "cloud",
    "project",
    "might",
    "want",
    "go",
    "thing",
    "make",
    "sure",
    "variables",
    "operating",
    "way",
    "think",
    "back",
    "dashboard",
    "want",
    "show",
    "something",
    "dashboard",
    "point",
    "earlier",
    "notice",
    "right",
    "seem",
    "option",
    "add",
    "widgets",
    "view",
    "mode",
    "mode",
    "would",
    "normally",
    "keep",
    "dashboard",
    "using",
    "toggle",
    "edit",
    "mode",
    "add",
    "widgets",
    "move",
    "around",
    "going",
    "add",
    "widget",
    "push",
    "button",
    "uh",
    "good",
    "widget",
    "probably",
    "led",
    "widget",
    "led",
    "widget",
    "basically",
    "indicator",
    "make",
    "red",
    "led",
    "green",
    "led",
    "actually",
    "two",
    "leds",
    "well",
    "red",
    "green",
    "one",
    "link",
    "course",
    "cloud",
    "variable",
    "button",
    "state",
    "boolean",
    "one",
    "link",
    "say",
    "done",
    "see",
    "works",
    "press",
    "release",
    "goes",
    "led",
    "seem",
    "work",
    "well",
    "uh",
    "attached",
    "cloud",
    "variable",
    "monitored",
    "earlier",
    "see",
    "pretty",
    "easy",
    "add",
    "things",
    "arduino",
    "iot",
    "cloud",
    "examined",
    "lot",
    "cloud",
    "features",
    "arduino",
    "uno",
    "r4",
    "device",
    "going",
    "add",
    "another",
    "device",
    "onto",
    "iot",
    "network",
    "specifically",
    "esp32",
    "board",
    "using",
    "one",
    "esp32",
    "dev",
    "kits",
    "could",
    "use",
    "esp32",
    "key",
    "concept",
    "using",
    "non",
    "arduino",
    "board",
    "also",
    "going",
    "examine",
    "another",
    "couple",
    "concepts",
    "one",
    "otaa",
    "theair",
    "updates",
    "great",
    "feature",
    "allows",
    "update",
    "code",
    "board",
    "without",
    "uh",
    "disconnecting",
    "cloud",
    "connecting",
    "computer",
    "updates",
    "directly",
    "cloud",
    "really",
    "handy",
    "feature",
    "another",
    "thing",
    "going",
    "work",
    "communications",
    "two",
    "microcontroller",
    "boards",
    "able",
    "talk",
    "one",
    "another",
    "using",
    "cloud",
    "variables",
    "arduino",
    "iot",
    "cloud",
    "let",
    "go",
    "see",
    "hook",
    "second",
    "microcontroller",
    "cloud",
    "going",
    "expand",
    "iot",
    "cloud",
    "network",
    "bringing",
    "another",
    "board",
    "board",
    "going",
    "esp32",
    "attach",
    "potentiometer",
    "led",
    "esp32",
    "attach",
    "arduino",
    "iot",
    "cloud",
    "learn",
    "add",
    "non",
    "arduino",
    "device",
    "cloud",
    "also",
    "able",
    "experiment",
    "device",
    "device",
    "direct",
    "communications",
    "work",
    "overthe",
    "updates",
    "update",
    "code",
    "devices",
    "connected",
    "iot",
    "cloud",
    "using",
    "es32",
    "devkit",
    "module",
    "could",
    "pretty",
    "well",
    "use",
    "esp32",
    "want",
    "gpio",
    "pins",
    "using",
    "could",
    "change",
    "code",
    "also",
    "going",
    "need",
    "potentiometer",
    "using",
    "10k",
    "linear",
    "pot",
    "although",
    "value",
    "10k",
    "would",
    "also",
    "work",
    "make",
    "sure",
    "linear",
    "light",
    "emitting",
    "dial",
    "using",
    "standard",
    "red",
    "led",
    "dropping",
    "resistor",
    "diode",
    "150",
    "ohm",
    "resistor",
    "work",
    "well",
    "begin",
    "connecting",
    "one",
    "side",
    "potentiometer",
    "volt",
    "output",
    "esp32",
    "wiper",
    "pot",
    "connected",
    "gpi",
    "pin",
    "34",
    "also",
    "analog",
    "digital",
    "converter",
    "1",
    "channel",
    "6",
    "finally",
    "connect",
    "side",
    "pot",
    "one",
    "ground",
    "connections",
    "esp3",
    "32",
    "module",
    "connect",
    "gpo",
    "pin",
    "4",
    "one",
    "side",
    "dropping",
    "resistor",
    "side",
    "dropping",
    "resistor",
    "go",
    "anode",
    "long",
    "lead",
    "led",
    "cathode",
    "short",
    "lead",
    "led",
    "connected",
    "one",
    "ground",
    "pins",
    "takes",
    "care",
    "wiring",
    "let",
    "add",
    "esp32",
    "arduino",
    "iot",
    "cloud",
    "okay",
    "course",
    "first",
    "thing",
    "need",
    "new",
    "board",
    "esp32",
    "add",
    "new",
    "device",
    "cloud",
    "device",
    "setup",
    "wizard",
    "thirdparty",
    "device",
    "go",
    "select",
    "esp32",
    "select",
    "model",
    "quite",
    "models",
    "unfortunately",
    "alphabetical",
    "however",
    "search",
    "w",
    "rover",
    "one",
    "esp32",
    "rover",
    "kit",
    "versions",
    "continue",
    "give",
    "name",
    "give",
    "new",
    "name",
    "course",
    "probably",
    "good",
    "enough",
    "name",
    "going",
    "copy",
    "download",
    "pdf",
    "name",
    "saved",
    "device",
    "set",
    "nothing",
    "else",
    "se",
    "selecting",
    "non",
    "arduino",
    "device",
    "actually",
    "pretty",
    "quick",
    "esp32",
    "added",
    "device",
    "start",
    "code",
    "added",
    "esp32",
    "device",
    "created",
    "thing",
    "named",
    "esp32",
    "thingy",
    "got",
    "associated",
    "device",
    "device",
    "set",
    "added",
    "network",
    "chs",
    "secret",
    "key",
    "also",
    "added",
    "two",
    "cloud",
    "variables",
    "two",
    "items",
    "attached",
    "led",
    "led",
    "control",
    "boolean",
    "got",
    "read",
    "write",
    "permission",
    "need",
    "able",
    "write",
    "control",
    "led",
    "updated",
    "change",
    "one",
    "added",
    "called",
    "potor",
    "value",
    "integer",
    "read",
    "going",
    "read",
    "value",
    "potentiometer",
    "also",
    "updated",
    "change",
    "threshold",
    "zero",
    "means",
    "minimum",
    "change",
    "set",
    "threshold",
    "update",
    "often",
    "wish",
    "okay",
    "go",
    "look",
    "sketch",
    "simple",
    "editor",
    "although",
    "know",
    "simple",
    "editor",
    "going",
    "away",
    "end",
    "march",
    "show",
    "us",
    "need",
    "know",
    "already",
    "said",
    "got",
    "two",
    "cloud",
    "variables",
    "pot",
    "value",
    "led",
    "control",
    "added",
    "code",
    "already",
    "pot",
    "led",
    "define",
    "pin",
    "potentiometer",
    "pin",
    "34",
    "code",
    "add",
    "loop",
    "get",
    "value",
    "pot",
    "value",
    "cloud",
    "variable",
    "going",
    "value",
    "analog",
    "read",
    "pot",
    "pin",
    "pretty",
    "simple",
    "let",
    "go",
    "back",
    "esp32",
    "thingy",
    "take",
    "look",
    "board",
    "got",
    "pot",
    "moving",
    "pot",
    "see",
    "values",
    "going",
    "way",
    "top",
    "4095",
    "would",
    "expect",
    "12bit",
    "analog",
    "digital",
    "converter",
    "esp32",
    "end",
    "travel",
    "zero",
    "already",
    "set",
    "cloud",
    "variables",
    "thing",
    "new",
    "esp32",
    "board",
    "okay",
    "back",
    "dashboard",
    "going",
    "add",
    "widget",
    "connect",
    "potentiometer",
    "look",
    "widgets",
    "number",
    "ones",
    "could",
    "use",
    "decide",
    "want",
    "use",
    "gauge",
    "gauge",
    "interesting",
    "widget",
    "display",
    "numbers",
    "notice",
    "value",
    "range",
    "bottom",
    "look",
    "format",
    "decimal",
    "points",
    "watch",
    "happens",
    "link",
    "variable",
    "going",
    "link",
    "variable",
    "esp32",
    "thingy",
    "pot",
    "value",
    "one",
    "work",
    "integer",
    "linked",
    "variable",
    "look",
    "range",
    "gone",
    "integer",
    "ranges",
    "float",
    "range",
    "top",
    "however",
    "100",
    "insufficient",
    "pot",
    "change",
    "click",
    "done",
    "let",
    "move",
    "pot",
    "see",
    "works",
    "go",
    "way",
    "4095",
    "way",
    "zero",
    "kinds",
    "values",
    "gauge",
    "works",
    "simple",
    "b",
    "connecting",
    "cloud",
    "variable",
    "getting",
    "go",
    "gone",
    "back",
    "modified",
    "sketch",
    "add",
    "code",
    "led",
    "remember",
    "boolean",
    "called",
    "led",
    "control",
    "cloud",
    "variable",
    "going",
    "use",
    "control",
    "led",
    "added",
    "integer",
    "represent",
    "pin",
    "leds",
    "gpo",
    "pin",
    "4",
    "setup",
    "set",
    "led",
    "output",
    "using",
    "pin",
    "mode",
    "command",
    "gone",
    "bottom",
    "gave",
    "us",
    "function",
    "called",
    "led",
    "control",
    "change",
    "added",
    "statement",
    "digital",
    "wr",
    "led",
    "pin",
    "value",
    "led",
    "control",
    "cloud",
    "variable",
    "boolean",
    "high",
    "led",
    "go",
    "low",
    "l",
    "go",
    "pretty",
    "simple",
    "done",
    "something",
    "little",
    "differently",
    "right",
    "wanted",
    "show",
    "take",
    "look",
    "esp32",
    "board",
    "notice",
    "powered",
    "power",
    "bank",
    "instead",
    "connected",
    "computer",
    "going",
    "called",
    "overthe",
    "update",
    "see",
    "says",
    "going",
    "going",
    "update",
    "cloud",
    "uh",
    "going",
    "let",
    "update",
    "code",
    "without",
    "disconnect",
    "microcontroller",
    "connected",
    "computer",
    "course",
    "handy",
    "deployed",
    "number",
    "uh",
    "microcontrollers",
    "let",
    "update",
    "going",
    "go",
    "verify",
    "open",
    "see",
    "get",
    "information",
    "console",
    "says",
    "upload",
    "airor",
    "succeeded",
    "updated",
    "code",
    "without",
    "even",
    "microcontroller",
    "attached",
    "computer",
    "back",
    "dashboard",
    "going",
    "add",
    "something",
    "led",
    "coded",
    "let",
    "go",
    "edit",
    "mode",
    "add",
    "push",
    "button",
    "sounds",
    "good",
    "way",
    "control",
    "led",
    "link",
    "variable",
    "led",
    "control",
    "boolean",
    "happens",
    "press",
    "buton",
    "button",
    "holding",
    "led",
    "let",
    "go",
    "led",
    "pretty",
    "well",
    "behavior",
    "expect",
    "see",
    "simple",
    "add",
    "items",
    "dashboard",
    "arduino",
    "iot",
    "cloud",
    "next",
    "thing",
    "going",
    "look",
    "device",
    "device",
    "communications",
    "two",
    "devices",
    "esp32",
    "device",
    "arduino",
    "uno",
    "r",
    "four",
    "already",
    "seen",
    "use",
    "one",
    "dashboard",
    "devices",
    "also",
    "make",
    "communicate",
    "directly",
    "synchronizing",
    "variables",
    "order",
    "need",
    "cloud",
    "variables",
    "type",
    "synchronize",
    "boolean",
    "boolean",
    "integer",
    "integer",
    "etc",
    "going",
    "set",
    "pressing",
    "push",
    "button",
    "uno",
    "r4",
    "light",
    "led",
    "esp32",
    "thing",
    "uno",
    "r4",
    "right",
    "looking",
    "button",
    "state",
    "button",
    "going",
    "edit",
    "properties",
    "button",
    "basically",
    "screen",
    "get",
    "first",
    "create",
    "button",
    "initially",
    "created",
    "wish",
    "see",
    "thing",
    "says",
    "sync",
    "things",
    "click",
    "going",
    "show",
    "different",
    "booleans",
    "devices",
    "cloud",
    "sync",
    "type",
    "vari",
    "button",
    "state",
    "one",
    "trying",
    "sync",
    "want",
    "sync",
    "led",
    "control",
    "esp32",
    "thingy",
    "going",
    "click",
    "one",
    "note",
    "sync",
    "multiple",
    "variables",
    "wish",
    "click",
    "synchronize",
    "variables",
    "save",
    "notice",
    "little",
    "thing",
    "says",
    "variable",
    "synchronized",
    "let",
    "go",
    "test",
    "see",
    "works",
    "okay",
    "going",
    "test",
    "synchronized",
    "variable",
    "see",
    "got",
    "white",
    "push",
    "button",
    "led",
    "esp32",
    "press",
    "button",
    "led",
    "lights",
    "let",
    "go",
    "pretty",
    "simple",
    "synchronized",
    "two",
    "variables",
    "arduino",
    "iot",
    "cloud",
    "course",
    "could",
    "way",
    "well",
    "got",
    "little",
    "bit",
    "homework",
    "choose",
    "go",
    "ahead",
    "uh",
    "choose",
    "accept",
    "take",
    "potentiometer",
    "drive",
    "servo",
    "motor",
    "devices",
    "using",
    "integers",
    "cloud",
    "variables",
    "synchronize",
    "however",
    "pot",
    "giving",
    "value",
    "0",
    "4095",
    "need",
    "value",
    "0",
    "180",
    "servo",
    "would",
    "need",
    "need",
    "modify",
    "esp32",
    "code",
    "add",
    "map",
    "function",
    "map",
    "0",
    "180",
    "synchron",
    "two",
    "variables",
    "give",
    "shot",
    "able",
    "control",
    "servo",
    "motor",
    "potentiometer",
    "device",
    "proving",
    "cloud",
    "cloud",
    "variable",
    "synchronization",
    "arduino",
    "iot",
    "cloud",
    "triggers",
    "relatively",
    "new",
    "feature",
    "arduino",
    "iot",
    "cloud",
    "discussed",
    "triggers",
    "allow",
    "send",
    "push",
    "notification",
    "email",
    "response",
    "event",
    "use",
    "triggers",
    "number",
    "different",
    "monitoring",
    "applic",
    "ations",
    "use",
    "send",
    "regular",
    "status",
    "report",
    "something",
    "useful",
    "push",
    "button",
    "one",
    "micro",
    "controllers",
    "seems",
    "would",
    "excellent",
    "device",
    "fire",
    "trigger",
    "let",
    "go",
    "see",
    "would",
    "set",
    "existing",
    "iot",
    "cloud",
    "setup",
    "let",
    "bring",
    "mobile",
    "app",
    "use",
    "triggers",
    "send",
    "push",
    "notifications",
    "app",
    "going",
    "work",
    "one",
    "devices",
    "case",
    "uno",
    "r4",
    "wifi",
    "board",
    "push",
    "button",
    "push",
    "button",
    "state",
    "maintained",
    "cloud",
    "variable",
    "called",
    "button",
    "state",
    "button",
    "pressed",
    "button",
    "state",
    "zero",
    "nothing",
    "going",
    "happen",
    "however",
    "press",
    "button",
    "button",
    "state",
    "change",
    "one",
    "cause",
    "trigger",
    "fired",
    "send",
    "push",
    "notification",
    "mobile",
    "app",
    "let",
    "see",
    "set",
    "order",
    "create",
    "triggers",
    "go",
    "trigger",
    "section",
    "console",
    "add",
    "new",
    "trigger",
    "first",
    "give",
    "trigger",
    "name",
    "let",
    "rename",
    "trigger",
    "know",
    "button",
    "trigger",
    "okay",
    "need",
    "associate",
    "trigger",
    "cloud",
    "variable",
    "going",
    "one",
    "uno",
    "test",
    "board",
    "thing",
    "button",
    "state",
    "variable",
    "boolean",
    "change",
    "state",
    "every",
    "time",
    "push",
    "button",
    "pressed",
    "see",
    "says",
    "cloud",
    "variable",
    "button",
    "state",
    "uno",
    "test",
    "board",
    "thing",
    "true",
    "take",
    "action",
    "action",
    "going",
    "take",
    "send",
    "push",
    "notification",
    "app",
    "phone",
    "could",
    "also",
    "send",
    "email",
    "wish",
    "send",
    "push",
    "notification",
    "telling",
    "going",
    "give",
    "title",
    "button",
    "press",
    "text",
    "white",
    "button",
    "pressed",
    "also",
    "use",
    "variables",
    "inside",
    "uh",
    "passing",
    "string",
    "instead",
    "boolean",
    "use",
    "thing",
    "name",
    "variable",
    "name",
    "inside",
    "put",
    "inside",
    "message",
    "wish",
    "need",
    "right",
    "say",
    "done",
    "turn",
    "trigger",
    "ready",
    "go",
    "okay",
    "well",
    "time",
    "test",
    "trigger",
    "press",
    "push",
    "button",
    "app",
    "got",
    "notification",
    "says",
    "button",
    "pressed",
    "white",
    "button",
    "pressed",
    "console",
    "go",
    "history",
    "see",
    "triggers",
    "actually",
    "pushed",
    "twice",
    "button",
    "trigger",
    "tells",
    "exactly",
    "pressed",
    "get",
    "record",
    "triggers",
    "well",
    "pretty",
    "handy",
    "thing",
    "see",
    "triggers",
    "handy",
    "feature",
    "arduino",
    "iot",
    "cloud",
    "wraps",
    "look",
    "fundamentals",
    "arduino",
    "iot",
    "cloud",
    "able",
    "take",
    "information",
    "learned",
    "today",
    "start",
    "creating",
    "amazing",
    "applications",
    "want",
    "information",
    "covered",
    "today",
    "course",
    "article",
    "dronebot",
    "website",
    "accompanies",
    "video",
    "link",
    "right",
    "video",
    "article",
    "want",
    "let",
    "know",
    "going",
    "covering",
    "future",
    "arduino",
    "iot",
    "cloud",
    "videos",
    "going",
    "back",
    "back",
    "going",
    "slip",
    "videos",
    "since",
    "started",
    "make",
    "shorter",
    "videos",
    "able",
    "make",
    "seeing",
    "lot",
    "dronebot",
    "workshop",
    "videos",
    "including",
    "upcoming",
    "cloud",
    "videos",
    "going",
    "covering",
    "next",
    "cloud",
    "video",
    "micro",
    "python",
    "everything",
    "done",
    "far",
    "also",
    "use",
    "micro",
    "python",
    "arduino",
    "iot",
    "cloud",
    "going",
    "see",
    "works",
    "going",
    "another",
    "another",
    "video",
    "using",
    "amazon",
    "home",
    "devices",
    "alexas",
    "want",
    "say",
    "word",
    "cuz",
    "one",
    "behind",
    "connecting",
    "amazon",
    "home",
    "devices",
    "iot",
    "cloud",
    "really",
    "open",
    "wealth",
    "possibilities",
    "course",
    "devices",
    "control",
    "many",
    "things",
    "already",
    "add",
    "onto",
    "cloud",
    "pretty",
    "well",
    "control",
    "whole",
    "world",
    "take",
    "look",
    "episodes",
    "best",
    "way",
    "find",
    "episodes",
    "course",
    "subscribe",
    "youtube",
    "channel",
    "need",
    "click",
    "red",
    "subscribe",
    "button",
    "click",
    "bell",
    "notifications",
    "actually",
    "enabled",
    "notifications",
    "youtube",
    "get",
    "notified",
    "every",
    "time",
    "make",
    "new",
    "video",
    "including",
    "videos",
    "arduino",
    "iot",
    "cloud",
    "website",
    "might",
    "want",
    "sign",
    "newsletter",
    "salesletter",
    "way",
    "keeping",
    "touch",
    "let",
    "know",
    "going",
    "workshop",
    "also",
    "let",
    "know",
    "subject",
    "future",
    "videos",
    "going",
    "free",
    "sign",
    "newsletter",
    "another",
    "freebie",
    "sign",
    "dronebot",
    "workshop",
    "forums",
    "want",
    "discuss",
    "cloud",
    "projects",
    "anything",
    "related",
    "electronics",
    "forum",
    "great",
    "place",
    "go",
    "free",
    "sign",
    "information",
    "right",
    "video",
    "well",
    "meet",
    "please",
    "take",
    "care",
    "please",
    "stay",
    "safe",
    "enjoy",
    "using",
    "arduino",
    "iot",
    "cloud",
    "see",
    "soon",
    "dronebot",
    "workshop",
    "goodbye",
    "music"
  ],
  "keywords": [
    "today",
    "workshop",
    "got",
    "arduino",
    "iot",
    "cloud",
    "see",
    "new",
    "features",
    "including",
    "many",
    "devices",
    "also",
    "build",
    "project",
    "triggers",
    "send",
    "well",
    "going",
    "back",
    "used",
    "dronebot",
    "little",
    "changes",
    "look",
    "updated",
    "editor",
    "number",
    "something",
    "called",
    "push",
    "notification",
    "connect",
    "anything",
    "one",
    "video",
    "first",
    "videos",
    "update",
    "get",
    "let",
    "go",
    "things",
    "works",
    "non",
    "pretty",
    "without",
    "order",
    "work",
    "need",
    "simple",
    "attached",
    "use",
    "available",
    "working",
    "attach",
    "install",
    "create",
    "secret",
    "next",
    "connected",
    "variables",
    "associated",
    "thing",
    "actually",
    "network",
    "device",
    "key",
    "make",
    "copy",
    "change",
    "variable",
    "standard",
    "read",
    "right",
    "value",
    "set",
    "every",
    "time",
    "another",
    "control",
    "desktop",
    "mobile",
    "dashboard",
    "widgets",
    "trigger",
    "feature",
    "app",
    "boolean",
    "main",
    "console",
    "screen",
    "different",
    "everything",
    "onto",
    "already",
    "uh",
    "basically",
    "side",
    "sketch",
    "added",
    "bit",
    "like",
    "using",
    "start",
    "choose",
    "case",
    "done",
    "uno",
    "r4",
    "board",
    "could",
    "microcontroller",
    "esp32",
    "connecting",
    "servo",
    "motor",
    "button",
    "show",
    "would",
    "power",
    "give",
    "wish",
    "open",
    "probably",
    "ground",
    "connection",
    "red",
    "pin",
    "add",
    "course",
    "tab",
    "says",
    "click",
    "setup",
    "computer",
    "download",
    "link",
    "know",
    "name",
    "want",
    "call",
    "test",
    "okay",
    "say",
    "take",
    "two",
    "state",
    "basic",
    "position",
    "integer",
    "180",
    "write",
    "able",
    "directly",
    "full",
    "notice",
    "information",
    "properties",
    "code",
    "way",
    "move",
    "lot",
    "widget",
    "zero",
    "good",
    "however",
    "resistor",
    "pressed",
    "press",
    "sync",
    "mode",
    "led",
    "potentiometer",
    "pot"
  ]
}