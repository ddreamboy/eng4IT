{
  "text": "JavaScript event listeners are great\nthey allow you to execute code when the\nuser clicks a button when he enters text\ninto an input field when he hits a\nspecific key on his keyboard or when he\ndoes a million other possible things we\ncan always make something happen as a\nresponse today we're going to explore\nevent listeners by looking at real code\nexamples my name is Fabian and this is\ncoding to go the channel where we learn\nthe most relevant coding Concepts in\njust a few minutes I'm assuming you\nalready have an HTML element that you\nwant to interact with like a button and\nyou also have a Javascript file that you\nhave imported properly in your HTML hat\nusing the defer attribute now to work\nwith this button we need to get it into\na JavaScript variable const button\nequals document. getet element by ID my\nbutton I basically search the document\nfor the element that has the ID my\nbutton this ID has to be identical with\nthe ID that I assigned in HTML now we\ncan use button. add event listener this\nis a JavaScript function this function\nwill receive two arguments the first one\nis the event type we want to listen to\nthe event click make sure to write this\nas a string in quotation marks now we\nwrite comma to assign the second\nargument which is the function we want\nto call let's call it do something this\nfunction needs to be defined somewhere\nfunction do something for now we can\nshow an alert hello world and this code\nshould already work when we click on the\nbutton there's a popup saying hello\nworld now what you do with this function\nis completely up to you let's look at a\nfew examp examples you can create a\nsimple Cookie Clickers clone by having a\ncounter that increases every time you\nclick the button a very common use case\nfor event listeners would be to add and\nremove classes on click because these\nclasses can have many different styles\nthat we applied in CSS doing that will\nallow the user to change the design of\nthe website but click is by far not the\nonly event you need to know since you\ncan apply an event listener to any HTML\nelement they all have their own unique\nevents that you can listen to the most\nbasic event t that every element has our\nclick for clicking Mouse over for when\nyou hover over the element and mouse out\nwhen the mouse leaves the element but\nyou can also detect keyboard inputs\nfirst we apply an event listener to the\nentire window the event that we are\nwaiting for is key down this event will\nbe triggered once any key on the\nkeyboard is clicked by the way you don't\nhave to write a separate function for\nthe second argument you can simply\nDefine your function directly inside the\nparenthesis then you don't have to come\nup with the name for it the interesting\nthing here is that we actually using the\nevent object e this parameter is\nsomething very special when working with\nevent listeners it is an object that\nholds a lot of information about the\nevent that has been triggered let's\nconsole lock this event object and see\nwhat happens if I hit a key on my\nkeyboard on the browser console we can\nsee our keyboard event object this one\nhas a lot of properties the letter F\nthat I pressed now if you combine this\nkey code property with if conditions and\nLoops you can already start developing\nsimple browser games just ask if a\ncertain key was pressed and then do\nsomething as a response each key has a\nunique key code that you can look up in\nthe documentation when you need it or\njust console log the event. code and\nwatch it being printed in the console my\nfavorite event type is input because\nthis is by far the most useful next to\nclick the input event allows us to do\nsomething whenever something happens\ninside an input field select or text\narea every single time you enter a\nletter the input event is fired you can\nuse this code for example to create a\nlive display the heading will greet me\nbecause I'm assigning the event. target.\nvalue to the inner text of the heading\nthe property that I used to implement\nthis feature was the target the target\nproperty contains the information on\nwhat element the event was triggered\nwhich is the input field pretty cool now\nwe know the first parameter is the event\ntype it controls when to do something\nfor example on click the second\nparameter is the function that controls\nwhat to do when the event is triggered\nbut there's also a third parameter which\nis the options object this is an object\nwhere can provide additional options for\nthe event listener now you can go down a\nreal rabbit hole and read everything\nabout these options but honestly you're\nnot going to use them very often the\nmost famous option that you might\nactually use would be the Boolean once\nif you set this to true then the event\nlistener can only be triggered one time\nthe rest of the events will be ignored\nthis was coding to go and if you learned\nsomething new today like and subscribe\nto support our Channel you also might\nwant to check out this video right here\n",
  "words": [
    "javascript",
    "event",
    "listeners",
    "great",
    "allow",
    "execute",
    "code",
    "user",
    "clicks",
    "button",
    "enters",
    "text",
    "input",
    "field",
    "hits",
    "specific",
    "key",
    "keyboard",
    "million",
    "possible",
    "things",
    "always",
    "make",
    "something",
    "happen",
    "response",
    "today",
    "going",
    "explore",
    "event",
    "listeners",
    "looking",
    "real",
    "code",
    "examples",
    "name",
    "fabian",
    "coding",
    "go",
    "channel",
    "learn",
    "relevant",
    "coding",
    "concepts",
    "minutes",
    "assuming",
    "already",
    "html",
    "element",
    "want",
    "interact",
    "like",
    "button",
    "also",
    "javascript",
    "file",
    "imported",
    "properly",
    "html",
    "hat",
    "using",
    "defer",
    "attribute",
    "work",
    "button",
    "need",
    "get",
    "javascript",
    "variable",
    "const",
    "button",
    "equals",
    "document",
    "getet",
    "element",
    "id",
    "button",
    "basically",
    "search",
    "document",
    "element",
    "id",
    "button",
    "id",
    "identical",
    "id",
    "assigned",
    "html",
    "use",
    "button",
    "add",
    "event",
    "listener",
    "javascript",
    "function",
    "function",
    "receive",
    "two",
    "arguments",
    "first",
    "one",
    "event",
    "type",
    "want",
    "listen",
    "event",
    "click",
    "make",
    "sure",
    "write",
    "string",
    "quotation",
    "marks",
    "write",
    "comma",
    "assign",
    "second",
    "argument",
    "function",
    "want",
    "call",
    "let",
    "call",
    "something",
    "function",
    "needs",
    "defined",
    "somewhere",
    "function",
    "something",
    "show",
    "alert",
    "hello",
    "world",
    "code",
    "already",
    "work",
    "click",
    "button",
    "popup",
    "saying",
    "hello",
    "world",
    "function",
    "completely",
    "let",
    "look",
    "examp",
    "examples",
    "create",
    "simple",
    "cookie",
    "clickers",
    "clone",
    "counter",
    "increases",
    "every",
    "time",
    "click",
    "button",
    "common",
    "use",
    "case",
    "event",
    "listeners",
    "would",
    "add",
    "remove",
    "classes",
    "click",
    "classes",
    "many",
    "different",
    "styles",
    "applied",
    "css",
    "allow",
    "user",
    "change",
    "design",
    "website",
    "click",
    "far",
    "event",
    "need",
    "know",
    "since",
    "apply",
    "event",
    "listener",
    "html",
    "element",
    "unique",
    "events",
    "listen",
    "basic",
    "event",
    "every",
    "element",
    "click",
    "clicking",
    "mouse",
    "hover",
    "element",
    "mouse",
    "mouse",
    "leaves",
    "element",
    "also",
    "detect",
    "keyboard",
    "inputs",
    "first",
    "apply",
    "event",
    "listener",
    "entire",
    "window",
    "event",
    "waiting",
    "key",
    "event",
    "triggered",
    "key",
    "keyboard",
    "clicked",
    "way",
    "write",
    "separate",
    "function",
    "second",
    "argument",
    "simply",
    "define",
    "function",
    "directly",
    "inside",
    "parenthesis",
    "come",
    "name",
    "interesting",
    "thing",
    "actually",
    "using",
    "event",
    "object",
    "e",
    "parameter",
    "something",
    "special",
    "working",
    "event",
    "listeners",
    "object",
    "holds",
    "lot",
    "information",
    "event",
    "triggered",
    "let",
    "console",
    "lock",
    "event",
    "object",
    "see",
    "happens",
    "hit",
    "key",
    "keyboard",
    "browser",
    "console",
    "see",
    "keyboard",
    "event",
    "object",
    "one",
    "lot",
    "properties",
    "letter",
    "f",
    "pressed",
    "combine",
    "key",
    "code",
    "property",
    "conditions",
    "loops",
    "already",
    "start",
    "developing",
    "simple",
    "browser",
    "games",
    "ask",
    "certain",
    "key",
    "pressed",
    "something",
    "response",
    "key",
    "unique",
    "key",
    "code",
    "look",
    "documentation",
    "need",
    "console",
    "log",
    "event",
    "code",
    "watch",
    "printed",
    "console",
    "favorite",
    "event",
    "type",
    "input",
    "far",
    "useful",
    "next",
    "click",
    "input",
    "event",
    "allows",
    "us",
    "something",
    "whenever",
    "something",
    "happens",
    "inside",
    "input",
    "field",
    "select",
    "text",
    "area",
    "every",
    "single",
    "time",
    "enter",
    "letter",
    "input",
    "event",
    "fired",
    "use",
    "code",
    "example",
    "create",
    "live",
    "display",
    "heading",
    "greet",
    "assigning",
    "event",
    "target",
    "value",
    "inner",
    "text",
    "heading",
    "property",
    "used",
    "implement",
    "feature",
    "target",
    "target",
    "property",
    "contains",
    "information",
    "element",
    "event",
    "triggered",
    "input",
    "field",
    "pretty",
    "cool",
    "know",
    "first",
    "parameter",
    "event",
    "type",
    "controls",
    "something",
    "example",
    "click",
    "second",
    "parameter",
    "function",
    "controls",
    "event",
    "triggered",
    "also",
    "third",
    "parameter",
    "options",
    "object",
    "object",
    "provide",
    "additional",
    "options",
    "event",
    "listener",
    "go",
    "real",
    "rabbit",
    "hole",
    "read",
    "everything",
    "options",
    "honestly",
    "going",
    "use",
    "often",
    "famous",
    "option",
    "might",
    "actually",
    "use",
    "would",
    "boolean",
    "set",
    "true",
    "event",
    "listener",
    "triggered",
    "one",
    "time",
    "rest",
    "events",
    "ignored",
    "coding",
    "go",
    "learned",
    "something",
    "new",
    "today",
    "like",
    "subscribe",
    "support",
    "channel",
    "also",
    "might",
    "want",
    "check",
    "video",
    "right"
  ],
  "keywords": [
    "javascript",
    "event",
    "listeners",
    "allow",
    "code",
    "user",
    "button",
    "text",
    "input",
    "field",
    "key",
    "keyboard",
    "make",
    "something",
    "response",
    "today",
    "going",
    "real",
    "examples",
    "name",
    "coding",
    "go",
    "channel",
    "already",
    "html",
    "element",
    "want",
    "like",
    "also",
    "using",
    "work",
    "need",
    "document",
    "id",
    "use",
    "add",
    "listener",
    "function",
    "first",
    "one",
    "type",
    "listen",
    "click",
    "write",
    "second",
    "argument",
    "call",
    "let",
    "hello",
    "world",
    "look",
    "create",
    "simple",
    "every",
    "time",
    "would",
    "classes",
    "far",
    "know",
    "apply",
    "unique",
    "events",
    "mouse",
    "triggered",
    "inside",
    "actually",
    "object",
    "parameter",
    "lot",
    "information",
    "console",
    "see",
    "happens",
    "browser",
    "letter",
    "pressed",
    "property",
    "example",
    "heading",
    "target",
    "controls",
    "options",
    "might"
  ]
}