{
  "text": "hi my name's Bert Richardson I have over\n10 years experience in software\ndevelopment and today I'm going to be\ncovering what a software development\nmethodology is and then seven of the\nmost popular software development\nmethodologies today if software already\nexists then is far easier to purchase it\nrather than paying for development team\nto crater unwritten software can turn\nwhat appears to be a simple task into a\nblack hole of time and despair for\neverybody involved this means to reach a\nsuccessful finished product we need a\nreciprocal feedback cycle inside the\nteam and then between the development\nteam and the customer to know if the\nproject is on track by the word\nmethodology we simply mean a high-level\nway of working their coordinates efforts\nfor the project we can't test or deliver\nsoftware before any code is written and\nno code can be written without knowing\nwhat we're building so we've got a\nsequence of actions that need to be\nperformed there are lots of different\nways of structure and work as a team or\nas a solo developer here I'm going to\ncover seven different methodologies at a\nhigh level and then in subsequent videos\ncover each one in more detail I've\nchosen these seven so that any other\nmethodologies that you come across will\nsimply be a variation of one of these\nseven before I cover the first one I'm\ngoing to share with you a fundamental\nbuilding block of all good business\npractices and that is a basic feedback\ncycle\nfirst we plan the tasks do something and\nthen review what we have done all\nmethodologies are simply a variation on\nthis some of you might recognize this as\na methodology called continuous\ndevelopment or a simplified plan do\ncheck adjust cycle this is simply an\noverview video and I'm not covering all\nsoftware methodologies just the ones I\nthink should be covered to give you a\ngood understanding and working knowledge\nand that can be applied today our first\nmethodology is not working with one at\nall I like to call this methodology ad\nhoc or as one of my bosses used to say\njust get it done now this is an anti\nmethodology it is sitting down and doing\nwork without any formal structure which\ni think is a totally fine and\nthat methodology for a small task or\nproject companies typically use this\nmethodology when discovering an\nintegration bug after upgrading a\nproduction system it is the methodology\nof pure focus of any planning or\norganization excellent for a single\nindividual focused on a single task the\nwaterfall methodology is the traditional\nview on product development you start\ncomplete a series of tasks and then\nafter a predictable amount of time the\nproject is completed this methodology is\nbest represented by a Gantt chart where\neach block flows into the next this is\nnot a methodology we use in software\ndevelopment because it isn't flexible\nenough to handle the multitude of\nunknowns encountered during development\nor cater for all the project adjustments\nare made during development if you're\nworking on a cookie-cutter project that\ndoesn't include any feedback or testing\nthen waterfall is fine but this isn't\nsoftware development software\ndevelopment is full of problems and\nproject adjustments that needs to be\nmade to keep things going but somehow\nwhen teams discuss ways of working this\nmethodology is accepted as a viable\noption in my opinion a lot of companies\nthat believe they are using waterfall\nare actually using our next methodology\nthe v-model is a well-structured\nmethodology with good formal lines of\nfeedback you start from top left corner\nand follow the v-shape down doing all of\nthe planning steps at the bottom you\ncode and then you continue the model to\nthe right and up testing as you go each\ntype of testing will now use the plan\ndocumentation test against if there's a\nproblem discovered at any stage during\nthe project or feedback is needed then\nyou reverse direction away from user\nacceptance testing and project\ncompletion the W model is similar to the\nV model but each step has the Quality\nAssurance team as part of the process\nproviding feedback writing additional\ndocumentation ready for the testing and\nvalidation stages I'm not going to say\nthat the W model is better than the V\nmodel because that depends on your\nproject I'm only going to cover two\ntypes of agile methodology the first is\nKanban which is essentially a board\nwhere tickets move from a to-do column\nto a doing column and\neventually to a dung column what I've\npresented here is an overly simplified\nversion of Kanban but I'll be going into\na lot more detail in a future video in\nthis series Kanban is excellent for solo\ndevelopers and large teams as it is\neffective at tracking work and allowing\neveryone to quickly see the current\nstate of tasks and the overall project\nscrum is a second agile methodology I\nwill cover and this is a diagram I\ncreated because I wasn't happy with any\nof the ones currently out there with\nscrum a team is selected to be part of a\nscrum this might be the whole\ndevelopment team just a few developers\nor one developer work the team is\nselected from a backlog placed into a\nsprint which is a set amount of time\nthat the team has to complete the work\nthis is typically 1 to 4 weeks each\nmorning the team holds a standing\nmeeting where each team member will say\nwhat they did yesterday or they're doing\ntoday and if they are having any\nproblems that is blocking their progress\nat the end of the sprint they will do a\nrelease and a group retrospective\nmeeting on the Sprint agile scrum is\ncurrently the most popular of all\nsoftware development methodologies and I\nwill go into why in another more\nin-depth video later in this series this\nis another diagram that I created\nbecause I wasn't happy with any of the\nones out there extreme development is a\nmethodology where only the customers\ncurrent highest priority items chosen by\nthe customer are worked on and releases\nare deployed to the customer weekly when\na customer requirement is implemented\nonly the most basic aspects of the\nrequirement is implemented so that\nfeedback can be given by the customer\nand the customer can receive something\nsooner before any coding is done unit\ntests for the feature are created\nencoding is always done by a pair of\ndevelopers working together when they\nbelieve the work is complete the code\npasses through the project's unit tests\nand then user acceptance tests are\nperformed only then is it released the\nidea of this way of working is that it\nis a highly responsive to customer\nrequirements there is a set of values\nthat users of extreme development should\nhave like communication good feedback\nrespect etc but these aren't enforced by\nthe methodology structure\nI will go into these in more in depth in\nanother specific video on extreme\ndevelopment later in this series so\nwhich is the best methodology that\ndepends on the team and on the project\nat the moment agile scrum is the most\npopular but that doesn't mean that is\nthe best for all projects my advice to\nyou is they should pick one try it for a\nset amount of time and then review it\nthat review should be finding ways of\nmaking the methodology produce better\nresults for your project be leaner and\nmore efficient do not add complexity\nwithout need often it is the customer or\nstakeholders requirements that chooses a\nmethodology for us and my final bit of\nadvice is to never allow a methodology\nto drive you away from what is right a\nmethodology is there as a structure for\nwork and cooperation not to prop up your\npoor discipline or to blame for problems\nthat concludes my very brief overview of\ndifferent software development\nmethodologies I'm currently producing\nthe rest of the series covering each\nmethodology in detail plus one very\nuseful bonus one at the end there'll be\na direct link to those in the video\ndescription below or click the pop-up in\nthe top right corner if you found this\nvideo useful hit the like button and if\nyou watch more content like this hit\nsubscribe\n",
  "words": [
    "hi",
    "name",
    "bert",
    "richardson",
    "10",
    "years",
    "experience",
    "software",
    "development",
    "today",
    "going",
    "covering",
    "software",
    "development",
    "methodology",
    "seven",
    "popular",
    "software",
    "development",
    "methodologies",
    "today",
    "software",
    "already",
    "exists",
    "far",
    "easier",
    "purchase",
    "rather",
    "paying",
    "development",
    "team",
    "crater",
    "unwritten",
    "software",
    "turn",
    "appears",
    "simple",
    "task",
    "black",
    "hole",
    "time",
    "despair",
    "everybody",
    "involved",
    "means",
    "reach",
    "successful",
    "finished",
    "product",
    "need",
    "reciprocal",
    "feedback",
    "cycle",
    "inside",
    "team",
    "development",
    "team",
    "customer",
    "know",
    "project",
    "track",
    "word",
    "methodology",
    "simply",
    "mean",
    "way",
    "working",
    "coordinates",
    "efforts",
    "project",
    "ca",
    "test",
    "deliver",
    "software",
    "code",
    "written",
    "code",
    "written",
    "without",
    "knowing",
    "building",
    "got",
    "sequence",
    "actions",
    "need",
    "performed",
    "lots",
    "different",
    "ways",
    "structure",
    "work",
    "team",
    "solo",
    "developer",
    "going",
    "cover",
    "seven",
    "different",
    "methodologies",
    "high",
    "level",
    "subsequent",
    "videos",
    "cover",
    "one",
    "detail",
    "chosen",
    "seven",
    "methodologies",
    "come",
    "across",
    "simply",
    "variation",
    "one",
    "seven",
    "cover",
    "first",
    "one",
    "going",
    "share",
    "fundamental",
    "building",
    "block",
    "good",
    "business",
    "practices",
    "basic",
    "feedback",
    "cycle",
    "first",
    "plan",
    "tasks",
    "something",
    "review",
    "done",
    "methodologies",
    "simply",
    "variation",
    "might",
    "recognize",
    "methodology",
    "called",
    "continuous",
    "development",
    "simplified",
    "plan",
    "check",
    "adjust",
    "cycle",
    "simply",
    "overview",
    "video",
    "covering",
    "software",
    "methodologies",
    "ones",
    "think",
    "covered",
    "give",
    "good",
    "understanding",
    "working",
    "knowledge",
    "applied",
    "today",
    "first",
    "methodology",
    "working",
    "one",
    "like",
    "call",
    "methodology",
    "ad",
    "hoc",
    "one",
    "bosses",
    "used",
    "say",
    "get",
    "done",
    "anti",
    "methodology",
    "sitting",
    "work",
    "without",
    "formal",
    "structure",
    "think",
    "totally",
    "fine",
    "methodology",
    "small",
    "task",
    "project",
    "companies",
    "typically",
    "use",
    "methodology",
    "discovering",
    "integration",
    "bug",
    "upgrading",
    "production",
    "system",
    "methodology",
    "pure",
    "focus",
    "planning",
    "organization",
    "excellent",
    "single",
    "individual",
    "focused",
    "single",
    "task",
    "waterfall",
    "methodology",
    "traditional",
    "view",
    "product",
    "development",
    "start",
    "complete",
    "series",
    "tasks",
    "predictable",
    "amount",
    "time",
    "project",
    "completed",
    "methodology",
    "best",
    "represented",
    "gantt",
    "chart",
    "block",
    "flows",
    "next",
    "methodology",
    "use",
    "software",
    "development",
    "flexible",
    "enough",
    "handle",
    "multitude",
    "unknowns",
    "encountered",
    "development",
    "cater",
    "project",
    "adjustments",
    "made",
    "development",
    "working",
    "project",
    "include",
    "feedback",
    "testing",
    "waterfall",
    "fine",
    "software",
    "development",
    "software",
    "development",
    "full",
    "problems",
    "project",
    "adjustments",
    "needs",
    "made",
    "keep",
    "things",
    "going",
    "somehow",
    "teams",
    "discuss",
    "ways",
    "working",
    "methodology",
    "accepted",
    "viable",
    "option",
    "opinion",
    "lot",
    "companies",
    "believe",
    "using",
    "waterfall",
    "actually",
    "using",
    "next",
    "methodology",
    "methodology",
    "good",
    "formal",
    "lines",
    "feedback",
    "start",
    "top",
    "left",
    "corner",
    "follow",
    "planning",
    "steps",
    "bottom",
    "code",
    "continue",
    "model",
    "right",
    "testing",
    "go",
    "type",
    "testing",
    "use",
    "plan",
    "documentation",
    "test",
    "problem",
    "discovered",
    "stage",
    "project",
    "feedback",
    "needed",
    "reverse",
    "direction",
    "away",
    "user",
    "acceptance",
    "testing",
    "project",
    "completion",
    "w",
    "model",
    "similar",
    "v",
    "model",
    "step",
    "quality",
    "assurance",
    "team",
    "part",
    "process",
    "providing",
    "feedback",
    "writing",
    "additional",
    "documentation",
    "ready",
    "testing",
    "validation",
    "stages",
    "going",
    "say",
    "w",
    "model",
    "better",
    "v",
    "model",
    "depends",
    "project",
    "going",
    "cover",
    "two",
    "types",
    "agile",
    "methodology",
    "first",
    "kanban",
    "essentially",
    "board",
    "tickets",
    "move",
    "column",
    "column",
    "eventually",
    "dung",
    "column",
    "presented",
    "overly",
    "simplified",
    "version",
    "kanban",
    "going",
    "lot",
    "detail",
    "future",
    "video",
    "series",
    "kanban",
    "excellent",
    "solo",
    "developers",
    "large",
    "teams",
    "effective",
    "tracking",
    "work",
    "allowing",
    "everyone",
    "quickly",
    "see",
    "current",
    "state",
    "tasks",
    "overall",
    "project",
    "scrum",
    "second",
    "agile",
    "methodology",
    "cover",
    "diagram",
    "created",
    "happy",
    "ones",
    "currently",
    "scrum",
    "team",
    "selected",
    "part",
    "scrum",
    "might",
    "whole",
    "development",
    "team",
    "developers",
    "one",
    "developer",
    "work",
    "team",
    "selected",
    "backlog",
    "placed",
    "sprint",
    "set",
    "amount",
    "time",
    "team",
    "complete",
    "work",
    "typically",
    "1",
    "4",
    "weeks",
    "morning",
    "team",
    "holds",
    "standing",
    "meeting",
    "team",
    "member",
    "say",
    "yesterday",
    "today",
    "problems",
    "blocking",
    "progress",
    "end",
    "sprint",
    "release",
    "group",
    "retrospective",
    "meeting",
    "sprint",
    "agile",
    "scrum",
    "currently",
    "popular",
    "software",
    "development",
    "methodologies",
    "go",
    "another",
    "video",
    "later",
    "series",
    "another",
    "diagram",
    "created",
    "happy",
    "ones",
    "extreme",
    "development",
    "methodology",
    "customers",
    "current",
    "highest",
    "priority",
    "items",
    "chosen",
    "customer",
    "worked",
    "releases",
    "deployed",
    "customer",
    "weekly",
    "customer",
    "requirement",
    "implemented",
    "basic",
    "aspects",
    "requirement",
    "implemented",
    "feedback",
    "given",
    "customer",
    "customer",
    "receive",
    "something",
    "sooner",
    "coding",
    "done",
    "unit",
    "tests",
    "feature",
    "created",
    "encoding",
    "always",
    "done",
    "pair",
    "developers",
    "working",
    "together",
    "believe",
    "work",
    "complete",
    "code",
    "passes",
    "project",
    "unit",
    "tests",
    "user",
    "acceptance",
    "tests",
    "performed",
    "released",
    "idea",
    "way",
    "working",
    "highly",
    "responsive",
    "customer",
    "requirements",
    "set",
    "values",
    "users",
    "extreme",
    "development",
    "like",
    "communication",
    "good",
    "feedback",
    "respect",
    "etc",
    "enforced",
    "methodology",
    "structure",
    "go",
    "depth",
    "another",
    "specific",
    "video",
    "extreme",
    "development",
    "later",
    "series",
    "best",
    "methodology",
    "depends",
    "team",
    "project",
    "moment",
    "agile",
    "scrum",
    "popular",
    "mean",
    "best",
    "projects",
    "advice",
    "pick",
    "one",
    "try",
    "set",
    "amount",
    "time",
    "review",
    "review",
    "finding",
    "ways",
    "making",
    "methodology",
    "produce",
    "better",
    "results",
    "project",
    "leaner",
    "efficient",
    "add",
    "complexity",
    "without",
    "need",
    "often",
    "customer",
    "stakeholders",
    "requirements",
    "chooses",
    "methodology",
    "us",
    "final",
    "bit",
    "advice",
    "never",
    "allow",
    "methodology",
    "drive",
    "away",
    "right",
    "methodology",
    "structure",
    "work",
    "cooperation",
    "prop",
    "poor",
    "discipline",
    "blame",
    "problems",
    "concludes",
    "brief",
    "overview",
    "different",
    "software",
    "development",
    "methodologies",
    "currently",
    "producing",
    "rest",
    "series",
    "covering",
    "methodology",
    "detail",
    "plus",
    "one",
    "useful",
    "bonus",
    "one",
    "end",
    "direct",
    "link",
    "video",
    "description",
    "click",
    "top",
    "right",
    "corner",
    "found",
    "video",
    "useful",
    "hit",
    "like",
    "button",
    "watch",
    "content",
    "like",
    "hit",
    "subscribe"
  ],
  "keywords": [
    "software",
    "development",
    "today",
    "going",
    "covering",
    "methodology",
    "seven",
    "popular",
    "methodologies",
    "team",
    "task",
    "time",
    "product",
    "need",
    "feedback",
    "cycle",
    "customer",
    "project",
    "simply",
    "mean",
    "way",
    "working",
    "test",
    "code",
    "written",
    "without",
    "building",
    "performed",
    "different",
    "ways",
    "structure",
    "work",
    "solo",
    "developer",
    "cover",
    "one",
    "detail",
    "chosen",
    "variation",
    "first",
    "block",
    "good",
    "basic",
    "plan",
    "tasks",
    "something",
    "review",
    "done",
    "might",
    "simplified",
    "overview",
    "video",
    "ones",
    "think",
    "like",
    "say",
    "formal",
    "fine",
    "companies",
    "typically",
    "use",
    "planning",
    "excellent",
    "single",
    "waterfall",
    "start",
    "complete",
    "series",
    "amount",
    "best",
    "next",
    "adjustments",
    "made",
    "testing",
    "problems",
    "teams",
    "lot",
    "believe",
    "using",
    "top",
    "corner",
    "model",
    "right",
    "go",
    "documentation",
    "away",
    "user",
    "acceptance",
    "w",
    "v",
    "part",
    "better",
    "depends",
    "agile",
    "kanban",
    "column",
    "developers",
    "current",
    "scrum",
    "diagram",
    "created",
    "happy",
    "currently",
    "selected",
    "sprint",
    "set",
    "meeting",
    "end",
    "another",
    "later",
    "extreme",
    "requirement",
    "implemented",
    "unit",
    "tests",
    "requirements",
    "advice",
    "useful",
    "hit"
  ]
}