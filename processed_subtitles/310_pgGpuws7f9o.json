{
  "text": "today in the workshop we are using soil\nmoisture sensors\nwe'll learn how these sensors work how\nto calibrate them and how to use them\nwith microcontrollers\nwe'll also build a soil moisture meter\nand an automated watering system that\nyou can control with the arduino iot\ncloud\nwe're growing something special today so\nwelcome to the workshop\n[Music]\nwell hello and welcome to the workshop\nand today we're working with soil\nmoisture sensors which you can probably\nguess from their name or devices that\nyou place into the ground and they'll\nmeasure the amount of water content in\nthe soil now we're going to learn about\nhow these sensors work we're going to\ncalibrate a few of them and then we're\ngoing to build a couple of projects the\nfirst project is a soil moisture meter\nwith an oled display and our second\nproject is an automated watering system\nthat's going to be using the arduino iot\ncloud so that we can water and maintain\nour gardens from pretty well anywhere in\nthe world now before we go on with our\nlessons and our projects there is a bit\nof a disclaimer i have to give now there\nare some people out there perhaps you're\none of them who are just wonderful with\ngardening they can grow beautiful crops\nof vegetables they can make gorgeous\nflowers they're just whizzes in the\ngarden and we call these people people\nwith a green thumb well if you look on\nthe color wheel the opposite of green is\nred and so i probably have a red thumb\nbecause plants do not do well with me\ni've never been good at gardening i've\neven managed to kill plastic plants so\ni'm not the kind of person who can\ndispense advice about gardening to you i\ncan however dispense advice about\ntechnology so let me dispense some right\nnow by telling you how soil moisture\nsensors work\nsoil and moisture sensors have\napplications in agriculture irrigation\nresearch and just plain gardening\nsome advanced soil moisture sensors use\nthe property of water to alter\nmicrowaves and they use techniques such\nas frequency domain reflectometry and\ntime domain reflectometry\na very advanced method of measuring soil\nmoisture is neutron scattering which\nuses the moderator properties of water\non neutrons between a source and a\nsensor\nthe soil itself can also act as a\ngalvanic cell this allows the\nconstruction of a soil moisture detector\nthat does not require its own power\nsource\nthe resistance and capacitance\nproperties of soil can also be used to\nmeasure soil moisture\ntoday we'll be focusing on inexpensive\nsensors designed for microcontrollers\nand microcomputers\nthese sensors are based on either the\nresistance or capacitive properties of\nthe soil\nthese sensors can be run in multiple\nmodes in analog mode the resistance or\nvoltage output will change in response\nto the amount of moisture in the soil\nin digital mode a set point is\nestablished and the output will go\neither high or low depending on whether\nthe moisture is above or below that set\npoint\nin addition to analog outputs there are\nalso serial and i2c devices available\nand we'll be taking a look at an i2c\ndevice later on\na common application for soil and\nmoisture sensors is an automated\nwatering system and we'll be putting one\nof these together later on in the video\nin this sort of system a soil moisture\nsensor is connected to the input of a\nmicrocontroller\nit's also typical to have some sort of a\nreadout of soil moisture as well\nyou will also connect the pump or other\nsource of water to the output of the\nmicrocontroller\nif the sensor detects the moisture\ndropping below a certain point it will\nactivate the watering system and water\nthe soil\nonce the moisture has gone above a\ncertain threshold the watering will stop\nresistive soil moisture sensors depend\nupon the resistance property of soil\nwhich decreases with the amount of\nmoisture in it\nthese are very simple to design and\nquite easy to manufacture\nhowever they have one major drawback in\nthat corrosion of the probes can alter\nits resistive properties\nwith a capacitive soil moisture sensor\nthe soil itself serves as the dialect\nwithin a capacitor\nthese sensors have a timer on them that\nmeasure the amount of time that this\ncapacitor takes to discharge\nbecause we're measuring soil capacitance\nwe don't require any direct contact to\nan electrode so the electrode can be\ninsulated and this eliminates the\ncorrosion effect that occurs with\nresistive sensors\nresistive sensors have an advantage in\nthat they are a lower cost\ncapacitive sensors however are longer\nlasting and generally provide better\nperformance\nas these sensors both provide analog\noutputs they can both be used in our\ndesigns so you can use any sensor you\nhappen to have with the circuits you're\nabout to see\nso now let's take a look at a few soil\nmoisture sensors\nnow here are some soil moisture sensors\nfor you to take a look at we're going to\nbe using a few of these later on and\nsome experiments three of these are\ncapacitive sensors and one of them is\nresistive and you can sort of tell which\none the resistive one is it's this one\nhere and it has these two electrodes and\nwhat we're actually doing is measuring\nthe resistance between the electrodes so\nwhen that's inserted in soil the soil\nwill provide an electrical resistance\nand that's what's being measured in\nthese the rest of these are capacitive\nsensors so you don't actually see any\nelectrodes they've all been nicely\nsealed up and protected from the\nelements so there's nothing going to\ncorrode because of course a capacitive\nsensor works on a different principle in\nthis case the soil becomes a dialect in\nthe capacitor now this is a very\nstandard and very common capacitive soil\nmoisture sensor and these ones are quite\ninexpensive and it has an analog output\nthese other two have i2c outputs this\none is made by a company called catnip\nelectronics and it's a very interesting\nlittle sensor it also measures\ntemperature and light one other thing\nabout it though is it didn't have a\nconnector on it so i have to solder\nthese jumper wires onto the output here\nbut this has an i2c output so i've got\npower ground sda and scl coming out of\nhere this is also another i2c sensor and\nthis one is called a seesaw and it's\nmade by adafruit it does have a little\nconnector on it so it's a little bit\neasier to use and these other ones also\nhave connectors as well\nbut there you go a few soil moisture\nsensors that we can be using in our\nexperiments\nnow before we put our soil moisture\nsensors to use we need to calibrate them\nit doesn't matter whether they're\nresistive or capacitive each sensor has\nits own unique properties and even if\nyou get a batch of them you'll find that\nno two of them are exactly alike now\ncalibrating the sensor is pretty easy\nall you need to do is take a measurement\nof its output when it's completely dry\nand then take its output measurement\nwhen it's completely wet and since\nresistive and capacitive sensors both\noutput a voltage in response to the\namount of soil moisture we can use the\nsame circuit and the same sketch to\ncalibrate both of them\nnow i'm going to be doing this with a\nraspberry pi pico it's an inexpensive\nmicro controller and one of its\nadvantages is that it has a 12 bit\nanalog to digital converter so we can\nget a very accurate reading from it now\ni'm also going to be using the classic\narduino ide 1.8 for these experiments\nand if you haven't used the pico yet\nwith the arduino ide 1.8 i urge you to\ngo and take a look at that monster size\nvideo that i just did for the 10th\nanniversary of the raspberry pi you\ndon't have to watch the whole video but\ngo to the third project you can use a\ntable of contents in the video to go\nthere directly or use the chapters\nfeature on the youtube video the third\nproject was a raspberry pi pico simon\ngame and i show you exactly how you set\nup the arduino ide to use the pico so\ni'm going to assume you already know how\nto do that now if you don't want to use\na pico i'm also going to show you how\nyou can use these calibration with a\narduino uno and it's basically the same\nsketch with one modification and i'll\nshow you the hookup for the uno as well\nso you don't necessarily have to use a\npicot although you will get more\nresolution so let's go and take a look\nat how we hook up the pico and then i'll\nshow you the sketch that we're going to\nbe using to calibrate both our resistive\nand capacitive soil moisture sensors for\nour experiments we're going to be using\na raspberry pi pico microcontroller\nhowever you could use a different\nmicrocontroller and i'll show you how to\ndo the same experiments with an arduino\nuno a little bit later\nwe will also of course need a soil\nmoisture sensor you could use a\nresistive sensor or a capacitive sensor\nbecause the hookup and the code are\nidentical for both\ni'll be using a capacitive sensor in\nthis illustration but again the hookup\nfor the resistive sensor is identical\nwe'll start by connecting the analog\nground pin of the raspberry pi pico to\nthe ground of the soil sensor you could\nalso use another ground pin if you wish\nbut analog ground is the specific\nreference for the analog to digital\nconverter and will produce the best\nresults\nwe use the pico's 3.3 volt output and\nconnect it to the vcc of the soil\nmoisture sensor\nand analog to digital converter 0 input\nwhich is also\ngp26 will be connected to the output of\nthe soil moisture sensor\nand this completes our wiring now let's\ntake a look at some code we can use to\ncalibrate our sensor\nnow here's the sketch that we're going\nto be using to calibrate our sensors and\nwe can use this with both capacitive and\nresistive sensors and it's an extremely\nsimple sketch we start off by defining a\nvalue that we're going to be using to\nget the sensor value and this will be\nthe output of the analog to digital\nconverter and then we define the analog\nto digital converter pin itself which is\nadc 0. then we'll open up our serial\nmonitor so we can see our results and\nwe're also going to set our analog to\ndigital converter resolution to 12 bits\nif we don't do this it'll default to\nbeing 10 bits and we want to get all the\nresolution we can\nand then in the loop it's extremely\nsimple all we do is we use an analog\nread to read the value from the sensor\npin and assign it to sensorval and then\nwe just print that to the serial monitor\nwe add a very short delay and we\ncontinue to do that and so a super\nsimple sketch let's try it out with both\ncapacitive and resistive\nsensors so we're going to start off by\ncalibrating the capacitive sensor which\ni've got hooked up to the pico right now\nand as you can see in the serial monitor\ni'm getting a reading and it's hovering\naround 2500 25 23 25 18. this will be my\ndry reading and i want to record that\nbecause this is what i'm getting at what\nshould be about zero percent moisture\nnow i'm going to stick it into this\nglass of water and you'll see that the\nreading went down it's going down about\n1340 1350\nthis will be the reading that i'm going\nto get for my wet reading and so you'll\nalso want to calibrate that so those are\nthe two different extremes for the\nsensor and we'll be using those\ncalibration values in further\nexperiments\nokay now we're working with the\nresistive sensor and the first thing\nyou'll notice on the serial monitor is\nthat the dry reading is a very very low\nvalue it's down around 20 it even\napproaches zero at times and when i put\nit into the water you'll notice that the\nwet reading is very high and there's\nquite a discrepancy between the two and\nwith that kind of a range it means that\nthis type of soil moisture sensor is\nactually more sensitive to small\ndifferences in soil moisture so in some\nways it's a bit more accurate however of\ncourse the resistive ones do have a\nproblem in which the probes will\neventually start to corrode and the\nvalues will start changing they'll go\nout of calibration but as you can see we\ncan use the same circuit to calibrate\nboth resistive and capacitive soil\nmoisture sensors\nnow you could also use an arduino uno to\nperform these experiments again i'm\nshowing a capacitive soil sensor but you\ncould use a resistive sensor as well as\nthe hookup is identical we'll start by\nhooking the ground of the soil sensor to\nthe arduino's ground the vcc of the soil\nmoisture sensor will be connected to the\n3.3 volt output of the arduino uno the\noutput of the moisture sensor will be\nconnected to analog pin a0 and you'll\nalso want to connect the a ref or analog\nreference pin on the arduino uno to the\n3.3 volt output\nnow let me show you the changes you need\nto make in the code in order to use an\narduino uno\nnow there's only one change you're going\nto need to make in the code to run this\nwith an arduino uno and it's down here\nin the setup this command analog read\nresolution is not going to compile with\nan arduino uno because the arduino uno\nonly has a 10 bit analog to digital\nconverter at the same time if you\nremember in our wiring we've wired the a\nref or analog reference pin to 3.3 volts\nso we need to use that so change analog\nread resolution to analog reference\nand\nmake this value here external\nlike this and that way you'll use the\n3.3 volt power supply that we've fed\ninto the are pin and you also won't have\nan analog read resolution that was set\nthere so obviously this line is\nincorrect right now but that's the only\nchange you need to make and you can run\nthe code on an arduino uno\nnow when i showed you all of the\ndifferent soil moisture sensors that\ni've collected i showed you two models\nthat were using an i2c interface now\nthese are capacitive soil moisture\nsensors and so they work in a similar\nfashion to the capacitive sensor we've\nalready worked with but of course their\noutput is different they are i2c and\ntherefore they can be used with just\nabout any microcontroller or a\nmicrocomputer that supports i2c\nnow one of the models i showed you was\nfrom a company called catnip electronics\nand it's a very interesting sensor not\nonly does it give you soil moisture\nreadings it also outputs temperature and\nlight level readings and it's quite easy\nto use as long as you use a library with\nit so we're going to take an arduino uno\nand my catnip electronics i2c sensor and\nsee how we put them to use\nfor our i2c experiment we'll be using an\narduino uno\nwe'll also require a catnip electronics\ni2c moisture sensor and you'll need to\nsolder some wire onto the connections in\norder to make use of it\nwe'll begin by connecting the ground\nconnection on the moisture sensor to one\nof the grounds on the arduino we'll\nconnect the moisture sensor's sda output\nto analog pin a4 on the arduino we'll\nconnect the scl input to analog pin a5\nand the vcc pin on the catnip\nelectronics i2c moisture sensor will be\nconnected to the arduino's 5 volt output\nand this completes our wiring now let's\ntake a look at some code we can use with\nthe moisture sensor\nnow the i2c soil moisture sensor that\nwe're going to be using is a great\nexample of some of the electronics that\nwe're seeing from all over the world\nthis was built by a company called\ncatnip electronics and they're in\nlithuania now you can get this off of\ntindy where they sell it directly and as\nyou can see it's not particularly\nexpensive but i actually got mine from\nmouser electronics and so you have that\nas an option as well now wherever you\nhappen to get it from you're going to\nneed a library in order to use it\nproperly and there are a lot of great\nexamples up on github for doing that\nthere are also python examples up on\ngithub so you could use it with python\nor micropython use it with a different\nmicrocontroller or perhaps with a\nraspberry pi but we're going to be using\nit with an arduino uno so we're going to\nget some arduino code and here's where\nyou can grab a library on github you\njust hit code and do download zip and\nyou'll get the library in a zip\nin a zip format now you'll need to\ninstall that into your arduino ide which\ni've just done but i'll show you how you\ndo it you just go under sketch you go\ninclude library and then from include\nlibrary you do add zip library you\nnavigate to where your downloaded your\nfiles and here it is the i2c soil\nmoisture sensor you would hit ok but\ni've already done that and now you've\ninstalled the library there's also an\nexample sketch that we can use in order\nto work with it so just go into file go\ninto examples go down to examples from\ncustom libraries and you'll see i2c soil\nmoisture sensor and you've got two of\nthem one that allows you to change the\ni2c address on the device the other one\ncalled read sensor data which is what\nwe're going to do and so i'll just\nexpand that so we can see it and it's a\npretty simple sketch really it includes\nthe library that we just installed and\nalso includes the wire library of course\nbecause we'll need that for i2c and it\ndefines something called uh sensor\nand uh we go into the setup we'll start\nthe wire library we'll put our serial\nmonitor on and we'll reset the sensor\nwith the sensor dot begin we'll give it\nsome time to boot up for a second and\nthen we'll print out to the serial\nmonitor the address of the soil moisture\nsensor and its firmware version so we'll\nuse a get address and a get firmware\nget virgin excuse me to show the\nfirmware version of it and then we just\ngo into the loop and\nwe wait\nif the sensor is busy and then after\nthat we'll print out the capacitance\nvalue so we use get capacitance to read\nthat and print it out to the serial\nmonitor this also reads temperature and\nlight so we'll get the temperature and\nwe'll get the light and these are just\nsimple commands that are made possible\nbecause of the library and these are\njust printed out to the serial monitor\nso you could see how you would use these\nin your own sketches so this is a really\ncool little sensor and with this library\nit should be pretty easy to use it so\nlet's just load up the code and take a\nlook at it in action\nand so we're going to do a quick demo of\nthe i2c moisture sensor and if you look\nat the\nserial monitor you can see that we're\ngetting capacitance temperature and\nlight readings as well too and so those\ncould also i suppose be useful\nfor your gardening needs now this is the\ndry reading that we're going to get now\nremember this takes about a second or so\nbefore it gets the reading so it's not\ngoing to be instantaneous i'm going to\nput it in here\nand there you can see now that the\ncapacitance reading has changed the\ntemperature and light readings have\nchanged quite a bit as well too\nand so i'm not sure how you interpret\nthe light values the temperature is in\ndegrees celsius and i think it's a\nlittle bit off because i don't think the\nwater is really that warm\nand the capacitance is really of course\nwhat we're looking for this is the\ncapacitance when it's wet and i'll\nremove it again and dry it\noff and we'll wait a second or so and it\ndrops down around 180 785\nso uh once again this is a useful soil\nmoisture sensor and because it's an i2c\ndevice you can use this with\nmicrocontrollers and microcomputers that\ndon't happen to have an analog input\nso now that we've seen how soil moisture\nsensors work and we've calibrated a few\nof our own sensors it's time to put them\nto use in the first project we're going\nto build is a soil moisture meter now\nthis meter has an oled display that will\ndisplay the percentage of moisture in\nthe soil it is based around the\nraspberry pi pico now you're going to\nneed the calibration values you took for\nyour soil moisture sensor in order to\ncomplete this job so if you haven't done\nthat yet go back and calibrate your\nsensor first and after you've done that\nlet me show you how you wire up the soil\nmoisture meter\nwe'll be constructing our soil moisture\nmeter with a raspberry pi pico\nwe'll also be using an oled display a\nstandard ssd 1306 display with an i2c\ninput and of course will require a soil\nmoisture sensor again you could use a\nresistive or a capacitive sensor and i'm\nillustrating a capacitive sensor here\nthe connection for the soil moisture\nsensor is identical to the ones we used\nfor calibration we'll start off by\nconnecting the ground of the soil\nmoisture sensor to the analog ground or\nagnd pin on the raspberry pi pico\nthe vcc connection on the moisture\nsensor will go to the picos 3.3 volt\noutput\nand the output of the soil moisture\nsensor will go to analog to digital\nconverter 0 input on the raspberry pi\npico this is also gp26\nwe'll connect the ground of our oled\ndisplay to any of the grounds on the\nraspberry pi pico you can identify the\nground pins on the pico as they have\nsquare pads\nwe'll connect the vcc of the oled\ndisplay to the 3.3 volt output of the\nraspberry pi pico\nthe scl or clock pin on the oled display\nwill be connected to pico pin gp5\nand the sda or data pin on the oled\ndisplay will be connected to pico pin\ngp4\nand this completes our wiring\nnow here's a sketch that we're going to\nbe using for our soil moisture meter and\nit's been written to use capacitive\nsensors however you could rewrite it for\nresistive sensors with one simple change\nwhich i'll show you in a moment now we\nstart off by including some libraries\nthat we're going to need to drive our\noled display we need the wire library\nbecause that's the library for i2c and\nthat's already included in your arduino\nide the next couple of libraries are\nlibraries from adafruit and if you don't\nhave them go into your library manager\nand look for ssd 1306 install the\nadafruit library and it'll also install\nthis other library for you however if\nyou've already played with oled displays\nthere's a good chance you have these\nlibraries already now we're going to go\nand set some parameters for the oled\ndisplay so we set its height and its\nwidth and we set some other parameters\nup as well this reset as negative one\njust needs to be set so we know that\nwe're not using a separate line for\nreset\nand the screen address and this is the\ni2c address now if you happen to have a\ndisplay that has been set to a different\ni2c address you will of course need to\nchange that then we define an object\ncalled display by passing it all of the\ndifferent parameters for the oled\nand then we go and we put in our sensor\nconstants now these are the values that\nwe determined from the calibration\nsketch that we ran earlier so your\nvalues could very well be different than\nmine you could start off with these and\nexperiment with them but the best way to\ndo it is just to calibrate your sensor\nusing the sketch that we looked at\npreviously and then plug the values in\nover here we set up a couple of\nvariables we're going to need for the\nsoil moisture we're going to get the\nsoil moisture value which is actually\nthe value that we get from the analog\nthe digital converter output and we're\nalso going to get the value and\npercentage which is what we want to\ndisplay in our display and then we\ndefine the port that we're using which\nagain is adc0 for the input from the\nsensor\nin our setup we're going to set up the\nserial monitor and we're just using the\nserial monitor for troubleshooting and\nalso so we can fine tune those wet\nvalues and drive values up over here we\nmight want to change them and the serial\nmonitor will help us do that we're going\nto initialize our display and an\nimportant thing when we initialize it is\nthis switch cap vcc parameter that we\nuse when we initialize it if we don't\nuse it if we just use ssd 1306 it's\ngoing to expect the 5 volt power supply\nbut in this case it'll know it's getting\na 3.3 volt power supply so you need to\nplug that in and then the screen address\nitself then we're going to clear our\ndisplay and once again we'll set the\nanalog to digital converter to use 12\nbits with an analog read resolution\nfunction\nthen we go into the loop and in the loop\njust as we did with the calibration\nsketch we're going to get the value from\nthe sensor assign that to the soil\nmoisture value and we'll print it out to\nthe serial monitor and then we'll go and\nwe're going to determine the percentage\nand we do that with a map command\nand we take the soil moisture value and\nwe map it between the drive value and\nthe wet value to a value of 0 to 100 to\nget the percentage now i said earlier\nthat you would possibly be able to use\nthis with a resistive sensor and you can\nwhat you need to do is just reverse the\norder of dry value and wet value because\nas we saw the values work in the\nopposite direction for resistive sensors\nnow it's possible these values could\ndrop below 0 or above 100 if we get\nvalues that go\nbeyond the drive value or the wet value\nand that can happen if the calibration\nisn't perfect and so we're going to use\na constrain command to constrain our\nresults between zero and one hundred so\nif it goes over a hundred it'll just\nread a hundred and if it goes below zero\nit'll just read zero and you can use a\nserial monitor to fine tune things so\nthis doesn't occur very often and we\nprint that out to the serial monitor the\npercentage we've had and then we just go\nand print the oled display so we set the\ncursor on the oled we set the text size\nto two and the detects color to white\nnow the top of my display is yellow but\nit doesn't matter you use white all the\ntime as the color when you're writing to\nan oled display and then we print the\nword moister and that's going to print\non the top of the display in the case of\nmy display it's going to be yellow but\nyour display may be just one single\ncolor it might be two different colors\nit doesn't matter\nand then we go and we move our cursor\ndown again set our text size even bigger\nand again set the color to white then\nwe'll print that soil moisture\npercentage value will print the percent\nsymbol behind it and then at the very\nend of that we will do a display display\nwhich actually puts everything onto the\noled because nothing is written until we\ndo that we're just basically filling a\nbuffer over here\nwe'll delay for a quarter of a second\nand then we'll clear the display so we\ncan go back and get the next reading and\nthat's basically the entire sketch just\nload it up to your pico and take a look\nat the results\nand so here we have our soil moisture\nsensor on this small sawdust breadboard\nand i've got a couple of things to test\nit with over here now it's reading zero\npercent because the sensor is just uh\nloose in the air let's just drop it into\nthe water here\nand as you can see it goes up to a\nhundred percent right now now by the way\nyou might be seeing some flickering on\nthis display the flickering is just\nbecause of the cameras it's an effect\nthat they are making it probably has\nsomething to do with the frame rate or\nsomething because there is no actual\nflickering that you can visibly see i\njust wanted to point that out let's put\nit into some soil right now just move\nthese wires a bit so we can see it\nand this isn't particularly moist soil\nlet's see if i can find a moist spot i\ndon't know there's a\nmoisture area\nthere we go i had dropped some water\ninto it it went to one side so it is\nindeed measuring the moisture in the\nsoil and so this is actually a cool\nlittle project and you could build it uh\ninto its own little enclosure and give\nit a power supply if you wanted to and\nactually make some sort of a useful\ninstrument out of it\nnow at the beginning of this video i\nillustrated a pretty classic use for a\nsoil moisture sensor and a\nmicrocontroller essentially you had the\nsoil moisture sensor attached to the\nmicrocontroller and the microcontroller\nwas also attached to a pump or another\nmethod of dispensing water when the\nmicrocontroller had detected that the\nsoil moisture had dropped below a\ncertain threshold it would activate the\npump which in turn would add moisture to\nthe soil and when the moisture went\nabove that threshold then it would turn\noff the pump but i'm sure you've seen\nabout a dozen different systems for\ndoing exactly that well we're going to\nbuild something like that right now but\nit's got a bit of a difference my design\nis based around an arduino nano 33 iot\nboard and it also makes use of the power\nof the arduino iot cloud and with this\nwe can make a cloud-based system that we\ncan monitor using our phones or tablets\nor our computer pretty well from\nanywhere in the world\nnow i'm going to make the assumption\nthat you already know how to use the\narduino iot cloud but if you don't i've\nalready done a video on that and so\nthere's a video and article that you can\ncheck out that'll bring you up to speed\nright away so you'll understand some of\nthe terminology that i'm using before i\nshow you how we wire this up let me show\nyou some of the features of our\ncloud-based watering system now here's\nmy automated watering system assembled\non a solderless breadboard as you can\nsee it's got an oled display that cycles\nthrough a number of different values a\ntemperature and humidity sensor a relay\nto drive the pump and of course the\narduino nano 33 iot\nnow if we take a look on the control\npanel for this you can see that i'm\ndisplaying the moisture i'm also\ndisplaying the moisture over a period of\ntime and this is the live view but i can\ngo back an hour a day a week or even 15\ndays so you can see how the moisture has\nchanged in your soil over a period of\ntime i've got a live temperature and\nhumidity display and i'm also displaying\nthe status of the pump and right now\nit's green to indicate that my pump is\non and that's because i've got the\ntrigger level set to 40 but i can adjust\nthe trigger level over here\nso let's bring it down to 20 which is\nbelow the 30 percent moisture so we have\nto give this a few seconds for it to\nreact\nand there you go the pump status is now\nchanged to red indicating that the pump\nis off and so now let me show you how\nyou can wire up this project\nto build our iot watering system we'll\nbe using an arduino nano 33 iot board\nyou could probably also use an arduino\nnano rp2040 connect board and they're\npin for pin compatible\nwe'll be using a capacitive moisture\nsensor\nand the dht22 temperature and humidity\nsensor now you may wish to use a dht21\nas it's more suitable for outdoor\napplications you could also use a dht11\nif you wish and i'll show you where you\ncan make some changes in the code to use\none of those other sensors we're going\nto be using the same oled display that\nwe used when we constructed our moisture\nmeter\nand we'll be using a 5 volt relay module\nnow you'll also need a pump and you'll\nneed a power supply to drive that pump i\nwould strongly suggest using a low\nvoltage dc pump\nwe'll begin by connecting pin 1 of the\ndht 22 to the nano's 3.3 volt output pin\nwe'll connect pin two of the d8t 22 to\nnano pin d8\nand pin 4 of our dht 22 will be\nconnected to one of the nano's ground\npins\nthe moisture sensor's output pin will be\nconnected to the nano's pin a0\nthe moisture sensor's vcc will be\nconnected to the nano's 3.3 volt output\nand the ground from the moisture sensor\nwill be connected to one of the nano's\ngrounds\nthe oled's ground will also be connected\nto one of the nano's grounds\nthe oled vcc will go to the nano 3.3\nvolt output\nthe scl connection from the oled will be\nconnected to the nano's scl pin which is\nalso address pin a5 but note that on the\nnano it's not usable as an analog pin\nbecause it has an internal pull up\nresistor\nthe same goes for the oled's sda pin\nwhich is connected to the nano's sda pin\nwhich is also a4\nthe relay module's g or ground pin is\nconnected to the nano ground\nthe relay module's 5v pin is connected\nto the nano's 5 volt output\nand the module's input pin is connected\nto nano pin d3\nyou'll also want to run the power supply\nfor your pump to the common output on\nthe relay\nthe relays normally open output will be\nconnected to one side of the pump and\nthe other side of the pump will be\nconnected to the pump's power supply\nand this completes our wiring now let's\ngo into the arduino iot cloud and see\nhow we can build this project\nnow we begin our project up on the\narduino iot cloud and as i said earlier\nif you're not familiar with the iot\ncloud i strongly suggest you check out\nthe video and article that i did about\nusing the iot cloud to get yourself up\nto speed but essentially when you're\nbuilding for the arduino iot cloud the\nmain thing that you're building is\ncalled a thing it's after all the\ninternet of things and this is the thing\nthat i am building and called it auto\nwater and the thing has three different\ncomponents to it it has variables it has\na device and it has a network now my\ndevice is the arduino nano 33 iot board\nthat i've already registered with\narduino and my network is of course my\nown wi-fi network and so i've got the\ncredentials for my network over here and\nthen we have our variables and these are\nthe variables that we have for my\nproject and there are actually five\nvariables\nfor it the current moisture the current\ntemperature the current humidity the\npump status the status of the pump\nwhether it's on or off and a trigger\nlevel which is the level that we are\ngoing to tell it to trigger and turn the\npump on so this is the percentage of\nmoisture level now i'll show you some of\nthe variables if you go into current\nmoisture for example you'll see that\nit's an integer and i've set it to read\nonly\nand if we go into the current\ntemperature we'll see that it is a float\nand it is also set to read only and it\nsends the values on change and that's\nactually one thing about current\nmoisture if i go back to it that i have\nset i set it to go on change and that\nmeans anytime the moisture value changes\nit'll send something up to the cloud and\nit'll update my dashboard now since i'm\nusing that graph on the dashboard if i\nkeep it let's say at zero percent or a\nhundred percent for a long time the\ngraph won't change so you could actually\ngo into the variable if you wanted to\nand you could edit that and instead of\ndoing on change you could say\nperiodically and give it a time period\nand that might be a good thing to do if\nyou wanted the graph to be more constant\nso that's just something you may want to\nchange in yours current humidity is the\nsame as a temperature it's a floating\nvariable it's a read only the pump\nstatus is also read only and it's a\nboolean\nand the trigger level is a bit different\nit's an integer but it's got read and\nwrite permissions and that's because i'm\nusing a control on the dashboard in\norder to set the trigger level so i have\nto be able to both read and write that\nvalue\nnow if we go back onto my dashboard\nyou'll see all the various components\nthat i have the moisture and right now\nthe sensor is completely out of the\nwater so it's dry it's down at 20\npercent and here is the graph of\neverything and you notice the graph\nactually hasn't updated itself for a\nlittle while because it's been down at\n20 percent for a long time and as i said\nif you made that work periodically would\nsee the graph update a lot if i end up\nputting the\nprobe into the water and changing that\nmoisture all of a sudden the graph\nshould come back to life and as i said\nearlier there's a bit of a latency over\nhere so it's actually already happened\nthe pump has turned itself off but we\ndon't see it here right away and there\nit goes we see it right now and you see\nthat whole period of time where i didn't\nget a reading because it was constantly\nat zero and now it'll stay at a hundred\nuntil they take it out of the water so\nagain you may want to change that to\ntrigger periodically instead of on\nchange\nlet me show you how these are done on\nthe\ndashboard so i'll go into edit mode we\ngo to moisture and we can go and edit\nthe settings and the moisture i've got\nit linked to the current moisture from\nauto water so if i wanted to do that\ninitially what i would do is i would go\nin here and get a list of my things i'd\npick auto water and it would give me all\nof the potential ones that it would link\nto and notice for example pump status\nhas been grayed out and that's because\nthat is a boolean and it won't work for\nthis kind of thing so it will just look\nat the\nvariables that are applicable in this\nparticular case it was current moisture\ni'm actually not going to change\nanything so i'm going to set it to done\nin order to use the graph the graph is\nvery simple it's exactly the same\nactually you just set it to link to\ncurrent moisture there's really nothing\nelse you have to do to the graph because\nall of the heavy lifting so to speak has\nbeen done by the iot cloud to make that\nneat display\ntemperature and humidity as you can\nimagine are linked to their associated\nvariables the pump status is linked to\nthe uh pump status which is the boolean\nand i've got it set so that it's an led\nthey call this one over here is the type\nof a\ncontrol i used over here and you can\nchange this to use only one led or the\ntwo so i decided to use the two leds\nand so i have a green one and a red one\nand then the trigger level over here is\nlinked to the trigger level variable and\nof course this is a two-way variable\nit's read write so as i change the\nslider control it will change the value\nof trigger level and i can pick that up\nin my code\nso now let's go and take a look at the\ncode now when you go into the iot cloud\nit actually builds code for you it does\na sketch over here and you can go and\nopen that in the full online editor what\ni did is i built this i went into the\nfull online editor and added my\nlibraries but then i did the rest on the\narduino ide 2.0\nbecause you can link that to the cloud\nas well too and i find it a lot easier\nto work on this because you've got all\nsorts of different features here that\nyou don't have\non the online editor so this is a sketch\nin the arduino ide 2.0 but of course you\ncould build it on the cloud as well too\nand it'll work just fine it starts off\nby including arduino secrets and the\narduino secrets is a file that's\nincluded here i won't show you my\narduino secrets file because that's what\ncontains the\nssid and the password for my network\nand\nso but that comes along in the package\nwith the files there's also another one\ncalled thing properties that comes along\nwith it as well now it tells you that\nthese variables have been automatically\ndeclared so you don't need to declare\nthem in your code and these are the ones\nthat i declared up on the cloud so\nyou'll notice my five variables over\nhere now these libraries again i\ninstalled through the cloud which is why\nthere are so many library files but\nbasically it's the same ones that i\ninstalled for the moisture sensor the\nssd 1306 and the gfx libraries from\nadafruit it just added a few other ones\ni just took them there because that's\nwhat the cloud installed i also\ninstalled a dht sensor library for my\ndht22 and by the way you could also have\nused dht21 or dht11 you'd install the\nsame library and i installed the wire\nlibrary for i2c\nand then after that\nwe have some stuff you've seen before in\nthe\nin the sketch that we did for the\nmoisture meter that set the oled size\nthe oled parameters and set up the oled\nit's basically the same thing\nthis is just the parameters for the\ndht22 so if you decided to use let's say\na dht21 you would just change this here\nto dht21\nor dht11 etc otherwise the code is the\nsame and our dht pin is pin 8 because\nwe're using data input 8 for the sensor\nnow i've defined some local variables\nfor the temperature and humidity and you\nmight find that strange because of\ncourse up over here there are cloud\nvariables for it but the reason i'm\ndoing local variables for that is\nbecause\nwhen you first start this up you're not\nactually connected to the cloud and so\ni'm not quite sure exactly what is going\nto happen so i want local variables so\nthat this can work even when it doesn't\nhave an internet connection i don't want\nit to be completely dependent on the\ncloud for the local thing to work\nbecause after all it's controlling a\npump with water i want it to be in a\ncontrolled situation\nnow these\nconstants you've seen before the dry and\nthe wet value for our\nprobe for our moisture sensor and of\ncourse we need to determine those\nexperimentally and so your values could\nquite well be different than mine and\nthen this again we've seen it's\nidentical to what we did for our soil\nand moisture meter we get the moisture\nvalue which is the value coming from the\na to d converter and the moisture\npercent which is our converted version\nand uh then the sensor input is on\nanalog pin a0 we've got that the relay\nport is defined on pin 3. and then the\npump status text is just what's going to\nprint on the pump status either on or\noff i've defined a variable for that a\nstring variable and i've given an\ninitialization value of off and i've\nalso given it a trigger value and again\nof course i've got a trigger that's up\non the iot cloud but i want a local\ntrigger and so i set it to about 30\nbecause i thought that was a reasonable\ntrigger point for the water you could\nchange that value if you like but\nbasically when it starts up before it\ncan connect to the cloud and see\nwhere the trigger has been set it's\ngoing to use a value of 30. and then\nthis has been inserted for me with the\narduino iot cloud it's one of the many\nthings that inserts and it includes\nanother file called thin properties and\nthat's this file over here and thing\nproperties has been generated in the\ncloud and includes all the different uh\nvariables that i'm using so it defines\nthem over here and uh init properties\nover here just uh\ninitialize all the different uh\ndifferent properties it tells you what\nit is current temperatures read on chain\nand the default value of null etc\nand uh so we go now into our setup and\nset up this again was added by the iot\ncloud this sets up the serial monitor\nand you notice it gives it a rather long\ndelay of about a second and a half\nafterwards and so again this is going to\ntake a couple of seconds for everything\nto establish itself and this is part of\nthat delay\nwe just saw knit properties that's in\nthe thing properties file and it\nconnects to the arduino iot cloud this\nagain has been added automatically when\ni generated the initial sketch in the\ncloud and so is this and this is just a\ndebug level thing and you can change the\ndebug level if you wish to\nyou can set it all the way up to four if\nyou want to get all kinds of information\nif you're having problems\nwe saw this before to initialize our\noled display using the 3.3 volts so\nthat's over here we initialize the dht\n22 and this will work also with the dht\n21 or 11 so we just do a begin set our\nanalog to digital converter to use 12\nbits as we've seen before set the relay\nas an output and we'll turn off the\nrelay initially because we want this to\nstart\nalways with the pump off even if the\nsoil is bone dry we'll wait a second or\nso to establish that we don't want to\nstart by running the pump and we set the\npump status which is the cloud variable\nto false because again we've set the\npump off\nand then we go into our loop now the\nfirst thing in the loop is something the\ncloud added by itself and that's an\narduino cloud update function to just\nupdate between the cloud and the local\nmachine here the the arduino nano 33 iot\nthen we're going to get our temperature\nand humidity from the dht and we'll\nassign them to the local variables and\nthen we'll pass those values off into\nthe cloud variables and so we've got\nboth the local and cloud variable with\nthe same value we're going to go get the\nmoisture value and determine the\npercentage and keep the values between 0\nand 100 exactly the same way we did in\nour soil moisture meter and then we\nprint that out to the serial port we can\njust use that if we need to calibrate\nour soil moisture sensors and then we'll\npass that to its equivalent cloud value\nthe current moisture value which is a\ncloud variable gets the same value as\nthis now we go and see if our pump needs\nto be triggered and so basically if the\nsoil moisture percent is a lower value\nthan the pump trigger then we're going\nto turn the pump on\nand otherwise we're going to turn the\npump off and so pump on and pump off or\ntwo functions i'll show you in a moment\nand then we go to cycle the values on\nthe oled display and i've got a couple\nof functions here called print oled and\nwe just pass a number of parameters to\nthem\nand\nyou can actually even see the parameters\nthanks to the arduino iot cloud\nand um basically we're pumping the\nposition and the value of the top text\nthe position of the value of the bottom\ntext and then the delay period how long\ndo we want it to be on\nand\nso let's go and take a look at those\nfunctions because that's the end of our\nloop pump on and pump off are pretty\nsimple for pump on we do a digital write\nto the relay and we write it high to\nturn it on we change our status text to\non and we change pump status which is\nthe cloud variable to true pump off does\nexactly the opposite thing print oled\nas you've seen all the different\nparameters you put on its input is\nbasically the same as what we saw when\nwe built the soil moisture meter instead\nof using fixed values we're just using\nthe variables that we pump in so we set\nthe top cursor text size to 2 and we set\nits position to whatever this value is\non the first line line zero and we print\nthe top text and then we set the main\ncursor on line 40 to whatever position\nmain cursor is set the text ties text\nsize to three and then we print the main\ntext and then at the very end of it we\ndo a display we delay by that delay time\nand then clear the display and so this\njust saves me from having to write this\nfour times over and then finally\non trigger level change this is\nsomething the cloud added because every\ntime\nthat i change that trigger variable this\nfunction will be activated so when i\nmove the slider it will activate this\nfunction and all the function is doing\nis it's taking the trigger level\nvariable and it's setting the local pump\ntrigger value to that trigger level\nvariable and that's basically it so\nthat's a sketch it may look a little\noverwhelming at first but actually when\nyou break it down it's quite simple and\nonce you set that up with the cloud and\nyour control panel you're all set to go\nnow in order to demo this i found that\nit was a little bit awkward in the\nworkshop to actually use soil and a pump\nand so i've used a different method but\ni wanted to show you the kind of pump\nthat you could use with a system like\nthis\nnow this is a tiny pump that would be\nperfect for this the pump is actually\nsubmersible and it runs on four and a\nhalf to 12 volts dc\nand it actually pumps a surprising\namount of water which is one of the\nreasons i refrain from doing this on my\nworkbench because i didn't want a\nsurprising amount of water all over my\nworkbench but this is a fairly\ninexpensive unit that is typical for the\nkind of thing that would work perfectly\nin this application now instead what i\nhave done is i've just wired my relay\nover to this lamp over here and so the\nlamp will come on in lieu of the pump\nand instead of soil i've just got a cup\nof water and of course if i immerse this\ninto the cup of water then it's going to\ngo to 100 percent moisture\nand at 100 moisture that's\nobviously not going to trigger my pump\nand we can take a look at the display\nyes it's at a hundred percent right now\nand so is the display up on the uh on\nthe control panel now i'll take this out\nand if i wipe it completely dry\nof course i'm down to zero percent\nmoisture and my light has come on right\nnow to indicate that the pump would\nnormally be coming on and it says pump\non over here on my display\nand um\non the display over here\nit's also dropped down to zero percent\non the control panel and you can see\nthat my pump is on but what i can do to\nsimulate\nlevels in between zero and a hundred is\ni can dip it in the water and then just\ntake it out and leave a little bit of\nwater sitting on the probe and what that\ntends to do\nis it tends to make the moisture\nsomewhere in between like right now it's\nsaying it's at 16 percent and so that\nallows me to simulate everything without\nagain having to use actual soil now\nyou've already seen the control panel\nand you've seen how it works and it\nseems to work pretty well now one thing\ni've noticed is there is a latency\nbetween when things happen like for\nexample right now the pump has turned\nitself off because the moisture's\nactually gone up to 21\nbut it took a moment for the display to\nregister that and that seems to be\npretty typical i think it's the time\nthat it takes for everything to travel\nthrough the internet and then to go over\nand register at arduino's cloud and then\nto come back to the microcontroller also\nwhen you first turn this on there's\nalmost a delay of about two minutes\nbefore it starts to collect data which\nis one of the reasons that i put those\nconstants in for things like the pump\ntrigger level because i didn't want it\nsitting there without any values when it\nfirst powered up but otherwise it's\nactually a pretty effective system i've\nbeen running it for a few days and it\nseems to work pretty well and i think\nthis is something that either by itself\nor a variation of this would work well\nfor watering your own garden\nautomatically using the internet of\nthings\nso that brings us to the end of the\nvideo i hope that you enjoyed it and i\nwant to assure you that no plants were\nharmed during the making of this video\nnow if you're at all curious about my\nability to kill plastic plants all i can\nsay in my defense is that they really\nshould print warnings on those things to\nsay that they aren't dishwasher safe\nbut my horticultural inabilities aside\nif you'd like to learn more about soil\nmoisture sensors or get the code that\nyou'll need in order to build the\nprojects i showed you today you will\nfind all of that on the article\naccompanying this video on the\ndronebotworkshop.com website there's a\nlink to that article right below the\nvideo while you're on the website please\nconsider signing up for my newsletter\nit's not a spam letter and it's\ncertainly not a gardening advice letter\nit's just my way of keeping in touch\nwith you to let you know what is\nhappening here in the workshop and it's\nfree to join all i need is your email\naddress if you want to discuss soil\nmoisture sensors more or if you want to\nbrag about your own gardening abilities\nhead on over to the dronebot workshop\nforums where you'll find a bunch of\nlike-minded individuals who love to\ndiscuss technology and all sorts of\nthings and the forum of course is free\nto join and of course if you haven't yet\nplease subscribe to the youtube channel\ni make videos about technology and\nmicrocontrollers and things that don't\nhave to do with gardening and all you\nneed to do is click on the red subscribe\nbutton and when you do that also hit the\nbell notification and as long as you've\nenabled your notifications on youtube\nyou'll get notified every time i make a\nnew video so until next time please stay\nsafe please take good care of yourself\nand i'll see you again very soon here in\nthe dronebot workshop goodbye for now\n[Music]\nyou\n",
  "words": [
    "today",
    "workshop",
    "using",
    "soil",
    "moisture",
    "sensors",
    "learn",
    "sensors",
    "work",
    "calibrate",
    "use",
    "microcontrollers",
    "also",
    "build",
    "soil",
    "moisture",
    "meter",
    "automated",
    "watering",
    "system",
    "control",
    "arduino",
    "iot",
    "cloud",
    "growing",
    "something",
    "special",
    "today",
    "welcome",
    "workshop",
    "music",
    "well",
    "hello",
    "welcome",
    "workshop",
    "today",
    "working",
    "soil",
    "moisture",
    "sensors",
    "probably",
    "guess",
    "name",
    "devices",
    "place",
    "ground",
    "measure",
    "amount",
    "water",
    "content",
    "soil",
    "going",
    "learn",
    "sensors",
    "work",
    "going",
    "calibrate",
    "going",
    "build",
    "couple",
    "projects",
    "first",
    "project",
    "soil",
    "moisture",
    "meter",
    "oled",
    "display",
    "second",
    "project",
    "automated",
    "watering",
    "system",
    "going",
    "using",
    "arduino",
    "iot",
    "cloud",
    "water",
    "maintain",
    "gardens",
    "pretty",
    "well",
    "anywhere",
    "world",
    "go",
    "lessons",
    "projects",
    "bit",
    "disclaimer",
    "give",
    "people",
    "perhaps",
    "one",
    "wonderful",
    "gardening",
    "grow",
    "beautiful",
    "crops",
    "vegetables",
    "make",
    "gorgeous",
    "flowers",
    "whizzes",
    "garden",
    "call",
    "people",
    "people",
    "green",
    "thumb",
    "well",
    "look",
    "color",
    "wheel",
    "opposite",
    "green",
    "red",
    "probably",
    "red",
    "thumb",
    "plants",
    "well",
    "never",
    "good",
    "gardening",
    "even",
    "managed",
    "kill",
    "plastic",
    "plants",
    "kind",
    "person",
    "dispense",
    "advice",
    "gardening",
    "however",
    "dispense",
    "advice",
    "technology",
    "let",
    "dispense",
    "right",
    "telling",
    "soil",
    "moisture",
    "sensors",
    "work",
    "soil",
    "moisture",
    "sensors",
    "applications",
    "agriculture",
    "irrigation",
    "research",
    "plain",
    "gardening",
    "advanced",
    "soil",
    "moisture",
    "sensors",
    "use",
    "property",
    "water",
    "alter",
    "microwaves",
    "use",
    "techniques",
    "frequency",
    "domain",
    "reflectometry",
    "time",
    "domain",
    "reflectometry",
    "advanced",
    "method",
    "measuring",
    "soil",
    "moisture",
    "neutron",
    "scattering",
    "uses",
    "moderator",
    "properties",
    "water",
    "neutrons",
    "source",
    "sensor",
    "soil",
    "also",
    "act",
    "galvanic",
    "cell",
    "allows",
    "construction",
    "soil",
    "moisture",
    "detector",
    "require",
    "power",
    "source",
    "resistance",
    "capacitance",
    "properties",
    "soil",
    "also",
    "used",
    "measure",
    "soil",
    "moisture",
    "today",
    "focusing",
    "inexpensive",
    "sensors",
    "designed",
    "microcontrollers",
    "microcomputers",
    "sensors",
    "based",
    "either",
    "resistance",
    "capacitive",
    "properties",
    "soil",
    "sensors",
    "run",
    "multiple",
    "modes",
    "analog",
    "mode",
    "resistance",
    "voltage",
    "output",
    "change",
    "response",
    "amount",
    "moisture",
    "soil",
    "digital",
    "mode",
    "set",
    "point",
    "established",
    "output",
    "go",
    "either",
    "high",
    "low",
    "depending",
    "whether",
    "moisture",
    "set",
    "point",
    "addition",
    "analog",
    "outputs",
    "also",
    "serial",
    "i2c",
    "devices",
    "available",
    "taking",
    "look",
    "i2c",
    "device",
    "later",
    "common",
    "application",
    "soil",
    "moisture",
    "sensors",
    "automated",
    "watering",
    "system",
    "putting",
    "one",
    "together",
    "later",
    "video",
    "sort",
    "system",
    "soil",
    "moisture",
    "sensor",
    "connected",
    "input",
    "microcontroller",
    "also",
    "typical",
    "sort",
    "readout",
    "soil",
    "moisture",
    "well",
    "also",
    "connect",
    "pump",
    "source",
    "water",
    "output",
    "microcontroller",
    "sensor",
    "detects",
    "moisture",
    "dropping",
    "certain",
    "point",
    "activate",
    "watering",
    "system",
    "water",
    "soil",
    "moisture",
    "gone",
    "certain",
    "threshold",
    "watering",
    "stop",
    "resistive",
    "soil",
    "moisture",
    "sensors",
    "depend",
    "upon",
    "resistance",
    "property",
    "soil",
    "decreases",
    "amount",
    "moisture",
    "simple",
    "design",
    "quite",
    "easy",
    "manufacture",
    "however",
    "one",
    "major",
    "drawback",
    "corrosion",
    "probes",
    "alter",
    "resistive",
    "properties",
    "capacitive",
    "soil",
    "moisture",
    "sensor",
    "soil",
    "serves",
    "dialect",
    "within",
    "capacitor",
    "sensors",
    "timer",
    "measure",
    "amount",
    "time",
    "capacitor",
    "takes",
    "discharge",
    "measuring",
    "soil",
    "capacitance",
    "require",
    "direct",
    "contact",
    "electrode",
    "electrode",
    "insulated",
    "eliminates",
    "corrosion",
    "effect",
    "occurs",
    "resistive",
    "sensors",
    "resistive",
    "sensors",
    "advantage",
    "lower",
    "cost",
    "capacitive",
    "sensors",
    "however",
    "longer",
    "lasting",
    "generally",
    "provide",
    "better",
    "performance",
    "sensors",
    "provide",
    "analog",
    "outputs",
    "used",
    "designs",
    "use",
    "sensor",
    "happen",
    "circuits",
    "see",
    "let",
    "take",
    "look",
    "soil",
    "moisture",
    "sensors",
    "soil",
    "moisture",
    "sensors",
    "take",
    "look",
    "going",
    "using",
    "later",
    "experiments",
    "three",
    "capacitive",
    "sensors",
    "one",
    "resistive",
    "sort",
    "tell",
    "one",
    "resistive",
    "one",
    "one",
    "two",
    "electrodes",
    "actually",
    "measuring",
    "resistance",
    "electrodes",
    "inserted",
    "soil",
    "soil",
    "provide",
    "electrical",
    "resistance",
    "measured",
    "rest",
    "capacitive",
    "sensors",
    "actually",
    "see",
    "electrodes",
    "nicely",
    "sealed",
    "protected",
    "elements",
    "nothing",
    "going",
    "corrode",
    "course",
    "capacitive",
    "sensor",
    "works",
    "different",
    "principle",
    "case",
    "soil",
    "becomes",
    "dialect",
    "capacitor",
    "standard",
    "common",
    "capacitive",
    "soil",
    "moisture",
    "sensor",
    "ones",
    "quite",
    "inexpensive",
    "analog",
    "output",
    "two",
    "i2c",
    "outputs",
    "one",
    "made",
    "company",
    "called",
    "catnip",
    "electronics",
    "interesting",
    "little",
    "sensor",
    "also",
    "measures",
    "temperature",
    "light",
    "one",
    "thing",
    "though",
    "connector",
    "solder",
    "jumper",
    "wires",
    "onto",
    "output",
    "i2c",
    "output",
    "got",
    "power",
    "ground",
    "sda",
    "scl",
    "coming",
    "also",
    "another",
    "i2c",
    "sensor",
    "one",
    "called",
    "seesaw",
    "made",
    "adafruit",
    "little",
    "connector",
    "little",
    "bit",
    "easier",
    "use",
    "ones",
    "also",
    "connectors",
    "well",
    "go",
    "soil",
    "moisture",
    "sensors",
    "using",
    "experiments",
    "put",
    "soil",
    "moisture",
    "sensors",
    "use",
    "need",
    "calibrate",
    "matter",
    "whether",
    "resistive",
    "capacitive",
    "sensor",
    "unique",
    "properties",
    "even",
    "get",
    "batch",
    "find",
    "two",
    "exactly",
    "alike",
    "calibrating",
    "sensor",
    "pretty",
    "easy",
    "need",
    "take",
    "measurement",
    "output",
    "completely",
    "dry",
    "take",
    "output",
    "measurement",
    "completely",
    "wet",
    "since",
    "resistive",
    "capacitive",
    "sensors",
    "output",
    "voltage",
    "response",
    "amount",
    "soil",
    "moisture",
    "use",
    "circuit",
    "sketch",
    "calibrate",
    "going",
    "raspberry",
    "pi",
    "pico",
    "inexpensive",
    "micro",
    "controller",
    "one",
    "advantages",
    "12",
    "bit",
    "analog",
    "digital",
    "converter",
    "get",
    "accurate",
    "reading",
    "also",
    "going",
    "using",
    "classic",
    "arduino",
    "ide",
    "experiments",
    "used",
    "pico",
    "yet",
    "arduino",
    "ide",
    "urge",
    "go",
    "take",
    "look",
    "monster",
    "size",
    "video",
    "10th",
    "anniversary",
    "raspberry",
    "pi",
    "watch",
    "whole",
    "video",
    "go",
    "third",
    "project",
    "use",
    "table",
    "contents",
    "video",
    "go",
    "directly",
    "use",
    "chapters",
    "feature",
    "youtube",
    "video",
    "third",
    "project",
    "raspberry",
    "pi",
    "pico",
    "simon",
    "game",
    "show",
    "exactly",
    "set",
    "arduino",
    "ide",
    "use",
    "pico",
    "going",
    "assume",
    "already",
    "know",
    "want",
    "use",
    "pico",
    "also",
    "going",
    "show",
    "use",
    "calibration",
    "arduino",
    "uno",
    "basically",
    "sketch",
    "one",
    "modification",
    "show",
    "hookup",
    "uno",
    "well",
    "necessarily",
    "use",
    "picot",
    "although",
    "get",
    "resolution",
    "let",
    "go",
    "take",
    "look",
    "hook",
    "pico",
    "show",
    "sketch",
    "going",
    "using",
    "calibrate",
    "resistive",
    "capacitive",
    "soil",
    "moisture",
    "sensors",
    "experiments",
    "going",
    "using",
    "raspberry",
    "pi",
    "pico",
    "microcontroller",
    "however",
    "could",
    "use",
    "different",
    "microcontroller",
    "show",
    "experiments",
    "arduino",
    "uno",
    "little",
    "bit",
    "later",
    "also",
    "course",
    "need",
    "soil",
    "moisture",
    "sensor",
    "could",
    "use",
    "resistive",
    "sensor",
    "capacitive",
    "sensor",
    "hookup",
    "code",
    "identical",
    "using",
    "capacitive",
    "sensor",
    "illustration",
    "hookup",
    "resistive",
    "sensor",
    "identical",
    "start",
    "connecting",
    "analog",
    "ground",
    "pin",
    "raspberry",
    "pi",
    "pico",
    "ground",
    "soil",
    "sensor",
    "could",
    "also",
    "use",
    "another",
    "ground",
    "pin",
    "wish",
    "analog",
    "ground",
    "specific",
    "reference",
    "analog",
    "digital",
    "converter",
    "produce",
    "best",
    "results",
    "use",
    "pico",
    "volt",
    "output",
    "connect",
    "vcc",
    "soil",
    "moisture",
    "sensor",
    "analog",
    "digital",
    "converter",
    "0",
    "input",
    "also",
    "gp26",
    "connected",
    "output",
    "soil",
    "moisture",
    "sensor",
    "completes",
    "wiring",
    "let",
    "take",
    "look",
    "code",
    "use",
    "calibrate",
    "sensor",
    "sketch",
    "going",
    "using",
    "calibrate",
    "sensors",
    "use",
    "capacitive",
    "resistive",
    "sensors",
    "extremely",
    "simple",
    "sketch",
    "start",
    "defining",
    "value",
    "going",
    "using",
    "get",
    "sensor",
    "value",
    "output",
    "analog",
    "digital",
    "converter",
    "define",
    "analog",
    "digital",
    "converter",
    "pin",
    "adc",
    "open",
    "serial",
    "monitor",
    "see",
    "results",
    "also",
    "going",
    "set",
    "analog",
    "digital",
    "converter",
    "resolution",
    "12",
    "bits",
    "default",
    "10",
    "bits",
    "want",
    "get",
    "resolution",
    "loop",
    "extremely",
    "simple",
    "use",
    "analog",
    "read",
    "read",
    "value",
    "sensor",
    "pin",
    "assign",
    "sensorval",
    "print",
    "serial",
    "monitor",
    "add",
    "short",
    "delay",
    "continue",
    "super",
    "simple",
    "sketch",
    "let",
    "try",
    "capacitive",
    "resistive",
    "sensors",
    "going",
    "start",
    "calibrating",
    "capacitive",
    "sensor",
    "got",
    "hooked",
    "pico",
    "right",
    "see",
    "serial",
    "monitor",
    "getting",
    "reading",
    "hovering",
    "around",
    "2500",
    "25",
    "23",
    "25",
    "dry",
    "reading",
    "want",
    "record",
    "getting",
    "zero",
    "percent",
    "moisture",
    "going",
    "stick",
    "glass",
    "water",
    "see",
    "reading",
    "went",
    "going",
    "1340",
    "1350",
    "reading",
    "going",
    "get",
    "wet",
    "reading",
    "also",
    "want",
    "calibrate",
    "two",
    "different",
    "extremes",
    "sensor",
    "using",
    "calibration",
    "values",
    "experiments",
    "okay",
    "working",
    "resistive",
    "sensor",
    "first",
    "thing",
    "notice",
    "serial",
    "monitor",
    "dry",
    "reading",
    "low",
    "value",
    "around",
    "20",
    "even",
    "approaches",
    "zero",
    "times",
    "put",
    "water",
    "notice",
    "wet",
    "reading",
    "high",
    "quite",
    "discrepancy",
    "two",
    "kind",
    "range",
    "means",
    "type",
    "soil",
    "moisture",
    "sensor",
    "actually",
    "sensitive",
    "small",
    "differences",
    "soil",
    "moisture",
    "ways",
    "bit",
    "accurate",
    "however",
    "course",
    "resistive",
    "ones",
    "problem",
    "probes",
    "eventually",
    "start",
    "corrode",
    "values",
    "start",
    "changing",
    "go",
    "calibration",
    "see",
    "use",
    "circuit",
    "calibrate",
    "resistive",
    "capacitive",
    "soil",
    "moisture",
    "sensors",
    "could",
    "also",
    "use",
    "arduino",
    "uno",
    "perform",
    "experiments",
    "showing",
    "capacitive",
    "soil",
    "sensor",
    "could",
    "use",
    "resistive",
    "sensor",
    "well",
    "hookup",
    "identical",
    "start",
    "hooking",
    "ground",
    "soil",
    "sensor",
    "arduino",
    "ground",
    "vcc",
    "soil",
    "moisture",
    "sensor",
    "connected",
    "volt",
    "output",
    "arduino",
    "uno",
    "output",
    "moisture",
    "sensor",
    "connected",
    "analog",
    "pin",
    "a0",
    "also",
    "want",
    "connect",
    "ref",
    "analog",
    "reference",
    "pin",
    "arduino",
    "uno",
    "volt",
    "output",
    "let",
    "show",
    "changes",
    "need",
    "make",
    "code",
    "order",
    "use",
    "arduino",
    "uno",
    "one",
    "change",
    "going",
    "need",
    "make",
    "code",
    "run",
    "arduino",
    "uno",
    "setup",
    "command",
    "analog",
    "read",
    "resolution",
    "going",
    "compile",
    "arduino",
    "uno",
    "arduino",
    "uno",
    "10",
    "bit",
    "analog",
    "digital",
    "converter",
    "time",
    "remember",
    "wiring",
    "wired",
    "ref",
    "analog",
    "reference",
    "pin",
    "volts",
    "need",
    "use",
    "change",
    "analog",
    "read",
    "resolution",
    "analog",
    "reference",
    "make",
    "value",
    "external",
    "like",
    "way",
    "use",
    "volt",
    "power",
    "supply",
    "fed",
    "pin",
    "also",
    "wo",
    "analog",
    "read",
    "resolution",
    "set",
    "obviously",
    "line",
    "incorrect",
    "right",
    "change",
    "need",
    "make",
    "run",
    "code",
    "arduino",
    "uno",
    "showed",
    "different",
    "soil",
    "moisture",
    "sensors",
    "collected",
    "showed",
    "two",
    "models",
    "using",
    "i2c",
    "interface",
    "capacitive",
    "soil",
    "moisture",
    "sensors",
    "work",
    "similar",
    "fashion",
    "capacitive",
    "sensor",
    "already",
    "worked",
    "course",
    "output",
    "different",
    "i2c",
    "therefore",
    "used",
    "microcontroller",
    "microcomputer",
    "supports",
    "i2c",
    "one",
    "models",
    "showed",
    "company",
    "called",
    "catnip",
    "electronics",
    "interesting",
    "sensor",
    "give",
    "soil",
    "moisture",
    "readings",
    "also",
    "outputs",
    "temperature",
    "light",
    "level",
    "readings",
    "quite",
    "easy",
    "use",
    "long",
    "use",
    "library",
    "going",
    "take",
    "arduino",
    "uno",
    "catnip",
    "electronics",
    "i2c",
    "sensor",
    "see",
    "put",
    "use",
    "i2c",
    "experiment",
    "using",
    "arduino",
    "uno",
    "also",
    "require",
    "catnip",
    "electronics",
    "i2c",
    "moisture",
    "sensor",
    "need",
    "solder",
    "wire",
    "onto",
    "connections",
    "order",
    "make",
    "use",
    "begin",
    "connecting",
    "ground",
    "connection",
    "moisture",
    "sensor",
    "one",
    "grounds",
    "arduino",
    "connect",
    "moisture",
    "sensor",
    "sda",
    "output",
    "analog",
    "pin",
    "a4",
    "arduino",
    "connect",
    "scl",
    "input",
    "analog",
    "pin",
    "a5",
    "vcc",
    "pin",
    "catnip",
    "electronics",
    "i2c",
    "moisture",
    "sensor",
    "connected",
    "arduino",
    "5",
    "volt",
    "output",
    "completes",
    "wiring",
    "let",
    "take",
    "look",
    "code",
    "use",
    "moisture",
    "sensor",
    "i2c",
    "soil",
    "moisture",
    "sensor",
    "going",
    "using",
    "great",
    "example",
    "electronics",
    "seeing",
    "world",
    "built",
    "company",
    "called",
    "catnip",
    "electronics",
    "lithuania",
    "get",
    "tindy",
    "sell",
    "directly",
    "see",
    "particularly",
    "expensive",
    "actually",
    "got",
    "mine",
    "mouser",
    "electronics",
    "option",
    "well",
    "wherever",
    "happen",
    "get",
    "going",
    "need",
    "library",
    "order",
    "use",
    "properly",
    "lot",
    "great",
    "examples",
    "github",
    "also",
    "python",
    "examples",
    "github",
    "could",
    "use",
    "python",
    "micropython",
    "use",
    "different",
    "microcontroller",
    "perhaps",
    "raspberry",
    "pi",
    "going",
    "using",
    "arduino",
    "uno",
    "going",
    "get",
    "arduino",
    "code",
    "grab",
    "library",
    "github",
    "hit",
    "code",
    "download",
    "zip",
    "get",
    "library",
    "zip",
    "zip",
    "format",
    "need",
    "install",
    "arduino",
    "ide",
    "done",
    "show",
    "go",
    "sketch",
    "go",
    "include",
    "library",
    "include",
    "library",
    "add",
    "zip",
    "library",
    "navigate",
    "downloaded",
    "files",
    "i2c",
    "soil",
    "moisture",
    "sensor",
    "would",
    "hit",
    "ok",
    "already",
    "done",
    "installed",
    "library",
    "also",
    "example",
    "sketch",
    "use",
    "order",
    "work",
    "go",
    "file",
    "go",
    "examples",
    "go",
    "examples",
    "custom",
    "libraries",
    "see",
    "i2c",
    "soil",
    "moisture",
    "sensor",
    "got",
    "two",
    "one",
    "allows",
    "change",
    "i2c",
    "address",
    "device",
    "one",
    "called",
    "read",
    "sensor",
    "data",
    "going",
    "expand",
    "see",
    "pretty",
    "simple",
    "sketch",
    "really",
    "includes",
    "library",
    "installed",
    "also",
    "includes",
    "wire",
    "library",
    "course",
    "need",
    "i2c",
    "defines",
    "something",
    "called",
    "uh",
    "sensor",
    "uh",
    "go",
    "setup",
    "start",
    "wire",
    "library",
    "put",
    "serial",
    "monitor",
    "reset",
    "sensor",
    "sensor",
    "dot",
    "begin",
    "give",
    "time",
    "boot",
    "second",
    "print",
    "serial",
    "monitor",
    "address",
    "soil",
    "moisture",
    "sensor",
    "firmware",
    "version",
    "use",
    "get",
    "address",
    "get",
    "firmware",
    "get",
    "virgin",
    "excuse",
    "show",
    "firmware",
    "version",
    "go",
    "loop",
    "wait",
    "sensor",
    "busy",
    "print",
    "capacitance",
    "value",
    "use",
    "get",
    "capacitance",
    "read",
    "print",
    "serial",
    "monitor",
    "also",
    "reads",
    "temperature",
    "light",
    "get",
    "temperature",
    "get",
    "light",
    "simple",
    "commands",
    "made",
    "possible",
    "library",
    "printed",
    "serial",
    "monitor",
    "could",
    "see",
    "would",
    "use",
    "sketches",
    "really",
    "cool",
    "little",
    "sensor",
    "library",
    "pretty",
    "easy",
    "use",
    "let",
    "load",
    "code",
    "take",
    "look",
    "action",
    "going",
    "quick",
    "demo",
    "i2c",
    "moisture",
    "sensor",
    "look",
    "serial",
    "monitor",
    "see",
    "getting",
    "capacitance",
    "temperature",
    "light",
    "readings",
    "well",
    "could",
    "also",
    "suppose",
    "useful",
    "gardening",
    "needs",
    "dry",
    "reading",
    "going",
    "get",
    "remember",
    "takes",
    "second",
    "gets",
    "reading",
    "going",
    "instantaneous",
    "going",
    "put",
    "see",
    "capacitance",
    "reading",
    "changed",
    "temperature",
    "light",
    "readings",
    "changed",
    "quite",
    "bit",
    "well",
    "sure",
    "interpret",
    "light",
    "values",
    "temperature",
    "degrees",
    "celsius",
    "think",
    "little",
    "bit",
    "think",
    "water",
    "really",
    "warm",
    "capacitance",
    "really",
    "course",
    "looking",
    "capacitance",
    "wet",
    "remove",
    "dry",
    "wait",
    "second",
    "drops",
    "around",
    "180",
    "785",
    "uh",
    "useful",
    "soil",
    "moisture",
    "sensor",
    "i2c",
    "device",
    "use",
    "microcontrollers",
    "microcomputers",
    "happen",
    "analog",
    "input",
    "seen",
    "soil",
    "moisture",
    "sensors",
    "work",
    "calibrated",
    "sensors",
    "time",
    "put",
    "use",
    "first",
    "project",
    "going",
    "build",
    "soil",
    "moisture",
    "meter",
    "meter",
    "oled",
    "display",
    "display",
    "percentage",
    "moisture",
    "soil",
    "based",
    "around",
    "raspberry",
    "pi",
    "pico",
    "going",
    "need",
    "calibration",
    "values",
    "took",
    "soil",
    "moisture",
    "sensor",
    "order",
    "complete",
    "job",
    "done",
    "yet",
    "go",
    "back",
    "calibrate",
    "sensor",
    "first",
    "done",
    "let",
    "show",
    "wire",
    "soil",
    "moisture",
    "meter",
    "constructing",
    "soil",
    "moisture",
    "meter",
    "raspberry",
    "pi",
    "pico",
    "also",
    "using",
    "oled",
    "display",
    "standard",
    "ssd",
    "1306",
    "display",
    "i2c",
    "input",
    "course",
    "require",
    "soil",
    "moisture",
    "sensor",
    "could",
    "use",
    "resistive",
    "capacitive",
    "sensor",
    "illustrating",
    "capacitive",
    "sensor",
    "connection",
    "soil",
    "moisture",
    "sensor",
    "identical",
    "ones",
    "used",
    "calibration",
    "start",
    "connecting",
    "ground",
    "soil",
    "moisture",
    "sensor",
    "analog",
    "ground",
    "agnd",
    "pin",
    "raspberry",
    "pi",
    "pico",
    "vcc",
    "connection",
    "moisture",
    "sensor",
    "go",
    "picos",
    "volt",
    "output",
    "output",
    "soil",
    "moisture",
    "sensor",
    "go",
    "analog",
    "digital",
    "converter",
    "0",
    "input",
    "raspberry",
    "pi",
    "pico",
    "also",
    "gp26",
    "connect",
    "ground",
    "oled",
    "display",
    "grounds",
    "raspberry",
    "pi",
    "pico",
    "identify",
    "ground",
    "pins",
    "pico",
    "square",
    "pads",
    "connect",
    "vcc",
    "oled",
    "display",
    "volt",
    "output",
    "raspberry",
    "pi",
    "pico",
    "scl",
    "clock",
    "pin",
    "oled",
    "display",
    "connected",
    "pico",
    "pin",
    "gp5",
    "sda",
    "data",
    "pin",
    "oled",
    "display",
    "connected",
    "pico",
    "pin",
    "gp4",
    "completes",
    "wiring",
    "sketch",
    "going",
    "using",
    "soil",
    "moisture",
    "meter",
    "written",
    "use",
    "capacitive",
    "sensors",
    "however",
    "could",
    "rewrite",
    "resistive",
    "sensors",
    "one",
    "simple",
    "change",
    "show",
    "moment",
    "start",
    "including",
    "libraries",
    "going",
    "need",
    "drive",
    "oled",
    "display",
    "need",
    "wire",
    "library",
    "library",
    "i2c",
    "already",
    "included",
    "arduino",
    "ide",
    "next",
    "couple",
    "libraries",
    "libraries",
    "adafruit",
    "go",
    "library",
    "manager",
    "look",
    "ssd",
    "1306",
    "install",
    "adafruit",
    "library",
    "also",
    "install",
    "library",
    "however",
    "already",
    "played",
    "oled",
    "displays",
    "good",
    "chance",
    "libraries",
    "already",
    "going",
    "go",
    "set",
    "parameters",
    "oled",
    "display",
    "set",
    "height",
    "width",
    "set",
    "parameters",
    "well",
    "reset",
    "negative",
    "one",
    "needs",
    "set",
    "know",
    "using",
    "separate",
    "line",
    "reset",
    "screen",
    "address",
    "i2c",
    "address",
    "happen",
    "display",
    "set",
    "different",
    "i2c",
    "address",
    "course",
    "need",
    "change",
    "define",
    "object",
    "called",
    "display",
    "passing",
    "different",
    "parameters",
    "oled",
    "go",
    "put",
    "sensor",
    "constants",
    "values",
    "determined",
    "calibration",
    "sketch",
    "ran",
    "earlier",
    "values",
    "could",
    "well",
    "different",
    "mine",
    "could",
    "start",
    "experiment",
    "best",
    "way",
    "calibrate",
    "sensor",
    "using",
    "sketch",
    "looked",
    "previously",
    "plug",
    "values",
    "set",
    "couple",
    "variables",
    "going",
    "need",
    "soil",
    "moisture",
    "going",
    "get",
    "soil",
    "moisture",
    "value",
    "actually",
    "value",
    "get",
    "analog",
    "digital",
    "converter",
    "output",
    "also",
    "going",
    "get",
    "value",
    "percentage",
    "want",
    "display",
    "display",
    "define",
    "port",
    "using",
    "adc0",
    "input",
    "sensor",
    "setup",
    "going",
    "set",
    "serial",
    "monitor",
    "using",
    "serial",
    "monitor",
    "troubleshooting",
    "also",
    "fine",
    "tune",
    "wet",
    "values",
    "drive",
    "values",
    "might",
    "want",
    "change",
    "serial",
    "monitor",
    "help",
    "us",
    "going",
    "initialize",
    "display",
    "important",
    "thing",
    "initialize",
    "switch",
    "cap",
    "vcc",
    "parameter",
    "use",
    "initialize",
    "use",
    "use",
    "ssd",
    "1306",
    "going",
    "expect",
    "5",
    "volt",
    "power",
    "supply",
    "case",
    "know",
    "getting",
    "volt",
    "power",
    "supply",
    "need",
    "plug",
    "screen",
    "address",
    "going",
    "clear",
    "display",
    "set",
    "analog",
    "digital",
    "converter",
    "use",
    "12",
    "bits",
    "analog",
    "read",
    "resolution",
    "function",
    "go",
    "loop",
    "loop",
    "calibration",
    "sketch",
    "going",
    "get",
    "value",
    "sensor",
    "assign",
    "soil",
    "moisture",
    "value",
    "print",
    "serial",
    "monitor",
    "go",
    "going",
    "determine",
    "percentage",
    "map",
    "command",
    "take",
    "soil",
    "moisture",
    "value",
    "map",
    "drive",
    "value",
    "wet",
    "value",
    "value",
    "0",
    "100",
    "get",
    "percentage",
    "said",
    "earlier",
    "would",
    "possibly",
    "able",
    "use",
    "resistive",
    "sensor",
    "need",
    "reverse",
    "order",
    "dry",
    "value",
    "wet",
    "value",
    "saw",
    "values",
    "work",
    "opposite",
    "direction",
    "resistive",
    "sensors",
    "possible",
    "values",
    "could",
    "drop",
    "0",
    "100",
    "get",
    "values",
    "go",
    "beyond",
    "drive",
    "value",
    "wet",
    "value",
    "happen",
    "calibration",
    "perfect",
    "going",
    "use",
    "constrain",
    "command",
    "constrain",
    "results",
    "zero",
    "one",
    "hundred",
    "goes",
    "hundred",
    "read",
    "hundred",
    "goes",
    "zero",
    "read",
    "zero",
    "use",
    "serial",
    "monitor",
    "fine",
    "tune",
    "things",
    "occur",
    "often",
    "print",
    "serial",
    "monitor",
    "percentage",
    "go",
    "print",
    "oled",
    "display",
    "set",
    "cursor",
    "oled",
    "set",
    "text",
    "size",
    "two",
    "detects",
    "color",
    "white",
    "top",
    "display",
    "yellow",
    "matter",
    "use",
    "white",
    "time",
    "color",
    "writing",
    "oled",
    "display",
    "print",
    "word",
    "moister",
    "going",
    "print",
    "top",
    "display",
    "case",
    "display",
    "going",
    "yellow",
    "display",
    "may",
    "one",
    "single",
    "color",
    "might",
    "two",
    "different",
    "colors",
    "matter",
    "go",
    "move",
    "cursor",
    "set",
    "text",
    "size",
    "even",
    "bigger",
    "set",
    "color",
    "white",
    "print",
    "soil",
    "moisture",
    "percentage",
    "value",
    "print",
    "percent",
    "symbol",
    "behind",
    "end",
    "display",
    "display",
    "actually",
    "puts",
    "everything",
    "onto",
    "oled",
    "nothing",
    "written",
    "basically",
    "filling",
    "buffer",
    "delay",
    "quarter",
    "second",
    "clear",
    "display",
    "go",
    "back",
    "get",
    "next",
    "reading",
    "basically",
    "entire",
    "sketch",
    "load",
    "pico",
    "take",
    "look",
    "results",
    "soil",
    "moisture",
    "sensor",
    "small",
    "sawdust",
    "breadboard",
    "got",
    "couple",
    "things",
    "test",
    "reading",
    "zero",
    "percent",
    "sensor",
    "uh",
    "loose",
    "air",
    "let",
    "drop",
    "water",
    "see",
    "goes",
    "hundred",
    "percent",
    "right",
    "way",
    "might",
    "seeing",
    "flickering",
    "display",
    "flickering",
    "cameras",
    "effect",
    "making",
    "probably",
    "something",
    "frame",
    "rate",
    "something",
    "actual",
    "flickering",
    "visibly",
    "see",
    "wanted",
    "point",
    "let",
    "put",
    "soil",
    "right",
    "move",
    "wires",
    "bit",
    "see",
    "particularly",
    "moist",
    "soil",
    "let",
    "see",
    "find",
    "moist",
    "spot",
    "know",
    "moisture",
    "area",
    "go",
    "dropped",
    "water",
    "went",
    "one",
    "side",
    "indeed",
    "measuring",
    "moisture",
    "soil",
    "actually",
    "cool",
    "little",
    "project",
    "could",
    "build",
    "uh",
    "little",
    "enclosure",
    "give",
    "power",
    "supply",
    "wanted",
    "actually",
    "make",
    "sort",
    "useful",
    "instrument",
    "beginning",
    "video",
    "illustrated",
    "pretty",
    "classic",
    "use",
    "soil",
    "moisture",
    "sensor",
    "microcontroller",
    "essentially",
    "soil",
    "moisture",
    "sensor",
    "attached",
    "microcontroller",
    "microcontroller",
    "also",
    "attached",
    "pump",
    "another",
    "method",
    "dispensing",
    "water",
    "microcontroller",
    "detected",
    "soil",
    "moisture",
    "dropped",
    "certain",
    "threshold",
    "would",
    "activate",
    "pump",
    "turn",
    "would",
    "add",
    "moisture",
    "soil",
    "moisture",
    "went",
    "threshold",
    "would",
    "turn",
    "pump",
    "sure",
    "seen",
    "dozen",
    "different",
    "systems",
    "exactly",
    "well",
    "going",
    "build",
    "something",
    "like",
    "right",
    "got",
    "bit",
    "difference",
    "design",
    "based",
    "around",
    "arduino",
    "nano",
    "33",
    "iot",
    "board",
    "also",
    "makes",
    "use",
    "power",
    "arduino",
    "iot",
    "cloud",
    "make",
    "system",
    "monitor",
    "using",
    "phones",
    "tablets",
    "computer",
    "pretty",
    "well",
    "anywhere",
    "world",
    "going",
    "make",
    "assumption",
    "already",
    "know",
    "use",
    "arduino",
    "iot",
    "cloud",
    "already",
    "done",
    "video",
    "video",
    "article",
    "check",
    "bring",
    "speed",
    "right",
    "away",
    "understand",
    "terminology",
    "using",
    "show",
    "wire",
    "let",
    "show",
    "features",
    "watering",
    "system",
    "automated",
    "watering",
    "system",
    "assembled",
    "solderless",
    "breadboard",
    "see",
    "got",
    "oled",
    "display",
    "cycles",
    "number",
    "different",
    "values",
    "temperature",
    "humidity",
    "sensor",
    "relay",
    "drive",
    "pump",
    "course",
    "arduino",
    "nano",
    "33",
    "iot",
    "take",
    "look",
    "control",
    "panel",
    "see",
    "displaying",
    "moisture",
    "also",
    "displaying",
    "moisture",
    "period",
    "time",
    "live",
    "view",
    "go",
    "back",
    "hour",
    "day",
    "week",
    "even",
    "15",
    "days",
    "see",
    "moisture",
    "changed",
    "soil",
    "period",
    "time",
    "got",
    "live",
    "temperature",
    "humidity",
    "display",
    "also",
    "displaying",
    "status",
    "pump",
    "right",
    "green",
    "indicate",
    "pump",
    "got",
    "trigger",
    "level",
    "set",
    "40",
    "adjust",
    "trigger",
    "level",
    "let",
    "bring",
    "20",
    "30",
    "percent",
    "moisture",
    "give",
    "seconds",
    "react",
    "go",
    "pump",
    "status",
    "changed",
    "red",
    "indicating",
    "pump",
    "let",
    "show",
    "wire",
    "project",
    "build",
    "iot",
    "watering",
    "system",
    "using",
    "arduino",
    "nano",
    "33",
    "iot",
    "board",
    "could",
    "probably",
    "also",
    "use",
    "arduino",
    "nano",
    "rp2040",
    "connect",
    "board",
    "pin",
    "pin",
    "compatible",
    "using",
    "capacitive",
    "moisture",
    "sensor",
    "dht22",
    "temperature",
    "humidity",
    "sensor",
    "may",
    "wish",
    "use",
    "dht21",
    "suitable",
    "outdoor",
    "applications",
    "could",
    "also",
    "use",
    "dht11",
    "wish",
    "show",
    "make",
    "changes",
    "code",
    "use",
    "one",
    "sensors",
    "going",
    "using",
    "oled",
    "display",
    "used",
    "constructed",
    "moisture",
    "meter",
    "using",
    "5",
    "volt",
    "relay",
    "module",
    "also",
    "need",
    "pump",
    "need",
    "power",
    "supply",
    "drive",
    "pump",
    "would",
    "strongly",
    "suggest",
    "using",
    "low",
    "voltage",
    "dc",
    "pump",
    "begin",
    "connecting",
    "pin",
    "1",
    "dht",
    "22",
    "nano",
    "volt",
    "output",
    "pin",
    "connect",
    "pin",
    "two",
    "d8t",
    "22",
    "nano",
    "pin",
    "d8",
    "pin",
    "4",
    "dht",
    "22",
    "connected",
    "one",
    "nano",
    "ground",
    "pins",
    "moisture",
    "sensor",
    "output",
    "pin",
    "connected",
    "nano",
    "pin",
    "a0",
    "moisture",
    "sensor",
    "vcc",
    "connected",
    "nano",
    "volt",
    "output",
    "ground",
    "moisture",
    "sensor",
    "connected",
    "one",
    "nano",
    "grounds",
    "oled",
    "ground",
    "also",
    "connected",
    "one",
    "nano",
    "grounds",
    "oled",
    "vcc",
    "go",
    "nano",
    "volt",
    "output",
    "scl",
    "connection",
    "oled",
    "connected",
    "nano",
    "scl",
    "pin",
    "also",
    "address",
    "pin",
    "a5",
    "note",
    "nano",
    "usable",
    "analog",
    "pin",
    "internal",
    "pull",
    "resistor",
    "goes",
    "oled",
    "sda",
    "pin",
    "connected",
    "nano",
    "sda",
    "pin",
    "also",
    "a4",
    "relay",
    "module",
    "g",
    "ground",
    "pin",
    "connected",
    "nano",
    "ground",
    "relay",
    "module",
    "5v",
    "pin",
    "connected",
    "nano",
    "5",
    "volt",
    "output",
    "module",
    "input",
    "pin",
    "connected",
    "nano",
    "pin",
    "d3",
    "also",
    "want",
    "run",
    "power",
    "supply",
    "pump",
    "common",
    "output",
    "relay",
    "relays",
    "normally",
    "open",
    "output",
    "connected",
    "one",
    "side",
    "pump",
    "side",
    "pump",
    "connected",
    "pump",
    "power",
    "supply",
    "completes",
    "wiring",
    "let",
    "go",
    "arduino",
    "iot",
    "cloud",
    "see",
    "build",
    "project",
    "begin",
    "project",
    "arduino",
    "iot",
    "cloud",
    "said",
    "earlier",
    "familiar",
    "iot",
    "cloud",
    "strongly",
    "suggest",
    "check",
    "video",
    "article",
    "using",
    "iot",
    "cloud",
    "get",
    "speed",
    "essentially",
    "building",
    "arduino",
    "iot",
    "cloud",
    "main",
    "thing",
    "building",
    "called",
    "thing",
    "internet",
    "things",
    "thing",
    "building",
    "called",
    "auto",
    "water",
    "thing",
    "three",
    "different",
    "components",
    "variables",
    "device",
    "network",
    "device",
    "arduino",
    "nano",
    "33",
    "iot",
    "board",
    "already",
    "registered",
    "arduino",
    "network",
    "course",
    "network",
    "got",
    "credentials",
    "network",
    "variables",
    "variables",
    "project",
    "actually",
    "five",
    "variables",
    "current",
    "moisture",
    "current",
    "temperature",
    "current",
    "humidity",
    "pump",
    "status",
    "status",
    "pump",
    "whether",
    "trigger",
    "level",
    "level",
    "going",
    "tell",
    "trigger",
    "turn",
    "pump",
    "percentage",
    "moisture",
    "level",
    "show",
    "variables",
    "go",
    "current",
    "moisture",
    "example",
    "see",
    "integer",
    "set",
    "read",
    "go",
    "current",
    "temperature",
    "see",
    "float",
    "also",
    "set",
    "read",
    "sends",
    "values",
    "change",
    "actually",
    "one",
    "thing",
    "current",
    "moisture",
    "go",
    "back",
    "set",
    "set",
    "go",
    "change",
    "means",
    "anytime",
    "moisture",
    "value",
    "changes",
    "send",
    "something",
    "cloud",
    "update",
    "dashboard",
    "since",
    "using",
    "graph",
    "dashboard",
    "keep",
    "let",
    "say",
    "zero",
    "percent",
    "hundred",
    "percent",
    "long",
    "time",
    "graph",
    "wo",
    "change",
    "could",
    "actually",
    "go",
    "variable",
    "wanted",
    "could",
    "edit",
    "instead",
    "change",
    "could",
    "say",
    "periodically",
    "give",
    "time",
    "period",
    "might",
    "good",
    "thing",
    "wanted",
    "graph",
    "constant",
    "something",
    "may",
    "want",
    "change",
    "current",
    "humidity",
    "temperature",
    "floating",
    "variable",
    "read",
    "pump",
    "status",
    "also",
    "read",
    "boolean",
    "trigger",
    "level",
    "bit",
    "different",
    "integer",
    "got",
    "read",
    "write",
    "permissions",
    "using",
    "control",
    "dashboard",
    "order",
    "set",
    "trigger",
    "level",
    "able",
    "read",
    "write",
    "value",
    "go",
    "back",
    "onto",
    "dashboard",
    "see",
    "various",
    "components",
    "moisture",
    "right",
    "sensor",
    "completely",
    "water",
    "dry",
    "20",
    "percent",
    "graph",
    "everything",
    "notice",
    "graph",
    "actually",
    "updated",
    "little",
    "20",
    "percent",
    "long",
    "time",
    "said",
    "made",
    "work",
    "periodically",
    "would",
    "see",
    "graph",
    "update",
    "lot",
    "end",
    "putting",
    "probe",
    "water",
    "changing",
    "moisture",
    "sudden",
    "graph",
    "come",
    "back",
    "life",
    "said",
    "earlier",
    "bit",
    "latency",
    "actually",
    "already",
    "happened",
    "pump",
    "turned",
    "see",
    "right",
    "away",
    "goes",
    "see",
    "right",
    "see",
    "whole",
    "period",
    "time",
    "get",
    "reading",
    "constantly",
    "zero",
    "stay",
    "hundred",
    "take",
    "water",
    "may",
    "want",
    "change",
    "trigger",
    "periodically",
    "instead",
    "change",
    "let",
    "show",
    "done",
    "dashboard",
    "go",
    "edit",
    "mode",
    "go",
    "moisture",
    "go",
    "edit",
    "settings",
    "moisture",
    "got",
    "linked",
    "current",
    "moisture",
    "auto",
    "water",
    "wanted",
    "initially",
    "would",
    "would",
    "go",
    "get",
    "list",
    "things",
    "pick",
    "auto",
    "water",
    "would",
    "give",
    "potential",
    "ones",
    "would",
    "link",
    "notice",
    "example",
    "pump",
    "status",
    "grayed",
    "boolean",
    "wo",
    "work",
    "kind",
    "thing",
    "look",
    "variables",
    "applicable",
    "particular",
    "case",
    "current",
    "moisture",
    "actually",
    "going",
    "change",
    "anything",
    "going",
    "set",
    "done",
    "order",
    "use",
    "graph",
    "graph",
    "simple",
    "exactly",
    "actually",
    "set",
    "link",
    "current",
    "moisture",
    "really",
    "nothing",
    "else",
    "graph",
    "heavy",
    "lifting",
    "speak",
    "done",
    "iot",
    "cloud",
    "make",
    "neat",
    "display",
    "temperature",
    "humidity",
    "imagine",
    "linked",
    "associated",
    "variables",
    "pump",
    "status",
    "linked",
    "uh",
    "pump",
    "status",
    "boolean",
    "got",
    "set",
    "led",
    "call",
    "one",
    "type",
    "control",
    "used",
    "change",
    "use",
    "one",
    "led",
    "two",
    "decided",
    "use",
    "two",
    "leds",
    "green",
    "one",
    "red",
    "one",
    "trigger",
    "level",
    "linked",
    "trigger",
    "level",
    "variable",
    "course",
    "variable",
    "read",
    "write",
    "change",
    "slider",
    "control",
    "change",
    "value",
    "trigger",
    "level",
    "pick",
    "code",
    "let",
    "go",
    "take",
    "look",
    "code",
    "go",
    "iot",
    "cloud",
    "actually",
    "builds",
    "code",
    "sketch",
    "go",
    "open",
    "full",
    "online",
    "editor",
    "built",
    "went",
    "full",
    "online",
    "editor",
    "added",
    "libraries",
    "rest",
    "arduino",
    "ide",
    "link",
    "cloud",
    "well",
    "find",
    "lot",
    "easier",
    "work",
    "got",
    "sorts",
    "different",
    "features",
    "online",
    "editor",
    "sketch",
    "arduino",
    "ide",
    "course",
    "could",
    "build",
    "cloud",
    "well",
    "work",
    "fine",
    "starts",
    "including",
    "arduino",
    "secrets",
    "arduino",
    "secrets",
    "file",
    "included",
    "wo",
    "show",
    "arduino",
    "secrets",
    "file",
    "contains",
    "ssid",
    "password",
    "network",
    "comes",
    "along",
    "package",
    "files",
    "also",
    "another",
    "one",
    "called",
    "thing",
    "properties",
    "comes",
    "along",
    "well",
    "tells",
    "variables",
    "automatically",
    "declared",
    "need",
    "declare",
    "code",
    "ones",
    "declared",
    "cloud",
    "notice",
    "five",
    "variables",
    "libraries",
    "installed",
    "cloud",
    "many",
    "library",
    "files",
    "basically",
    "ones",
    "installed",
    "moisture",
    "sensor",
    "ssd",
    "1306",
    "gfx",
    "libraries",
    "adafruit",
    "added",
    "ones",
    "took",
    "cloud",
    "installed",
    "also",
    "installed",
    "dht",
    "sensor",
    "library",
    "dht22",
    "way",
    "could",
    "also",
    "used",
    "dht21",
    "dht11",
    "install",
    "library",
    "installed",
    "wire",
    "library",
    "i2c",
    "stuff",
    "seen",
    "sketch",
    "moisture",
    "meter",
    "set",
    "oled",
    "size",
    "oled",
    "parameters",
    "set",
    "oled",
    "basically",
    "thing",
    "parameters",
    "dht22",
    "decided",
    "use",
    "let",
    "say",
    "dht21",
    "would",
    "change",
    "dht21",
    "dht11",
    "etc",
    "otherwise",
    "code",
    "dht",
    "pin",
    "pin",
    "8",
    "using",
    "data",
    "input",
    "8",
    "sensor",
    "defined",
    "local",
    "variables",
    "temperature",
    "humidity",
    "might",
    "find",
    "strange",
    "course",
    "cloud",
    "variables",
    "reason",
    "local",
    "variables",
    "first",
    "start",
    "actually",
    "connected",
    "cloud",
    "quite",
    "sure",
    "exactly",
    "going",
    "happen",
    "want",
    "local",
    "variables",
    "work",
    "even",
    "internet",
    "connection",
    "want",
    "completely",
    "dependent",
    "cloud",
    "local",
    "thing",
    "work",
    "controlling",
    "pump",
    "water",
    "want",
    "controlled",
    "situation",
    "constants",
    "seen",
    "dry",
    "wet",
    "value",
    "probe",
    "moisture",
    "sensor",
    "course",
    "need",
    "determine",
    "experimentally",
    "values",
    "could",
    "quite",
    "well",
    "different",
    "mine",
    "seen",
    "identical",
    "soil",
    "moisture",
    "meter",
    "get",
    "moisture",
    "value",
    "value",
    "coming",
    "converter",
    "moisture",
    "percent",
    "converted",
    "version",
    "uh",
    "sensor",
    "input",
    "analog",
    "pin",
    "a0",
    "got",
    "relay",
    "port",
    "defined",
    "pin",
    "pump",
    "status",
    "text",
    "going",
    "print",
    "pump",
    "status",
    "either",
    "defined",
    "variable",
    "string",
    "variable",
    "given",
    "initialization",
    "value",
    "also",
    "given",
    "trigger",
    "value",
    "course",
    "got",
    "trigger",
    "iot",
    "cloud",
    "want",
    "local",
    "trigger",
    "set",
    "30",
    "thought",
    "reasonable",
    "trigger",
    "point",
    "water",
    "could",
    "change",
    "value",
    "like",
    "basically",
    "starts",
    "connect",
    "cloud",
    "see",
    "trigger",
    "set",
    "going",
    "use",
    "value",
    "inserted",
    "arduino",
    "iot",
    "cloud",
    "one",
    "many",
    "things",
    "inserts",
    "includes",
    "another",
    "file",
    "called",
    "thin",
    "properties",
    "file",
    "thing",
    "properties",
    "generated",
    "cloud",
    "includes",
    "different",
    "uh",
    "variables",
    "using",
    "defines",
    "uh",
    "init",
    "properties",
    "uh",
    "initialize",
    "different",
    "uh",
    "different",
    "properties",
    "tells",
    "current",
    "temperatures",
    "read",
    "chain",
    "default",
    "value",
    "null",
    "etc",
    "uh",
    "go",
    "setup",
    "set",
    "added",
    "iot",
    "cloud",
    "sets",
    "serial",
    "monitor",
    "notice",
    "gives",
    "rather",
    "long",
    "delay",
    "second",
    "half",
    "afterwards",
    "going",
    "take",
    "couple",
    "seconds",
    "everything",
    "establish",
    "part",
    "delay",
    "saw",
    "knit",
    "properties",
    "thing",
    "properties",
    "file",
    "connects",
    "arduino",
    "iot",
    "cloud",
    "added",
    "automatically",
    "generated",
    "initial",
    "sketch",
    "cloud",
    "debug",
    "level",
    "thing",
    "change",
    "debug",
    "level",
    "wish",
    "set",
    "way",
    "four",
    "want",
    "get",
    "kinds",
    "information",
    "problems",
    "saw",
    "initialize",
    "oled",
    "display",
    "using",
    "volts",
    "initialize",
    "dht",
    "22",
    "work",
    "also",
    "dht",
    "21",
    "11",
    "begin",
    "set",
    "analog",
    "digital",
    "converter",
    "use",
    "12",
    "bits",
    "seen",
    "set",
    "relay",
    "output",
    "turn",
    "relay",
    "initially",
    "want",
    "start",
    "always",
    "pump",
    "even",
    "soil",
    "bone",
    "dry",
    "wait",
    "second",
    "establish",
    "want",
    "start",
    "running",
    "pump",
    "set",
    "pump",
    "status",
    "cloud",
    "variable",
    "false",
    "set",
    "pump",
    "go",
    "loop",
    "first",
    "thing",
    "loop",
    "something",
    "cloud",
    "added",
    "arduino",
    "cloud",
    "update",
    "function",
    "update",
    "cloud",
    "local",
    "machine",
    "arduino",
    "nano",
    "33",
    "iot",
    "going",
    "get",
    "temperature",
    "humidity",
    "dht",
    "assign",
    "local",
    "variables",
    "pass",
    "values",
    "cloud",
    "variables",
    "got",
    "local",
    "cloud",
    "variable",
    "value",
    "going",
    "go",
    "get",
    "moisture",
    "value",
    "determine",
    "percentage",
    "keep",
    "values",
    "0",
    "100",
    "exactly",
    "way",
    "soil",
    "moisture",
    "meter",
    "print",
    "serial",
    "port",
    "use",
    "need",
    "calibrate",
    "soil",
    "moisture",
    "sensors",
    "pass",
    "equivalent",
    "cloud",
    "value",
    "current",
    "moisture",
    "value",
    "cloud",
    "variable",
    "gets",
    "value",
    "go",
    "see",
    "pump",
    "needs",
    "triggered",
    "basically",
    "soil",
    "moisture",
    "percent",
    "lower",
    "value",
    "pump",
    "trigger",
    "going",
    "turn",
    "pump",
    "otherwise",
    "going",
    "turn",
    "pump",
    "pump",
    "pump",
    "two",
    "functions",
    "show",
    "moment",
    "go",
    "cycle",
    "values",
    "oled",
    "display",
    "got",
    "couple",
    "functions",
    "called",
    "print",
    "oled",
    "pass",
    "number",
    "parameters",
    "actually",
    "even",
    "see",
    "parameters",
    "thanks",
    "arduino",
    "iot",
    "cloud",
    "um",
    "basically",
    "pumping",
    "position",
    "value",
    "top",
    "text",
    "position",
    "value",
    "bottom",
    "text",
    "delay",
    "period",
    "long",
    "want",
    "let",
    "go",
    "take",
    "look",
    "functions",
    "end",
    "loop",
    "pump",
    "pump",
    "pretty",
    "simple",
    "pump",
    "digital",
    "write",
    "relay",
    "write",
    "high",
    "turn",
    "change",
    "status",
    "text",
    "change",
    "pump",
    "status",
    "cloud",
    "variable",
    "true",
    "pump",
    "exactly",
    "opposite",
    "thing",
    "print",
    "oled",
    "seen",
    "different",
    "parameters",
    "put",
    "input",
    "basically",
    "saw",
    "built",
    "soil",
    "moisture",
    "meter",
    "instead",
    "using",
    "fixed",
    "values",
    "using",
    "variables",
    "pump",
    "set",
    "top",
    "cursor",
    "text",
    "size",
    "2",
    "set",
    "position",
    "whatever",
    "value",
    "first",
    "line",
    "line",
    "zero",
    "print",
    "top",
    "text",
    "set",
    "main",
    "cursor",
    "line",
    "40",
    "whatever",
    "position",
    "main",
    "cursor",
    "set",
    "text",
    "ties",
    "text",
    "size",
    "three",
    "print",
    "main",
    "text",
    "end",
    "display",
    "delay",
    "delay",
    "time",
    "clear",
    "display",
    "saves",
    "write",
    "four",
    "times",
    "finally",
    "trigger",
    "level",
    "change",
    "something",
    "cloud",
    "added",
    "every",
    "time",
    "change",
    "trigger",
    "variable",
    "function",
    "activated",
    "move",
    "slider",
    "activate",
    "function",
    "function",
    "taking",
    "trigger",
    "level",
    "variable",
    "setting",
    "local",
    "pump",
    "trigger",
    "value",
    "trigger",
    "level",
    "variable",
    "basically",
    "sketch",
    "may",
    "look",
    "little",
    "overwhelming",
    "first",
    "actually",
    "break",
    "quite",
    "simple",
    "set",
    "cloud",
    "control",
    "panel",
    "set",
    "go",
    "order",
    "demo",
    "found",
    "little",
    "bit",
    "awkward",
    "workshop",
    "actually",
    "use",
    "soil",
    "pump",
    "used",
    "different",
    "method",
    "wanted",
    "show",
    "kind",
    "pump",
    "could",
    "use",
    "system",
    "like",
    "tiny",
    "pump",
    "would",
    "perfect",
    "pump",
    "actually",
    "submersible",
    "runs",
    "four",
    "half",
    "12",
    "volts",
    "dc",
    "actually",
    "pumps",
    "surprising",
    "amount",
    "water",
    "one",
    "reasons",
    "refrain",
    "workbench",
    "want",
    "surprising",
    "amount",
    "water",
    "workbench",
    "fairly",
    "inexpensive",
    "unit",
    "typical",
    "kind",
    "thing",
    "would",
    "work",
    "perfectly",
    "application",
    "instead",
    "done",
    "wired",
    "relay",
    "lamp",
    "lamp",
    "come",
    "lieu",
    "pump",
    "instead",
    "soil",
    "got",
    "cup",
    "water",
    "course",
    "immerse",
    "cup",
    "water",
    "going",
    "go",
    "100",
    "percent",
    "moisture",
    "100",
    "moisture",
    "obviously",
    "going",
    "trigger",
    "pump",
    "take",
    "look",
    "display",
    "yes",
    "hundred",
    "percent",
    "right",
    "display",
    "uh",
    "control",
    "panel",
    "take",
    "wipe",
    "completely",
    "dry",
    "course",
    "zero",
    "percent",
    "moisture",
    "light",
    "come",
    "right",
    "indicate",
    "pump",
    "would",
    "normally",
    "coming",
    "says",
    "pump",
    "display",
    "um",
    "display",
    "also",
    "dropped",
    "zero",
    "percent",
    "control",
    "panel",
    "see",
    "pump",
    "simulate",
    "levels",
    "zero",
    "hundred",
    "dip",
    "water",
    "take",
    "leave",
    "little",
    "bit",
    "water",
    "sitting",
    "probe",
    "tends",
    "tends",
    "make",
    "moisture",
    "somewhere",
    "like",
    "right",
    "saying",
    "16",
    "percent",
    "allows",
    "simulate",
    "everything",
    "without",
    "use",
    "actual",
    "soil",
    "already",
    "seen",
    "control",
    "panel",
    "seen",
    "works",
    "seems",
    "work",
    "pretty",
    "well",
    "one",
    "thing",
    "noticed",
    "latency",
    "things",
    "happen",
    "like",
    "example",
    "right",
    "pump",
    "turned",
    "moisture",
    "actually",
    "gone",
    "21",
    "took",
    "moment",
    "display",
    "register",
    "seems",
    "pretty",
    "typical",
    "think",
    "time",
    "takes",
    "everything",
    "travel",
    "internet",
    "go",
    "register",
    "arduino",
    "cloud",
    "come",
    "back",
    "microcontroller",
    "also",
    "first",
    "turn",
    "almost",
    "delay",
    "two",
    "minutes",
    "starts",
    "collect",
    "data",
    "one",
    "reasons",
    "put",
    "constants",
    "things",
    "like",
    "pump",
    "trigger",
    "level",
    "want",
    "sitting",
    "without",
    "values",
    "first",
    "powered",
    "otherwise",
    "actually",
    "pretty",
    "effective",
    "system",
    "running",
    "days",
    "seems",
    "work",
    "pretty",
    "well",
    "think",
    "something",
    "either",
    "variation",
    "would",
    "work",
    "well",
    "watering",
    "garden",
    "automatically",
    "using",
    "internet",
    "things",
    "brings",
    "us",
    "end",
    "video",
    "hope",
    "enjoyed",
    "want",
    "assure",
    "plants",
    "harmed",
    "making",
    "video",
    "curious",
    "ability",
    "kill",
    "plastic",
    "plants",
    "say",
    "defense",
    "really",
    "print",
    "warnings",
    "things",
    "say",
    "dishwasher",
    "safe",
    "horticultural",
    "inabilities",
    "aside",
    "like",
    "learn",
    "soil",
    "moisture",
    "sensors",
    "get",
    "code",
    "need",
    "order",
    "build",
    "projects",
    "showed",
    "today",
    "find",
    "article",
    "accompanying",
    "video",
    "website",
    "link",
    "article",
    "right",
    "video",
    "website",
    "please",
    "consider",
    "signing",
    "newsletter",
    "spam",
    "letter",
    "certainly",
    "gardening",
    "advice",
    "letter",
    "way",
    "keeping",
    "touch",
    "let",
    "know",
    "happening",
    "workshop",
    "free",
    "join",
    "need",
    "email",
    "address",
    "want",
    "discuss",
    "soil",
    "moisture",
    "sensors",
    "want",
    "brag",
    "gardening",
    "abilities",
    "head",
    "dronebot",
    "workshop",
    "forums",
    "find",
    "bunch",
    "individuals",
    "love",
    "discuss",
    "technology",
    "sorts",
    "things",
    "forum",
    "course",
    "free",
    "join",
    "course",
    "yet",
    "please",
    "subscribe",
    "youtube",
    "channel",
    "make",
    "videos",
    "technology",
    "microcontrollers",
    "things",
    "gardening",
    "need",
    "click",
    "red",
    "subscribe",
    "button",
    "also",
    "hit",
    "bell",
    "notification",
    "long",
    "enabled",
    "notifications",
    "youtube",
    "get",
    "notified",
    "every",
    "time",
    "make",
    "new",
    "video",
    "next",
    "time",
    "please",
    "stay",
    "safe",
    "please",
    "take",
    "good",
    "care",
    "see",
    "soon",
    "dronebot",
    "workshop",
    "goodbye",
    "music"
  ],
  "keywords": [
    "today",
    "workshop",
    "using",
    "soil",
    "moisture",
    "sensors",
    "work",
    "calibrate",
    "use",
    "also",
    "build",
    "meter",
    "watering",
    "system",
    "control",
    "arduino",
    "iot",
    "cloud",
    "something",
    "well",
    "ground",
    "amount",
    "water",
    "going",
    "couple",
    "first",
    "project",
    "oled",
    "display",
    "second",
    "pretty",
    "go",
    "bit",
    "give",
    "one",
    "gardening",
    "make",
    "look",
    "color",
    "red",
    "even",
    "kind",
    "however",
    "let",
    "right",
    "time",
    "properties",
    "sensor",
    "power",
    "resistance",
    "capacitance",
    "used",
    "capacitive",
    "analog",
    "output",
    "change",
    "digital",
    "set",
    "point",
    "serial",
    "i2c",
    "device",
    "video",
    "connected",
    "input",
    "microcontroller",
    "connect",
    "pump",
    "resistive",
    "simple",
    "quite",
    "happen",
    "see",
    "take",
    "experiments",
    "two",
    "actually",
    "course",
    "different",
    "ones",
    "called",
    "catnip",
    "electronics",
    "little",
    "temperature",
    "light",
    "thing",
    "got",
    "sda",
    "scl",
    "another",
    "put",
    "need",
    "get",
    "find",
    "exactly",
    "completely",
    "dry",
    "wet",
    "sketch",
    "raspberry",
    "pi",
    "pico",
    "12",
    "converter",
    "reading",
    "ide",
    "size",
    "show",
    "already",
    "know",
    "want",
    "calibration",
    "uno",
    "basically",
    "resolution",
    "could",
    "code",
    "identical",
    "start",
    "pin",
    "volt",
    "vcc",
    "0",
    "wiring",
    "value",
    "monitor",
    "loop",
    "read",
    "print",
    "delay",
    "around",
    "zero",
    "percent",
    "values",
    "notice",
    "order",
    "like",
    "way",
    "supply",
    "line",
    "level",
    "long",
    "library",
    "wire",
    "begin",
    "connection",
    "example",
    "done",
    "would",
    "installed",
    "file",
    "libraries",
    "address",
    "really",
    "uh",
    "seen",
    "percentage",
    "back",
    "drive",
    "parameters",
    "variables",
    "might",
    "initialize",
    "function",
    "100",
    "hundred",
    "goes",
    "things",
    "cursor",
    "text",
    "top",
    "may",
    "end",
    "everything",
    "wanted",
    "turn",
    "nano",
    "33",
    "humidity",
    "relay",
    "panel",
    "period",
    "status",
    "trigger",
    "dht",
    "network",
    "current",
    "dashboard",
    "graph",
    "say",
    "variable",
    "instead",
    "write",
    "added",
    "local"
  ]
}