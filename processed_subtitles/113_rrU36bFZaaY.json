{
  "text": "[Music]\nforeign\nand welcome to today's video on python\nlibraries related to data science I have\na question for you dear friends and the\nquestion is are you a data science\nEnthusiast and a part of a python\necosystem are you wondering about the\ndifferent python libraries to improve\nyour efficiency how are they roughly\ndifferentiated into various sub domains\nand you don't want to miss out any of\nthe important python libraries then you\nhave reached the right place now before\nwe dig deep more about into learning\npython libraries for data science do not\nforget to hit the Subscribe button and\nclick the Bell icon so first we are\ngoing to start with python and its\nfeature then we are going to discuss\nabout applications of python moving\nahead we are going to discuss about\nlibraries related to data mining then we\nare going to discuss library is related\nto data processing analysis and modeling\nand at the end we are going to conclude\nour session with libraries related to\ndata visualization\nso let's start with python and its\nfeatures python is a most used\nprogramming language in data science\npython has many advantages over other\nprogramming languages like it is easy to\ndebug it is object oriented it has high\nnumber of active developers it is open\nsource and when it comes to data\nanalysis and data visualization python\nlibraries sit way ahead of many other\nlanguages\nnow let's discuss the applications of\npython python provides a number of\nuseful libraries and these libraries\nhelp in numerical analysis statistical\nanalysis data modeling data\nvisualization and whatnot\nthese libraries assist in various\ndomains like data mining data processing\nanalysis and modeling and data\nvisualization\nnow we will look into some of the most\nimportant libraries and the first\nprocess is the data mining now if I want\nto discuss about the libraries related\nto data mining the first process in data\nscience is getting the data from the\nvarious sources onto the system\nso that is data mining so first we look\nat the libraries that is used in Data\nMining and the first one is Scrappy\nScrappy is an open source Library which\nis used for data scrapping it is used\nfor developing crawling programs to\nextract the structured data from the web\nit can also be used to extract you know\ndata through apis\nI hope so it's clear to you what's the\nuse case of Scrappy in data mining\nthe next Library we have is Beautiful\nsoap Beautiful soap is another python\nLibrary which is used for data scrapping\nand extraction\nthe library gets its name that poorly\nmarked up web pages are often called tag\nsoup therefore the library is known as\nthe Beautiful Soul\nit is far more flexible than any other\nscrapping library in Python\nthe data scrapped through Beautiful soap\ncan be arranged into various formats and\nnot into only CSV\nnow after the data is collected we\nprocess the data for analyzing and\nmodeling purposes so the first Library\nwhich we are going to discuss is the\nnumpy\nif I talk about numpy numpy stands for\nnumerical python as the name suggests it\nhelps in analyzing the numerical data it\ncontains an array package this contains\na multi-dimensional and extremely\npowerful array object\nnumpy also provides various functions\nand operations that can be performed on\nthe numpy arrays like add remove reshape\nindexing Etc\nnumpy forms a base for other or more\ncomplex libraries like pandas scipy and\nscikit-learn the next library is pandas\nif I talk about pandas pandas is an open\nsource library that is made mainly for\nworking with relational or labeled data\nor both easily and intuitively\nit provides various data structures and\noperations for manipulating the\nnumerical data and the time series data\nthis library is built on the top of the\nnumpy library\npandas is fast and it has high\nperformance and productivity for users\nif I talk about the advantages of using\npandas are the first one it is fast and\nefficient for manipulating and analyzing\nthe data data from different file or\nobjects can be easily loaded\nthere is a easy handling of the missing\ndata which is represented as NAB and\nfloating Point as well as non floating\nPoint data then the factor comes up is\nthe size mutability columns can be\ninserted and deleted from the data frame\nand they are also higher dimensional\nobjects\ndata set merging and joining is also\npresent\nit provides time series functionality\nand finally it is a powerful Group by\nfunctionality for performing split apply\ncombine operations on data sets\nnow many of you would be wondering why\npandas should be used for data science\npandas are generally used for data\nscience\nthis is because pandas are used in\nconjunction with other libraries that\nare also used for data science it is\nactually built on the top of the numpy\nlibrary which means that lot of\nstructures of numpy are used or\nreplicated in pandas the data produced\nby pandas are often used as input for\nplotting functions of matplotlib\nstatistical analysis in scipy and\nmachine learning algorithms in the\nscikit-learn pandas program can be run\nfrom any text editor but it is\nrecommended to use Jupiter notebook for\nthis as a Jupiter given the ability to\nexecute code in particular cell rather\nthan executing the entire file if I talk\nabout the Jupiter Jupiter also provides\nan easy way to visualize pandas data\nframes and plot\nI hope so now you would have got answer\nthat why pandas is used for data science\nwith that let's move to the next Library\nour next library is tensorflow\nif I talk about tensorflow tensorflow is\nalso an open source Library\nwhich was created by the Google brains\nteam at Google\nfor their internal research\nnow tensorflow is also a python friendly\nopen source Library which is generally\nused for numerical computation that\nmakes machine learning and developing\nneural networks faster and easier\nmachine learning is actually a complex\ndiscipline but implementing machine\nlearning models is far less daunting\nthan it is used to be and thanks to the\nframework such as tensorflow\ntensorflow can train and Run Deep neural\nnetworks for handwritten digit\nclassification image recognition the\nword embeddings recurrent neural\nnetworks sequence to sequence model for\nmachine translation and natural language\nprocessing\nit is also based on simulations best of\nall tensorflow supports production\nprediction at scale with the same models\nwhich are used for training it also has\na broad library of pre-tained models\nthat can be used in your own projects\nbut the question is seeing this picture\nyou would be wondering how does the\ntensorflow works tensorflow allows\ndevelopers to create data flow graphs\nwhich are structures that describes how\ndata moves through a graph or a series\nof processing nodes\neach node in the graph represent a\nmathematical operation\nand each connection or Edge between the\nnodes is a multi-dimensional data array\nor a tensor\ntensorflow applications can be run on\nmost of the any Targets that is\nconvenient which is a local machine a\ncluster in a cloud an iOS device or the\nAndroid devices the CPUs or gpus\nif you use Google's own cloud you can\nrun tensorflow on Google's custom\ntensorflow Processing Unit which is the\nTPU\nI hope so you would have got idea about\ntensorflow now let's move to the next\nLibrary which is kiras\nif I talk about kiras kiras was also\ndeveloped by Google\nit also runs on the top of tensorflow it\nacts as an interface for tensorflow\nLibrary\nis built for fast and hassle-free\nexperimentation on the neural networks\nit provides a good option so if you\ndon't want to Deep dive into tensorflow\nthen you can use kiras for your projects\nnow let's discuss the next Library which\nis pi torch\nif I talk about Pi torch it is also an\nopen source Library which is developed\nby Facebook for developing and testing\nmachine learning modules\npie torch expertise lies more in deep\nneural networks tensorflow and pytorch\nare the major competitors of each other\nwhenever you use deep learning\nTechnologies like object recognition\ntext recognition face recognition or\nchatbots there is a high possibility\nthat the architecture was developed by\neither pytorch or tensorflow\nnow let's move forward and discuss our\nnext Library which is scipy\nscipy stands for Scientific Python it is\nused for complex scientific computations\nit is built on the numpy library it is\nextensively used for scientific and\nTechnical operations like calculus\nlinear algebra differential equation\nintegration and statistical computation\nI hope so you would have got idea\nregarding the use cases for scipy\nnow let's discuss our next Library which\nis related to data processing analysis\nand modeling and our final library is\nthe scikit-learn\nscikit-learn is actually built on the\ntop of many familiar libraries like\nnumpy pandas and scipy it mainly focuses\non data modeling scikit-learn is used to\ncreate models for predictive data\nanalysis I hope so you would have got\nidea regarding the use cases for the\nscikit-learn\nso after the data is processed and\nmodeled it is time to visualize the data\nto get the important insights out of it\ntherefore now we will see the libraries\nrelated to data visualization and our\nfirst library is the matplotlib\nif I talk about matplotlip it is used\nfor data visualization in Python it\nprovides all the necessary graphs and\ncharts for univariate and multivariate\nAnalysis it is used to create industry\nstandard and publication standard plots\nmatplotlib contains an object-oriented\nAPI that can be used to integrate plots\nand charts into applications\nI hope so you would have got idea\nregarding the matplotlip now let's move\nforward and discuss our next Library\nwhich is C bone\nif I talk about C bone it is built on\nthe top of the matplotlib library as it\nis built on the top of matplotlib it has\nhigher interface level and provides\ncleaner plots than matplotlib for\nvisualization\nit contains set of different built-in\nthemes it provides extensive plots like\nheat Maps pair plots that are used for\nmultivariate analysis I hope so you\nwould have got idea regarding c bond\nnow let's move forward and discuss our\nfinal library for data visualization\nwhich is bokeh bogey is fully\nindependent of matplotlib bokeh is used\nto create interactive plots in the\nbrowser using JavaScript widgets like C1\nbokeh to assist us in creating complex\nvisualization but at majorly focus on\ninteractiveness its interactive\nfunctionalities help in creating complex\nvisualization like dashboards Network\ngraph Etc\nnow after all discussing the libraries\nrelated to data visualization analysis\nand modeling and also for numerical\ncomputation\nI have come to certain conclusion that\nthere are thousands to lack of python\nlibraries available in the ecosystem\ntoday and the list only covers the most\npopular and the most know libraries also\nwe covered the most important libraries\nfrom all domains to give you a brief\nidea about the areas of your interest\nthese are the libraries which are used\nby professional to work on the\nday-to-day basis you got a good\nunderstanding of how these libraries\nfunction with each other and also how\nmore complex libraries are built upon\nthe core ones there are many more\ncomplex libraries that you can read\nabout\nsky is a limit of knowledge and you can\nlearn more and more as far as your\ninterest\nthat's all for today's video I hope so\nguys you enjoyed our today's video on\npython libraries for data science\nif you want to make a career in data\nscience then intellipat has IIT Madras\nadvice data science and AI certification\nprogram\nthis course is of very high quality and\ncost effective as it is taught by IIT\nprofessors and Industry experts\nforeign\n",
  "words": [
    "music",
    "foreign",
    "welcome",
    "today",
    "video",
    "python",
    "libraries",
    "related",
    "data",
    "science",
    "question",
    "dear",
    "friends",
    "question",
    "data",
    "science",
    "enthusiast",
    "part",
    "python",
    "ecosystem",
    "wondering",
    "different",
    "python",
    "libraries",
    "improve",
    "efficiency",
    "roughly",
    "differentiated",
    "various",
    "sub",
    "domains",
    "want",
    "miss",
    "important",
    "python",
    "libraries",
    "reached",
    "right",
    "place",
    "dig",
    "deep",
    "learning",
    "python",
    "libraries",
    "data",
    "science",
    "forget",
    "hit",
    "subscribe",
    "button",
    "click",
    "bell",
    "icon",
    "first",
    "going",
    "start",
    "python",
    "feature",
    "going",
    "discuss",
    "applications",
    "python",
    "moving",
    "ahead",
    "going",
    "discuss",
    "libraries",
    "related",
    "data",
    "mining",
    "going",
    "discuss",
    "library",
    "related",
    "data",
    "processing",
    "analysis",
    "modeling",
    "end",
    "going",
    "conclude",
    "session",
    "libraries",
    "related",
    "data",
    "visualization",
    "let",
    "start",
    "python",
    "features",
    "python",
    "used",
    "programming",
    "language",
    "data",
    "science",
    "python",
    "many",
    "advantages",
    "programming",
    "languages",
    "like",
    "easy",
    "debug",
    "object",
    "oriented",
    "high",
    "number",
    "active",
    "developers",
    "open",
    "source",
    "comes",
    "data",
    "analysis",
    "data",
    "visualization",
    "python",
    "libraries",
    "sit",
    "way",
    "ahead",
    "many",
    "languages",
    "let",
    "discuss",
    "applications",
    "python",
    "python",
    "provides",
    "number",
    "useful",
    "libraries",
    "libraries",
    "help",
    "numerical",
    "analysis",
    "statistical",
    "analysis",
    "data",
    "modeling",
    "data",
    "visualization",
    "whatnot",
    "libraries",
    "assist",
    "various",
    "domains",
    "like",
    "data",
    "mining",
    "data",
    "processing",
    "analysis",
    "modeling",
    "data",
    "visualization",
    "look",
    "important",
    "libraries",
    "first",
    "process",
    "data",
    "mining",
    "want",
    "discuss",
    "libraries",
    "related",
    "data",
    "mining",
    "first",
    "process",
    "data",
    "science",
    "getting",
    "data",
    "various",
    "sources",
    "onto",
    "system",
    "data",
    "mining",
    "first",
    "look",
    "libraries",
    "used",
    "data",
    "mining",
    "first",
    "one",
    "scrappy",
    "scrappy",
    "open",
    "source",
    "library",
    "used",
    "data",
    "scrapping",
    "used",
    "developing",
    "crawling",
    "programs",
    "extract",
    "structured",
    "data",
    "web",
    "also",
    "used",
    "extract",
    "know",
    "data",
    "apis",
    "hope",
    "clear",
    "use",
    "case",
    "scrappy",
    "data",
    "mining",
    "next",
    "library",
    "beautiful",
    "soap",
    "beautiful",
    "soap",
    "another",
    "python",
    "library",
    "used",
    "data",
    "scrapping",
    "extraction",
    "library",
    "gets",
    "name",
    "poorly",
    "marked",
    "web",
    "pages",
    "often",
    "called",
    "tag",
    "soup",
    "therefore",
    "library",
    "known",
    "beautiful",
    "soul",
    "far",
    "flexible",
    "scrapping",
    "library",
    "python",
    "data",
    "scrapped",
    "beautiful",
    "soap",
    "arranged",
    "various",
    "formats",
    "csv",
    "data",
    "collected",
    "process",
    "data",
    "analyzing",
    "modeling",
    "purposes",
    "first",
    "library",
    "going",
    "discuss",
    "numpy",
    "talk",
    "numpy",
    "numpy",
    "stands",
    "numerical",
    "python",
    "name",
    "suggests",
    "helps",
    "analyzing",
    "numerical",
    "data",
    "contains",
    "array",
    "package",
    "contains",
    "extremely",
    "powerful",
    "array",
    "object",
    "numpy",
    "also",
    "provides",
    "various",
    "functions",
    "operations",
    "performed",
    "numpy",
    "arrays",
    "like",
    "add",
    "remove",
    "reshape",
    "indexing",
    "etc",
    "numpy",
    "forms",
    "base",
    "complex",
    "libraries",
    "like",
    "pandas",
    "scipy",
    "next",
    "library",
    "pandas",
    "talk",
    "pandas",
    "pandas",
    "open",
    "source",
    "library",
    "made",
    "mainly",
    "working",
    "relational",
    "labeled",
    "data",
    "easily",
    "intuitively",
    "provides",
    "various",
    "data",
    "structures",
    "operations",
    "manipulating",
    "numerical",
    "data",
    "time",
    "series",
    "data",
    "library",
    "built",
    "top",
    "numpy",
    "library",
    "pandas",
    "fast",
    "high",
    "performance",
    "productivity",
    "users",
    "talk",
    "advantages",
    "using",
    "pandas",
    "first",
    "one",
    "fast",
    "efficient",
    "manipulating",
    "analyzing",
    "data",
    "data",
    "different",
    "file",
    "objects",
    "easily",
    "loaded",
    "easy",
    "handling",
    "missing",
    "data",
    "represented",
    "nab",
    "floating",
    "point",
    "well",
    "non",
    "floating",
    "point",
    "data",
    "factor",
    "comes",
    "size",
    "mutability",
    "columns",
    "inserted",
    "deleted",
    "data",
    "frame",
    "also",
    "higher",
    "dimensional",
    "objects",
    "data",
    "set",
    "merging",
    "joining",
    "also",
    "present",
    "provides",
    "time",
    "series",
    "functionality",
    "finally",
    "powerful",
    "group",
    "functionality",
    "performing",
    "split",
    "apply",
    "combine",
    "operations",
    "data",
    "sets",
    "many",
    "would",
    "wondering",
    "pandas",
    "used",
    "data",
    "science",
    "pandas",
    "generally",
    "used",
    "data",
    "science",
    "pandas",
    "used",
    "conjunction",
    "libraries",
    "also",
    "used",
    "data",
    "science",
    "actually",
    "built",
    "top",
    "numpy",
    "library",
    "means",
    "lot",
    "structures",
    "numpy",
    "used",
    "replicated",
    "pandas",
    "data",
    "produced",
    "pandas",
    "often",
    "used",
    "input",
    "plotting",
    "functions",
    "matplotlib",
    "statistical",
    "analysis",
    "scipy",
    "machine",
    "learning",
    "algorithms",
    "pandas",
    "program",
    "run",
    "text",
    "editor",
    "recommended",
    "use",
    "jupiter",
    "notebook",
    "jupiter",
    "given",
    "ability",
    "execute",
    "code",
    "particular",
    "cell",
    "rather",
    "executing",
    "entire",
    "file",
    "talk",
    "jupiter",
    "jupiter",
    "also",
    "provides",
    "easy",
    "way",
    "visualize",
    "pandas",
    "data",
    "frames",
    "plot",
    "hope",
    "would",
    "got",
    "answer",
    "pandas",
    "used",
    "data",
    "science",
    "let",
    "move",
    "next",
    "library",
    "next",
    "library",
    "tensorflow",
    "talk",
    "tensorflow",
    "tensorflow",
    "also",
    "open",
    "source",
    "library",
    "created",
    "google",
    "brains",
    "team",
    "google",
    "internal",
    "research",
    "tensorflow",
    "also",
    "python",
    "friendly",
    "open",
    "source",
    "library",
    "generally",
    "used",
    "numerical",
    "computation",
    "makes",
    "machine",
    "learning",
    "developing",
    "neural",
    "networks",
    "faster",
    "easier",
    "machine",
    "learning",
    "actually",
    "complex",
    "discipline",
    "implementing",
    "machine",
    "learning",
    "models",
    "far",
    "less",
    "daunting",
    "used",
    "thanks",
    "framework",
    "tensorflow",
    "tensorflow",
    "train",
    "run",
    "deep",
    "neural",
    "networks",
    "handwritten",
    "digit",
    "classification",
    "image",
    "recognition",
    "word",
    "embeddings",
    "recurrent",
    "neural",
    "networks",
    "sequence",
    "sequence",
    "model",
    "machine",
    "translation",
    "natural",
    "language",
    "processing",
    "also",
    "based",
    "simulations",
    "best",
    "tensorflow",
    "supports",
    "production",
    "prediction",
    "scale",
    "models",
    "used",
    "training",
    "also",
    "broad",
    "library",
    "models",
    "used",
    "projects",
    "question",
    "seeing",
    "picture",
    "would",
    "wondering",
    "tensorflow",
    "works",
    "tensorflow",
    "allows",
    "developers",
    "create",
    "data",
    "flow",
    "graphs",
    "structures",
    "describes",
    "data",
    "moves",
    "graph",
    "series",
    "processing",
    "nodes",
    "node",
    "graph",
    "represent",
    "mathematical",
    "operation",
    "connection",
    "edge",
    "nodes",
    "data",
    "array",
    "tensor",
    "tensorflow",
    "applications",
    "run",
    "targets",
    "convenient",
    "local",
    "machine",
    "cluster",
    "cloud",
    "ios",
    "device",
    "android",
    "devices",
    "cpus",
    "gpus",
    "use",
    "google",
    "cloud",
    "run",
    "tensorflow",
    "google",
    "custom",
    "tensorflow",
    "processing",
    "unit",
    "tpu",
    "hope",
    "would",
    "got",
    "idea",
    "tensorflow",
    "let",
    "move",
    "next",
    "library",
    "kiras",
    "talk",
    "kiras",
    "kiras",
    "also",
    "developed",
    "google",
    "also",
    "runs",
    "top",
    "tensorflow",
    "acts",
    "interface",
    "tensorflow",
    "library",
    "built",
    "fast",
    "experimentation",
    "neural",
    "networks",
    "provides",
    "good",
    "option",
    "want",
    "deep",
    "dive",
    "tensorflow",
    "use",
    "kiras",
    "projects",
    "let",
    "discuss",
    "next",
    "library",
    "pi",
    "torch",
    "talk",
    "pi",
    "torch",
    "also",
    "open",
    "source",
    "library",
    "developed",
    "facebook",
    "developing",
    "testing",
    "machine",
    "learning",
    "modules",
    "pie",
    "torch",
    "expertise",
    "lies",
    "deep",
    "neural",
    "networks",
    "tensorflow",
    "pytorch",
    "major",
    "competitors",
    "whenever",
    "use",
    "deep",
    "learning",
    "technologies",
    "like",
    "object",
    "recognition",
    "text",
    "recognition",
    "face",
    "recognition",
    "chatbots",
    "high",
    "possibility",
    "architecture",
    "developed",
    "either",
    "pytorch",
    "tensorflow",
    "let",
    "move",
    "forward",
    "discuss",
    "next",
    "library",
    "scipy",
    "scipy",
    "stands",
    "scientific",
    "python",
    "used",
    "complex",
    "scientific",
    "computations",
    "built",
    "numpy",
    "library",
    "extensively",
    "used",
    "scientific",
    "technical",
    "operations",
    "like",
    "calculus",
    "linear",
    "algebra",
    "differential",
    "equation",
    "integration",
    "statistical",
    "computation",
    "hope",
    "would",
    "got",
    "idea",
    "regarding",
    "use",
    "cases",
    "scipy",
    "let",
    "discuss",
    "next",
    "library",
    "related",
    "data",
    "processing",
    "analysis",
    "modeling",
    "final",
    "library",
    "actually",
    "built",
    "top",
    "many",
    "familiar",
    "libraries",
    "like",
    "numpy",
    "pandas",
    "scipy",
    "mainly",
    "focuses",
    "data",
    "modeling",
    "used",
    "create",
    "models",
    "predictive",
    "data",
    "analysis",
    "hope",
    "would",
    "got",
    "idea",
    "regarding",
    "use",
    "cases",
    "data",
    "processed",
    "modeled",
    "time",
    "visualize",
    "data",
    "get",
    "important",
    "insights",
    "therefore",
    "see",
    "libraries",
    "related",
    "data",
    "visualization",
    "first",
    "library",
    "matplotlib",
    "talk",
    "matplotlip",
    "used",
    "data",
    "visualization",
    "python",
    "provides",
    "necessary",
    "graphs",
    "charts",
    "univariate",
    "multivariate",
    "analysis",
    "used",
    "create",
    "industry",
    "standard",
    "publication",
    "standard",
    "plots",
    "matplotlib",
    "contains",
    "api",
    "used",
    "integrate",
    "plots",
    "charts",
    "applications",
    "hope",
    "would",
    "got",
    "idea",
    "regarding",
    "matplotlip",
    "let",
    "move",
    "forward",
    "discuss",
    "next",
    "library",
    "c",
    "bone",
    "talk",
    "c",
    "bone",
    "built",
    "top",
    "matplotlib",
    "library",
    "built",
    "top",
    "matplotlib",
    "higher",
    "interface",
    "level",
    "provides",
    "cleaner",
    "plots",
    "matplotlib",
    "visualization",
    "contains",
    "set",
    "different",
    "themes",
    "provides",
    "extensive",
    "plots",
    "like",
    "heat",
    "maps",
    "pair",
    "plots",
    "used",
    "multivariate",
    "analysis",
    "hope",
    "would",
    "got",
    "idea",
    "regarding",
    "c",
    "bond",
    "let",
    "move",
    "forward",
    "discuss",
    "final",
    "library",
    "data",
    "visualization",
    "bokeh",
    "bogey",
    "fully",
    "independent",
    "matplotlib",
    "bokeh",
    "used",
    "create",
    "interactive",
    "plots",
    "browser",
    "using",
    "javascript",
    "widgets",
    "like",
    "c1",
    "bokeh",
    "assist",
    "us",
    "creating",
    "complex",
    "visualization",
    "majorly",
    "focus",
    "interactiveness",
    "interactive",
    "functionalities",
    "help",
    "creating",
    "complex",
    "visualization",
    "like",
    "dashboards",
    "network",
    "graph",
    "etc",
    "discussing",
    "libraries",
    "related",
    "data",
    "visualization",
    "analysis",
    "modeling",
    "also",
    "numerical",
    "computation",
    "come",
    "certain",
    "conclusion",
    "thousands",
    "lack",
    "python",
    "libraries",
    "available",
    "ecosystem",
    "today",
    "list",
    "covers",
    "popular",
    "know",
    "libraries",
    "also",
    "covered",
    "important",
    "libraries",
    "domains",
    "give",
    "brief",
    "idea",
    "areas",
    "interest",
    "libraries",
    "used",
    "professional",
    "work",
    "basis",
    "got",
    "good",
    "understanding",
    "libraries",
    "function",
    "also",
    "complex",
    "libraries",
    "built",
    "upon",
    "core",
    "ones",
    "many",
    "complex",
    "libraries",
    "read",
    "sky",
    "limit",
    "knowledge",
    "learn",
    "far",
    "interest",
    "today",
    "video",
    "hope",
    "guys",
    "enjoyed",
    "today",
    "video",
    "python",
    "libraries",
    "data",
    "science",
    "want",
    "make",
    "career",
    "data",
    "science",
    "intellipat",
    "iit",
    "madras",
    "advice",
    "data",
    "science",
    "ai",
    "certification",
    "program",
    "course",
    "high",
    "quality",
    "cost",
    "effective",
    "taught",
    "iit",
    "professors",
    "industry",
    "experts",
    "foreign"
  ],
  "keywords": [
    "today",
    "video",
    "python",
    "libraries",
    "related",
    "data",
    "science",
    "question",
    "wondering",
    "different",
    "various",
    "domains",
    "want",
    "important",
    "deep",
    "learning",
    "first",
    "going",
    "discuss",
    "applications",
    "mining",
    "library",
    "processing",
    "analysis",
    "modeling",
    "visualization",
    "let",
    "used",
    "many",
    "like",
    "easy",
    "object",
    "high",
    "open",
    "source",
    "provides",
    "numerical",
    "statistical",
    "process",
    "scrappy",
    "scrapping",
    "developing",
    "also",
    "hope",
    "use",
    "next",
    "beautiful",
    "soap",
    "far",
    "analyzing",
    "numpy",
    "talk",
    "contains",
    "array",
    "operations",
    "complex",
    "pandas",
    "scipy",
    "structures",
    "time",
    "series",
    "built",
    "top",
    "fast",
    "would",
    "actually",
    "matplotlib",
    "machine",
    "run",
    "jupiter",
    "got",
    "move",
    "tensorflow",
    "google",
    "computation",
    "neural",
    "networks",
    "models",
    "recognition",
    "create",
    "graph",
    "idea",
    "kiras",
    "developed",
    "torch",
    "forward",
    "scientific",
    "regarding",
    "plots",
    "c",
    "bokeh"
  ]
}