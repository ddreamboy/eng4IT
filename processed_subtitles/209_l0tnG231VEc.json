{
  "text": "hello this is matthew from simply learn\nand in this video we're going to take\nyou through the 10 most popular tools\nthat you'll need to have in your devops\nsetup what we're going to do is we're\ngoing to break up the tools into eight\ndifferent categories now we're going to\ngo through the planning and code based\ntools the building tools the testing\ntools the all-important integration tool\ndeployment operation and then finally\nmonitoring tools something we should\nalso add is that all of these tools are\nopen source this means that you can get\nup and running with your devops\nenvironment immediately without having\nto worry about licensing costs so let's\njump into the very first tool which is\nget so get is a distributed version\ncontrol tool that allows development\nteams to be able to share code amongst\neach other in a way that allows the\ncreation of small to extremely large\napplications to be created effortlessly\nif we look at the architecture of git\nand the way that it works that there are\nfour key areas we have the working\ndirectory the staging area local\nrepository and then remote repository so\nyour working directory is where you\nactually create all the files that\nyou'll be working on in your application\nand the staging is the area that you get\nready to commit those files to your\nlocal repository for version control and\nonce you actually have then put them\ninto your local repository then you want\nto be able to push those files using a\npush command out to a remote repository\nsuch as github or git lab in addition if\nyou have a distributed team you can then\nalso then pull down the latest files so\nas a team you can always be working on\nall the files all the time and then go\nthrough the whole process again by\nworking on your local files you can do\nthis whole process really quickly and\neasily get is actually a free tool you\ncan download and run through command\nline off your computer finally you want\nto be able to merge files that you may\nbe working on say for instance a\ndifferent branch which is a new feature\nyou want to be able to merge those files\nback into the master directory the\nmaster branch that's running on git\nitself so some of the things to point\nout with get what makes it really useful\nis that it's absolutely brilliant at\nbeing able to track changes in your\nsource code this is something that\nsource code tools are really kind of\nshould be able to do but get is\nexceptionally good at this having large\nteams working at different phases within\nthe project and working on different\nbranches within the project is really\neasy to do and the collaboration tools\nwill then get to make it so that your\nteams can work effortlessly with each\nother inherently you are creating\nbackups of all your code which is\nfantastic and probably most important\npart is that the environment itself is a\nnon-linear environment this means that\nyou don't have to work through specific\ngates to be able to reach feature to\nactually get a feature ready for\ndelivery you can actually work in a\nnon-linear fashion so who's using git\nwell as you can imagine all of the big\ntechnology companies are using git\nincluding netflix lyft and intel plus\nmany many other companies so let's get\non to our next tool which is maven and\nthe focus on maven is to automate the\nbuild process of code that's being\nchecked into a repository such as a git\nrepository so we have a look at the\narchitecture here maven itself actually\nexecutes what are called palm files and\nthose palm files actually then look for\nspecific dependencies that will then go\nagainst a repository to be able to build\nout the project you can actually extend\nthe prompt files with plugins and you\ncan actually then create a specific\nbuild profile for your environments\nwhich is actually fantastic because you\ncan really fine-tune the profile and\nagain all of this is scripted and this\nis something that is common with all the\ntools that you'll be using in a true\ndevops environment is that you can\nscript all of them which means that you\ncan automate the processes that are in\nyour devops environment and really\naccelerate the ability to be able to\nbuild consistent high quality software\nfinal step for a maven environment is to\nactually build all the software into a\nin our build server so a couple of\nthings that are important to notice with\nmavin one of things that you'll see\nthat's key with all of the tools that we\nhave here really easy to use marvin\nitself it's got a pretty simple setup\nit's highly available which means that\nyour teams can rely on the solution\nbeing ready for your environment and you\ncan actually get to it and use it very\neasily and consistently you can have\nmultiple builds happening at the same\ntime which is really important\nparticularly if you have branched\nsoftware you want to be able to test the\nbranches and the other thing as well is\nthat it's open source so you have\ninstant access to new features without\nany additional configuration so it\nreally helps your teams to get the new\ncode and implement new features within\nthe environment itself so you're always\nworking on the latest and greatest as\nyou can imagine devops shops such as\nzillow and zens and jp morgan and chase\nare already using maven and you'll see\nthat many devops shops are also using\nmaven for their build software testing\nwith selenium is very important and\nbeing able to automate that environment\nis critical so you can actually\nguarantee that your code will work and\nselenium itself is designed for testing\nand automating web applications it's\nreally good in that environment and we\nlook at the architecture the way that it\nworks is that you actually have a client\nlibrary that goes against the code\nyou're writing with a c sharp python\njava javascript and then there are\nspecific drivers that go against the web\nbrowsers to actually test out the code\nthat you have created so that you can\nactually see whether it works in the\nappropriate web browsers and all of the\npopular web browsers are supported with\nselenium selenium is an open source\nsolution it does allow you to write\nscripts in multiple different languages\nwhich is a real big bonus you can as\nwell run parallel test execution so this\nbalances very well with mavin and as\nwith other tools that we have it's\nreally easy to use and selenium is being\nused by google hubspot and salesforce as\nwell as many other companies so let's\ntalk about the really important part\nwhich is integrating all of this and\njenkins really is the de facto tool in\nthis space so the role of jenkins is to\nbe able to manage and allow for that\ncontinuous integration that you need to\nmake devops successful so allowing the\ndev the development team to integrate\neffectively with the ops the operations\nteam and do that through testing and\nmanagement of the code that has been\ncreated so we look at the architecture\nhere we have our remote source code\nrepository is going to be waiting for a\njenkins pull to be able to create a\ncommit and then that jenkins surfmaster\nwill then push out and distribute the\nwork to multiple slaves so that you\nactually have the actual code being\npushed around your environment so\njenkins is really easy to use it's very\nmature it's been around for many years\nthere are a significant number of\nplug-ins that allow for the jenkins\nenvironment to be scaled very\neffectively and it is portable across\nmultiple platforms in fact most of the\nleading operating systems will support\njenkins and as you can imagine jenkins\nis being used by companies such as\nlinkedin and microsoft ebay dell and\ncloudera so let's talk about the other\nside of devops and talk about some of\nthe operations tool and we'll start off\nwith docker so the role of docker is to\nmake it easy for people to be able to\nsimulate full environments quickly and\neasily on their desktop for building and\ntesting but at the same time make that\nreal easy to be able to port those\nenvironments across multiple um areas so\nlet's let me talk a little bit about how\nthat would work so with the docker\nengine\nyou have a docker client locally that\nallows you to emulate the whole docker\nenvironment without having to have the\noverhead that you would typically have\nif you're doing virtualization or\ndedicated servers running specific\ndedicated operating systems because you\nare scripting the entire environment\ndocker is a very scalable and repeatable\nenvironment for being able to take\nacross the entire cloud network so some\nof the features are really important for\ndocker it's incredibly portable across\nmultiple platforms uh the docker team\nhave done fantastic job on portability\nit does run in isolation so what this\nmeans is that you can actually have\nmultiple docker environments running on\na server concurrently and they will not\ninterrupt each other they actually fully\nisolated sandbox environments so the\nother part to dockers because it is\nstripped out needless operating system\nand and host environment apis and\nservices the actual startup and boot\ntime for a docker is really very fast\nwhich in turn makes this very scalable\nand efficient to run and you can\nactually reuse volumes very easily so\nwho's using docker just about everybody\nspotify uber paypal bbc really docker is\nused by a lot of people just a side note\nprobably something that would complement\ndocker very well is kubernetes and\nkubernetes is becoming a very popular\nalternative to docker and so you know\nreally get to know both of those tools\nso let's talk about uh some of the\noperation and management tools that you\nhave for your environment and the three\nbig ones here are chef and spawn puppet\nand we'll start with ansible and ansible\nis a configuration software package and\nunlike the other two products here um\nunlike chef and puppet ansible doesn't\nactually require a client to run on the\nhost server where you're pushing out a\nconfiguration you can actually have a\ndefined operation configuration so\nthat's a web server configuration or\ndatabase configuration or an iot cloud\nconfiguration you can actually have that\nrunning um effectively from a script\nthat is written on a client machine and\nthen on your local machine and then you\ncan push that script that you've created\nout to your remote and servers and have\neverything work um as you'd expect\nquickly on your remote servers you know\njust some of the key features of ansible\nis incredibly lightweight one of the\nthings that's really important with\nansible is that it's actually very easy\neasy to use there is unlike the other\ntwo tools we'll be covering unlike um\npuppet and chef ansible actually has a\nfull gui that you can use to actually\ninteract and build out solutions so\nthere is a a visual interface that you\ncan actually go in so you're not just\nworking completely in command line\ncompanies that are using ansible include\ntwitter ea sports cisco and nasa as well\nas verizon so complementing ansible but\nprobably a little bit more popular right\nnow are chef and puppet and we'll cover\nchef first now both chef and puppet are\nsomewhat similar in configuration and\nboth of them rely on having a client\nserver relationship with their\narchitecture the way that chef works is\nthat chef actually creates recipes and\neach recipe is a\nserver configuration\nsetup and what you actually do is you\ncreate individual recipes and then for\nyour entire network you create what's\ncalled a cookbook and that cookbook\nactually can be used to control the\nsetup of your entire network and this\nworks really well for being able to\ncreate consistent and highly scalable\nenvironments things that are great with\nchef is that it's actually a very\nflexible configuration and you can\nactually do an awful lot with it has\nreally good security features which are\nvery appealing to particularly if you\nhave a devsec ops environment where the\nsecurity team are integrated with your\ndevops environment and that's something\nthat's becoming more and more popular\nchef itself is actually pretty easy to\nuse it is a command line tool but it is\nactually fairly easy to use and the\nactual scripting of the recipes is\nsomething that you can do even if you\ndon't have much scripting experience\nit's something there are so many recipes\nout and available you can actually use\nmany of the templates i've already been\nwritten and just either copy them or\nmodify them to your environment as you'd\nexpect a lot of the companies are using\nchef are the big technology companies\nsuch as facebook and ibm microsoft in\nparticular has really invested heavily\nand shared fact you'll find that chef is\nprobably the most popular management\ntool used within the azure environment\nso a complimentary product to chef is\npuppets and if we look at puppets as you\ncan imagine again another open source\nconfiguration tool the structure as you\ncan see is actually very similar in\nconcept to uh chef in which you have a\nlocal server that actually has all the\nconfiguration environments the templates\nand the files and the manifests and it\nwill actually then communicate with all\nof your entire environments such as and\nthen with puppet they refer to them as\nnodes and within your node you have\nmultiple servers but it's similar in\nconcept to chef in many ways in that\nit's just another way of being able to\ncontrol your environment both are really\ngreat tools in fact really all three of\nthem ansible chef and puppet are great\ntools what you have to do as a devops\nteam is really just decide which tool is\nthe one that's appropriate for your\nenvironment so some things are great\nwith puppet it's a multi-platform\ncompatible it's very scalable and it\nallows you to push out changes to your\nenvironment really really fast and who\nare using puppets you've got red hat hp\ngoogle leading devops teams are using\npuppets today so let's get into the two\ntools that we have that actually monitor\nour operations environment splunk and\nnegus so splunk is as expected as a\nmonitoring tool and its goal is to\nactually monitoring the operations of\nall the environments that you have make\nsure that they're working correctly and\nit does this by going through and\nreviewing your entire environment and\nwriting the operational information to\ndisk and then searching that environment\nto make sure everything works correctly\nit does a lot of analysis in real time\nit is a very easy to uh set up and use\ntool for testing for analysis and to\nthen be able to then troubleshoot any\nfailures that may come up the thing\nthat's great about splunk is that you\ncan actually put it in a distributed\nenvironment so that's no single point of\nfailure which makes it itself inherently\nvery very scalable so cisco facebook\ndomino's pizza dubai airports are all\ncustomers that are using splunk today in\ntheir devops environments so finally\nlet's jump into our final monitoring\ntour which is uh negios and very similar\nto splunk is uh nego so probably the big\ndifference is it has client server setup\nbut\nreally again it's all about being able\nto monitor and check the status of your\nentire environment and your network and\nyour servers in real time and give you\nthe appropriate visualizations whether\nit's on your laptop or whether it's an\nalert that's sent out to your phone and\nyou know so you're aware in real time\nhow your network is performing and can\nthen check and adjust to uh actually\nmaking changes and the bottom line in\nthis kind of architecture with splunk\nand lagos is that it allows you as the\noperations lead to be able to be ahead\nof any perceived impact so say for\ninstance you are putting in specific\ncheck marks for your environment you can\nactually have alerts being sent out to\nyour team when certain thresholds are\nmet and so that means that you are aware\nof problems with your environment before\nyour customer is there's nothing worse\nthan somebody emailing and saying hey\nyour website doesn't work or like a page\nis down or it's slow or something like\nthis with uh nagios and splunk these are\ntools that really address those kind of\nproblems so that you stay ahead of the\ncurve so some of the things that are\nreally good with negatives is it\nnegatives itself is very very\ncomprehensive you can do an awful lot\nwith it and it allows you to be able to\nget to the root of monitoring and\nanalyzing your problems within your\noperations and network environment very\nquickly it has a very modular\narchitecture which also then makes it um\nextremely highly available and because\nthe the system itself is not reliant on\njust a single large application actually\nthe module architecture allows it to be\nscalable and very easy to manage across\nyour entire environment companies using\nan ios include uber and hike and web\nmedia again these are all technology\ncompanies but there's no reason why you\nshouldn't be using them as well so\nhopefully you've enjoyed our uh 10 tools\nthat you need within your devops\nenvironment to help cover both the dev\nthe ops and the integration between dev\nand ops we also snuck in a couple of\nextra bonuses in there as well as\ntalking a little bit about dev sec ops\nwhich is really the evolution of devops\nif you have any additional tools you\nthink that we missed that we should have\nhad in this list please put those in the\ncomments below and again as always if\nyou have any questions put your\nquestions below in the comments and\nwe'll get back to you with answers from\nour simply learn team this has been\nmatthew giving you a quick overview of\nthe top 10 tools in devops have a\nbrilliant day\nhi there if you like this video\nsubscribe to the simply learn youtube\nchannel and click here to watch similar\nvideos to nerd up and get certified\nclick here\n",
  "words": [
    "hello",
    "matthew",
    "simply",
    "learn",
    "video",
    "going",
    "take",
    "10",
    "popular",
    "tools",
    "need",
    "devops",
    "setup",
    "going",
    "going",
    "break",
    "tools",
    "eight",
    "different",
    "categories",
    "going",
    "go",
    "planning",
    "code",
    "based",
    "tools",
    "building",
    "tools",
    "testing",
    "tools",
    "integration",
    "tool",
    "deployment",
    "operation",
    "finally",
    "monitoring",
    "tools",
    "something",
    "also",
    "add",
    "tools",
    "open",
    "source",
    "means",
    "get",
    "running",
    "devops",
    "environment",
    "immediately",
    "without",
    "worry",
    "licensing",
    "costs",
    "let",
    "jump",
    "first",
    "tool",
    "get",
    "get",
    "distributed",
    "version",
    "control",
    "tool",
    "allows",
    "development",
    "teams",
    "able",
    "share",
    "code",
    "amongst",
    "way",
    "allows",
    "creation",
    "small",
    "extremely",
    "large",
    "applications",
    "created",
    "effortlessly",
    "look",
    "architecture",
    "git",
    "way",
    "works",
    "four",
    "key",
    "areas",
    "working",
    "directory",
    "staging",
    "area",
    "local",
    "repository",
    "remote",
    "repository",
    "working",
    "directory",
    "actually",
    "create",
    "files",
    "working",
    "application",
    "staging",
    "area",
    "get",
    "ready",
    "commit",
    "files",
    "local",
    "repository",
    "version",
    "control",
    "actually",
    "put",
    "local",
    "repository",
    "want",
    "able",
    "push",
    "files",
    "using",
    "push",
    "command",
    "remote",
    "repository",
    "github",
    "git",
    "lab",
    "addition",
    "distributed",
    "team",
    "also",
    "pull",
    "latest",
    "files",
    "team",
    "always",
    "working",
    "files",
    "time",
    "go",
    "whole",
    "process",
    "working",
    "local",
    "files",
    "whole",
    "process",
    "really",
    "quickly",
    "easily",
    "get",
    "actually",
    "free",
    "tool",
    "download",
    "run",
    "command",
    "line",
    "computer",
    "finally",
    "want",
    "able",
    "merge",
    "files",
    "may",
    "working",
    "say",
    "instance",
    "different",
    "branch",
    "new",
    "feature",
    "want",
    "able",
    "merge",
    "files",
    "back",
    "master",
    "directory",
    "master",
    "branch",
    "running",
    "git",
    "things",
    "point",
    "get",
    "makes",
    "really",
    "useful",
    "absolutely",
    "brilliant",
    "able",
    "track",
    "changes",
    "source",
    "code",
    "something",
    "source",
    "code",
    "tools",
    "really",
    "kind",
    "able",
    "get",
    "exceptionally",
    "good",
    "large",
    "teams",
    "working",
    "different",
    "phases",
    "within",
    "project",
    "working",
    "different",
    "branches",
    "within",
    "project",
    "really",
    "easy",
    "collaboration",
    "tools",
    "get",
    "make",
    "teams",
    "work",
    "effortlessly",
    "inherently",
    "creating",
    "backups",
    "code",
    "fantastic",
    "probably",
    "important",
    "part",
    "environment",
    "environment",
    "means",
    "work",
    "specific",
    "gates",
    "able",
    "reach",
    "feature",
    "actually",
    "get",
    "feature",
    "ready",
    "delivery",
    "actually",
    "work",
    "fashion",
    "using",
    "git",
    "well",
    "imagine",
    "big",
    "technology",
    "companies",
    "using",
    "git",
    "including",
    "netflix",
    "lyft",
    "intel",
    "plus",
    "many",
    "many",
    "companies",
    "let",
    "get",
    "next",
    "tool",
    "maven",
    "focus",
    "maven",
    "automate",
    "build",
    "process",
    "code",
    "checked",
    "repository",
    "git",
    "repository",
    "look",
    "architecture",
    "maven",
    "actually",
    "executes",
    "called",
    "palm",
    "files",
    "palm",
    "files",
    "actually",
    "look",
    "specific",
    "dependencies",
    "go",
    "repository",
    "able",
    "build",
    "project",
    "actually",
    "extend",
    "prompt",
    "files",
    "plugins",
    "actually",
    "create",
    "specific",
    "build",
    "profile",
    "environments",
    "actually",
    "fantastic",
    "really",
    "profile",
    "scripted",
    "something",
    "common",
    "tools",
    "using",
    "true",
    "devops",
    "environment",
    "script",
    "means",
    "automate",
    "processes",
    "devops",
    "environment",
    "really",
    "accelerate",
    "ability",
    "able",
    "build",
    "consistent",
    "high",
    "quality",
    "software",
    "final",
    "step",
    "maven",
    "environment",
    "actually",
    "build",
    "software",
    "build",
    "server",
    "couple",
    "things",
    "important",
    "notice",
    "mavin",
    "one",
    "things",
    "see",
    "key",
    "tools",
    "really",
    "easy",
    "use",
    "marvin",
    "got",
    "pretty",
    "simple",
    "setup",
    "highly",
    "available",
    "means",
    "teams",
    "rely",
    "solution",
    "ready",
    "environment",
    "actually",
    "get",
    "use",
    "easily",
    "consistently",
    "multiple",
    "builds",
    "happening",
    "time",
    "really",
    "important",
    "particularly",
    "branched",
    "software",
    "want",
    "able",
    "test",
    "branches",
    "thing",
    "well",
    "open",
    "source",
    "instant",
    "access",
    "new",
    "features",
    "without",
    "additional",
    "configuration",
    "really",
    "helps",
    "teams",
    "get",
    "new",
    "code",
    "implement",
    "new",
    "features",
    "within",
    "environment",
    "always",
    "working",
    "latest",
    "greatest",
    "imagine",
    "devops",
    "shops",
    "zillow",
    "zens",
    "jp",
    "morgan",
    "chase",
    "already",
    "using",
    "maven",
    "see",
    "many",
    "devops",
    "shops",
    "also",
    "using",
    "maven",
    "build",
    "software",
    "testing",
    "selenium",
    "important",
    "able",
    "automate",
    "environment",
    "critical",
    "actually",
    "guarantee",
    "code",
    "work",
    "selenium",
    "designed",
    "testing",
    "automating",
    "web",
    "applications",
    "really",
    "good",
    "environment",
    "look",
    "architecture",
    "way",
    "works",
    "actually",
    "client",
    "library",
    "goes",
    "code",
    "writing",
    "c",
    "sharp",
    "python",
    "java",
    "javascript",
    "specific",
    "drivers",
    "go",
    "web",
    "browsers",
    "actually",
    "test",
    "code",
    "created",
    "actually",
    "see",
    "whether",
    "works",
    "appropriate",
    "web",
    "browsers",
    "popular",
    "web",
    "browsers",
    "supported",
    "selenium",
    "selenium",
    "open",
    "source",
    "solution",
    "allow",
    "write",
    "scripts",
    "multiple",
    "different",
    "languages",
    "real",
    "big",
    "bonus",
    "well",
    "run",
    "parallel",
    "test",
    "execution",
    "balances",
    "well",
    "mavin",
    "tools",
    "really",
    "easy",
    "use",
    "selenium",
    "used",
    "google",
    "hubspot",
    "salesforce",
    "well",
    "many",
    "companies",
    "let",
    "talk",
    "really",
    "important",
    "part",
    "integrating",
    "jenkins",
    "really",
    "de",
    "facto",
    "tool",
    "space",
    "role",
    "jenkins",
    "able",
    "manage",
    "allow",
    "continuous",
    "integration",
    "need",
    "make",
    "devops",
    "successful",
    "allowing",
    "dev",
    "development",
    "team",
    "integrate",
    "effectively",
    "ops",
    "operations",
    "team",
    "testing",
    "management",
    "code",
    "created",
    "look",
    "architecture",
    "remote",
    "source",
    "code",
    "repository",
    "going",
    "waiting",
    "jenkins",
    "pull",
    "able",
    "create",
    "commit",
    "jenkins",
    "surfmaster",
    "push",
    "distribute",
    "work",
    "multiple",
    "slaves",
    "actually",
    "actual",
    "code",
    "pushed",
    "around",
    "environment",
    "jenkins",
    "really",
    "easy",
    "use",
    "mature",
    "around",
    "many",
    "years",
    "significant",
    "number",
    "allow",
    "jenkins",
    "environment",
    "scaled",
    "effectively",
    "portable",
    "across",
    "multiple",
    "platforms",
    "fact",
    "leading",
    "operating",
    "systems",
    "support",
    "jenkins",
    "imagine",
    "jenkins",
    "used",
    "companies",
    "linkedin",
    "microsoft",
    "ebay",
    "dell",
    "cloudera",
    "let",
    "talk",
    "side",
    "devops",
    "talk",
    "operations",
    "tool",
    "start",
    "docker",
    "role",
    "docker",
    "make",
    "easy",
    "people",
    "able",
    "simulate",
    "full",
    "environments",
    "quickly",
    "easily",
    "desktop",
    "building",
    "testing",
    "time",
    "make",
    "real",
    "easy",
    "able",
    "port",
    "environments",
    "across",
    "multiple",
    "um",
    "areas",
    "let",
    "let",
    "talk",
    "little",
    "bit",
    "would",
    "work",
    "docker",
    "engine",
    "docker",
    "client",
    "locally",
    "allows",
    "emulate",
    "whole",
    "docker",
    "environment",
    "without",
    "overhead",
    "would",
    "typically",
    "virtualization",
    "dedicated",
    "servers",
    "running",
    "specific",
    "dedicated",
    "operating",
    "systems",
    "scripting",
    "entire",
    "environment",
    "docker",
    "scalable",
    "repeatable",
    "environment",
    "able",
    "take",
    "across",
    "entire",
    "cloud",
    "network",
    "features",
    "really",
    "important",
    "docker",
    "incredibly",
    "portable",
    "across",
    "multiple",
    "platforms",
    "uh",
    "docker",
    "team",
    "done",
    "fantastic",
    "job",
    "portability",
    "run",
    "isolation",
    "means",
    "actually",
    "multiple",
    "docker",
    "environments",
    "running",
    "server",
    "concurrently",
    "interrupt",
    "actually",
    "fully",
    "isolated",
    "sandbox",
    "environments",
    "part",
    "dockers",
    "stripped",
    "needless",
    "operating",
    "system",
    "host",
    "environment",
    "apis",
    "services",
    "actual",
    "startup",
    "boot",
    "time",
    "docker",
    "really",
    "fast",
    "turn",
    "makes",
    "scalable",
    "efficient",
    "run",
    "actually",
    "reuse",
    "volumes",
    "easily",
    "using",
    "docker",
    "everybody",
    "spotify",
    "uber",
    "paypal",
    "bbc",
    "really",
    "docker",
    "used",
    "lot",
    "people",
    "side",
    "note",
    "probably",
    "something",
    "would",
    "complement",
    "docker",
    "well",
    "kubernetes",
    "kubernetes",
    "becoming",
    "popular",
    "alternative",
    "docker",
    "know",
    "really",
    "get",
    "know",
    "tools",
    "let",
    "talk",
    "uh",
    "operation",
    "management",
    "tools",
    "environment",
    "three",
    "big",
    "ones",
    "chef",
    "spawn",
    "puppet",
    "start",
    "ansible",
    "ansible",
    "configuration",
    "software",
    "package",
    "unlike",
    "two",
    "products",
    "um",
    "unlike",
    "chef",
    "puppet",
    "ansible",
    "actually",
    "require",
    "client",
    "run",
    "host",
    "server",
    "pushing",
    "configuration",
    "actually",
    "defined",
    "operation",
    "configuration",
    "web",
    "server",
    "configuration",
    "database",
    "configuration",
    "iot",
    "cloud",
    "configuration",
    "actually",
    "running",
    "um",
    "effectively",
    "script",
    "written",
    "client",
    "machine",
    "local",
    "machine",
    "push",
    "script",
    "created",
    "remote",
    "servers",
    "everything",
    "work",
    "um",
    "expect",
    "quickly",
    "remote",
    "servers",
    "know",
    "key",
    "features",
    "ansible",
    "incredibly",
    "lightweight",
    "one",
    "things",
    "really",
    "important",
    "ansible",
    "actually",
    "easy",
    "easy",
    "use",
    "unlike",
    "two",
    "tools",
    "covering",
    "unlike",
    "um",
    "puppet",
    "chef",
    "ansible",
    "actually",
    "full",
    "gui",
    "use",
    "actually",
    "interact",
    "build",
    "solutions",
    "visual",
    "interface",
    "actually",
    "go",
    "working",
    "completely",
    "command",
    "line",
    "companies",
    "using",
    "ansible",
    "include",
    "twitter",
    "ea",
    "sports",
    "cisco",
    "nasa",
    "well",
    "verizon",
    "complementing",
    "ansible",
    "probably",
    "little",
    "bit",
    "popular",
    "right",
    "chef",
    "puppet",
    "cover",
    "chef",
    "first",
    "chef",
    "puppet",
    "somewhat",
    "similar",
    "configuration",
    "rely",
    "client",
    "server",
    "relationship",
    "architecture",
    "way",
    "chef",
    "works",
    "chef",
    "actually",
    "creates",
    "recipes",
    "recipe",
    "server",
    "configuration",
    "setup",
    "actually",
    "create",
    "individual",
    "recipes",
    "entire",
    "network",
    "create",
    "called",
    "cookbook",
    "cookbook",
    "actually",
    "used",
    "control",
    "setup",
    "entire",
    "network",
    "works",
    "really",
    "well",
    "able",
    "create",
    "consistent",
    "highly",
    "scalable",
    "environments",
    "things",
    "great",
    "chef",
    "actually",
    "flexible",
    "configuration",
    "actually",
    "awful",
    "lot",
    "really",
    "good",
    "security",
    "features",
    "appealing",
    "particularly",
    "devsec",
    "ops",
    "environment",
    "security",
    "team",
    "integrated",
    "devops",
    "environment",
    "something",
    "becoming",
    "popular",
    "chef",
    "actually",
    "pretty",
    "easy",
    "use",
    "command",
    "line",
    "tool",
    "actually",
    "fairly",
    "easy",
    "use",
    "actual",
    "scripting",
    "recipes",
    "something",
    "even",
    "much",
    "scripting",
    "experience",
    "something",
    "many",
    "recipes",
    "available",
    "actually",
    "use",
    "many",
    "templates",
    "already",
    "written",
    "either",
    "copy",
    "modify",
    "environment",
    "expect",
    "lot",
    "companies",
    "using",
    "chef",
    "big",
    "technology",
    "companies",
    "facebook",
    "ibm",
    "microsoft",
    "particular",
    "really",
    "invested",
    "heavily",
    "shared",
    "fact",
    "find",
    "chef",
    "probably",
    "popular",
    "management",
    "tool",
    "used",
    "within",
    "azure",
    "environment",
    "complimentary",
    "product",
    "chef",
    "puppets",
    "look",
    "puppets",
    "imagine",
    "another",
    "open",
    "source",
    "configuration",
    "tool",
    "structure",
    "see",
    "actually",
    "similar",
    "concept",
    "uh",
    "chef",
    "local",
    "server",
    "actually",
    "configuration",
    "environments",
    "templates",
    "files",
    "manifests",
    "actually",
    "communicate",
    "entire",
    "environments",
    "puppet",
    "refer",
    "nodes",
    "within",
    "node",
    "multiple",
    "servers",
    "similar",
    "concept",
    "chef",
    "many",
    "ways",
    "another",
    "way",
    "able",
    "control",
    "environment",
    "really",
    "great",
    "tools",
    "fact",
    "really",
    "three",
    "ansible",
    "chef",
    "puppet",
    "great",
    "tools",
    "devops",
    "team",
    "really",
    "decide",
    "tool",
    "one",
    "appropriate",
    "environment",
    "things",
    "great",
    "puppet",
    "compatible",
    "scalable",
    "allows",
    "push",
    "changes",
    "environment",
    "really",
    "really",
    "fast",
    "using",
    "puppets",
    "got",
    "red",
    "hat",
    "hp",
    "google",
    "leading",
    "devops",
    "teams",
    "using",
    "puppets",
    "today",
    "let",
    "get",
    "two",
    "tools",
    "actually",
    "monitor",
    "operations",
    "environment",
    "splunk",
    "negus",
    "splunk",
    "expected",
    "monitoring",
    "tool",
    "goal",
    "actually",
    "monitoring",
    "operations",
    "environments",
    "make",
    "sure",
    "working",
    "correctly",
    "going",
    "reviewing",
    "entire",
    "environment",
    "writing",
    "operational",
    "information",
    "disk",
    "searching",
    "environment",
    "make",
    "sure",
    "everything",
    "works",
    "correctly",
    "lot",
    "analysis",
    "real",
    "time",
    "easy",
    "uh",
    "set",
    "use",
    "tool",
    "testing",
    "analysis",
    "able",
    "troubleshoot",
    "failures",
    "may",
    "come",
    "thing",
    "great",
    "splunk",
    "actually",
    "put",
    "distributed",
    "environment",
    "single",
    "point",
    "failure",
    "makes",
    "inherently",
    "scalable",
    "cisco",
    "facebook",
    "domino",
    "pizza",
    "dubai",
    "airports",
    "customers",
    "using",
    "splunk",
    "today",
    "devops",
    "environments",
    "finally",
    "let",
    "jump",
    "final",
    "monitoring",
    "tour",
    "uh",
    "negios",
    "similar",
    "splunk",
    "uh",
    "nego",
    "probably",
    "big",
    "difference",
    "client",
    "server",
    "setup",
    "really",
    "able",
    "monitor",
    "check",
    "status",
    "entire",
    "environment",
    "network",
    "servers",
    "real",
    "time",
    "give",
    "appropriate",
    "visualizations",
    "whether",
    "laptop",
    "whether",
    "alert",
    "sent",
    "phone",
    "know",
    "aware",
    "real",
    "time",
    "network",
    "performing",
    "check",
    "adjust",
    "uh",
    "actually",
    "making",
    "changes",
    "bottom",
    "line",
    "kind",
    "architecture",
    "splunk",
    "lagos",
    "allows",
    "operations",
    "lead",
    "able",
    "ahead",
    "perceived",
    "impact",
    "say",
    "instance",
    "putting",
    "specific",
    "check",
    "marks",
    "environment",
    "actually",
    "alerts",
    "sent",
    "team",
    "certain",
    "thresholds",
    "met",
    "means",
    "aware",
    "problems",
    "environment",
    "customer",
    "nothing",
    "worse",
    "somebody",
    "emailing",
    "saying",
    "hey",
    "website",
    "work",
    "like",
    "page",
    "slow",
    "something",
    "like",
    "uh",
    "nagios",
    "splunk",
    "tools",
    "really",
    "address",
    "kind",
    "problems",
    "stay",
    "ahead",
    "curve",
    "things",
    "really",
    "good",
    "negatives",
    "negatives",
    "comprehensive",
    "awful",
    "lot",
    "allows",
    "able",
    "get",
    "root",
    "monitoring",
    "analyzing",
    "problems",
    "within",
    "operations",
    "network",
    "environment",
    "quickly",
    "modular",
    "architecture",
    "also",
    "makes",
    "um",
    "extremely",
    "highly",
    "available",
    "system",
    "reliant",
    "single",
    "large",
    "application",
    "actually",
    "module",
    "architecture",
    "allows",
    "scalable",
    "easy",
    "manage",
    "across",
    "entire",
    "environment",
    "companies",
    "using",
    "ios",
    "include",
    "uber",
    "hike",
    "web",
    "media",
    "technology",
    "companies",
    "reason",
    "using",
    "well",
    "hopefully",
    "enjoyed",
    "uh",
    "10",
    "tools",
    "need",
    "within",
    "devops",
    "environment",
    "help",
    "cover",
    "dev",
    "ops",
    "integration",
    "dev",
    "ops",
    "also",
    "snuck",
    "couple",
    "extra",
    "bonuses",
    "well",
    "talking",
    "little",
    "bit",
    "dev",
    "sec",
    "ops",
    "really",
    "evolution",
    "devops",
    "additional",
    "tools",
    "think",
    "missed",
    "list",
    "please",
    "put",
    "comments",
    "always",
    "questions",
    "put",
    "questions",
    "comments",
    "get",
    "back",
    "answers",
    "simply",
    "learn",
    "team",
    "matthew",
    "giving",
    "quick",
    "overview",
    "top",
    "10",
    "tools",
    "devops",
    "brilliant",
    "day",
    "hi",
    "like",
    "video",
    "subscribe",
    "simply",
    "learn",
    "youtube",
    "channel",
    "click",
    "watch",
    "similar",
    "videos",
    "nerd",
    "get",
    "certified",
    "click"
  ],
  "keywords": [
    "simply",
    "learn",
    "going",
    "10",
    "popular",
    "tools",
    "need",
    "devops",
    "setup",
    "different",
    "go",
    "code",
    "testing",
    "integration",
    "tool",
    "operation",
    "finally",
    "monitoring",
    "something",
    "also",
    "open",
    "source",
    "means",
    "get",
    "running",
    "environment",
    "without",
    "let",
    "distributed",
    "control",
    "allows",
    "teams",
    "able",
    "way",
    "large",
    "created",
    "look",
    "architecture",
    "git",
    "works",
    "key",
    "working",
    "directory",
    "local",
    "repository",
    "remote",
    "actually",
    "create",
    "files",
    "ready",
    "put",
    "want",
    "push",
    "using",
    "command",
    "team",
    "always",
    "time",
    "whole",
    "process",
    "really",
    "quickly",
    "easily",
    "run",
    "line",
    "new",
    "feature",
    "things",
    "makes",
    "changes",
    "kind",
    "good",
    "within",
    "project",
    "easy",
    "make",
    "work",
    "fantastic",
    "probably",
    "important",
    "part",
    "specific",
    "well",
    "imagine",
    "big",
    "technology",
    "companies",
    "many",
    "maven",
    "automate",
    "build",
    "environments",
    "script",
    "software",
    "server",
    "one",
    "see",
    "use",
    "highly",
    "available",
    "multiple",
    "test",
    "features",
    "configuration",
    "selenium",
    "web",
    "client",
    "browsers",
    "whether",
    "appropriate",
    "allow",
    "real",
    "used",
    "talk",
    "jenkins",
    "dev",
    "effectively",
    "ops",
    "operations",
    "management",
    "actual",
    "across",
    "fact",
    "operating",
    "docker",
    "um",
    "little",
    "bit",
    "would",
    "servers",
    "scripting",
    "entire",
    "scalable",
    "network",
    "uh",
    "lot",
    "know",
    "chef",
    "puppet",
    "ansible",
    "unlike",
    "two",
    "similar",
    "recipes",
    "great",
    "puppets",
    "splunk",
    "check",
    "problems",
    "like"
  ]
}