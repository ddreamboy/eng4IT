{
  "text": "in order to understand what a software\ntester or quality assurance analyst does\nyou first need to understand the process\nby which the software is conceptualized\ndeveloped and maintained\nthis process is known as software\ndevelopment lifecycle or the sdlc\nthere are seven key points to\nunderstanding the software development\nlife cycle\nphase one planning\nphase two requirement analysis\nphase three design\nphase four implementation and coding\nphase five testing phase 6 deployment\nand phase 7 maintenance\n[Music]\nso it all starts with this guy the\ncustomer\nhe's the guy that has the business idea\nfor our invoice application and the\nmoney to get it started\nhe's going to reach out to multiple\ndifferent tech companies until he finds\none that he likes\nfinally he's going to meet our company's\nproduct owner or our project manager\nthey're going to discuss terms of their\nagreement sign a deal and accept the\nproject\nthis will move us into the next phase\nplanning the requirements\ntogether the customer and the product\nowner will outline the requirements of\nthe application\nlet's imagine that the requirements that\nthey've both agreed upon are as follows\none user registration\ntwo\nlogin\nthree\nlog out\nfour\nthe dashboard landing page\nand so on and so forth\nthroughout this course we'll be running\nmultiple iterations of the sdlc to which\nnew requirements and new features will\nbe added\nnow that we have the outlined\nrequirements let's take them and move on\nto the requirement analysis phase\nhere's our team operations developers\nproduct owners and testers\nwe'll all meet up at an office for a few\nhours and define each outlined\nrequirement and give more planning\ndetails\nlet's start with requirement number one\nuser registration we'll need a username\ninput field a password field a check box\nto accept the terms and conditions\na submit button\nand the ability to save the user into\nour database\nthen we'll move to requirement number\ntwo the login\nwe'll need a login page to allow\nreturning users to log back into our\nsystem\nfor this we need another username input\nfield\na password field along with another\nsubmit button\nfrom this we'll need to read the user's\ninformation out of the database and log\nthem into our system\nrequirement number three will require a\nlogout button usually located around the\nsame area where the user was logging in\nfrom when they press the logout button\nit should clear their session out of the\nbrowser to prevent other people from\nreturning and logging back into their\naccount\nfinally requirement number four the\ndashboard this will essentially be the\nhome page of our application\nafter a new user is registered they\nshould be redirected to the dashboard\nalso when the user logs in with the\nreturning account they should be\nredirected to the dashboard\nfor our first sdlc i will keep the\nrequirements easy in upcoming videos\nwe'll dive further in with much harder\ncustomer requirements\nonce all of the requirements have been\nanalyzed by the team and defined\nthe product owner will take all the\ndefined requirements and create tickets\nin a project management system\nfrom here we'll move into the design\nphase of the sdlc\nthe design phase takes all the\nrequirements and starts to plan the\nproduct\nthe design phase may include the\nbusiness rules\nthe user interface layouts\ncolor schemes\nwhat programming languages to use\nframeworks\nsystem server design\ndatabase relationships\narchitect of the application\nmobile aspects\nsupported browsers\nand much more\nnext we'll discuss the implementation\nand the coding of the application\nthe implementation and coding phase is\nwhere everything starts to become fun\nthe operations team will set up the\nphysical hardware for the servers the\ndevelopers will start writing the code\nthe designers will continue planning the\nuser interface\nand the testers will analyze the\nrequirements and start building test\ncases for their test plans\neven in this stage testers are\nincredibly valuable they start to\nimagine the usability of the application\nand see how everything flows together\nsometimes while writing test cases they\ncan discover things don't make sense and\nhelp redesign fundamental flaws in the\nearly stages of the application\nnext up we'll be discussing one of the\nmost important phases which is the\ntesting phase\nso why is the testing phase so important\nimagine that the developer has finished\ncoding some of our new features in our\nrequirements we found that when the user\nlogs out\nthat it's not actually clearing the\nsession in the browser\nand that another\nperson can walk up to their computer\nclick the login button or click the\nrefresh on the page and they gain access\nto their account\nget access to all of their money and\nstart making payments on various things\nthey'd be huge and expensive terrible\nbug that would get released if we didn't\nhave testers to test these types of\nthings beforehand\nso what does a tester actually do during\nthe testing phase\n[Music]\nnow that we have the servers all set up\nand the database is set up developers\nhave finished coding they've given us an\napplication an actual website that we\ncan log into now\nnow we can start testing and executing\nour test cases from the test plans that\nwe've created\nvalidate that all of the requirements\nhave been met\nmake sure all the functionality is\nworking as expected\nfind as many bugs as we possibly can\nwhich could be color scheme is incorrect\nor there's a user interface bug\nsomewhere the critical issue people not\nbeing able to log out maybe the users\ncan't even register there's so many\nmistakes that developer can make and do\nmake frequently\nso as we're testing we start to find\nbugs and what we'll do is we'll report\nthem into a bug tracking system which is\nthen assigned to a developer\nthey'll go in and they'll fix the bug\nfix the issue and assign it back to us\nthis is called a bug of life cycle you\nmay have noticed that i've mentioned\ntest cases test plans\nand bugs\nin the upcoming videos we'll go into the\nbug life cycle\niterating with developers\nand how to write test plans and test\ncases\nup next we'll talk about the deployment\nphase\nthe deployment phase the operations team\nwill end up mirroring the staging or\ndevelopment environment systems that\nwe've been testing in and get them ready\nfor production meaning that they'll\ninstall new hardware brand new servers\nhave everything scalable for production\nthis includes setting up the links\nsetting up the databases for real users\nsyncing up with the development teams\nand release managers\nonce they've completed all of these\ntasks our application will go live to\nreal users\nthis brings us to the final phase of the\nsdlc\nmaintenance\nso imagine that we've released and our\napplication became so successful we're\njust getting millions of users logging\nin and registering and using this\napplication\nso we need to maintain\nthe servers in the environment they need\nto monitor the load the stress\neverything coming on the servers by so\nmany users logging in and using it it\ndoesn't bring down the system maybe we\nneed to make larger servers larger\ndatabases maybe we need to get faster\ncomputers there's a lot of stuff that\ngoes under in the maintenance phase\nthere will be bugs found in production\nit's called production support\nfrequently users will email with their\nissues and you can stop and investigate\nwhat they're complaining about or what\ntheir issue is\nfigure it out\nwrite up a bug\nget it resolved and do another\ndeployment to production with issues\nfixed\nso to summarize we've discussed planning\nrequirement analysis design\nimplementation and coding testing\ndeployment and maintenance\nall right awesome that wraps up the\nvideo on the sdlc\none last thing to say is once we're in\nthe maintenance phase new features will\ncome through new requirements will come\nthrough and we'll restart the whole\nprocess again and be able to get new\nstuff added into our existing\napplication\n[Music]\n",
  "words": [
    "order",
    "understand",
    "software",
    "tester",
    "quality",
    "assurance",
    "analyst",
    "first",
    "need",
    "understand",
    "process",
    "software",
    "conceptualized",
    "developed",
    "maintained",
    "process",
    "known",
    "software",
    "development",
    "lifecycle",
    "sdlc",
    "seven",
    "key",
    "points",
    "understanding",
    "software",
    "development",
    "life",
    "cycle",
    "phase",
    "one",
    "planning",
    "phase",
    "two",
    "requirement",
    "analysis",
    "phase",
    "three",
    "design",
    "phase",
    "four",
    "implementation",
    "coding",
    "phase",
    "five",
    "testing",
    "phase",
    "6",
    "deployment",
    "phase",
    "7",
    "maintenance",
    "music",
    "starts",
    "guy",
    "customer",
    "guy",
    "business",
    "idea",
    "invoice",
    "application",
    "money",
    "get",
    "started",
    "going",
    "reach",
    "multiple",
    "different",
    "tech",
    "companies",
    "finds",
    "one",
    "likes",
    "finally",
    "going",
    "meet",
    "company",
    "product",
    "owner",
    "project",
    "manager",
    "going",
    "discuss",
    "terms",
    "agreement",
    "sign",
    "deal",
    "accept",
    "project",
    "move",
    "us",
    "next",
    "phase",
    "planning",
    "requirements",
    "together",
    "customer",
    "product",
    "owner",
    "outline",
    "requirements",
    "application",
    "let",
    "imagine",
    "requirements",
    "agreed",
    "upon",
    "follows",
    "one",
    "user",
    "registration",
    "two",
    "login",
    "three",
    "log",
    "four",
    "dashboard",
    "landing",
    "page",
    "forth",
    "throughout",
    "course",
    "running",
    "multiple",
    "iterations",
    "sdlc",
    "new",
    "requirements",
    "new",
    "features",
    "added",
    "outlined",
    "requirements",
    "let",
    "take",
    "move",
    "requirement",
    "analysis",
    "phase",
    "team",
    "operations",
    "developers",
    "product",
    "owners",
    "testers",
    "meet",
    "office",
    "hours",
    "define",
    "outlined",
    "requirement",
    "give",
    "planning",
    "details",
    "let",
    "start",
    "requirement",
    "number",
    "one",
    "user",
    "registration",
    "need",
    "username",
    "input",
    "field",
    "password",
    "field",
    "check",
    "box",
    "accept",
    "terms",
    "conditions",
    "submit",
    "button",
    "ability",
    "save",
    "user",
    "database",
    "move",
    "requirement",
    "number",
    "two",
    "login",
    "need",
    "login",
    "page",
    "allow",
    "returning",
    "users",
    "log",
    "back",
    "system",
    "need",
    "another",
    "username",
    "input",
    "field",
    "password",
    "field",
    "along",
    "another",
    "submit",
    "button",
    "need",
    "read",
    "user",
    "information",
    "database",
    "log",
    "system",
    "requirement",
    "number",
    "three",
    "require",
    "logout",
    "button",
    "usually",
    "located",
    "around",
    "area",
    "user",
    "logging",
    "press",
    "logout",
    "button",
    "clear",
    "session",
    "browser",
    "prevent",
    "people",
    "returning",
    "logging",
    "back",
    "account",
    "finally",
    "requirement",
    "number",
    "four",
    "dashboard",
    "essentially",
    "home",
    "page",
    "application",
    "new",
    "user",
    "registered",
    "redirected",
    "dashboard",
    "also",
    "user",
    "logs",
    "returning",
    "account",
    "redirected",
    "dashboard",
    "first",
    "sdlc",
    "keep",
    "requirements",
    "easy",
    "upcoming",
    "videos",
    "dive",
    "much",
    "harder",
    "customer",
    "requirements",
    "requirements",
    "analyzed",
    "team",
    "defined",
    "product",
    "owner",
    "take",
    "defined",
    "requirements",
    "create",
    "tickets",
    "project",
    "management",
    "system",
    "move",
    "design",
    "phase",
    "sdlc",
    "design",
    "phase",
    "takes",
    "requirements",
    "starts",
    "plan",
    "product",
    "design",
    "phase",
    "may",
    "include",
    "business",
    "rules",
    "user",
    "interface",
    "layouts",
    "color",
    "schemes",
    "programming",
    "languages",
    "use",
    "frameworks",
    "system",
    "server",
    "design",
    "database",
    "relationships",
    "architect",
    "application",
    "mobile",
    "aspects",
    "supported",
    "browsers",
    "much",
    "next",
    "discuss",
    "implementation",
    "coding",
    "application",
    "implementation",
    "coding",
    "phase",
    "everything",
    "starts",
    "become",
    "fun",
    "operations",
    "team",
    "set",
    "physical",
    "hardware",
    "servers",
    "developers",
    "start",
    "writing",
    "code",
    "designers",
    "continue",
    "planning",
    "user",
    "interface",
    "testers",
    "analyze",
    "requirements",
    "start",
    "building",
    "test",
    "cases",
    "test",
    "plans",
    "even",
    "stage",
    "testers",
    "incredibly",
    "valuable",
    "start",
    "imagine",
    "usability",
    "application",
    "see",
    "everything",
    "flows",
    "together",
    "sometimes",
    "writing",
    "test",
    "cases",
    "discover",
    "things",
    "make",
    "sense",
    "help",
    "redesign",
    "fundamental",
    "flaws",
    "early",
    "stages",
    "application",
    "next",
    "discussing",
    "one",
    "important",
    "phases",
    "testing",
    "phase",
    "testing",
    "phase",
    "important",
    "imagine",
    "developer",
    "finished",
    "coding",
    "new",
    "features",
    "requirements",
    "found",
    "user",
    "logs",
    "actually",
    "clearing",
    "session",
    "browser",
    "another",
    "person",
    "walk",
    "computer",
    "click",
    "login",
    "button",
    "click",
    "refresh",
    "page",
    "gain",
    "access",
    "account",
    "get",
    "access",
    "money",
    "start",
    "making",
    "payments",
    "various",
    "things",
    "huge",
    "expensive",
    "terrible",
    "bug",
    "would",
    "get",
    "released",
    "testers",
    "test",
    "types",
    "things",
    "beforehand",
    "tester",
    "actually",
    "testing",
    "phase",
    "music",
    "servers",
    "set",
    "database",
    "set",
    "developers",
    "finished",
    "coding",
    "given",
    "us",
    "application",
    "actual",
    "website",
    "log",
    "start",
    "testing",
    "executing",
    "test",
    "cases",
    "test",
    "plans",
    "created",
    "validate",
    "requirements",
    "met",
    "make",
    "sure",
    "functionality",
    "working",
    "expected",
    "find",
    "many",
    "bugs",
    "possibly",
    "could",
    "color",
    "scheme",
    "incorrect",
    "user",
    "interface",
    "bug",
    "somewhere",
    "critical",
    "issue",
    "people",
    "able",
    "log",
    "maybe",
    "users",
    "ca",
    "even",
    "register",
    "many",
    "mistakes",
    "developer",
    "make",
    "make",
    "frequently",
    "testing",
    "start",
    "find",
    "bugs",
    "report",
    "bug",
    "tracking",
    "system",
    "assigned",
    "developer",
    "go",
    "fix",
    "bug",
    "fix",
    "issue",
    "assign",
    "back",
    "us",
    "called",
    "bug",
    "life",
    "cycle",
    "may",
    "noticed",
    "mentioned",
    "test",
    "cases",
    "test",
    "plans",
    "bugs",
    "upcoming",
    "videos",
    "go",
    "bug",
    "life",
    "cycle",
    "iterating",
    "developers",
    "write",
    "test",
    "plans",
    "test",
    "cases",
    "next",
    "talk",
    "deployment",
    "phase",
    "deployment",
    "phase",
    "operations",
    "team",
    "end",
    "mirroring",
    "staging",
    "development",
    "environment",
    "systems",
    "testing",
    "get",
    "ready",
    "production",
    "meaning",
    "install",
    "new",
    "hardware",
    "brand",
    "new",
    "servers",
    "everything",
    "scalable",
    "production",
    "includes",
    "setting",
    "links",
    "setting",
    "databases",
    "real",
    "users",
    "syncing",
    "development",
    "teams",
    "release",
    "managers",
    "completed",
    "tasks",
    "application",
    "go",
    "live",
    "real",
    "users",
    "brings",
    "us",
    "final",
    "phase",
    "sdlc",
    "maintenance",
    "imagine",
    "released",
    "application",
    "became",
    "successful",
    "getting",
    "millions",
    "users",
    "logging",
    "registering",
    "using",
    "application",
    "need",
    "maintain",
    "servers",
    "environment",
    "need",
    "monitor",
    "load",
    "stress",
    "everything",
    "coming",
    "servers",
    "many",
    "users",
    "logging",
    "using",
    "bring",
    "system",
    "maybe",
    "need",
    "make",
    "larger",
    "servers",
    "larger",
    "databases",
    "maybe",
    "need",
    "get",
    "faster",
    "computers",
    "lot",
    "stuff",
    "goes",
    "maintenance",
    "phase",
    "bugs",
    "found",
    "production",
    "called",
    "production",
    "support",
    "frequently",
    "users",
    "email",
    "issues",
    "stop",
    "investigate",
    "complaining",
    "issue",
    "figure",
    "write",
    "bug",
    "get",
    "resolved",
    "another",
    "deployment",
    "production",
    "issues",
    "fixed",
    "summarize",
    "discussed",
    "planning",
    "requirement",
    "analysis",
    "design",
    "implementation",
    "coding",
    "testing",
    "deployment",
    "maintenance",
    "right",
    "awesome",
    "wraps",
    "video",
    "sdlc",
    "one",
    "last",
    "thing",
    "say",
    "maintenance",
    "phase",
    "new",
    "features",
    "come",
    "new",
    "requirements",
    "come",
    "restart",
    "whole",
    "process",
    "able",
    "get",
    "new",
    "stuff",
    "added",
    "existing",
    "application",
    "music"
  ],
  "keywords": [
    "software",
    "need",
    "process",
    "development",
    "sdlc",
    "life",
    "cycle",
    "phase",
    "one",
    "planning",
    "two",
    "requirement",
    "analysis",
    "three",
    "design",
    "four",
    "implementation",
    "coding",
    "testing",
    "deployment",
    "maintenance",
    "music",
    "starts",
    "customer",
    "application",
    "get",
    "going",
    "product",
    "owner",
    "project",
    "move",
    "us",
    "next",
    "requirements",
    "let",
    "imagine",
    "user",
    "login",
    "log",
    "dashboard",
    "page",
    "new",
    "features",
    "team",
    "operations",
    "developers",
    "testers",
    "start",
    "number",
    "field",
    "button",
    "database",
    "returning",
    "users",
    "back",
    "system",
    "another",
    "logging",
    "account",
    "interface",
    "everything",
    "set",
    "servers",
    "test",
    "cases",
    "plans",
    "things",
    "make",
    "developer",
    "bug",
    "many",
    "bugs",
    "issue",
    "maybe",
    "go",
    "production"
  ]
}