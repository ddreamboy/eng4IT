{
  "text": "foreign\nwe all know blockchain is one of the\nmajor Tech stories of the past decade\neveryone seems to be talking about it\nbut beneath the surface chatter there is\nnot always clear understanding of what\nblockchain is so in this video we are\ngoing to know what is blockchain and how\nyou can actually create your own\nblockchain to understand the\nfundamentals and the working of\nblockchain hey everyone welcome to this\nnew video of Simply learn on how to\ncreate your own blockchain before moving\nahead do subscribe to our YouTube\nchannel for more such interesting videos\nand hit the Bell icon to never miss an\nupdate from Simply learn also if you are\ninterested to learn more about\nblockchain then you can check out our\nblockchain course and actually learn and\ngather information with our live classes\nand Hands-On projects that will help you\nbuild your base and reach higher levels\nin your career moving on let's see what\nis blockchain\nhell blockchain allows for the permanent\nimmutable and transparent recording of\ndata and transaction this in turn makes\nit possible to exchange anything that\nhas value whether it is a fiscal item or\nsomething less tangible blockchain is a\ntechnology that enables the sharing of\ninformation data obviously stored in a\ndatabase transactions are recorded in an\naccount book called a ledger now a\nblockchain is a type of distributed\ndatabase or Ledger one of the today's\ntop Trend which means that the power to\nupdate a blockchain is distributed\nbetween the nodes or participants of\nthat network but this raises a question\nthat how one can actually create their\nown blockchain if you need a network for\nit well let me tell you a basic\nstructure of blockchain now the\nblockchain looks like this there is a\nblock where multiple transactions are\nstored in one go which is known as data\nbut the block itself has its own\nidentity as an ID a hash number and a\nprevious hash number that actually to\nrepresents the hash number of its\nprevious block now the first block in a\nchain is known as Genesis block after\nthat whatever blocks get added to it\nresumes the hash number of its previous\nblog as a previous hash number and then\ncreates its own hash number and that's\nhow mining works so in this video we are\ngoing to create the exact replica of\nthis blockchain\nso let's quickly jump to the code I'm\nusing pycharm as my online compiler to\ncompile my code and get the output but\nyou can use any online or offline\ncompiler according to your desirable\ncoding language that you prefer I am\nusing python to code over here so first\nwe have to create a project uh I'm\ngiving my project name my blockchain and\nthen you have to\nactually click on the create and your\nproject will be created\nmy project is already created that's why\nI was not getting the create option so\nlet's start coding\nso first we will create a blog and we\nhave to declare a class\nand name it block\nnow we have to Define init function\nwe will also declare a hash and data\nbecause that's what what is stored in a\nBlog\nprevious hash number\nand we have to input the data\nself dot data is equals to data that's\nhow we have to declare every parameter\nthat we have declared in our init\nfunction\nand that's how our blog will be created\nnow that we know how to create a blog\nnow we have to create a blockchain and\nfor that we have to generate our hash\nbecause without that uh we will not be\nable to create a blockchain because\nevery Interlink block actually covers\nthe hash number of its previous block so\nnow we have to create a hash generator\nnow we have to declare hash generator\nLibrary\nthat will help us generate the hash\nnumber\nand as We Know blockchain by default\nuses sng 256 algorithm so\nso that's\nthat's why we will pass our data\nso what it will do it will convert\nwhatever data we have fed it into a\nhexadecimal format\nthat we have\ndeclared our hash generator library and\nscj-256 to actually take code our data\ninto a hexadecimal form because as we\nknow our hash number will be generated\nin that format\nso we are converting it into a\nhexadecimal format\nso now we will create our own blockchain\nso we'll create our own class with name\nblockchain\nso as we know the first block of the\nblockchain is Genesis block so for that\nwe have to\ninput hash last number that will be the\nprevious hash number of the block\nagain we will use hash generator here so\nby default we will declare our previous\nhash number in our Genesis block by 0\nbecause this is the first block and it\ndoesn't have any previous block to carry\non the previous hash number in its own\nID\nnow why we are using hash generator\nto get the hexadecimal format of the\nhash number\nso now we will get the hash number of\nlast chain\nand this is to generate the hash number\nof that particular blog our Genesis\nblock one more thing every Blog has its\nunique hash so you can see that even\nthough it has hundreds of thousands of\nblocks attached to it it any hash number\nwon't be repeated every hash number is\nunique\nand that is to maintain the privacy of\nthe blockchain so that if anybody tries\nto uh impact it via an ulterior motive\nthey won't be able to do so\nnow when we will be attaching another\nblock to this blockchain we will need\nthe hash number of Genesis block because\nthat will be the previous hash number\nfor the second block attached to it\nso now our Genesis block is created now\nwe will create a chain for our Genesis\nblock\nhere we are creating the chain for our\nGenesis block\nso now our chain spot is created\nnow that we have to add every block we\nwill create another function under this\nclass\nso here now we have the previous we need\nthe previous hash number of the Genesis\nblock\nso chain\nfunction to actually\nretrieve the previous hash number of\nGenesis block\nand Interlink both the blocks together\nso technically it's like an array where\nwe have our Genesis block already stored\nso whatever data will be added at the\nlast its hash number will be\nso whatever uh data will be stored at\nthe last its hash number will be\nretrieved by the first block\nnow we have to generate this particular\nblocks hash\nby passing whatever data we are getting\nalso the last hash that we have\nretrieved\nso now whatever data we are passing we\nwant to make it unique so whatever data\nwe have passed through the blog\nthat will be added by the last hash\nnumber like if you're adding the second\nblock the last hash number of the\nGenesis proc will be added to it\nand then we will send it to the hash\ngenerator so that it will retrieve that\nfinal data and create a hexadecimal\nnumber\nso one more thing we could have uh just\npassed data or we could have just passed\nprevious hash number also through it it\nwas not needed to add it but we are\ndoing it to make the data unique so\nwhatever data is actually passed through\nit and if we add it with the hexadecimal\nwe also eliminate the slightest chance\nof making the hash numbers similar\nso here again we are passing data hash\nand previous hash\nso like this we have added one more\nblock to our blockchain\nso for now we have covered Genesis blog\nand another blog that we wanted to\ncreate to the Genesis block with its\nprevious hash number\nand then we will attach it to the chain\nso now whatever class we have created we\nare going to use that\nhere we are going to use our blockchain\nobject in this variable\nand through this we will pass our final\ndata\nwe will simply use this object to add\nevery block using the block class that\nwe have created\nso I'm using this object uh to add the\nfirst block with the ID a\nso now we have created our first block\nwith the idea and like this I will\ncreate two more blocks with IDP and C\ncopying it\npasting to create two other blocks with\nidb and C\nblocks are created now we have to change\nthem\nso whatever block we have created we are\ngoing to convert them into a format of\ndictionary\nso whatever blocks we have created we\nare appending it to the chain that we\ncreated previously\nso this was our code for creating a\nblockchain so now it's created now we\nhave to run this code\nso now you can see it has generated\nthree blocks\nblock a Block B Block C now this is our\nblockchain you can see it has its own\nhash number and previous hash number\nso we can see data gen data and hash and\nprevious hash this is the overall of the\nblockchain now if we see clearly\nyou can see that the previous hash is\nsimilar to the hash number of the\nprevious block\nso here you can see the previous hash of\nas by default now previous hash of B is\nthe hash number of c and the previous\nhash of C is the hash number of B\nso now we have got a hash number and\nprevious hash number so this proves that\nwe have created a blockchain\nsuccessfully\nso this was just a small demonstration\nbut this gives you an idea that how\nactually blockchain is created how\ntransactions are stored in it in a huge\nlevel and how it actually maintains its\nprivacy so if you like this video then\nplease do share it with your friends and\nfamily this was the code and you can use\nit to add more blocks to it and if you\nhave any questions related to this code\nor to this video you can feel free to\nask in a comment section and our team\nwill reach out to you as soon as\npossible also do not forget to subscribe\nto my YouTube channel and hit the Bell\nicon to never miss an update for more\nsuch interesting videos thank you and\nkeep learning\nhi there if you like this video\nsubscribe to the simply learned YouTube\nchannel and click here to watch similar\nvideos turn it up and get certified\nclick here\nthank you\n",
  "words": [
    "foreign",
    "know",
    "blockchain",
    "one",
    "major",
    "tech",
    "stories",
    "past",
    "decade",
    "everyone",
    "seems",
    "talking",
    "beneath",
    "surface",
    "chatter",
    "always",
    "clear",
    "understanding",
    "blockchain",
    "video",
    "going",
    "know",
    "blockchain",
    "actually",
    "create",
    "blockchain",
    "understand",
    "fundamentals",
    "working",
    "blockchain",
    "hey",
    "everyone",
    "welcome",
    "new",
    "video",
    "simply",
    "learn",
    "create",
    "blockchain",
    "moving",
    "ahead",
    "subscribe",
    "youtube",
    "channel",
    "interesting",
    "videos",
    "hit",
    "bell",
    "icon",
    "never",
    "miss",
    "update",
    "simply",
    "learn",
    "also",
    "interested",
    "learn",
    "blockchain",
    "check",
    "blockchain",
    "course",
    "actually",
    "learn",
    "gather",
    "information",
    "live",
    "classes",
    "projects",
    "help",
    "build",
    "base",
    "reach",
    "higher",
    "levels",
    "career",
    "moving",
    "let",
    "see",
    "blockchain",
    "hell",
    "blockchain",
    "allows",
    "permanent",
    "immutable",
    "transparent",
    "recording",
    "data",
    "transaction",
    "turn",
    "makes",
    "possible",
    "exchange",
    "anything",
    "value",
    "whether",
    "fiscal",
    "item",
    "something",
    "less",
    "tangible",
    "blockchain",
    "technology",
    "enables",
    "sharing",
    "information",
    "data",
    "obviously",
    "stored",
    "database",
    "transactions",
    "recorded",
    "account",
    "book",
    "called",
    "ledger",
    "blockchain",
    "type",
    "distributed",
    "database",
    "ledger",
    "one",
    "today",
    "top",
    "trend",
    "means",
    "power",
    "update",
    "blockchain",
    "distributed",
    "nodes",
    "participants",
    "network",
    "raises",
    "question",
    "one",
    "actually",
    "create",
    "blockchain",
    "need",
    "network",
    "well",
    "let",
    "tell",
    "basic",
    "structure",
    "blockchain",
    "blockchain",
    "looks",
    "like",
    "block",
    "multiple",
    "transactions",
    "stored",
    "one",
    "go",
    "known",
    "data",
    "block",
    "identity",
    "id",
    "hash",
    "number",
    "previous",
    "hash",
    "number",
    "actually",
    "represents",
    "hash",
    "number",
    "previous",
    "block",
    "first",
    "block",
    "chain",
    "known",
    "genesis",
    "block",
    "whatever",
    "blocks",
    "get",
    "added",
    "resumes",
    "hash",
    "number",
    "previous",
    "blog",
    "previous",
    "hash",
    "number",
    "creates",
    "hash",
    "number",
    "mining",
    "works",
    "video",
    "going",
    "create",
    "exact",
    "replica",
    "blockchain",
    "let",
    "quickly",
    "jump",
    "code",
    "using",
    "pycharm",
    "online",
    "compiler",
    "compile",
    "code",
    "get",
    "output",
    "use",
    "online",
    "offline",
    "compiler",
    "according",
    "desirable",
    "coding",
    "language",
    "prefer",
    "using",
    "python",
    "code",
    "first",
    "create",
    "project",
    "uh",
    "giving",
    "project",
    "name",
    "blockchain",
    "actually",
    "click",
    "create",
    "project",
    "created",
    "project",
    "already",
    "created",
    "getting",
    "create",
    "option",
    "let",
    "start",
    "coding",
    "first",
    "create",
    "blog",
    "declare",
    "class",
    "name",
    "block",
    "define",
    "init",
    "function",
    "also",
    "declare",
    "hash",
    "data",
    "stored",
    "blog",
    "previous",
    "hash",
    "number",
    "input",
    "data",
    "self",
    "dot",
    "data",
    "equals",
    "data",
    "declare",
    "every",
    "parameter",
    "declared",
    "init",
    "function",
    "blog",
    "created",
    "know",
    "create",
    "blog",
    "create",
    "blockchain",
    "generate",
    "hash",
    "without",
    "uh",
    "able",
    "create",
    "blockchain",
    "every",
    "interlink",
    "block",
    "actually",
    "covers",
    "hash",
    "number",
    "previous",
    "block",
    "create",
    "hash",
    "generator",
    "declare",
    "hash",
    "generator",
    "library",
    "help",
    "us",
    "generate",
    "hash",
    "number",
    "know",
    "blockchain",
    "default",
    "uses",
    "sng",
    "256",
    "algorithm",
    "pass",
    "data",
    "convert",
    "whatever",
    "data",
    "fed",
    "hexadecimal",
    "format",
    "declared",
    "hash",
    "generator",
    "library",
    "actually",
    "take",
    "code",
    "data",
    "hexadecimal",
    "form",
    "know",
    "hash",
    "number",
    "generated",
    "format",
    "converting",
    "hexadecimal",
    "format",
    "create",
    "blockchain",
    "create",
    "class",
    "name",
    "blockchain",
    "know",
    "first",
    "block",
    "blockchain",
    "genesis",
    "block",
    "input",
    "hash",
    "last",
    "number",
    "previous",
    "hash",
    "number",
    "block",
    "use",
    "hash",
    "generator",
    "default",
    "declare",
    "previous",
    "hash",
    "number",
    "genesis",
    "block",
    "0",
    "first",
    "block",
    "previous",
    "block",
    "carry",
    "previous",
    "hash",
    "number",
    "id",
    "using",
    "hash",
    "generator",
    "get",
    "hexadecimal",
    "format",
    "hash",
    "number",
    "get",
    "hash",
    "number",
    "last",
    "chain",
    "generate",
    "hash",
    "number",
    "particular",
    "blog",
    "genesis",
    "block",
    "one",
    "thing",
    "every",
    "blog",
    "unique",
    "hash",
    "see",
    "even",
    "though",
    "hundreds",
    "thousands",
    "blocks",
    "attached",
    "hash",
    "number",
    "wo",
    "repeated",
    "every",
    "hash",
    "number",
    "unique",
    "maintain",
    "privacy",
    "blockchain",
    "anybody",
    "tries",
    "uh",
    "impact",
    "via",
    "ulterior",
    "motive",
    "wo",
    "able",
    "attaching",
    "another",
    "block",
    "blockchain",
    "need",
    "hash",
    "number",
    "genesis",
    "block",
    "previous",
    "hash",
    "number",
    "second",
    "block",
    "attached",
    "genesis",
    "block",
    "created",
    "create",
    "chain",
    "genesis",
    "block",
    "creating",
    "chain",
    "genesis",
    "block",
    "chain",
    "spot",
    "created",
    "add",
    "every",
    "block",
    "create",
    "another",
    "function",
    "class",
    "previous",
    "need",
    "previous",
    "hash",
    "number",
    "genesis",
    "block",
    "chain",
    "function",
    "actually",
    "retrieve",
    "previous",
    "hash",
    "number",
    "genesis",
    "block",
    "interlink",
    "blocks",
    "together",
    "technically",
    "like",
    "array",
    "genesis",
    "block",
    "already",
    "stored",
    "whatever",
    "data",
    "added",
    "last",
    "hash",
    "number",
    "whatever",
    "uh",
    "data",
    "stored",
    "last",
    "hash",
    "number",
    "retrieved",
    "first",
    "block",
    "generate",
    "particular",
    "blocks",
    "hash",
    "passing",
    "whatever",
    "data",
    "getting",
    "also",
    "last",
    "hash",
    "retrieved",
    "whatever",
    "data",
    "passing",
    "want",
    "make",
    "unique",
    "whatever",
    "data",
    "passed",
    "blog",
    "added",
    "last",
    "hash",
    "number",
    "like",
    "adding",
    "second",
    "block",
    "last",
    "hash",
    "number",
    "genesis",
    "proc",
    "added",
    "send",
    "hash",
    "generator",
    "retrieve",
    "final",
    "data",
    "create",
    "hexadecimal",
    "number",
    "one",
    "thing",
    "could",
    "uh",
    "passed",
    "data",
    "could",
    "passed",
    "previous",
    "hash",
    "number",
    "also",
    "needed",
    "add",
    "make",
    "data",
    "unique",
    "whatever",
    "data",
    "actually",
    "passed",
    "add",
    "hexadecimal",
    "also",
    "eliminate",
    "slightest",
    "chance",
    "making",
    "hash",
    "numbers",
    "similar",
    "passing",
    "data",
    "hash",
    "previous",
    "hash",
    "like",
    "added",
    "one",
    "block",
    "blockchain",
    "covered",
    "genesis",
    "blog",
    "another",
    "blog",
    "wanted",
    "create",
    "genesis",
    "block",
    "previous",
    "hash",
    "number",
    "attach",
    "chain",
    "whatever",
    "class",
    "created",
    "going",
    "use",
    "going",
    "use",
    "blockchain",
    "object",
    "variable",
    "pass",
    "final",
    "data",
    "simply",
    "use",
    "object",
    "add",
    "every",
    "block",
    "using",
    "block",
    "class",
    "created",
    "using",
    "object",
    "uh",
    "add",
    "first",
    "block",
    "id",
    "created",
    "first",
    "block",
    "idea",
    "like",
    "create",
    "two",
    "blocks",
    "idp",
    "c",
    "copying",
    "pasting",
    "create",
    "two",
    "blocks",
    "idb",
    "c",
    "blocks",
    "created",
    "change",
    "whatever",
    "block",
    "created",
    "going",
    "convert",
    "format",
    "dictionary",
    "whatever",
    "blocks",
    "created",
    "appending",
    "chain",
    "created",
    "previously",
    "code",
    "creating",
    "blockchain",
    "created",
    "run",
    "code",
    "see",
    "generated",
    "three",
    "blocks",
    "block",
    "block",
    "b",
    "block",
    "c",
    "blockchain",
    "see",
    "hash",
    "number",
    "previous",
    "hash",
    "number",
    "see",
    "data",
    "gen",
    "data",
    "hash",
    "previous",
    "hash",
    "overall",
    "blockchain",
    "see",
    "clearly",
    "see",
    "previous",
    "hash",
    "similar",
    "hash",
    "number",
    "previous",
    "block",
    "see",
    "previous",
    "hash",
    "default",
    "previous",
    "hash",
    "b",
    "hash",
    "number",
    "c",
    "previous",
    "hash",
    "c",
    "hash",
    "number",
    "b",
    "got",
    "hash",
    "number",
    "previous",
    "hash",
    "number",
    "proves",
    "created",
    "blockchain",
    "successfully",
    "small",
    "demonstration",
    "gives",
    "idea",
    "actually",
    "blockchain",
    "created",
    "transactions",
    "stored",
    "huge",
    "level",
    "actually",
    "maintains",
    "privacy",
    "like",
    "video",
    "please",
    "share",
    "friends",
    "family",
    "code",
    "use",
    "add",
    "blocks",
    "questions",
    "related",
    "code",
    "video",
    "feel",
    "free",
    "ask",
    "comment",
    "section",
    "team",
    "reach",
    "soon",
    "possible",
    "also",
    "forget",
    "subscribe",
    "youtube",
    "channel",
    "hit",
    "bell",
    "icon",
    "never",
    "miss",
    "update",
    "interesting",
    "videos",
    "thank",
    "keep",
    "learning",
    "hi",
    "like",
    "video",
    "subscribe",
    "simply",
    "learned",
    "youtube",
    "channel",
    "click",
    "watch",
    "similar",
    "videos",
    "turn",
    "get",
    "certified",
    "click",
    "thank"
  ],
  "keywords": [
    "know",
    "blockchain",
    "one",
    "video",
    "going",
    "actually",
    "create",
    "simply",
    "learn",
    "subscribe",
    "youtube",
    "channel",
    "videos",
    "update",
    "also",
    "let",
    "see",
    "data",
    "stored",
    "transactions",
    "need",
    "like",
    "block",
    "id",
    "hash",
    "number",
    "previous",
    "first",
    "chain",
    "genesis",
    "whatever",
    "blocks",
    "get",
    "added",
    "blog",
    "code",
    "using",
    "use",
    "project",
    "uh",
    "name",
    "click",
    "created",
    "declare",
    "class",
    "function",
    "every",
    "generate",
    "generator",
    "default",
    "hexadecimal",
    "format",
    "last",
    "unique",
    "another",
    "add",
    "passing",
    "passed",
    "similar",
    "object",
    "c",
    "b"
  ]
}