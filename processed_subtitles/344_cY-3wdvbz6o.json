{
  "text": "today I'll walk you through the software\ndevelopment lifecycle first we'll review\nmost common phases and then I will share\nseveral critical concepts that you must\nknow about sdlc so software development\nlifecycle or as DLC is just a sequence\nof project phases that you need to gear\nfree to create a software application\nyes there are common phases that we use\nto describe the process of software\ndevelopment however you can use\ndifferent names for the phases as well\ndon't focus too much on the names the\nwork and its nature are of importance\nhere usually a software development\nproject starts with the pre-sales phase\nit's not actually a project management\nphase but it's important phase for you\nas a project manager because lots of\ninitial agreements are made during this\nphase and you want to control them just\nkeep in mind that before the actual\nproject management phase start there is\na whole process of finding clients and\nselling them your services in large\nenterprise companies the process isn't\nthat far from the client vendor\nrelationships it's just an internal\nprocess of selecting which projects to\ninvest money after the contract is\nsigned you get into the initiation phase\nhere you need to identify what's the\ngoal of a project and its access\ncriteria even if you're under times in\nmaterials contract it's vital to get\nthrough this phase therefore you need to\ncreate a project charter Oh at least you\nneed to define the key information that\nit has I have an in-depth video on the\nproject chart and I strongly recommend\nyou reviewing it next I'll leave you a\nlink in the description second important\nstep is to identify key stakeholders why\nyou'll need a lot of input on many\naspects of software development user\ninterface user experience technical\ninformation hardware specifics\ndevelopment environment software\narchitecture and so on again don't\nexpect to get all these details from\nyour clients and customers you will need\nto include internal expertise including\nstakeholders outside of your team well\nthe result of this phase is usually\nassigned project charter once you have\nan understanding of the project and its\ngoals you can continue to the next phase\nconcept development phase there are many\ndifferent ways to develop a software\napplication I prefer to follow the\ndesign first approach so how does it\nwork first of all you need to develop a\nconceptual design and wireframes for the\nfuture application it shouldn't be fully\ndetailed but it should provide a\nframework for future requirements\ndefinition activities on the other hand\nit gives tangible results to your\nstakeholders they'll be more engaged in\nthe whole project when a difficult\nprocess of software development is\nsimplified to images of the future\nproduct another aspect of concept\ndevelopment is technical sometimes the\nrequired product is totally unique with\nhis requirements that don't have\nexisting examples and no available\nsolution will provide the desired\noutcome so you need to develop a brand\nnew technological concept you'll need to\ncurate the top subject matter experts in\nyour field to generate ideas and\nsolutions at least at the high level for\nreally big software development projects\nyou can break this phase into several\nadditional phases like actual concept\ndevelopment prototyping and feasibility\nphase therefore most of the times it's a\ngateway phase if you do have an\nacceptable solution you will continue\nthe project if the solution requires\nresources and time beyond constraints\nyou may need to cancel the project many\nprojects die at this gate the most\ncommon tangible is also these phase are\na decision to proceed a prototype or a\nselected approach to implement the\nproject next comes the requirements\ndefinition phase so after you plan how\nto manage the project you need to find\nout what you need to develop in this\nphase you can use all the available\noptions to define requirements like\nbrainstorming interviews focus groups\nquestionnaires and surveys document\nanalysis mind mapping wireframes user\nstories and\nmany other cool things there is no one\nspecific approach that fits all possible\ncases of collecting requirements in the\nend unit requirements that software\nengineers understand however sometimes a\nsimple tweak in the requirements can\ncause a significant change in the\nrequired efforts so you do want to keep\nan eye on on such opportunities to\nsimplify the future product so after\nthat you may want to incorporate\nhigh-level feasibility analysis here\nagain and there is also the requirements\nphase are written specifications use the\nstories or any other type of\nrequirements documentation once you have\nrequirements you'll move into the design\nphase again there are at least two\naspects here technical architecture and\nUI UX design if you didn't follow the\ndesign first approach you do it here\notherwise you finalize your designs in\nthese fates so during this phase you\nneed to analyze the collected\nrequirements after that develop an\narchitecture that will support them also\nyou need user interface that will make\nthe application or service usable the\nresults of this phase are mock-ups\nwireframes workflow diagrams\narchitectural description documentation\nlist of technologies frameworks and\nlibraries with all requirements\ncollected we can start the planning\nphase in large IT projects you will need\nto create a full project management plan\nso if you face such a task I recommend\nyou to review my in-depth article on\nproject planning I will leave you a link\nin the description however in the\nbeginning you work on smaller projects\nand planning will be simple here so\nhere's the truth for you many software\ndevelopment companies develop a custom\nproject management approach it's\nnaturally formed in the process of\ncompany growth so you'll need to follow\neither and utterly customized approach\nor a variation of scrum or Kanban in\nthis case project planning boils down to\nidentifying project scope estimation of\ntime and cost and setting milestones and\nsometimes you'll need to identify\nrequired resources and X\ntee's all other aspects of project\nmanagement will be predefined by the\ncustoms of this organization therefore\nat the end of this phase you either have\na project management plan or just come\ninto delivering specific score by\nspecific deadlines well the rest is\ninternal problem well your problem\nalright when you have the plane you can\nstart writing actual code and test cases\nthat's where we get into the development\nphase or implementation phase\nso in these phase you'll get into the\nday-to-day execution or the project plan\nso 21 opus will set up the working\nenvironment and will start writing the\ncode so you'll do the actual work of a\nproject manager here by organizing\npeople to do the work under the selected\nframework for the sake of the better\nquality and engage stakeholders you can\ndo it in iterative and incremental\nmanner most of IT projects use scrum\nscaled agile framework or Kanban so what\ndoes it mean for you if you are notice\nof - a development project manager you\ndevelop a working piece of the\napplication you'll show it to your\nstakeholders and after that your\nstakeholders will provide feedback\nyou'll integrate the changes to the\nproject scope and the cycle repeats\nuntil you get the desired application\nyeah it's different from construction\nprojects in software development we do\nchanges to the product in the process of\ndevelopment quite a lot however there is\na catch such an approach doesn't exempt\nyou from delivering the project on time\nand within budget\nyour clients will have higher deadlines\nand constraints you need to meet them\noptionally next you may have an\nintegration phase because nowadays you\nwill really see an application that\ndoesn't integrate with other services or\napplications in the enterprise\nenvironment you'll often see that in\nplease data and credentials are stored\nin separate service you may need to\nintegrate with it to get access to the\ndatabases of employees the storage space\nis often outsourced to one of the third\nparty providers like Amazon\nthe robots Microsoft and so on so you\nneed to integrate with them as well you\nknow you need to integrate your piece of\nsoftware with the business processes of\nthe company or a market in which you\nwill sell your application this phase\nusually requires a lot of collaboration\nand it can be time-consuming so you\nbetter plan this one ahead of time do\npay close attention to the possible\nrisks and integration requirements of\nother services well quite often the\nintegration is a part of development\nhowever if there are a lot of efforts\ninvolved it's better to get it done in a\nseparate phase all right once you have\nthe application ready you'll move into\nthe testing phase you can call this\nphase as acceptance testing or the final\ntesting you need to understand that you\nshould be testing your application\ncontinuously from the beginning moreover\nyou need to prevent defects in the\nprocess of development rather than\nfixing them ideally your application\nshould be stable and without serious\ndefects all the time so it's a matter of\nquality assurance that you planned and\nexecuted in all previous phases in this\nphase you need to certify that the\nversion of application you are testing\nis of the required quality it doesn't\nmean that the application has no defects\nat all they are present but they do not\nprevent people from using the\napplication and what's more important\nyour clients agree to this statement so\nyou do need to provide the list of all\nknown defects in the application as part\nof quality certificate it's the main\nresult of these phase after that we'll\nhave a deployment phase the software\ndoesn't work without hardware build at a\nserver a PC or Mac or a mobile device\nyou need to deliver your application or\nservice there moreover the deployment of\na big and complex application can be a\nproject in itself you need to set up\nservers upload the application connected\nwith all other services and servers and\nsometimes you need to migrate or update\nthe existing data in regards to mobile\ndevices and desktops\nyou need to create an installer for the\napplique\nyou may also need to submit the\napplication package to the market like\nApp Store or Google Play\nall you know the result of this phase is\nyour application or service available to\nthe end-users by the way if you find it\nher to understand all these concepts of\ndevelopment do check my article on the\ntechnical skills and IT project manager\nneeds I'll leave you a link in the\ndescription ok after that the project\ndoesn't end and it moves into the hyper\ncare phase this phase takes place for a\nfew weeks or months after an application\nhits the market large amounts of users\nstart using the app and they do find the\nfacts that you missed so your team will\nbe on the standby to fix any critical\ndefects next we'll have handoff closure\nor support phases the handoff process\ncan also require a lot of efforts first\nyou need to collect all the generated\nknowledge about the application and its\nspecifics and then you need to transfer\nthis knowledge to the support team also\nyou may need to create some\ndocumentation and implement specific\ncapabilities to administrate their\nservice and so on so if this is the case\nyou do need to identify such\nrequirements early on and I always\nrecommend that you think about handoff\nprocess at the beginning of the project\nok here's what I want you to understand\nany application is maintained and\nsupported throughout its whole lifetime\nit's a part of the product life cycle\nthat goes beyond the project lifecycle\nso usually project team hands off the\napplication to a small support team for\nongoing maintenance hey by the way the\nsponsor this video is my free career\nchange cheat sheet it's challenging and\noverwhelming to get your first project\nmanagement role in a tea industry this\ncheat sheet gives you an action plan to\nget promotion to a p.m. in the nearest\nfuture if you want to become an IT\nproject manager you need to get a copy\nof this cheat sheet link is in the\ndescription ok that's not all there are\nseveral crucial aspects of software\ndeveloper\nlife cycle that I want you to remember\nafter this video first of all sdlc is\nnot a waterfall model waterfall in\nproject management describes actual\napproach of how to sequence and work\nthrough phases software development life\ncycle is just a set of these phases and\nthe work you need to perform in them to\ncreate a software application so as DLC\ndescribe different in nature work that\nneeds to be done you can shape an order\nthis work in many different ways and\nWaterfall describes just one of the\npossible approaches to do it second\nphases who face DLC can overlap and go\nin parallel is I just told you\nWaterfall describes how to sequence the\nphases and in waterfall they go one\nafter another in a different time driven\nproject management approach phases can\noverlap this leads us to the point\nnumber three so what happens in agile\nframeworks even if you use some agile\napproach the SDLC stays in place you\nsimply organize the work in a different\nfashion you take some phases and break\nthem down into smaller pieces then you\ngroup these pieces from different phases\nand work on them in iterations rather\nthan as a one big face so don't mystify\nit next what is an agile project\nmanagement agile project management is\njust an approach in which some phases of\na project are done using scrum or Kanban\nit usually means that you perform\nexecution phases in an agile way if you\nwant to become a project manager do\ncheck the link in the description and\nget your copy of the career change teach\nit and do review other useful resources\nif you are new here subscribe to this\nchannel there will be more videos on\nproject management and leadership now\nit's your time to talk\ndo you work under scrum or Kanban right\nnow\nleave me a comment below this video\nthanks for watching see you next time\n",
  "words": [
    "today",
    "walk",
    "software",
    "development",
    "lifecycle",
    "first",
    "review",
    "common",
    "phases",
    "share",
    "several",
    "critical",
    "concepts",
    "must",
    "know",
    "sdlc",
    "software",
    "development",
    "lifecycle",
    "dlc",
    "sequence",
    "project",
    "phases",
    "need",
    "gear",
    "free",
    "create",
    "software",
    "application",
    "yes",
    "common",
    "phases",
    "use",
    "describe",
    "process",
    "software",
    "development",
    "however",
    "use",
    "different",
    "names",
    "phases",
    "well",
    "focus",
    "much",
    "names",
    "work",
    "nature",
    "importance",
    "usually",
    "software",
    "development",
    "project",
    "starts",
    "phase",
    "actually",
    "project",
    "management",
    "phase",
    "important",
    "phase",
    "project",
    "manager",
    "lots",
    "initial",
    "agreements",
    "made",
    "phase",
    "want",
    "control",
    "keep",
    "mind",
    "actual",
    "project",
    "management",
    "phase",
    "start",
    "whole",
    "process",
    "finding",
    "clients",
    "selling",
    "services",
    "large",
    "enterprise",
    "companies",
    "process",
    "far",
    "client",
    "vendor",
    "relationships",
    "internal",
    "process",
    "selecting",
    "projects",
    "invest",
    "money",
    "contract",
    "signed",
    "get",
    "initiation",
    "phase",
    "need",
    "identify",
    "goal",
    "project",
    "access",
    "criteria",
    "even",
    "times",
    "materials",
    "contract",
    "vital",
    "get",
    "phase",
    "therefore",
    "need",
    "create",
    "project",
    "charter",
    "oh",
    "least",
    "need",
    "define",
    "key",
    "information",
    "video",
    "project",
    "chart",
    "strongly",
    "recommend",
    "reviewing",
    "next",
    "leave",
    "link",
    "description",
    "second",
    "important",
    "step",
    "identify",
    "key",
    "stakeholders",
    "need",
    "lot",
    "input",
    "many",
    "aspects",
    "software",
    "development",
    "user",
    "interface",
    "user",
    "experience",
    "technical",
    "information",
    "hardware",
    "specifics",
    "development",
    "environment",
    "software",
    "architecture",
    "expect",
    "get",
    "details",
    "clients",
    "customers",
    "need",
    "include",
    "internal",
    "expertise",
    "including",
    "stakeholders",
    "outside",
    "team",
    "well",
    "result",
    "phase",
    "usually",
    "assigned",
    "project",
    "charter",
    "understanding",
    "project",
    "goals",
    "continue",
    "next",
    "phase",
    "concept",
    "development",
    "phase",
    "many",
    "different",
    "ways",
    "develop",
    "software",
    "application",
    "prefer",
    "follow",
    "design",
    "first",
    "approach",
    "work",
    "first",
    "need",
    "develop",
    "conceptual",
    "design",
    "wireframes",
    "future",
    "application",
    "fully",
    "detailed",
    "provide",
    "framework",
    "future",
    "requirements",
    "definition",
    "activities",
    "hand",
    "gives",
    "tangible",
    "results",
    "stakeholders",
    "engaged",
    "whole",
    "project",
    "difficult",
    "process",
    "software",
    "development",
    "simplified",
    "images",
    "future",
    "product",
    "another",
    "aspect",
    "concept",
    "development",
    "technical",
    "sometimes",
    "required",
    "product",
    "totally",
    "unique",
    "requirements",
    "existing",
    "examples",
    "available",
    "solution",
    "provide",
    "desired",
    "outcome",
    "need",
    "develop",
    "brand",
    "new",
    "technological",
    "concept",
    "need",
    "curate",
    "top",
    "subject",
    "matter",
    "experts",
    "field",
    "generate",
    "ideas",
    "solutions",
    "least",
    "high",
    "level",
    "really",
    "big",
    "software",
    "development",
    "projects",
    "break",
    "phase",
    "several",
    "additional",
    "phases",
    "like",
    "actual",
    "concept",
    "development",
    "prototyping",
    "feasibility",
    "phase",
    "therefore",
    "times",
    "gateway",
    "phase",
    "acceptable",
    "solution",
    "continue",
    "project",
    "solution",
    "requires",
    "resources",
    "time",
    "beyond",
    "constraints",
    "may",
    "need",
    "cancel",
    "project",
    "many",
    "projects",
    "die",
    "gate",
    "common",
    "tangible",
    "also",
    "phase",
    "decision",
    "proceed",
    "prototype",
    "selected",
    "approach",
    "implement",
    "project",
    "next",
    "comes",
    "requirements",
    "definition",
    "phase",
    "plan",
    "manage",
    "project",
    "need",
    "find",
    "need",
    "develop",
    "phase",
    "use",
    "available",
    "options",
    "define",
    "requirements",
    "like",
    "brainstorming",
    "interviews",
    "focus",
    "groups",
    "questionnaires",
    "surveys",
    "document",
    "analysis",
    "mind",
    "mapping",
    "wireframes",
    "user",
    "stories",
    "many",
    "cool",
    "things",
    "one",
    "specific",
    "approach",
    "fits",
    "possible",
    "cases",
    "collecting",
    "requirements",
    "end",
    "unit",
    "requirements",
    "software",
    "engineers",
    "understand",
    "however",
    "sometimes",
    "simple",
    "tweak",
    "requirements",
    "cause",
    "significant",
    "change",
    "required",
    "efforts",
    "want",
    "keep",
    "eye",
    "opportunities",
    "simplify",
    "future",
    "product",
    "may",
    "want",
    "incorporate",
    "feasibility",
    "analysis",
    "also",
    "requirements",
    "phase",
    "written",
    "specifications",
    "use",
    "stories",
    "type",
    "requirements",
    "documentation",
    "requirements",
    "move",
    "design",
    "phase",
    "least",
    "two",
    "aspects",
    "technical",
    "architecture",
    "ui",
    "ux",
    "design",
    "follow",
    "design",
    "first",
    "approach",
    "otherwise",
    "finalize",
    "designs",
    "fates",
    "phase",
    "need",
    "analyze",
    "collected",
    "requirements",
    "develop",
    "architecture",
    "support",
    "also",
    "need",
    "user",
    "interface",
    "make",
    "application",
    "service",
    "usable",
    "results",
    "phase",
    "wireframes",
    "workflow",
    "diagrams",
    "architectural",
    "description",
    "documentation",
    "list",
    "technologies",
    "frameworks",
    "libraries",
    "requirements",
    "collected",
    "start",
    "planning",
    "phase",
    "large",
    "projects",
    "need",
    "create",
    "full",
    "project",
    "management",
    "plan",
    "face",
    "task",
    "recommend",
    "review",
    "article",
    "project",
    "planning",
    "leave",
    "link",
    "description",
    "however",
    "beginning",
    "work",
    "smaller",
    "projects",
    "planning",
    "simple",
    "truth",
    "many",
    "software",
    "development",
    "companies",
    "develop",
    "custom",
    "project",
    "management",
    "approach",
    "naturally",
    "formed",
    "process",
    "company",
    "growth",
    "need",
    "follow",
    "either",
    "utterly",
    "customized",
    "approach",
    "variation",
    "scrum",
    "kanban",
    "case",
    "project",
    "planning",
    "boils",
    "identifying",
    "project",
    "scope",
    "estimation",
    "time",
    "cost",
    "setting",
    "milestones",
    "sometimes",
    "need",
    "identify",
    "required",
    "resources",
    "x",
    "tee",
    "aspects",
    "project",
    "management",
    "predefined",
    "customs",
    "organization",
    "therefore",
    "end",
    "phase",
    "either",
    "project",
    "management",
    "plan",
    "come",
    "delivering",
    "specific",
    "score",
    "specific",
    "deadlines",
    "well",
    "rest",
    "internal",
    "problem",
    "well",
    "problem",
    "alright",
    "plane",
    "start",
    "writing",
    "actual",
    "code",
    "test",
    "cases",
    "get",
    "development",
    "phase",
    "implementation",
    "phase",
    "phase",
    "get",
    "execution",
    "project",
    "plan",
    "21",
    "opus",
    "set",
    "working",
    "environment",
    "start",
    "writing",
    "code",
    "actual",
    "work",
    "project",
    "manager",
    "organizing",
    "people",
    "work",
    "selected",
    "framework",
    "sake",
    "better",
    "quality",
    "engage",
    "stakeholders",
    "iterative",
    "incremental",
    "manner",
    "projects",
    "use",
    "scrum",
    "scaled",
    "agile",
    "framework",
    "kanban",
    "mean",
    "notice",
    "development",
    "project",
    "manager",
    "develop",
    "working",
    "piece",
    "application",
    "show",
    "stakeholders",
    "stakeholders",
    "provide",
    "feedback",
    "integrate",
    "changes",
    "project",
    "scope",
    "cycle",
    "repeats",
    "get",
    "desired",
    "application",
    "yeah",
    "different",
    "construction",
    "projects",
    "software",
    "development",
    "changes",
    "product",
    "process",
    "development",
    "quite",
    "lot",
    "however",
    "catch",
    "approach",
    "exempt",
    "delivering",
    "project",
    "time",
    "within",
    "budget",
    "clients",
    "higher",
    "deadlines",
    "constraints",
    "need",
    "meet",
    "optionally",
    "next",
    "may",
    "integration",
    "phase",
    "nowadays",
    "really",
    "see",
    "application",
    "integrate",
    "services",
    "applications",
    "enterprise",
    "environment",
    "often",
    "see",
    "please",
    "data",
    "credentials",
    "stored",
    "separate",
    "service",
    "may",
    "need",
    "integrate",
    "get",
    "access",
    "databases",
    "employees",
    "storage",
    "space",
    "often",
    "outsourced",
    "one",
    "third",
    "party",
    "providers",
    "like",
    "amazon",
    "robots",
    "microsoft",
    "need",
    "integrate",
    "well",
    "know",
    "need",
    "integrate",
    "piece",
    "software",
    "business",
    "processes",
    "company",
    "market",
    "sell",
    "application",
    "phase",
    "usually",
    "requires",
    "lot",
    "collaboration",
    "better",
    "plan",
    "one",
    "ahead",
    "time",
    "pay",
    "close",
    "attention",
    "possible",
    "risks",
    "integration",
    "requirements",
    "services",
    "well",
    "quite",
    "often",
    "integration",
    "part",
    "development",
    "however",
    "lot",
    "efforts",
    "involved",
    "better",
    "get",
    "done",
    "separate",
    "phase",
    "right",
    "application",
    "ready",
    "move",
    "testing",
    "phase",
    "call",
    "phase",
    "acceptance",
    "testing",
    "final",
    "testing",
    "need",
    "understand",
    "testing",
    "application",
    "continuously",
    "beginning",
    "moreover",
    "need",
    "prevent",
    "defects",
    "process",
    "development",
    "rather",
    "fixing",
    "ideally",
    "application",
    "stable",
    "without",
    "serious",
    "defects",
    "time",
    "matter",
    "quality",
    "assurance",
    "planned",
    "executed",
    "previous",
    "phases",
    "phase",
    "need",
    "certify",
    "version",
    "application",
    "testing",
    "required",
    "quality",
    "mean",
    "application",
    "defects",
    "present",
    "prevent",
    "people",
    "using",
    "application",
    "important",
    "clients",
    "agree",
    "statement",
    "need",
    "provide",
    "list",
    "known",
    "defects",
    "application",
    "part",
    "quality",
    "certificate",
    "main",
    "result",
    "phase",
    "deployment",
    "phase",
    "software",
    "work",
    "without",
    "hardware",
    "build",
    "server",
    "pc",
    "mac",
    "mobile",
    "device",
    "need",
    "deliver",
    "application",
    "service",
    "moreover",
    "deployment",
    "big",
    "complex",
    "application",
    "project",
    "need",
    "set",
    "servers",
    "upload",
    "application",
    "connected",
    "services",
    "servers",
    "sometimes",
    "need",
    "migrate",
    "update",
    "existing",
    "data",
    "regards",
    "mobile",
    "devices",
    "desktops",
    "need",
    "create",
    "installer",
    "applique",
    "may",
    "also",
    "need",
    "submit",
    "application",
    "package",
    "market",
    "like",
    "app",
    "store",
    "google",
    "play",
    "know",
    "result",
    "phase",
    "application",
    "service",
    "available",
    "way",
    "find",
    "understand",
    "concepts",
    "development",
    "check",
    "article",
    "technical",
    "skills",
    "project",
    "manager",
    "needs",
    "leave",
    "link",
    "description",
    "ok",
    "project",
    "end",
    "moves",
    "hyper",
    "care",
    "phase",
    "phase",
    "takes",
    "place",
    "weeks",
    "months",
    "application",
    "hits",
    "market",
    "large",
    "amounts",
    "users",
    "start",
    "using",
    "app",
    "find",
    "facts",
    "missed",
    "team",
    "standby",
    "fix",
    "critical",
    "defects",
    "next",
    "handoff",
    "closure",
    "support",
    "phases",
    "handoff",
    "process",
    "also",
    "require",
    "lot",
    "efforts",
    "first",
    "need",
    "collect",
    "generated",
    "knowledge",
    "application",
    "specifics",
    "need",
    "transfer",
    "knowledge",
    "support",
    "team",
    "also",
    "may",
    "need",
    "create",
    "documentation",
    "implement",
    "specific",
    "capabilities",
    "administrate",
    "service",
    "case",
    "need",
    "identify",
    "requirements",
    "early",
    "always",
    "recommend",
    "think",
    "handoff",
    "process",
    "beginning",
    "project",
    "ok",
    "want",
    "understand",
    "application",
    "maintained",
    "supported",
    "throughout",
    "whole",
    "lifetime",
    "part",
    "product",
    "life",
    "cycle",
    "goes",
    "beyond",
    "project",
    "lifecycle",
    "usually",
    "project",
    "team",
    "hands",
    "application",
    "small",
    "support",
    "team",
    "ongoing",
    "maintenance",
    "hey",
    "way",
    "sponsor",
    "video",
    "free",
    "career",
    "change",
    "cheat",
    "sheet",
    "challenging",
    "overwhelming",
    "get",
    "first",
    "project",
    "management",
    "role",
    "tea",
    "industry",
    "cheat",
    "sheet",
    "gives",
    "action",
    "plan",
    "get",
    "promotion",
    "nearest",
    "future",
    "want",
    "become",
    "project",
    "manager",
    "need",
    "get",
    "copy",
    "cheat",
    "sheet",
    "link",
    "description",
    "ok",
    "several",
    "crucial",
    "aspects",
    "software",
    "developer",
    "life",
    "cycle",
    "want",
    "remember",
    "video",
    "first",
    "sdlc",
    "waterfall",
    "model",
    "waterfall",
    "project",
    "management",
    "describes",
    "actual",
    "approach",
    "sequence",
    "work",
    "phases",
    "software",
    "development",
    "life",
    "cycle",
    "set",
    "phases",
    "work",
    "need",
    "perform",
    "create",
    "software",
    "application",
    "dlc",
    "describe",
    "different",
    "nature",
    "work",
    "needs",
    "done",
    "shape",
    "order",
    "work",
    "many",
    "different",
    "ways",
    "waterfall",
    "describes",
    "one",
    "possible",
    "approaches",
    "second",
    "phases",
    "face",
    "dlc",
    "overlap",
    "go",
    "parallel",
    "told",
    "waterfall",
    "describes",
    "sequence",
    "phases",
    "waterfall",
    "go",
    "one",
    "another",
    "different",
    "time",
    "driven",
    "project",
    "management",
    "approach",
    "phases",
    "overlap",
    "leads",
    "us",
    "point",
    "number",
    "three",
    "happens",
    "agile",
    "frameworks",
    "even",
    "use",
    "agile",
    "approach",
    "sdlc",
    "stays",
    "place",
    "simply",
    "organize",
    "work",
    "different",
    "fashion",
    "take",
    "phases",
    "break",
    "smaller",
    "pieces",
    "group",
    "pieces",
    "different",
    "phases",
    "work",
    "iterations",
    "rather",
    "one",
    "big",
    "face",
    "mystify",
    "next",
    "agile",
    "project",
    "management",
    "agile",
    "project",
    "management",
    "approach",
    "phases",
    "project",
    "done",
    "using",
    "scrum",
    "kanban",
    "usually",
    "means",
    "perform",
    "execution",
    "phases",
    "agile",
    "way",
    "want",
    "become",
    "project",
    "manager",
    "check",
    "link",
    "description",
    "get",
    "copy",
    "career",
    "change",
    "teach",
    "review",
    "useful",
    "resources",
    "new",
    "subscribe",
    "channel",
    "videos",
    "project",
    "management",
    "leadership",
    "time",
    "talk",
    "work",
    "scrum",
    "kanban",
    "right",
    "leave",
    "comment",
    "video",
    "thanks",
    "watching",
    "see",
    "next",
    "time"
  ],
  "keywords": [
    "software",
    "development",
    "lifecycle",
    "first",
    "review",
    "common",
    "phases",
    "several",
    "know",
    "sdlc",
    "dlc",
    "sequence",
    "project",
    "need",
    "create",
    "application",
    "use",
    "process",
    "however",
    "different",
    "well",
    "work",
    "usually",
    "phase",
    "management",
    "important",
    "manager",
    "want",
    "actual",
    "start",
    "whole",
    "clients",
    "services",
    "large",
    "internal",
    "projects",
    "get",
    "identify",
    "therefore",
    "least",
    "video",
    "recommend",
    "next",
    "leave",
    "link",
    "description",
    "stakeholders",
    "lot",
    "many",
    "aspects",
    "user",
    "technical",
    "environment",
    "architecture",
    "team",
    "result",
    "concept",
    "develop",
    "follow",
    "design",
    "approach",
    "wireframes",
    "future",
    "provide",
    "framework",
    "requirements",
    "product",
    "sometimes",
    "required",
    "available",
    "solution",
    "big",
    "like",
    "resources",
    "time",
    "may",
    "also",
    "plan",
    "find",
    "one",
    "specific",
    "possible",
    "end",
    "understand",
    "change",
    "efforts",
    "documentation",
    "support",
    "service",
    "planning",
    "face",
    "beginning",
    "scrum",
    "kanban",
    "set",
    "better",
    "quality",
    "agile",
    "integrate",
    "cycle",
    "integration",
    "see",
    "often",
    "market",
    "part",
    "done",
    "testing",
    "defects",
    "using",
    "way",
    "ok",
    "handoff",
    "life",
    "cheat",
    "sheet",
    "waterfall",
    "describes"
  ]
}