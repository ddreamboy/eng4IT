{
  "text": "[Music]\nhello everyone and welcome to this video\non python frameworks by intellipaat\nall of us are somewhat aware of python's\npopularity among developers\nvarious stats show that python has\nbeaten java and made its own place on\nrankings but when it comes to working\nwith python one must be completely aware\nof which framework to use in order to\ncreate better applications that is\nexactly what i will be talking about in\nthis video before we begin the session\nmake sure to subscribe to our channel\nand press the bell icon so that you'll\nnever miss any update from us hello\neveryone and welcome to this video bind\ntelepath but before we begin do not\nforget to subscribe and hit the bell\nicon for more updates all of us are\nsomewhat aware of python's popularity\namong developers various starts show\nthat python has beaten java and made its\nown plays on rankings but when it comes\nto working with python one must be aware\nof which framework to use in order to\ncreate better applications that is\nexactly what i'll be talking about in\nthis video let's take a quick look at\nthe agenda firstly we'll see what is\npython then we move on to the benefits\nof using python then the disadvantages\nwhat does framework mean and then we'll\nsee why user framework after which we'll\nsee types of frameworks and then we'll\nsee the important python frameworks now\nlet's move on to our first agenda that\nis what is python python is a widely\nused and easy to understand\nobject-oriented programming language\ncreated by guido van rossum in the year\n1991. this high-level programming\nlanguage appeals to programmers because\nof its clear syntax adaptability gui\nsupport and portability features netflix\nfacebook reddit google and nasa are\namong the top technology companies that\nuse python for their application\nprojects now let's move on to our next\nagenda that is benefits of using python\nthe python scripting language provides a\nnumber of advantages to its users\nnonetheless here are some of the\npython's main benefits python is not\nonly simple to read and write but its\nenglish-like scripting syntax makes it a\npopular language to learn and maintain\npython apps are also built at a rapid\npace due to its simple coding structure\npython is also a versatile coding\nlanguage that can be used to create a\nvariety of online apps nonetheless many\nprogrammers believe it is the ideal\nsolution for security focused apps\nanother major advantage of python that\ndevelopers can reap the benefit of is\nits portability its code runs smoothly\non a variety of operating systems\nincluding mac os ios unix windows and\nlinux other programming languages such\nas java ruby c javascript and c plus\nplus can easily be integrated with it\nits assimilation with c called c python\nis also accessible on github with over\n39.7 k stars and 19.8 k forks python is\na free coding language which means that\nit may assist a wide range of\norganizations so whether you are a\nstartup a large corporation or a little\nbusiness you can benefit from this\nlanguage's high efficiency python is\nalso an established programming language\nwith a knowledgeable and helpful\ncommunity as a result if you have a code\nor project difficulty you may readily\nlocate various answers on or resources\non the internet databases browsers\nthreads documentation cgi and robotic\napp testing are all supported by its\nbroad library now let's move on to the\ndisadvantages python has several\nadvantages but it also has a few\ndisadvantages let's take a look at them\nalthough python is quick to script\napplications due to its simple coding\nstructure however when compared to other\nlanguages such as c plus javascript and\njava there are certain speed\ndifficulties especially when developers\ncompile code for large projects because\nit uses more memory it is a good choice\nfor programmers with restricted capacity\nunfortunately python has limited support\nfor mobile apps it may be an excellent\nchoice for developing online\napplications but it lacks the\nfunctionality required to develop mobile\napplications as a result it is not\nsuitable for mobile computing python's\nlayer for dealing with databases can be\nimproved as well and now that brings us\nto our next agenda that is what does\nframework mean a framework is a\ncollection of software modules tools and\nartifacts that provide theoretical and\ntechnical essential assistance in the\ndevelopment of application software\nthese frameworks could be utilized in\nthe construction of many applications in\nthe programming world yes frameworks\neight coders and avoiding errors and\nrepeating script the well-known\nframeworks for python based applications\ninclude django falcon web to pi bottle\nand cherry pie let's move on to our next\nagenda that is why use a framework\napplication or software development is a\nlengthy process that includes numerous\nprocesses such as testing developing\ncode designing apps and more programming\nframeworks are good for making these\nprocesses easier for software engineers\nas a result frameworks not only keep\nyour development operations organized\nbut they also give the necessary\nstructural support for your coding now\nlet's look at the main reasons to\nprogram with a framework less\ndevelopment time the ability of a\nframework to reduce development time is\nthe primary register for its use by\noffering support for error session and\ndata handling coders will save time and\neffort developers don't have to worry\nabout authentic logic or data\nsanitization while using a framework\nbecause these functions are handled for\nthem next we have improves the\nefficiency of the development process\nthe framework also organizes the app's\nfeatures properly the framework handles\ninterface files and web directories\nautonomously using business logic so\ndevelopers don't have to bother about\narranging different files next we have\nsafeguards the code frameworks also\nprovide developers with excellent code\nsecurity programmers don't have to worry\nabout a cyber attack on the app script\nif they use a good framework frameworks\nin particular provide excellent security\nwhile designing web applications next we\nhave community assistance the majority\nof frameworks like computer languages\nare open source and have large\ncommunities these forums provide answers\nand resources to aid fellow programmers\nwho are new to the field next up we have\ncrude the four core functions of crude\nare also included in framework you may\neasily create read update and delete\ndata here in addition framework\nlibraries make it simple to manage\nsessions approach databases manage\ncookies and html pages all the templates\nand so on next up we have productivity\nis increased frameworks encourage rapid\ndevelopment app deployment and code\nreuse as a result it accelerates the\ndevelopment of your software the\nultimate benefit of fast app development\nthat coders get while using frameworks\nis increased productivity and lastly we\nhave here suitable for collaboration\nanother advantage of adopting a\nframework is its ability to facilitate\nteamwork frameworks will provide several\nbenefits especially if you're working\nwith large teams of engineers remotely\nsimilarly your database professionals\nmay handle data related duties and\nexperienced developers can create long\nlasting plugins libraries and other\nsoftwares now let's move on to our next\nagenda that is types of frameworks\npython frameworks are usually classified\ninto three groups we'll go over them in\ndetail firstly we have full stack\nframework a full stack framework is a\nstructure or system that is utilized to\nmeet all development requirements this\nis essentially a one-stop shop for\nprogrammers who want to create and\nmaintain client and server site\ninterfaces because it addresses all\ndevelopment related difficulties this\nframework is often known as enterprise\nframework django web to pi and pyramid\nare all solid full stack python\nframeworks that businesses and\ndevelopers should consider for their\nprojects next up we have micro framework\nmicro framework is a lightweight app\ndevelopment framework with a set of\nfunctionalities to create an application\ncoders typically mix a micro framework\nwith a full stack framework\nunfortunately these frameworks lack form\nvalidation database abstraction input\ncleanliness authentication and a web\ntemplate engine the primary python micro\nframework such as bottle flask and\nfalcon are only used by developers when\nthey require critical development\ncomponents lastly we have asynchronous\nframeworks although asynchronous\nprogramming is an old method of creating\napplications its use in python has\nincreased in recent years in comparison\nto the underlying app threads it is\nessentially parallel computation that\nworks independently it's typically\nutilized when programmers need to merge\nmany networks that already exist aio\nhttp and sanik are reliable asynchronous\nframeworks that python programmers can\nemploy in their projects with that we\nwill move on to our last agenda that is\nimportant python frameworks let's take a\nlook at the first python framework it is\nflask flask is a python micro framework\nthat was released in the year 2010. it\nhas robust api support in the ide as\nwell as advanced capabilities like\nreal-time visual debugging it also has\nback-end database administration\nfeatures it is considerably easier to\nlearn because it has a simple toolbox\nnext we have django django is a full\nstack programming framework that is one\nof the most popular on the market it\ncontains a lot of distinguishing\nfeatures such as a large number of\nbuilt-in libraries and the usage of the\norm technique for database management it\nis also one of the most well optimized\nand speedy frameworks in the market that\nfocuses on security next we have web to\npi web to pi is a python framework for\nfull stack development that has a lot of\nfeatures a code editor debugger and\ndeployment engine are included this\npython framework also includes a\nweb-based development engine that makes\nit easy to add speed and flexibility to\nany project next we will talk about\nfalcon falcon uses wsgi to make it\nsimple to construct apis and code on the\nback end as a result it is one of the\nquickest ways to code within an app\nvalden's design is based on http and\nrest making it a more straightforward\nsolution for experienced programmers in\nthis field next we'll talk about dash\ndash is a popular python framework for\ndeveloping online apps because it works\nwith flask to process requests over http\ndash is perfect for data management\ndevelopers it can quickly deliver\ncross-platform apps and supports flask\nplugins next we have cubic web cubic web\nis a full stock python framework that is\nopen source and freely available instead\nof using traditional methods cubic web\nemploys a cubicle method which combines\nseveral components in one place and\nturns the program into a powerhouse\ncomplete with configuration a back-end\ndatabase and a web server next we'll\ntalk about aio http it is an\nasynchronous http client server for the\npython framework it uses the asynchro\nlibrary and supports python versions\nhigher than 3.5 it contains a variety of\ncharacteristics that aid in the faster\nand more efficient processing of\nrequests and results next we have steady\npi cheripai is a popular open source\nframework that has been around since\n2002 this was created with the intention\nof being a simple way to implement the\npython's framework vast capabilities\nbecause it is a mature framework it can\nhandle previous python versions allowing\ndevelopers to use old libraries next\nwe'll talk about jotto joto is an mvc\nbased framework that focuses on a\nfunctional application foundation it\nenables the coder to start from scratch\nconcentrating on functionality and\ndeploying alongside the front end this\npromotes a clean style which reduces\ncode complexity over time it also aids\nin the development of a steady tempo\nprior to deployment lastly we'll talk\nabout bottle bottle is one of the\nlightest python frameworks accessible as\neach project source code is\nsubstantially less this micro framework\nis useful not just for creating apis but\nalso for developing smaller web apps and\nthat's it for this video thank you for\nwatching please don't forget to\nsubscribe to our channel and hit the\nbell icon for more updates if you want\nto make a career in data science then\nintellipaat has iit madras advanced data\nscience and ai certification program\nthis course is of very high quality and\ncost effective as it is taught by iit\nprofessors and industry experts\n",
  "words": [
    "music",
    "hello",
    "everyone",
    "welcome",
    "video",
    "python",
    "frameworks",
    "intellipaat",
    "us",
    "somewhat",
    "aware",
    "python",
    "popularity",
    "among",
    "developers",
    "various",
    "stats",
    "show",
    "python",
    "beaten",
    "java",
    "made",
    "place",
    "rankings",
    "comes",
    "working",
    "python",
    "one",
    "must",
    "completely",
    "aware",
    "framework",
    "use",
    "order",
    "create",
    "better",
    "applications",
    "exactly",
    "talking",
    "video",
    "begin",
    "session",
    "make",
    "sure",
    "subscribe",
    "channel",
    "press",
    "bell",
    "icon",
    "never",
    "miss",
    "update",
    "us",
    "hello",
    "everyone",
    "welcome",
    "video",
    "bind",
    "telepath",
    "begin",
    "forget",
    "subscribe",
    "hit",
    "bell",
    "icon",
    "updates",
    "us",
    "somewhat",
    "aware",
    "python",
    "popularity",
    "among",
    "developers",
    "various",
    "starts",
    "show",
    "python",
    "beaten",
    "java",
    "made",
    "plays",
    "rankings",
    "comes",
    "working",
    "python",
    "one",
    "must",
    "aware",
    "framework",
    "use",
    "order",
    "create",
    "better",
    "applications",
    "exactly",
    "talking",
    "video",
    "let",
    "take",
    "quick",
    "look",
    "agenda",
    "firstly",
    "see",
    "python",
    "move",
    "benefits",
    "using",
    "python",
    "disadvantages",
    "framework",
    "mean",
    "see",
    "user",
    "framework",
    "see",
    "types",
    "frameworks",
    "see",
    "important",
    "python",
    "frameworks",
    "let",
    "move",
    "first",
    "agenda",
    "python",
    "python",
    "widely",
    "used",
    "easy",
    "understand",
    "programming",
    "language",
    "created",
    "guido",
    "van",
    "rossum",
    "year",
    "programming",
    "language",
    "appeals",
    "programmers",
    "clear",
    "syntax",
    "adaptability",
    "gui",
    "support",
    "portability",
    "features",
    "netflix",
    "facebook",
    "reddit",
    "google",
    "nasa",
    "among",
    "top",
    "technology",
    "companies",
    "use",
    "python",
    "application",
    "projects",
    "let",
    "move",
    "next",
    "agenda",
    "benefits",
    "using",
    "python",
    "python",
    "scripting",
    "language",
    "provides",
    "number",
    "advantages",
    "users",
    "nonetheless",
    "python",
    "main",
    "benefits",
    "python",
    "simple",
    "read",
    "write",
    "scripting",
    "syntax",
    "makes",
    "popular",
    "language",
    "learn",
    "maintain",
    "python",
    "apps",
    "also",
    "built",
    "rapid",
    "pace",
    "due",
    "simple",
    "coding",
    "structure",
    "python",
    "also",
    "versatile",
    "coding",
    "language",
    "used",
    "create",
    "variety",
    "online",
    "apps",
    "nonetheless",
    "many",
    "programmers",
    "believe",
    "ideal",
    "solution",
    "security",
    "focused",
    "apps",
    "another",
    "major",
    "advantage",
    "python",
    "developers",
    "reap",
    "benefit",
    "portability",
    "code",
    "runs",
    "smoothly",
    "variety",
    "operating",
    "systems",
    "including",
    "mac",
    "os",
    "ios",
    "unix",
    "windows",
    "linux",
    "programming",
    "languages",
    "java",
    "ruby",
    "c",
    "javascript",
    "c",
    "plus",
    "plus",
    "easily",
    "integrated",
    "assimilation",
    "c",
    "called",
    "c",
    "python",
    "also",
    "accessible",
    "github",
    "k",
    "stars",
    "k",
    "forks",
    "python",
    "free",
    "coding",
    "language",
    "means",
    "may",
    "assist",
    "wide",
    "range",
    "organizations",
    "whether",
    "startup",
    "large",
    "corporation",
    "little",
    "business",
    "benefit",
    "language",
    "high",
    "efficiency",
    "python",
    "also",
    "established",
    "programming",
    "language",
    "knowledgeable",
    "helpful",
    "community",
    "result",
    "code",
    "project",
    "difficulty",
    "may",
    "readily",
    "locate",
    "various",
    "answers",
    "resources",
    "internet",
    "databases",
    "browsers",
    "threads",
    "documentation",
    "cgi",
    "robotic",
    "app",
    "testing",
    "supported",
    "broad",
    "library",
    "let",
    "move",
    "disadvantages",
    "python",
    "several",
    "advantages",
    "also",
    "disadvantages",
    "let",
    "take",
    "look",
    "although",
    "python",
    "quick",
    "script",
    "applications",
    "due",
    "simple",
    "coding",
    "structure",
    "however",
    "compared",
    "languages",
    "c",
    "plus",
    "javascript",
    "java",
    "certain",
    "speed",
    "difficulties",
    "especially",
    "developers",
    "compile",
    "code",
    "large",
    "projects",
    "uses",
    "memory",
    "good",
    "choice",
    "programmers",
    "restricted",
    "capacity",
    "unfortunately",
    "python",
    "limited",
    "support",
    "mobile",
    "apps",
    "may",
    "excellent",
    "choice",
    "developing",
    "online",
    "applications",
    "lacks",
    "functionality",
    "required",
    "develop",
    "mobile",
    "applications",
    "result",
    "suitable",
    "mobile",
    "computing",
    "python",
    "layer",
    "dealing",
    "databases",
    "improved",
    "well",
    "brings",
    "us",
    "next",
    "agenda",
    "framework",
    "mean",
    "framework",
    "collection",
    "software",
    "modules",
    "tools",
    "artifacts",
    "provide",
    "theoretical",
    "technical",
    "essential",
    "assistance",
    "development",
    "application",
    "software",
    "frameworks",
    "could",
    "utilized",
    "construction",
    "many",
    "applications",
    "programming",
    "world",
    "yes",
    "frameworks",
    "eight",
    "coders",
    "avoiding",
    "errors",
    "repeating",
    "script",
    "frameworks",
    "python",
    "based",
    "applications",
    "include",
    "django",
    "falcon",
    "web",
    "pi",
    "bottle",
    "cherry",
    "pie",
    "let",
    "move",
    "next",
    "agenda",
    "use",
    "framework",
    "application",
    "software",
    "development",
    "lengthy",
    "process",
    "includes",
    "numerous",
    "processes",
    "testing",
    "developing",
    "code",
    "designing",
    "apps",
    "programming",
    "frameworks",
    "good",
    "making",
    "processes",
    "easier",
    "software",
    "engineers",
    "result",
    "frameworks",
    "keep",
    "development",
    "operations",
    "organized",
    "also",
    "give",
    "necessary",
    "structural",
    "support",
    "coding",
    "let",
    "look",
    "main",
    "reasons",
    "program",
    "framework",
    "less",
    "development",
    "time",
    "ability",
    "framework",
    "reduce",
    "development",
    "time",
    "primary",
    "register",
    "use",
    "offering",
    "support",
    "error",
    "session",
    "data",
    "handling",
    "coders",
    "save",
    "time",
    "effort",
    "developers",
    "worry",
    "authentic",
    "logic",
    "data",
    "sanitization",
    "using",
    "framework",
    "functions",
    "handled",
    "next",
    "improves",
    "efficiency",
    "development",
    "process",
    "framework",
    "also",
    "organizes",
    "app",
    "features",
    "properly",
    "framework",
    "handles",
    "interface",
    "files",
    "web",
    "directories",
    "autonomously",
    "using",
    "business",
    "logic",
    "developers",
    "bother",
    "arranging",
    "different",
    "files",
    "next",
    "safeguards",
    "code",
    "frameworks",
    "also",
    "provide",
    "developers",
    "excellent",
    "code",
    "security",
    "programmers",
    "worry",
    "cyber",
    "attack",
    "app",
    "script",
    "use",
    "good",
    "framework",
    "frameworks",
    "particular",
    "provide",
    "excellent",
    "security",
    "designing",
    "web",
    "applications",
    "next",
    "community",
    "assistance",
    "majority",
    "frameworks",
    "like",
    "computer",
    "languages",
    "open",
    "source",
    "large",
    "communities",
    "forums",
    "provide",
    "answers",
    "resources",
    "aid",
    "fellow",
    "programmers",
    "new",
    "field",
    "next",
    "crude",
    "four",
    "core",
    "functions",
    "crude",
    "also",
    "included",
    "framework",
    "may",
    "easily",
    "create",
    "read",
    "update",
    "delete",
    "data",
    "addition",
    "framework",
    "libraries",
    "make",
    "simple",
    "manage",
    "sessions",
    "approach",
    "databases",
    "manage",
    "cookies",
    "html",
    "pages",
    "templates",
    "next",
    "productivity",
    "increased",
    "frameworks",
    "encourage",
    "rapid",
    "development",
    "app",
    "deployment",
    "code",
    "reuse",
    "result",
    "accelerates",
    "development",
    "software",
    "ultimate",
    "benefit",
    "fast",
    "app",
    "development",
    "coders",
    "get",
    "using",
    "frameworks",
    "increased",
    "productivity",
    "lastly",
    "suitable",
    "collaboration",
    "another",
    "advantage",
    "adopting",
    "framework",
    "ability",
    "facilitate",
    "teamwork",
    "frameworks",
    "provide",
    "several",
    "benefits",
    "especially",
    "working",
    "large",
    "teams",
    "engineers",
    "remotely",
    "similarly",
    "database",
    "professionals",
    "may",
    "handle",
    "data",
    "related",
    "duties",
    "experienced",
    "developers",
    "create",
    "long",
    "lasting",
    "plugins",
    "libraries",
    "softwares",
    "let",
    "move",
    "next",
    "agenda",
    "types",
    "frameworks",
    "python",
    "frameworks",
    "usually",
    "classified",
    "three",
    "groups",
    "go",
    "detail",
    "firstly",
    "full",
    "stack",
    "framework",
    "full",
    "stack",
    "framework",
    "structure",
    "system",
    "utilized",
    "meet",
    "development",
    "requirements",
    "essentially",
    "shop",
    "programmers",
    "want",
    "create",
    "maintain",
    "client",
    "server",
    "site",
    "interfaces",
    "addresses",
    "development",
    "related",
    "difficulties",
    "framework",
    "often",
    "known",
    "enterprise",
    "framework",
    "django",
    "web",
    "pi",
    "pyramid",
    "solid",
    "full",
    "stack",
    "python",
    "frameworks",
    "businesses",
    "developers",
    "consider",
    "projects",
    "next",
    "micro",
    "framework",
    "micro",
    "framework",
    "lightweight",
    "app",
    "development",
    "framework",
    "set",
    "functionalities",
    "create",
    "application",
    "coders",
    "typically",
    "mix",
    "micro",
    "framework",
    "full",
    "stack",
    "framework",
    "unfortunately",
    "frameworks",
    "lack",
    "form",
    "validation",
    "database",
    "abstraction",
    "input",
    "cleanliness",
    "authentication",
    "web",
    "template",
    "engine",
    "primary",
    "python",
    "micro",
    "framework",
    "bottle",
    "flask",
    "falcon",
    "used",
    "developers",
    "require",
    "critical",
    "development",
    "components",
    "lastly",
    "asynchronous",
    "frameworks",
    "although",
    "asynchronous",
    "programming",
    "old",
    "method",
    "creating",
    "applications",
    "use",
    "python",
    "increased",
    "recent",
    "years",
    "comparison",
    "underlying",
    "app",
    "threads",
    "essentially",
    "parallel",
    "computation",
    "works",
    "independently",
    "typically",
    "utilized",
    "programmers",
    "need",
    "merge",
    "many",
    "networks",
    "already",
    "exist",
    "aio",
    "http",
    "sanik",
    "reliable",
    "asynchronous",
    "frameworks",
    "python",
    "programmers",
    "employ",
    "projects",
    "move",
    "last",
    "agenda",
    "important",
    "python",
    "frameworks",
    "let",
    "take",
    "look",
    "first",
    "python",
    "framework",
    "flask",
    "flask",
    "python",
    "micro",
    "framework",
    "released",
    "year",
    "robust",
    "api",
    "support",
    "ide",
    "well",
    "advanced",
    "capabilities",
    "like",
    "visual",
    "debugging",
    "also",
    "database",
    "administration",
    "features",
    "considerably",
    "easier",
    "learn",
    "simple",
    "toolbox",
    "next",
    "django",
    "django",
    "full",
    "stack",
    "programming",
    "framework",
    "one",
    "popular",
    "market",
    "contains",
    "lot",
    "distinguishing",
    "features",
    "large",
    "number",
    "libraries",
    "usage",
    "orm",
    "technique",
    "database",
    "management",
    "also",
    "one",
    "well",
    "optimized",
    "speedy",
    "frameworks",
    "market",
    "focuses",
    "security",
    "next",
    "web",
    "pi",
    "web",
    "pi",
    "python",
    "framework",
    "full",
    "stack",
    "development",
    "lot",
    "features",
    "code",
    "editor",
    "debugger",
    "deployment",
    "engine",
    "included",
    "python",
    "framework",
    "also",
    "includes",
    "development",
    "engine",
    "makes",
    "easy",
    "add",
    "speed",
    "flexibility",
    "project",
    "next",
    "talk",
    "falcon",
    "falcon",
    "uses",
    "wsgi",
    "make",
    "simple",
    "construct",
    "apis",
    "code",
    "back",
    "end",
    "result",
    "one",
    "quickest",
    "ways",
    "code",
    "within",
    "app",
    "valden",
    "design",
    "based",
    "http",
    "rest",
    "making",
    "straightforward",
    "solution",
    "experienced",
    "programmers",
    "field",
    "next",
    "talk",
    "dash",
    "dash",
    "popular",
    "python",
    "framework",
    "developing",
    "online",
    "apps",
    "works",
    "flask",
    "process",
    "requests",
    "http",
    "dash",
    "perfect",
    "data",
    "management",
    "developers",
    "quickly",
    "deliver",
    "apps",
    "supports",
    "flask",
    "plugins",
    "next",
    "cubic",
    "web",
    "cubic",
    "web",
    "full",
    "stock",
    "python",
    "framework",
    "open",
    "source",
    "freely",
    "available",
    "instead",
    "using",
    "traditional",
    "methods",
    "cubic",
    "web",
    "employs",
    "cubicle",
    "method",
    "combines",
    "several",
    "components",
    "one",
    "place",
    "turns",
    "program",
    "powerhouse",
    "complete",
    "configuration",
    "database",
    "web",
    "server",
    "next",
    "talk",
    "aio",
    "http",
    "asynchronous",
    "http",
    "client",
    "server",
    "python",
    "framework",
    "uses",
    "asynchro",
    "library",
    "supports",
    "python",
    "versions",
    "higher",
    "contains",
    "variety",
    "characteristics",
    "aid",
    "faster",
    "efficient",
    "processing",
    "requests",
    "results",
    "next",
    "steady",
    "pi",
    "cheripai",
    "popular",
    "open",
    "source",
    "framework",
    "around",
    "since",
    "2002",
    "created",
    "intention",
    "simple",
    "way",
    "implement",
    "python",
    "framework",
    "vast",
    "capabilities",
    "mature",
    "framework",
    "handle",
    "previous",
    "python",
    "versions",
    "allowing",
    "developers",
    "use",
    "old",
    "libraries",
    "next",
    "talk",
    "jotto",
    "joto",
    "mvc",
    "based",
    "framework",
    "focuses",
    "functional",
    "application",
    "foundation",
    "enables",
    "coder",
    "start",
    "scratch",
    "concentrating",
    "functionality",
    "deploying",
    "alongside",
    "front",
    "end",
    "promotes",
    "clean",
    "style",
    "reduces",
    "code",
    "complexity",
    "time",
    "also",
    "aids",
    "development",
    "steady",
    "tempo",
    "prior",
    "deployment",
    "lastly",
    "talk",
    "bottle",
    "bottle",
    "one",
    "lightest",
    "python",
    "frameworks",
    "accessible",
    "project",
    "source",
    "code",
    "substantially",
    "less",
    "micro",
    "framework",
    "useful",
    "creating",
    "apis",
    "also",
    "developing",
    "smaller",
    "web",
    "apps",
    "video",
    "thank",
    "watching",
    "please",
    "forget",
    "subscribe",
    "channel",
    "hit",
    "bell",
    "icon",
    "updates",
    "want",
    "make",
    "career",
    "data",
    "science",
    "intellipaat",
    "iit",
    "madras",
    "advanced",
    "data",
    "science",
    "ai",
    "certification",
    "program",
    "course",
    "high",
    "quality",
    "cost",
    "effective",
    "taught",
    "iit",
    "professors",
    "industry",
    "experts"
  ],
  "keywords": [
    "video",
    "python",
    "frameworks",
    "us",
    "aware",
    "among",
    "developers",
    "various",
    "java",
    "working",
    "one",
    "framework",
    "use",
    "create",
    "applications",
    "make",
    "subscribe",
    "bell",
    "icon",
    "let",
    "take",
    "look",
    "agenda",
    "see",
    "move",
    "benefits",
    "using",
    "disadvantages",
    "used",
    "programming",
    "language",
    "programmers",
    "support",
    "features",
    "application",
    "projects",
    "next",
    "simple",
    "popular",
    "apps",
    "also",
    "coding",
    "structure",
    "variety",
    "online",
    "many",
    "security",
    "benefit",
    "code",
    "languages",
    "c",
    "plus",
    "may",
    "large",
    "result",
    "project",
    "databases",
    "app",
    "several",
    "script",
    "uses",
    "good",
    "mobile",
    "excellent",
    "developing",
    "well",
    "software",
    "provide",
    "development",
    "utilized",
    "coders",
    "based",
    "django",
    "falcon",
    "web",
    "pi",
    "bottle",
    "process",
    "program",
    "time",
    "data",
    "open",
    "source",
    "libraries",
    "increased",
    "deployment",
    "lastly",
    "database",
    "full",
    "stack",
    "server",
    "micro",
    "engine",
    "flask",
    "asynchronous",
    "http",
    "talk",
    "dash",
    "cubic"
  ]
}