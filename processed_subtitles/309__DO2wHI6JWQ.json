{
  "text": "in this video we're going to create a\nRaspberry Pi iot or Internet of Things\nserver which will allow you to collect\nany kind of sensor data you like send it\nover your network to this Raspberry Pi\nserver and visualize it on a nice\nlooking grafana dashboard\nin our example we're going to use an\nArduino Uno paired with a BME 680 sensor\nto collect the temperature pressure\nhumidity and air quality data every two\nor so seconds\nthis data is wrapped into a Json message\nand is sent over our Network to the\nserver that we're going to create in\nthis video and that's done via the mqtt\nmessage protocol\nin this video we're going to focus on\nthe server aspects of this application\nif you want more information about the\nsensor node let us know in the comments\nif you want a follow-up video\nspecializing in that we do have the\nsource code Linked In the description as\nwell if you want to have a poke around\nall in all this project should take you\nroughly half an hour to an hour to\nimplement from a top level view this\nsystem could consist of a series of\nsensor nodes that send data in a Json\nmessage over your network to this\nRaspberry Pi via the mqtt network\nprotocol and the mqtt protocol is a is\nbasically where a client publishes data\nto a broker or a server such as mosquito\nthis is the application we're going to\nbe using in this video and that broker\npushes the data that has been sent to it\nto any client that has subscribed to\nthat topic a topic is essentially a way\nto categorize the data that has been\nsent\nfor example I have this sensor in my\noffice so I could use a topic such as\nhome office and any client that is\nsubscribed to home slash office will be\nforwarded the mqt T message that is sent\nto the broker in our implementation an\napplication called node-red will\nsubscribe to this topic interpret the\nJson message data and then send the data\nto a database to be stored and\neventually used\nin this case we're going to use influxdb\nto store the sensor data and then we're\ngoing to use a grafana front end which\nis going to query the database in order\nto display the data we want to see and\nin a nice format\nso on our Raspberry Pi server we're\ngoing to need four main applications\nthis is mosquito the mqtt broker\nnode-red\ninfluxdb and grafana\nwe are going to run these applications\nwithin containers using docker running\nan application inside a container means\nit's really quick to set up and deploy\neither to deploy again on the same\ndevice on different devices and to\nremove or manage certain applications\ncontainers are not quite virtual\nmachines as virtual machines emulate a\nmachine all the way down to the system\nHardware whereas a container runs above\nthe operating system it's not as\nconfusing as it sounds if you haven't\nused Docker before so don't worry as\nwe're going to use a program called iot\nstack to get the containers ready for us\nto use and that makes the process super\nsimple\nbefore we get into the tutorial covering\nhow to implement this please do consider\nsubscribing if this video is going to\nhelp you out we have a number of\ninteresting iot videos coming up such as\na review of this drop-in dip replacement\nfor the Arduino Uno which adds Wi-Fi\nfunctionality straight onto the board so\nstay tuned for that\nokay so we are starting with a fresh\ninstall of headless raspbian OS so\nthat's the 64-bit light version\nand we've enabled SSH\nwe have a video Linked In the cards\nabove if you need to find out how to set\nthat up I should note that you will need\na static IP address for your Raspberry\nPi and you can do this by adjusting the\nDHCP configuration as mentioned in that\nvideo\nthe first thing I'm going to do is\nupdate everything with sudo apt updates\nand sudo apt upgrade\nthen we're going to download iot stack\nusing the this curl command this will\nalso install Docker Docker compose and\nsome other necessary packages that you\nmight need so if you get a prompt\ntelling you to install something just\nsay yes to those\nthis might take a little time to\ndownload and install but once it's\nfinished it will prompt you to restart\nand you can do this via with sudo\nshutdown minus r now it's important that\nyou do restart so that all the\nenvironment variables are set correctly\nyou'll get a few errors if you try and\nrun this without restarting\nto note there is a written guide to this\nvideo on our website where we list all\nthese commands you will need to get\nstarted so by all means head to there\nand copy and paste those commands\nonce the pie is restarted log back in\nand enter the iot stack folder\nopen the menu with DOT slash menu dot sh\nand use enter to select build stack and\nthis is where we can select the packages\nthat we want to use\nand we can navigate using the up and\ndown arrow keys and spacebar to select\njust to refresh your memory we're going\nto be using grafana influxdb mosquito\nnode red and portena portena is\nsomething we haven't mentioned yet and\nthat's going to give us a graphical\ninterface to manage these Docker\ncontainers\nwhen you select node-red you might see a\nwarning press the right arrow key to the\nenter the options list and the defaults\nare fine\npress enter to build these lists and\nthen navigate to return to the menu and\nfinish your choices\nthis isn't quite displaying properly on\nmy screen that's because I've zoomed in\non the terminal to make it easier for\nyou guys to see but it should be fine on\nyours and once you've selected all of\nyour components so all the five you can\npress enter again and that's going to\nbuild a file which essentially contains\nall the different components we've set\nand how to configure them\nif you navigate to the docker commands\nsection\nselect start stack and this will start\nall of these containers this will take\nsome time as all the images are\ndownloaded\nwith all these downloaded all your\napplications should now be running and\nyou can test this with Docker Dash\ncompose PS and that should show you your\nfive containers\nanother way to look at this is to open\nportana by opening a web browser\nnavigating to the IP address of your\nserver and use the port 9000.\nif you click on the option to see the\nlocal Docker containers you can then\nclick the containers and see a list of\nthem\nthis is gives you a way sort of a\ngraphical interface of how to interact\nwith these containers so you can open\nthings like a console in them or you can\nturn them off if you want to have a play\naround with this interface\nso let's start configuring our\napplications first things first we're\ngoing to create an influx DB database in\norder to store all of our sensor data\nlet's go back to our terminal and use\nthe command Docker exec Dash it influxdb\ninflux and what this is going to do is\nenter the command prompt that we're\nusing into the D into the docker\ncontainer so the commands that we run\nare executed inside that container we\nuse the command create database and then\nthe name of the database you want to\nmake I'm going to call this sensor data\nand then hit enter and it'll create the\ndatabase\nand we can then exit using quit\nnext we're going to configure node red\nnavigate to your Pi via a web browser by\nentering the IP address and the port\n1880 and this is essentially a visual\nsort of programming thing where you can\nbuild a workflow by dragging and\ndropping boxes from the left hand panel\nand linking them up\nwe're going to need three units mqtt\ninput change node and influxdb output\nto configure the inputs we double click\non the mqtt input button\nand we need to add a server by clicking\non the pencil\nwe can name the server and type the IP\naddress of the pi into the server\naddress box\nleave the port as the default 1883.\nlocalhost won't quite work how you\nexpect in this situation so it's easier\njust to type out the IP address of your\nserver\npress add server and then select the\nserver from the drop down list\nwe can then type the topic of the data\nthat we want to subscribe to in my case\nI'm going to use slash home sensors\num and we want a past Json object from\nthis block\nyou can also name this block it's\nhelpful if you have multiple of these\nset up and so I simply use the topic I'm\nsubscribing to\nin the change block we want to change\nthe transmitted message into a Json\nexpression\nand we select the Json expression from\nthe list and press the button with the\nthree dots and in this expression we're\ngoing to change the keys in the original\nmessage to something a little bit more\ndescriptive\nyou can obviously adapt this to the\nspecific data you are transmitting yeah\nyou can save and close this window\nlast but not least we have to configure\nthe output node open the console press\nthe pencil next to the server and add\nthe IP address of the pi and use the\nport 8086 if it's not there as default\nthen we use the database name that we\npreviously created press add and then we\nneed to name the measurement we're\nwriting the data to you can put what you\nlike on here it's essentially a way of\nnaming the table that everything's\nstored in\nI just use sensor data again you can\nclose this panel and hit deploy to save\nand implement this configuration\nI've made sure that my sensor node is\ntransmitting data and we can test if\nthis node red configuration has worked\nby checking that there are some entries\nin the table\nif we head back to the terminal and\nenter the influx DB container again we\ncan enter the commands use sensor data\nthen show measurements and then select\nasterisks from sensor data and you\nshould see now some data being populated\nand this means that we're ready to set\nup our graphical interface\nif we exit out the docker container and\nopen up grafana the grafana dashboard\nwhich is the Pi's IP with the port 3000\nit might prompt you for some credentials\nin this case just use admin and admin\nand you'll be asked to change your\npassword\nthe first thing we need to do is add a\ndata source\nif you don't see this on the front page\nyou can hover over the Cog in the bottom\nleft\nselect influx DB and then enter the IP\naddress of the pi and the port 1886\nyou'll need to put HTTP at the beginning\nscroll down and enter the database name\nand then the gets HTTP method\npress save and test and you should see a\nnice green bar saying that the data\nsource is configured and confirmed\nnext we can create a dashboard which is\nwhere we will see all the information we\nhave recorded\nselect create new dashboard and then add\na panel in the measurements box in the\nfrom parts of the data source you can\nselect sensor data\nand then under the field option you can\npick the variable that you want to plot\nand as you do this you should see some\ndata being populated in the graph\nyou can name the panel on the left hand\nside and click apply repeat this process\nfor as many times as you have data to\nplot in my case that's four graphs\nyou can adjust plot types and various\nsettings in the right hand side panel so\nI would recommend having a play around\nwith that and once you're happy with\nyour dashboard do make sure to save it\nbecause the number of times I've set\nsomething up and then exited away from\nyou know close my browser window and\nit's not saved this panel is annoying so\ndo make sure you save it so basically\nthat's it you've now created a nice iot\nserver which will take sensor data sent\nfrom a node using the mqtt protocol and\nit'll be plotted in a nice graphical\ndashboard\nas a reminder all these commands are\nwritten out on our website linked below\nif this video has helped you please\nconsider leaving a like and subscribing\nand do let us know how you intend to use\nthis server down in the comments below\nthank you very much for watching and as\nalways have a nice day\n",
  "words": [
    "video",
    "going",
    "create",
    "raspberry",
    "pi",
    "iot",
    "internet",
    "things",
    "server",
    "allow",
    "collect",
    "kind",
    "sensor",
    "data",
    "like",
    "send",
    "network",
    "raspberry",
    "pi",
    "server",
    "visualize",
    "nice",
    "looking",
    "grafana",
    "dashboard",
    "example",
    "going",
    "use",
    "arduino",
    "uno",
    "paired",
    "bme",
    "680",
    "sensor",
    "collect",
    "temperature",
    "pressure",
    "humidity",
    "air",
    "quality",
    "data",
    "every",
    "two",
    "seconds",
    "data",
    "wrapped",
    "json",
    "message",
    "sent",
    "network",
    "server",
    "going",
    "create",
    "video",
    "done",
    "via",
    "mqtt",
    "message",
    "protocol",
    "video",
    "going",
    "focus",
    "server",
    "aspects",
    "application",
    "want",
    "information",
    "sensor",
    "node",
    "let",
    "us",
    "know",
    "comments",
    "want",
    "video",
    "specializing",
    "source",
    "code",
    "linked",
    "description",
    "well",
    "want",
    "poke",
    "around",
    "project",
    "take",
    "roughly",
    "half",
    "hour",
    "hour",
    "implement",
    "top",
    "level",
    "view",
    "system",
    "could",
    "consist",
    "series",
    "sensor",
    "nodes",
    "send",
    "data",
    "json",
    "message",
    "network",
    "raspberry",
    "pi",
    "via",
    "mqtt",
    "network",
    "protocol",
    "mqtt",
    "protocol",
    "basically",
    "client",
    "publishes",
    "data",
    "broker",
    "server",
    "mosquito",
    "application",
    "going",
    "using",
    "video",
    "broker",
    "pushes",
    "data",
    "sent",
    "client",
    "subscribed",
    "topic",
    "topic",
    "essentially",
    "way",
    "categorize",
    "data",
    "sent",
    "example",
    "sensor",
    "office",
    "could",
    "use",
    "topic",
    "home",
    "office",
    "client",
    "subscribed",
    "home",
    "slash",
    "office",
    "forwarded",
    "mqt",
    "message",
    "sent",
    "broker",
    "implementation",
    "application",
    "called",
    "subscribe",
    "topic",
    "interpret",
    "json",
    "message",
    "data",
    "send",
    "data",
    "database",
    "stored",
    "eventually",
    "used",
    "case",
    "going",
    "use",
    "influxdb",
    "store",
    "sensor",
    "data",
    "going",
    "use",
    "grafana",
    "front",
    "end",
    "going",
    "query",
    "database",
    "order",
    "display",
    "data",
    "want",
    "see",
    "nice",
    "format",
    "raspberry",
    "pi",
    "server",
    "going",
    "need",
    "four",
    "main",
    "applications",
    "mosquito",
    "mqtt",
    "broker",
    "influxdb",
    "grafana",
    "going",
    "run",
    "applications",
    "within",
    "containers",
    "using",
    "docker",
    "running",
    "application",
    "inside",
    "container",
    "means",
    "really",
    "quick",
    "set",
    "deploy",
    "either",
    "deploy",
    "device",
    "different",
    "devices",
    "remove",
    "manage",
    "certain",
    "applications",
    "containers",
    "quite",
    "virtual",
    "machines",
    "virtual",
    "machines",
    "emulate",
    "machine",
    "way",
    "system",
    "hardware",
    "whereas",
    "container",
    "runs",
    "operating",
    "system",
    "confusing",
    "sounds",
    "used",
    "docker",
    "worry",
    "going",
    "use",
    "program",
    "called",
    "iot",
    "stack",
    "get",
    "containers",
    "ready",
    "us",
    "use",
    "makes",
    "process",
    "super",
    "simple",
    "get",
    "tutorial",
    "covering",
    "implement",
    "please",
    "consider",
    "subscribing",
    "video",
    "going",
    "help",
    "number",
    "interesting",
    "iot",
    "videos",
    "coming",
    "review",
    "dip",
    "replacement",
    "arduino",
    "uno",
    "adds",
    "functionality",
    "straight",
    "onto",
    "board",
    "stay",
    "tuned",
    "okay",
    "starting",
    "fresh",
    "install",
    "headless",
    "raspbian",
    "os",
    "light",
    "version",
    "enabled",
    "ssh",
    "video",
    "linked",
    "cards",
    "need",
    "find",
    "set",
    "note",
    "need",
    "static",
    "ip",
    "address",
    "raspberry",
    "pi",
    "adjusting",
    "dhcp",
    "configuration",
    "mentioned",
    "video",
    "first",
    "thing",
    "going",
    "update",
    "everything",
    "sudo",
    "apt",
    "updates",
    "sudo",
    "apt",
    "upgrade",
    "going",
    "download",
    "iot",
    "stack",
    "using",
    "curl",
    "command",
    "also",
    "install",
    "docker",
    "docker",
    "compose",
    "necessary",
    "packages",
    "might",
    "need",
    "get",
    "prompt",
    "telling",
    "install",
    "something",
    "say",
    "yes",
    "might",
    "take",
    "little",
    "time",
    "download",
    "install",
    "finished",
    "prompt",
    "restart",
    "via",
    "sudo",
    "shutdown",
    "minus",
    "r",
    "important",
    "restart",
    "environment",
    "variables",
    "set",
    "correctly",
    "get",
    "errors",
    "try",
    "run",
    "without",
    "restarting",
    "note",
    "written",
    "guide",
    "video",
    "website",
    "list",
    "commands",
    "need",
    "get",
    "started",
    "means",
    "head",
    "copy",
    "paste",
    "commands",
    "pie",
    "restarted",
    "log",
    "back",
    "enter",
    "iot",
    "stack",
    "folder",
    "open",
    "menu",
    "dot",
    "slash",
    "menu",
    "dot",
    "sh",
    "use",
    "enter",
    "select",
    "build",
    "stack",
    "select",
    "packages",
    "want",
    "use",
    "navigate",
    "using",
    "arrow",
    "keys",
    "spacebar",
    "select",
    "refresh",
    "memory",
    "going",
    "using",
    "grafana",
    "influxdb",
    "mosquito",
    "node",
    "red",
    "portena",
    "portena",
    "something",
    "mentioned",
    "yet",
    "going",
    "give",
    "us",
    "graphical",
    "interface",
    "manage",
    "docker",
    "containers",
    "select",
    "might",
    "see",
    "warning",
    "press",
    "right",
    "arrow",
    "key",
    "enter",
    "options",
    "list",
    "defaults",
    "fine",
    "press",
    "enter",
    "build",
    "lists",
    "navigate",
    "return",
    "menu",
    "finish",
    "choices",
    "quite",
    "displaying",
    "properly",
    "screen",
    "zoomed",
    "terminal",
    "make",
    "easier",
    "guys",
    "see",
    "fine",
    "selected",
    "components",
    "five",
    "press",
    "enter",
    "going",
    "build",
    "file",
    "essentially",
    "contains",
    "different",
    "components",
    "set",
    "configure",
    "navigate",
    "docker",
    "commands",
    "section",
    "select",
    "start",
    "stack",
    "start",
    "containers",
    "take",
    "time",
    "images",
    "downloaded",
    "downloaded",
    "applications",
    "running",
    "test",
    "docker",
    "dash",
    "compose",
    "ps",
    "show",
    "five",
    "containers",
    "another",
    "way",
    "look",
    "open",
    "portana",
    "opening",
    "web",
    "browser",
    "navigating",
    "ip",
    "address",
    "server",
    "use",
    "port",
    "click",
    "option",
    "see",
    "local",
    "docker",
    "containers",
    "click",
    "containers",
    "see",
    "list",
    "gives",
    "way",
    "sort",
    "graphical",
    "interface",
    "interact",
    "containers",
    "open",
    "things",
    "like",
    "console",
    "turn",
    "want",
    "play",
    "around",
    "interface",
    "let",
    "start",
    "configuring",
    "applications",
    "first",
    "things",
    "first",
    "going",
    "create",
    "influx",
    "db",
    "database",
    "order",
    "store",
    "sensor",
    "data",
    "let",
    "go",
    "back",
    "terminal",
    "use",
    "command",
    "docker",
    "exec",
    "dash",
    "influxdb",
    "influx",
    "going",
    "enter",
    "command",
    "prompt",
    "using",
    "docker",
    "container",
    "commands",
    "run",
    "executed",
    "inside",
    "container",
    "use",
    "command",
    "create",
    "database",
    "name",
    "database",
    "want",
    "make",
    "going",
    "call",
    "sensor",
    "data",
    "hit",
    "enter",
    "create",
    "database",
    "exit",
    "using",
    "quit",
    "next",
    "going",
    "configure",
    "node",
    "red",
    "navigate",
    "pi",
    "via",
    "web",
    "browser",
    "entering",
    "ip",
    "address",
    "port",
    "1880",
    "essentially",
    "visual",
    "sort",
    "programming",
    "thing",
    "build",
    "workflow",
    "dragging",
    "dropping",
    "boxes",
    "left",
    "hand",
    "panel",
    "linking",
    "going",
    "need",
    "three",
    "units",
    "mqtt",
    "input",
    "change",
    "node",
    "influxdb",
    "output",
    "configure",
    "inputs",
    "double",
    "click",
    "mqtt",
    "input",
    "button",
    "need",
    "add",
    "server",
    "clicking",
    "pencil",
    "name",
    "server",
    "type",
    "ip",
    "address",
    "pi",
    "server",
    "address",
    "box",
    "leave",
    "port",
    "default",
    "localhost",
    "wo",
    "quite",
    "work",
    "expect",
    "situation",
    "easier",
    "type",
    "ip",
    "address",
    "server",
    "press",
    "add",
    "server",
    "select",
    "server",
    "drop",
    "list",
    "type",
    "topic",
    "data",
    "want",
    "subscribe",
    "case",
    "going",
    "use",
    "slash",
    "home",
    "sensors",
    "um",
    "want",
    "past",
    "json",
    "object",
    "block",
    "also",
    "name",
    "block",
    "helpful",
    "multiple",
    "set",
    "simply",
    "use",
    "topic",
    "subscribing",
    "change",
    "block",
    "want",
    "change",
    "transmitted",
    "message",
    "json",
    "expression",
    "select",
    "json",
    "expression",
    "list",
    "press",
    "button",
    "three",
    "dots",
    "expression",
    "going",
    "change",
    "keys",
    "original",
    "message",
    "something",
    "little",
    "bit",
    "descriptive",
    "obviously",
    "adapt",
    "specific",
    "data",
    "transmitting",
    "yeah",
    "save",
    "close",
    "window",
    "last",
    "least",
    "configure",
    "output",
    "node",
    "open",
    "console",
    "press",
    "pencil",
    "next",
    "server",
    "add",
    "ip",
    "address",
    "pi",
    "use",
    "port",
    "8086",
    "default",
    "use",
    "database",
    "name",
    "previously",
    "created",
    "press",
    "add",
    "need",
    "name",
    "measurement",
    "writing",
    "data",
    "put",
    "like",
    "essentially",
    "way",
    "naming",
    "table",
    "everything",
    "stored",
    "use",
    "sensor",
    "data",
    "close",
    "panel",
    "hit",
    "deploy",
    "save",
    "implement",
    "configuration",
    "made",
    "sure",
    "sensor",
    "node",
    "transmitting",
    "data",
    "test",
    "node",
    "red",
    "configuration",
    "worked",
    "checking",
    "entries",
    "table",
    "head",
    "back",
    "terminal",
    "enter",
    "influx",
    "db",
    "container",
    "enter",
    "commands",
    "use",
    "sensor",
    "data",
    "show",
    "measurements",
    "select",
    "asterisks",
    "sensor",
    "data",
    "see",
    "data",
    "populated",
    "means",
    "ready",
    "set",
    "graphical",
    "interface",
    "exit",
    "docker",
    "container",
    "open",
    "grafana",
    "grafana",
    "dashboard",
    "pi",
    "ip",
    "port",
    "3000",
    "might",
    "prompt",
    "credentials",
    "case",
    "use",
    "admin",
    "admin",
    "asked",
    "change",
    "password",
    "first",
    "thing",
    "need",
    "add",
    "data",
    "source",
    "see",
    "front",
    "page",
    "hover",
    "cog",
    "bottom",
    "left",
    "select",
    "influx",
    "db",
    "enter",
    "ip",
    "address",
    "pi",
    "port",
    "1886",
    "need",
    "put",
    "http",
    "beginning",
    "scroll",
    "enter",
    "database",
    "name",
    "gets",
    "http",
    "method",
    "press",
    "save",
    "test",
    "see",
    "nice",
    "green",
    "bar",
    "saying",
    "data",
    "source",
    "configured",
    "confirmed",
    "next",
    "create",
    "dashboard",
    "see",
    "information",
    "recorded",
    "select",
    "create",
    "new",
    "dashboard",
    "add",
    "panel",
    "measurements",
    "box",
    "parts",
    "data",
    "source",
    "select",
    "sensor",
    "data",
    "field",
    "option",
    "pick",
    "variable",
    "want",
    "plot",
    "see",
    "data",
    "populated",
    "graph",
    "name",
    "panel",
    "left",
    "hand",
    "side",
    "click",
    "apply",
    "repeat",
    "process",
    "many",
    "times",
    "data",
    "plot",
    "case",
    "four",
    "graphs",
    "adjust",
    "plot",
    "types",
    "various",
    "settings",
    "right",
    "hand",
    "side",
    "panel",
    "would",
    "recommend",
    "play",
    "around",
    "happy",
    "dashboard",
    "make",
    "sure",
    "save",
    "number",
    "times",
    "set",
    "something",
    "exited",
    "away",
    "know",
    "close",
    "browser",
    "window",
    "saved",
    "panel",
    "annoying",
    "make",
    "sure",
    "save",
    "basically",
    "created",
    "nice",
    "iot",
    "server",
    "take",
    "sensor",
    "data",
    "sent",
    "node",
    "using",
    "mqtt",
    "protocol",
    "plotted",
    "nice",
    "graphical",
    "dashboard",
    "reminder",
    "commands",
    "written",
    "website",
    "linked",
    "video",
    "helped",
    "please",
    "consider",
    "leaving",
    "like",
    "subscribing",
    "let",
    "us",
    "know",
    "intend",
    "use",
    "server",
    "comments",
    "thank",
    "much",
    "watching",
    "always",
    "nice",
    "day"
  ],
  "keywords": [
    "video",
    "going",
    "create",
    "raspberry",
    "pi",
    "iot",
    "things",
    "server",
    "sensor",
    "data",
    "like",
    "send",
    "network",
    "nice",
    "grafana",
    "dashboard",
    "use",
    "json",
    "message",
    "sent",
    "via",
    "mqtt",
    "protocol",
    "application",
    "want",
    "node",
    "let",
    "us",
    "know",
    "source",
    "linked",
    "around",
    "take",
    "implement",
    "system",
    "client",
    "broker",
    "mosquito",
    "using",
    "topic",
    "essentially",
    "way",
    "office",
    "home",
    "slash",
    "database",
    "case",
    "influxdb",
    "see",
    "need",
    "applications",
    "run",
    "containers",
    "docker",
    "container",
    "means",
    "set",
    "deploy",
    "quite",
    "stack",
    "get",
    "subscribing",
    "install",
    "ip",
    "address",
    "configuration",
    "first",
    "thing",
    "sudo",
    "command",
    "might",
    "prompt",
    "something",
    "list",
    "commands",
    "back",
    "enter",
    "open",
    "menu",
    "select",
    "build",
    "navigate",
    "red",
    "graphical",
    "interface",
    "press",
    "terminal",
    "make",
    "configure",
    "start",
    "test",
    "browser",
    "port",
    "click",
    "influx",
    "db",
    "name",
    "next",
    "left",
    "hand",
    "panel",
    "change",
    "add",
    "type",
    "block",
    "expression",
    "save",
    "close",
    "sure",
    "plot"
  ]
}