{
  "text": "If you want to learn web development, where \ndo you even start? It's hard to find the right  \nadvice without suffering from information overload.\nThat's why I've created this beginner's roadmap!  \nit lays out all the basics you need to learn \nweb development we're going to go through each  \nstep so by the end of this guide you'll have an \nunderstanding of the basics of web development and  \nwhat skills you need to learn I recommend doing \nsteps 1 2 & 3 in order then depending on whether  \nyou want to focus on more front-end or back-end \nyou can do steps 4A or 4B. I personally think  \nit's a good idea for front-end web developers to \nlearn at least a little bit of back-end and vice  \nversa knowing the basics of both will help \nyou know if you like front-end or back-end  \nweb development better sound good let's dig deeper \ninto the roadmap before you get into actual coding  \nyou'll need to understand some general concepts \nas you start your journey into web development how  \nwebsites work the difference between front-end and \nback-end and using a code editor all websites at  \nthe most basic are just a bunch of files that are \nstored on a computer called a server this server  \nis connected to the Internet you can then load \nthat website through a browser like Chrome Firefox  \nor Safari on your computer or on your phone \nyour browser is also called the client in this  \nsituation so every time you're on the Internet \nyou the client are loading data from the server  \nas well as submitting data back to the server this \nback and forth between the client and the server  \nis the basis of the internet web developer roles \ntypically fall into three categories front end  \nback end and full stack the terms front end back \nend and full stack web developer describe what  \npart of the client-server relationship that you're \nworking with fernand means that you're dealing  \nmainly with the client-side it's called the front \nend because it's what you can see in the browser  \nconversely the back end is the part of the website \nthat you can't really see but it handles a lot of  \nthe logic and functionality that is necessary for \neverything to work one way you can think about  \nthis is that front-end web development is like \nthe front-of-house part of a restaurant it's a  \nsection where customers come to see and experience \nthe restaurant the interior decor seating and of  \ncourse eating the food on the other hand back-end \nweb development is like the back of house part of  \nthe restaurant it's where deliveries and inventory \nare managed and the process to create the food all  \nhappens there's a lot of things behind the scenes \nthat the customers won't see they will experience  \nand hopefully enjoy the end product a delicious \nmeal fun illustrations aside both front-end and  \nback-end web development serve different but very \nimportant functions when you build a website the  \nmost essential tool that you'll use is your code \neditor or IDE integrated development environment  \nthis tool allows you to write the markup and code \nthat will make up the website there are quite a  \nfew good options out there but currently the most \npopular code editor is vs code vs code is a more  \nlightweight version of Visual Studio Microsoft's \nmain IDE it's fast free easy to use and you can  \ncustomize it with themes and extensions other \ncode editors are sublime text Adam and vim if  \nyou're just getting started though I'd recommend \nchecking out vs code which you can download from  \ntheir website now that we've covered some of the \nbroader concepts of what web development is let's  \nget into more of the details starting with the \nfront end the front end of a website is made up  \nof three types of files HTML CSS and JavaScript \nthese files are what is loaded in the browser on  \na client-side HTML or hypertext markup language \nis the foundation of all websites it's the main  \nfile type that is loaded in your browser when you \nlook at a web site the HTML file contains all the  \ncontent on the page and it uses tags to denote \ndifferent types of content for example you can use  \ntags to create headline titles paragraphs bulleted \nlists images and so on HTML tags by themselves do  \nhave some Styles attached but they're pretty basic \nkind of like what you would see in a Word document  \nCSS or cascading style sheets lets you style that \nHTML content so it looks nice and fancy you can  \nadd colors custom fonts and lay out the elements \nof your website however you want them to look  \nyou can even create animations and shapes with \nCSS there's a lot of depth to CSS and sometimes  \npeople tend to gloss over it so they can move \non to things like JavaScript however it's really  \nimportant to be able to convert a design into \na front-end website layout using CSS javascript  \nis a programming language that was designed to \nrun in the browser using JavaScript you can make  \nyour website respond to different inputs from the \nuser or other sources for example you can build a  \nback to top button that when the user clicks it \nthey'll scroll back up to the top of the page  \nas we mentioned HTML CSS and JavaScript are the \nbasic building blocks of front-end web development  \nin addition to them there are a few other tools \nthat you'll want to learn at this point package  \nmanagers are online collections of software much \nof it open source each piece of software called  \na package is available for you to install and \nuse in your own projects you can think about  \nthem like plugins instead of writing everything \nfrom scratch you can use helpful utilities that  \nother people have written already for instance \nyou can simply use a slider plug-in instead of  \nhaving to code it all yourself which could take \ndays to figure out why reinvent the wheel if you  \ndon't have to the most popular package manager is \ncalled NPM or node package manager you can also  \nuse another manager called yarn both are good \noptions to know and use although it's probably  \nbest to start out with NPM in addition to package \nmanager is you'll want to become familiar with  \nbuild tools module bundlers and build tools are \nanother essential part of the front-end workflow  \non a basic level these tools run tasks and process \nfiles you can use them to compile your sass files  \nto CSS transpile your es6 javascript files down \nthe es5 for better browser support run a local  \nweb server and many other helpful tasks saving \nyou a ton of hassle if you were to try to do all  \nthese essential steps by yourself three tools \nthat you'll continue to come across a lot are  \ngulp web pack and parcel personally I like using \ngulp for my own front-end workflows where I just  \nwant to compile my sass and JavaScript files and \nnot do too much else the last tool you'll need  \nto learn about in this stage is version control \nversion control also called source control is  \na system that keeps track of every code change \nthat you make in your project files you can even  \nrevert to a previous chain if you make a mistake \nit's almost like having infinite save points for  \nyour projects and let me tell you it can be a huge \nlifesaver the most popular version control system  \nis an open source system called git using git you \ncan store all your files and then change history  \nin collections called repositories you may also \nhave heard of github which is an online hosting  \ncompany owned by Microsoft where you can store \nall your git repositories at this point you've  \nlearned the basics of friend development and \nhave a choice to either delve into additional  \nfriends skills or learn about basic backend web \ndevelopment with additional front-end there are  \nsome more intermediate skills that you will \nwant to learn I recommend that you look at the  \nfollowing SAS responsive design and a JavaScript \nframework SAS is an extension of CSS that makes  \nwriting styles more intuitive and modular it's \na really powerful tool with sass you can split  \nup your styles into multiple files for better \norganization create variables to store colors and  \nfonts and use mix-ins and placeholders to easily \nreuse styles even if you utilize just some of  \nthe basic features like nesting you'll be able to \nwrite your Styles quicker and with less headache  \nresponsive design ensures that your sales will \nlook good on all devices desktops tablets and  \nmobile phones the core practices of responsive \ndesign include using flexible sizing for elements  \nas well as utilizing media queries to target \nstyles for specific devices and widths for example  \ninstead of setting your contents to be a static \n400 pixels wide you can use a media query and set  \nthe content to be 50% width on desktop and 100% \non mobile building a website with responsive CSS  \nis a must these days especially as mobile traffic \nis outpacing desktop traffic in many cases once  \nyou have the basics of vanilla JavaScript down you \nmay want to learn one of the JavaScript frameworks  \nespecially if you want to be a full-stack \nJavaScript developer these frameworks come with  \npre-built structures and components that allow \nyou to build apps quicker than if you started  \nfrom scratch currently you have three main choices \nreact angular and view react which is technically  \na library was created by Facebook and is the most \npopular framework right now angular was the first  \nbig framework and it was created by Google it's \nstill very popular even though it's been surpassed  \nby react recently and views a newer framework \ncreated by Evan you a former angular developer  \nwell it is smaller news and react and angular is \ngrowing quickly and is also considered easy and  \nfun to use you might be wondering now okay well \nwhich framework is the best the truth is they are  \nall good and web development there's almost never \na single choice that is 100% the best choice for  \nevery person in every situation your choice will \nmost likely be determined by your job or it simply  \nby which one you enjoy using the most if your end \ngoal is to land a job at a company try researching  \nwhich framework seems to be the most common in \npotential job listings don't worry too much about  \nwhich framework to choose it's more important that \nyou learn and understand the concepts behind them  \nand once you learn one framework it'll be much \neasier to learn other ones after that let's move  \non now to our last section backend web development \nthe backend or server side of web development is  \nmade up of three main components the server \na server-side programming language and the  \ndatabase as we mentioned at the very beginning \nthe server is the computer where all website  \nfiles the database and other components are stored \ntraditional servers run on operating systems such  \nas Linux or Windows they're considered centralized \nbecause everything the website files back-end code  \nand data are stored all together on the server \nnowadays there are also serverless architectures  \nwhich is a more decentralized type of setup this \ntype of application splits up those components and  \nleverages third-party vendors to handle each \nof them despite the name though you still do  \nneed some kind of webserver to at least store \nyour website files some examples of service  \nproviders are AWS Amazon Web Services or nullify \nCir furless set ups are popular because they are  \nfast cheap and you don't need to worry about \nserver maintenance they're great for simple  \nstatic websites that don't require a traditional \nserver-side language however for very complex  \napplications the traditional server setup might \nbe a better option on the server you need to use  \na programming language to write the functions \nand logic for your application the server then  \ncompiles your code and conveys the result back \nto the client popular programming languages for  \nthe web include PHP Python Ruby c-sharp and Java \nthere is also a form of server-side JavaScript  \nnode.js which is a runtime environment that \ncan run JavaScript code on the server finally  \nyou'll need to learn about databases databases as \na name implies are where you store information on  \nyour server for your website most databases use a \nlanguage called SQL pronounced sequel which stands  \nfor structured query language in the database \ndata is stored in tables sort of like complex  \nExcel documents then you can write queries in SQL \nin order to create read update and delete data the  \ndatabase is run on the server meeting servers \nlike Microsoft sequel server on Windows servers  \nand my sequel for Linux there are also no sequel \ndatabases which store the data in JSON files as  \nopposed to the traditional tables one type of no \nsequel database is MongoDB which is often used  \nwith react angular and view applications some \nexamples of how data is utilized on websites  \nare if you have a contact form on your website \nyou could build the form so that every time  \nsomeone submits the form their data is saved on \nto your database you can also store user logins  \non the database and write logic in the server-side \nlanguage to handle checking and authenticating the  \nlogins and that's how I would recommend you start \nyour journey into web development I've compiled  \na list of resources to help you get started \nlearning at any of these stages linked below\n",
  "words": [
    "want",
    "learn",
    "web",
    "development",
    "even",
    "start",
    "hard",
    "find",
    "right",
    "advice",
    "without",
    "suffering",
    "information",
    "overload",
    "created",
    "beginner",
    "roadmap",
    "lays",
    "basics",
    "need",
    "learn",
    "web",
    "development",
    "going",
    "go",
    "step",
    "end",
    "guide",
    "understanding",
    "basics",
    "web",
    "development",
    "skills",
    "need",
    "learn",
    "recommend",
    "steps",
    "1",
    "2",
    "3",
    "order",
    "depending",
    "whether",
    "want",
    "focus",
    "steps",
    "4a",
    "4b",
    "personally",
    "think",
    "good",
    "idea",
    "web",
    "developers",
    "learn",
    "least",
    "little",
    "bit",
    "vice",
    "versa",
    "knowing",
    "basics",
    "help",
    "know",
    "like",
    "web",
    "development",
    "better",
    "sound",
    "good",
    "let",
    "dig",
    "deeper",
    "roadmap",
    "get",
    "actual",
    "coding",
    "need",
    "understand",
    "general",
    "concepts",
    "start",
    "journey",
    "web",
    "development",
    "websites",
    "work",
    "difference",
    "using",
    "code",
    "editor",
    "websites",
    "basic",
    "bunch",
    "files",
    "stored",
    "computer",
    "called",
    "server",
    "server",
    "connected",
    "internet",
    "load",
    "website",
    "browser",
    "like",
    "chrome",
    "firefox",
    "safari",
    "computer",
    "phone",
    "browser",
    "also",
    "called",
    "client",
    "situation",
    "every",
    "time",
    "internet",
    "client",
    "loading",
    "data",
    "server",
    "well",
    "submitting",
    "data",
    "back",
    "server",
    "back",
    "forth",
    "client",
    "server",
    "basis",
    "internet",
    "web",
    "developer",
    "roles",
    "typically",
    "fall",
    "three",
    "categories",
    "front",
    "end",
    "back",
    "end",
    "full",
    "stack",
    "terms",
    "front",
    "end",
    "back",
    "end",
    "full",
    "stack",
    "web",
    "developer",
    "describe",
    "part",
    "relationship",
    "working",
    "fernand",
    "means",
    "dealing",
    "mainly",
    "called",
    "front",
    "end",
    "see",
    "browser",
    "conversely",
    "back",
    "end",
    "part",
    "website",
    "ca",
    "really",
    "see",
    "handles",
    "lot",
    "logic",
    "functionality",
    "necessary",
    "everything",
    "work",
    "one",
    "way",
    "think",
    "web",
    "development",
    "like",
    "part",
    "restaurant",
    "section",
    "customers",
    "come",
    "see",
    "experience",
    "restaurant",
    "interior",
    "decor",
    "seating",
    "course",
    "eating",
    "food",
    "hand",
    "web",
    "development",
    "like",
    "back",
    "house",
    "part",
    "restaurant",
    "deliveries",
    "inventory",
    "managed",
    "process",
    "create",
    "food",
    "happens",
    "lot",
    "things",
    "behind",
    "scenes",
    "customers",
    "wo",
    "see",
    "experience",
    "hopefully",
    "enjoy",
    "end",
    "product",
    "delicious",
    "meal",
    "fun",
    "illustrations",
    "aside",
    "web",
    "development",
    "serve",
    "different",
    "important",
    "functions",
    "build",
    "website",
    "essential",
    "tool",
    "use",
    "code",
    "editor",
    "ide",
    "integrated",
    "development",
    "environment",
    "tool",
    "allows",
    "write",
    "markup",
    "code",
    "make",
    "website",
    "quite",
    "good",
    "options",
    "currently",
    "popular",
    "code",
    "editor",
    "vs",
    "code",
    "vs",
    "code",
    "lightweight",
    "version",
    "visual",
    "studio",
    "microsoft",
    "main",
    "ide",
    "fast",
    "free",
    "easy",
    "use",
    "customize",
    "themes",
    "extensions",
    "code",
    "editors",
    "sublime",
    "text",
    "adam",
    "vim",
    "getting",
    "started",
    "though",
    "recommend",
    "checking",
    "vs",
    "code",
    "download",
    "website",
    "covered",
    "broader",
    "concepts",
    "web",
    "development",
    "let",
    "get",
    "details",
    "starting",
    "front",
    "end",
    "front",
    "end",
    "website",
    "made",
    "three",
    "types",
    "files",
    "html",
    "css",
    "javascript",
    "files",
    "loaded",
    "browser",
    "html",
    "hypertext",
    "markup",
    "language",
    "foundation",
    "websites",
    "main",
    "file",
    "type",
    "loaded",
    "browser",
    "look",
    "web",
    "site",
    "html",
    "file",
    "contains",
    "content",
    "page",
    "uses",
    "tags",
    "denote",
    "different",
    "types",
    "content",
    "example",
    "use",
    "tags",
    "create",
    "headline",
    "titles",
    "paragraphs",
    "bulleted",
    "lists",
    "images",
    "html",
    "tags",
    "styles",
    "attached",
    "pretty",
    "basic",
    "kind",
    "like",
    "would",
    "see",
    "word",
    "document",
    "css",
    "cascading",
    "style",
    "sheets",
    "lets",
    "style",
    "html",
    "content",
    "looks",
    "nice",
    "fancy",
    "add",
    "colors",
    "custom",
    "fonts",
    "lay",
    "elements",
    "website",
    "however",
    "want",
    "look",
    "even",
    "create",
    "animations",
    "shapes",
    "css",
    "lot",
    "depth",
    "css",
    "sometimes",
    "people",
    "tend",
    "gloss",
    "move",
    "things",
    "like",
    "javascript",
    "however",
    "really",
    "important",
    "able",
    "convert",
    "design",
    "website",
    "layout",
    "using",
    "css",
    "javascript",
    "programming",
    "language",
    "designed",
    "run",
    "browser",
    "using",
    "javascript",
    "make",
    "website",
    "respond",
    "different",
    "inputs",
    "user",
    "sources",
    "example",
    "build",
    "back",
    "top",
    "button",
    "user",
    "clicks",
    "scroll",
    "back",
    "top",
    "page",
    "mentioned",
    "html",
    "css",
    "javascript",
    "basic",
    "building",
    "blocks",
    "web",
    "development",
    "addition",
    "tools",
    "want",
    "learn",
    "point",
    "package",
    "managers",
    "online",
    "collections",
    "software",
    "much",
    "open",
    "source",
    "piece",
    "software",
    "called",
    "package",
    "available",
    "install",
    "use",
    "projects",
    "think",
    "like",
    "plugins",
    "instead",
    "writing",
    "everything",
    "scratch",
    "use",
    "helpful",
    "utilities",
    "people",
    "written",
    "already",
    "instance",
    "simply",
    "use",
    "slider",
    "instead",
    "code",
    "could",
    "take",
    "days",
    "figure",
    "reinvent",
    "wheel",
    "popular",
    "package",
    "manager",
    "called",
    "npm",
    "node",
    "package",
    "manager",
    "also",
    "use",
    "another",
    "manager",
    "called",
    "yarn",
    "good",
    "options",
    "know",
    "use",
    "although",
    "probably",
    "best",
    "start",
    "npm",
    "addition",
    "package",
    "manager",
    "want",
    "become",
    "familiar",
    "build",
    "tools",
    "module",
    "bundlers",
    "build",
    "tools",
    "another",
    "essential",
    "part",
    "workflow",
    "basic",
    "level",
    "tools",
    "run",
    "tasks",
    "process",
    "files",
    "use",
    "compile",
    "sass",
    "files",
    "css",
    "transpile",
    "es6",
    "javascript",
    "files",
    "es5",
    "better",
    "browser",
    "support",
    "run",
    "local",
    "web",
    "server",
    "many",
    "helpful",
    "tasks",
    "saving",
    "ton",
    "hassle",
    "try",
    "essential",
    "steps",
    "three",
    "tools",
    "continue",
    "come",
    "across",
    "lot",
    "gulp",
    "web",
    "pack",
    "parcel",
    "personally",
    "like",
    "using",
    "gulp",
    "workflows",
    "want",
    "compile",
    "sass",
    "javascript",
    "files",
    "much",
    "else",
    "last",
    "tool",
    "need",
    "learn",
    "stage",
    "version",
    "control",
    "version",
    "control",
    "also",
    "called",
    "source",
    "control",
    "system",
    "keeps",
    "track",
    "every",
    "code",
    "change",
    "make",
    "project",
    "files",
    "even",
    "revert",
    "previous",
    "chain",
    "make",
    "mistake",
    "almost",
    "like",
    "infinite",
    "save",
    "points",
    "projects",
    "let",
    "tell",
    "huge",
    "lifesaver",
    "popular",
    "version",
    "control",
    "system",
    "open",
    "source",
    "system",
    "called",
    "git",
    "using",
    "git",
    "store",
    "files",
    "change",
    "history",
    "collections",
    "called",
    "repositories",
    "may",
    "also",
    "heard",
    "github",
    "online",
    "hosting",
    "company",
    "owned",
    "microsoft",
    "store",
    "git",
    "repositories",
    "point",
    "learned",
    "basics",
    "friend",
    "development",
    "choice",
    "either",
    "delve",
    "additional",
    "friends",
    "skills",
    "learn",
    "basic",
    "backend",
    "web",
    "development",
    "additional",
    "intermediate",
    "skills",
    "want",
    "learn",
    "recommend",
    "look",
    "following",
    "sas",
    "responsive",
    "design",
    "javascript",
    "framework",
    "sas",
    "extension",
    "css",
    "makes",
    "writing",
    "styles",
    "intuitive",
    "modular",
    "really",
    "powerful",
    "tool",
    "sass",
    "split",
    "styles",
    "multiple",
    "files",
    "better",
    "organization",
    "create",
    "variables",
    "store",
    "colors",
    "fonts",
    "use",
    "placeholders",
    "easily",
    "reuse",
    "styles",
    "even",
    "utilize",
    "basic",
    "features",
    "like",
    "nesting",
    "able",
    "write",
    "styles",
    "quicker",
    "less",
    "headache",
    "responsive",
    "design",
    "ensures",
    "sales",
    "look",
    "good",
    "devices",
    "desktops",
    "tablets",
    "mobile",
    "phones",
    "core",
    "practices",
    "responsive",
    "design",
    "include",
    "using",
    "flexible",
    "sizing",
    "elements",
    "well",
    "utilizing",
    "media",
    "queries",
    "target",
    "styles",
    "specific",
    "devices",
    "widths",
    "example",
    "instead",
    "setting",
    "contents",
    "static",
    "400",
    "pixels",
    "wide",
    "use",
    "media",
    "query",
    "set",
    "content",
    "50",
    "width",
    "desktop",
    "100",
    "mobile",
    "building",
    "website",
    "responsive",
    "css",
    "must",
    "days",
    "especially",
    "mobile",
    "traffic",
    "outpacing",
    "desktop",
    "traffic",
    "many",
    "cases",
    "basics",
    "vanilla",
    "javascript",
    "may",
    "want",
    "learn",
    "one",
    "javascript",
    "frameworks",
    "especially",
    "want",
    "javascript",
    "developer",
    "frameworks",
    "come",
    "structures",
    "components",
    "allow",
    "build",
    "apps",
    "quicker",
    "started",
    "scratch",
    "currently",
    "three",
    "main",
    "choices",
    "react",
    "angular",
    "view",
    "react",
    "technically",
    "library",
    "created",
    "facebook",
    "popular",
    "framework",
    "right",
    "angular",
    "first",
    "big",
    "framework",
    "created",
    "google",
    "still",
    "popular",
    "even",
    "though",
    "surpassed",
    "react",
    "recently",
    "views",
    "newer",
    "framework",
    "created",
    "evan",
    "former",
    "angular",
    "developer",
    "well",
    "smaller",
    "news",
    "react",
    "angular",
    "growing",
    "quickly",
    "also",
    "considered",
    "easy",
    "fun",
    "use",
    "might",
    "wondering",
    "okay",
    "well",
    "framework",
    "best",
    "truth",
    "good",
    "web",
    "development",
    "almost",
    "never",
    "single",
    "choice",
    "100",
    "best",
    "choice",
    "every",
    "person",
    "every",
    "situation",
    "choice",
    "likely",
    "determined",
    "job",
    "simply",
    "one",
    "enjoy",
    "using",
    "end",
    "goal",
    "land",
    "job",
    "company",
    "try",
    "researching",
    "framework",
    "seems",
    "common",
    "potential",
    "job",
    "listings",
    "worry",
    "much",
    "framework",
    "choose",
    "important",
    "learn",
    "understand",
    "concepts",
    "behind",
    "learn",
    "one",
    "framework",
    "much",
    "easier",
    "learn",
    "ones",
    "let",
    "move",
    "last",
    "section",
    "backend",
    "web",
    "development",
    "backend",
    "server",
    "side",
    "web",
    "development",
    "made",
    "three",
    "main",
    "components",
    "server",
    "programming",
    "language",
    "database",
    "mentioned",
    "beginning",
    "server",
    "computer",
    "website",
    "files",
    "database",
    "components",
    "stored",
    "traditional",
    "servers",
    "run",
    "operating",
    "systems",
    "linux",
    "windows",
    "considered",
    "centralized",
    "everything",
    "website",
    "files",
    "code",
    "data",
    "stored",
    "together",
    "server",
    "nowadays",
    "also",
    "serverless",
    "architectures",
    "decentralized",
    "type",
    "setup",
    "type",
    "application",
    "splits",
    "components",
    "leverages",
    "vendors",
    "handle",
    "despite",
    "name",
    "though",
    "still",
    "need",
    "kind",
    "webserver",
    "least",
    "store",
    "website",
    "files",
    "examples",
    "service",
    "providers",
    "aws",
    "amazon",
    "web",
    "services",
    "nullify",
    "cir",
    "furless",
    "set",
    "ups",
    "popular",
    "fast",
    "cheap",
    "need",
    "worry",
    "server",
    "maintenance",
    "great",
    "simple",
    "static",
    "websites",
    "require",
    "traditional",
    "language",
    "however",
    "complex",
    "applications",
    "traditional",
    "server",
    "setup",
    "might",
    "better",
    "option",
    "server",
    "need",
    "use",
    "programming",
    "language",
    "write",
    "functions",
    "logic",
    "application",
    "server",
    "compiles",
    "code",
    "conveys",
    "result",
    "back",
    "client",
    "popular",
    "programming",
    "languages",
    "web",
    "include",
    "php",
    "python",
    "ruby",
    "java",
    "also",
    "form",
    "javascript",
    "runtime",
    "environment",
    "run",
    "javascript",
    "code",
    "server",
    "finally",
    "need",
    "learn",
    "databases",
    "databases",
    "name",
    "implies",
    "store",
    "information",
    "server",
    "website",
    "databases",
    "use",
    "language",
    "called",
    "sql",
    "pronounced",
    "sequel",
    "stands",
    "structured",
    "query",
    "language",
    "database",
    "data",
    "stored",
    "tables",
    "sort",
    "like",
    "complex",
    "excel",
    "documents",
    "write",
    "queries",
    "sql",
    "order",
    "create",
    "read",
    "update",
    "delete",
    "data",
    "database",
    "run",
    "server",
    "meeting",
    "servers",
    "like",
    "microsoft",
    "sequel",
    "server",
    "windows",
    "servers",
    "sequel",
    "linux",
    "also",
    "sequel",
    "databases",
    "store",
    "data",
    "json",
    "files",
    "opposed",
    "traditional",
    "tables",
    "one",
    "type",
    "sequel",
    "database",
    "mongodb",
    "often",
    "used",
    "react",
    "angular",
    "view",
    "applications",
    "examples",
    "data",
    "utilized",
    "websites",
    "contact",
    "form",
    "website",
    "could",
    "build",
    "form",
    "every",
    "time",
    "someone",
    "submits",
    "form",
    "data",
    "saved",
    "database",
    "also",
    "store",
    "user",
    "logins",
    "database",
    "write",
    "logic",
    "language",
    "handle",
    "checking",
    "authenticating",
    "logins",
    "would",
    "recommend",
    "start",
    "journey",
    "web",
    "development",
    "compiled",
    "list",
    "resources",
    "help",
    "get",
    "started",
    "learning",
    "stages",
    "linked"
  ],
  "keywords": [
    "want",
    "learn",
    "web",
    "development",
    "even",
    "start",
    "created",
    "basics",
    "need",
    "end",
    "skills",
    "recommend",
    "steps",
    "think",
    "good",
    "like",
    "better",
    "let",
    "get",
    "concepts",
    "websites",
    "using",
    "code",
    "editor",
    "basic",
    "files",
    "stored",
    "computer",
    "called",
    "server",
    "internet",
    "website",
    "browser",
    "also",
    "client",
    "every",
    "data",
    "well",
    "back",
    "developer",
    "three",
    "front",
    "part",
    "see",
    "really",
    "lot",
    "logic",
    "everything",
    "one",
    "restaurant",
    "come",
    "create",
    "different",
    "important",
    "build",
    "essential",
    "tool",
    "use",
    "write",
    "make",
    "popular",
    "vs",
    "version",
    "microsoft",
    "main",
    "started",
    "though",
    "html",
    "css",
    "javascript",
    "language",
    "type",
    "look",
    "content",
    "tags",
    "example",
    "styles",
    "however",
    "design",
    "programming",
    "run",
    "user",
    "tools",
    "package",
    "much",
    "source",
    "instead",
    "manager",
    "best",
    "sass",
    "control",
    "system",
    "git",
    "store",
    "choice",
    "backend",
    "responsive",
    "framework",
    "mobile",
    "components",
    "react",
    "angular",
    "job",
    "database",
    "traditional",
    "servers",
    "form",
    "databases",
    "sequel"
  ]
}