{
  "text": "[Music]\nlet's now start this lesson by defining\nwhat data visualization is\ndata visualization is the technique to\npresent the data in a pictorial or\ngraphical format\nit enables stakeholders and decision\nmakers to analyze data visually\nthe data in graphical format allows them\nto identify new trends and patterns\neasily well you might think why data\nvisualization is important\nlet's explain with an example\nyou are a sales manager in a leading\nglobal organization the organization\nplans to study the sales details of each\nproduct across all regions and countries\nthis is to identify the product which\nhas the highest sales in a particular\nregion and up the production\nthis research will enable the\norganization to increase the\nmanufacturing of that product in the\nparticular region\nthe data involved for this research\nmight be huge and complex\nthe research on this large numeric data\nis difficult and time consuming when it\nis performed manually\nwhen this numeric data is plotted on a\ngraph or converted to charts it's easy\nto identify the patterns and predict the\nresult accurately\nthe main benefits of data visualization\nare as follows\nit simplifies the complex quantitative\ninformation it helps analyze and explore\nbig data easily\nit identifies the areas that need\nattention or improvement\nit identifies the relationship between\ndata points and variables\nit explores new patterns and reveals\nhidden patterns in the data\nthere are three major considerations for\ndata visualization they are clarity\naccuracy and efficiency\nfirst ensure the data set is complete\nand relevant this enables the data\nscientist to use the new pattern's yield\nfrom the data in the relevant places\nsecond ensure using appropriate\ngraphical representation to convey the\nright message\nthird use efficient visualization\ntechnique which highlights all the data\npoints\nthere are some basic factors that one\nwould need to be aware of before\nvisualizing the data\nvisual effect\ncoordination system\ndata types and scale\ninformative interpretation\nvisual effect includes the usage of\nappropriate shapes colors and size to\nrepresent the analyzed data\nthe coordinate system helps to organize\nthe data points within the provided\ncoordinates\nthe data types and scale choose the type\nof data such as numeric or categorical\nthe informative interpretation helps\ncreate visuals in an effective and\neasily interpretable manner using labels\ntitle legends and pointers\nso far you have learned what data\nvisualization is and how it helps\ninterpret results with large and complex\ndata\nwith the help of the python programming\nlanguage you can perform this data\nvisualization\nyou'll learn more about how to visualize\ndata using the python programming\nlanguage in the subsequent screens\nmany new python data visualization\nlibraries are introduced recently\nsuch as matplot library vispy boca\nseaborne\npigel folium and networks\nthe matplot library has emerged as the\nmain data visualization library\nlet's now learn about this matplot\nlibrary in detail\nmatplot library is a python\ntwo-dimensional plotting library for\ndata visualization and creating\ninteractive graphics or plots\nusing python's matplot library the data\nvisualization of large and complex data\nbecomes easy\nthere are several advantages of using\nmatplot library to visualize data\nthey are as follows\nit's a multi-platform data visualization\ntool built on the numpy and scipy\nframework\ntherefore it's fast and efficient\nit possesses the ability to work well\nwith many operating systems and graphic\nback-ends\nit possesses high quality graphics and\nplots to print and view for a range of\ngraphs such as histograms bar charts pie\ncharts scatter plots and heat maps\nwith jupiter notebook integration the\ndevelopers have been free to spend their\ntime implementing features rather than\nstruggling with cross-platform\ncompatibility\nit has large community support and\ncross-platform support\nas it is an open source tool\nit has full control over graph or plot\nstyles such as line properties fonts and\naxis properties\nlet's now try to understand a plot\na plot is a graphical representation of\ndata which shows relationship between\ntwo variables or the distribution of\ndata\nlook at the example shown on the screen\nthis is a two-dimensional line plot of\nthe random numbers on the y-axis and the\nrange on the x-axis\nthe background of the plot is called\ngrid\nthe text first plot denotes the title of\nthe plot and text line one denotes the\nlegend\nyou can create a plot using four simple\nsteps\nimport the required libraries\ndefine or import the required data set\nset the plot parameters\ndisplay the created plot\nlet's consider the same example plot\nused earlier\nfollow the steps below to obtain this\nplot\nthe first step is to import the required\nlibraries\nhere we have imported numpy and pi plot\nand style from matplot library\nnumpy is used to generate the random\nnumbers and the pi plot which is built\nin python library is used to plot\nnumbers and style classes used for\nsetting the grid style\nmatplot library inline is required to\ndisplay the plot within jupiter notebook\nthe second step is to define or import\nthe required data set\nhere we have defined the data set random\nnumber using numpy random method\nnote that the range is 10.\nwe have used the print method to view\nthe created random numbers the third\nstep is to set the plot parameters\nin this step we set the style of the\nplot\nlabels of the coordinates title of the\nplot the legend and the line width\nin this example we have used ggplot as\nthe plot style\nthe plot method is used to plot the\ngraph against the random numbers\nin the plot method the word g denotes\nthe plot line color as green\nlabel denotes the legend label and it's\nnamed as line one\nalso the line width is set to two note\nthat we have labeled the x-axis as range\nand the y-axis as labels and set the\ntitle as first plot\nthe last step is to display the created\nplot\nuse the legend method to plot the graph\nbased on the set conditions and the show\nmethod to display the created plot\nlet's now learn how to create a\ntwo-dimensional plot\nconsider the following example\na nutri worldwide firm wants to know how\nmany people visit its website at a\nparticular time\nthis analysis helps it control and\nmonitor the website traffic\nthis example involves two variables\nnamely users and time\ntherefore this is a two dimensional or\n2d plot\ntake a look at the program that creates\na 2d plot\nobject web customers is a list on the\nnumber of users and time hours indicates\nthe time\nfrom this we understand that there are\n123 customers on the website at 7 am\n645 customers on the website at 8 am and\nso on\nthe gg plot is used to set the grid\nstyle and the plot method is used to\nplot the website customers against time\ndon't forget to map plot library in line\nto display or view the plot on the\njupiter notebook\nthe website traffic curve is plotted and\nthe graph is shown on the screen\nit's also possible to change the line\nstyle of the plot to change the line\nstyle of the plot use define the line\nstyle as dashed in the plot method\nobserve the output graph changes to a\ndashed line\nalso note that the color is defined as\nblue\nusing matplot library it's also possible\nto set the desired axis to interpret the\nrequired result\nuse the axis method to set the axis\nin this example shown on the screen the\nx-axis is set to range from 6.5 to\n17.5 and the y-axis is set to range from\n50 to 2000\nlet's now understand how to set the\ntransparency level of the line and to\nannotate a plot\nalpha is an attribute which controls the\ntransparency of the line lower the alpha\nvalue more transparent the line\nhere the alpha value is defined as 0.4\nthe annotate method is used to annotate\nthe graph\nthe syntax for annotate method is shown\non the screen\nthe keyword max is the attribute that\ndenotes the annotation text\nh a indicates the horizontal alignment\nva indicates the vertical alignment\nxy text indicates the text position and\nx y indicates the arrow position\nthe keyword arrow props indicates the\nproperties of the arrow\nin this example the arrow property is\ndefined as the green color\nthe output graph is shown on the screen\nso far you've learned how to set line\nwidth title x-axis and y-axis label\ntitle of the plot legend line color and\nannotate the graph for a single plot\nthe plot we created for website traffic\nin the previous screens is for only one\nday\n let's now learn how to create multiple\nplots say for three days using the same\nexample\nthe data set number of user for monday\ntuesday and wednesday is defined with\nrespect to its time distribution\nuse different color and line width for\neach day to distinguish the plot\nin this example we have used red for\nmonday green for tuesday in blue for\nwednesday the output graph is shown on\nthe screen a subplot is used to display\nmultiple plots in the same window\nwith a subplot you can arrange plots in\na regular grid\nall you need to do is specify the number\nof rows columns and plot\nthe syntax for subplot is shown on the\nscreen\nit divides the current window into an m\nby n grid and creates an axis for a\nsubplot in the position specified by p\nfor example\nsubplot 2 1 2 creates two subplots which\nare stacked vertically on a grid\nif you want to plot four graphs in one\nwindow then the syntax used should be\nsubplot 2 1 4\nlayout and spacing adjustment are two\nimportant factors to be considered while\ncreating subplots\nuse plt subplots adjust method with the\nparameters h space and w space to adjust\nthe distances between the subplot and\nmove them around on the grid\nin this demo you can see how to create\ntwo subplots that will display side by\nside in a single frame\ntwo subplots stacked one on top of the\nother or vertically split in a single\nframe\nand\nfour subplots displayed in a single\nframe\nfirst import matplotlib plot and style\ntype percentage matplotlib inline to\nview the plot in jupiter notebook\ndefine the parameters such as\ntemperature wind humidity precipitation\ndata and time data\nyou can see the data being typed here\nnext to create two subplots to be\ndisplayed side by side in a given frame\nfor one two one and one two two\nspecify the figure size subplot space\ntitle the color for time and temperature\ndata which is blue here and line style\nand width\nsimilarly specify the color for wind\nwhich is red its line style and width\nyou can see the temperature and wind\nsubplot charts displayed side by side in\na given frame here\nto create subplots 4 2 1 1 and 2 1 2\nspecify the parameters\nthis will create two subplots stacked\none on top of the other or vertically\nsplit in a given frame\nlet's use humidity and precipitation\ndata to plot the graphs\nspecify the title color line style and\nline width for both the graphs\nyou can see the two subplots stacked one\non top of the other with two different\ncolors indicating precipitation\nand humidity here the two graphs are\nseparate\nfinally let's draw four subplots four\ntwo two one\n2 2 2\n2 2 3 and 2 2 4 that will display in a\ngiven frame\nspecify the title subplot data color\nline style and line width for all four\nsubplots\nyou can see the four subplots displayed\nin a single frame\nin this demo you learned how to create\nsubplots displayed side by side\nvertically split subplots and four\nsubplots displayed in a single frame\nusing matplotlib\nyou can create different types of plots\nusing matplot library\nhistogram scatter plot heat map pie\nchart\nerror bar\nhistograms\nhistograms are graphical representations\nof a probability distribution in fact a\nhistogram is a kind of bar chart\nusing matplot library and its bar chart\nfunction you can create histogram charts\na histogram chart has several advantages\nsome of them are as follows\nit displays the number of values within\na specified interval\nit's suitable for large data sets as\nthey can be grouped within the intervals\nscatter plots\na scatter plot is used to graphically\ndisplay the relationship between\nvariables\na basic plot can be created using the\nplot method however if you need more\ncontrol of a plot it's recommended that\nyou use the scatter method provided by\nmatplot library it has several\nadvantages\nit shows the correlation between\nvariables\nit's suitable for large data sets\nit's easy to find clusters\nit's possible to represent each piece of\ndata as a point on the plot in this demo\nyou'll learn how to generate a histogram\nand scanner plot using matplotlib\nlet's import a data set called boston\ndataset which we will use to create the\nhistogram and scanner plot from the\nscikit-learn library\nlet's import matplotlib pi plot\ntype percentage matplotlib inline to\nview the plot in jupiter notebook\nlet's use the data in boston real estate\ndata set to create the histogram and\nscatter plot\nload this data\nyou can view this data by using the\nprint command\nnow define the x-axis for the data which\nis boston real estate data\nlikewise define the y-axis for the data\nwhich is boston real estate data with\nthe target extension\nspecify the plot style figure style\nnumber of bins and labels of the x-axis\nand y-axis\nuse the show method to display the\nhistogram created by you\nspecify the style size data sets and\nlabels of the scatter plot that you want\nto create\nuse the show method to display the\nscatter plot created by you\nheat maps\na heat map is a better way to visualize\ntwo-dimensional data\nusing heat maps you can gain deeper and\nquicker insight into data than those\nafforded by other types of plots\nit has several advantages\nit draws attention to the risky prone\narea\nit uses the entire data set to draw\nbigger and more meaningful insights\nit's used for cluster analysis and can\ndeal with large data sets\nin this demonstration you'll learn how\nto generate a heat map for a data set\nusing matplotlib\nlet's import the required libraries\nmatplotlib\npipot and seaborn\ntype percentage matplotlib inline to\nview the plot in jupiter notebook\nlet's load the flights data set from the\nbuilt-in data sets of seaborne library\nuse head to view the top five records of\nthe data set\nwe have to arrange the columns to\ngenerate the heat map\nlet's use the pivot method to arrange\nthe columns month year and passengers\nlet's view the flight data set that's\nnow ready to generate the heat map\nlet's use the heat map method and pass\nslight data as an argument\nthis will generate the heat map which\nyou can see here\nin this demo you learned how to create\nand display a heat map\npie charts\npie charts are typically used to show\npercentage or proportional data note\nthat usually the percentage represented\nby each category is provided next to the\ncorresponding slice of the pie\nmatplot library provides the pie method\nto make pie charts\nit has several advantages it summarizes\na large data set in visual form\nit displays the relative proportions of\nmultiple classes of data\nthe size of the circle is made\nproportional to the total quantity\nin this demonstration you'll learn how\nto create a pie chart and display it\nfirst import matplotlib pie plot\ntype percentage matplotlib inline to\nview the plot in jupiter notebook\ntype the job data within parentheses\nusing single quotes separated by commas\nspecify the labels as i t\nfinance\nmarketing admin\nhr and operations\nspecify the slice i t to explode\nuse the show method to display the pie\nchart\nyou can see the pie chart with the\nslices labels and i t the largest slice\nerror bars\nan error bar is used to show the\ngraphical representation of the\nvariability of data\nit's used mainly to point out errors\nit builds confidence about the data\nanalysis by unleashing the statistical\ndifferences between the two groups of\ndata\nit has several advantages\nit shows the variability in data and\nindicates the errors\nit depicts the precision in the data\nanalysis\nit demonstrates how well a function and\nmodel are used in the data analysis\nit defines the underlying data\nseaborn is a python visualization\nlibrary based on matplot library\nit provides a high level interface for\ndrawing attractive statistical graphics\nit was originally developed at stanford\nuniversity and is widely used for\nplotting and visualizing data\nthere are several advantages\nit possesses built-in themes for better\nvisualizations\nit has tools built-in statistical\nfunctions which reveal hidden patterns\nin the data set it has functions to\nvisualize matrices of data which become\nvery important when visualizing large\ndata sets\nhey want to become an expert in big data\nthen subscribe to the simply learn\nchannel and click here to watch more\nsuch videos to nerd up and get certified\nin big data click here\n\n",
  "sentences": [
    "[Music]\nlet's now start this lesson by defining\nwhat data visualization is\ndata visualization is the technique to\npresent the data in a pictorial or\ngraphical format\nit enables stakeholders and decision\nmakers to analyze data visually\nthe data in graphical format allows them\nto identify new trends and patterns\neasily well you might think why data\nvisualization is important\nlet's explain with an example\nyou are a sales manager in a leading\nglobal organization the organization\nplans to study the sales details of each\nproduct across all regions and countries\nthis is to identify the product which\nhas the highest sales in a particular\nregion and up the production\nthis research will enable the\norganization to increase the\nmanufacturing of that product in the\nparticular region\nthe data involved for this research\nmight be huge and complex\nthe research on this large numeric data\nis difficult and time consuming when it\nis performed manually\nwhen this numeric data is plotted on a\ngraph or converted to charts it's easy\nto identify the patterns and predict the\nresult accurately\nthe main benefits of data visualization\nare as follows\nit simplifies the complex quantitative\ninformation it helps analyze and explore\nbig data easily\nit identifies the areas that need\nattention or improvement\nit identifies the relationship between\ndata points and variables\nit explores new patterns and reveals\nhidden patterns in the data\nthere are three major considerations for\ndata visualization they are clarity\naccuracy and efficiency\nfirst ensure the data set is complete\nand relevant this enables the data\nscientist to use the new pattern's yield\nfrom the data in the relevant places\nsecond ensure using appropriate\ngraphical representation to convey the\nright message\nthird use efficient visualization\ntechnique which highlights all the data\npoints\nthere are some basic factors that one\nwould need to be aware of before\nvisualizing the data\nvisual effect\ncoordination system\ndata types and scale\ninformative interpretation\nvisual effect includes the usage of\nappropriate shapes colors and size to\nrepresent the analyzed data\nthe coordinate system helps to organize\nthe data points within the provided\ncoordinates\nthe data types and scale choose the type\nof data such as numeric or categorical\nthe informative interpretation helps\ncreate visuals in an effective and\neasily interpretable manner using labels\ntitle legends and pointers\nso far you have learned what data\nvisualization is and how it helps\ninterpret results with large and complex\ndata\nwith the help of the python programming\nlanguage you can perform this data\nvisualization\nyou'll learn more about how to visualize\ndata using the python programming\nlanguage in the subsequent screens\nmany new python data visualization\nlibraries are introduced recently\nsuch as matplot library vispy boca\nseaborne\npigel folium and networks\nthe matplot library has emerged as the\nmain data visualization library\nlet's now learn about this matplot\nlibrary in detail\nmatplot library is a python\ntwo-dimensional plotting library for\ndata visualization and creating\ninteractive graphics or plots\nusing python's matplot library the data\nvisualization of large and complex data\nbecomes easy\nthere are several advantages of using\nmatplot library to visualize data\nthey are as follows\nit's a multi-platform data visualization\ntool built on the numpy and scipy\nframework\ntherefore it's fast and efficient\nit possesses the ability to work well\nwith many operating systems and graphic\nback-ends\nit possesses high quality graphics and\nplots to print and view for a range of\ngraphs such as histograms bar charts pie\ncharts scatter plots and heat maps\nwith jupiter notebook integration the\ndevelopers have been free to spend their\ntime implementing features rather than\nstruggling with cross-platform\ncompatibility\nit has large community support and\ncross-platform support\nas it is an open source tool\nit has full control over graph or plot\nstyles such as line properties fonts and\naxis properties\nlet's now try to understand a plot\na plot is a graphical representation of\ndata which shows relationship between\ntwo variables or the distribution of\ndata\nlook at the example shown on the screen\nthis is a two-dimensional line plot of\nthe random numbers on the y-axis and the\nrange on the x-axis\nthe background of the plot is called\ngrid\nthe text first plot denotes the title of\nthe plot and text line one denotes the\nlegend\nyou can create a plot using four simple\nsteps\nimport the required libraries\ndefine or import the required data set\nset the plot parameters\ndisplay the created plot\nlet's consider the same example plot\nused earlier\nfollow the steps below to obtain this\nplot\nthe first step is to import the required\nlibraries\nhere we have imported numpy and pi plot\nand style from matplot library\nnumpy is used to generate the random\nnumbers and the pi plot which is built\nin python library is used to plot\nnumbers and style classes used for\nsetting the grid style\nmatplot library inline is required to\ndisplay the plot within jupiter notebook\nthe second step is to define or import\nthe required data set\nhere we have defined the data set random\nnumber using numpy random method\nnote that the range is 10.\nwe have used the print method to view\nthe created random numbers the third\nstep is to set the plot parameters\nin this step we set the style of the\nplot\nlabels of the coordinates title of the\nplot the legend and the line width\nin this example we have used ggplot as\nthe plot style\nthe plot method is used to plot the\ngraph against the random numbers\nin the plot method the word g denotes\nthe plot line color as green\nlabel denotes the legend label and it's\nnamed as line one\nalso the line width is set to two note\nthat we have labeled the x-axis as range\nand the y-axis as labels and set the\ntitle as first plot\nthe last step is to display the created\nplot\nuse the legend method to plot the graph\nbased on the set conditions and the show\nmethod to display the created plot\nlet's now learn how to create a\ntwo-dimensional plot\nconsider the following example\na nutri worldwide firm wants to know how\nmany people visit its website at a\nparticular time\nthis analysis helps it control and\nmonitor the website traffic\nthis example involves two variables\nnamely users and time\ntherefore this is a two dimensional or\n2d plot\ntake a look at the program that creates\na 2d plot\nobject web customers is a list on the\nnumber of users and time hours indicates\nthe time\nfrom this we understand that there are\n123 customers on the website at 7 am\n645 customers on the website at 8 am and\nso on\nthe gg plot is used to set the grid\nstyle and the plot method is used to\nplot the website customers against time\ndon't forget to map plot library in line\nto display or view the plot on the\njupiter notebook\nthe website traffic curve is plotted and\nthe graph is shown on the screen\nit's also possible to change the line\nstyle of the plot to change the line\nstyle of the plot use define the line\nstyle as dashed in the plot method\nobserve the output graph changes to a\ndashed line\nalso note that the color is defined as\nblue\nusing matplot library it's also possible\nto set the desired axis to interpret the\nrequired result\nuse the axis method to set the axis\nin this example shown on the screen the\nx-axis is set to range from 6.5 to\n17.5 and the y-axis is set to range from\n50 to 2000\nlet's now understand how to set the\ntransparency level of the line and to\nannotate a plot\nalpha is an attribute which controls the\ntransparency of the line lower the alpha\nvalue more transparent the line\nhere the alpha value is defined as 0.4\nthe annotate method is used to annotate\nthe graph\nthe syntax for annotate method is shown\non the screen\nthe keyword max is the attribute that\ndenotes the annotation text\nh a indicates the horizontal alignment\nva indicates the vertical alignment\nxy text indicates the text position and\nx y indicates the arrow position\nthe keyword arrow props indicates the\nproperties of the arrow\nin this example the arrow property is\ndefined as the green color\nthe output graph is shown on the screen\nso far you've learned how to set line\nwidth title x-axis and y-axis label\ntitle of the plot legend line color and\nannotate the graph for a single plot\nthe plot we created for website traffic\nin the previous screens is for only one\nday\n let's now learn how to create multiple\nplots say for three days using the same\nexample\nthe data set number of user for monday\ntuesday and wednesday is defined with\nrespect to its time distribution\nuse different color and line width for\neach day to distinguish the plot\nin this example we have used red for\nmonday green for tuesday in blue for\nwednesday the output graph is shown on\nthe screen a subplot is used to display\nmultiple plots in the same window\nwith a subplot you can arrange plots in\na regular grid\nall you need to do is specify the number\nof rows columns and plot\nthe syntax for subplot is shown on the\nscreen\nit divides the current window into an m\nby n grid and creates an axis for a\nsubplot in the position specified by p\nfor example\nsubplot 2 1 2 creates two subplots which\nare stacked vertically on a grid\nif you want to plot four graphs in one\nwindow then the syntax used should be\nsubplot 2 1 4\nlayout and spacing adjustment are two\nimportant factors to be considered while\ncreating subplots\nuse plt subplots adjust method with the\nparameters h space and w space to adjust\nthe distances between the subplot and\nmove them around on the grid\nin this demo you can see how to create\ntwo subplots that will display side by\nside in a single frame\ntwo subplots stacked one on top of the\nother or vertically split in a single\nframe\nand\nfour subplots displayed in a single\nframe\nfirst import matplotlib plot and style\ntype percentage matplotlib inline to\nview the plot in jupiter notebook\ndefine the parameters such as\ntemperature wind humidity precipitation\ndata and time data\nyou can see the data being typed here\nnext to create two subplots to be\ndisplayed side by side in a given frame\nfor one two one and one two two\nspecify the figure size subplot space\ntitle the color for time and temperature\ndata which is blue here and line style\nand width\nsimilarly specify the color for wind\nwhich is red its line style and width\nyou can see the temperature and wind\nsubplot charts displayed side by side in\na given frame here\nto create subplots 4 2 1 1 and 2 1 2\nspecify the parameters\nthis will create two subplots stacked\none on top of the other or vertically\nsplit in a given frame\nlet's use humidity and precipitation\ndata to plot the graphs\nspecify the title color line style and\nline width for both the graphs\nyou can see the two subplots stacked one\non top of the other with two different\ncolors indicating precipitation\nand humidity here the two graphs are\nseparate\nfinally let's draw four subplots four\ntwo two one\n2 2 2\n2 2 3 and 2 2 4 that will display in a\ngiven frame\nspecify the title subplot data color\nline style and line width for all four\nsubplots\nyou can see the four subplots displayed\nin a single frame\nin this demo you learned how to create\nsubplots displayed side by side\nvertically split subplots and four\nsubplots displayed in a single frame\nusing matplotlib\nyou can create different types of plots\nusing matplot library\nhistogram scatter plot heat map pie\nchart\nerror bar\nhistograms\nhistograms are graphical representations\nof a probability distribution in fact a\nhistogram is a kind of bar chart\nusing matplot library and its bar chart\nfunction you can create histogram charts\na histogram chart has several advantages\nsome of them are as follows\nit displays the number of values within\na specified interval\nit's suitable for large data sets as\nthey can be grouped within the intervals\nscatter plots\na scatter plot is used to graphically\ndisplay the relationship between\nvariables\na basic plot can be created using the\nplot method however if you need more\ncontrol of a plot it's recommended that\nyou use the scatter method provided by\nmatplot library it has several\nadvantages\nit shows the correlation between\nvariables\nit's suitable for large data sets\nit's easy to find clusters\nit's possible to represent each piece of\ndata as a point on the plot in this demo\nyou'll learn how to generate a histogram\nand scanner plot using matplotlib\nlet's import a data set called boston\ndataset which we will use to create the\nhistogram and scanner plot from the\nscikit-learn library\nlet's import matplotlib pi plot\ntype percentage matplotlib inline to\nview the plot in jupiter notebook\nlet's use the data in boston real estate\ndata set to create the histogram and\nscatter plot\nload this data\nyou can view this data by using the\nprint command\nnow define the x-axis for the data which\nis boston real estate data\nlikewise define the y-axis for the data\nwhich is boston real estate data with\nthe target extension\nspecify the plot style figure style\nnumber of bins and labels of the x-axis\nand y-axis\nuse the show method to display the\nhistogram created by you\nspecify the style size data sets and\nlabels of the scatter plot that you want\nto create\nuse the show method to display the\nscatter plot created by you\nheat maps\na heat map is a better way to visualize\ntwo-dimensional data\nusing heat maps you can gain deeper and\nquicker insight into data than those\nafforded by other types of plots\nit has several advantages\nit draws attention to the risky prone\narea\nit uses the entire data set to draw\nbigger and more meaningful insights\nit's used for cluster analysis and can\ndeal with large data sets\nin this demonstration you'll learn how\nto generate a heat map for a data set\nusing matplotlib\nlet's import the required libraries\nmatplotlib\npipot and seaborn\ntype percentage matplotlib inline to\nview the plot in jupiter notebook\nlet's load the flights data set from the\nbuilt-in data sets of seaborne library\nuse head to view the top five records of\nthe data set\nwe have to arrange the columns to\ngenerate the heat map\nlet's use the pivot method to arrange\nthe columns month year and passengers\nlet's view the flight data set that's\nnow ready to generate the heat map\nlet's use the heat map method and pass\nslight data as an argument\nthis will generate the heat map which\nyou can see here\nin this demo you learned how to create\nand display a heat map\npie charts\npie charts are typically used to show\npercentage or proportional data note\nthat usually the percentage represented\nby each category is provided next to the\ncorresponding slice of the pie\nmatplot library provides the pie method\nto make pie charts\nit has several advantages it summarizes\na large data set in visual form\nit displays the relative proportions of\nmultiple classes of data\nthe size of the circle is made\nproportional to the total quantity\nin this demonstration you'll learn how\nto create a pie chart and display it\nfirst import matplotlib pie plot\ntype percentage matplotlib inline to\nview the plot in jupiter notebook\ntype the job data within parentheses\nusing single quotes separated by commas\nspecify the labels as i t\nfinance\nmarketing admin\nhr and operations\nspecify the slice i t to explode\nuse the show method to display the pie\nchart\nyou can see the pie chart with the\nslices labels and i t the largest slice\nerror bars\nan error bar is used to show the\ngraphical representation of the\nvariability of data\nit's used mainly to point out errors\nit builds confidence about the data\nanalysis by unleashing the statistical\ndifferences between the two groups of\ndata\nit has several advantages\nit shows the variability in data and\nindicates the errors\nit depicts the precision in the data\nanalysis\nit demonstrates how well a function and\nmodel are used in the data analysis\nit defines the underlying data\nseaborn is a python visualization\nlibrary based on matplot library\nit provides a high level interface for\ndrawing attractive statistical graphics\nit was originally developed at stanford\nuniversity and is widely used for\nplotting and visualizing data\nthere are several advantages\nit possesses built-in themes for better\nvisualizations\nit has tools built-in statistical\nfunctions which reveal hidden patterns\nin the data set it has functions to\nvisualize matrices of data which become\nvery important when visualizing large\ndata sets\nhey want to become an expert in big data\nthen subscribe to the simply learn\nchannel and click here to watch more\nsuch videos to nerd up and get certified\nin big data click here"
  ],
  "paragraphs": [
    "[Music]",
    "let's now start this lesson by defining",
    "what data visualization is",
    "data visualization is the technique to",
    "present the data in a pictorial or",
    "graphical format",
    "it enables stakeholders and decision",
    "makers to analyze data visually",
    "the data in graphical format allows them",
    "to identify new trends and patterns",
    "easily well you might think why data",
    "visualization is important",
    "let's explain with an example",
    "you are a sales manager in a leading",
    "global organization the organization",
    "plans to study the sales details of each",
    "product across all regions and countries",
    "this is to identify the product which",
    "has the highest sales in a particular",
    "region and up the production",
    "this research will enable the",
    "organization to increase the",
    "manufacturing of that product in the",
    "particular region",
    "the data involved for this research",
    "might be huge and complex",
    "the research on this large numeric data",
    "is difficult and time consuming when it",
    "is performed manually",
    "when this numeric data is plotted on a",
    "graph or converted to charts it's easy",
    "to identify the patterns and predict the",
    "result accurately",
    "the main benefits of data visualization",
    "are as follows",
    "it simplifies the complex quantitative",
    "information it helps analyze and explore",
    "big data easily",
    "it identifies the areas that need",
    "attention or improvement",
    "it identifies the relationship between",
    "data points and variables",
    "it explores new patterns and reveals",
    "hidden patterns in the data",
    "there are three major considerations for",
    "data visualization they are clarity",
    "accuracy and efficiency",
    "first ensure the data set is complete",
    "and relevant this enables the data",
    "scientist to use the new pattern's yield",
    "from the data in the relevant places",
    "second ensure using appropriate",
    "graphical representation to convey the",
    "right message",
    "third use efficient visualization",
    "technique which highlights all the data",
    "points",
    "there are some basic factors that one",
    "would need to be aware of before",
    "visualizing the data",
    "visual effect",
    "coordination system",
    "data types and scale",
    "informative interpretation",
    "visual effect includes the usage of",
    "appropriate shapes colors and size to",
    "represent the analyzed data",
    "the coordinate system helps to organize",
    "the data points within the provided",
    "coordinates",
    "the data types and scale choose the type",
    "of data such as numeric or categorical",
    "the informative interpretation helps",
    "create visuals in an effective and",
    "easily interpretable manner using labels",
    "title legends and pointers",
    "so far you have learned what data",
    "visualization is and how it helps",
    "interpret results with large and complex",
    "data",
    "with the help of the python programming",
    "language you can perform this data",
    "visualization",
    "you'll learn more about how to visualize",
    "data using the python programming",
    "language in the subsequent screens",
    "many new python data visualization",
    "libraries are introduced recently",
    "such as matplot library vispy boca",
    "seaborne",
    "pigel folium and networks",
    "the matplot library has emerged as the",
    "main data visualization library",
    "let's now learn about this matplot",
    "library in detail",
    "matplot library is a python",
    "two-dimensional plotting library for",
    "data visualization and creating",
    "interactive graphics or plots",
    "using python's matplot library the data",
    "visualization of large and complex data",
    "becomes easy",
    "there are several advantages of using",
    "matplot library to visualize data",
    "they are as follows",
    "it's a multi-platform data visualization",
    "tool built on the numpy and scipy",
    "framework",
    "therefore it's fast and efficient",
    "it possesses the ability to work well",
    "with many operating systems and graphic",
    "back-ends",
    "it possesses high quality graphics and",
    "plots to print and view for a range of",
    "graphs such as histograms bar charts pie",
    "charts scatter plots and heat maps",
    "with jupiter notebook integration the",
    "developers have been free to spend their",
    "time implementing features rather than",
    "struggling with cross-platform",
    "compatibility",
    "it has large community support and",
    "cross-platform support",
    "as it is an open source tool",
    "it has full control over graph or plot",
    "styles such as line properties fonts and",
    "axis properties",
    "let's now try to understand a plot",
    "a plot is a graphical representation of",
    "data which shows relationship between",
    "two variables or the distribution of",
    "data",
    "look at the example shown on the screen",
    "this is a two-dimensional line plot of",
    "the random numbers on the y-axis and the",
    "range on the x-axis",
    "the background of the plot is called",
    "grid",
    "the text first plot denotes the title of",
    "the plot and text line one denotes the",
    "legend",
    "you can create a plot using four simple",
    "steps",
    "import the required libraries",
    "define or import the required data set",
    "set the plot parameters",
    "display the created plot",
    "let's consider the same example plot",
    "used earlier",
    "follow the steps below to obtain this",
    "plot",
    "the first step is to import the required",
    "libraries",
    "here we have imported numpy and pi plot",
    "and style from matplot library",
    "numpy is used to generate the random",
    "numbers and the pi plot which is built",
    "in python library is used to plot",
    "numbers and style classes used for",
    "setting the grid style",
    "matplot library inline is required to",
    "display the plot within jupiter notebook",
    "the second step is to define or import",
    "the required data set",
    "here we have defined the data set random",
    "number using numpy random method",
    "note that the range is 10.",
    "we have used the print method to view",
    "the created random numbers the third",
    "step is to set the plot parameters",
    "in this step we set the style of the",
    "plot",
    "labels of the coordinates title of the",
    "plot the legend and the line width",
    "in this example we have used ggplot as",
    "the plot style",
    "the plot method is used to plot the",
    "graph against the random numbers",
    "in the plot method the word g denotes",
    "the plot line color as green",
    "label denotes the legend label and it's",
    "named as line one",
    "also the line width is set to two note",
    "that we have labeled the x-axis as range",
    "and the y-axis as labels and set the",
    "title as first plot",
    "the last step is to display the created",
    "plot",
    "use the legend method to plot the graph",
    "based on the set conditions and the show",
    "method to display the created plot",
    "let's now learn how to create a",
    "two-dimensional plot",
    "consider the following example",
    "a nutri worldwide firm wants to know how",
    "many people visit its website at a",
    "particular time",
    "this analysis helps it control and",
    "monitor the website traffic",
    "this example involves two variables",
    "namely users and time",
    "therefore this is a two dimensional or",
    "2d plot",
    "take a look at the program that creates",
    "a 2d plot",
    "object web customers is a list on the",
    "number of users and time hours indicates",
    "the time",
    "from this we understand that there are",
    "123 customers on the website at 7 am",
    "645 customers on the website at 8 am and",
    "so on",
    "the gg plot is used to set the grid",
    "style and the plot method is used to",
    "plot the website customers against time",
    "don't forget to map plot library in line",
    "to display or view the plot on the",
    "jupiter notebook",
    "the website traffic curve is plotted and",
    "the graph is shown on the screen",
    "it's also possible to change the line",
    "style of the plot to change the line",
    "style of the plot use define the line",
    "style as dashed in the plot method",
    "observe the output graph changes to a",
    "dashed line",
    "also note that the color is defined as",
    "blue",
    "using matplot library it's also possible",
    "to set the desired axis to interpret the",
    "required result",
    "use the axis method to set the axis",
    "in this example shown on the screen the",
    "x-axis is set to range from 6.5 to",
    "17.5 and the y-axis is set to range from",
    "50 to 2000",
    "let's now understand how to set the",
    "transparency level of the line and to",
    "annotate a plot",
    "alpha is an attribute which controls the",
    "transparency of the line lower the alpha",
    "value more transparent the line",
    "here the alpha value is defined as 0.4",
    "the annotate method is used to annotate",
    "the graph",
    "the syntax for annotate method is shown",
    "on the screen",
    "the keyword max is the attribute that",
    "denotes the annotation text",
    "h a indicates the horizontal alignment",
    "va indicates the vertical alignment",
    "xy text indicates the text position and",
    "x y indicates the arrow position",
    "the keyword arrow props indicates the",
    "properties of the arrow",
    "in this example the arrow property is",
    "defined as the green color",
    "the output graph is shown on the screen",
    "so far you've learned how to set line",
    "width title x-axis and y-axis label",
    "title of the plot legend line color and",
    "annotate the graph for a single plot",
    "the plot we created for website traffic",
    "in the previous screens is for only one",
    "day",
    "let's now learn how to create multiple",
    "plots say for three days using the same",
    "example",
    "the data set number of user for monday",
    "tuesday and wednesday is defined with",
    "respect to its time distribution",
    "use different color and line width for",
    "each day to distinguish the plot",
    "in this example we have used red for",
    "monday green for tuesday in blue for",
    "wednesday the output graph is shown on",
    "the screen a subplot is used to display",
    "multiple plots in the same window",
    "with a subplot you can arrange plots in",
    "a regular grid",
    "all you need to do is specify the number",
    "of rows columns and plot",
    "the syntax for subplot is shown on the",
    "screen",
    "it divides the current window into an m",
    "by n grid and creates an axis for a",
    "subplot in the position specified by p",
    "for example",
    "subplot 2 1 2 creates two subplots which",
    "are stacked vertically on a grid",
    "if you want to plot four graphs in one",
    "window then the syntax used should be",
    "subplot 2 1 4",
    "layout and spacing adjustment are two",
    "important factors to be considered while",
    "creating subplots",
    "use plt subplots adjust method with the",
    "parameters h space and w space to adjust",
    "the distances between the subplot and",
    "move them around on the grid",
    "in this demo you can see how to create",
    "two subplots that will display side by",
    "side in a single frame",
    "two subplots stacked one on top of the",
    "other or vertically split in a single",
    "frame",
    "and",
    "four subplots displayed in a single",
    "frame",
    "first import matplotlib plot and style",
    "type percentage matplotlib inline to",
    "view the plot in jupiter notebook",
    "define the parameters such as",
    "temperature wind humidity precipitation",
    "data and time data",
    "you can see the data being typed here",
    "next to create two subplots to be",
    "displayed side by side in a given frame",
    "for one two one and one two two",
    "specify the figure size subplot space",
    "title the color for time and temperature",
    "data which is blue here and line style",
    "and width",
    "similarly specify the color for wind",
    "which is red its line style and width",
    "you can see the temperature and wind",
    "subplot charts displayed side by side in",
    "a given frame here",
    "to create subplots 4 2 1 1 and 2 1 2",
    "specify the parameters",
    "this will create two subplots stacked",
    "one on top of the other or vertically",
    "split in a given frame",
    "let's use humidity and precipitation",
    "data to plot the graphs",
    "specify the title color line style and",
    "line width for both the graphs",
    "you can see the two subplots stacked one",
    "on top of the other with two different",
    "colors indicating precipitation",
    "and humidity here the two graphs are",
    "separate",
    "finally let's draw four subplots four",
    "two two one",
    "2 2 2",
    "2 2 3 and 2 2 4 that will display in a",
    "given frame",
    "specify the title subplot data color",
    "line style and line width for all four",
    "subplots",
    "you can see the four subplots displayed",
    "in a single frame",
    "in this demo you learned how to create",
    "subplots displayed side by side",
    "vertically split subplots and four",
    "subplots displayed in a single frame",
    "using matplotlib",
    "you can create different types of plots",
    "using matplot library",
    "histogram scatter plot heat map pie",
    "chart",
    "error bar",
    "histograms",
    "histograms are graphical representations",
    "of a probability distribution in fact a",
    "histogram is a kind of bar chart",
    "using matplot library and its bar chart",
    "function you can create histogram charts",
    "a histogram chart has several advantages",
    "some of them are as follows",
    "it displays the number of values within",
    "a specified interval",
    "it's suitable for large data sets as",
    "they can be grouped within the intervals",
    "scatter plots",
    "a scatter plot is used to graphically",
    "display the relationship between",
    "variables",
    "a basic plot can be created using the",
    "plot method however if you need more",
    "control of a plot it's recommended that",
    "you use the scatter method provided by",
    "matplot library it has several",
    "advantages",
    "it shows the correlation between",
    "variables",
    "it's suitable for large data sets",
    "it's easy to find clusters",
    "it's possible to represent each piece of",
    "data as a point on the plot in this demo",
    "you'll learn how to generate a histogram",
    "and scanner plot using matplotlib",
    "let's import a data set called boston",
    "dataset which we will use to create the",
    "histogram and scanner plot from the",
    "scikit-learn library",
    "let's import matplotlib pi plot",
    "type percentage matplotlib inline to",
    "view the plot in jupiter notebook",
    "let's use the data in boston real estate",
    "data set to create the histogram and",
    "scatter plot",
    "load this data",
    "you can view this data by using the",
    "print command",
    "now define the x-axis for the data which",
    "is boston real estate data",
    "likewise define the y-axis for the data",
    "which is boston real estate data with",
    "the target extension",
    "specify the plot style figure style",
    "number of bins and labels of the x-axis",
    "and y-axis",
    "use the show method to display the",
    "histogram created by you",
    "specify the style size data sets and",
    "labels of the scatter plot that you want",
    "to create",
    "use the show method to display the",
    "scatter plot created by you",
    "heat maps",
    "a heat map is a better way to visualize",
    "two-dimensional data",
    "using heat maps you can gain deeper and",
    "quicker insight into data than those",
    "afforded by other types of plots",
    "it has several advantages",
    "it draws attention to the risky prone",
    "area",
    "it uses the entire data set to draw",
    "bigger and more meaningful insights",
    "it's used for cluster analysis and can",
    "deal with large data sets",
    "in this demonstration you'll learn how",
    "to generate a heat map for a data set",
    "using matplotlib",
    "let's import the required libraries",
    "matplotlib",
    "pipot and seaborn",
    "type percentage matplotlib inline to",
    "view the plot in jupiter notebook",
    "let's load the flights data set from the",
    "built-in data sets of seaborne library",
    "use head to view the top five records of",
    "the data set",
    "we have to arrange the columns to",
    "generate the heat map",
    "let's use the pivot method to arrange",
    "the columns month year and passengers",
    "let's view the flight data set that's",
    "now ready to generate the heat map",
    "let's use the heat map method and pass",
    "slight data as an argument",
    "this will generate the heat map which",
    "you can see here",
    "in this demo you learned how to create",
    "and display a heat map",
    "pie charts",
    "pie charts are typically used to show",
    "percentage or proportional data note",
    "that usually the percentage represented",
    "by each category is provided next to the",
    "corresponding slice of the pie",
    "matplot library provides the pie method",
    "to make pie charts",
    "it has several advantages it summarizes",
    "a large data set in visual form",
    "it displays the relative proportions of",
    "multiple classes of data",
    "the size of the circle is made",
    "proportional to the total quantity",
    "in this demonstration you'll learn how",
    "to create a pie chart and display it",
    "first import matplotlib pie plot",
    "type percentage matplotlib inline to",
    "view the plot in jupiter notebook",
    "type the job data within parentheses",
    "using single quotes separated by commas",
    "specify the labels as i t",
    "finance",
    "marketing admin",
    "hr and operations",
    "specify the slice i t to explode",
    "use the show method to display the pie",
    "chart",
    "you can see the pie chart with the",
    "slices labels and i t the largest slice",
    "error bars",
    "an error bar is used to show the",
    "graphical representation of the",
    "variability of data",
    "it's used mainly to point out errors",
    "it builds confidence about the data",
    "analysis by unleashing the statistical",
    "differences between the two groups of",
    "data",
    "it has several advantages",
    "it shows the variability in data and",
    "indicates the errors",
    "it depicts the precision in the data",
    "analysis",
    "it demonstrates how well a function and",
    "model are used in the data analysis",
    "it defines the underlying data",
    "seaborn is a python visualization",
    "library based on matplot library",
    "it provides a high level interface for",
    "drawing attractive statistical graphics",
    "it was originally developed at stanford",
    "university and is widely used for",
    "plotting and visualizing data",
    "there are several advantages",
    "it possesses built-in themes for better",
    "visualizations",
    "it has tools built-in statistical",
    "functions which reveal hidden patterns",
    "in the data set it has functions to",
    "visualize matrices of data which become",
    "very important when visualizing large",
    "data sets",
    "hey want to become an expert in big data",
    "then subscribe to the simply learn",
    "channel and click here to watch more",
    "such videos to nerd up and get certified",
    "in big data click here"
  ],
  "keywords": [
    "highest",
    "distances",
    "huge",
    "scientist",
    "records",
    "complex",
    "ensure",
    "vertically",
    "easily",
    "increase",
    "width",
    "know",
    "indicates",
    "imported",
    "afforded",
    "number",
    "adjustment",
    "pie",
    "converted",
    "system",
    "slice",
    "relative",
    "extension",
    "user",
    "dashed",
    "research",
    "head",
    "points",
    "tools",
    "developed",
    "suitable",
    "matplot",
    "denotes",
    "change",
    "x",
    "top",
    "efficient",
    "large",
    "quantitative",
    "value",
    "load",
    "mainly",
    "involved",
    "statistical",
    "graphically",
    "label",
    "grid",
    "become",
    "numpy",
    "web",
    "emerged",
    "pivot",
    "use",
    "color",
    "distribution",
    "implementing",
    "multiple",
    "informative",
    "hidden",
    "next",
    "level",
    "made",
    "represented",
    "plotted",
    "subplots",
    "h",
    "visualizing",
    "forget",
    "xy",
    "map",
    "variability",
    "around",
    "monitor",
    "boca",
    "demo",
    "introduced",
    "pipot",
    "circle",
    "fact",
    "subscribe",
    "style",
    "random",
    "data",
    "using",
    "temperature",
    "factors",
    "parameters",
    "job",
    "coordinates",
    "also",
    "right",
    "creating",
    "area",
    "quotes",
    "seaborne",
    "visualization",
    "8",
    "finally",
    "title",
    "analyzed",
    "representations",
    "graphical",
    "operations",
    "demonstrates",
    "days",
    "attractive",
    "visit",
    "clarity",
    "day",
    "blue",
    "syntax",
    "hours",
    "insight",
    "intervals",
    "precision",
    "compatibility",
    "users",
    "defining",
    "hr",
    "support",
    "scanner",
    "quality",
    "layout",
    "visualizations",
    "demonstration",
    "pi",
    "namely",
    "organization",
    "underlying",
    "try",
    "earlier",
    "efficiency",
    "category",
    "indicating",
    "features",
    "wants",
    "creates",
    "frame",
    "displays",
    "draws",
    "gg",
    "scipy",
    "distinguish",
    "unleashing",
    "university",
    "involves",
    "print",
    "full",
    "expert",
    "provides",
    "inline",
    "risky",
    "take",
    "flights",
    "arrow",
    "tool",
    "following",
    "total",
    "stakeholders",
    "target",
    "prone",
    "max",
    "histograms",
    "systems",
    "flight",
    "manufacturing",
    "50",
    "areas",
    "production",
    "enable",
    "subplot",
    "given",
    "maps",
    "interpretable",
    "types",
    "traffic",
    "recommended",
    "benefits",
    "separate",
    "fonts",
    "manager",
    "graphs",
    "three",
    "observe",
    "heat",
    "provided",
    "basic",
    "accurately",
    "real",
    "year",
    "graphic",
    "well",
    "major",
    "set",
    "think",
    "free",
    "setting",
    "finance",
    "proportional",
    "technique",
    "source",
    "cluster",
    "ability",
    "transparent",
    "classes",
    "time",
    "percentage",
    "choose",
    "legend",
    "colors",
    "arrange",
    "visually",
    "make",
    "boston",
    "interval",
    "better",
    "quantity",
    "might",
    "say",
    "ggplot",
    "form",
    "required",
    "2000",
    "pigel",
    "considered",
    "two",
    "parentheses",
    "result",
    "steps",
    "organize",
    "people",
    "uses",
    "results",
    "possible",
    "quicker",
    "many",
    "stanford",
    "type",
    "product",
    "attention",
    "convey",
    "histogram",
    "separated",
    "improvement",
    "green",
    "interface",
    "adjust",
    "output",
    "single",
    "side",
    "manner",
    "used",
    "slight",
    "commas",
    "study",
    "coordination",
    "shown",
    "bar",
    "explore",
    "slices",
    "move",
    "within",
    "control",
    "month",
    "simple",
    "second",
    "effective",
    "alpha",
    "note",
    "entire",
    "manually",
    "probability",
    "lesson",
    "function",
    "four",
    "need",
    "specify",
    "music",
    "customers",
    "errors",
    "shows",
    "stacked",
    "becomes",
    "get",
    "region",
    "aware",
    "fast",
    "4",
    "see",
    "important",
    "numbers",
    "libraries",
    "humidity",
    "high",
    "645",
    "created",
    "functions",
    "open",
    "usage",
    "plot",
    "g",
    "show",
    "argument",
    "categorical",
    "clusters",
    "chart",
    "visual",
    "represent",
    "position",
    "model",
    "2",
    "considerations",
    "text",
    "specified",
    "plans",
    "visualize",
    "grouped",
    "based",
    "includes",
    "allows",
    "details",
    "helps",
    "reveals",
    "way",
    "conditions",
    "2d",
    "watch",
    "program",
    "monday",
    "consuming",
    "respect",
    "red",
    "method",
    "deal",
    "first",
    "defined",
    "find",
    "generate",
    "simply",
    "sets",
    "alignment",
    "graph",
    "axis",
    "screen",
    "lower",
    "values",
    "widely",
    "size",
    "list",
    "likewise",
    "define",
    "p",
    "operating",
    "understand",
    "corresponding",
    "depicts",
    "matrices",
    "1",
    "labels",
    "integration",
    "decision",
    "error",
    "deeper",
    "marketing",
    "follows",
    "therefore",
    "gain",
    "would",
    "main",
    "pass",
    "horizontal",
    "start",
    "sales",
    "seaborn",
    "information",
    "format",
    "display",
    "differences",
    "explores",
    "plotting",
    "draw",
    "create",
    "tuesday",
    "interpret",
    "insights",
    "reveal",
    "built",
    "admin",
    "leading",
    "line",
    "divides",
    "struggling",
    "property",
    "figure",
    "7",
    "scale",
    "changes",
    "precipitation",
    "interpretation",
    "properties",
    "labeled",
    "programming",
    "different",
    "identify",
    "defines",
    "word",
    "effect",
    "new",
    "learned",
    "va",
    "vertical",
    "ready",
    "message",
    "named",
    "previous",
    "wind",
    "framework",
    "obtain",
    "bigger",
    "screens",
    "meaningful",
    "complete",
    "view",
    "bins",
    "called",
    "relationship",
    "interactive",
    "charts",
    "accuracy",
    "vispy",
    "drawing",
    "hey",
    "predict",
    "performed",
    "annotation",
    "places",
    "numeric",
    "detail",
    "n",
    "click",
    "particular",
    "possesses",
    "subsequent",
    "plots",
    "developers",
    "usually",
    "certified",
    "trends",
    "folium",
    "keyword",
    "want",
    "correlation",
    "legends",
    "bars",
    "estate",
    "learn",
    "scatter",
    "recently",
    "controls",
    "props",
    "matplotlib",
    "far",
    "across",
    "shapes",
    "annotate",
    "variables",
    "global",
    "summarizes",
    "plt",
    "pattern",
    "patterns",
    "piece",
    "themes",
    "visuals",
    "attribute",
    "explode",
    "firm",
    "look",
    "spend",
    "website",
    "builds",
    "makers",
    "present",
    "several",
    "difficult",
    "object",
    "highlights",
    "follow",
    "one",
    "help",
    "confidence",
    "easy",
    "groups",
    "step",
    "third",
    "space",
    "123",
    "originally",
    "community",
    "current",
    "regular",
    "worldwide",
    "dimensional",
    "enables",
    "coordinate",
    "spacing",
    "pointers",
    "notebook",
    "yield",
    "countries",
    "analysis",
    "pictorial",
    "dataset",
    "however",
    "typed",
    "relevant",
    "graphics",
    "kind",
    "videos",
    "window",
    "import",
    "let",
    "big",
    "typically",
    "largest",
    "nutri",
    "language",
    "passengers",
    "curve",
    "consider",
    "channel",
    "explain",
    "proportions",
    "work",
    "representation",
    "identifies",
    "networks",
    "desired",
    "example",
    "range",
    "appropriate",
    "styles",
    "displayed",
    "jupiter",
    "five",
    "perform",
    "nerd",
    "command",
    "library",
    "background",
    "transparency",
    "rows",
    "advantages",
    "rather",
    "analyze",
    "columns",
    "simplifies",
    "split",
    "3",
    "last",
    "point",
    "wednesday",
    "regions",
    "python",
    "w",
    "similarly"
  ]
}