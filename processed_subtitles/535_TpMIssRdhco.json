{
  "text": "One of my favorite machine learning algorithms is\nGenerative Adversarial Networks, or GAN.\nIt pits two AI models off against each other,\nhence the \"adversarial\" part.\nNow, most machine learning models\nare used to generate a prediction.\nSo we start with some input training data.\nAnd we feed that into our model.\nA model then makes a prediction\nin the form of output.\nAnd we can compare the predicted output\nwith the expected output\nfrom the training data set.\nAnd then based upon that expected output\nand the actual predicted output,\nwe can figure out how we should update our model\nto create better outputs.\nThat is an example of supervised learning.\nA GAN is an example of unsupervised learning,\nit effectively supervises itself,\nand it consists of two submodels.\nSo we have a generator submodel.\nAnd we have a discriminator submodel.\nNow, the generator's job is to create\nfake input or fake samples.\nAnd the discriminator's job is to take a given sample\nand figure out if it is a fake sample\nor if it's a real sample from the domain.\nAnd therein lies the adversarial nature of this.\nWe have a generator creating fake samples\nand sending them to a discriminator.\nThe discriminator is taking a look at a given sample and figuring out,\n\"Is this a fake sample from the generator?\nOr is this a real sample from the domain set?\"\nNow, this sort of scenario is often applied in image generation.\nThere are images all over the internet of generators\nthat have been used to create fake 3D models,\nfake faces, fake cats and so forth.\nSo this really works by the generator iterating through\na number of different cycles of creating samples,\nupdating its model and so forth\nuntil it can create a sample that is so convincing\nthat it can fool a discriminator and also fool us humans as well.\nSo let's let's take an example\nof how this works with, let's say, a flower.\nSo we are going to train a generator to create really convincing fake flowers,\nand the way that we start by doing this is we need to, first of all,\ntrain our discriminator model to recognize what a picture of a flower looks like.\nSo our domain is lots of pictures of flowers,\nand we will be feeding this into the discriminator model\nand telling it to look at all of the attributes\nthat make up those flower images.\nTake a look at the colors, the shading,\nthe shapes and so forth.\nAnd when our discriminator gets good at recognizing real flowers,\nthen we'll feed in some shapes that are not flowers at all.\nAnd make sure that it can discriminate those as being not-flowers.\nNow, this whole time our generator here was frozen,\nit wasn't doing anything.\nBut we're our discriminator gets good enough at recognizing things from our domain,\nthen we apply our generator to start creating fake versions of those things.\nSo a generator is going to take a random input vector\nand it is going to use that to create its own fake flower.\nNow, this fake flower image is sent to the discriminator,\nand now the discriminator has a decision to make:\nis that image of a flower the real thing from the domain,\nor is it a fake from the generator?\nNow, the answer is revealed to both the generator and the discriminator.\nThe flower was fake and based upon that,\nthe generator and discriminator will change their behavior.\nThis is a zero sum game, there's always a winner and a loser.\nThe winner gets to remain blissfully unchanged.\nTheir model doesn't change at all,\nwhereas the loser has to update their model.\nSo if the discriminator successfully spotted that this flower was a fake image,\nthen lead discriminator remains unchanged.\nBut the generator will need to change its model to generate better fakes.\nWhereas if the reverse is true\nand the generator is creating something that fools the discriminator,\nthe discriminator model will need to be updated itself\nin order to better be able to tell where we have a fake sample coming in,\nso it's fooled less easily.\nAnd that's basically how these things work,\nand we go through many, many iterations of this\nuntil the generator gets so good that the discriminator can no longer pick out its fakes.\nAnd there we have built a very successful generator to do whatever it is we wanted it to do.\nNow, often in terms of images, the generator and the discriminator implemented as CNNs.\nThese are Convolutional Neural Networks.\nCNN's are a great way of recognizing patterns in image data\nand entering into sort of the area of object identification.\nWe have a whole separate video on CNNs, but they're a great way\nto really implement the generator and discriminator in this scenario.\nBut the  whole process of a GAN, isn't just to create really good fake flowers\nor fake cat images for the internet.\nYou can apply it to all sorts of use cases.\nSo take, for example, video frame prediction.\nIf we fit in a particular frame of video from a camera,\nwe can use a GAN to predict what the next frame in this sequence will look like.\nThis is a great way to be able to predict what's going to happen in the immediate future\nand might be used, for example, in a surveillance system.\nIf we can figure out what is likely to happen next,\nwe can take some action based upon that.\nThere's also other things you can do, like image enhancement.\nSo if we have a kind of a low resolution image,\nwe can use a GAN to create a much higher resolution version of the image\nby figuring out what each individual pixel is\nand then creating a higher resolution version of that.\nAnd we can even go as far as using this for things that are not related\nto images at all, like encryption.\nBut we can create a secure encryption algorithm that can be decrypted and encrypted\nby the sender and receiver, but cannot be easily intercepted,\nagain by going through these GAN iterations to create a really good generator.\nSo that's GAN.\nIt's the battle of the bots\nwhere you can take your young, impressionable and unchanged generator\nand turn it into a master of forgery.\nIf you have any questions, please drop us a line below.\nAnd if you want to see more videos like this in the future, please like and subscribe.\n",
  "words": [
    "one",
    "favorite",
    "machine",
    "learning",
    "algorithms",
    "generative",
    "adversarial",
    "networks",
    "gan",
    "pits",
    "two",
    "ai",
    "models",
    "hence",
    "adversarial",
    "part",
    "machine",
    "learning",
    "models",
    "used",
    "generate",
    "prediction",
    "start",
    "input",
    "training",
    "data",
    "feed",
    "model",
    "model",
    "makes",
    "prediction",
    "form",
    "output",
    "compare",
    "predicted",
    "output",
    "expected",
    "output",
    "training",
    "data",
    "set",
    "based",
    "upon",
    "expected",
    "output",
    "actual",
    "predicted",
    "output",
    "figure",
    "update",
    "model",
    "create",
    "better",
    "outputs",
    "example",
    "supervised",
    "learning",
    "gan",
    "example",
    "unsupervised",
    "learning",
    "effectively",
    "supervises",
    "consists",
    "two",
    "submodels",
    "generator",
    "submodel",
    "discriminator",
    "submodel",
    "generator",
    "job",
    "create",
    "fake",
    "input",
    "fake",
    "samples",
    "discriminator",
    "job",
    "take",
    "given",
    "sample",
    "figure",
    "fake",
    "sample",
    "real",
    "sample",
    "domain",
    "therein",
    "lies",
    "adversarial",
    "nature",
    "generator",
    "creating",
    "fake",
    "samples",
    "sending",
    "discriminator",
    "discriminator",
    "taking",
    "look",
    "given",
    "sample",
    "figuring",
    "fake",
    "sample",
    "generator",
    "real",
    "sample",
    "domain",
    "set",
    "sort",
    "scenario",
    "often",
    "applied",
    "image",
    "generation",
    "images",
    "internet",
    "generators",
    "used",
    "create",
    "fake",
    "3d",
    "models",
    "fake",
    "faces",
    "fake",
    "cats",
    "forth",
    "really",
    "works",
    "generator",
    "iterating",
    "number",
    "different",
    "cycles",
    "creating",
    "samples",
    "updating",
    "model",
    "forth",
    "create",
    "sample",
    "convincing",
    "fool",
    "discriminator",
    "also",
    "fool",
    "us",
    "humans",
    "well",
    "let",
    "let",
    "take",
    "example",
    "works",
    "let",
    "say",
    "flower",
    "going",
    "train",
    "generator",
    "create",
    "really",
    "convincing",
    "fake",
    "flowers",
    "way",
    "start",
    "need",
    "first",
    "train",
    "discriminator",
    "model",
    "recognize",
    "picture",
    "flower",
    "looks",
    "like",
    "domain",
    "lots",
    "pictures",
    "flowers",
    "feeding",
    "discriminator",
    "model",
    "telling",
    "look",
    "attributes",
    "make",
    "flower",
    "images",
    "take",
    "look",
    "colors",
    "shading",
    "shapes",
    "forth",
    "discriminator",
    "gets",
    "good",
    "recognizing",
    "real",
    "flowers",
    "feed",
    "shapes",
    "flowers",
    "make",
    "sure",
    "discriminate",
    "whole",
    "time",
    "generator",
    "frozen",
    "anything",
    "discriminator",
    "gets",
    "good",
    "enough",
    "recognizing",
    "things",
    "domain",
    "apply",
    "generator",
    "start",
    "creating",
    "fake",
    "versions",
    "things",
    "generator",
    "going",
    "take",
    "random",
    "input",
    "vector",
    "going",
    "use",
    "create",
    "fake",
    "flower",
    "fake",
    "flower",
    "image",
    "sent",
    "discriminator",
    "discriminator",
    "decision",
    "make",
    "image",
    "flower",
    "real",
    "thing",
    "domain",
    "fake",
    "generator",
    "answer",
    "revealed",
    "generator",
    "discriminator",
    "flower",
    "fake",
    "based",
    "upon",
    "generator",
    "discriminator",
    "change",
    "behavior",
    "zero",
    "sum",
    "game",
    "always",
    "winner",
    "loser",
    "winner",
    "gets",
    "remain",
    "blissfully",
    "unchanged",
    "model",
    "change",
    "whereas",
    "loser",
    "update",
    "model",
    "discriminator",
    "successfully",
    "spotted",
    "flower",
    "fake",
    "image",
    "lead",
    "discriminator",
    "remains",
    "unchanged",
    "generator",
    "need",
    "change",
    "model",
    "generate",
    "better",
    "fakes",
    "whereas",
    "reverse",
    "true",
    "generator",
    "creating",
    "something",
    "fools",
    "discriminator",
    "discriminator",
    "model",
    "need",
    "updated",
    "order",
    "better",
    "able",
    "tell",
    "fake",
    "sample",
    "coming",
    "fooled",
    "less",
    "easily",
    "basically",
    "things",
    "work",
    "go",
    "many",
    "many",
    "iterations",
    "generator",
    "gets",
    "good",
    "discriminator",
    "longer",
    "pick",
    "fakes",
    "built",
    "successful",
    "generator",
    "whatever",
    "wanted",
    "often",
    "terms",
    "images",
    "generator",
    "discriminator",
    "implemented",
    "cnns",
    "convolutional",
    "neural",
    "networks",
    "cnn",
    "great",
    "way",
    "recognizing",
    "patterns",
    "image",
    "data",
    "entering",
    "sort",
    "area",
    "object",
    "identification",
    "whole",
    "separate",
    "video",
    "cnns",
    "great",
    "way",
    "really",
    "implement",
    "generator",
    "discriminator",
    "scenario",
    "whole",
    "process",
    "gan",
    "create",
    "really",
    "good",
    "fake",
    "flowers",
    "fake",
    "cat",
    "images",
    "internet",
    "apply",
    "sorts",
    "use",
    "cases",
    "take",
    "example",
    "video",
    "frame",
    "prediction",
    "fit",
    "particular",
    "frame",
    "video",
    "camera",
    "use",
    "gan",
    "predict",
    "next",
    "frame",
    "sequence",
    "look",
    "like",
    "great",
    "way",
    "able",
    "predict",
    "going",
    "happen",
    "immediate",
    "future",
    "might",
    "used",
    "example",
    "surveillance",
    "system",
    "figure",
    "likely",
    "happen",
    "next",
    "take",
    "action",
    "based",
    "upon",
    "also",
    "things",
    "like",
    "image",
    "enhancement",
    "kind",
    "low",
    "resolution",
    "image",
    "use",
    "gan",
    "create",
    "much",
    "higher",
    "resolution",
    "version",
    "image",
    "figuring",
    "individual",
    "pixel",
    "creating",
    "higher",
    "resolution",
    "version",
    "even",
    "go",
    "far",
    "using",
    "things",
    "related",
    "images",
    "like",
    "encryption",
    "create",
    "secure",
    "encryption",
    "algorithm",
    "decrypted",
    "encrypted",
    "sender",
    "receiver",
    "easily",
    "intercepted",
    "going",
    "gan",
    "iterations",
    "create",
    "really",
    "good",
    "generator",
    "gan",
    "battle",
    "bots",
    "take",
    "young",
    "impressionable",
    "unchanged",
    "generator",
    "turn",
    "master",
    "forgery",
    "questions",
    "please",
    "drop",
    "us",
    "line",
    "want",
    "see",
    "videos",
    "like",
    "future",
    "please",
    "like",
    "subscribe"
  ],
  "keywords": [
    "learning",
    "adversarial",
    "gan",
    "models",
    "used",
    "prediction",
    "start",
    "input",
    "data",
    "model",
    "output",
    "based",
    "upon",
    "figure",
    "create",
    "better",
    "example",
    "generator",
    "discriminator",
    "fake",
    "samples",
    "take",
    "sample",
    "real",
    "domain",
    "creating",
    "look",
    "image",
    "images",
    "forth",
    "really",
    "let",
    "flower",
    "going",
    "flowers",
    "way",
    "need",
    "like",
    "make",
    "gets",
    "good",
    "recognizing",
    "whole",
    "things",
    "use",
    "change",
    "unchanged",
    "great",
    "video",
    "frame",
    "resolution"
  ]
}