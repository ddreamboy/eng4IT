{
  "text": "Blockchains are incredibly popular nowadays.\nBut what is a blockchain?\nHow do they work, what problems do they solve\nand how can they be used?\nLike the name indicates, a blockchain is a\nchain of blocks that contains information.\nThis technique was originally described in\n1991 by a group of researchers and was originally\nintended to timestamp digital documents so\nthat it’s not possible to backdate them\nor to tamper with them.\nAlmost like a notary.\nHowever it went by mostly unused until it\nwas adapted by Satoshi Nakamoto in 2009 to\ncreate the digital cryptocurrency Bitcoin.\nA blockchain is a distributed ledger that\nis completely open to anyone.\nThey have an interesting property: once some\ndata has been recorded inside a blockchain,\nit becomes very difficult to change it.\nSo how does that work?\nWell, let’s take a closer look at a block.\nEach block contains some data, the hash of\nthe block and the hash of the previous block.\nThe data that is stored inside a block depends\non the type of blockchain.\nThe Bitcoin blockchain for example stores\nthe details about a transaction in here, such\nas the sender, receiver and amount of coins.\nA block also has a hash.\nYou can compare a hash to a fingerprint.\nIt identifies a block and all of its contents\nand it's always unique, just as a fingerprint.\nOnce a block is created, it’s hash is being\ncalculated.\nChanging something inside the block will cause\nthe hash to change.\nSo in other words: hashes are very useful\nwhen you want to detect changes to blocks.\nIf the fingerprint of a block changes, it\nno longer is the same block.\nThe third element inside each block is the\nhash of the previous block.\nThis effectively creates a chain of blocks\nand it’s this technique that makes a blockchain\nso secure.\nLet's take an example.\nHere we have a chain of 3 blocks.\nAs you can see, each block has a hash and\nthe hash of the previous block.\nSo block number 3 points to block number 2\nand number 2 points to number 1.\nNow the first block is a bit special, it cannot\npoint to previous blocks because it's the\nfirst one.\nWe call this the genesis block.\nNow let's say that you tamper with the second\nblock.\nThis causes the hash of the block to change\nas well.\nIn turn that will make block 3 and all following\nblocks invalid because they no longer store\na valid hash of the previous block.\nSo changing a single block will make all following\nblocks invalid.\nBut using hashes is not enough to prevent\ntampering.\nComputers these days are very fast and can\ncalculate hundreds of thousands of hashes\nper second.\nYou could effectively tamper with a block\nand recalculate all the hashes of other blocks\nto make your blockchain valid again.\nSo to mitigate this, blockchains have something\ncalled proof-of-work.\nIt's a mechanism that slows down the creation\nof new blocks.\nIn Bitcoins case: it takes about 10 minutes\nto calculate the required proof-of-work and\nadd a new block to the chain.\nThis mechanism makes it very hard to tamper\nwith the blocks, because if you tamper with\n1 block, you'll need to recalculate the proof-of-work\nfor all the following blocks.\nSo the security of a blockchain comes from\nits creative use of hashing and the proof-of-work\nmechanism.\nBut there is one more way that blockchains\nsecure themselves and that's by being distributed.\nInstead of using a central entity to manage\nthe chain, blockchains use a peer-to-peer\nnetwork and anyone is allowed to join.\nWhen someone joins this network, he gets the\nfull copy of the blockchain.\nThe node can use this to verify that everything\nis still in order.\nNow let's see what happens when someone creates\na new block.\nThat new block is send to everyone on the\nnetwork.\nEach node then verifies the block to make\nsure that it hasn't been tampered with.\nIf everything checks out, each node adds this\nblock to their own blockchain.\nAll the nodes in this network create consensus.\nThey agree about what blocks are valid and\nwhich aren't.\nBlocks that are tampered with will be rejected\nby other nodes in the network.\nSo to successfully tamper with a blockchain\nyou'll need to tamper with all blocks on the\nchain, redo the proof-of-work for each block\nand take control of more than 50% of the peer-to-peer\nnetwork.\nOnly then will your tampered block become\naccepted by everyone else.\nThis is almost impossible to do!\nBlockchains are also constantly evolving.\nOne of the more recent developments is the\ncreation of smart contracts.\nThese contracts are simple programs that are\nstored on the blockchain and can be used to\nautomatically exchange coins based on certain\nconditions.\nMore on smart contracts in a later video.\nThe creation of blockchain technology peaked\na lot of people’s interest.\nSoon, others realized that the technology\ncould be used for other things like storing\nmedical records, creating a digital notary\nor even collecting taxes.\nSo now you know what a blockchain is, how\nit works on basic level and what problems\nit solves.\nWant to learn how you can implement a simple\nblockchain with Javascript?\nThen checkout this video here.\nAnd as always: thank you very much for watching.\n",
  "words": [
    "blockchains",
    "incredibly",
    "popular",
    "nowadays",
    "blockchain",
    "work",
    "problems",
    "solve",
    "used",
    "like",
    "name",
    "indicates",
    "blockchain",
    "chain",
    "blocks",
    "contains",
    "information",
    "technique",
    "originally",
    "described",
    "1991",
    "group",
    "researchers",
    "originally",
    "intended",
    "timestamp",
    "digital",
    "documents",
    "possible",
    "backdate",
    "tamper",
    "almost",
    "like",
    "notary",
    "however",
    "went",
    "mostly",
    "unused",
    "adapted",
    "satoshi",
    "nakamoto",
    "2009",
    "create",
    "digital",
    "cryptocurrency",
    "bitcoin",
    "blockchain",
    "distributed",
    "ledger",
    "completely",
    "open",
    "anyone",
    "interesting",
    "property",
    "data",
    "recorded",
    "inside",
    "blockchain",
    "becomes",
    "difficult",
    "change",
    "work",
    "well",
    "let",
    "take",
    "closer",
    "look",
    "block",
    "block",
    "contains",
    "data",
    "hash",
    "block",
    "hash",
    "previous",
    "block",
    "data",
    "stored",
    "inside",
    "block",
    "depends",
    "type",
    "blockchain",
    "bitcoin",
    "blockchain",
    "example",
    "stores",
    "details",
    "transaction",
    "sender",
    "receiver",
    "amount",
    "coins",
    "block",
    "also",
    "hash",
    "compare",
    "hash",
    "fingerprint",
    "identifies",
    "block",
    "contents",
    "always",
    "unique",
    "fingerprint",
    "block",
    "created",
    "hash",
    "calculated",
    "changing",
    "something",
    "inside",
    "block",
    "cause",
    "hash",
    "change",
    "words",
    "hashes",
    "useful",
    "want",
    "detect",
    "changes",
    "blocks",
    "fingerprint",
    "block",
    "changes",
    "longer",
    "block",
    "third",
    "element",
    "inside",
    "block",
    "hash",
    "previous",
    "block",
    "effectively",
    "creates",
    "chain",
    "blocks",
    "technique",
    "makes",
    "blockchain",
    "secure",
    "let",
    "take",
    "example",
    "chain",
    "3",
    "blocks",
    "see",
    "block",
    "hash",
    "hash",
    "previous",
    "block",
    "block",
    "number",
    "3",
    "points",
    "block",
    "number",
    "2",
    "number",
    "2",
    "points",
    "number",
    "first",
    "block",
    "bit",
    "special",
    "point",
    "previous",
    "blocks",
    "first",
    "one",
    "call",
    "genesis",
    "block",
    "let",
    "say",
    "tamper",
    "second",
    "block",
    "causes",
    "hash",
    "block",
    "change",
    "well",
    "turn",
    "make",
    "block",
    "3",
    "following",
    "blocks",
    "invalid",
    "longer",
    "store",
    "valid",
    "hash",
    "previous",
    "block",
    "changing",
    "single",
    "block",
    "make",
    "following",
    "blocks",
    "invalid",
    "using",
    "hashes",
    "enough",
    "prevent",
    "tampering",
    "computers",
    "days",
    "fast",
    "calculate",
    "hundreds",
    "thousands",
    "hashes",
    "per",
    "second",
    "could",
    "effectively",
    "tamper",
    "block",
    "recalculate",
    "hashes",
    "blocks",
    "make",
    "blockchain",
    "valid",
    "mitigate",
    "blockchains",
    "something",
    "called",
    "mechanism",
    "slows",
    "creation",
    "new",
    "blocks",
    "bitcoins",
    "case",
    "takes",
    "10",
    "minutes",
    "calculate",
    "required",
    "add",
    "new",
    "block",
    "chain",
    "mechanism",
    "makes",
    "hard",
    "tamper",
    "blocks",
    "tamper",
    "1",
    "block",
    "need",
    "recalculate",
    "following",
    "blocks",
    "security",
    "blockchain",
    "comes",
    "creative",
    "use",
    "hashing",
    "mechanism",
    "one",
    "way",
    "blockchains",
    "secure",
    "distributed",
    "instead",
    "using",
    "central",
    "entity",
    "manage",
    "chain",
    "blockchains",
    "use",
    "network",
    "anyone",
    "allowed",
    "join",
    "someone",
    "joins",
    "network",
    "gets",
    "full",
    "copy",
    "blockchain",
    "node",
    "use",
    "verify",
    "everything",
    "still",
    "order",
    "let",
    "see",
    "happens",
    "someone",
    "creates",
    "new",
    "block",
    "new",
    "block",
    "send",
    "everyone",
    "network",
    "node",
    "verifies",
    "block",
    "make",
    "sure",
    "tampered",
    "everything",
    "checks",
    "node",
    "adds",
    "block",
    "blockchain",
    "nodes",
    "network",
    "create",
    "consensus",
    "agree",
    "blocks",
    "valid",
    "blocks",
    "tampered",
    "rejected",
    "nodes",
    "network",
    "successfully",
    "tamper",
    "blockchain",
    "need",
    "tamper",
    "blocks",
    "chain",
    "redo",
    "block",
    "take",
    "control",
    "50",
    "network",
    "tampered",
    "block",
    "become",
    "accepted",
    "everyone",
    "else",
    "almost",
    "impossible",
    "blockchains",
    "also",
    "constantly",
    "evolving",
    "one",
    "recent",
    "developments",
    "creation",
    "smart",
    "contracts",
    "contracts",
    "simple",
    "programs",
    "stored",
    "blockchain",
    "used",
    "automatically",
    "exchange",
    "coins",
    "based",
    "certain",
    "conditions",
    "smart",
    "contracts",
    "later",
    "video",
    "creation",
    "blockchain",
    "technology",
    "peaked",
    "lot",
    "people",
    "interest",
    "soon",
    "others",
    "realized",
    "technology",
    "could",
    "used",
    "things",
    "like",
    "storing",
    "medical",
    "records",
    "creating",
    "digital",
    "notary",
    "even",
    "collecting",
    "taxes",
    "know",
    "blockchain",
    "works",
    "basic",
    "level",
    "problems",
    "solves",
    "want",
    "learn",
    "implement",
    "simple",
    "blockchain",
    "javascript",
    "checkout",
    "video",
    "always",
    "thank",
    "much",
    "watching"
  ],
  "keywords": [
    "blockchains",
    "blockchain",
    "work",
    "problems",
    "used",
    "like",
    "chain",
    "blocks",
    "contains",
    "technique",
    "originally",
    "digital",
    "tamper",
    "almost",
    "notary",
    "create",
    "bitcoin",
    "distributed",
    "anyone",
    "data",
    "inside",
    "change",
    "well",
    "let",
    "take",
    "block",
    "hash",
    "previous",
    "stored",
    "example",
    "coins",
    "also",
    "fingerprint",
    "always",
    "changing",
    "something",
    "hashes",
    "want",
    "changes",
    "longer",
    "effectively",
    "creates",
    "makes",
    "secure",
    "3",
    "see",
    "number",
    "points",
    "2",
    "first",
    "one",
    "second",
    "make",
    "following",
    "invalid",
    "valid",
    "using",
    "calculate",
    "could",
    "recalculate",
    "mechanism",
    "creation",
    "new",
    "need",
    "use",
    "network",
    "someone",
    "node",
    "everything",
    "everyone",
    "tampered",
    "nodes",
    "smart",
    "contracts",
    "simple",
    "video",
    "technology"
  ]
}