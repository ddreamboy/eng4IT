{
  "text": "automation QA engineers and aets sof for\ndeveloper engineers and test play a\ncrucial role in ensuring that software\nfunctions as expected and works\nefficiently today we're going to walk\nthrough a self-taught guide to learning\nboth skill sets meaning you can learn\nboth of these for\nfree I don't want any excuses for why\nyou can't learn them now and this is\ncoming from somebody who sells courses\nand partners with boot camps all the\ntime courses and boot camps are there to\nhelp you and to make the learning\nprocess more\nefficient but if you don't have the\nmeans or finances for a course or a boot\ncamp you can still learn it on your own\nso I don't want any excuses for why you\ncan't learn it and if anybody tells you\nthat you must buy their course or you\nmust go to their boot camp because it's\nthe only way to learn it they're\nmisleading you and lying to you and you\nprobably should stay away from\nthem now that all that is out of the way\nlet's jump into the video I previously\nmade a guide for self taught manual QA\nEngineers that you can watch after this\nand I will leave links in the comment\nsection\nbelow if you're new here my name is the\ntest lead I make content to help you on\nyour software testing Journey today's\ntopic a guide and crash course for\nautomation QA engineers and\naets let's get\nstarted first off we probably should\nDefine any roles of an automation QA\nengineer and\naets higher level they're pretty much\nthe same most companies and job\ndescriptions will use them\ninterchangeably but for the sake of this\nvideo we're going to touch the slight\ndifferences in both roles you're\ncreating and running automated test\nscripts you want to automate anything\nthat's redundant in a testing process\nincluding things like regression testing\ninstead of having your manual QA\nengineer run all the regression test\nafter each testing cycle automated\ncreate some automated test scripts that\nway you press a button and get the\nresults these slight differences between\nautomation QA engineer and an estet or a\nsoftware developer engineer in test is\nin a title for estet\nthe team sees you as more of a software\ndeveloper who happens to specialize in\ntesting so with that role they expect\nyou to have more coding and Technical\nknowledge you're going to create custom\ntools and Frameworks to help with the\ntesting process so just how the regular\ndevelopers on your team are developing\nand writing their code they're going to\nsee you in the same way we are\ndeveloping and writing code what happens\njust to be for\ntesting now that we Define the roles\nlet's talk about the actual guide and\ncrash course\npart before you jump into any automation\nyou should first learn the manual or\nhuman QA engineer skill set like I said\nI have a video covering that that I'll\nlink below but you should understand the\ncore\nprinciples the software development life\ncycle understand the different stages of\nsoftware development from planning and\ndesign to implementation and\nmaintenance learn about models such as\nagile waterfall and devops which impact\nhow testing is integrated into\ndevelopment process testing\ndocumentation test plans\nthese are documents that outline the\nscope Approach Resources and schedule\nfor testing\nactivities test\ncases detailed descriptions of test\nscenarios including the test inputs\nexecution steps and expected\noutcomes bug\nreports records of defects found during\ntesting including steps to reproduce the\nissue\nseverity and screenshots or logs if\navailable types of\ntesting functional\ntesting ensures that software functions\nas expected based on\nrequirements regression testing checks\nthat new changes haven't introduced new\nbugs and previously tested\nfeatures exploratory testing\ninvolves exploring the application to\nidentify defects that may not be covered\nby predefined test cases so all of that\nis prerequisites for learning the\nautomated part of\ntesting don't just skip to coding and\nautomation no make sure your fundamental\nknowledge of software testing is intact\nFirst Once you have a good understanding\nof all of that\nnext we're going to pick your coding\nlanguage coding skills are essential for\nwriting automated tests and\nscripts choosing the right language\nallows you to leverage various testing\nFrameworks and tools\neffectively the most popular choices are\npython Java and\nJavaScript python is known for\nSimplicity and readability\nJava widely used Enterprise environments\nwere powerful testing\nFrameworks and\nJavaScript ideal for web\napplications personally I suggest python\nit's the easiest to learn and it's very\nversatile next you're going to choose\nyour IDE or the place where you're going\nto write your code then run your program\nthe program is then changed into\ncomputer language that way your computer\nunderstands what you're trying to do so\nwe have py charm which is specifically\ndesigned for python development intellig\nis for Java and visual studio code it's\na lightweight versatile IDE that\nsupports various programming\nlanguages so now you have your coding\nlanguage and your IDE where right\nwriting a code at next you have to learn\na testing tool and framework so there's\ntwo sides to testing we have the front\nend or the UI or the customer sees we\nthen have the back end which involves\nAPI testing first let's talk about the\nfront end UI testing or testing the\ncustomer sees when they access your\nwebsite or\napplication some popular you I testing\ntools include selenium which has been\naround forever Cyprus and playright to\nstart I'll probably focus on selenium\nbecause it's the most commonly used in\ndifferent companies and\nindustries the other two are newer and\nsome companies do use it but it's just\nless companies that have that option\nnext we have mobile application test\ntesting so any application on your phone\ncan be tested with mobile testing tools\nand Frameworks example tools and\nFrameworks for mobile testing include\nappium and\nespresso apium is the one that I will go\nwith because it's the most well-known\none and you can test both Android and\niOS mobile\napplications mobile testing is not a\nrequirement more more of an extra\nusually we focus more on the frontend UI\ntesting and a backend API testing so it\nwon't hurt to learn but just don't\nprioritize it before the other\ntwo quick break if you need help on your\nsoftware testing Journey check out my\nwebsite the testing lead.com\nthere I have content other information\nto help you on your software testing\nJourney now back to the video now we\nhave automated API testing remember apis\nare way for two different programs to\ncommunicate with each other and share\ninformation Postman is a free tool you\ncan go to their website create a free\naccount and start testing apis today\nit's very user friendly you can also\ncreate things like test for apis and\nPostman\nso first learn about Postman and test\ntheir practice\napis then we're going to talk about\nactually automating API testing where\nyou're testing apis in your code for\npython here's an\nexample we're going to import test\nAPI then do a give request for some\nexample\nAPI with then asserting the status code\nyou'll use Python's request library to\nmake HTTP request and validate the API\nresponses next we have\nJavaScript with JavaScript you can use\naxios for making the\nrequest next we have databases and\nSQL databases are a place for your\ncompany to store information\nit could be customer data it could be\nproduct information and so on this\ninformation is compartmentalized into\nstorage units called tables that way\nit's more organized and easily\naccessible we then interact with this\ndata by using\nSQL use SQL commands like select to\nretrieve data and insert update and\ndelete to modify data\nhere's an example select star from users\nwhere ID is one this retrieves user data\nwith a specific ID equal to\none so another optional one along with\nmobile testing is performance\ntesting neither one is a requirement but\nis a good add-on for your resume and\nyour skill set performance testing\nassesses how application performs under\nvarious conditions helping to identify\nbottlenecks and ensuring that the\napplication meets performance\nrequirements the top two tools for\nperformance testing are J meter and load\nRunner let's talk about practicing and\nbuilding your\nportfolio once you have basic knowledge\nand understanding of everything we\npreviously discussed make sure you\nactually get repetitions practicing it\nwriting code for API testing or for UI\ntesting using\nselenium create your own repositories\nlocally and actually run these\ntests then once you're confident with it\nstart to create your portfolio that way\nyou can showcase what you know to\npotential employees or your friends if\nthey like that type of stuff a well\ndocumented portfolio shows your ability\nto apply what you've learned and\nprovides evidence of your\nexpertise how to\npractice create personal projects work\non your own testing projects to apply\nyour knowledge and skills in real world\ncontext showcase these projects include\ndetailed examples of your test cases\ntest scripts and automation Frameworks\ncreate your own personal website to\nShowcase all your portfolio information\ncreate screenshots of your test cases\nand your test scripts and even leave a\nlink to your GitHub account that way you\ncan store or your code for your test\nscripts in a central\nplace link this portfolio and GitHub\naccount to your resume and Linkedin Prof\nprofiles next join some QA\ncommunities I know I mentioned this in a\nprevious video but the more emerged you\nare in a QA space the easier it is to\nnetwork and to find other people who are\nlike-minded try to find communities on\nLinkedIn\nReddit other places Twitter wherever you\ncan to reach out and talk to people in\nthe\nspace one of my goals is to create a\nessential place for people in the QA\nspace to connect that's still in the\nmaking maybe sometime next year\neverybody's favorite part creating your\nresume and applying to\njobs a well-crafted resume highlights\nyour skills and experience making you\nstand out to potential\nemployers apply applying for jobs is the\nfinal step and launching your career and\nautomation testing and estet\nroles when creating your resume make\nsure you're highlighting your\nskills now for applying to\njobs tell your resume to job\ndescriptions if they're asking for\nspecific tools and Frameworks and coding\nlanguages make sure those are in the\nbeginning of your resume so they see\nyou're fit right\naway also whenever required have a cover\nletter A lot of people skip this part\nmissing out on\nopportunities so you should take\nadvantage of that and you apply for\nthose\npositions seek entrylevel roles or\ninternships you may have to even get a\nmanual QA engineer role and then\ntransition in that company to an\nautomated one because sometimes the job\nmarket is hard so instead of you being\njobless at least make some money and get\nsome real experience and then transition\nto the automated or ex that roll from\nthere but that's why having the core\nmanual skill set is still\nrequired because honestly might be a\nhybrid doing both manual and automated\ntesting if you're struggling to gaining\nexperience you can seek freelance work\nyou can volunteer once again try to get\ninternships the hardest thing is getting\nthat initial experience so try to get it\nany way possible because once you have\nexperience get that next job it's a lot\neasier from there just continue to build\nyour resume and portfolio if this video\nwas helpful next you should check out my\nguide to being a manual QA engineer or\nmy library here about automation\n",
  "words": [
    "automation",
    "qa",
    "engineers",
    "aets",
    "sof",
    "developer",
    "engineers",
    "test",
    "play",
    "crucial",
    "role",
    "ensuring",
    "software",
    "functions",
    "expected",
    "works",
    "efficiently",
    "today",
    "going",
    "walk",
    "guide",
    "learning",
    "skill",
    "sets",
    "meaning",
    "learn",
    "free",
    "want",
    "excuses",
    "ca",
    "learn",
    "coming",
    "somebody",
    "sells",
    "courses",
    "partners",
    "boot",
    "camps",
    "time",
    "courses",
    "boot",
    "camps",
    "help",
    "make",
    "learning",
    "process",
    "efficient",
    "means",
    "finances",
    "course",
    "boot",
    "camp",
    "still",
    "learn",
    "want",
    "excuses",
    "ca",
    "learn",
    "anybody",
    "tells",
    "must",
    "buy",
    "course",
    "must",
    "go",
    "boot",
    "camp",
    "way",
    "learn",
    "misleading",
    "lying",
    "probably",
    "stay",
    "away",
    "way",
    "let",
    "jump",
    "video",
    "previously",
    "made",
    "guide",
    "self",
    "taught",
    "manual",
    "qa",
    "engineers",
    "watch",
    "leave",
    "links",
    "comment",
    "section",
    "new",
    "name",
    "test",
    "lead",
    "make",
    "content",
    "help",
    "software",
    "testing",
    "journey",
    "today",
    "topic",
    "guide",
    "crash",
    "course",
    "automation",
    "qa",
    "engineers",
    "aets",
    "let",
    "get",
    "started",
    "first",
    "probably",
    "define",
    "roles",
    "automation",
    "qa",
    "engineer",
    "aets",
    "higher",
    "level",
    "pretty",
    "much",
    "companies",
    "job",
    "descriptions",
    "use",
    "interchangeably",
    "sake",
    "video",
    "going",
    "touch",
    "slight",
    "differences",
    "roles",
    "creating",
    "running",
    "automated",
    "test",
    "scripts",
    "want",
    "automate",
    "anything",
    "redundant",
    "testing",
    "process",
    "including",
    "things",
    "like",
    "regression",
    "testing",
    "instead",
    "manual",
    "qa",
    "engineer",
    "run",
    "regression",
    "test",
    "testing",
    "cycle",
    "automated",
    "create",
    "automated",
    "test",
    "scripts",
    "way",
    "press",
    "button",
    "get",
    "results",
    "slight",
    "differences",
    "automation",
    "qa",
    "engineer",
    "estet",
    "software",
    "developer",
    "engineer",
    "test",
    "title",
    "estet",
    "team",
    "sees",
    "software",
    "developer",
    "happens",
    "specialize",
    "testing",
    "role",
    "expect",
    "coding",
    "technical",
    "knowledge",
    "going",
    "create",
    "custom",
    "tools",
    "frameworks",
    "help",
    "testing",
    "process",
    "regular",
    "developers",
    "team",
    "developing",
    "writing",
    "code",
    "going",
    "see",
    "way",
    "developing",
    "writing",
    "code",
    "happens",
    "testing",
    "define",
    "roles",
    "let",
    "talk",
    "actual",
    "guide",
    "crash",
    "course",
    "part",
    "jump",
    "automation",
    "first",
    "learn",
    "manual",
    "human",
    "qa",
    "engineer",
    "skill",
    "set",
    "like",
    "said",
    "video",
    "covering",
    "link",
    "understand",
    "core",
    "principles",
    "software",
    "development",
    "life",
    "cycle",
    "understand",
    "different",
    "stages",
    "software",
    "development",
    "planning",
    "design",
    "implementation",
    "maintenance",
    "learn",
    "models",
    "agile",
    "waterfall",
    "devops",
    "impact",
    "testing",
    "integrated",
    "development",
    "process",
    "testing",
    "documentation",
    "test",
    "plans",
    "documents",
    "outline",
    "scope",
    "approach",
    "resources",
    "schedule",
    "testing",
    "activities",
    "test",
    "cases",
    "detailed",
    "descriptions",
    "test",
    "scenarios",
    "including",
    "test",
    "inputs",
    "execution",
    "steps",
    "expected",
    "outcomes",
    "bug",
    "reports",
    "records",
    "defects",
    "found",
    "testing",
    "including",
    "steps",
    "reproduce",
    "issue",
    "severity",
    "screenshots",
    "logs",
    "available",
    "types",
    "testing",
    "functional",
    "testing",
    "ensures",
    "software",
    "functions",
    "expected",
    "based",
    "requirements",
    "regression",
    "testing",
    "checks",
    "new",
    "changes",
    "introduced",
    "new",
    "bugs",
    "previously",
    "tested",
    "features",
    "exploratory",
    "testing",
    "involves",
    "exploring",
    "application",
    "identify",
    "defects",
    "may",
    "covered",
    "predefined",
    "test",
    "cases",
    "prerequisites",
    "learning",
    "automated",
    "part",
    "testing",
    "skip",
    "coding",
    "automation",
    "make",
    "sure",
    "fundamental",
    "knowledge",
    "software",
    "testing",
    "intact",
    "first",
    "good",
    "understanding",
    "next",
    "going",
    "pick",
    "coding",
    "language",
    "coding",
    "skills",
    "essential",
    "writing",
    "automated",
    "tests",
    "scripts",
    "choosing",
    "right",
    "language",
    "allows",
    "leverage",
    "various",
    "testing",
    "frameworks",
    "tools",
    "effectively",
    "popular",
    "choices",
    "python",
    "java",
    "javascript",
    "python",
    "known",
    "simplicity",
    "readability",
    "java",
    "widely",
    "used",
    "enterprise",
    "environments",
    "powerful",
    "testing",
    "frameworks",
    "javascript",
    "ideal",
    "web",
    "applications",
    "personally",
    "suggest",
    "python",
    "easiest",
    "learn",
    "versatile",
    "next",
    "going",
    "choose",
    "ide",
    "place",
    "going",
    "write",
    "code",
    "run",
    "program",
    "program",
    "changed",
    "computer",
    "language",
    "way",
    "computer",
    "understands",
    "trying",
    "py",
    "charm",
    "specifically",
    "designed",
    "python",
    "development",
    "intellig",
    "java",
    "visual",
    "studio",
    "code",
    "lightweight",
    "versatile",
    "ide",
    "supports",
    "various",
    "programming",
    "languages",
    "coding",
    "language",
    "ide",
    "right",
    "writing",
    "code",
    "next",
    "learn",
    "testing",
    "tool",
    "framework",
    "two",
    "sides",
    "testing",
    "front",
    "end",
    "ui",
    "customer",
    "sees",
    "back",
    "end",
    "involves",
    "api",
    "testing",
    "first",
    "let",
    "talk",
    "front",
    "end",
    "ui",
    "testing",
    "testing",
    "customer",
    "sees",
    "access",
    "website",
    "application",
    "popular",
    "testing",
    "tools",
    "include",
    "selenium",
    "around",
    "forever",
    "cyprus",
    "playright",
    "start",
    "probably",
    "focus",
    "selenium",
    "commonly",
    "used",
    "different",
    "companies",
    "industries",
    "two",
    "newer",
    "companies",
    "use",
    "less",
    "companies",
    "option",
    "next",
    "mobile",
    "application",
    "test",
    "testing",
    "application",
    "phone",
    "tested",
    "mobile",
    "testing",
    "tools",
    "frameworks",
    "example",
    "tools",
    "frameworks",
    "mobile",
    "testing",
    "include",
    "appium",
    "espresso",
    "apium",
    "one",
    "go",
    "one",
    "test",
    "android",
    "ios",
    "mobile",
    "applications",
    "mobile",
    "testing",
    "requirement",
    "extra",
    "usually",
    "focus",
    "frontend",
    "ui",
    "testing",
    "backend",
    "api",
    "testing",
    "wo",
    "hurt",
    "learn",
    "prioritize",
    "two",
    "quick",
    "break",
    "need",
    "help",
    "software",
    "testing",
    "journey",
    "check",
    "website",
    "testing",
    "content",
    "information",
    "help",
    "software",
    "testing",
    "journey",
    "back",
    "video",
    "automated",
    "api",
    "testing",
    "remember",
    "apis",
    "way",
    "two",
    "different",
    "programs",
    "communicate",
    "share",
    "information",
    "postman",
    "free",
    "tool",
    "go",
    "website",
    "create",
    "free",
    "account",
    "start",
    "testing",
    "apis",
    "today",
    "user",
    "friendly",
    "also",
    "create",
    "things",
    "like",
    "test",
    "apis",
    "postman",
    "first",
    "learn",
    "postman",
    "test",
    "practice",
    "apis",
    "going",
    "talk",
    "actually",
    "automating",
    "api",
    "testing",
    "testing",
    "apis",
    "code",
    "python",
    "example",
    "going",
    "import",
    "test",
    "api",
    "give",
    "request",
    "example",
    "api",
    "asserting",
    "status",
    "code",
    "use",
    "python",
    "request",
    "library",
    "make",
    "http",
    "request",
    "validate",
    "api",
    "responses",
    "next",
    "javascript",
    "javascript",
    "use",
    "axios",
    "making",
    "request",
    "next",
    "databases",
    "sql",
    "databases",
    "place",
    "company",
    "store",
    "information",
    "could",
    "customer",
    "data",
    "could",
    "product",
    "information",
    "information",
    "compartmentalized",
    "storage",
    "units",
    "called",
    "tables",
    "way",
    "organized",
    "easily",
    "accessible",
    "interact",
    "data",
    "using",
    "sql",
    "use",
    "sql",
    "commands",
    "like",
    "select",
    "retrieve",
    "data",
    "insert",
    "update",
    "delete",
    "modify",
    "data",
    "example",
    "select",
    "star",
    "users",
    "id",
    "one",
    "retrieves",
    "user",
    "data",
    "specific",
    "id",
    "equal",
    "one",
    "another",
    "optional",
    "one",
    "along",
    "mobile",
    "testing",
    "performance",
    "testing",
    "neither",
    "one",
    "requirement",
    "good",
    "resume",
    "skill",
    "set",
    "performance",
    "testing",
    "assesses",
    "application",
    "performs",
    "various",
    "conditions",
    "helping",
    "identify",
    "bottlenecks",
    "ensuring",
    "application",
    "meets",
    "performance",
    "requirements",
    "top",
    "two",
    "tools",
    "performance",
    "testing",
    "j",
    "meter",
    "load",
    "runner",
    "let",
    "talk",
    "practicing",
    "building",
    "portfolio",
    "basic",
    "knowledge",
    "understanding",
    "everything",
    "previously",
    "discussed",
    "make",
    "sure",
    "actually",
    "get",
    "repetitions",
    "practicing",
    "writing",
    "code",
    "api",
    "testing",
    "ui",
    "testing",
    "using",
    "selenium",
    "create",
    "repositories",
    "locally",
    "actually",
    "run",
    "tests",
    "confident",
    "start",
    "create",
    "portfolio",
    "way",
    "showcase",
    "know",
    "potential",
    "employees",
    "friends",
    "like",
    "type",
    "stuff",
    "well",
    "documented",
    "portfolio",
    "shows",
    "ability",
    "apply",
    "learned",
    "provides",
    "evidence",
    "expertise",
    "practice",
    "create",
    "personal",
    "projects",
    "work",
    "testing",
    "projects",
    "apply",
    "knowledge",
    "skills",
    "real",
    "world",
    "context",
    "showcase",
    "projects",
    "include",
    "detailed",
    "examples",
    "test",
    "cases",
    "test",
    "scripts",
    "automation",
    "frameworks",
    "create",
    "personal",
    "website",
    "showcase",
    "portfolio",
    "information",
    "create",
    "screenshots",
    "test",
    "cases",
    "test",
    "scripts",
    "even",
    "leave",
    "link",
    "github",
    "account",
    "way",
    "store",
    "code",
    "test",
    "scripts",
    "central",
    "place",
    "link",
    "portfolio",
    "github",
    "account",
    "resume",
    "linkedin",
    "prof",
    "profiles",
    "next",
    "join",
    "qa",
    "communities",
    "know",
    "mentioned",
    "previous",
    "video",
    "emerged",
    "qa",
    "space",
    "easier",
    "network",
    "find",
    "people",
    "try",
    "find",
    "communities",
    "linkedin",
    "reddit",
    "places",
    "twitter",
    "wherever",
    "reach",
    "talk",
    "people",
    "space",
    "one",
    "goals",
    "create",
    "essential",
    "place",
    "people",
    "qa",
    "space",
    "connect",
    "still",
    "making",
    "maybe",
    "sometime",
    "next",
    "year",
    "everybody",
    "favorite",
    "part",
    "creating",
    "resume",
    "applying",
    "jobs",
    "resume",
    "highlights",
    "skills",
    "experience",
    "making",
    "stand",
    "potential",
    "employers",
    "apply",
    "applying",
    "jobs",
    "final",
    "step",
    "launching",
    "career",
    "automation",
    "testing",
    "estet",
    "roles",
    "creating",
    "resume",
    "make",
    "sure",
    "highlighting",
    "skills",
    "applying",
    "jobs",
    "tell",
    "resume",
    "job",
    "descriptions",
    "asking",
    "specific",
    "tools",
    "frameworks",
    "coding",
    "languages",
    "make",
    "sure",
    "beginning",
    "resume",
    "see",
    "fit",
    "right",
    "away",
    "also",
    "whenever",
    "required",
    "cover",
    "letter",
    "lot",
    "people",
    "skip",
    "part",
    "missing",
    "opportunities",
    "take",
    "advantage",
    "apply",
    "positions",
    "seek",
    "entrylevel",
    "roles",
    "internships",
    "may",
    "even",
    "get",
    "manual",
    "qa",
    "engineer",
    "role",
    "transition",
    "company",
    "automated",
    "one",
    "sometimes",
    "job",
    "market",
    "hard",
    "instead",
    "jobless",
    "least",
    "make",
    "money",
    "get",
    "real",
    "experience",
    "transition",
    "automated",
    "ex",
    "roll",
    "core",
    "manual",
    "skill",
    "set",
    "still",
    "required",
    "honestly",
    "might",
    "hybrid",
    "manual",
    "automated",
    "testing",
    "struggling",
    "gaining",
    "experience",
    "seek",
    "freelance",
    "work",
    "volunteer",
    "try",
    "get",
    "internships",
    "hardest",
    "thing",
    "getting",
    "initial",
    "experience",
    "try",
    "get",
    "way",
    "possible",
    "experience",
    "get",
    "next",
    "job",
    "lot",
    "easier",
    "continue",
    "build",
    "resume",
    "portfolio",
    "video",
    "helpful",
    "next",
    "check",
    "guide",
    "manual",
    "qa",
    "engineer",
    "library",
    "automation"
  ],
  "keywords": [
    "automation",
    "qa",
    "engineers",
    "aets",
    "developer",
    "test",
    "role",
    "software",
    "expected",
    "today",
    "going",
    "guide",
    "learning",
    "skill",
    "learn",
    "free",
    "want",
    "boot",
    "help",
    "make",
    "process",
    "course",
    "still",
    "go",
    "way",
    "probably",
    "let",
    "video",
    "previously",
    "manual",
    "new",
    "testing",
    "journey",
    "get",
    "first",
    "roles",
    "engineer",
    "companies",
    "job",
    "descriptions",
    "use",
    "creating",
    "automated",
    "scripts",
    "including",
    "like",
    "regression",
    "run",
    "create",
    "estet",
    "sees",
    "coding",
    "knowledge",
    "tools",
    "frameworks",
    "writing",
    "code",
    "talk",
    "part",
    "set",
    "link",
    "development",
    "different",
    "cases",
    "application",
    "sure",
    "next",
    "language",
    "skills",
    "right",
    "various",
    "python",
    "java",
    "javascript",
    "ide",
    "place",
    "two",
    "end",
    "ui",
    "customer",
    "api",
    "website",
    "include",
    "selenium",
    "start",
    "mobile",
    "example",
    "one",
    "information",
    "apis",
    "postman",
    "account",
    "actually",
    "request",
    "making",
    "sql",
    "data",
    "performance",
    "resume",
    "portfolio",
    "showcase",
    "apply",
    "projects",
    "space",
    "people",
    "try",
    "applying",
    "jobs",
    "experience"
  ]
}