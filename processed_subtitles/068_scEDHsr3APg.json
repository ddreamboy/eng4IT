{
  "text": "DevOps a set of practices to build test\nand release your code in small frequent\nsteps one of the core practices of\nDevOps is continuous integration which\nhas developers commit their code to a\nshared repository often on a daily basis\neach commit triggers an automated\nworkflow on a CI server that can notify\ndevelopers of any issues integrating\ntheir changes when a repo evolves in\nsmall steps like this it prevents what's\nknown as merge Towel imagine Mary you're\nback and developer builds a new API for\nyour product\nshortly after Jane your front-end\ndeveloper starts work on a new UI a few\nmonths later when it comes time to merge\ntheir features we find that they're\ncompletely incompatible the build fails\nand we now have to spend a bunch of time\nand money resolving these conflicts\nlet's go ahead and build a continuous\nintegration pipeline now to see how it\nprevents issues like this here on github\nI have a node.js web app in order to\ndeliver this out to my customers I need\nto run three commands test build and\ndeploy I can automate this entire\nprocess in the cloud by using a CI\nservice like github actions first I\ncreate a workflow and then I tell it to\nrun on every push to the master branch\nthe event triggers a job that runs on a\nLinux container in the cloud and we tell\nthe container what to do as a series of\nsteps first it checks out the code in\nthis github repo then sets up nodejs\ninstalls my dependencies and runs my\ntests\nbuild and deploy commands now anytime we\ncommit code to the master branch in this\nrepo it will run this workflow if any of\nthe steps fail the bad software won't be\ndelivered to our customers and will\nautomatically know there's an issue that\nneeds to be addressed at the end of the\nday CI CD offers two main benefits it\nhelps you automate things that would\notherwise have to be done manually by\ndevelopers that will increase your\nvelocity but it also detects small\nproblems early before they can grow into\nmajor disasters and that results in\nhigher code quality this has been C ICD\nor DevOps in 100 seconds make sure to\nhit the like button if you want to see\nmore short videos like this and stay\ntuned tomorrow for a full dead loss\nproject using github actions thanks for\nwatching and I will see you in the next\none\n",
  "words": [
    "devops",
    "set",
    "practices",
    "build",
    "test",
    "release",
    "code",
    "small",
    "frequent",
    "steps",
    "one",
    "core",
    "practices",
    "devops",
    "continuous",
    "integration",
    "developers",
    "commit",
    "code",
    "shared",
    "repository",
    "often",
    "daily",
    "basis",
    "commit",
    "triggers",
    "automated",
    "workflow",
    "ci",
    "server",
    "notify",
    "developers",
    "issues",
    "integrating",
    "changes",
    "repo",
    "evolves",
    "small",
    "steps",
    "like",
    "prevents",
    "known",
    "merge",
    "towel",
    "imagine",
    "mary",
    "back",
    "developer",
    "builds",
    "new",
    "api",
    "product",
    "shortly",
    "jane",
    "developer",
    "starts",
    "work",
    "new",
    "ui",
    "months",
    "later",
    "comes",
    "time",
    "merge",
    "features",
    "find",
    "completely",
    "incompatible",
    "build",
    "fails",
    "spend",
    "bunch",
    "time",
    "money",
    "resolving",
    "conflicts",
    "let",
    "go",
    "ahead",
    "build",
    "continuous",
    "integration",
    "pipeline",
    "see",
    "prevents",
    "issues",
    "like",
    "github",
    "web",
    "app",
    "order",
    "deliver",
    "customers",
    "need",
    "run",
    "three",
    "commands",
    "test",
    "build",
    "deploy",
    "automate",
    "entire",
    "process",
    "cloud",
    "using",
    "ci",
    "service",
    "like",
    "github",
    "actions",
    "first",
    "create",
    "workflow",
    "tell",
    "run",
    "every",
    "push",
    "master",
    "branch",
    "event",
    "triggers",
    "job",
    "runs",
    "linux",
    "container",
    "cloud",
    "tell",
    "container",
    "series",
    "steps",
    "first",
    "checks",
    "code",
    "github",
    "repo",
    "sets",
    "nodejs",
    "installs",
    "dependencies",
    "runs",
    "tests",
    "build",
    "deploy",
    "commands",
    "anytime",
    "commit",
    "code",
    "master",
    "branch",
    "repo",
    "run",
    "workflow",
    "steps",
    "fail",
    "bad",
    "software",
    "wo",
    "delivered",
    "customers",
    "automatically",
    "know",
    "issue",
    "needs",
    "addressed",
    "end",
    "day",
    "ci",
    "cd",
    "offers",
    "two",
    "main",
    "benefits",
    "helps",
    "automate",
    "things",
    "would",
    "otherwise",
    "done",
    "manually",
    "developers",
    "increase",
    "velocity",
    "also",
    "detects",
    "small",
    "problems",
    "early",
    "grow",
    "major",
    "disasters",
    "results",
    "higher",
    "code",
    "quality",
    "c",
    "icd",
    "devops",
    "100",
    "seconds",
    "make",
    "sure",
    "hit",
    "like",
    "button",
    "want",
    "see",
    "short",
    "videos",
    "like",
    "stay",
    "tuned",
    "tomorrow",
    "full",
    "dead",
    "loss",
    "project",
    "using",
    "github",
    "actions",
    "thanks",
    "watching",
    "see",
    "next",
    "one"
  ],
  "keywords": [
    "devops",
    "practices",
    "build",
    "test",
    "code",
    "small",
    "steps",
    "one",
    "continuous",
    "integration",
    "developers",
    "commit",
    "triggers",
    "workflow",
    "ci",
    "issues",
    "repo",
    "like",
    "prevents",
    "merge",
    "developer",
    "new",
    "time",
    "see",
    "github",
    "customers",
    "run",
    "commands",
    "deploy",
    "automate",
    "cloud",
    "using",
    "actions",
    "first",
    "tell",
    "master",
    "branch",
    "runs",
    "container"
  ]
}