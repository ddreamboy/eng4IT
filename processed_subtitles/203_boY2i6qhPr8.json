{
  "text": "hi guys welcome to an other video by\nsimply learn today we are going to see\nthe different types of cloud computing\nservice models so let's get started\nwhat's in it for you first we are gonna\nsee what is cloud computing then the\ndifferent types of service models and\nthen we are going to see the key\nfeatures pros and cons of each then we\nare going to see the top companies\nproviding these service models and\nfinally the end users of these service\nmodels what is cloud computing before we\ngo into cloud computing what does the\nterm cloud mean cloud refers to a\nnetwork or Internet it provides services\nover public and private networks so many\napplications execute on the cloud and\nalso it is present at a very remote\nlocation so the users can access these\nfiles and applications that is present\non the cloud from any device unless and\nuntil it has strong internet\nconnectivity now let's look at few of\nthe cloud computing benefits the first\nis cloud computing you reduces cost so\nit is a pay-as-you-go pricing and you\npay for what service you use next cloud\nbacks up and restores huge amounts of\ndata so let's take an example\nwe knew that iPhone uses iCloud for\nbackup if in case the phone crashes all\nthe backed up data can be restored cloud\ncomputing is highly reliable and this is\none of the biggest advantages you can\nalways get instant updates about the\nchanges cloud based applications\nautomatically refresh and update\nthemselves this saves valuable IT staff\ntime and money spent on updating and\nrefreshing the applications like I've\nsaid before cloud computing has\nunlimited storage capacity at any time\nyou can expand your storage capacity\nwith very nominal monthly fees now that\nwe know what cloud computing is let's\nlook at the types of cloud computing\nservice models for a better\nunderstanding let's consider a scenario\nconsider making lasagna you have four\noptions you can either bake it at home\nor you can go to a restaurant to eat\nlasagna or walk into an event and bake\nor get it delivered to your door\nstep but how is this related to cloud\ncomputing well let's take a look we have\nfour boxes we have the traditional\nmethod we have the infrastructure as a\nservice we have platform as a service\nand we have software as a service in the\ntraditional method everything is made at\nhome and all the components are managed\nby us that is kitchen electricity\nmicrowave lasagna sheets then toppings\nmeat and cooking the lasagna but when it\ncomes to infrastructure service the main\nkitchen appliances are managed by the\nvendor and the other things are managed\nby us so basically the infrastructure is\nmanaged by the vendor when we look at\nplatform and service the infrastructure\nand the main ingredient for the software\nis managed by the vendor and the other\nthings are managed by us but when we\nlook at software as a service everything\nfrom the infrastructure till the end\nproduct is managed by the window now\nlet's get into brief of all this when we\nlook at the traditional method\neverything is done from scratch from\nchoosing the right ingredients to the\nmode of preparation and have the full\ncontrol of the toppings this is similar\nto traditional method where all the\nhardware software components are built\nby a choice of requirements when you\nlook at infrastructure as a service we\ncan say kitchen electricity and\nmicrowave is the infrastructure and this\nis where the code runs the next step is\nto alter the software as per our\nrequirements when you look at platform\nas a service it's similar to going to\nevent and baking so you have the main\ningredient there is a lasagna sheet and\nthen you have all the appliances that is\nkitchen electricity and microwave and\nthe rest is managed by us you can add\nthe put toppings or you don't want to\nput meat or you wanted to be veg it's\nall up to us so the components are\naltered as per our requirements\nfinally in software service the entire\nthing is modeled by the vendor so this\nis where you just given your\nrequirements and you get the software\ndelivered to you it's basically where\nthe deployment and framework of the\nproject is already set now that we have\na brief of all these services let's dive\ndeep into each one of them first we have\ninfrastructure as a service\ninfrastructure cloud provider gives a\nvariety of infrastructures such as tour\naged services network hardware and so on\nit\nso maintains and supports these\ninfrastructures customers can access\nthese resources over the Internet next\nlet's look at the benefits of\ninfrastructure as a service so the first\nfeature is that these resources can\neasily be scaled up and down next the\ncost depends on the consumption so\nbasically it's a pay-as-you-go pricing\nand you pay for what you use you pay for\nthe services you use a single piece of\nserver can give out a lot of information\nto many users and finally the client has\ncomplete control over the architecture\nnow let's look at the pros of\ninfrastructure as a service model\nfirstly it is highly flexible this is\nbecause only the infrastructure is\nprovided and the rest depends on the\ncustomer requirements next like I said\nbefore it is cost effective and you pay\nfor what you use it is easy to use as\nall the updates are deployed and all the\nhardware is deployed automatically\nmanagement tasks are wash alized so that\nthe other employees have time for other\ntasks now let's look at few of its call\nit is a multi-tenant architecture due to\nthis there is an issue with data\nsecurity when a new infrastructure is\nintroduced team training is required to\nlearn all about this new infrastructure\nand it consumes a lot of time if in case\nthe so crashes at the vendor side the\ncustomers cannot access the data for a\nwhile and they would have to wait for\nquite a lot of time until the window\nfixes this issue now that we know what\ninfrastructure as a service is let's\nlook at platform as a service platform\nas a service cloud computing platform is\na developer programming platform which\nis used for the programmers to develop\ntest and run and manage the applications\na developer drives the applications and\ndeploys it directly into this layer all\nthe infrastructure to run the\napplications will be over the Internet\nlet's look at the benefits now firstly\nthe resources can be scaled up and down\nbased on the requirements of the user\nmultiple users can access the same\napplication it allows for testing and\nhosting apps in the same environment the\nweb services and databases and servers\nare integrated into one and finally the\nteams can collaborate very easily next\nlet's look at the pros of paas firstly\nthe development process\nis quick and easy as it is a developer\nprogramming platform it is\ncost-efficient you only pay for those\nservices you use when you use\nplatform-as-a-service the coding is done\nby the developer before so less coding\nis required and then the migration to\nhybrid cloud is very easy\nnext let's look at few of the cons of\nplatform-as-a-service similar to IAS\ndata security is an issue because it has\na multi-tenant architecture there is a\ncompatibility issue with the existing\ninfrastructure pass is dependent on the\nwindow speed reliability and support now\nthat we know about platform as-a-service\nlet's go ahead and dive deep into\nsoftware as a service and software as a\nservice everything is done by the\nvendors the end-users are only\nresponsible to give their requirements\nand everything is done by the providers\nnow let's go ahead and look at its\nbenefits the installations and updations\nare done by the providers resources are\nscaled up and down based on requirements\nof the users the only requirement is\nthat there has to be a strong network\nconnectivity and finally the provider is\nresponsible for everything now let's go\nahead and look at the pros of SAS\nupgrades are automatic firstly then next\nit is again a pay-as-you-go model it is\neasier to customize in SAS rather than\nthe other service models it is\naccessible from any location the only\nconstraint is that you need to have a\nstrong internet connectivity let's see\nthe cons of SAS the provider has an try\nor control the end users only have the\ncontrol of giving the requirements there\nare only few solutions for software\ncrashes the devices should always be\nconnected for better performance now\nthat we've seen all the three models\nlet's see few of the companies providing\nthese service models the famous is\nproviders are Amazon Web Services\nRackspace digital ocean Linode and\nMicrosoft Azure these are only a few\nthere are many more apart from these\nAmazon offers many features such as auto\nscaling cloud monitoring and load\nbalancing features when Castro Rackspace\nthe cloud computing platform window\nfocuses family on enterprise level\nhosting services when you look at famous\nfast provider\nyou have Hiroko Apache Stratus openshift\nMicrosoft Azure and many other providers\ngoing ahead in SAS providers the most\nimportant one is Google Apps then the\nSalesforce there is cisco webex this\nDropbox and many more finally let's look\nat the end users of the cloud computing\nservice models we can picture this as a\npyramid so in IAS the end users a system\nadmins who are responsible for\nmaintaining everything except the\ninfrastructure then in pass the end\nusers of the developers who code on the\nplatform provided by the vendors in SAS\nthe end users are the customers who give\nonly the requirements and the software\nis built based on those requirements by\nthe windows thank you for watching I\nhope you found this informative and stay\ntuned for more from simply learn hi\nthere if you liked this video subscribe\nto the simple learn YouTube channel and\nclick here to watch similar videos to\nnerd up and get certified click here\n",
  "words": [
    "hi",
    "guys",
    "welcome",
    "video",
    "simply",
    "learn",
    "today",
    "going",
    "see",
    "different",
    "types",
    "cloud",
    "computing",
    "service",
    "models",
    "let",
    "get",
    "started",
    "first",
    "gon",
    "na",
    "see",
    "cloud",
    "computing",
    "different",
    "types",
    "service",
    "models",
    "going",
    "see",
    "key",
    "features",
    "pros",
    "cons",
    "going",
    "see",
    "top",
    "companies",
    "providing",
    "service",
    "models",
    "finally",
    "end",
    "users",
    "service",
    "models",
    "cloud",
    "computing",
    "go",
    "cloud",
    "computing",
    "term",
    "cloud",
    "mean",
    "cloud",
    "refers",
    "network",
    "internet",
    "provides",
    "services",
    "public",
    "private",
    "networks",
    "many",
    "applications",
    "execute",
    "cloud",
    "also",
    "present",
    "remote",
    "location",
    "users",
    "access",
    "files",
    "applications",
    "present",
    "cloud",
    "device",
    "unless",
    "strong",
    "internet",
    "connectivity",
    "let",
    "look",
    "cloud",
    "computing",
    "benefits",
    "first",
    "cloud",
    "computing",
    "reduces",
    "cost",
    "pricing",
    "pay",
    "service",
    "use",
    "next",
    "cloud",
    "backs",
    "restores",
    "huge",
    "amounts",
    "data",
    "let",
    "take",
    "example",
    "knew",
    "iphone",
    "uses",
    "icloud",
    "backup",
    "case",
    "phone",
    "crashes",
    "backed",
    "data",
    "restored",
    "cloud",
    "computing",
    "highly",
    "reliable",
    "one",
    "biggest",
    "advantages",
    "always",
    "get",
    "instant",
    "updates",
    "changes",
    "cloud",
    "based",
    "applications",
    "automatically",
    "refresh",
    "update",
    "saves",
    "valuable",
    "staff",
    "time",
    "money",
    "spent",
    "updating",
    "refreshing",
    "applications",
    "like",
    "said",
    "cloud",
    "computing",
    "unlimited",
    "storage",
    "capacity",
    "time",
    "expand",
    "storage",
    "capacity",
    "nominal",
    "monthly",
    "fees",
    "know",
    "cloud",
    "computing",
    "let",
    "look",
    "types",
    "cloud",
    "computing",
    "service",
    "models",
    "better",
    "understanding",
    "let",
    "consider",
    "scenario",
    "consider",
    "making",
    "lasagna",
    "four",
    "options",
    "either",
    "bake",
    "home",
    "go",
    "restaurant",
    "eat",
    "lasagna",
    "walk",
    "event",
    "bake",
    "get",
    "delivered",
    "door",
    "step",
    "related",
    "cloud",
    "computing",
    "well",
    "let",
    "take",
    "look",
    "four",
    "boxes",
    "traditional",
    "method",
    "infrastructure",
    "service",
    "platform",
    "service",
    "software",
    "service",
    "traditional",
    "method",
    "everything",
    "made",
    "home",
    "components",
    "managed",
    "us",
    "kitchen",
    "electricity",
    "microwave",
    "lasagna",
    "sheets",
    "toppings",
    "meat",
    "cooking",
    "lasagna",
    "comes",
    "infrastructure",
    "service",
    "main",
    "kitchen",
    "appliances",
    "managed",
    "vendor",
    "things",
    "managed",
    "us",
    "basically",
    "infrastructure",
    "managed",
    "vendor",
    "look",
    "platform",
    "service",
    "infrastructure",
    "main",
    "ingredient",
    "software",
    "managed",
    "vendor",
    "things",
    "managed",
    "us",
    "look",
    "software",
    "service",
    "everything",
    "infrastructure",
    "till",
    "end",
    "product",
    "managed",
    "window",
    "let",
    "get",
    "brief",
    "look",
    "traditional",
    "method",
    "everything",
    "done",
    "scratch",
    "choosing",
    "right",
    "ingredients",
    "mode",
    "preparation",
    "full",
    "control",
    "toppings",
    "similar",
    "traditional",
    "method",
    "hardware",
    "software",
    "components",
    "built",
    "choice",
    "requirements",
    "look",
    "infrastructure",
    "service",
    "say",
    "kitchen",
    "electricity",
    "microwave",
    "infrastructure",
    "code",
    "runs",
    "next",
    "step",
    "alter",
    "software",
    "per",
    "requirements",
    "look",
    "platform",
    "service",
    "similar",
    "going",
    "event",
    "baking",
    "main",
    "ingredient",
    "lasagna",
    "sheet",
    "appliances",
    "kitchen",
    "electricity",
    "microwave",
    "rest",
    "managed",
    "us",
    "add",
    "put",
    "toppings",
    "want",
    "put",
    "meat",
    "wanted",
    "veg",
    "us",
    "components",
    "altered",
    "per",
    "requirements",
    "finally",
    "software",
    "service",
    "entire",
    "thing",
    "modeled",
    "vendor",
    "given",
    "requirements",
    "get",
    "software",
    "delivered",
    "basically",
    "deployment",
    "framework",
    "project",
    "already",
    "set",
    "brief",
    "services",
    "let",
    "dive",
    "deep",
    "one",
    "first",
    "infrastructure",
    "service",
    "infrastructure",
    "cloud",
    "provider",
    "gives",
    "variety",
    "infrastructures",
    "tour",
    "aged",
    "services",
    "network",
    "hardware",
    "maintains",
    "supports",
    "infrastructures",
    "customers",
    "access",
    "resources",
    "internet",
    "next",
    "let",
    "look",
    "benefits",
    "infrastructure",
    "service",
    "first",
    "feature",
    "resources",
    "easily",
    "scaled",
    "next",
    "cost",
    "depends",
    "consumption",
    "basically",
    "pricing",
    "pay",
    "use",
    "pay",
    "services",
    "use",
    "single",
    "piece",
    "server",
    "give",
    "lot",
    "information",
    "many",
    "users",
    "finally",
    "client",
    "complete",
    "control",
    "architecture",
    "let",
    "look",
    "pros",
    "infrastructure",
    "service",
    "model",
    "firstly",
    "highly",
    "flexible",
    "infrastructure",
    "provided",
    "rest",
    "depends",
    "customer",
    "requirements",
    "next",
    "like",
    "said",
    "cost",
    "effective",
    "pay",
    "use",
    "easy",
    "use",
    "updates",
    "deployed",
    "hardware",
    "deployed",
    "automatically",
    "management",
    "tasks",
    "wash",
    "alized",
    "employees",
    "time",
    "tasks",
    "let",
    "look",
    "call",
    "architecture",
    "due",
    "issue",
    "data",
    "security",
    "new",
    "infrastructure",
    "introduced",
    "team",
    "training",
    "required",
    "learn",
    "new",
    "infrastructure",
    "consumes",
    "lot",
    "time",
    "case",
    "crashes",
    "vendor",
    "side",
    "customers",
    "access",
    "data",
    "would",
    "wait",
    "quite",
    "lot",
    "time",
    "window",
    "fixes",
    "issue",
    "know",
    "infrastructure",
    "service",
    "let",
    "look",
    "platform",
    "service",
    "platform",
    "service",
    "cloud",
    "computing",
    "platform",
    "developer",
    "programming",
    "platform",
    "used",
    "programmers",
    "develop",
    "test",
    "run",
    "manage",
    "applications",
    "developer",
    "drives",
    "applications",
    "deploys",
    "directly",
    "layer",
    "infrastructure",
    "run",
    "applications",
    "internet",
    "let",
    "look",
    "benefits",
    "firstly",
    "resources",
    "scaled",
    "based",
    "requirements",
    "user",
    "multiple",
    "users",
    "access",
    "application",
    "allows",
    "testing",
    "hosting",
    "apps",
    "environment",
    "web",
    "services",
    "databases",
    "servers",
    "integrated",
    "one",
    "finally",
    "teams",
    "collaborate",
    "easily",
    "next",
    "let",
    "look",
    "pros",
    "paas",
    "firstly",
    "development",
    "process",
    "quick",
    "easy",
    "developer",
    "programming",
    "platform",
    "pay",
    "services",
    "use",
    "use",
    "coding",
    "done",
    "developer",
    "less",
    "coding",
    "required",
    "migration",
    "hybrid",
    "cloud",
    "easy",
    "next",
    "let",
    "look",
    "cons",
    "similar",
    "ias",
    "data",
    "security",
    "issue",
    "architecture",
    "compatibility",
    "issue",
    "existing",
    "infrastructure",
    "pass",
    "dependent",
    "window",
    "speed",
    "reliability",
    "support",
    "know",
    "platform",
    "let",
    "go",
    "ahead",
    "dive",
    "deep",
    "software",
    "service",
    "software",
    "service",
    "everything",
    "done",
    "vendors",
    "responsible",
    "give",
    "requirements",
    "everything",
    "done",
    "providers",
    "let",
    "go",
    "ahead",
    "look",
    "benefits",
    "installations",
    "updations",
    "done",
    "providers",
    "resources",
    "scaled",
    "based",
    "requirements",
    "users",
    "requirement",
    "strong",
    "network",
    "connectivity",
    "finally",
    "provider",
    "responsible",
    "everything",
    "let",
    "go",
    "ahead",
    "look",
    "pros",
    "sas",
    "upgrades",
    "automatic",
    "firstly",
    "next",
    "model",
    "easier",
    "customize",
    "sas",
    "rather",
    "service",
    "models",
    "accessible",
    "location",
    "constraint",
    "need",
    "strong",
    "internet",
    "connectivity",
    "let",
    "see",
    "cons",
    "sas",
    "provider",
    "try",
    "control",
    "end",
    "users",
    "control",
    "giving",
    "requirements",
    "solutions",
    "software",
    "crashes",
    "devices",
    "always",
    "connected",
    "better",
    "performance",
    "seen",
    "three",
    "models",
    "let",
    "see",
    "companies",
    "providing",
    "service",
    "models",
    "famous",
    "providers",
    "amazon",
    "web",
    "services",
    "rackspace",
    "digital",
    "ocean",
    "linode",
    "microsoft",
    "azure",
    "many",
    "apart",
    "amazon",
    "offers",
    "many",
    "features",
    "auto",
    "scaling",
    "cloud",
    "monitoring",
    "load",
    "balancing",
    "features",
    "castro",
    "rackspace",
    "cloud",
    "computing",
    "platform",
    "window",
    "focuses",
    "family",
    "enterprise",
    "level",
    "hosting",
    "services",
    "look",
    "famous",
    "fast",
    "provider",
    "hiroko",
    "apache",
    "stratus",
    "openshift",
    "microsoft",
    "azure",
    "many",
    "providers",
    "going",
    "ahead",
    "sas",
    "providers",
    "important",
    "one",
    "google",
    "apps",
    "salesforce",
    "cisco",
    "webex",
    "dropbox",
    "many",
    "finally",
    "let",
    "look",
    "end",
    "users",
    "cloud",
    "computing",
    "service",
    "models",
    "picture",
    "pyramid",
    "ias",
    "end",
    "users",
    "system",
    "admins",
    "responsible",
    "maintaining",
    "everything",
    "except",
    "infrastructure",
    "pass",
    "end",
    "users",
    "developers",
    "code",
    "platform",
    "provided",
    "vendors",
    "sas",
    "end",
    "users",
    "customers",
    "give",
    "requirements",
    "software",
    "built",
    "based",
    "requirements",
    "windows",
    "thank",
    "watching",
    "hope",
    "found",
    "informative",
    "stay",
    "tuned",
    "simply",
    "learn",
    "hi",
    "liked",
    "video",
    "subscribe",
    "simple",
    "learn",
    "youtube",
    "channel",
    "click",
    "watch",
    "similar",
    "videos",
    "nerd",
    "get",
    "certified",
    "click"
  ],
  "keywords": [
    "learn",
    "going",
    "see",
    "types",
    "cloud",
    "computing",
    "service",
    "models",
    "let",
    "get",
    "first",
    "features",
    "pros",
    "cons",
    "finally",
    "end",
    "users",
    "go",
    "network",
    "internet",
    "services",
    "many",
    "applications",
    "access",
    "strong",
    "connectivity",
    "look",
    "benefits",
    "cost",
    "pay",
    "use",
    "next",
    "data",
    "crashes",
    "one",
    "based",
    "time",
    "know",
    "lasagna",
    "traditional",
    "method",
    "infrastructure",
    "platform",
    "software",
    "everything",
    "components",
    "managed",
    "us",
    "kitchen",
    "electricity",
    "microwave",
    "toppings",
    "main",
    "vendor",
    "basically",
    "window",
    "done",
    "control",
    "similar",
    "hardware",
    "requirements",
    "provider",
    "customers",
    "resources",
    "scaled",
    "give",
    "lot",
    "architecture",
    "firstly",
    "easy",
    "issue",
    "developer",
    "ahead",
    "responsible",
    "providers",
    "sas"
  ]
}