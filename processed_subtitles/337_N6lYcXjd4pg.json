{
  "text": "when you decide to move to the cloud one\nof the first things you have to do\nis give them your credit card that's\nbecause they're giving you access to a\nmassive network of computers worth\nbillions upon billions of dollars when\nyou write inefficient code on your own\ncomputer it's usually not a big deal the\ncpu fan might spin a little faster or\nthings might run slower when you run out\nof ram\nbut in the cloud it's a whole different\nball game that recursive function you\nwrote can now scale infinitely around\nthe globe\nblowing up cpu cores and melting solid\nstate drives in the process\nand someone is going to have to pay for\nthat mess in today's video we'll look at\na real life story about how a startup\njust days away from launch racked up a\n72 thousand dollar google cloud bill\nstand it's gone didn't do too well it's\ngone poof\nwe'll find out how that's even possible\nbut more importantly we'll look at ways\nto prevent something like that from\nhappening to you\nif you're new here like and subscribe\nthen let's get right into it\nimagine spending months pouring blood\nsweat and tears into your startup\nyou're just days away from the big\nlaunch doing some final testing here and\nthere\nyour product is ready to go you just\nneed to scrape some data from the web to\nenrich the user experience\nyou throw together some ad-hoc code to\nget the job done dockerize it\nthen deploy it to a serverless platform\nlike google cloud run\nit only needs to run for a few hours so\nyou deploy it then call it a night\nyou wake up to a couple of interesting\nemails our firebase project was upgraded\nfrom the free plan\nto the pay-as-you-go plan we must have\nenabled an api that requires billing\nwhich automatically upgraded the plan\nnot to worry we already have a budget\nalert in place oh no\nthe next email tells us our seven dollar\nbudget has been exceeded\nthe third email tells us our credit card\nwas declined i wonder why that would be\nlet's open the billing panel in google\ncloud no god please\nno no a bill of over five thousand\ndollars in just a few hours\nit has to be a mistake let's refresh the\npage and pray\nno no five minutes later the bill's at\nfifteen thousand dollars\nafter twenty minutes twenty five\nthousand dollars the final bill settled\nup after about two hours just short of\nseventy two thousand\nincreasing your startups burn rate by\nabout six hundred dollars per minute\nno if you're a bootstrap startup you\nmight as well make it ten million\ndollars\nto make matters even worse this company\nhad multiple products\nwith multiple google cloud projects to\nmanage them because things got out of\ncontrol so quickly\nthey had to disable all of their\nprojects and that's the story of how one\nlittle recursive function took down an\nentire business\ni declare\nbankruptcy luckily the story doesn't end\nthere\nthe company immediately contacted google\ncloud to make them aware of the issue\nand let them know that they did not\nintend to purchase this much computing\npower\nafter 10 days of deliberation google did\nthe not evil thing\nand credited the entire 72 thousand\ndollar bill that must have been a huge\nrelief for the company and was a big win\nfor independent developers around the\nworld\nbut keep in mind there's no guarantee\nyou'll get the same kind of credit when\nyou rack up a massive bill the best\nstrategy\nis to not rack up a massive bill in the\nfirst place however that's easier said\nthan done\ni've actually racked up two massive\nbills myself one time\ni accidentally exposed my aws api key in\na public git repo\na few months later i had a 5 000 aws\nbill because a hacker scraped the key\nand then used it to spin up a bunch of\ncompute instances\nluckily they gave me a credit for my\nbill as well it is very reassuring that\nthese big cloud companies would rather\nkeep you as a long-term customer\nthan try to bankrupt you over an honest\nmistake but a bill of 72 000\nis crazy i've never seen a bill get that\nhigh that quickly and we should all be\nthanking announced today for sharing\nthat story with us\ncheck out their web app for a great\nexample of angular and firebase in the\nwild\nthen let's dive into the technical\nreasons for the massive bill and more\nimportantly\nways to avoid it yourself tip number one\nset up a budget alert\neven if you're on the free plan of\nsomething or in the free tier once you\ndeploy code to the cloud there are\ndifferent ways you might exceed the free\ntier without knowing it\nit's not common but it's still always a\ngood practice to have a budget alert set\non your account globally\nthe company did this right by setting a\nbudget for seven dollars\nthe problem in this case though was that\nthe cost increased so quickly\nan alert will only send you an email it\ndoesn't actually shut down anything\nwhen the budget has been exceeded it's\nactually kind of crazy that there's not\nan easy way to shut down services\nwhen the budget has been exceeded that's\nbeen a major criticism of the cloud for\nas long as i can remember\nhowever there may be hope in october\n2020 aws released a new feature called\nbudget actions where you can define an\naction based on a budget threshold like\nshutting down a server once you've spent\ntoo much money\nin addition on google cloud you can\nlisten to budget events with pub sub\nand that means you can write a little\nbit of code to create a kill switch\nthat disables billing if the budget is\nexceeded now let's move on to the next\ntip\ndo not create infinite loops in the\ncloud do not create\ninfinite loops in the cloud do not\ncreate infinite loops in the cloud\nwhen it comes to serverless computing\neverything is event-based\nsome kind of event happens in the cloud\nlike an upload to a storage bucket\nwhich triggers a cloud function for\nadditional back-end work it's really\neasy to shoot yourself in the foot here\nthough\nif your function leads to the same event\nthat triggered it in the first place\nfor example a cloud function is\ntriggered by a storage upload\nthen you upload a file to the storage\nbucket again and the function\nthus triggering another function and\nagain and again and forever until the\nend of time\nor until your bank account is empty\nthat's what we call an infinite loop and\nit's probably\nthe number one cause for runaway cost\nunexpectedly\nespecially if your infrastructure is\nconfigured to handle huge workloads\nthat brings me to tip number three don't\nconfigure things to scale when you're\njust messing around our startup used a\nservice called cloud run\nwhich are serverless functions that\nsupport docker containers\nby default cloudrun will scale to a max\nof 1000 instances\nnow if we take a look at the\narchitecture for the web scraper you'll\nnotice it starts with a manual request\nto the cloud run endpoint\neach run scrapes url and saves the\nresults in firestore\nthen it takes all the links it found in\na scraped webpage and triggers another\ncloud run to process them\nif we look at this as pseudocode what we\nhave here is a recursive function\nbut a recursive function with no\nstopping point which leads to stack\noverflow\nor in this case cloud overflow which is\na brand new word that i just coined\nbecause the infrastructure was set up to\nscale it resulted in a 116 billion reads\nto the database and 33 million writes\nalong with 16 000 hours of cloud run\ncompute time\nthe moral of the story is to understand\nhow different services scale\nand configure them to not scale if you\ndon't need that functionality\nin the case of cloud run if the max\ninstance option was set to 1\ninstead of 1 000 their bill would have\nbeen 72 dollars\ninstead of 72 000 but in production you\nlikely do want things to scale and\nsometimes you won't know how bad an\nissue is\nuntil your app does scale which brings\nme to tip number four\nconsider how algorithm complexity\naffects your cloud computing usage a\nwhile back i made a video\nabout how to not get a 30 000 firebase\nbill which was another case study about\na company that went viral\nand a flawed data model caused their\nbill to accelerate exponentially\nallow me to explain they built a\ncrowdfunding app and in the app\nthey calculate the total amount donated\nto a crowdfunding cause\nthey perform the calculation client side\nby reading all the donations from the\ndatabase for that cause\nnow let's imagine you have five people\nwho donated to a cause and a hundred\nvisitors to that page\nthat would equal 500 document reads now\nlet's imagine you have a hundred\nthousand visitors\nthat'd be about 500 000 reads which\nstill isn't too bad\nbut now let's imagine you have 5 000\ndonations to a cause\nmultiply that by 100k users and you now\nhave 500 million document reads or in\nother words\nat the current traffic level each new\ndonation adds an additional hundred\nthousand document reads to the total\nworkload\nit just doesn't scale well a better\noption would have been to aggregate the\ndata on the backend with a cloud\nfunction\nrather than calculate the total client\nside it could be done on the back end\nso that each visitor only has to read\none document instead of 5 000 documents\nnow i realize stories like this are\npretty alarming but firestore is\nactually very inexpensive\nand because it's so easy to use you may\nnot realize you're making a bad data\nmodeling choice until it's too late\nusing the right data model can go a long\nway and you can learn more about that in\nmy data modeling course\nbut yet another way you might experience\nrunaway cost is by failing to secure\nyour app\nand that leads me to tip number five\nmake sure your app is secure\nmost importantly make sure to protect\nany secret api keys\nlike i mentioned earlier exposing my aws\napi key on github\nallowed a hacker to take full control\nover my account but there are many other\nways you might fail to secure your\ninfrastructure\nwhen it comes to firestore you need to\ndefine security rules to define who has\naccess to what in the database and of\ncourse i have a full course on that as\nwell\nleaving the database open means anybody\ncould read or write to it\nnot only does that leave you vulnerable\nto a data breach but also to hackers\nthat just want to drive up your costs\nthe same principle goes for any\napplication that is available on the web\nwhen you have a service that's available\non the internet it means someone can\nfind that url\nand exploit it i'm going to go ahead and\nwrap things up there please make sure to\nlike and subscribe and if you're\nbuilding an app with firebase or google\ncloud\nconsider becoming a pro member at\nfireship io thanks for watching and i\nwill see you in the next one\n",
  "words": [
    "decide",
    "move",
    "cloud",
    "one",
    "first",
    "things",
    "give",
    "credit",
    "card",
    "giving",
    "access",
    "massive",
    "network",
    "computers",
    "worth",
    "billions",
    "upon",
    "billions",
    "dollars",
    "write",
    "inefficient",
    "code",
    "computer",
    "usually",
    "big",
    "deal",
    "cpu",
    "fan",
    "might",
    "spin",
    "little",
    "faster",
    "things",
    "might",
    "run",
    "slower",
    "run",
    "ram",
    "cloud",
    "whole",
    "different",
    "ball",
    "game",
    "recursive",
    "function",
    "wrote",
    "scale",
    "infinitely",
    "around",
    "globe",
    "blowing",
    "cpu",
    "cores",
    "melting",
    "solid",
    "state",
    "drives",
    "process",
    "someone",
    "going",
    "pay",
    "mess",
    "today",
    "video",
    "look",
    "real",
    "life",
    "story",
    "startup",
    "days",
    "away",
    "launch",
    "racked",
    "72",
    "thousand",
    "dollar",
    "google",
    "cloud",
    "bill",
    "stand",
    "gone",
    "well",
    "gone",
    "poof",
    "find",
    "even",
    "possible",
    "importantly",
    "look",
    "ways",
    "prevent",
    "something",
    "like",
    "happening",
    "new",
    "like",
    "subscribe",
    "let",
    "get",
    "right",
    "imagine",
    "spending",
    "months",
    "pouring",
    "blood",
    "sweat",
    "tears",
    "startup",
    "days",
    "away",
    "big",
    "launch",
    "final",
    "testing",
    "product",
    "ready",
    "go",
    "need",
    "scrape",
    "data",
    "web",
    "enrich",
    "user",
    "experience",
    "throw",
    "together",
    "code",
    "get",
    "job",
    "done",
    "dockerize",
    "deploy",
    "serverless",
    "platform",
    "like",
    "google",
    "cloud",
    "run",
    "needs",
    "run",
    "hours",
    "deploy",
    "call",
    "night",
    "wake",
    "couple",
    "interesting",
    "emails",
    "firebase",
    "project",
    "upgraded",
    "free",
    "plan",
    "plan",
    "must",
    "enabled",
    "api",
    "requires",
    "billing",
    "automatically",
    "upgraded",
    "plan",
    "worry",
    "already",
    "budget",
    "alert",
    "place",
    "oh",
    "next",
    "email",
    "tells",
    "us",
    "seven",
    "dollar",
    "budget",
    "exceeded",
    "third",
    "email",
    "tells",
    "us",
    "credit",
    "card",
    "declined",
    "wonder",
    "would",
    "let",
    "open",
    "billing",
    "panel",
    "google",
    "cloud",
    "god",
    "please",
    "bill",
    "five",
    "thousand",
    "dollars",
    "hours",
    "mistake",
    "let",
    "refresh",
    "page",
    "pray",
    "five",
    "minutes",
    "later",
    "bill",
    "fifteen",
    "thousand",
    "dollars",
    "twenty",
    "minutes",
    "twenty",
    "five",
    "thousand",
    "dollars",
    "final",
    "bill",
    "settled",
    "two",
    "hours",
    "short",
    "seventy",
    "two",
    "thousand",
    "increasing",
    "startups",
    "burn",
    "rate",
    "six",
    "hundred",
    "dollars",
    "per",
    "minute",
    "bootstrap",
    "startup",
    "might",
    "well",
    "make",
    "ten",
    "million",
    "dollars",
    "make",
    "matters",
    "even",
    "worse",
    "company",
    "multiple",
    "products",
    "multiple",
    "google",
    "cloud",
    "projects",
    "manage",
    "things",
    "got",
    "control",
    "quickly",
    "disable",
    "projects",
    "story",
    "one",
    "little",
    "recursive",
    "function",
    "took",
    "entire",
    "business",
    "declare",
    "bankruptcy",
    "luckily",
    "story",
    "end",
    "company",
    "immediately",
    "contacted",
    "google",
    "cloud",
    "make",
    "aware",
    "issue",
    "let",
    "know",
    "intend",
    "purchase",
    "much",
    "computing",
    "power",
    "10",
    "days",
    "deliberation",
    "google",
    "evil",
    "thing",
    "credited",
    "entire",
    "72",
    "thousand",
    "dollar",
    "bill",
    "must",
    "huge",
    "relief",
    "company",
    "big",
    "win",
    "independent",
    "developers",
    "around",
    "world",
    "keep",
    "mind",
    "guarantee",
    "get",
    "kind",
    "credit",
    "rack",
    "massive",
    "bill",
    "best",
    "strategy",
    "rack",
    "massive",
    "bill",
    "first",
    "place",
    "however",
    "easier",
    "said",
    "done",
    "actually",
    "racked",
    "two",
    "massive",
    "bills",
    "one",
    "time",
    "accidentally",
    "exposed",
    "aws",
    "api",
    "key",
    "public",
    "git",
    "repo",
    "months",
    "later",
    "5",
    "000",
    "aws",
    "bill",
    "hacker",
    "scraped",
    "key",
    "used",
    "spin",
    "bunch",
    "compute",
    "instances",
    "luckily",
    "gave",
    "credit",
    "bill",
    "well",
    "reassuring",
    "big",
    "cloud",
    "companies",
    "would",
    "rather",
    "keep",
    "customer",
    "try",
    "bankrupt",
    "honest",
    "mistake",
    "bill",
    "72",
    "000",
    "crazy",
    "never",
    "seen",
    "bill",
    "get",
    "high",
    "quickly",
    "thanking",
    "announced",
    "today",
    "sharing",
    "story",
    "us",
    "check",
    "web",
    "app",
    "great",
    "example",
    "angular",
    "firebase",
    "wild",
    "let",
    "dive",
    "technical",
    "reasons",
    "massive",
    "bill",
    "importantly",
    "ways",
    "avoid",
    "tip",
    "number",
    "one",
    "set",
    "budget",
    "alert",
    "even",
    "free",
    "plan",
    "something",
    "free",
    "tier",
    "deploy",
    "code",
    "cloud",
    "different",
    "ways",
    "might",
    "exceed",
    "free",
    "tier",
    "without",
    "knowing",
    "common",
    "still",
    "always",
    "good",
    "practice",
    "budget",
    "alert",
    "set",
    "account",
    "globally",
    "company",
    "right",
    "setting",
    "budget",
    "seven",
    "dollars",
    "problem",
    "case",
    "though",
    "cost",
    "increased",
    "quickly",
    "alert",
    "send",
    "email",
    "actually",
    "shut",
    "anything",
    "budget",
    "exceeded",
    "actually",
    "kind",
    "crazy",
    "easy",
    "way",
    "shut",
    "services",
    "budget",
    "exceeded",
    "major",
    "criticism",
    "cloud",
    "long",
    "remember",
    "however",
    "may",
    "hope",
    "october",
    "2020",
    "aws",
    "released",
    "new",
    "feature",
    "called",
    "budget",
    "actions",
    "define",
    "action",
    "based",
    "budget",
    "threshold",
    "like",
    "shutting",
    "server",
    "spent",
    "much",
    "money",
    "addition",
    "google",
    "cloud",
    "listen",
    "budget",
    "events",
    "pub",
    "sub",
    "means",
    "write",
    "little",
    "bit",
    "code",
    "create",
    "kill",
    "switch",
    "disables",
    "billing",
    "budget",
    "exceeded",
    "let",
    "move",
    "next",
    "tip",
    "create",
    "infinite",
    "loops",
    "cloud",
    "create",
    "infinite",
    "loops",
    "cloud",
    "create",
    "infinite",
    "loops",
    "cloud",
    "comes",
    "serverless",
    "computing",
    "everything",
    "kind",
    "event",
    "happens",
    "cloud",
    "like",
    "upload",
    "storage",
    "bucket",
    "triggers",
    "cloud",
    "function",
    "additional",
    "work",
    "really",
    "easy",
    "shoot",
    "foot",
    "though",
    "function",
    "leads",
    "event",
    "triggered",
    "first",
    "place",
    "example",
    "cloud",
    "function",
    "triggered",
    "storage",
    "upload",
    "upload",
    "file",
    "storage",
    "bucket",
    "function",
    "thus",
    "triggering",
    "another",
    "function",
    "forever",
    "end",
    "time",
    "bank",
    "account",
    "empty",
    "call",
    "infinite",
    "loop",
    "probably",
    "number",
    "one",
    "cause",
    "runaway",
    "cost",
    "unexpectedly",
    "especially",
    "infrastructure",
    "configured",
    "handle",
    "huge",
    "workloads",
    "brings",
    "tip",
    "number",
    "three",
    "configure",
    "things",
    "scale",
    "messing",
    "around",
    "startup",
    "used",
    "service",
    "called",
    "cloud",
    "run",
    "serverless",
    "functions",
    "support",
    "docker",
    "containers",
    "default",
    "cloudrun",
    "scale",
    "max",
    "1000",
    "instances",
    "take",
    "look",
    "architecture",
    "web",
    "scraper",
    "notice",
    "starts",
    "manual",
    "request",
    "cloud",
    "run",
    "endpoint",
    "run",
    "scrapes",
    "url",
    "saves",
    "results",
    "firestore",
    "takes",
    "links",
    "found",
    "scraped",
    "webpage",
    "triggers",
    "another",
    "cloud",
    "run",
    "process",
    "look",
    "pseudocode",
    "recursive",
    "function",
    "recursive",
    "function",
    "stopping",
    "point",
    "leads",
    "stack",
    "overflow",
    "case",
    "cloud",
    "overflow",
    "brand",
    "new",
    "word",
    "coined",
    "infrastructure",
    "set",
    "scale",
    "resulted",
    "116",
    "billion",
    "reads",
    "database",
    "33",
    "million",
    "writes",
    "along",
    "16",
    "000",
    "hours",
    "cloud",
    "run",
    "compute",
    "time",
    "moral",
    "story",
    "understand",
    "different",
    "services",
    "scale",
    "configure",
    "scale",
    "need",
    "functionality",
    "case",
    "cloud",
    "run",
    "max",
    "instance",
    "option",
    "set",
    "1",
    "instead",
    "1",
    "000",
    "bill",
    "would",
    "72",
    "dollars",
    "instead",
    "72",
    "000",
    "production",
    "likely",
    "want",
    "things",
    "scale",
    "sometimes",
    "wo",
    "know",
    "bad",
    "issue",
    "app",
    "scale",
    "brings",
    "tip",
    "number",
    "four",
    "consider",
    "algorithm",
    "complexity",
    "affects",
    "cloud",
    "computing",
    "usage",
    "back",
    "made",
    "video",
    "get",
    "30",
    "000",
    "firebase",
    "bill",
    "another",
    "case",
    "study",
    "company",
    "went",
    "viral",
    "flawed",
    "data",
    "model",
    "caused",
    "bill",
    "accelerate",
    "exponentially",
    "allow",
    "explain",
    "built",
    "crowdfunding",
    "app",
    "app",
    "calculate",
    "total",
    "amount",
    "donated",
    "crowdfunding",
    "cause",
    "perform",
    "calculation",
    "client",
    "side",
    "reading",
    "donations",
    "database",
    "cause",
    "let",
    "imagine",
    "five",
    "people",
    "donated",
    "cause",
    "hundred",
    "visitors",
    "page",
    "would",
    "equal",
    "500",
    "document",
    "reads",
    "let",
    "imagine",
    "hundred",
    "thousand",
    "visitors",
    "500",
    "000",
    "reads",
    "still",
    "bad",
    "let",
    "imagine",
    "5",
    "000",
    "donations",
    "cause",
    "multiply",
    "100k",
    "users",
    "500",
    "million",
    "document",
    "reads",
    "words",
    "current",
    "traffic",
    "level",
    "new",
    "donation",
    "adds",
    "additional",
    "hundred",
    "thousand",
    "document",
    "reads",
    "total",
    "workload",
    "scale",
    "well",
    "better",
    "option",
    "would",
    "aggregate",
    "data",
    "backend",
    "cloud",
    "function",
    "rather",
    "calculate",
    "total",
    "client",
    "side",
    "could",
    "done",
    "back",
    "end",
    "visitor",
    "read",
    "one",
    "document",
    "instead",
    "5",
    "000",
    "documents",
    "realize",
    "stories",
    "like",
    "pretty",
    "alarming",
    "firestore",
    "actually",
    "inexpensive",
    "easy",
    "use",
    "may",
    "realize",
    "making",
    "bad",
    "data",
    "modeling",
    "choice",
    "late",
    "using",
    "right",
    "data",
    "model",
    "go",
    "long",
    "way",
    "learn",
    "data",
    "modeling",
    "course",
    "yet",
    "another",
    "way",
    "might",
    "experience",
    "runaway",
    "cost",
    "failing",
    "secure",
    "app",
    "leads",
    "tip",
    "number",
    "five",
    "make",
    "sure",
    "app",
    "secure",
    "importantly",
    "make",
    "sure",
    "protect",
    "secret",
    "api",
    "keys",
    "like",
    "mentioned",
    "earlier",
    "exposing",
    "aws",
    "api",
    "key",
    "github",
    "allowed",
    "hacker",
    "take",
    "full",
    "control",
    "account",
    "many",
    "ways",
    "might",
    "fail",
    "secure",
    "infrastructure",
    "comes",
    "firestore",
    "need",
    "define",
    "security",
    "rules",
    "define",
    "access",
    "database",
    "course",
    "full",
    "course",
    "well",
    "leaving",
    "database",
    "open",
    "means",
    "anybody",
    "could",
    "read",
    "write",
    "leave",
    "vulnerable",
    "data",
    "breach",
    "also",
    "hackers",
    "want",
    "drive",
    "costs",
    "principle",
    "goes",
    "application",
    "available",
    "web",
    "service",
    "available",
    "internet",
    "means",
    "someone",
    "find",
    "url",
    "exploit",
    "going",
    "go",
    "ahead",
    "wrap",
    "things",
    "please",
    "make",
    "sure",
    "like",
    "subscribe",
    "building",
    "app",
    "firebase",
    "google",
    "cloud",
    "consider",
    "becoming",
    "pro",
    "member",
    "fireship",
    "io",
    "thanks",
    "watching",
    "see",
    "next",
    "one"
  ],
  "keywords": [
    "move",
    "cloud",
    "one",
    "first",
    "things",
    "credit",
    "card",
    "access",
    "massive",
    "billions",
    "dollars",
    "write",
    "code",
    "big",
    "cpu",
    "might",
    "spin",
    "little",
    "run",
    "different",
    "recursive",
    "function",
    "scale",
    "around",
    "process",
    "someone",
    "going",
    "today",
    "video",
    "look",
    "story",
    "startup",
    "days",
    "away",
    "launch",
    "racked",
    "72",
    "thousand",
    "dollar",
    "google",
    "bill",
    "gone",
    "well",
    "find",
    "even",
    "importantly",
    "ways",
    "something",
    "like",
    "new",
    "subscribe",
    "let",
    "get",
    "right",
    "imagine",
    "months",
    "final",
    "go",
    "need",
    "data",
    "web",
    "experience",
    "done",
    "deploy",
    "serverless",
    "hours",
    "call",
    "firebase",
    "upgraded",
    "free",
    "plan",
    "must",
    "api",
    "billing",
    "budget",
    "alert",
    "place",
    "next",
    "email",
    "tells",
    "us",
    "seven",
    "exceeded",
    "would",
    "open",
    "please",
    "five",
    "mistake",
    "page",
    "minutes",
    "later",
    "twenty",
    "two",
    "hundred",
    "make",
    "million",
    "company",
    "multiple",
    "projects",
    "control",
    "quickly",
    "entire",
    "luckily",
    "end",
    "issue",
    "know",
    "much",
    "computing",
    "huge",
    "keep",
    "kind",
    "rack",
    "however",
    "actually",
    "time",
    "aws",
    "key",
    "5",
    "000",
    "hacker",
    "scraped",
    "used",
    "compute",
    "instances",
    "rather",
    "crazy",
    "app",
    "example",
    "tip",
    "number",
    "set",
    "tier",
    "still",
    "account",
    "case",
    "though",
    "cost",
    "shut",
    "easy",
    "way",
    "services",
    "long",
    "may",
    "called",
    "define",
    "means",
    "create",
    "infinite",
    "loops",
    "comes",
    "event",
    "upload",
    "storage",
    "bucket",
    "triggers",
    "additional",
    "leads",
    "triggered",
    "another",
    "cause",
    "runaway",
    "infrastructure",
    "brings",
    "configure",
    "service",
    "max",
    "take",
    "url",
    "firestore",
    "overflow",
    "reads",
    "database",
    "option",
    "1",
    "instead",
    "want",
    "bad",
    "consider",
    "back",
    "model",
    "crowdfunding",
    "calculate",
    "total",
    "donated",
    "client",
    "side",
    "donations",
    "visitors",
    "500",
    "document",
    "could",
    "read",
    "realize",
    "modeling",
    "course",
    "secure",
    "sure",
    "full",
    "available"
  ]
}