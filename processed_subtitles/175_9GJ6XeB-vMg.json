{
  "text": "[Music]\nwhat is going on guys welcome back in\ntoday's video we're going to learn how\nto use speech recognition in python so\nlet's get right into it\nall right now in order to use speech\nrecognition in python we need to install\ntwo libraries and the first one has the\ncreative name\nspeech recognition so we need to say pip\n3 install\nspeech recognition like that and the\nsecond one is a little bit more cryptic\nit is\np y t t s x three and i don't even know\nwhat that stands for\num but this module this p y t t\ns x three module is based on pi audio\nand just\na little warning here pi audio is not uh\nalways trivial to install so sometimes\nyou're going to have some errors pi\naudio can uh can be difficult to install\nlet's put it that way\nnow usually all you need to do is or\nactually it's automatically installed if\nyou don't have any mistakes by just\ninstalling this library\nbut usually you just say pip install and\nthen pi audio\num or pip3 install pi audio on linux you\nsometimes have to do\nsudo apt at least on\non debian based version sudo apt install\nand then\npython 3 dash pi\naudio and sometimes you're going to have\nsome errors on windows or on linux then\nyou might have to install the wheel\nfiles manually\nuh or to use the dash dash user tech and\nso on\nhowever i think this falls into the\ncategory of googling so\nwatch the one video that i that i\nuploaded a couple of\nweeks or days ago which is the art of\ngoogling as a programmer or\ngoogling as a superpower i can't\nremember the exact title\nthere you can learn how to google\nproperly and you just\nif you encounter some mistakes while\ninstalling these libraries just google\nand you're going to find uh your way to\nthe solution so\nthen we're just going to create a new\npython file and here we're going to\nimport\nfirst of all speech recognition but\nwe're going to use an underscore here\nbecause even though we install\nspeech recognition without any blanks or\nunderscores we're going to have to\nimport speech underscore recognition\nand then we're going to also import\npytt sx3\nso those are the two libraries that\nwe're going to import here\nand then we're going to build a\nrecognizer so this is going to be our\nobject we're going to say recognizer\nequals and this is part of speech\nrecognition so speech recognition dot\nrecognizer\nwith a capital r and this is just going\nto be our object that is going to\num to make sure that it understands what\nwe're saying into the microphone\nthen we're going to have an endless loop\nso while true and then we're going to\ntry something and if this doesn't work\nwe're going to have an accept block here\nand some error handling or just skipping\nthe current iteration here\num and now what we're going to do here\nis we're going to say\nwith speech recognition dot\nmicrophone so we're going to use a\nmicrophone as an input here\nwith that as mic\nwe're going to say recognizer\ndot adjust for ambient noise\nthe source of this is the microphone and\nduration we're going to set this to 0.2\nso that it recognizes when we start\ntalking and stop talking\nand then we're just going to say audio\nequals recognizer.listen\ni'm going to listen to the microphone\nhere and\nthen we're just going to extract the\ntext so we're going to say text equals\nand then we're going to say recognizer\ndot recognize and here we can use the\nsource so we can use bing we can use ibm\nand\nso on we can use google which is what\nwe're going to use here so you just have\nto pick the source\nand the language and all that so here\nyou can see in the documentation that\nyou can pick a language\nand set some other parameters like\ngrammar and so on but we're just going\nto go for google\nand we're going to leave it at the\ndefault language which is english\nand then we're going to have to pass the\naudio data to this function so we're\ngoing to say recognizer dot recognize\ngoogle\nand here we're going to pass the audio\nsource\nor the audio itself and then we're just\ngoing to say text\nequals text dot lower so that we don't\nhave\nany uh cases that we don't like\nand we're going to print the text so\nwe're going to say recognized\nand the text here and we need to make\nthis an f-string\notherwise this is not going to work\nand this is actually it now what happens\nif we get some value error because this\nhappens from time to time\nso if we get a speech recognition dot\nunknown value error\nuh i don't know exactly when this\nhappens but if it happens\nit's mostly you know it's not a big deal\nwe can just\nskip the whole thing and start start\nfrom scratch so we're just going to\nbasically copy\nthis uh initialization here\nwe're going to indent this and then\nwe're just going to continue\nso basically what we're doing is if we\nget some error and we don't know how to\nproceed we're just going to set up the\nwhole thing again\nand we're going to skip this iteration\nwe're going to start all over until we\nget this same error again so this is a\nvery basic speech recognition script\nso now we have the script on the desktop\nand we're going to give it a try by\nrunning cmd and navigating to the\ndesktop so cd desktop and then just\npython main dot py\nnow as i'm talking here it's going to\nrecognize what i'm saying so let's just\nwait for\nfor the result\nas you can see here recognized now as\ni'm talking here it's going to recognize\nwhat i'm saying so let's just wait for\nfor the result so even if i'm making a\nmistake while talking it's going to\nrecognize that\nand now we should get a pretty long\nsentence\nyeah as you can see now it's not uh it's\nnot perfect i don't know\nif it makes any mistakes here but i'm\ncertainly making mistakes while i'm\ntalking so we're going to see some\ninteresting results when i stop talking\nhere\nyeah there you go so this is basically\nthe speech recognition script and you\ncan use this of course\nto make a voice assistant for example\nnow i have a video on this channel about\nan intelligent chatbot\nabout a virtual assistant and you can\ncombine this with\nthis speech recognition and make it a\nvoice assistant and maybe i'm going to\nmake a video on that\nin the future so let me know in the\ncomment section down below if you want\nto see such a project\nand you can combine this with all sorts\nof things you can automate your home if\nyou have some access to your\nlight bulbs for example or to a smart\nfridge or a smart toaster for example\nyou can just say something to the script\nand then\nuh the script recognizes okay this guy\nwants me to\nstart the coffee machine for example and\nthis can be done with this script\nso that's it for today's video hope you\nenjoyed it hope you learned something if\nso let me know by hitting the like\nbutton and leaving a comment in the\ncomment section down below\nand of course don't forget to subscribe\nto this channel and hit the notification\nbell to not miss a single future video\nfor free\nother than that thank you very much for\nwatching see you next video and\nbye\n[Music]\nyou\n",
  "words": [
    "music",
    "going",
    "guys",
    "welcome",
    "back",
    "today",
    "video",
    "going",
    "learn",
    "use",
    "speech",
    "recognition",
    "python",
    "let",
    "get",
    "right",
    "right",
    "order",
    "use",
    "speech",
    "recognition",
    "python",
    "need",
    "install",
    "two",
    "libraries",
    "first",
    "one",
    "creative",
    "name",
    "speech",
    "recognition",
    "need",
    "say",
    "pip",
    "3",
    "install",
    "speech",
    "recognition",
    "like",
    "second",
    "one",
    "little",
    "bit",
    "cryptic",
    "p",
    "x",
    "three",
    "even",
    "know",
    "stands",
    "um",
    "module",
    "p",
    "x",
    "three",
    "module",
    "based",
    "pi",
    "audio",
    "little",
    "warning",
    "pi",
    "audio",
    "uh",
    "always",
    "trivial",
    "install",
    "sometimes",
    "going",
    "errors",
    "pi",
    "audio",
    "uh",
    "difficult",
    "install",
    "let",
    "put",
    "way",
    "usually",
    "need",
    "actually",
    "automatically",
    "installed",
    "mistakes",
    "installing",
    "library",
    "usually",
    "say",
    "pip",
    "install",
    "pi",
    "audio",
    "um",
    "pip3",
    "install",
    "pi",
    "audio",
    "linux",
    "sometimes",
    "sudo",
    "apt",
    "least",
    "debian",
    "based",
    "version",
    "sudo",
    "apt",
    "install",
    "python",
    "3",
    "dash",
    "pi",
    "audio",
    "sometimes",
    "going",
    "errors",
    "windows",
    "linux",
    "might",
    "install",
    "wheel",
    "files",
    "manually",
    "uh",
    "use",
    "dash",
    "dash",
    "user",
    "tech",
    "however",
    "think",
    "falls",
    "category",
    "googling",
    "watch",
    "one",
    "video",
    "uploaded",
    "couple",
    "weeks",
    "days",
    "ago",
    "art",
    "googling",
    "programmer",
    "googling",
    "superpower",
    "ca",
    "remember",
    "exact",
    "title",
    "learn",
    "google",
    "properly",
    "encounter",
    "mistakes",
    "installing",
    "libraries",
    "google",
    "going",
    "find",
    "uh",
    "way",
    "solution",
    "going",
    "create",
    "new",
    "python",
    "file",
    "going",
    "import",
    "first",
    "speech",
    "recognition",
    "going",
    "use",
    "underscore",
    "even",
    "though",
    "install",
    "speech",
    "recognition",
    "without",
    "blanks",
    "underscores",
    "going",
    "import",
    "speech",
    "underscore",
    "recognition",
    "going",
    "also",
    "import",
    "pytt",
    "sx3",
    "two",
    "libraries",
    "going",
    "import",
    "going",
    "build",
    "recognizer",
    "going",
    "object",
    "going",
    "say",
    "recognizer",
    "equals",
    "part",
    "speech",
    "recognition",
    "speech",
    "recognition",
    "dot",
    "recognizer",
    "capital",
    "r",
    "going",
    "object",
    "going",
    "um",
    "make",
    "sure",
    "understands",
    "saying",
    "microphone",
    "going",
    "endless",
    "loop",
    "true",
    "going",
    "try",
    "something",
    "work",
    "going",
    "accept",
    "block",
    "error",
    "handling",
    "skipping",
    "current",
    "iteration",
    "um",
    "going",
    "going",
    "say",
    "speech",
    "recognition",
    "dot",
    "microphone",
    "going",
    "use",
    "microphone",
    "input",
    "mic",
    "going",
    "say",
    "recognizer",
    "dot",
    "adjust",
    "ambient",
    "noise",
    "source",
    "microphone",
    "duration",
    "going",
    "set",
    "recognizes",
    "start",
    "talking",
    "stop",
    "talking",
    "going",
    "say",
    "audio",
    "equals",
    "going",
    "listen",
    "microphone",
    "going",
    "extract",
    "text",
    "going",
    "say",
    "text",
    "equals",
    "going",
    "say",
    "recognizer",
    "dot",
    "recognize",
    "use",
    "source",
    "use",
    "bing",
    "use",
    "ibm",
    "use",
    "google",
    "going",
    "use",
    "pick",
    "source",
    "language",
    "see",
    "documentation",
    "pick",
    "language",
    "set",
    "parameters",
    "like",
    "grammar",
    "going",
    "go",
    "google",
    "going",
    "leave",
    "default",
    "language",
    "english",
    "going",
    "pass",
    "audio",
    "data",
    "function",
    "going",
    "say",
    "recognizer",
    "dot",
    "recognize",
    "google",
    "going",
    "pass",
    "audio",
    "source",
    "audio",
    "going",
    "say",
    "text",
    "equals",
    "text",
    "dot",
    "lower",
    "uh",
    "cases",
    "like",
    "going",
    "print",
    "text",
    "going",
    "say",
    "recognized",
    "text",
    "need",
    "make",
    "otherwise",
    "going",
    "work",
    "actually",
    "happens",
    "get",
    "value",
    "error",
    "happens",
    "time",
    "time",
    "get",
    "speech",
    "recognition",
    "dot",
    "unknown",
    "value",
    "error",
    "uh",
    "know",
    "exactly",
    "happens",
    "happens",
    "mostly",
    "know",
    "big",
    "deal",
    "skip",
    "whole",
    "thing",
    "start",
    "start",
    "scratch",
    "going",
    "basically",
    "copy",
    "uh",
    "initialization",
    "going",
    "indent",
    "going",
    "continue",
    "basically",
    "get",
    "error",
    "know",
    "proceed",
    "going",
    "set",
    "whole",
    "thing",
    "going",
    "skip",
    "iteration",
    "going",
    "start",
    "get",
    "error",
    "basic",
    "speech",
    "recognition",
    "script",
    "script",
    "desktop",
    "going",
    "give",
    "try",
    "running",
    "cmd",
    "navigating",
    "desktop",
    "cd",
    "desktop",
    "python",
    "main",
    "dot",
    "py",
    "talking",
    "going",
    "recognize",
    "saying",
    "let",
    "wait",
    "result",
    "see",
    "recognized",
    "talking",
    "going",
    "recognize",
    "saying",
    "let",
    "wait",
    "result",
    "even",
    "making",
    "mistake",
    "talking",
    "going",
    "recognize",
    "get",
    "pretty",
    "long",
    "sentence",
    "yeah",
    "see",
    "uh",
    "perfect",
    "know",
    "makes",
    "mistakes",
    "certainly",
    "making",
    "mistakes",
    "talking",
    "going",
    "see",
    "interesting",
    "results",
    "stop",
    "talking",
    "yeah",
    "go",
    "basically",
    "speech",
    "recognition",
    "script",
    "use",
    "course",
    "make",
    "voice",
    "assistant",
    "example",
    "video",
    "channel",
    "intelligent",
    "chatbot",
    "virtual",
    "assistant",
    "combine",
    "speech",
    "recognition",
    "make",
    "voice",
    "assistant",
    "maybe",
    "going",
    "make",
    "video",
    "future",
    "let",
    "know",
    "comment",
    "section",
    "want",
    "see",
    "project",
    "combine",
    "sorts",
    "things",
    "automate",
    "home",
    "access",
    "light",
    "bulbs",
    "example",
    "smart",
    "fridge",
    "smart",
    "toaster",
    "example",
    "say",
    "something",
    "script",
    "uh",
    "script",
    "recognizes",
    "okay",
    "guy",
    "wants",
    "start",
    "coffee",
    "machine",
    "example",
    "done",
    "script",
    "today",
    "video",
    "hope",
    "enjoyed",
    "hope",
    "learned",
    "something",
    "let",
    "know",
    "hitting",
    "like",
    "button",
    "leaving",
    "comment",
    "comment",
    "section",
    "course",
    "forget",
    "subscribe",
    "channel",
    "hit",
    "notification",
    "bell",
    "miss",
    "single",
    "future",
    "video",
    "free",
    "thank",
    "much",
    "watching",
    "see",
    "next",
    "video",
    "bye",
    "music"
  ],
  "keywords": [
    "going",
    "video",
    "use",
    "speech",
    "recognition",
    "python",
    "let",
    "get",
    "need",
    "install",
    "libraries",
    "one",
    "say",
    "like",
    "even",
    "know",
    "um",
    "pi",
    "audio",
    "uh",
    "sometimes",
    "mistakes",
    "dash",
    "googling",
    "google",
    "import",
    "recognizer",
    "equals",
    "dot",
    "make",
    "saying",
    "microphone",
    "something",
    "error",
    "source",
    "set",
    "start",
    "talking",
    "text",
    "recognize",
    "language",
    "see",
    "happens",
    "basically",
    "script",
    "desktop",
    "assistant",
    "example",
    "comment"
  ]
}