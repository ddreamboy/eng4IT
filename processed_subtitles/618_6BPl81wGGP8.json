{
  "text": "Hey! We are back with the \ndimensionality reduction series.  \nIn our last video of the series, we talked about \none way to escape the curse of dimensionality  \nthrough an older algorithm, called PCA.\nToday we will talk about a newer and very popular  \ndimensionality reduction algorithm called UMAP.\nPCA and UMAP are very different: PCA factorizes a  \nmatrix characterizing the data, which puts it into \ncompany with algorithms like NMF or SVD. But UMAP  \n(like t-SNE if you know it), builds a neighbor \ngraph in the original space of the data and tries  \nto find a similar graph in lower dimensions.\nBut how does it do it? \nUMAP stands for \"Uniform Manifold \nApproximation and Projection\". \nThis sounds intimidating. And the paper \nbehind it can be even more intimidating, but  \ndo not worry, because we break it down for you.\nThe two steps of UMAP are the high-dimensional  \ngraph construction and its mapping \nto a lower dimensional graph. \nThe construction of this high-dimensional \ngraph is what makes UMAP so special  \ncompared to its competitors, since \nit's hard to do it right and fast. \nAnd the cool part about UMAP is that its \nsteps are mathematically proven to work. \nSo first, there was the data in the high \ndimensions and we want to approximate its  \nshape, or topology. Each data point is \na so-called 0-simplex. And a certain  \ntheorem ensures that the shape of the data \ncan be approximated when we connect these  \n0-simplices (which are our data points), \nwith their neighboring data points forming 1- \nor 2- or higher-dimensional simplices.\nAnd with this, we can approximate the topology. \nSo all what we need to do \nis make these connections. \nFor this, the UMAP algorithm extends \na radius around each point and makes  \na connection between each point and \nits neighbors with intersecting radii. \nSo far the radii are equal.\nBut remember, we want to  \napproximate the shape of the data, so we want a \nconnected graph containing all our data points. \nBut this whish of ours brings in two problems: \nFirstly, it often happens that in the data  \nthere are larger gaps, where there is no \nnext point to connect to in the graph.  \nThis happens usually in low density regions.\nSecondly, there are often high density regions  \nwhere there are a lot of neighbors in the given \nradius and everything is way too connected. \nThis second problem gets even worse \nwith the curse of dimensionality,  \nwhere in high dimensional spaces the distances \nbetween points become more and more similar. \nOkay, so then, if we have these \ntwo problems with a fixed radius,  \nthen let’s use a variable radius instead! \nThis choice is also mathematically supported \nby the definition of a Riemannian metric on the  \nmanifold, but do not worry about that.\nJust keep in mind that there is math  \nproving that the choice of a variable \nradius does not cause any trouble. \nSo now the radius is greater in low density \nregions and smaller in high density regions. \nBut UMAP does not estimate density \ndirectly as a number but uses a proxy:  \nthe density is estimated to be higher \nwhen the kth nearest neighbor is close \nand lower when the kth \nnearest neighbor is far away. \nNotice, that this k in kth nearest neighbor \nis a hyperparameter that we need to choose,  \nbecause with its help, UMAP makes a density \nestimation to find the right local radius. \nIf k is big, then more global \nstructure is preserved, \nif k is small, then the radius decreases,\nand the local structure is more preserved. \nSo the right k could give the perfect balance \nbetween local and global structure preservation,  \nbut there are rarely any recipes for \nfinding the optimum automatically. \nSome trial and error is required, since \nk depends on each dataset individually. \nBut not all k neighbors are \nequal, since each have different  \ndistances from the point we are looking at.\nThen the connections between each point and their  \nneighbors get a weight, a connection probability, \nwhere points which are far away, are weighted  \nless and get lower connection probability.\nNow that this high-dimensional graph is  \nconstructed, it is ready to be projected to lower \ndimensions. This graph projection algorithm is too  \nmuch for Ms. Coffee Bean to explain in detail in \nthis video, but you can imagine this projection  \nas taking the high-dimensional graph, with their \nedges being springs, where each spring is stronger  \nas the edge probability increases.\nWhich means that points connected by  \nhigh weighted edges are more likely to stay \ntogether in the lower dimensional space,  \nbecause the spring holds these points together.\nAnd perhaps interesting to notice is that these  \nspring forces are rotationally symmetric\nwhich leads to clusters sometimes landing  \non one side after one UMAP run and on \nthe other side after another projection. \nSo UMAP has two main strengths over the other \nfamous graph-based dimensionality reduction  \ntechnique called t-SNE: It is faster due to its \noptimizations and strong mathematical foundations  \nand it also has a better balance between \nlocality and globality in clustering. \nTake for example this visualization from the \nawesome blog from Google PAIR linked below.  \nWe have this mammoth in 3D on the left \nand we can see side by side how UMAP and  \nt-SNE map this 3D mammoth into two dimensions.\nWe can play around with the number of neighbors  \ntaken into account when constructing the high \ndimensional graph and we can clearly see how  \nlow numbers focus on the local structure, while \nhigher numbers more on the global structure. \nThe minimum distance parameter allows to \nspecify how tightly the algorithm will map  \npoints into the target low dimensional space. A \nhigh minimum distance will spread the points more. \nBut it is important to notice that a \nstepwise change of these two parameters  \ncontinuously changes the UMAP result.\nT-SNE on the other side is not that  \ngreat in this aspect, because when changing the \nparameter of t-SNE, t-SNE's result completely  \nchanges. We really recommend you to play around \nyourself with all examples in this blog post. \nSo far we have seen examples \nwhere UMAP maps from 3D to 2D,  \nbut the visualizations you have seen so far, \nare toy examples. They are just for us to  \nget an intuition about the inner workings of \nthe UMAP dimensionality reduction algorithm. \nWhat UMAP excels at, is reducing from a lot \nof dimensions. Here is a real-world example of  \n784 dimensional MNIST data containing handwritten \ndigits. It would be nice if we could reduce their  \ndimensions to two or three so we can visualize \nthis pixel space the digits are living in. \nFor this, we can write a little Python \ncode to load the MNIST data, to load the  \nUMAP package for dimensionality reduction, \nand a visualization package of your liking. \nWe like babyplots and you will see why.\nWe read in the data and we see we have 60,000  \ntraining instances of 28 times 28 \npixels, which are together the 784  \ndimensions we plan to reduce from.\nFor reducing, we fit and apply the  \nUMAP algorithm. And we do it once for two \ndimensions, and again for three dimensions. \nWe reduced to 2d and 3d to show you \nwhat a cool thing babyplots can do:  \nIt takes both the 3d and 2d embedding and \ncan animate a transition between the two. \nHow cool is that? Hereby we can see that UMAP \ncould already cluster almost all handwritten  \ndigits together. Meaning that UMAP here worked \nas an unsupervised clustering algorithm.  \nAlso, we can see how useful a 3d visualization \ncan be over just 2d, where more complicated  \nstructures and relations can be visualized.\nIf you want to visualize these things in 3D  \nyourself in either R, Javascript or \nPython and load your interactive 3d  \nplots into a PowerPoint presentation to show \nto everybody, check out the babyplots website! \nThis was it from Ms. Coffee Bean. Read the paper \nif you are interested in the mathematical theory  \nand proofs behind UMAP. Find it linked in \nthe description below. Or watch the first  \nauthor (Leland McInnes) of the UMAP paper \npresenting his UMAP invention linked below. \nNow go and reduce your dimensions with UMAP!\nOk, bye!\n",
  "words": [
    "hey",
    "back",
    "dimensionality",
    "reduction",
    "series",
    "last",
    "video",
    "series",
    "talked",
    "one",
    "way",
    "escape",
    "curse",
    "dimensionality",
    "older",
    "algorithm",
    "called",
    "pca",
    "today",
    "talk",
    "newer",
    "popular",
    "dimensionality",
    "reduction",
    "algorithm",
    "called",
    "umap",
    "pca",
    "umap",
    "different",
    "pca",
    "factorizes",
    "matrix",
    "characterizing",
    "data",
    "puts",
    "company",
    "algorithms",
    "like",
    "nmf",
    "svd",
    "umap",
    "like",
    "know",
    "builds",
    "neighbor",
    "graph",
    "original",
    "space",
    "data",
    "tries",
    "find",
    "similar",
    "graph",
    "lower",
    "dimensions",
    "umap",
    "stands",
    "uniform",
    "manifold",
    "approximation",
    "projection",
    "sounds",
    "intimidating",
    "paper",
    "behind",
    "even",
    "intimidating",
    "worry",
    "break",
    "two",
    "steps",
    "umap",
    "graph",
    "construction",
    "mapping",
    "lower",
    "dimensional",
    "graph",
    "construction",
    "graph",
    "makes",
    "umap",
    "special",
    "compared",
    "competitors",
    "since",
    "hard",
    "right",
    "fast",
    "cool",
    "part",
    "umap",
    "steps",
    "mathematically",
    "proven",
    "work",
    "first",
    "data",
    "high",
    "dimensions",
    "want",
    "approximate",
    "shape",
    "topology",
    "data",
    "point",
    "certain",
    "theorem",
    "ensures",
    "shape",
    "data",
    "approximated",
    "connect",
    "data",
    "points",
    "neighboring",
    "data",
    "points",
    "forming",
    "simplices",
    "approximate",
    "topology",
    "need",
    "make",
    "connections",
    "umap",
    "algorithm",
    "extends",
    "radius",
    "around",
    "point",
    "makes",
    "connection",
    "point",
    "neighbors",
    "intersecting",
    "radii",
    "far",
    "radii",
    "equal",
    "remember",
    "want",
    "approximate",
    "shape",
    "data",
    "want",
    "connected",
    "graph",
    "containing",
    "data",
    "points",
    "whish",
    "brings",
    "two",
    "problems",
    "firstly",
    "often",
    "happens",
    "data",
    "larger",
    "gaps",
    "next",
    "point",
    "connect",
    "graph",
    "happens",
    "usually",
    "low",
    "density",
    "regions",
    "secondly",
    "often",
    "high",
    "density",
    "regions",
    "lot",
    "neighbors",
    "given",
    "radius",
    "everything",
    "way",
    "connected",
    "second",
    "problem",
    "gets",
    "even",
    "worse",
    "curse",
    "dimensionality",
    "high",
    "dimensional",
    "spaces",
    "distances",
    "points",
    "become",
    "similar",
    "okay",
    "two",
    "problems",
    "fixed",
    "radius",
    "let",
    "use",
    "variable",
    "radius",
    "instead",
    "choice",
    "also",
    "mathematically",
    "supported",
    "definition",
    "riemannian",
    "metric",
    "manifold",
    "worry",
    "keep",
    "mind",
    "math",
    "proving",
    "choice",
    "variable",
    "radius",
    "cause",
    "trouble",
    "radius",
    "greater",
    "low",
    "density",
    "regions",
    "smaller",
    "high",
    "density",
    "regions",
    "umap",
    "estimate",
    "density",
    "directly",
    "number",
    "uses",
    "proxy",
    "density",
    "estimated",
    "higher",
    "kth",
    "nearest",
    "neighbor",
    "close",
    "lower",
    "kth",
    "nearest",
    "neighbor",
    "far",
    "away",
    "notice",
    "k",
    "kth",
    "nearest",
    "neighbor",
    "hyperparameter",
    "need",
    "choose",
    "help",
    "umap",
    "makes",
    "density",
    "estimation",
    "find",
    "right",
    "local",
    "radius",
    "k",
    "big",
    "global",
    "structure",
    "preserved",
    "k",
    "small",
    "radius",
    "decreases",
    "local",
    "structure",
    "preserved",
    "right",
    "k",
    "could",
    "give",
    "perfect",
    "balance",
    "local",
    "global",
    "structure",
    "preservation",
    "rarely",
    "recipes",
    "finding",
    "optimum",
    "automatically",
    "trial",
    "error",
    "required",
    "since",
    "k",
    "depends",
    "dataset",
    "individually",
    "k",
    "neighbors",
    "equal",
    "since",
    "different",
    "distances",
    "point",
    "looking",
    "connections",
    "point",
    "neighbors",
    "get",
    "weight",
    "connection",
    "probability",
    "points",
    "far",
    "away",
    "weighted",
    "less",
    "get",
    "lower",
    "connection",
    "probability",
    "graph",
    "constructed",
    "ready",
    "projected",
    "lower",
    "dimensions",
    "graph",
    "projection",
    "algorithm",
    "much",
    "coffee",
    "bean",
    "explain",
    "detail",
    "video",
    "imagine",
    "projection",
    "taking",
    "graph",
    "edges",
    "springs",
    "spring",
    "stronger",
    "edge",
    "probability",
    "increases",
    "means",
    "points",
    "connected",
    "high",
    "weighted",
    "edges",
    "likely",
    "stay",
    "together",
    "lower",
    "dimensional",
    "space",
    "spring",
    "holds",
    "points",
    "together",
    "perhaps",
    "interesting",
    "notice",
    "spring",
    "forces",
    "rotationally",
    "symmetric",
    "leads",
    "clusters",
    "sometimes",
    "landing",
    "one",
    "side",
    "one",
    "umap",
    "run",
    "side",
    "another",
    "projection",
    "umap",
    "two",
    "main",
    "strengths",
    "famous",
    "dimensionality",
    "reduction",
    "technique",
    "called",
    "faster",
    "due",
    "optimizations",
    "strong",
    "mathematical",
    "foundations",
    "also",
    "better",
    "balance",
    "locality",
    "globality",
    "clustering",
    "take",
    "example",
    "visualization",
    "awesome",
    "blog",
    "google",
    "pair",
    "linked",
    "mammoth",
    "3d",
    "left",
    "see",
    "side",
    "side",
    "umap",
    "map",
    "3d",
    "mammoth",
    "two",
    "dimensions",
    "play",
    "around",
    "number",
    "neighbors",
    "taken",
    "account",
    "constructing",
    "high",
    "dimensional",
    "graph",
    "clearly",
    "see",
    "low",
    "numbers",
    "focus",
    "local",
    "structure",
    "higher",
    "numbers",
    "global",
    "structure",
    "minimum",
    "distance",
    "parameter",
    "allows",
    "specify",
    "tightly",
    "algorithm",
    "map",
    "points",
    "target",
    "low",
    "dimensional",
    "space",
    "high",
    "minimum",
    "distance",
    "spread",
    "points",
    "important",
    "notice",
    "stepwise",
    "change",
    "two",
    "parameters",
    "continuously",
    "changes",
    "umap",
    "result",
    "side",
    "great",
    "aspect",
    "changing",
    "parameter",
    "result",
    "completely",
    "changes",
    "really",
    "recommend",
    "play",
    "around",
    "examples",
    "blog",
    "post",
    "far",
    "seen",
    "examples",
    "umap",
    "maps",
    "3d",
    "2d",
    "visualizations",
    "seen",
    "far",
    "toy",
    "examples",
    "us",
    "get",
    "intuition",
    "inner",
    "workings",
    "umap",
    "dimensionality",
    "reduction",
    "algorithm",
    "umap",
    "excels",
    "reducing",
    "lot",
    "dimensions",
    "example",
    "784",
    "dimensional",
    "mnist",
    "data",
    "containing",
    "handwritten",
    "digits",
    "would",
    "nice",
    "could",
    "reduce",
    "dimensions",
    "two",
    "three",
    "visualize",
    "pixel",
    "space",
    "digits",
    "living",
    "write",
    "little",
    "python",
    "code",
    "load",
    "mnist",
    "data",
    "load",
    "umap",
    "package",
    "dimensionality",
    "reduction",
    "visualization",
    "package",
    "liking",
    "like",
    "babyplots",
    "see",
    "read",
    "data",
    "see",
    "training",
    "instances",
    "28",
    "times",
    "28",
    "pixels",
    "together",
    "784",
    "dimensions",
    "plan",
    "reduce",
    "reducing",
    "fit",
    "apply",
    "umap",
    "algorithm",
    "two",
    "dimensions",
    "three",
    "dimensions",
    "reduced",
    "2d",
    "3d",
    "show",
    "cool",
    "thing",
    "babyplots",
    "takes",
    "3d",
    "2d",
    "embedding",
    "animate",
    "transition",
    "two",
    "cool",
    "hereby",
    "see",
    "umap",
    "could",
    "already",
    "cluster",
    "almost",
    "handwritten",
    "digits",
    "together",
    "meaning",
    "umap",
    "worked",
    "unsupervised",
    "clustering",
    "algorithm",
    "also",
    "see",
    "useful",
    "3d",
    "visualization",
    "2d",
    "complicated",
    "structures",
    "relations",
    "visualized",
    "want",
    "visualize",
    "things",
    "3d",
    "either",
    "r",
    "javascript",
    "python",
    "load",
    "interactive",
    "3d",
    "plots",
    "powerpoint",
    "presentation",
    "show",
    "everybody",
    "check",
    "babyplots",
    "website",
    "coffee",
    "bean",
    "read",
    "paper",
    "interested",
    "mathematical",
    "theory",
    "proofs",
    "behind",
    "umap",
    "find",
    "linked",
    "description",
    "watch",
    "first",
    "author",
    "leland",
    "mcinnes",
    "umap",
    "paper",
    "presenting",
    "umap",
    "invention",
    "linked",
    "go",
    "reduce",
    "dimensions",
    "umap",
    "ok",
    "bye"
  ],
  "keywords": [
    "dimensionality",
    "reduction",
    "series",
    "video",
    "one",
    "way",
    "curse",
    "algorithm",
    "called",
    "pca",
    "umap",
    "different",
    "data",
    "like",
    "neighbor",
    "graph",
    "space",
    "find",
    "similar",
    "lower",
    "dimensions",
    "manifold",
    "projection",
    "intimidating",
    "paper",
    "behind",
    "even",
    "worry",
    "two",
    "steps",
    "construction",
    "dimensional",
    "makes",
    "since",
    "right",
    "cool",
    "mathematically",
    "first",
    "high",
    "want",
    "approximate",
    "shape",
    "topology",
    "point",
    "connect",
    "points",
    "need",
    "connections",
    "radius",
    "around",
    "connection",
    "neighbors",
    "radii",
    "far",
    "equal",
    "connected",
    "containing",
    "problems",
    "often",
    "happens",
    "low",
    "density",
    "regions",
    "lot",
    "distances",
    "variable",
    "choice",
    "also",
    "number",
    "higher",
    "kth",
    "nearest",
    "away",
    "notice",
    "k",
    "local",
    "global",
    "structure",
    "preserved",
    "could",
    "balance",
    "get",
    "probability",
    "weighted",
    "coffee",
    "bean",
    "edges",
    "spring",
    "together",
    "side",
    "mathematical",
    "clustering",
    "example",
    "visualization",
    "blog",
    "linked",
    "mammoth",
    "3d",
    "see",
    "map",
    "play",
    "numbers",
    "minimum",
    "distance",
    "parameter",
    "changes",
    "result",
    "examples",
    "seen",
    "2d",
    "reducing",
    "784",
    "mnist",
    "handwritten",
    "digits",
    "reduce",
    "three",
    "visualize",
    "python",
    "load",
    "package",
    "babyplots",
    "read",
    "28",
    "show"
  ]
}