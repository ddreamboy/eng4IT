{
  "text": "hi are you researching python frameworks\nto become a better developer\nand to get developer contracts well then\nthis video is for you because that's\nexactly what i'm going to give you\nso we're going to cover the types of\nframeworks the best current frameworks\nfor this year and their uses\nand the differences between frameworks\nand libraries\nwhich a lot of developers get wrong so\nwhy am i qualified to talk about this\nwell i've been in web development for 11\nyears and i'm currently working directly\nwith over 200 freelancers developers and\nagency owners\nso this video is for people who are\nserious about learning python and\ngetting\ncontracts so before we dive into the\ncontent do click on the subscribe button\nand the bell notification\nfor all notifications icon so that you\nget future updates\non more python tutorials so who uses\npython\nfull stack developers back-end\ndevelopers and front-end developers\nthere are three types of python\nframeworks\nfirst one is the full stack framework\nsuch frameworks are\none-stop solutions for all developer\nrequirements\nthey feature form generators form\nvalidation and\ntemplate layouts this is usually\navailable\nin a full stack framework the second\ntype of python framework\nis the micro framework these are light\nto late frameworks that don't offer\nadditional functionalities\nand features such as database\nabstraction layers\nform validation and specific tools and\nlibraries developers using a micro\nframework\nusually need to add a lot of code and\nadditional requirements\nmanually so the third type of python\nframework is the asynchronous framework\nany asynchronous framework is a micro\nframework that allows for handling\na large set of concurrent connections\nusually an\nasynchronous framework is built for\npython using\nthe programming languages async io\nlibrary so now let's get into the list\nof the most popular frameworks and their\nuses the first one is django from\ndjangoproject.com the free to use and\nopen source full stack python framework\nincludes a huge amount of in-built\nfeatures\nrather than offering them as individual\nlibraries django makes use of its\nobject relational mapper for mapping\nobjects\nto database stables this results in\nallowing the code to work across\ndifferent databases as well as\nmaking it easier to migrate from one\ndatabase to another so this allows the\ncode to work across different databases\nas well as making it easier to migrate\nfrom one database to another\ndjango features ready-to-use libraries\nand authentication support\nthe second most popular framework for\npython currently is\nflask from c\no o flask.poco.org org this is a micro\nframework available\nunder the bsd license flask allows\ndevelopers to build\na solid web application foundation from\nwhere it is possible to use\nany kind of extensions required this\nmicro framework is compatible with\ngoogle app engine and it has a built-in\nfast debugger and restful request\ndispatching it also features support for\nplugging in any orm\nso the third most popular python\nframework is tornado from\ntornadoweb.org the tornado is\nan open source python framework and an\nasynchronous networking\nlibrary it's a tool to build high\nperformance\nhigh concurrent user amount apps so the\nfourth most popular framework is aiohttp\nit relies heavily on python 3.5 and\nbeyond features\nsuch as async and awaits in addition to\nbeing a server\nweb framework ai oh ttp can also serve\nas a client framework it supports both\nclient websockets and server websockets\nwithout the callback hell\nthe fifth most popular python framework\nis\nfast api fast api is a high performance\nframework it basically is a web\nframework for building apis with python\n3.6 and beyond\nbased on standard python type hints\nit's very high performance and on par\nwith node.js and\ngoling the sixth most popular python\nframework is bottle this micro framework\ncreates a single source file for every\napplication developed using it this\nmicro framework for python was\noriginally developed\nfor building apis other than the python\nstandard library\nbottle has no dependencies required for\ncrafting\nsmall web applications one of the most\nimportant advantages\nof using bottle is that it allows\ndevelopers to work\ncloser to the hardware so the seven most\npopular python framework is pyramid so\nthis is a full stack framework\nfor python and the primary goal of this\nopen source python\nbased web development framework is to\nachieve as much\nas possible with minimalistic complexity\nit features flexible authentication and\nauthorization\nfunction decorators predicates and\nrenderers\nso what's the difference between a\nframework and a python library\nit's kind of what happened in the\nindustrial revolution we went from\nfamilies running their own little\nproduction facilities where they did\neverything from scratch\nin the big backyard essentially or in a\nshed to\ncreate basic necessities to having a\nbunch of factories\nchurning out cheaper better quality\nproducts at a thousand times the\nefficiency right\nthat's basically what happened when\ndevelopers started using\nframeworks and by efficiency i don't\njust mean how well the code works\ni also mean how fast it's created so a\nweb framework is a collection of\npackages or modules which allow\ndevelopers to write web applications or\nservices\nwithout having to handle such low level\ndetails as protocols\nsockets or process thread management\nthey promote\nrapid development and clean design they\nare developed by a group of experienced\nprogrammers\nwho aim to remove the hassles of\ndeveloping and allow teams to focus on\nwriting code\nwithout having to reinvent the wheel\nevery time that means writing fewer\nlines of code\na framework usually includes the\nstructure\nand foundation for building some\nframeworks contain basic code that use\nlibraries frameworks define how you\nsolve a problem\nand usually include tools to use their\nways to solve problems\npython libraries however are a set of\nuseful functions\nthat eliminate the need for writing code\nfrom scratch\nthere are over a hundred and thirty\nthousand python libraries present today\na library in python is a pre-built piece\nof code that can do\nall the things you are too lazy or\ninexperienced\nto do or if you're just pressed for time\nyou can also use them in the past people\nused to write all the code themselves\nthis is\nsuper inefficient if you want to get\nstuff done faster meaning\nif you want to get something done in a\nweek rather than two months\nyou should remove repetitive tasks this\nis what frameworks help with\nthe most libraries help you solve very\ndirect problems so now let's talk about\ngetting\ncontracts for yourself as a developer\nand as a python developer so what you\nwant to do essentially is\nuse the skills that you're building to\ngo on places like upwork which is a\nfreelancing\nplatform and get contracts on there it's\nvery beginner friendly\nregardless of what crazy angry youtubers\nare saying it's not that\nhard to approach upwork especially if\nyou use the guy that i've got about to\nlink you which is right here\nso click on the video right here there's\na whole playlist with how to use\nupwork and get contracts as a python\ndeveloper\nor a different type of developer so\nwatch the video list\nright here and it's also in the\ndescription if you can't\nclick on the video if you have any\ncomments or questions i usually respond\nto the best ones myself below this video\nhere in the comment section\n",
  "words": [
    "hi",
    "researching",
    "python",
    "frameworks",
    "become",
    "better",
    "developer",
    "get",
    "developer",
    "contracts",
    "well",
    "video",
    "exactly",
    "going",
    "give",
    "going",
    "cover",
    "types",
    "frameworks",
    "best",
    "current",
    "frameworks",
    "year",
    "uses",
    "differences",
    "frameworks",
    "libraries",
    "lot",
    "developers",
    "get",
    "wrong",
    "qualified",
    "talk",
    "well",
    "web",
    "development",
    "11",
    "years",
    "currently",
    "working",
    "directly",
    "200",
    "freelancers",
    "developers",
    "agency",
    "owners",
    "video",
    "people",
    "serious",
    "learning",
    "python",
    "getting",
    "contracts",
    "dive",
    "content",
    "click",
    "subscribe",
    "button",
    "bell",
    "notification",
    "notifications",
    "icon",
    "get",
    "future",
    "updates",
    "python",
    "tutorials",
    "uses",
    "python",
    "full",
    "stack",
    "developers",
    "developers",
    "developers",
    "three",
    "types",
    "python",
    "frameworks",
    "first",
    "one",
    "full",
    "stack",
    "framework",
    "frameworks",
    "solutions",
    "developer",
    "requirements",
    "feature",
    "form",
    "generators",
    "form",
    "validation",
    "template",
    "layouts",
    "usually",
    "available",
    "full",
    "stack",
    "framework",
    "second",
    "type",
    "python",
    "framework",
    "micro",
    "framework",
    "light",
    "late",
    "frameworks",
    "offer",
    "additional",
    "functionalities",
    "features",
    "database",
    "abstraction",
    "layers",
    "form",
    "validation",
    "specific",
    "tools",
    "libraries",
    "developers",
    "using",
    "micro",
    "framework",
    "usually",
    "need",
    "add",
    "lot",
    "code",
    "additional",
    "requirements",
    "manually",
    "third",
    "type",
    "python",
    "framework",
    "asynchronous",
    "framework",
    "asynchronous",
    "framework",
    "micro",
    "framework",
    "allows",
    "handling",
    "large",
    "set",
    "concurrent",
    "connections",
    "usually",
    "asynchronous",
    "framework",
    "built",
    "python",
    "using",
    "programming",
    "languages",
    "async",
    "io",
    "library",
    "let",
    "get",
    "list",
    "popular",
    "frameworks",
    "uses",
    "first",
    "one",
    "django",
    "free",
    "use",
    "open",
    "source",
    "full",
    "stack",
    "python",
    "framework",
    "includes",
    "huge",
    "amount",
    "features",
    "rather",
    "offering",
    "individual",
    "libraries",
    "django",
    "makes",
    "use",
    "object",
    "relational",
    "mapper",
    "mapping",
    "objects",
    "database",
    "stables",
    "results",
    "allowing",
    "code",
    "work",
    "across",
    "different",
    "databases",
    "well",
    "making",
    "easier",
    "migrate",
    "one",
    "database",
    "another",
    "allows",
    "code",
    "work",
    "across",
    "different",
    "databases",
    "well",
    "making",
    "easier",
    "migrate",
    "one",
    "database",
    "another",
    "django",
    "features",
    "libraries",
    "authentication",
    "support",
    "second",
    "popular",
    "framework",
    "python",
    "currently",
    "flask",
    "c",
    "org",
    "micro",
    "framework",
    "available",
    "bsd",
    "license",
    "flask",
    "allows",
    "developers",
    "build",
    "solid",
    "web",
    "application",
    "foundation",
    "possible",
    "use",
    "kind",
    "extensions",
    "required",
    "micro",
    "framework",
    "compatible",
    "google",
    "app",
    "engine",
    "fast",
    "debugger",
    "restful",
    "request",
    "dispatching",
    "also",
    "features",
    "support",
    "plugging",
    "orm",
    "third",
    "popular",
    "python",
    "framework",
    "tornado",
    "tornado",
    "open",
    "source",
    "python",
    "framework",
    "asynchronous",
    "networking",
    "library",
    "tool",
    "build",
    "high",
    "performance",
    "high",
    "concurrent",
    "user",
    "amount",
    "apps",
    "fourth",
    "popular",
    "framework",
    "aiohttp",
    "relies",
    "heavily",
    "python",
    "beyond",
    "features",
    "async",
    "awaits",
    "addition",
    "server",
    "web",
    "framework",
    "ai",
    "oh",
    "ttp",
    "also",
    "serve",
    "client",
    "framework",
    "supports",
    "client",
    "websockets",
    "server",
    "websockets",
    "without",
    "callback",
    "hell",
    "fifth",
    "popular",
    "python",
    "framework",
    "fast",
    "api",
    "fast",
    "api",
    "high",
    "performance",
    "framework",
    "basically",
    "web",
    "framework",
    "building",
    "apis",
    "python",
    "beyond",
    "based",
    "standard",
    "python",
    "type",
    "hints",
    "high",
    "performance",
    "par",
    "goling",
    "sixth",
    "popular",
    "python",
    "framework",
    "bottle",
    "micro",
    "framework",
    "creates",
    "single",
    "source",
    "file",
    "every",
    "application",
    "developed",
    "using",
    "micro",
    "framework",
    "python",
    "originally",
    "developed",
    "building",
    "apis",
    "python",
    "standard",
    "library",
    "bottle",
    "dependencies",
    "required",
    "crafting",
    "small",
    "web",
    "applications",
    "one",
    "important",
    "advantages",
    "using",
    "bottle",
    "allows",
    "developers",
    "work",
    "closer",
    "hardware",
    "seven",
    "popular",
    "python",
    "framework",
    "pyramid",
    "full",
    "stack",
    "framework",
    "python",
    "primary",
    "goal",
    "open",
    "source",
    "python",
    "based",
    "web",
    "development",
    "framework",
    "achieve",
    "much",
    "possible",
    "minimalistic",
    "complexity",
    "features",
    "flexible",
    "authentication",
    "authorization",
    "function",
    "decorators",
    "predicates",
    "renderers",
    "difference",
    "framework",
    "python",
    "library",
    "kind",
    "happened",
    "industrial",
    "revolution",
    "went",
    "families",
    "running",
    "little",
    "production",
    "facilities",
    "everything",
    "scratch",
    "big",
    "backyard",
    "essentially",
    "shed",
    "create",
    "basic",
    "necessities",
    "bunch",
    "factories",
    "churning",
    "cheaper",
    "better",
    "quality",
    "products",
    "thousand",
    "times",
    "efficiency",
    "right",
    "basically",
    "happened",
    "developers",
    "started",
    "using",
    "frameworks",
    "efficiency",
    "mean",
    "well",
    "code",
    "works",
    "also",
    "mean",
    "fast",
    "created",
    "web",
    "framework",
    "collection",
    "packages",
    "modules",
    "allow",
    "developers",
    "write",
    "web",
    "applications",
    "services",
    "without",
    "handle",
    "low",
    "level",
    "details",
    "protocols",
    "sockets",
    "process",
    "thread",
    "management",
    "promote",
    "rapid",
    "development",
    "clean",
    "design",
    "developed",
    "group",
    "experienced",
    "programmers",
    "aim",
    "remove",
    "hassles",
    "developing",
    "allow",
    "teams",
    "focus",
    "writing",
    "code",
    "without",
    "reinvent",
    "wheel",
    "every",
    "time",
    "means",
    "writing",
    "fewer",
    "lines",
    "code",
    "framework",
    "usually",
    "includes",
    "structure",
    "foundation",
    "building",
    "frameworks",
    "contain",
    "basic",
    "code",
    "use",
    "libraries",
    "frameworks",
    "define",
    "solve",
    "problem",
    "usually",
    "include",
    "tools",
    "use",
    "ways",
    "solve",
    "problems",
    "python",
    "libraries",
    "however",
    "set",
    "useful",
    "functions",
    "eliminate",
    "need",
    "writing",
    "code",
    "scratch",
    "hundred",
    "thirty",
    "thousand",
    "python",
    "libraries",
    "present",
    "today",
    "library",
    "python",
    "piece",
    "code",
    "things",
    "lazy",
    "inexperienced",
    "pressed",
    "time",
    "also",
    "use",
    "past",
    "people",
    "used",
    "write",
    "code",
    "super",
    "inefficient",
    "want",
    "get",
    "stuff",
    "done",
    "faster",
    "meaning",
    "want",
    "get",
    "something",
    "done",
    "week",
    "rather",
    "two",
    "months",
    "remove",
    "repetitive",
    "tasks",
    "frameworks",
    "help",
    "libraries",
    "help",
    "solve",
    "direct",
    "problems",
    "let",
    "talk",
    "getting",
    "contracts",
    "developer",
    "python",
    "developer",
    "want",
    "essentially",
    "use",
    "skills",
    "building",
    "go",
    "places",
    "like",
    "upwork",
    "freelancing",
    "platform",
    "get",
    "contracts",
    "beginner",
    "friendly",
    "regardless",
    "crazy",
    "angry",
    "youtubers",
    "saying",
    "hard",
    "approach",
    "upwork",
    "especially",
    "use",
    "guy",
    "got",
    "link",
    "right",
    "click",
    "video",
    "right",
    "whole",
    "playlist",
    "use",
    "upwork",
    "get",
    "contracts",
    "python",
    "developer",
    "different",
    "type",
    "developer",
    "watch",
    "video",
    "list",
    "right",
    "also",
    "description",
    "ca",
    "click",
    "video",
    "comments",
    "questions",
    "usually",
    "respond",
    "best",
    "ones",
    "video",
    "comment",
    "section"
  ],
  "keywords": [
    "python",
    "frameworks",
    "better",
    "developer",
    "get",
    "contracts",
    "well",
    "video",
    "going",
    "types",
    "best",
    "uses",
    "libraries",
    "lot",
    "developers",
    "talk",
    "web",
    "development",
    "currently",
    "people",
    "getting",
    "click",
    "full",
    "stack",
    "first",
    "one",
    "framework",
    "requirements",
    "form",
    "validation",
    "usually",
    "available",
    "second",
    "type",
    "micro",
    "additional",
    "features",
    "database",
    "tools",
    "using",
    "need",
    "code",
    "third",
    "asynchronous",
    "allows",
    "set",
    "concurrent",
    "async",
    "library",
    "let",
    "list",
    "popular",
    "django",
    "use",
    "open",
    "source",
    "includes",
    "amount",
    "rather",
    "work",
    "across",
    "different",
    "databases",
    "making",
    "easier",
    "migrate",
    "another",
    "authentication",
    "support",
    "flask",
    "build",
    "application",
    "foundation",
    "possible",
    "kind",
    "required",
    "fast",
    "also",
    "tornado",
    "high",
    "performance",
    "beyond",
    "server",
    "client",
    "websockets",
    "without",
    "api",
    "basically",
    "building",
    "apis",
    "based",
    "standard",
    "bottle",
    "every",
    "developed",
    "applications",
    "happened",
    "scratch",
    "essentially",
    "basic",
    "thousand",
    "efficiency",
    "right",
    "mean",
    "allow",
    "write",
    "remove",
    "writing",
    "time",
    "solve",
    "problems",
    "want",
    "done",
    "help",
    "upwork"
  ]
}