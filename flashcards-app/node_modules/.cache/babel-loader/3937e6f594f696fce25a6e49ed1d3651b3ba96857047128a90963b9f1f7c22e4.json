{"ast":null,"code":"var _jsxFileName = \"/home/kadi/PythonProjects/eng4IT/flashcards-app/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/Card.css\";\nimport words from \"../data/words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card({\n  word,\n  onCorrectAnswer,\n  onIncorrectAnswer,\n  isNew,\n  isShaking,\n  isSlideOut,\n  mode,\n  // Добавляем свойство mode\n  testAnswer,\n  // Функция для обработки ответа в тесте\n  testIndex,\n  // Индекс слова в тесте\n  compareAnswer // Функция для обработки ответа в сравнении\n}) {\n  _s();\n  const [flipped, setFlipped] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [hasBeenShaken, setHasBeenShaken] = useState(false);\n  useEffect(() => {\n    const correctTranslation = word.russian[0];\n    const incorrectOptions = getRandomIncorrectOptions(word.english, 3);\n    const allOptions = [...incorrectOptions, correctTranslation].sort(() => Math.random() - 0.5);\n    setOptions(allOptions);\n    setFlipped(false);\n    setHasBeenShaken(false);\n  }, [word]);\n  const handleFlip = () => {\n    setFlipped(!flipped);\n  };\n  const handleOptionClick = option => {\n    if (option === word.russian[0]) {\n      onCorrectAnswer();\n    } else {\n      onIncorrectAnswer();\n      setHasBeenShaken(true);\n    }\n  };\n  const getRandomIncorrectOptions = (currentWord, count) => {\n    const allWords = words.filter(w => w.english !== currentWord);\n    const shuffled = allWords.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count).map(w => w.russian[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${flipped ? \"flipped\" : \"\"} ${isNew && !hasBeenShaken ? \"zoom-in\" : \"\"} ${isShaking ? \"shake\" : \"\"} ${isSlideOut ? \"slide-out\" : \"\"}`,\n    onClick: handleFlip,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: word.english\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), mode === \"cards\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              handleOptionClick(option);\n            },\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), mode === \"test\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => testAnswer(testIndex, e.target.value),\n            children: word.russian.map((translation, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: translation,\n              children: translation\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), mode === \"compare\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => compareAnswer(word.english),\n            className: \"compare-button\",\n            children: word.english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: word.english\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: word.russian.join(\", \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"5YZsXrh17zbEGue7mZXWGwI4OHs=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","words","jsxDEV","_jsxDEV","Card","word","onCorrectAnswer","onIncorrectAnswer","isNew","isShaking","isSlideOut","mode","testAnswer","testIndex","compareAnswer","_s","flipped","setFlipped","options","setOptions","hasBeenShaken","setHasBeenShaken","correctTranslation","russian","incorrectOptions","getRandomIncorrectOptions","english","allOptions","sort","Math","random","handleFlip","handleOptionClick","option","currentWord","count","allWords","filter","w","shuffled","slice","map","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","index","e","stopPropagation","onChange","target","value","translation","i","join","_c","$RefreshReg$"],"sources":["/home/kadi/PythonProjects/eng4IT/flashcards-app/src/components/Card.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/Card.css\";\nimport words from \"../data/words\";\n\nfunction Card({\n  word,\n  onCorrectAnswer,\n  onIncorrectAnswer,\n  isNew,\n  isShaking,\n  isSlideOut,\n  mode, // Добавляем свойство mode\n  testAnswer, // Функция для обработки ответа в тесте\n  testIndex, // Индекс слова в тесте\n  compareAnswer, // Функция для обработки ответа в сравнении\n}) {\n  const [flipped, setFlipped] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [hasBeenShaken, setHasBeenShaken] = useState(false);\n\n  useEffect(() => {\n    const correctTranslation = word.russian[0];\n    const incorrectOptions = getRandomIncorrectOptions(word.english, 3);\n    const allOptions = [...incorrectOptions, correctTranslation].sort(\n      () => Math.random() - 0.5,\n    );\n    setOptions(allOptions);\n    setFlipped(false);\n    setHasBeenShaken(false);\n  }, [word]);\n\n  const handleFlip = () => {\n    setFlipped(!flipped);\n  };\n\n  const handleOptionClick = (option) => {\n    if (option === word.russian[0]) {\n      onCorrectAnswer();\n    } else {\n      onIncorrectAnswer();\n      setHasBeenShaken(true);\n    }\n  };\n\n  const getRandomIncorrectOptions = (currentWord, count) => {\n    const allWords = words.filter((w) => w.english !== currentWord);\n    const shuffled = allWords.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count).map((w) => w.russian[0]);\n  };\n\n  return (\n    <div\n      className={`card ${flipped ? \"flipped\" : \"\"} ${\n        isNew && !hasBeenShaken ? \"zoom-in\" : \"\"\n      } ${isShaking ? \"shake\" : \"\"} ${isSlideOut ? \"slide-out\" : \"\"}`}\n      onClick={handleFlip}\n    >\n      <div className=\"card-inner\">\n        <div className=\"card-front\">\n          <h2>{word.english}</h2>\n          {mode === \"cards\" && (\n            <div className=\"options\">\n              {options.map((option, index) => (\n                <button\n                  key={index}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handleOptionClick(option);\n                  }}\n                >\n                  {option}\n                </button>\n              ))}\n            </div>\n          )}\n          {mode === \"test\" && (\n            <div className=\"options\">\n              <select onChange={(e) => testAnswer(testIndex, e.target.value)}>\n                {word.russian.map((translation, i) => (\n                  <option key={i} value={translation}>\n                    {translation}\n                  </option>\n                ))}\n              </select>\n            </div>\n          )}\n          {mode === \"compare\" && (\n            <div className=\"options\">\n              <button\n                onClick={() => compareAnswer(word.english)}\n                className=\"compare-button\"\n              >\n                {word.english}\n              </button>\n            </div>\n          )}\n        </div>\n        <div className=\"card-back\">\n          <h2>{word.english}</h2>\n          <p>{word.russian.join(\", \")}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,IAAIA,CAAC;EACZC,IAAI;EACJC,eAAe;EACfC,iBAAiB;EACjBC,KAAK;EACLC,SAAS;EACTC,UAAU;EACVC,IAAI;EAAE;EACNC,UAAU;EAAE;EACZC,SAAS;EAAE;EACXC,aAAa,CAAE;AACjB,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACd,MAAMsB,kBAAkB,GAAGjB,IAAI,CAACkB,OAAO,CAAC,CAAC,CAAC;IAC1C,MAAMC,gBAAgB,GAAGC,yBAAyB,CAACpB,IAAI,CAACqB,OAAO,EAAE,CAAC,CAAC;IACnE,MAAMC,UAAU,GAAG,CAAC,GAAGH,gBAAgB,EAAEF,kBAAkB,CAAC,CAACM,IAAI,CAC/D,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GACxB,CAAC;IACDX,UAAU,CAACQ,UAAU,CAAC;IACtBV,UAAU,CAAC,KAAK,CAAC;IACjBI,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC,EAAE,CAAChB,IAAI,CAAC,CAAC;EAEV,MAAM0B,UAAU,GAAGA,CAAA,KAAM;IACvBd,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,MAAMgB,iBAAiB,GAAIC,MAAM,IAAK;IACpC,IAAIA,MAAM,KAAK5B,IAAI,CAACkB,OAAO,CAAC,CAAC,CAAC,EAAE;MAC9BjB,eAAe,CAAC,CAAC;IACnB,CAAC,MAAM;MACLC,iBAAiB,CAAC,CAAC;MACnBc,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC;EAED,MAAMI,yBAAyB,GAAGA,CAACS,WAAW,EAAEC,KAAK,KAAK;IACxD,MAAMC,QAAQ,GAAGnC,KAAK,CAACoC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACZ,OAAO,KAAKQ,WAAW,CAAC;IAC/D,MAAMK,QAAQ,GAAGH,QAAQ,CAACR,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;IACzD,OAAOS,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAEL,KAAK,CAAC,CAACM,GAAG,CAAEH,CAAC,IAAKA,CAAC,CAACf,OAAO,CAAC,CAAC,CAAC,CAAC;EAC1D,CAAC;EAED,oBACEpB,OAAA;IACEuC,SAAS,EAAE,QAAQ1B,OAAO,GAAG,SAAS,GAAG,EAAE,IACzCR,KAAK,IAAI,CAACY,aAAa,GAAG,SAAS,GAAG,EAAE,IACtCX,SAAS,GAAG,OAAO,GAAG,EAAE,IAAIC,UAAU,GAAG,WAAW,GAAG,EAAE,EAAG;IAChEiC,OAAO,EAAEZ,UAAW;IAAAa,QAAA,eAEpBzC,OAAA;MAAKuC,SAAS,EAAC,YAAY;MAAAE,QAAA,gBACzBzC,OAAA;QAAKuC,SAAS,EAAC,YAAY;QAAAE,QAAA,gBACzBzC,OAAA;UAAAyC,QAAA,EAAKvC,IAAI,CAACqB;QAAO;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACtBrC,IAAI,KAAK,OAAO,iBACfR,OAAA;UAAKuC,SAAS,EAAC,SAAS;UAAAE,QAAA,EACrB1B,OAAO,CAACuB,GAAG,CAAC,CAACR,MAAM,EAAEgB,KAAK,kBACzB9C,OAAA;YAEEwC,OAAO,EAAGO,CAAC,IAAK;cACdA,CAAC,CAACC,eAAe,CAAC,CAAC;cACnBnB,iBAAiB,CAACC,MAAM,CAAC;YAC3B,CAAE;YAAAW,QAAA,EAEDX;UAAM,GANFgB,KAAK;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOJ,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,EACArC,IAAI,KAAK,MAAM,iBACdR,OAAA;UAAKuC,SAAS,EAAC,SAAS;UAAAE,QAAA,eACtBzC,OAAA;YAAQiD,QAAQ,EAAGF,CAAC,IAAKtC,UAAU,CAACC,SAAS,EAAEqC,CAAC,CAACG,MAAM,CAACC,KAAK,CAAE;YAAAV,QAAA,EAC5DvC,IAAI,CAACkB,OAAO,CAACkB,GAAG,CAAC,CAACc,WAAW,EAAEC,CAAC,kBAC/BrD,OAAA;cAAgBmD,KAAK,EAAEC,WAAY;cAAAX,QAAA,EAChCW;YAAW,GADDC,CAAC;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEN,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,EACArC,IAAI,KAAK,SAAS,iBACjBR,OAAA;UAAKuC,SAAS,EAAC,SAAS;UAAAE,QAAA,eACtBzC,OAAA;YACEwC,OAAO,EAAEA,CAAA,KAAM7B,aAAa,CAACT,IAAI,CAACqB,OAAO,CAAE;YAC3CgB,SAAS,EAAC,gBAAgB;YAAAE,QAAA,EAEzBvC,IAAI,CAACqB;UAAO;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN7C,OAAA;QAAKuC,SAAS,EAAC,WAAW;QAAAE,QAAA,gBACxBzC,OAAA;UAAAyC,QAAA,EAAKvC,IAAI,CAACqB;QAAO;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvB7C,OAAA;UAAAyC,QAAA,EAAIvC,IAAI,CAACkB,OAAO,CAACkC,IAAI,CAAC,IAAI;QAAC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CApGQX,IAAI;AAAAsD,EAAA,GAAJtD,IAAI;AAsGb,eAAeA,IAAI;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}