{"ast":null,"code":"var _jsxFileName = \"/home/kadi/PythonProjects/eng4IT/flashcards-app/src/components/WordList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WordList({\n  words,\n  userWords,\n  learnedWords,\n  repeatWords,\n  setLearnedWords,\n  currentPage,\n  setCurrentPage,\n  wordsPerPage\n}) {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortMode, setSortMode] = useState(\"alphabet\");\n  const allWords = [...words, ...userWords];\n  const filteredWords = allWords.filter(word => word.english.toLowerCase().includes(searchTerm.toLowerCase()));\n  const sortedWords = filteredWords.sort((a, b) => {\n    if (sortMode === \"alphabet\") {\n      return a.english.localeCompare(b.english);\n    } else if (sortMode === \"difficulty\") {\n      const aErrors = repeatWords.includes(a.english) ? 1 : 0;\n      const bErrors = repeatWords.includes(b.english) ? 1 : 0;\n      return bErrors - aErrors;\n    } else if (sortMode === \"learned\") {\n      const aLearned = learnedWords.includes(a.english) ? 1 : 0;\n      const bLearned = learnedWords.includes(b.english) ? 1 : 0;\n      return bLearned - aLearned;\n    }\n    return 0;\n  });\n\n  // Пагинация\n  const indexOfLastWord = currentPage * wordsPerPage;\n  const indexOfFirstWord = indexOfLastWord - wordsPerPage;\n  const currentWords = sortedWords.slice(indexOfFirstWord, indexOfLastWord);\n  const totalPages = Math.ceil(sortedWords.length / wordsPerPage);\n  const toggleLearned = word => {\n    if (learnedWords.includes(word.english)) {\n      setLearnedWords(learnedWords.filter(w => w !== word.english));\n    } else {\n      setLearnedWords([...learnedWords, word.english]);\n    }\n  };\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortMode,\n        onChange: e => setSortMode(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"alphabet\",\n          children: \"\\u0410\\u043B\\u0444\\u0430\\u0432\\u0438\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"difficulty\",\n          children: \"\\u0421\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"learned\",\n          children: \"\\u0418\\u0437\\u0443\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"word-list\",\n      children: currentWords.map((word, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [word.english, \" - \", word.russian.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleLearned(word),\n          children: learnedWords.includes(word.english) ? \"Удалить из изученных\" : \"Добавить в изученные\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: currentPage === index + 1 ? \"active\" : \"\",\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(WordList, \"59tHuk24YTNhx57GJKrhXRVzqGY=\");\n_c = WordList;\nexport default WordList;\nvar _c;\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WordList","words","userWords","learnedWords","repeatWords","setLearnedWords","currentPage","setCurrentPage","wordsPerPage","_s","searchTerm","setSearchTerm","sortMode","setSortMode","allWords","filteredWords","filter","word","english","toLowerCase","includes","sortedWords","sort","a","b","localeCompare","aErrors","bErrors","aLearned","bLearned","indexOfLastWord","indexOfFirstWord","currentWords","slice","totalPages","Math","ceil","length","toggleLearned","w","handlePageChange","pageNumber","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","index","russian","join","onClick","Array","from","_","_c","$RefreshReg$"],"sources":["/home/kadi/PythonProjects/eng4IT/flashcards-app/src/components/WordList.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction WordList({\n  words,\n  userWords,\n  learnedWords,\n  repeatWords,\n  setLearnedWords,\n  currentPage,\n  setCurrentPage,\n  wordsPerPage,\n}) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortMode, setSortMode] = useState(\"alphabet\");\n\n  const allWords = [...words, ...userWords];\n\n  const filteredWords = allWords.filter((word) =>\n    word.english.toLowerCase().includes(searchTerm.toLowerCase()),\n  );\n\n  const sortedWords = filteredWords.sort((a, b) => {\n    if (sortMode === \"alphabet\") {\n      return a.english.localeCompare(b.english);\n    } else if (sortMode === \"difficulty\") {\n      const aErrors = repeatWords.includes(a.english) ? 1 : 0;\n      const bErrors = repeatWords.includes(b.english) ? 1 : 0;\n      return bErrors - aErrors;\n    } else if (sortMode === \"learned\") {\n      const aLearned = learnedWords.includes(a.english) ? 1 : 0;\n      const bLearned = learnedWords.includes(b.english) ? 1 : 0;\n      return bLearned - aLearned;\n    }\n    return 0;\n  });\n\n  // Пагинация\n  const indexOfLastWord = currentPage * wordsPerPage;\n  const indexOfFirstWord = indexOfLastWord - wordsPerPage;\n  const currentWords = sortedWords.slice(indexOfFirstWord, indexOfLastWord);\n\n  const totalPages = Math.ceil(sortedWords.length / wordsPerPage);\n\n  const toggleLearned = (word) => {\n    if (learnedWords.includes(word.english)) {\n      setLearnedWords(learnedWords.filter((w) => w !== word.english));\n    } else {\n      setLearnedWords([...learnedWords, word.english]);\n    }\n  };\n\n  const handlePageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div>\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Поиск...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <select value={sortMode} onChange={(e) => setSortMode(e.target.value)}>\n          <option value=\"alphabet\">Алфавит</option>\n          <option value=\"difficulty\">Сложность</option>\n          <option value=\"learned\">Изученные</option>\n        </select>\n      </div>\n      <ul className=\"word-list\">\n        {currentWords.map((word, index) => (\n          <li key={index}>\n            <span>\n              {word.english} - {word.russian.join(\", \")}\n            </span>\n            <button onClick={() => toggleLearned(word)}>\n              {learnedWords.includes(word.english)\n                ? \"Удалить из изученных\"\n                : \"Добавить в изученные\"}\n            </button>\n          </li>\n        ))}\n      </ul>\n      <div className=\"pagination\">\n        {Array.from({ length: totalPages }, (_, index) => (\n          <button\n            key={index}\n            onClick={() => handlePageChange(index + 1)}\n            className={currentPage === index + 1 ? \"active\" : \"\"}\n          >\n            {index + 1}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default WordList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}