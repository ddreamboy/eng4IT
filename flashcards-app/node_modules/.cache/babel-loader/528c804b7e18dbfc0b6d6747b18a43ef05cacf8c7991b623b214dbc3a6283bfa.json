{"ast":null,"code":"var _jsxFileName = \"/home/kadi/PythonProjects/eng4IT/flashcards-app/src/components/Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/Card.css\";\nimport words from \"../data/words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card({\n  word,\n  onCorrectAnswer,\n  onFlip\n}) {\n  _s();\n  const [flipped, setFlipped] = useState(false);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    const correctTranslation = word.russian[0];\n    const incorrectOptions = getRandomWords(word.english, 3);\n    const allOptions = [...incorrectOptions, correctTranslation].sort(() => Math.random() - 0.5);\n    setOptions(allOptions);\n  }, [word]);\n  const handleFlip = () => {\n    setFlipped(true);\n    onFlip();\n  };\n  const handleOptionClick = option => {\n    if (option === word.russian[0]) {\n      onCorrectAnswer();\n    } else {\n      handleFlip();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${flipped ? \"flipped\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: word.english\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleOptionClick(option),\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFlip,\n          children: \"\\u041F\\u0435\\u0440\\u0435\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: word.english\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: word.russian.join(\", \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"ACDHRvUFX/7hyEc8TTs1pYPPMSc=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","words","jsxDEV","_jsxDEV","Card","word","onCorrectAnswer","onFlip","_s","flipped","setFlipped","options","setOptions","correctTranslation","russian","incorrectOptions","getRandomWords","english","allOptions","sort","Math","random","handleFlip","handleOptionClick","option","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","join","_c","$RefreshReg$"],"sources":["/home/kadi/PythonProjects/eng4IT/flashcards-app/src/components/Card.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/Card.css\";\nimport words from \"../data/words\";\n\nfunction Card({ word, onCorrectAnswer, onFlip }) {\n  const [flipped, setFlipped] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    const correctTranslation = word.russian[0];\n    const incorrectOptions = getRandomWords(word.english, 3);\n    const allOptions = [...incorrectOptions, correctTranslation].sort(\n      () => Math.random() - 0.5,\n    );\n    setOptions(allOptions);\n  }, [word]);\n\n  const handleFlip = () => {\n    setFlipped(true);\n    onFlip();\n  };\n\n  const handleOptionClick = (option) => {\n    if (option === word.russian[0]) {\n      onCorrectAnswer();\n    } else {\n      handleFlip();\n    }\n  };\n\n  return (\n    <div className={`card ${flipped ? \"flipped\" : \"\"}`}>\n      <div className=\"card-inner\">\n        <div className=\"card-front\">\n          <h2>{word.english}</h2>\n          <div className=\"options\">\n            {options.map((option, index) => (\n              <button key={index} onClick={() => handleOptionClick(option)}>\n                {option}\n              </button>\n            ))}\n          </div>\n          <button onClick={handleFlip}>Перевернуть</button>\n        </div>\n        <div className=\"card-back\">\n          <h2>{word.english}</h2>\n          <p>{word.russian.join(\", \")}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}