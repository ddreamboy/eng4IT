{"ast":null,"code":"var _jsxFileName = \"/home/kadi/PythonProjects/eng4IT/flashcards-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Card from \"./components/Card\";\nimport ProgressBar from \"./components/ProgressBar\";\nimport AchievementModal from \"./components/AchievementModal\";\nimport WordList from \"./components/WordList\";\nimport Test from \"./components/Test\";\nimport Compare from \"./components/Compare\";\nimport CreateCard from \"./components/CreateCard\";\nimport Statistics from \"./components/Statistics\";\nimport Settings from \"./components/Settings\";\nimport Recommendations from \"./components/Recommendations\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport words from \"./data/words\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWord, setCurrentWord] = useState(null);\n  const [isNewCard, setIsNewCard] = useState(false);\n  const [isShaking, setIsShaking] = useState(false);\n  const [isSlideOut, setIsSlideOut] = useState(false);\n  const [showSkip, setShowSkip] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useLocalStorage(\"correctAnswers\", 0);\n  const [incorrectAnswers, setIncorrectAnswers] = useLocalStorage(\"incorrectAnswers\", 0);\n  const [learnedWords, setLearnedWords] = useLocalStorage(\"learnedWords\", []);\n  const [repeatWords, setRepeatWords] = useLocalStorage(\"repeatWords\", []);\n  const [includeLearnedWords, setIncludeLearnedWords] = useLocalStorage(\"includeLearnedWords\", true);\n  const [showAchievement, setShowAchievement] = useState(false);\n  const [achievementMessage, setAchievementMessage] = useState(\"\");\n  const [mode, setMode] = useState(\"cards\"); // Режим обучения\n  const [userWords, setUserWords] = useLocalStorage(\"userWords\", []); // Сохраненные пользовательские карточки\n  const [achievements, setAchievements] = useLocalStorage(\"achievements\", []); // Достижения\n  const [notificationsEnabled, setNotificationsEnabled] = useLocalStorage(\"notificationsEnabled\", true); // Оповещения\n  const [notificationFrequency, setNotificationFrequency] = useLocalStorage(\"notificationFrequency\", \"daily\"); // Частота оповещений\n  const [showCreateCard, setShowCreateCard] = useState(false); // Отображение формы создания карточки\n\n  // Новое состояние для пагинации\n  const [currentPage, setCurrentPage] = useState(1);\n  const wordsPerPage = 10;\n\n  // Новое состояние для отслеживания правильных ответов на каждое слово\n  const [wordCorrectCounts, setWordCorrectCounts] = useLocalStorage(\"wordCorrectCounts\", {});\n\n  // Функция для выбора нового слова\n  const selectNewWord = useCallback(() => {\n    setIsSlideOut(true);\n    setTimeout(() => {\n      setIsNewCard(false);\n      setShowSkip(false);\n      setIsSlideOut(false);\n      const availableWords = words.filter(word => !learnedWords.includes(word.english) || includeLearnedWords && Math.random() > 0.7);\n      const newWord = availableWords[Math.floor(Math.random() * availableWords.length)];\n      setCurrentWord(newWord);\n      setIsNewCard(true);\n    }, 500);\n  }, [learnedWords, includeLearnedWords]);\n  useEffect(() => {\n    selectNewWord();\n  }, [selectNewWord]);\n  useEffect(() => {\n    // Обновление словаря при изменении userWords\n    const updatedWords = [...words, ...userWords];\n    setCurrentWord(updatedWords[Math.floor(Math.random() * updatedWords.length)]);\n  }, [userWords]);\n  const handleCorrectAnswer = () => {\n    setCorrectAnswers(prev => prev + 1);\n    const updatedWordCorrectCounts = {\n      ...wordCorrectCounts\n    };\n    if (!updatedWordCorrectCounts[currentWord.english]) {\n      updatedWordCorrectCounts[currentWord.english] = 0;\n    }\n    updatedWordCorrectCounts[currentWord.english] += 1;\n    if (updatedWordCorrectCounts[currentWord.english] >= 3) {\n      setLearnedWords(prev => [...prev, currentWord.english]);\n      setRepeatWords(prev => prev.filter(word => word !== currentWord.english));\n    }\n    setWordCorrectCounts(updatedWordCorrectCounts);\n    checkAchievements();\n    selectNewWord();\n  };\n  const handleIncorrectAnswer = () => {\n    setIncorrectAnswers(prev => prev + 1);\n    const updatedWordCorrectCounts = {\n      ...wordCorrectCounts\n    };\n    if (!updatedWordCorrectCounts[currentWord.english]) {\n      updatedWordCorrectCounts[currentWord.english] = 0;\n    }\n    updatedWordCorrectCounts[currentWord.english] = Math.max(0, updatedWordCorrectCounts[currentWord.english] - 1);\n    if (!repeatWords.includes(currentWord.english)) {\n      setRepeatWords(prev => [...prev, currentWord.english]);\n    }\n    setWordCorrectCounts(updatedWordCorrectCounts);\n    setIsShaking(true);\n    setShowSkip(true);\n    setTimeout(() => setIsShaking(false), 500);\n  };\n  const handleSkip = () => {\n    selectNewWord();\n  };\n  const checkAchievements = () => {\n    if (correctAnswers + 1 === 10 && !achievements.includes(\"10_correct\")) {\n      setAchievements([...achievements, \"10_correct\"]);\n      setAchievementMessage(\"Поздравляем! Вы правильно ответили на 10 слов!\");\n      setShowAchievement(true);\n    }\n  };\n\n  // Функция для управления режимами обучения\n  const handleModeChange = newMode => {\n    setMode(newMode);\n    setShowCreateCard(newMode === \"create\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      correctAnswers: correctAnswers,\n      incorrectAnswers: incorrectAnswers,\n      learnedWords: learnedWords.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange(\"cards\"),\n        children: \"\\u041A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange(\"list\"),\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange(\"test\"),\n        children: \"\\u0422\\u0435\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange(\"compare\"),\n        children: \"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange(\"statistics\"),\n        children: \"\\u0421\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange(\"settings\"),\n        children: \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange(\"recommendations\"),\n        children: \"\\u0420\\u0435\\u043A\\u043E\\u043C\\u0435\\u043D\\u0434\\u0430\\u0446\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange(\"create\"),\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), mode === \"cards\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-stack\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), currentWord && /*#__PURE__*/_jsxDEV(Card, {\n        word: currentWord,\n        onCorrectAnswer: handleCorrectAnswer,\n        onIncorrectAnswer: handleIncorrectAnswer,\n        isNew: isNewCard,\n        isShaking: isShaking,\n        isSlideOut: isSlideOut,\n        mode: mode // Передаем mode в props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: includeLearnedWords,\n            onChange: () => setIncludeLearnedWords(!includeLearnedWords)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), \"\\u0412\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u0438\\u0437\\u0443\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0441\\u043B\\u043E\\u0432\\u0430\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), mode === \"list\" && /*#__PURE__*/_jsxDEV(WordList, {\n      words: words,\n      userWords: userWords,\n      learnedWords: learnedWords,\n      repeatWords: repeatWords,\n      setLearnedWords: setLearnedWords,\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage,\n      wordsPerPage: wordsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), mode === \"test\" && /*#__PURE__*/_jsxDEV(Test, {\n      words: words,\n      userWords: userWords,\n      learnedWords: learnedWords,\n      repeatWords: repeatWords,\n      setLearnedWords: setLearnedWords,\n      wordCorrectCounts: wordCorrectCounts,\n      setWordCorrectCounts: setWordCorrectCounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), mode === \"compare\" && /*#__PURE__*/_jsxDEV(Compare, {\n      words: words,\n      userWords: userWords,\n      learnedWords: learnedWords,\n      repeatWords: repeatWords,\n      setLearnedWords: setLearnedWords,\n      wordCorrectCounts: wordCorrectCounts,\n      setWordCorrectCounts: setWordCorrectCounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), showCreateCard && /*#__PURE__*/_jsxDEV(CreateCard, {\n      userWords: userWords,\n      setUserWords: setUserWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this), mode === \"statistics\" && /*#__PURE__*/_jsxDEV(Statistics, {\n      correctAnswers: correctAnswers,\n      incorrectAnswers: incorrectAnswers,\n      learnedWords: learnedWords,\n      repeatWords: repeatWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), mode === \"settings\" && /*#__PURE__*/_jsxDEV(Settings, {\n      notificationsEnabled: notificationsEnabled,\n      setNotificationsEnabled: setNotificationsEnabled,\n      notificationFrequency: notificationFrequency,\n      setNotificationFrequency: setNotificationFrequency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this), mode === \"recommendations\" && /*#__PURE__*/_jsxDEV(Recommendations, {\n      words: words,\n      userWords: userWords,\n      learnedWords: learnedWords,\n      repeatWords: repeatWords\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this), showSkip && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"skip-button\",\n      onClick: handleSkip,\n      children: \"\\u041F\\u0440\\u043E\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AchievementModal, {\n      show: showAchievement,\n      message: achievementMessage,\n      onClose: () => setShowAchievement(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HzNefDYpJvmQm1jQdrYhhCmdCzE=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Card","ProgressBar","AchievementModal","WordList","Test","Compare","CreateCard","Statistics","Settings","Recommendations","useLocalStorage","words","jsxDEV","_jsxDEV","App","_s","currentWord","setCurrentWord","isNewCard","setIsNewCard","isShaking","setIsShaking","isSlideOut","setIsSlideOut","showSkip","setShowSkip","correctAnswers","setCorrectAnswers","incorrectAnswers","setIncorrectAnswers","learnedWords","setLearnedWords","repeatWords","setRepeatWords","includeLearnedWords","setIncludeLearnedWords","showAchievement","setShowAchievement","achievementMessage","setAchievementMessage","mode","setMode","userWords","setUserWords","achievements","setAchievements","notificationsEnabled","setNotificationsEnabled","notificationFrequency","setNotificationFrequency","showCreateCard","setShowCreateCard","currentPage","setCurrentPage","wordsPerPage","wordCorrectCounts","setWordCorrectCounts","selectNewWord","setTimeout","availableWords","filter","word","includes","english","Math","random","newWord","floor","length","updatedWords","handleCorrectAnswer","prev","updatedWordCorrectCounts","checkAchievements","handleIncorrectAnswer","max","handleSkip","handleModeChange","newMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onCorrectAnswer","onIncorrectAnswer","isNew","type","checked","onChange","show","message","onClose","_c","$RefreshReg$"],"sources":["/home/kadi/PythonProjects/eng4IT/flashcards-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Card from \"./components/Card\";\nimport ProgressBar from \"./components/ProgressBar\";\nimport AchievementModal from \"./components/AchievementModal\";\nimport WordList from \"./components/WordList\";\nimport Test from \"./components/Test\";\nimport Compare from \"./components/Compare\";\nimport CreateCard from \"./components/CreateCard\";\nimport Statistics from \"./components/Statistics\";\nimport Settings from \"./components/Settings\";\nimport Recommendations from \"./components/Recommendations\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport words from \"./data/words\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  const [currentWord, setCurrentWord] = useState(null);\n  const [isNewCard, setIsNewCard] = useState(false);\n  const [isShaking, setIsShaking] = useState(false);\n  const [isSlideOut, setIsSlideOut] = useState(false);\n  const [showSkip, setShowSkip] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useLocalStorage(\n    \"correctAnswers\",\n    0,\n  );\n  const [incorrectAnswers, setIncorrectAnswers] = useLocalStorage(\n    \"incorrectAnswers\",\n    0,\n  );\n  const [learnedWords, setLearnedWords] = useLocalStorage(\"learnedWords\", []);\n  const [repeatWords, setRepeatWords] = useLocalStorage(\"repeatWords\", []);\n  const [includeLearnedWords, setIncludeLearnedWords] = useLocalStorage(\n    \"includeLearnedWords\",\n    true,\n  );\n  const [showAchievement, setShowAchievement] = useState(false);\n  const [achievementMessage, setAchievementMessage] = useState(\"\");\n  const [mode, setMode] = useState(\"cards\"); // Режим обучения\n  const [userWords, setUserWords] = useLocalStorage(\"userWords\", []); // Сохраненные пользовательские карточки\n  const [achievements, setAchievements] = useLocalStorage(\"achievements\", []); // Достижения\n  const [notificationsEnabled, setNotificationsEnabled] = useLocalStorage(\n    \"notificationsEnabled\",\n    true,\n  ); // Оповещения\n  const [notificationFrequency, setNotificationFrequency] = useLocalStorage(\n    \"notificationFrequency\",\n    \"daily\",\n  ); // Частота оповещений\n  const [showCreateCard, setShowCreateCard] = useState(false); // Отображение формы создания карточки\n\n  // Новое состояние для пагинации\n  const [currentPage, setCurrentPage] = useState(1);\n  const wordsPerPage = 10;\n\n  // Новое состояние для отслеживания правильных ответов на каждое слово\n  const [wordCorrectCounts, setWordCorrectCounts] = useLocalStorage(\n    \"wordCorrectCounts\",\n    {},\n  );\n\n  // Функция для выбора нового слова\n  const selectNewWord = useCallback(() => {\n    setIsSlideOut(true);\n    setTimeout(() => {\n      setIsNewCard(false);\n      setShowSkip(false);\n      setIsSlideOut(false);\n\n      const availableWords = words.filter(\n        (word) =>\n          !learnedWords.includes(word.english) ||\n          (includeLearnedWords && Math.random() > 0.7),\n      );\n\n      const newWord =\n        availableWords[Math.floor(Math.random() * availableWords.length)];\n      setCurrentWord(newWord);\n      setIsNewCard(true);\n    }, 500);\n  }, [learnedWords, includeLearnedWords]);\n\n  useEffect(() => {\n    selectNewWord();\n  }, [selectNewWord]);\n\n  useEffect(() => {\n    // Обновление словаря при изменении userWords\n    const updatedWords = [...words, ...userWords];\n    setCurrentWord(\n      updatedWords[Math.floor(Math.random() * updatedWords.length)],\n    );\n  }, [userWords]);\n\n  const handleCorrectAnswer = () => {\n    setCorrectAnswers((prev) => prev + 1);\n\n    const updatedWordCorrectCounts = { ...wordCorrectCounts };\n    if (!updatedWordCorrectCounts[currentWord.english]) {\n      updatedWordCorrectCounts[currentWord.english] = 0;\n    }\n    updatedWordCorrectCounts[currentWord.english] += 1;\n\n    if (updatedWordCorrectCounts[currentWord.english] >= 3) {\n      setLearnedWords((prev) => [...prev, currentWord.english]);\n      setRepeatWords((prev) =>\n        prev.filter((word) => word !== currentWord.english),\n      );\n    }\n\n    setWordCorrectCounts(updatedWordCorrectCounts);\n    checkAchievements();\n    selectNewWord();\n  };\n\n  const handleIncorrectAnswer = () => {\n    setIncorrectAnswers((prev) => prev + 1);\n\n    const updatedWordCorrectCounts = { ...wordCorrectCounts };\n    if (!updatedWordCorrectCounts[currentWord.english]) {\n      updatedWordCorrectCounts[currentWord.english] = 0;\n    }\n    updatedWordCorrectCounts[currentWord.english] = Math.max(\n      0,\n      updatedWordCorrectCounts[currentWord.english] - 1,\n    );\n\n    if (!repeatWords.includes(currentWord.english)) {\n      setRepeatWords((prev) => [...prev, currentWord.english]);\n    }\n\n    setWordCorrectCounts(updatedWordCorrectCounts);\n    setIsShaking(true);\n    setShowSkip(true);\n    setTimeout(() => setIsShaking(false), 500);\n  };\n\n  const handleSkip = () => {\n    selectNewWord();\n  };\n\n  const checkAchievements = () => {\n    if (correctAnswers + 1 === 10 && !achievements.includes(\"10_correct\")) {\n      setAchievements([...achievements, \"10_correct\"]);\n      setAchievementMessage(\"Поздравляем! Вы правильно ответили на 10 слов!\");\n      setShowAchievement(true);\n    }\n  };\n\n  // Функция для управления режимами обучения\n  const handleModeChange = (newMode) => {\n    setMode(newMode);\n    setShowCreateCard(newMode === \"create\");\n  };\n\n  return (\n    <div className=\"App\">\n      <ProgressBar\n        correctAnswers={correctAnswers}\n        incorrectAnswers={incorrectAnswers}\n        learnedWords={learnedWords.length}\n      />\n\n      <div className=\"mode-selector\">\n        <button onClick={() => handleModeChange(\"cards\")}>Карточки</button>\n        <button onClick={() => handleModeChange(\"list\")}>Список</button>\n        <button onClick={() => handleModeChange(\"test\")}>Тест</button>\n        <button onClick={() => handleModeChange(\"compare\")}>Сравнение</button>\n        <button onClick={() => handleModeChange(\"statistics\")}>\n          Статистика\n        </button>\n        <button onClick={() => handleModeChange(\"settings\")}>Настройки</button>\n        <button onClick={() => handleModeChange(\"recommendations\")}>\n          Рекомендации\n        </button>\n        <button onClick={() => handleModeChange(\"create\")}>\n          Создать карточку\n        </button>\n      </div>\n\n      {mode === \"cards\" && (\n        <div className=\"card-stack\">\n          <div className=\"card-placeholder\" />\n          <div className=\"card-placeholder\" />\n          <div className=\"card-placeholder\" />\n          {currentWord && (\n            <Card\n              word={currentWord}\n              onCorrectAnswer={handleCorrectAnswer}\n              onIncorrectAnswer={handleIncorrectAnswer}\n              isNew={isNewCard}\n              isShaking={isShaking}\n              isSlideOut={isSlideOut}\n              mode={mode} // Передаем mode в props\n            />\n          )}\n          <div className=\"settings\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={includeLearnedWords}\n                onChange={() => setIncludeLearnedWords(!includeLearnedWords)}\n              />\n              Включить изученные слова\n            </label>\n          </div>\n        </div>\n      )}\n\n      {mode === \"list\" && (\n        <WordList\n          words={words}\n          userWords={userWords}\n          learnedWords={learnedWords}\n          repeatWords={repeatWords}\n          setLearnedWords={setLearnedWords}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n          wordsPerPage={wordsPerPage}\n        />\n      )}\n\n      {mode === \"test\" && (\n        <Test\n          words={words}\n          userWords={userWords}\n          learnedWords={learnedWords}\n          repeatWords={repeatWords}\n          setLearnedWords={setLearnedWords}\n          wordCorrectCounts={wordCorrectCounts}\n          setWordCorrectCounts={setWordCorrectCounts}\n        />\n      )}\n\n      {mode === \"compare\" && (\n        <Compare\n          words={words}\n          userWords={userWords}\n          learnedWords={learnedWords}\n          repeatWords={repeatWords}\n          setLearnedWords={setLearnedWords}\n          wordCorrectCounts={wordCorrectCounts}\n          setWordCorrectCounts={setWordCorrectCounts}\n        />\n      )}\n\n      {showCreateCard && (\n        <CreateCard userWords={userWords} setUserWords={setUserWords} />\n      )}\n\n      {mode === \"statistics\" && (\n        <Statistics\n          correctAnswers={correctAnswers}\n          incorrectAnswers={incorrectAnswers}\n          learnedWords={learnedWords}\n          repeatWords={repeatWords}\n        />\n      )}\n\n      {mode === \"settings\" && (\n        <Settings\n          notificationsEnabled={notificationsEnabled}\n          setNotificationsEnabled={setNotificationsEnabled}\n          notificationFrequency={notificationFrequency}\n          setNotificationFrequency={setNotificationFrequency}\n        />\n      )}\n\n      {mode === \"recommendations\" && (\n        <Recommendations\n          words={words}\n          userWords={userWords}\n          learnedWords={learnedWords}\n          repeatWords={repeatWords}\n        />\n      )}\n\n      {showSkip && (\n        <button className=\"skip-button\" onClick={handleSkip}>\n          Пропустить\n        </button>\n      )}\n\n      <AchievementModal\n        show={showAchievement}\n        message={achievementMessage}\n        onClose={() => setShowAchievement(false)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}