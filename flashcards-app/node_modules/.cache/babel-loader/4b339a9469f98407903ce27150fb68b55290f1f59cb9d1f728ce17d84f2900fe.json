{"ast":null,"code":"var _jsxFileName = \"/home/kadi/PythonProjects/eng4IT/flashcards-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./components/Card\";\nimport ProgressBar from \"./components/ProgressBar\";\nimport AchievementModal from \"./components/AchievementModal\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport words from \"./data/words\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWord, setCurrentWord] = useState(null);\n  const [isNewCard, setIsNewCard] = useState(false);\n  const [isShaking, setIsShaking] = useState(false);\n  const [isSlideOut, setIsSlideOut] = useState(false);\n  const [showSkip, setShowSkip] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useLocalStorage(\"correctAnswers\", 0);\n  const [incorrectAnswers, setIncorrectAnswers] = useLocalStorage(\"incorrectAnswers\", 0);\n  const [learnedWords, setLearnedWords] = useLocalStorage(\"learnedWords\", []);\n  const [repeatWords, setRepeatWords] = useLocalStorage(\"repeatWords\", []);\n  const [includeLearnedWords, setIncludeLearnedWords] = useLocalStorage(\"includeLearnedWords\", true);\n  const [showAchievement, setShowAchievement] = useState(false);\n  const [achievementMessage, setAchievementMessage] = useState(\"\");\n  const [mode, setMode] = useState(\"cards\"); // Режим обучения\n  const [testResults, setTestResults] = useState([]); // Результаты теста\n  const [showTestResults, setShowTestResults] = useState(false); // Отображение результатов теста\n  const [testLevel, setTestLevel] = useState(\"easy\"); // Уровень сложности теста\n  const [compareWords, setCompareWords] = useState(null); // Слова для режима \"Сравнение\"\n  const [compareAnswer, setCompareAnswer] = useState(null); // Ответ пользователя в режиме \"Сравнение\"\n  const [compareCorrect, setCompareCorrect] = useState(null); // Правильный ответ в режиме \"Сравнение\"\n  const [newWord, setNewWord] = useState(\"\"); // Ввод нового слова\n  const [newTranslations, setNewTranslations] = useState(\"\"); // Ввод переводов\n  const [userWords, setUserWords] = useLocalStorage(\"userWords\", []); // Сохраненные пользовательские карточки\n  const [showCreateCard, setShowCreateCard] = useState(false); // Отображение формы создания карточки\n  const [showImportForm, setShowImportForm] = useState(false); // Отображение формы импорта\n  const [importedWords, setImportedWords] = useState([]); // Импортированные карточки\n\n  useEffect(() => {\n    selectNewWord();\n  }, []);\n  useEffect(() => {\n    // Обновление словаря при изменении userWords\n    const updatedWords = [...words, ...userWords];\n    setCurrentWord(updatedWords[Math.floor(Math.random() * updatedWords.length)]);\n  }, [userWords]);\n\n  // Функция для выбора нового слова\n  const selectNewWord = () => {\n    setIsSlideOut(true);\n    setTimeout(() => {\n      setIsNewCard(false);\n      setShowSkip(false);\n      setIsSlideOut(false);\n      const availableWords = words.filter(word => !learnedWords.includes(word.english) || includeLearnedWords && Math.random() > 0.7);\n      const newWord = availableWords[Math.floor(Math.random() * availableWords.length)];\n      setCurrentWord(newWord);\n      setIsNewCard(true);\n    }, 500);\n  };\n  const handleCorrectAnswer = () => {\n    setCorrectAnswers(prev => prev + 1);\n    if (repeatWords.includes(currentWord.english)) {\n      setLearnedWords(prev => [...prev, currentWord.english]);\n      setRepeatWords(prev => prev.filter(word => word !== currentWord.english));\n    }\n    checkAchievements();\n    selectNewWord();\n  };\n  const handleIncorrectAnswer = () => {\n    setIncorrectAnswers(prev => prev + 1);\n    if (!repeatWords.includes(currentWord.english)) {\n      setRepeatWords(prev => [...prev, currentWord.english]);\n    }\n    setIsShaking(true);\n    setShowSkip(true);\n    setTimeout(() => setIsShaking(false), 500);\n  };\n  const handleSkip = () => {\n    selectNewWord();\n  };\n  const checkAchievements = () => {\n    if (correctAnswers + 1 === 10) {\n      setAchievementMessage(\"Поздравляем! Вы правильно ответили на 10 слов!\");\n      setShowAchievement(true);\n    }\n  };\n\n  // Функция для управления режимами обучения\n  const handleModeChange = newMode => {\n    setMode(newMode);\n\n    // Очищаем результаты теста при переключении режима\n    if (newMode !== \"test\") {\n      setShowTestResults(false);\n      setTestResults([]);\n    }\n\n    // Очищаем слова для режима \"Сравнение\" при переключении режима\n    if (newMode !== \"compare\") {\n      setCompareWords(null);\n      setCompareAnswer(null);\n      setCompareCorrect(null);\n    }\n  };\n\n  // Функция для старта теста\n  const startTest = () => {\n    setShowTestResults(false);\n    setTestResults([]);\n    const wordsForTest = [...words, ...userWords].filter(word => !learnedWords.includes(word.english));\n    const testWords = wordsForTest.sort(() => 0.5 - Math.random()).slice(0, 10);\n    setTestResults(testWords.map(word => ({\n      word,\n      answer: null\n    })));\n  };\n\n  // Функция для обработки ответа в тесте\n  const handleTestAnswer = (index, answer) => {\n    const updatedResults = [...testResults];\n    updatedResults[index].answer = answer;\n    setTestResults(updatedResults);\n  };\n\n  // Функция для завершения теста\n  const finishTest = () => {\n    setShowTestResults(true);\n  };\n\n  // Функция для выбора слов для режима \"Сравнение\"\n  const selectCompareWords = () => {\n    const availableWords = [...words, ...userWords].filter(word => !learnedWords.includes(word.english));\n    const randomWords = availableWords.sort(() => 0.5 - Math.random()).slice(0, 2);\n    setCompareWords(randomWords);\n    setCompareAnswer(null);\n    setCompareCorrect(null);\n  };\n\n  // Функция для обработки ответа в режиме \"Сравнение\"\n  const handleCompareAnswer = answer => {\n    setCompareAnswer(answer);\n    const correctAnswer = compareWords[0].english === answer ? compareWords[0].russian[0] : compareWords[1].russian[0];\n    setCompareCorrect(correctAnswer);\n  };\n\n  // Функция для добавления новой карточки\n  const addNewWord = () => {\n    const newWordData = {\n      english: newWord,\n      russian: newTranslations.split(\",\")\n    };\n    setUserWords(prev => [...prev, newWordData]);\n    setNewWord(\"\");\n    setNewTranslations(\"\");\n    setShowCreateCard(false);\n  };\n\n  // Функция для импорта карточек\n  const importWords = () => {\n    const parsedWords = importedWords.map(line => {\n      const [english, ...translations] = line.split(\",\");\n      return {\n        english,\n        russian: translations\n      };\n    });\n    setUserWords(prev => [...prev, ...parsedWords]);\n    setImportedWords([]);\n    setShowImportForm(false);\n  };\n\n  // Функция для обработки изменений в форме импорта\n  const handleImportChange = e => {\n    setImportedWords(e.target.value.split(\"\\n\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      correctAnswers: correctAnswers,\n      incorrectAnswers: incorrectAnswers,\n      learnedWords: learnedWords.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange(\"cards\"),\n        children: \"\\u041A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange(\"list\"),\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange(\"test\"),\n        children: \"\\u0422\\u0435\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModeChange(\"compare\"),\n        children: \"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreateCard(true),\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), mode === \"cards\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-stack\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), currentWord && /*#__PURE__*/_jsxDEV(Card, {\n        word: currentWord,\n        onCorrectAnswer: handleCorrectAnswer,\n        onIncorrectAnswer: handleIncorrectAnswer,\n        isNew: isNewCard,\n        isShaking: isShaking,\n        isSlideOut: isSlideOut\n        // Передаем options в props\n        ,\n        options: currentWord.russian //  Создаем массив options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this), mode === \"list\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), mode === \"test\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test\",\n      children: [!showTestResults && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0422\\u0435\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"test-level\",\n            children: \"\\u0423\\u0440\\u043E\\u0432\\u0435\\u043D\\u044C \\u0441\\u043B\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u0438:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"test-level\",\n            value: testLevel,\n            onChange: e => setTestLevel(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"easy\",\n              children: \"\\u041B\\u0435\\u0433\\u043A\\u0438\\u0439\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"\\u0421\\u0440\\u0435\\u0434\\u043D\\u0438\\u0439\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hard\",\n              children: \"\\u0421\\u043B\\u043E\\u0436\\u043D\\u044B\\u0439\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startTest,\n          children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), showTestResults && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B \\u0442\\u0435\\u0441\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: testResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [result.word.english, \" -\", \" \", result.answer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [result.answer, \" (\", result.answer === result.word.russian[0] ? \"Правильно\" : \"Неправильно\", \")\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `test-answer-${index}`,\n                children: \"\\u041F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: `test-answer-${index}`,\n                onChange: e => handleTestAnswer(index, e.target.value),\n                children: result.word.russian.map((translation, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: translation,\n                  children: translation\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: finishTest,\n          children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), mode === \"compare\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"compare\",\n      children: compareWords ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0421\\u0440\\u0430\\u0432\\u043D\\u0435\\u043D\\u0438\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [compareWords[0].english, \": \", compareWords[0].russian.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [compareWords[1].english, \": \", compareWords[1].russian.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u041A\\u0430\\u043A\\u043E\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E \\u043E\\u0437\\u043D\\u0430\\u0447\\u0430\\u0435\\u0442: \", compareCorrect ? compareCorrect : \"…\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }, this), compareAnswer === null && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCompareAnswer(compareWords[0].english),\n            children: compareWords[0].english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCompareAnswer(compareWords[1].english),\n            children: compareWords[1].english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), compareAnswer !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: compareAnswer === compareCorrect ? \"Правильно!\" : \"Неправильно!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: selectCompareWords,\n        children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0441\\u0440\\u0430\\u0432\\u043D\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }, this), mode === \"create\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), showCreateCard && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-word\",\n          children: \"\\u0421\\u043B\\u043E\\u0432\\u043E:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-word\",\n          value: newWord,\n          onChange: e => setNewWord(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-translations\",\n          children: \"\\u041F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434\\u044B:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"new-translations\",\n          value: newTranslations,\n          onChange: e => setNewTranslations(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewWord,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), !showCreateCard && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateCard(true),\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowImportForm(true),\n          children: \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }, this), showImportForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"import-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442 \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u0435\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: importedWords.join(\"\\n\"),\n        onChange: handleImportChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: \\u0441\\u043B\\u043E\\u0432\\u043E, \\u043F\\u0435\\u0440\\u0435\\u0432\\u043E\\u04341, \\u043F\\u0435\\u0440\\u0435\\u0432\\u043E\\u04342,... (\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C - \\u0437\\u0430\\u043F\\u044F\\u0442\\u0430\\u044F)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: importWords,\n        children: \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowImportForm(false),\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }, this), showSkip && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"skip-button\",\n      onClick: handleSkip,\n      children: \"\\u041F\\u0440\\u043E\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: includeLearnedWords,\n          onChange: () => setIncludeLearnedWords(!includeLearnedWords)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), \"\\u0412\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u0438\\u0437\\u0443\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0441\\u043B\\u043E\\u0432\\u0430\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AchievementModal, {\n      show: showAchievement,\n      message: achievementMessage,\n      onClose: () => setShowAchievement(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/PJE7FOn6OsuhhTTcSGQX1SWcvI=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Card","ProgressBar","AchievementModal","useLocalStorage","words","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentWord","setCurrentWord","isNewCard","setIsNewCard","isShaking","setIsShaking","isSlideOut","setIsSlideOut","showSkip","setShowSkip","correctAnswers","setCorrectAnswers","incorrectAnswers","setIncorrectAnswers","learnedWords","setLearnedWords","repeatWords","setRepeatWords","includeLearnedWords","setIncludeLearnedWords","showAchievement","setShowAchievement","achievementMessage","setAchievementMessage","mode","setMode","testResults","setTestResults","showTestResults","setShowTestResults","testLevel","setTestLevel","compareWords","setCompareWords","compareAnswer","setCompareAnswer","compareCorrect","setCompareCorrect","newWord","setNewWord","newTranslations","setNewTranslations","userWords","setUserWords","showCreateCard","setShowCreateCard","showImportForm","setShowImportForm","importedWords","setImportedWords","selectNewWord","updatedWords","Math","floor","random","length","setTimeout","availableWords","filter","word","includes","english","handleCorrectAnswer","prev","checkAchievements","handleIncorrectAnswer","handleSkip","handleModeChange","newMode","startTest","wordsForTest","testWords","sort","slice","map","answer","handleTestAnswer","index","updatedResults","finishTest","selectCompareWords","randomWords","handleCompareAnswer","correctAnswer","russian","addNewWord","newWordData","split","importWords","parsedWords","line","translations","handleImportChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onCorrectAnswer","onIncorrectAnswer","isNew","options","htmlFor","id","onChange","result","translation","i","join","type","checked","show","message","onClose","_c","$RefreshReg$"],"sources":["/home/kadi/PythonProjects/eng4IT/flashcards-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Card from \"./components/Card\";\nimport ProgressBar from \"./components/ProgressBar\";\nimport AchievementModal from \"./components/AchievementModal\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport words from \"./data/words\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  const [currentWord, setCurrentWord] = useState(null);\n  const [isNewCard, setIsNewCard] = useState(false);\n  const [isShaking, setIsShaking] = useState(false);\n  const [isSlideOut, setIsSlideOut] = useState(false);\n  const [showSkip, setShowSkip] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useLocalStorage(\n    \"correctAnswers\",\n    0,\n  );\n  const [incorrectAnswers, setIncorrectAnswers] = useLocalStorage(\n    \"incorrectAnswers\",\n    0,\n  );\n  const [learnedWords, setLearnedWords] = useLocalStorage(\"learnedWords\", []);\n  const [repeatWords, setRepeatWords] = useLocalStorage(\"repeatWords\", []);\n  const [includeLearnedWords, setIncludeLearnedWords] = useLocalStorage(\n    \"includeLearnedWords\",\n    true,\n  );\n  const [showAchievement, setShowAchievement] = useState(false);\n  const [achievementMessage, setAchievementMessage] = useState(\"\");\n  const [mode, setMode] = useState(\"cards\"); // Режим обучения\n  const [testResults, setTestResults] = useState([]); // Результаты теста\n  const [showTestResults, setShowTestResults] = useState(false); // Отображение результатов теста\n  const [testLevel, setTestLevel] = useState(\"easy\"); // Уровень сложности теста\n  const [compareWords, setCompareWords] = useState(null); // Слова для режима \"Сравнение\"\n  const [compareAnswer, setCompareAnswer] = useState(null); // Ответ пользователя в режиме \"Сравнение\"\n  const [compareCorrect, setCompareCorrect] = useState(null); // Правильный ответ в режиме \"Сравнение\"\n  const [newWord, setNewWord] = useState(\"\"); // Ввод нового слова\n  const [newTranslations, setNewTranslations] = useState(\"\"); // Ввод переводов\n  const [userWords, setUserWords] = useLocalStorage(\"userWords\", []); // Сохраненные пользовательские карточки\n  const [showCreateCard, setShowCreateCard] = useState(false); // Отображение формы создания карточки\n  const [showImportForm, setShowImportForm] = useState(false); // Отображение формы импорта\n  const [importedWords, setImportedWords] = useState([]); // Импортированные карточки\n\n  useEffect(() => {\n    selectNewWord();\n  }, []);\n\n  useEffect(() => {\n    // Обновление словаря при изменении userWords\n    const updatedWords = [...words, ...userWords];\n    setCurrentWord(\n      updatedWords[Math.floor(Math.random() * updatedWords.length)],\n    );\n  }, [userWords]);\n\n  // Функция для выбора нового слова\n  const selectNewWord = () => {\n    setIsSlideOut(true);\n    setTimeout(() => {\n      setIsNewCard(false);\n      setShowSkip(false);\n      setIsSlideOut(false);\n\n      const availableWords = words.filter(\n        (word) =>\n          !learnedWords.includes(word.english) ||\n          (includeLearnedWords && Math.random() > 0.7),\n      );\n\n      const newWord =\n        availableWords[Math.floor(Math.random() * availableWords.length)];\n      setCurrentWord(newWord);\n      setIsNewCard(true);\n    }, 500);\n  };\n\n  const handleCorrectAnswer = () => {\n    setCorrectAnswers((prev) => prev + 1);\n\n    if (repeatWords.includes(currentWord.english)) {\n      setLearnedWords((prev) => [...prev, currentWord.english]);\n      setRepeatWords((prev) =>\n        prev.filter((word) => word !== currentWord.english),\n      );\n    }\n\n    checkAchievements();\n    selectNewWord();\n  };\n\n  const handleIncorrectAnswer = () => {\n    setIncorrectAnswers((prev) => prev + 1);\n\n    if (!repeatWords.includes(currentWord.english)) {\n      setRepeatWords((prev) => [...prev, currentWord.english]);\n    }\n\n    setIsShaking(true);\n    setShowSkip(true);\n    setTimeout(() => setIsShaking(false), 500);\n  };\n\n  const handleSkip = () => {\n    selectNewWord();\n  };\n\n  const checkAchievements = () => {\n    if (correctAnswers + 1 === 10) {\n      setAchievementMessage(\"Поздравляем! Вы правильно ответили на 10 слов!\");\n      setShowAchievement(true);\n    }\n  };\n\n  // Функция для управления режимами обучения\n  const handleModeChange = (newMode) => {\n    setMode(newMode);\n\n    // Очищаем результаты теста при переключении режима\n    if (newMode !== \"test\") {\n      setShowTestResults(false);\n      setTestResults([]);\n    }\n\n    // Очищаем слова для режима \"Сравнение\" при переключении режима\n    if (newMode !== \"compare\") {\n      setCompareWords(null);\n      setCompareAnswer(null);\n      setCompareCorrect(null);\n    }\n  };\n\n  // Функция для старта теста\n  const startTest = () => {\n    setShowTestResults(false);\n    setTestResults([]);\n\n    const wordsForTest = [...words, ...userWords].filter(\n      (word) => !learnedWords.includes(word.english),\n    );\n\n    const testWords = wordsForTest.sort(() => 0.5 - Math.random()).slice(0, 10);\n    setTestResults(testWords.map((word) => ({ word, answer: null })));\n  };\n\n  // Функция для обработки ответа в тесте\n  const handleTestAnswer = (index, answer) => {\n    const updatedResults = [...testResults];\n    updatedResults[index].answer = answer;\n    setTestResults(updatedResults);\n  };\n\n  // Функция для завершения теста\n  const finishTest = () => {\n    setShowTestResults(true);\n  };\n\n  // Функция для выбора слов для режима \"Сравнение\"\n  const selectCompareWords = () => {\n    const availableWords = [...words, ...userWords].filter(\n      (word) => !learnedWords.includes(word.english),\n    );\n    const randomWords = availableWords\n      .sort(() => 0.5 - Math.random())\n      .slice(0, 2);\n    setCompareWords(randomWords);\n    setCompareAnswer(null);\n    setCompareCorrect(null);\n  };\n\n  // Функция для обработки ответа в режиме \"Сравнение\"\n  const handleCompareAnswer = (answer) => {\n    setCompareAnswer(answer);\n    const correctAnswer =\n      compareWords[0].english === answer\n        ? compareWords[0].russian[0]\n        : compareWords[1].russian[0];\n    setCompareCorrect(correctAnswer);\n  };\n\n  // Функция для добавления новой карточки\n  const addNewWord = () => {\n    const newWordData = {\n      english: newWord,\n      russian: newTranslations.split(\",\"),\n    };\n    setUserWords((prev) => [...prev, newWordData]);\n    setNewWord(\"\");\n    setNewTranslations(\"\");\n    setShowCreateCard(false);\n  };\n\n  // Функция для импорта карточек\n  const importWords = () => {\n    const parsedWords = importedWords.map((line) => {\n      const [english, ...translations] = line.split(\",\");\n      return { english, russian: translations };\n    });\n    setUserWords((prev) => [...prev, ...parsedWords]);\n    setImportedWords([]);\n    setShowImportForm(false);\n  };\n\n  // Функция для обработки изменений в форме импорта\n  const handleImportChange = (e) => {\n    setImportedWords(e.target.value.split(\"\\n\"));\n  };\n\n  return (\n    <div className=\"App\">\n      <ProgressBar\n        correctAnswers={correctAnswers}\n        incorrectAnswers={incorrectAnswers}\n        learnedWords={learnedWords.length}\n      />\n\n      <div className=\"mode-selector\">\n        <button onClick={() => handleModeChange(\"cards\")}>Карточки</button>\n        <button onClick={() => handleModeChange(\"list\")}>Список</button>\n        <button onClick={() => handleModeChange(\"test\")}>Тест</button>\n        <button onClick={() => handleModeChange(\"compare\")}>Сравнение</button>\n        <button onClick={() => setShowCreateCard(true)}>\n          Создать карточку\n        </button>\n      </div>\n\n      {mode === \"cards\" && (\n        <div className=\"card-stack\">\n          <div className=\"card-placeholder\" />\n          <div className=\"card-placeholder\" />\n          <div className=\"card-placeholder\" />\n          {currentWord && (\n            <Card\n              word={currentWord}\n              onCorrectAnswer={handleCorrectAnswer}\n              onIncorrectAnswer={handleIncorrectAnswer}\n              isNew={isNewCard}\n              isShaking={isShaking}\n              isSlideOut={isSlideOut}\n              // Передаем options в props\n              options={\n                currentWord.russian //  Создаем массив options\n              }\n            />\n          )}\n        </div>\n      )}\n\n      {mode === \"list\" && (\n        <div className=\"word-list\">\n          {/* ... (код для отображения списка слов) */}\n        </div>\n      )}\n\n      {mode === \"test\" && (\n        <div className=\"test\">\n          {!showTestResults && (\n            <>\n              <h2>Тест</h2>\n              <div>\n                <label htmlFor=\"test-level\">Уровень сложности:</label>\n                <select\n                  id=\"test-level\"\n                  value={testLevel}\n                  onChange={(e) => setTestLevel(e.target.value)}\n                >\n                  <option value=\"easy\">Легкий</option>\n                  <option value=\"medium\">Средний</option>\n                  <option value=\"hard\">Сложный</option>\n                </select>\n              </div>\n              <button onClick={startTest}>Начать тест</button>\n            </>\n          )}\n\n          {showTestResults && (\n            <>\n              <h2>Результаты теста</h2>\n              <ul>\n                {testResults.map((result, index) => (\n                  <li key={index}>\n                    {result.word.english} -{\" \"}\n                    {result.answer ? (\n                      <>\n                        {result.answer} (\n                        {result.answer === result.word.russian[0]\n                          ? \"Правильно\"\n                          : \"Неправильно\"}\n                        )\n                      </>\n                    ) : (\n                      <div>\n                        <label htmlFor={`test-answer-${index}`}>Перевод:</label>\n                        <select\n                          id={`test-answer-${index}`}\n                          onChange={(e) =>\n                            handleTestAnswer(index, e.target.value)\n                          }\n                        >\n                          {result.word.russian.map((translation, i) => (\n                            <option key={i} value={translation}>\n                              {translation}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    )}\n                  </li>\n                ))}\n              </ul>\n              <button onClick={finishTest}>Завершить тест</button>\n            </>\n          )}\n        </div>\n      )}\n\n      {mode === \"compare\" && (\n        <div className=\"compare\">\n          {compareWords ? (\n            <>\n              <h2>Сравнение</h2>\n              <p>\n                {compareWords[0].english}: {compareWords[0].russian.join(\", \")}\n              </p>\n              <p>\n                {compareWords[1].english}: {compareWords[1].russian.join(\", \")}\n              </p>\n              <p>\n                Какое слово означает: {compareCorrect ? compareCorrect : \"…\"}\n              </p>\n              {compareAnswer === null && (\n                <>\n                  <button\n                    onClick={() => handleCompareAnswer(compareWords[0].english)}\n                  >\n                    {compareWords[0].english}\n                  </button>\n                  <button\n                    onClick={() => handleCompareAnswer(compareWords[1].english)}\n                  >\n                    {compareWords[1].english}\n                  </button>\n                </>\n              )}\n              {compareAnswer !== null && (\n                <p>\n                  {compareAnswer === compareCorrect\n                    ? \"Правильно!\"\n                    : \"Неправильно!\"}\n                </p>\n              )}\n            </>\n          ) : (\n            <button onClick={selectCompareWords}>Начать сравнение</button>\n          )}\n        </div>\n      )}\n\n      {mode === \"create\" && (\n        <div className=\"create-card\">\n          <h2>Создать карточку</h2>\n          {showCreateCard && (\n            <>\n              <label htmlFor=\"new-word\">Слово:</label>\n              <input\n                id=\"new-word\"\n                value={newWord}\n                onChange={(e) => setNewWord(e.target.value)}\n              />\n              <label htmlFor=\"new-translations\">Переводы:</label>\n              <textarea\n                id=\"new-translations\"\n                value={newTranslations}\n                onChange={(e) => setNewTranslations(e.target.value)}\n              />\n              <button onClick={addNewWord}>Добавить</button>\n            </>\n          )}\n          {!showCreateCard && (\n            <>\n              <button onClick={() => setShowCreateCard(true)}>\n                Создать карточку\n              </button>\n              <button onClick={() => setShowImportForm(true)}>\n                Импортировать карточки\n              </button>\n            </>\n          )}\n        </div>\n      )}\n\n      {showImportForm && (\n        <div className=\"import-form\">\n          <h2>Импорт карточек</h2>\n          <textarea\n            value={importedWords.join(\"\\n\")}\n            onChange={handleImportChange}\n          />\n          <p>Формат: слово, перевод1, перевод2,... (разделитель - запятая)</p>\n          <button onClick={importWords}>Импортировать</button>\n          <button onClick={() => setShowImportForm(false)}>Отмена</button>\n        </div>\n      )}\n\n      {showSkip && (\n        <button className=\"skip-button\" onClick={handleSkip}>\n          Пропустить\n        </button>\n      )}\n\n      <div className=\"settings\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={includeLearnedWords}\n            onChange={() => setIncludeLearnedWords(!includeLearnedWords)}\n          />\n          Включить изученные слова\n        </label>\n      </div>\n\n      <AchievementModal\n        show={showAchievement}\n        message={achievementMessage}\n        onClose={() => setShowAchievement(false)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}