{"ast":null,"code":"var _jsxFileName = \"/home/kadi/PythonProjects/eng4IT/flashcards-app/src/App.js\",\n  _s = $RefreshSig$();\n// eng4IT/flashcards-app/src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./components/Card\";\nimport ProgressBar from \"./components/ProgressBar\";\nimport AchievementModal from \"./components/AchievementModal\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport words from \"./data/words\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWord, setCurrentWord] = useState(null);\n  const [correctAnswers, setCorrectAnswers] = useLocalStorage(\"correctAnswers\", 0);\n  const [incorrectAnswers, setIncorrectAnswers] = useLocalStorage(\"incorrectAnswers\", 0);\n  const [learnedWords, setLearnedWords] = useLocalStorage(\"learnedWords\", []);\n  const [repeatWords, setRepeatWords] = useLocalStorage(\"repeatWords\", []);\n  const [includeLearnedWords, setIncludeLearnedWords] = useLocalStorage(\"includeLearnedWords\", true);\n  const [showAchievement, setShowAchievement] = useState(false);\n  const [achievementMessage, setAchievementMessage] = useState(\"\");\n  useEffect(() => {\n    selectNewWord();\n  }, []);\n  const selectNewWord = () => {\n    const availableWords = words.filter(word => !learnedWords.includes(word.english) || includeLearnedWords && Math.random() > 0.7);\n    const newWord = availableWords[Math.floor(Math.random() * availableWords.length)];\n    setCurrentWord(newWord);\n  };\n  const handleCorrectAnswer = () => {\n    setCorrectAnswers(prev => prev + 1);\n    if (repeatWords.includes(currentWord.english)) {\n      setLearnedWords(prev => [...prev, currentWord.english]);\n      setRepeatWords(prev => prev.filter(word => word !== currentWord.english));\n    }\n    checkAchievements();\n    selectNewWord();\n  };\n  const handleIncorrectAnswer = () => {\n    setIncorrectAnswers(prev => prev + 1);\n    if (!repeatWords.includes(currentWord.english)) {\n      setRepeatWords(prev => [...prev, currentWord.english]);\n    }\n  };\n  const checkAchievements = () => {\n    if (correctAnswers + 1 === 10) {\n      setAchievementMessage(\"Поздравляем! Вы правильно ответили на 10 слов!\");\n      setShowAchievement(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      correctAnswers: correctAnswers,\n      incorrectAnswers: incorrectAnswers,\n      learnedWords: learnedWords.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), currentWord && /*#__PURE__*/_jsxDEV(Card, {\n      word: currentWord,\n      onCorrectAnswer: handleCorrectAnswer,\n      onIncorrectAnswer: handleIncorrectAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: includeLearnedWords,\n          onChange: () => setIncludeLearnedWords(!includeLearnedWords)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), \"\\u0412\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u0438\\u0437\\u0443\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435 \\u0441\\u043B\\u043E\\u0432\\u0430\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AchievementModal, {\n      show: showAchievement,\n      message: achievementMessage,\n      onClose: () => setShowAchievement(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SQbS90sK1fLbxjc7ZsqPPTY81PY=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Card","ProgressBar","AchievementModal","useLocalStorage","words","jsxDEV","_jsxDEV","App","_s","currentWord","setCurrentWord","correctAnswers","setCorrectAnswers","incorrectAnswers","setIncorrectAnswers","learnedWords","setLearnedWords","repeatWords","setRepeatWords","includeLearnedWords","setIncludeLearnedWords","showAchievement","setShowAchievement","achievementMessage","setAchievementMessage","selectNewWord","availableWords","filter","word","includes","english","Math","random","newWord","floor","length","handleCorrectAnswer","prev","checkAchievements","handleIncorrectAnswer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCorrectAnswer","onIncorrectAnswer","type","checked","onChange","show","message","onClose","_c","$RefreshReg$"],"sources":["/home/kadi/PythonProjects/eng4IT/flashcards-app/src/App.js"],"sourcesContent":["// eng4IT/flashcards-app/src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./components/Card\";\nimport ProgressBar from \"./components/ProgressBar\";\nimport AchievementModal from \"./components/AchievementModal\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport words from \"./data/words\";\nimport \"./styles/App.css\";\n\nfunction App() {\n  const [currentWord, setCurrentWord] = useState(null);\n  const [correctAnswers, setCorrectAnswers] = useLocalStorage(\n    \"correctAnswers\",\n    0,\n  );\n  const [incorrectAnswers, setIncorrectAnswers] = useLocalStorage(\n    \"incorrectAnswers\",\n    0,\n  );\n  const [learnedWords, setLearnedWords] = useLocalStorage(\"learnedWords\", []);\n  const [repeatWords, setRepeatWords] = useLocalStorage(\"repeatWords\", []);\n  const [includeLearnedWords, setIncludeLearnedWords] = useLocalStorage(\n    \"includeLearnedWords\",\n    true,\n  );\n  const [showAchievement, setShowAchievement] = useState(false);\n  const [achievementMessage, setAchievementMessage] = useState(\"\");\n\n  useEffect(() => {\n    selectNewWord();\n  }, []);\n\n  const selectNewWord = () => {\n    const availableWords = words.filter(\n      (word) =>\n        !learnedWords.includes(word.english) ||\n        (includeLearnedWords && Math.random() > 0.7),\n    );\n    const newWord =\n      availableWords[Math.floor(Math.random() * availableWords.length)];\n    setCurrentWord(newWord);\n  };\n\n  const handleCorrectAnswer = () => {\n    setCorrectAnswers((prev) => prev + 1);\n    if (repeatWords.includes(currentWord.english)) {\n      setLearnedWords((prev) => [...prev, currentWord.english]);\n      setRepeatWords((prev) =>\n        prev.filter((word) => word !== currentWord.english),\n      );\n    }\n    checkAchievements();\n    selectNewWord();\n  };\n\n  const handleIncorrectAnswer = () => {\n    setIncorrectAnswers((prev) => prev + 1);\n    if (!repeatWords.includes(currentWord.english)) {\n      setRepeatWords((prev) => [...prev, currentWord.english]);\n    }\n  };\n\n  const checkAchievements = () => {\n    if (correctAnswers + 1 === 10) {\n      setAchievementMessage(\"Поздравляем! Вы правильно ответили на 10 слов!\");\n      setShowAchievement(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <ProgressBar\n        correctAnswers={correctAnswers}\n        incorrectAnswers={incorrectAnswers}\n        learnedWords={learnedWords.length}\n      />\n      {currentWord && (\n        <Card\n          word={currentWord}\n          onCorrectAnswer={handleCorrectAnswer}\n          onIncorrectAnswer={handleIncorrectAnswer}\n        />\n      )}\n      <div className=\"settings\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={includeLearnedWords}\n            onChange={() => setIncludeLearnedWords(!includeLearnedWords)}\n          />\n          Включить изученные слова\n        </label>\n      </div>\n      <AchievementModal\n        show={showAchievement}\n        message={achievementMessage}\n        onClose={() => setShowAchievement(false)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}