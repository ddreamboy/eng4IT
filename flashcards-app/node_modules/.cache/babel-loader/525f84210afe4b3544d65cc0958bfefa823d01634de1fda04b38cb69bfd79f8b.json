{"ast":null,"code":"var _jsxFileName = \"/home/kadi/PythonProjects/eng4IT/flashcards-app/src/components/Card.js\",\n  _s = $RefreshSig$();\n// eng4IT/flashcards-app/src/components/Card.js\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/Card.css\";\nimport words from \"../data/words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card({\n  word,\n  onCorrectAnswer,\n  onIncorrectAnswer\n}) {\n  _s();\n  const [flipped, setFlipped] = useState(false);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    const correctTranslation = word.russian[0];\n    const incorrectOptions = getRandomIncorrectOptions(word.english, 3);\n    const allOptions = [...incorrectOptions, correctTranslation].sort(() => Math.random() - 0.5);\n    setOptions(allOptions);\n    setFlipped(false);\n  }, [word]);\n  const handleFlip = () => {\n    setFlipped(!flipped);\n  };\n  const handleOptionClick = option => {\n    if (option === word.russian[0]) {\n      onCorrectAnswer();\n    } else {\n      onIncorrectAnswer();\n    }\n  };\n  const getRandomIncorrectOptions = (currentWord, count) => {\n    const allWords = words.filter(w => w.english !== currentWord);\n    const shuffled = allWords.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count).map(w => w.russian[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${flipped ? \"flipped\" : \"\"}`,\n    onClick: handleFlip,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: word.english\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              handleOptionClick(option);\n            },\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: word.english\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: word.russian.join(\", \")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Card, \"ACDHRvUFX/7hyEc8TTs1pYPPMSc=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","words","jsxDEV","_jsxDEV","Card","word","onCorrectAnswer","onIncorrectAnswer","_s","flipped","setFlipped","options","setOptions","correctTranslation","russian","incorrectOptions","getRandomIncorrectOptions","english","allOptions","sort","Math","random","handleFlip","handleOptionClick","option","currentWord","count","allWords","filter","w","shuffled","slice","map","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","index","e","stopPropagation","join","_c","$RefreshReg$"],"sources":["/home/kadi/PythonProjects/eng4IT/flashcards-app/src/components/Card.js"],"sourcesContent":["// eng4IT/flashcards-app/src/components/Card.js\nimport React, { useState, useEffect } from \"react\";\nimport \"../styles/Card.css\";\nimport words from \"../data/words\";\n\nfunction Card({ word, onCorrectAnswer, onIncorrectAnswer }) {\n  const [flipped, setFlipped] = useState(false);\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    const correctTranslation = word.russian[0];\n    const incorrectOptions = getRandomIncorrectOptions(word.english, 3);\n    const allOptions = [...incorrectOptions, correctTranslation].sort(\n      () => Math.random() - 0.5,\n    );\n    setOptions(allOptions);\n    setFlipped(false);\n  }, [word]);\n\n  const handleFlip = () => {\n    setFlipped(!flipped);\n  };\n\n  const handleOptionClick = (option) => {\n    if (option === word.russian[0]) {\n      onCorrectAnswer();\n    } else {\n      onIncorrectAnswer();\n    }\n  };\n\n  const getRandomIncorrectOptions = (currentWord, count) => {\n    const allWords = words.filter((w) => w.english !== currentWord);\n    const shuffled = allWords.sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count).map((w) => w.russian[0]);\n  };\n\n  return (\n    <div className={`card ${flipped ? \"flipped\" : \"\"}`} onClick={handleFlip}>\n      <div className=\"card-inner\">\n        <div className=\"card-front\">\n          <h2>{word.english}</h2>\n          <div className=\"options\">\n            {options.map((option, index) => (\n              <button\n                key={index}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleOptionClick(option);\n                }}\n              >\n                {option}\n              </button>\n            ))}\n          </div>\n        </div>\n        <div className=\"card-back\">\n          <h2>{word.english}</h2>\n          <p>{word.russian.join(\", \")}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}