learning objectives
by the end of this lesson you will be
able to
explain the iot architecture and
frameworks describe the iot
interoperability as design
considerations and discuss
industry-aligned use cases
iot device architecture
there are four layers in the device
architecture the base layer consists of
iot devices
this includes all the components
like sensors with the ability to sense
compute and connect other devices
let's move on to the second layer which
is the iot gateway or aggregation layer
this layer significantly aggregates data
from various sensors these two layers
form the definition engine and they set
the rules for data aggregation next
layer is based on cloud is called
processing engine or event processing
layer it has numerous algorithms and
data processing elements that are
ultimately displayed on a dashboard
this layer basically processes the data
obtained from the sensor layer the last
layer is called the application layer or
api management layer
it acts as an interface between
third-party application and
infrastructure the entire landscape is
supported by device managers and
identity and access managers
which are useful for security of the
architecture
iot reference architecture next let's
learn about the various layers in iot
reference architecture device layer
the device layer is the main component
where there are various devices like
sensors that are interconnected some
examples are bluetooth connected via
mobile phone and zigbee via zigbee
gateway the other devices include the
raspberry pi that's connected to the
ethernet via wi-fi this is directly
connected to the communication layers
which are part of the second layer
communication layer the communication
layer or gateway layer has
rest protocols
and other application level protocols
both layers are tightly coupled and
generate enormous amount of data
now the bus layer or aggregation layer
acts as a message broker it forms a
bridge between the data and the
communication layer for the sensors
this is an important layer for three
reasons it supports an http server and
or a mqtt broker
it aggregates and combines
communications via gateway and it
bridges and transforms data between
different protocols
the next layer is the event processing
and analytics layer which drives data
and provides transformation to the data
generated
it provides the ability to do event
processing the data is stored in the
database
the client layer is used to create a
web-based engine to interact with
external apis
this can be fed into the api management
systems this layer helps create a
dashboard and provides a view of the
analytics and event processing
this layer helps communicate with
systems outside the network using
machine and machine communication
so we've seen the comprehensive iot
reference architecture with various
components rule engines interfaces and
security systems embedded
cross-functional architecture is
possible using device manager that
provides a single platform for remote
management the device manager
communicates with devices through set
protocols device management uses device
management agents and is responsible for
the remote management of software
the identity layer has the capabilities
of cyber security including policy
control and oauth 2 token instruments
other capabilities include identity
services xacml pdp and directory of
users eg
ldap iot reference frameworks there are
a lot of frameworks for iot setup but
the most common is the iso
30141 and it provides commonly used
vocabulary reusable designs and best
practices for any developer to design an
application it also has many secure
application standards that derive the
maximum benefit for the organization and
reduce the risks
iot standardization and design
considerations
there are a number of iot standards
and these are evolving over time some of
the key ones are m2m that is a machine
to machine service layer that can be
embedded in hardware and software to
connect devices
contiki which is an open source
operating system for low-cost low-power
iot microcontrollers light os a
unix-like operating system for wireless
sensor networks
random phase multiple access
this is a proprietary standard for
connecting iot objects
the last one is sig fox a proprietary
low power low thorough put technology
for iot and m2m communications
iot interoperability challenges
iot maturity comes with several
challenges specifically pertaining to
interoperability and interfacing the
reasons are coexistence of multifarious
systems
devices sensors equipment etc that
interchange location time dependent
information in varied data formats
languages data models constructs data
quality and complex interrelationships
multivision
system designed by manufacturers over
time for varied application domains
making formulation of global agreements
and commonly accepted specifications
very difficult
new things that get introduced and that
support a new unanticipated structures
and protocols existence of low-power
devices which need to exchange data over
lossy networks and may have minimal
likelihood or accessibility for a power
recharge in months or years
iot design considerations when you
choose an iot solution you need to
consider several factors
like its wireless capability
functionality
interoperability
secure storage immediate boot capacity
device categorization bandwidth
cryptographic control
and power management the design
considerations should be a mix of the
estimated average of all these
components and index to balance the user
requirements you also need to set up a
dispute resolution mechanism in case of
failure in the long run
iot device architecture network and
cloud there are four stages of
integrating the different iot processes
stage 1 network things wireless sensors
and actuators
stage 2 sensor data aggregation systems
and analog to digital data conversion
stage 3 the appearance of edge i.t
systems stage four analysis management
and storage of data as these stages are
evolving the devices the network and the
cloud application must be leveled
equally in ecosystem for better
stability and security the iot
architecture is a combination of things
devices platform and sensors with data
stage 1 of an iot architecture consists
of networked things typically wireless
sensors and actuators stage 2 has
internet gateways and data acquisition
systems that includes sensor data
aggregation systems and analog to
digital conversion in stage 3 edge it
systems perform pre-processing of the
data before it moves to the data center
or cloud finally in stage 4 data center
and cloud is where the data is analyzed
managed and stored on traditional
backend data center systems
fundamentally we need to have a
functional scalable available and
maintainable architecture if these are
not supported then architecture is not
useful now let's look at the three
architecture areas of iot one the client
side iot device layer two operators on
the server side iot gateway layer
and three a pathway for connecting
clients and operators iot platform layer
these three layers interface with each
other on a data synchronization front
and pathway to generate more data from
various applications the feasibility of
the layers depends on their application
let's now differentiate between
centralized and decentralized iot
architectures the centralized
architecture is a hub and is managed
from one point whereas the decentralized
one is based on the use case
they do not help in industrial iot
solution the centralized architecture is
associated with cloud architectures in
which a central hub provides a series of
back-end services to smart devices
in decentralized architecture there are
many scenarios that require autonomous
communication between smart devices and
an iot topology without the need of
essential hub the centralized systems
help in event processing and whereas
decentralized systems operate more of
peer-to-peer messaging the decentralized
auditing is one of the essential
features that decentralized architecture
use case i have smart farming
use case smart farming iot design this
use case addresses the design
formalities using iot iot design is an
essential part of the navigational
ecosystem smart farming requires precise
architecture and components that help
bring benefits to the farmers the
various factors that determine the iot
design are data cost efficiency and
product quality the efficiency and
durability of the ecosystem help the
farmers plan their harvest and sow based
on the climatic conditions using the
sensors and geospatial location data so
be precise any farmer needs to
understand the fundamental design that
can help run the ecosystem
smart farming is useful as it helps the
farmer to predict conditions and sow
crops with less cost and utilize
automation capabilities to have such
systems you need to purchase the right
hardware which can monitor the accuracy
of data and quality of the sensor once
you have these systems you can benefit
more from farming there are four things
you need to integrate for smart farming
first is a data engine smart farming
should have a robust data processing
engine that can act as the brain and
handle data processing storage and lead
to efficient output
the second is hardware you need to
ensure that the hardware is durable and
easy to maintain hardware self-fixing
algorithms is even better the third
aspect is mobile access
this is possible using a smartphone
along with offline or online mobile
applications to enable all three
processes you need cloud infrastructure
with the edge layer this iot system can
enable smart farming for any crops in
any geographical location let us look at
another use case on using sim cards to
monitor sugar level in a diabetic
patient diabetes management is a
recurring concept where the patient has
to check the blood sugar at regular
intervals in the traditional way he has
to go to the physician lab or he has to
have his home blood glucose monitoring
system iot can help create a system with
the blood glucose data will be
transmitted remotely via smartphone and
a sim embedded in it
identifying the necessary and right
hardware is one of the crucial steps of
creating such a system you need to
choose the sensors for your device or
create a custom one which fits the
glucometer this can be a sim card the
next step is to ensure that the quality
of your sensors is good and has seamless
integration with the system finally make
sure that the data monitoring happens in
real time with high accuracy now when
the hardware landscape of this ecosystem
is ready you need to set the software
then first it is crucial that you have
software with software pair algorithm
for service management to enable this
process you need cloud infrastructure
with edge and finally a smartphone to
work with the devices and sensors
key takeaways now that you have
completed this lesson you should be able
to explain iot reference architectures
and frameworks describe the iot interop
ability and its design considerations
and finally discuss industry-aligned use
cases
hi there if you like this video
subscribe to the simply learn youtube
channel and click here to watch similar
videos to nerd up and get certified
click here
