hi guys my name is vardan and on behalf
of Ed Raa I welcome you all to this
webinar on dataware housing so I'll be
your instructor for today and in today's
session I'm going to talk about the data
warehousing Concepts okay the various
concept that are related to data
warehousing like olap schemas dimensions
and facts all these things right all the
important topics I'll be covering all
these things in today's session all
right guys so without wasting much time
let me just go to the agenda slide so
guys this is the agenda slide and uh
these are the topics that I'll be
covering in today's session okay and
this will be the order in which I'll be
covering them for those of you who are
new to data warehousing I will give you
a quick brief about data warehousing and
I'll talk about what data warehouse is
I'll talk about the data warehousing
architecture in detail and then I'll
immediately go to the different concepts
involved so the important Concepts that
are there are what olap is so olap
stands for online analytical processing
and I'll talk about olap in detail and
then I'll talk about the various olap
cubes that we will usually work on right
so any company or any working on a r
Warehouse the different olap cubes that
they work on so I'll talk about these
things and after that I'll talk about
Dimensions facts and measures so these
three uh topics are interrelated so I'll
talk about them in one segment and the
final segment of today's session is
going to be about schemas all right so
these will be the three or four
different topics that I'll be covering
in today's session so uh guys any doubts
here are you guys fine with the agenda
and uh and I hope everyone can hear my
voice and see my screen so guys if
that's the case please put to your
acknowledgements in the chat box and if
you have any doubts during the session
please put them also in the chat box and
I'll get back to you at the earliest all
right so can I get a quick yes from
everyone all right great so have a
couple of yeses from here all right
Anita is saying yes no is saying yes all
right great and abbar is saying yes all
right guys so let's get started then
first of all what is data warehousing
okay let's understand what are data
warehouses what data Ware housing does
and why it's SE it and what are the
added benefits right so what is a data
warehouse a data warehouse is like a
relational database designed for
analytical needs so you guys might all
be aware of what a databas is right so
you have your database where you'll be
storing large amounts of data right
you'll be storing either in your
database or even in the form of flat
files okay but flat files like Excel or
something cannot be used for storing
large amounts of data there's a limit on
how much you can store in an Excel right
so that is the case where you store data
and some of database so example of a few
databases are those of Oracle MySQL
Microsoft SQL Server all these things so
you have all these databases you'll
store large amounts of data okay but the
problem is they cannot be used for
analytical purposes so that is why we
have to convert or uh you know get the
data inside a database get that inside a
data warehouse and when it's inside the
data warehouse then we can perform
analysis now that's the advantage so the
data that once has come into the data
warehouse can can be used for analysis
for visualization all these things
because you can look at the data from a
different angle because the data that
comes into the data warehouse is more of
an information rather than just data
right so what you have here is just data
which you can probably View and you can
write data into these places and you can
just view it from a high level okay you
can view it from the level of every
transaction that happens so every time a
sale happens then the entire table there
or the entire database will get updated
okay all that will happen but then when
you want to perform analysis like what
happened on this day and how many
products were sold during this period of
time all these things cannot be gained
from a database right so that's why we
need to put them all insert data
warehouse and once it's here we can
perform these kind of analysis and uh
you know get insights from the data
warehouse and of course since you're a
data warehouse your all your end users
your business analysts your data analyst
they can all use it for analysis and
visualization right so that's the thing
about a data warehouse and that's the
use of a data warehouse and functions on
the basis of olap right so I told you
olap stands for online analytical
processing so the whole process of doing
analysis or running queries on a data
warehouse right it's done on the basis
of online analytical processing right so
that's one of the activities that is
done so if you're running any kind of
queries on the database then it will be
called as oltp online transaction
processing but any kind of activity or
quering and all these things when it
happens on data warehouse It's called
olap so that's what an no app is guys
and yeah basically it's a center
location where Consolidated data from
multiple locations are stored so you get
data in here from multiple uh locations
from multiple sources you can get it
from uh you know one or two databases
you can get it from one or two flat
files you can get all these data as long
as you know you are putting it inside
the same table or inside the same uh
columns and dimensions then you'll be
fine because you can get any amounts of
data from any source and you can get
them all and store them all inside your
data warehouse
so is that all about data warehouse is
Data Warehouse so simple can we just uh
simply get the data in from a database
and get it into a data warehouse and
then perform analysis is such a thing so
simple is that can be the question on
your mind okay does anyone here has that
kind of a doubt if you guys have that
doubt please raise your hands guys
there's an option on the right side of
your panel there's an option to raise
your hands so I mean you're supposed to
get that kind of a doubt and uh it's a
very valid question right because it
looks so simple from the outside but is
it that
simple Yes okay I see a couple of hands
raised from abbar and I see a hand
raised by Anita all right so yeah that's
the thing okay it's not that simple now
let's see what are the other activities
that are involved in this whole process
of converting data inside the database
converting it into an information and uh
storing that into Data Warehouse and
then performing analysis right so these
are the entire set of activities that
are involved okay now you can also
consider this to be the data warehouse
architecture now before I explain all
the activities and all the different
stages that are there in this data
warehousing architecture let me first of
all go to the definition okay so this
whole Act is called as data warehousing
all right and data warehousing is the
act of organizing and storing data in a
way so as to make its retrieval
efficient and insightful okay so this is
the uh key terms here to make its
retrieval efficient and insightful so
you organize the data and you store the
data in a data Warehouse in a way you
can access the data at a later point of
time and uh that kind of an access
should be easy you should be in an
efficient way you should be able to uh
retrieve that data and there should be a
meaning out of that data it should not
be the same data that you store inside
your database okay so inside a database
is the data that you collect so you
collect data and you store it inside a
database okay but the data that you get
from a data warehouse should not be the
same so it should serve some purpose it
should have a meaning and it should be
for your benefit so that's the whole
point of for data warehouse so that's
the difference between a data warehouse
and a database all right and uh a data
warehousing is also called as a process
of transforming data into information
okay so relevant data or more processed
data that is also called as information
so that's what is stored inside a data
warehouse and uh there's a lot of
difference between the data stored in a
data warehouse and the data that is
stored inside a database all right so
that is the thing now uh speaking about
the architecture and uh I mean let me
explain the diagram here first of all so
you have your data inside your different
data sources right uh it can be database
or a flat file and that data should
first of all be transferred into the
data warehouse but how was it done
there's an intermediate stage here
that's called the staging area Okay the
place where the data is stored that is
called the staging database okay now
this is a temporary storage it's not
going to be there for long it's very
temporary storage and the act of getting
the data from here to your staging area
is done through the process of ETL okay
so ETL here stands for extract transform
and load okay and once it comes into the
uh temporary storage again the process
of ETL is used to transfer the data
inside the data warehouse all right so
so once the data is inside your data
warehouse it's not just your data that's
going to be here okay it's going to be
categorized and it's going to be divided
so you can think of these three things
mainly so you'll have your raw data you
will have your meta data and you will
have your aggregate data okay so first
of all your raw data is the rows or
columns or the actual data that's being
transferred okay so this makes up the
junk of the data okay but meta data is
the most important aspect which Powers a
data warehouse and which differentiates
between a database and a data warehouse
why because metadata is something that's
going to give you data about your raw
data so whatever rowes that are there in
your data warehouse or whatever
information that is there inside your
data warehouse right so information
about that particular data will be
stored inside your metadata so we'll
have data about which are the different
tables that are there in your data
warehouse what each table does and what
kind of attributes are there inside each
table what kind of information what will
be the data type of the data present in
each of those attributes so all these
things will be controlled and governed
by metadata right so without your
metadata your data Val is basically
useless and metadata is the uh you know
so anyone who's working on a data
warehouse right they will tell you that
metadata is what differentiates
everything that's what makes their life
simpler and that's what is actually the
difference between a database and a data
warehouse right so this serves the whole
purpose and the whole difference between
the two so that and then you have
aggregate data right so all these three
things together they form the data
warehouse and then once your data is
inside your data warehouse your end
users can use this data to perform
analysis so how do they do it they run
queries okay so you have user groups
here and they perform queries okay now
the act of Performing queries on your
data warehouse is called online analy IC
processing okay that's the olap okay so
such queries are called olap queries
because they will be analysis based
right so such queries will be analysis
based so that's why it's called online
analytical processing and you have
something called as data march here okay
now don't get confused because data
March is again not something entirely
different it's again a part of data
warehouse only so the end users here
they can run their queries either
directly on the data warehouse or on
separate data Mars now you have
something separately called as data Mars
over here because maybe you want to give
extra sec Security in your Data
Warehouse Systems right so you can see
here there is user group one there is
user group two and there is user group
three okay and each of these people they
don't get access to everything and the
whole point of even having a data Mart
is uh simply to give restricted access
to your data warehouse so your
organizations or your company's entire
data right whatever is there that will
all be stored inside your data warehouse
okay but what if you don't want people
to get access to everything and if you
want to just give them restricted access
and give them access to only certain t
and certain records so at that point of
time you can use a data Mart so a data
Mart again you know uh it's just called
a small version of a data warehouse
where it will have data about a
particular domain so supposing the user
group one that we're talking about here
is something it's a sales team right
then you can have a sales data Mt and
the sales data M will only have the
sales data from the data warehouse right
and then uh supposing this is the
operations uh Team right and they want
access to the operations data only so
then you can form a separate data Mart
for the operation stream called the
purchase Mart or something and then
based on that they'll get access only to
the data that is present inside this Mt
okay so even even though the all these
things will be present inside the data
warehouse so you will get access only to
this particular table or this particular
domain or this particular field so
that's what the difference is so data
Mar is just basically dividing your old
data warehouse into smaller parts so
that different sets of users or groups
get access to only the relevant
information that they want okay so
that's what data warehousing is and
these are the various activities that
are involved in data warehousing okay so
this is the diagram of the data
warehouse architecture and I hope nobody
here has any doubt if you guys do have
any doubt please shoot them right away
and I'll ask them because next up is the
various data warehousing Concepts okay
now if you want to understand data
warehousing Concepts uh uh in detail
then you have to have complete
understanding of this I mean of course
it's simple so I don't expect you people
to have any doubts but yeah if you do
have any doubts please put them in the
chat box and I'll get back to you all
right so moving on the data warehousing
Concepts now let's understand the
various uh Concepts revolving around
data warehousing like olap Dimensions
facts and
schemas so first of all let me give you
a brief about olap again let's go into
details here as it says olap is a
flexible way for you to make complicated
analysis of multi-dimensional data okay
so when we say multi dimensional data
then whatever data stored in your data
warehouse it has multiple views right so
they will all be stored in such a way
that you can perform analysis they'll be
stored all the different tables will be
linked with each other right so there'll
be different views there'll be different
categories of data and all these things
you know to perform analysis then you
use the olap activities right so the
olap queries you run on that data and uh
whatever data stor in your data
warehouse that's called
multi-dimensional data and the Very Act
of uh you know storing it is uh in the
form of olap cubes right so you have old
TP on one side and you have olap on the
other side so as you can see this line
it says old TP systems use data stored
in the form of two dimensional tables
okay an example of this would be any
Excel so you will have your rows and you
will have your columns here okay you'll
have your rows and columns and you'll
have your data stored over here so this
is your olp systems and any queries you
can run on them and you can do all these
things okay but the difference with the
olap is the be stored in the form of
olap cubes right so there'll be multiple
Dimensions there'll be multiple uh views
that you can get of the same data with
respect to the year with respect to the
number of sales with respect to the
different products all these things you
can get a single view of all these
things so as you can see this diagram is
more of a 3D view right so that's what
olap here stands for so we call it olap
cubes and uh whatever data that is
stored inside your data warehouse and uh
whichever data you access with the help
of olap activities then that data is
called as multi-dimensional data so
that's what the whole line here is all
about right so your data basically is
converted into a multi-dimensional form
and uh that particular data to access
that data you use olap queries and yeah
it'll be stored in such olap cubes right
so these are the three different things
and uh the next point it says data a
housing is modeled on the concept of
olap yeah this is again this is what I
told you right so what our data is
stored in of data warehouse is uh
basically stored in a multi-dimensional
form and it's stored in the form of
cubes and uh to run your queries on your
cubes you run olap queries right so
that's why the entire process called
olap cubes and uh processing
multidimensional data on your olap cubes
right now that's what your data
warehouse is but with your database
database however are modeled on the
concept of olp right online transaction
processing so your databases are modeled
on the concept of olp and your Warehouse
is modeled on the concept of
oap all right so that's the key
difference between the two the PES on
which these two are modeled and your olp
systems use data stor in the form of two
dimensional tables with rows and columns
and your olap will have multiple views
right so your olap cubes and cuboids so
the olap is stored in that kind of a
structure but whereas your oltp here you
just have your xaxis or Y axis or your
two- dimensional data right so that's
the uh thing about olp and yeah that's
the difference between the two and uh
well the advantages of olap over oldp
are first of all that when you can see
data from multiple uh angles right from
different angles from different views
from different dimensions then you'll
get new ideas right so you'll get new
insights you can think of different
things and your whole job of making
analysis and getting insights will
become simpler it'll become easier with
the help of olap activities right
because it supports activities like
filtering and sorting of data so maybe
filtering and sorting of data may be
possible even inside o TP okay but
there's a limit on that so if when you
have data Sor in multiple tables then
you cannot do filtering and sorting of
data right now that is the advantage
with a data warehouse so even if you
have data stored in multiple tables you
might have four different tables or five
different tables and you'll have like
thousands and millions of rows and uh
you know transaction that will be stored
in those tables okay in spite of all
these things you can perform filtering
and sorting operations or any
mathematical operations like calculating
all these things okay you can do all
these things and get the output inside
one single new table so that is the
difference between olap and olp right
all such activities uh cannot be
supported on oltp and yeah so it finally
says that you know data can be refined
so when you can perform such kind of
analysis when uh you know your data
looks much simpler for you to read right
when you can gain some information out
of your raw data then we call it refin
data so that's the other advantage of
olap you know that's the other advantage
that olap has our olp so that's the
thing about online analytical processing
right so now uh I've spoken about these
things now let's go to the next slide so
first of all in olap itself there are
three different types of Cubes okay so
the first one is molap rolap and holap
okay so you know we also call it m oap
map or Moab so this stands for
multi-dimensional online analytical
processing rap stands for relational
online analytical processing and whole
app stands for hybrid online analytical
processing all right so guys the whole
topic here is olap cubes right so your
olap cubes is where your data will be
stored okay now the analysis that you'll
do the kind of queries that you'll run
they will all be olab queries and they
will all be on the multi-dimensional
data okay so the data that's going to be
stored inside your cubes is going to be
multi-dimensional data okay but your
multi-dimensional data where are they
going to get stored okay so that is the
whole topic here so there are three
different types of places where you can
store your multi-dimensional data okay
so there are three different types of
olap cubes so the first type is
multi-dimensional olap Cube okay when we
say multidimensional olap Cube then this
is the default type of olap Cube so here
molap is a form of olap that processes
and sores data directly into a
multi-dimensional database so you have a
multi-dimensional cube and then your
data will be stored inside that
particular database now the advantage
here is that it will give you excellent
performance and it can perform complex
calculations okay but the problem is
only limited amount of data can be
handled in your molap okay but then
there's a difference between molap and
olap okay now that's where rap scores
over molap so rap stands for relational
online analytical processing now rap is
a form of olap that performs Dynamic
multi-dimensional analysis of data
stored in a relational database rather
than in a multi dimensional database now
what this means is that in your moap you
have your multi-dimensional data you'll
be storing it inside a multi-dimensional
database right so this will be your olap
cubes okay so what that means is you
have your data that'll be stored inside
a multi-dimensional database okay thus
making it a multi-dimensional data and
uh that is one type of olap that is uh
multi-dimensional olap but relational
olap is getting that multi-dimensional
data converting it into a relational
data and then storing it inside a
relational database right so that's what
it says here it's a process of storing
data in a relational database so in your
R app you will have your
multi-dimensional data stored inside
your relational database and then you
will be running multi-dimensional
analysis and multi-dimensional queries
on a relational database so that is the
difference right so your queries that
you'll be running your data is basically
going to be multi-dimensional all right
even your queries that you'll be running
will be the same it will be olap queries
okay but the difference is the place
where it's stored the data in case of a
rap is stored in a relational database
okay but whereas in case of a
multi-dimensional olap it is stored
inside a multi-dimensional database
itself now that is the difference
between the two and speaking of the
advantage and why rap can be used
instead of molap is because a greater
amount of data can be processed in this
case all right but in case of map only
limited amount of data can be handled at
any point of time but however the
problem is it requires more processing
time and a lot of disk space now it
needs more processing time because you
are going to convert your
multi-dimensional data into a relational
data and once you've converted that you
have to then store it inside a
relational database now this is
certainly more time consuming than your
uh multi-dimensional olap right so that
is one disadvantage with your relational
olap and also your amount of dis space
that will be occupied because of all
these processes is going to be greater
now that's the disadvantage but of
course that comes with the benefit right
so you're getting something out of using
this so that's the difference between
multi-dimensional olap and relational
olap and then these are the two basic
differences and then you have a third
one that's called as a hybrid olap right
so your hybrid olap is basically
combination of both your molap and your
rap so the positives and your advantages
of four is used in your hybrid olap so
the advantage with whole app is that
whole app can drill through from the
cube into the underlying relational data
right so what it means is you will have
your Cube here and you have the
underlying relational data right so
using whole app you can drill through
into the relational data using your Cube
so that's the thing about whole app
which makes use of the best features of
both your multi-dimensional olap and
your relational olap right so these are
the three different types of olap cubes
so this is again one important question
that you'll be asked in any job
interviews right so if you guys are you
know appearing for any job interviews
then you have to know the difference
between these three cubes because you
your work will primarily be revolving
around these three aspects so so guys uh
in the audience do we have anyone that
uh is going to appear for an interview
very soon Akbar n Anita any any of you
okay Akbar says he's going to attend one
very soon all right so you're you're
still learning abar okay great so he's
still learning data housing and probably
when he's done he might go for it an
interview and the thing that you need to
remember rbar is uh the difference
between these three because this is a
short short question in any of your
interviews right so any job interview
regarding data warehousing and all these
things you will be asked and you should
know all these things right so that's
the uh differences and the types of olap
cubes so moving on to the next slide so
the next topic that we have for today is
that of olap operations all right so we
have five different operations and they
are roll up drill down slice Dice and
pivot okay so these are the five
different olap operations that we can do
on our olap multi-dimensional data right
so going to our first operation that is
rollup now before I uh explain this let
me tell you why I'm explaining
operations first of all so I'm
explaining olap operations so that you
can understand what are the kind of
operations that you can do on your data
warehousing and things that you cannot
do on your database right so so with the
help of olap and since data is stored in
such a multi-dimensional fashion these
kind of operations can be performed
right so first of all let's get started
with our rollup operation so uh let's uh
read the definition first so rollup is
something that forms aggregation or data
Cube by either climbing up a concept
hierarchy for a dimension or for
Dimension reduction okay so when we say
climbing up a concept hierarchy for a
dimension it basically means you'll have
a particular Dimension here right so in
uh this case we have the dimension of
cities so we have four different cities
we have Chicago New York Toronto and
Vancouver okay now supposing you want to
go to the next hierarchy in this
Dimension okay you want to add a couple
of attributes here and more to the next
dimension of countries then you can do
that so if you look at this example here
we have converted this Dimension which
is in the form of cities to countries so
USA is a country which has Chicago and
New York As Cities and Canada is a
country which has Toronto and Vancouver
As Cities so we have converted this
Dimension into the city dimension of
that is present this Cube into country
Dimension right so this is the kind of
operation that we've done so we've done
that using a rollup operation right so
that's uh the thing and uh let me first
explain this concept here this example
so first of all we have this Cube here
and we have different axis right we have
x axis we have y axis and we have Zed
axis so these are x axis where we have
stored the different items right so the
different types of products that are
there for salees so we have mobiles
modems phone and security right so this
this is the four different items that
are there for uh sale and then we have
the time time at which the sales were
done like different quarters of a year
quarter one quarter 2 quarter three and
quarter 4 right and then we have the
different cities Chicago New York
Toronto and Vancouver so this is the Z
axis y axis and this is the x-axis now
when we say we are doing a rollup your
rollup operation we are basically
converting this Dimension into a
different dimension with the different
set of attributes right we're changing
this whole dimension so in this
Dimension right now we have these two
cities part from USA and these two
cities from Canada so we are doing a
rollup such that we are doing a rollup
on location and converting the cities
into countries so if you look at this
here we are aggregating these two
attributes right so these two different
attributes together and these attributes
together so when you do the rollup and
when you convert this Dimension then
what you get is for USA you have the
total number of sales as 2,000 okay
because it is the aggregate of New York
and Chicago 440 + 15 60 but whereas
Canada it's 395 because only Toronto
adds to this and there is nil from
Vancouver all right so that's what we
say when we are doing a rollup so we are
doing a rollup on the items based on any
particular Dimension right so this
Dimension we aggregated uh a part of
this Dimension and we converted this
Dimension from cities to Country so this
is the kind of operations that you can
do on the set of attributes that will be
present inside your Dimensions so uh
that's about the rollup okay now the
next uh operation that I want to talk
about is that of drill down now drill
down is something that is just the
reverse of rollup so what we did in
rollup was we aggregated set of
attributes right so let's break down the
entire attribute into smaller attributes
all right so uh we can do that by this
stepping down a concept hierarchy for a
dimension okay and by also introducing a
new dimension so if you look at this
example uh it's a similar Cube where we
have similar details where we have
details for the quarter one we have the
four different details and uh basically
the dimensions are the same right so we
have the items or types for sale we have
the different time and the different
cities okay but when you look at this
diagram what we've done is when you say
drill down we've done a drill down
operation on the time so the uh time
here right the time di menion we have
represented each of them by quarters so
quarter one quarter two quarter three
and quarter 4 but the thing is each
quarter can be further broken down into
different months so in quarter one
you'll have January February and March
right so what we've done with the help
of our drill down operation is we've
broken down this quarter one into the
different months respectively so if you
look at this one here if you look at the
security that has been sold 400 in
quarter 1 then if you look at that then
that's been divided into three different
months right so in January February and
March and how many products have been
sold in each of those three different
months so this is the kind of example
right so we've done a drill down on the
time so here it was in the form of a
quarter and we've drilled down this
whole whole particular attribute into
three different attributes three further
attributes right into months and
similarly we have three other entries
here and each of those would be divided
into different attributes so of four
different attributes here we have 12
attributes where each of these
attributes have been further divided
into three attributes summing it up to
12 in total so that's the uh thing so
that's the difference between a roll up
and a drill down so let me go back to
the previous slide for a minute so in
this case what we did is we aggregated
these attributes and we reduced the
number of attributes in that Dimension
right so we converted them from four
number of attributes in the form of
cities to uh two and those being
countries so two attributes in this
Dimension all right so in this
particular Dimension we have four
different attributes and we've increased
that to 12 different attributes by
adding three attributes to each and
every single attribute here right so
that's the thing that we can do with
Dimension so that's the the next
operation that we can do on Dimensions
right so that is the difference between
roll up and roll down all right guys
so all clear all right great so let's
move on then so the next olap operation
that I'm going to talk about is that of
slice operation right so the slice
operation provides a new subcube from
one particular dimension in a given Cube
now what this means is in any cube of
ours we'll have three different
dimensions right so we have our Z axis
here we have our y- axis and we have our
x- axis so three different dimensions
here and what the slice operation means
is with the help of three in the three
different dimensions we can use one of
the dimensions and break it down into a
two dimensional cube right so if you
look at this example here here we have
only our y- axis and we have our x axis
right so the Z axis is missing now what
we've done is we've taken the time and
we've done a slice of the time so we've
done a slice for only quarter one so
here we have different representations
for different quarters for quarter one
quarter 2 quarter 3 and quarter 4 now
the data that is displayed here is with
respect to only the quarter one and
since we've drilled down into the
quarter and since we've taken a time as
a reference we've replaced the time
Dimension here with the location
Dimension right so this comes to the y-
axis and the whole representation here
is only with respect to q1 right so
that's what you mean with respect to
slice so you slice one particular
Dimension and you get into the details
of that particular Dimension with
respect to the other dimensions so
that's the slice operation and then
moving on to the next slide we have our
dice right so the dice operation
provides a new subcube from two or more
dimensions in a given Cube right so in
the earlier example we saw uh you know
we saw slice right so slice what it does
is it you know gives us a new subcube
from one by using one particular
dimension in a given Cube okay but the
dice here it gives us a new subcube from
two or more dimensions in a given Cube
so if you look at this example again we
have the location Dimension we have the
time Dimension and we have our items
Dimension here correct and what we're
doing here is we're using a dice for a
location okay okay so we have four
different cities so we are dicing only
for this location of Toronto and
Vancouver right so because we are dicing
only for Toronto and Vancouver in our
final Cube we have only Toronto and
Vancouver here correct and then we are
also slicing the time here so we are
doing a dice operation on the time with
respect to quarter one or quarter 2 so
we are only dwelling into the details of
q1 and Q2 here and again the item is the
third dimension which we are dicing and
we are dicing it for mobile or modem so
here we have mobile modem phone and
security right so these two are ignored
and we are dicing the item only for
mobile and modem so here if you see the
x-axis we have only mobile and modem and
after the dice the y axis has only q1
and Q2 and the Z axis has only Toronto
and Vancouver so that is the three
different dimensions that have been uh
diced right so if you're going to you
know get a new sub Cube by making use of
two or more number of dimensions in your
Cube then it's called The Dice operation
but however if you're getting a new
subcube from your existing Cube by
slicing only one particular Dimension
then it's called slice operation so that
is the difference between slice and dice
okay so we have the difference between
roll up and drill down then you know the
difference between slice and dice right
so that's the difference between these
two and then finally we have one
operation called as pivot operation so
the pivot operation is also known as the
rotation operation okay it basically
transposes both the axis whether it's
the X and Y axis it transposes them them
in order to provide an alternative
presentation of data now if you look at
this example here we have the location
dimension on the y- axis and we have the
item dimension on the xaxis right now
these two are transposed now that's what
a pivot does so when you transpose them
your item comes here and your location
it comes over here your location
Dimension is here and your item
Dimension is here right so even your
data corresponding to them are
transposed so I hope you guys got the
whole the concept of operations right so
the five different operations with which
can be done with the help of olap data
warehouse so I hope you guys got the
entire concept here right so the kind of
operations that you can do uh using your
uh olap activities right on your uh data
warehouse so that's the uh thing here
right so these were the five different
olap operations and uh moving on to the
next slide so the next topic that I'm
going to talk about is that of
Dimensions all right so um the tables
that describe the dimensions involved
are called d di menion tables so first
of all to give you an example of what a
dimension is in database you have
something called as tables right so you
have different tables which will be a
part of your database now similar to
tables we have something called as
dimensions in data warehouse so we have
Dimension tables which will have a set
of attributes so our customer Dimension
will have the customer details like the
customer's uh ID the customer name and
the customer address okay and your
product Dimension will have other set of
attributes like your product ID product
name and your product type and similarly
you'll have a date Dimension which will
have the order date the shipment date
and delivery date right so each of these
Dimensions here they talk about a
different aspect of your entire data
warehouse so your data warehouse may be
one for you know in this example it is
that of e-commerce company right and as
you can see here it says the e-commerce
company here this is the subject and the
dimensions are these and these are the
attributes right so first of all why
would we need Dimensions why should we
use Dimensions right so we go through
the toule of having different dimensions
inside our data warehouse similar to
having tables in our database we have
different dimensions in our data
warehouse why should we have all these
things you can have that kind of a
question now the answer to that is
dividing your entire data warehouse
project into Dimensions provides
structured information for analysis and
Reporting right so when you break down
your entire data warehouse into
different dimensions like for your
customer details you'll have a separate
Dimension called as customer dimension
for your product details you can have a
separate Dimension called Product
Dimension and similarly for other things
you can have other different dimensions
and when you break it down in structured
form like this your analysis and
Reporting can be very easier why because
when you store data it'll be in this
form right so you'll have your customer
here you'll have your customer ID the
name address and the product that
particular person purchased the name of
the product the ID of that product the
type of the product and then the date as
to when it was ordered when was it
shipped and when was the delivery
completed so you have all these these
details in a structured format so that's
what the benefit that dimensions and
data warehouse gives us right so end
users can simply fire queries on this
Dimension tables which contain
descriptive information so you'll be
here as an end user and you can just
fire your simple queries on your data
warehouse and you will get the answer
that you need so that's what is the use
of having dimensions and that's the
benefit right so U any doubts here guys
that's about dimensions and that's why
we should have different dimensions in
our data warehouse project all right so
uh moving on to the next slide so the
next topic that we have here is that of
facts and measures all right now in the
previous slide I spoke about Dimensions
right so we spoke about uh there being
different dimensions in our data
warehouse and then we being able to sort
them filter them up using different
queries right now how do you think you
can run your queries and result Because
by the look of this table you might not
be able to get an idea of what kind of
Dimensions you have to filter or which
kind of Dimensions here to sort so you
have that kind of doubt right so that's
where the whole concept of facts comes
into picture facts and measures so fact
is something that helps you measure your
Dimensions so what it does let's look at
the definition first a fact is a measure
that can be summed averaged or
manipulated okay and every fact table it
contains two kinds of data a dimension
key and a measure all right now what
this means is all you will have all your
dimensions in your data where house but
if you want to perform any kind of query
like any sorting or analysis or some
kind of drill down or all these things
you can only do it if you have a fact so
for every Dimension you will have an
Associated fact and using the fact you
can measure your Dimensions okay so
that's what it says here if you want to
measure the data that you have in your
data warehouse if you want to measure
any kind of data that is there then you
use the uh fact to measure your
dimensions and that is the reason why
your fact table will have two kinds of
data it'll have a dimension key which
will basically be the link to your
dimension table and then it'll have a
measure so your measure is something
that's going to calculate the data that
is there in your dimension right so the
dimension key is going to let you
connect to your dimension and the
whatever data that you get from there so
whether it's any kind of addition or
subtraction or any kind of average that
you're going to take or the summing or
manipulation so whatever arithmetic
operation that you perform that will be
stored as a measure in your fact table
right so that is the relation so it'll
have one particular Dimension key which
will connect to the dimension and the
results from here whatever the
Aggregates or whatever the operations
performed the results of that will be
stored as a measure so that's the thing
all right and it also says every
Dimension table is linked to a fact
table yes now that's the thing now if
you want to perform any kind of query or
analysis on any Dimension then you need
a fact table that's what we are talking
about in the final line here it is only
if you have a fact table can you perform
you know any kind of queries or analysis
right so that's the thing and it's also
a rule that for every Dimension table
you have to have a fact table so you
cannot have any diamension table in your
data warehouse without a fact table and
that is what is the whole process that
leads us to having a lot of flexibility
with respect to quering and Analysis and
all these things right so take this
example in your fact table you'll have
one product Dimension and then that will
have a dimension key and a measure right
so your dimension key would be that of
product ID and your measure would be
that of the number of units sold right
so your product can be your fact table
and your dimension ke might be that of
product ID so you'll have all the
different products that you have in your
repository and if you want to find the
number of units sold then you can
perform any kind of arithmetic operation
there and measure of that will be stored
over here as the number of units sold so
that is the fact table so that's the
whole concept here right of facts and
measures all right so uh moving on to
the next slide we have of schemas okay
so uh if you remember what we spoke
about here right of about Dimensions
facts and measures so these are the uh
important topics that will help you
understand the whole concept of schemas
so getting back to schemas a schema is
basically that which gives The Logical
description of your entire database okay
it gives details about the constraints
placed on the tables key values present
and how the key values are linked
between the different tables now what
this means is you have different
dimensions or if you take the example of
a database you'll have different tables
right so you'll have multiple tables
you'll have an employee table you'll
have a department table and how do you
link them by using the whole primary key
foreign key relationship right so that's
the example that's showed over here so
you have one table here that is of
employee table and the other one is that
of Department table and in your employee
table you have a department ID which
acts as the foreign key right and then
you have your department table where
Department ID is the primary key and you
use the department ID to do any lookups
correct so that's the whole concept of
schemas here in a database but whereas
in a data warehouse we follow a similar
model of primary key and foreign key
okay but we don't use the entity
relationship model here however we use
uh the star schema the snowflake schema
and the fact constellation schema right
so these are the three different schemas
that you use to establish relationships
or right so that's what a schema is uh
I'm pretty sure you all know what a
schema is right so you guys should all
have a good idea of what a schemas and
what it does but anyways talking about
the different types of schemas that you
have in your data
warehouse and a couple of slides earlier
I told you that every Dimension table
will have a fact table right so that's
what this diagram also symbolizes so if
I can recall then over here I told you
that a fact table contains two kinds of
data a dimension key and a measure all
right and I told you that every d
Dimension over here is supposed to have
a fact table it's supposed to be linked
to a fact table and it would be linked
with the help of schemas okay so that is
the relationship between dimensions and
facts okay measures are something that
is going to aggregate the data that is
present in your dimensions and it will
store it again in the fact table okay
but the fact table and the dimension
table will be linked with the help of
your schemas and your schemas if you
talk about schemas in the concept of
database then it would be an entity
relationship ship schema right based on
that entity relationship model they will
be linked right so that will be the
relationship but in case of a data
warehouse they will be using three
different types of schemas like Star
schema or snowflake schema or fact
constellation schema so let's uh just
talk about these schemas and how the
primary key foreign key relationship
works over here okay in these three
different schemas so the first one is
the star schema and in our star schema
each Dimension here in a star schema is
represented with a onedimensional table
which contains a set of attributes okay
so when we say a onedimensional table it
basically means that there will be a
primary key foreign key relationship
between the fact and the dimension table
only okay so you'll have your primary
key in your dimension tables and you
will have the associated foreign key in
your fact table okay so if you look at
the example of dealer okay this is a
dimension table and the dealer ID is a
primary key okay and in the fact table
you have the dealer ID which is the
foreign key now similarly for your date
Dimension table then the date ID right
this is the primary key and this is the
foreign key here and for your product
Dimension table model ID is the uh
primary key and here model ID is the
foreign key okay and similarly for the
branch Dimension table you have your
branch ID which is the primary key over
here and which is the foreign key over
here now when we say primary key foreign
key it basically means your dimension
table can have only one entry so each of
your primary key so whether in this case
if it's your dealer ID then each dealer
can have only one ID right and there can
be only one date there can be only one
entry for a particular date you cannot
have multiple entries for the same date
and similarly you cannot have multiple
products with the same ID right so you
cannot have multiple products with the
same model ID and if you look at this
example uh you cannot have different
branches supposing there are three
different branches then they should have
different IDs right so they cannot have
the same ID so that's why we say that
the primary keys they cannot have
duplicate values right so the primary
key over here is Branch ID which cannot
have duplicate values the primary key
here is model ID which cannot have
duplicate values and here it's data ID
and here it's dealer ID right so these
are the primary keys in the four
different dimension tables which cannot
have duplicate values but however in a
fact table you can have duplicate values
right because you'll be making use of
the foreign key so using the foreign key
you'll be uh referencing to the
diamension table you'll be looking up to
the dimension table and because of that
you can have duplicate values there's no
restriction on not having duplicate
values right so we have a foreign key
relating to all the four of our tables
and those are the four different
dimension keys that we have and along
with that we have two different measures
right so units sold and revenue are the
two different measures so Revenue we use
Revenue to find the total number of
products that we have sold so we'll have
a product ID we'll have the name model
ID and variant ID right so each of those
products how many have we sold so all
those things will be part of our revenue
and the same thing with units sold so
each and product that we've sold the
number of those products will be present
here and the money that we've made out
of selling those products will be
present in our Revenue right so that is
the whole concept of measures here okay
so let me just go back to this slide
here as you can see a fact table
contains two kinds of data a dimension
key and a measure correct a dimension
key and a measure a dimension key is
basically the foreign key here which
will be referencing to the primary key
in your diamension table so that is your
diamension key and your measure is
basically the calculation or the
arithmetic value that will be stored
based on the operation that is performed
on your Dimensions so that's what has
been explained in this slide right so
you have your unit sold and you have
your Revenue correct so these two will
be your measures and these four will be
your four different damage and keys for
four different tables so that's about
your start schema so if you understand
your start schema then it would be
easier to understand the other schemas
because they are just a slight variation
okay but what you got to understand is
the main thing is that every Dimension
table will be linked to the fact table
correct so that is the one thing which
you have to remember and talking about
the next point a fact table is at the
center correct so the fact table is at
the center it contains keys to every
Dimension table and attributes all right
so it has the keys to every different
dimension table and it has attributes
like units sold and it has Revenue as
the other measure correct so that's the
thing about the star schema that's how
this works now going to the next slide
we have something called as snowflake
schema okay now it's just a slightly
modified version of your star schema
when we say modified in uh technical
terms we call it normalized okay and
when we say normalize it means split
into additional tables so if you have
one table which is having a lot of
attributes then we can break down this
table into further tables so that's what
is happening over here so if you look at
this table you have your fact table okay
over here in your star schema you had
only your dimension table and you had
your country idid you had location ID
you had all these details okay but
inside your snowflake schema you have
split this dealer table into two further
tables one is with respect to location
and the other is with respect to Country
right so you have your location ID
foreign key and your country ID foreign
key over here and they will be
referenced to your location ID primary
key in your location table okay and to
your country ID primary key in your
country table right so that's how things
work so since your table is being
normalized or split into additional
tables it's called the snowflake schema
correct the same thing is done here
right so you have something called as
variant ID which is again a foreign key
and that is reference to the primary key
which is inside the variant table
correct as you can see so these four
where the dimension tabl that were
present in the star schema and if you
normalize these tables or this data
warehouse further then you'll get your
snowflake schema right so it's further
normalized into additional tables so
that's what the difference between a
star schema and a snow schema is all
right so I hope there are no doubts guys
if any if there are any doubts please
put that in the chat box all right so
that's the thing about snowflake schema
and then now we have one more type of
schema called as Galaxy schema okay it's
also called as the fact constellation
schema and the concept here is that the
Galaxy schema contains more than one
fact table okay now we saw star and
snowflake right so here it had a single
fact table but the number of damage
tables were different right we had
additional Dimension tables and they
were additional Dimension tables which
are normalized in case of our snowflake
schema but in case of our galaxy schema
where you have two fact tables right so
you have two fact tables and you have
your dimension tables such that some
Dimension tables can have more than one
fact table okay so if you take the
example of our Branch Dimension and your
date Dimension so these two tables have
two fact tables they both have the uh
fact table of Revenue and the fact table
of product okay but however the product
Dimension table here okay this one has
only one fact table that is product and
the dealer diamension table here has
only one fact table that is revenue
correct so to help you understand this
in a simpler fashion I've broken down
this product into another dimension
table right so earlier we had one
product table here and here we've broken
down this product table into further
product with respect to product ID
correct so that's the whole concept here
if you have more than one fact table
then it's called a Galaxy schema so this
would probably help you understand
correct so the revenue and product are
the two fact tables and the dimensions
which are shared are called confirmed
Dimensions so that means these two
Dimensions which are shared by more than
one fact table these two are called
confirmed Dimensions correct so that's
the whole concept of Galaxy schema so uh
guys any
doubts okay so guys that was about the
Galaxy schema all right and uh those are
the three different schemas that you can
have in your data warehouse all right so
if you're going to work on a data
warehouse anytime in your future then
you can formulate your whole
organization data inside data warehouse
by using any of these schemas okay they
are either star snowflake or Galaxy
schemas so that's it about the schemas
and uh yeah that's it so that's the end
of the session and let me just summarize
whatever I've covered in this session
all right so I first gave you an
introduction to what is data warehousing
I spoke about what a data warehouse is
uh how it is a benefit and what are the
activities involved in you know creating
a data warehouse the whole concept of
data warehousing and I spoke about the
architecture here and then I spoke about
online analytical processing I spoke
about the different types of olabs right
what are the advantages of that olap has
over oldtv and the different olap
operations that are there that we can do
on the olap cubes so I spoke about all
these things and then I spoke about what
are dimensions facts and measures so
diamensions was one concept that I
started off from olap itself when I was
talking about olap operations so it
started there and then we went on to
talk about what are dimensions facts
measures and then finally I finished off
today's session by talking about schemas
right so we had three different schemas
with respect to Star schema snowflake
schema and fact constellation schema so
these are the three different schemas
that I used in a data warehouse right so
that's it that's the end of the session
and thank you guys thank you for
attending the session and if you have
any doubts please put that in the chat
box or you can email it to me and I'll
get back to you immediately all right so
um all the best I'll probably meet you
all in the next session and until then
uh see you all take care guys I hope you
enjoyed listening to this video please
be kind enough to like it and you can
comment any of your doubts and queries
and we will reply to them at the
earliest do look out for more videos in
our playlist And subscribe to our Eda
channel to learn more happy learning
