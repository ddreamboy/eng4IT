hey how's it going guys my name is dom
and today i'm going to be showing you
how easy it is to create your own
javascript utility library using modules
and the import export syntax all right
so this right here is really easy and
almost anyone can do this and you can
easily include this library on your
existing website or project to of course
store some logic in one place and then
use it multiple times throughout your
entire project alright so you can do
things like store logic for dom
manipulation string manipulation you
know math whatever it might be you can
put inside your utility library so i've
got this indexed html right here with
currently nothing going on there's no
included javascript alright so starting
from scratch here we can create a new
folder called js so you can call this
folder lib if you want or library i'm
going to call mine js and then make a
new file here called
util.js so this file right here of
course is short for utility.js
now this is where you're going to want
to store all of your
functions all right so all of your help
out functions okay as an example here
we're going to say export function add
okay so this function here is going to
take in an array of numbers and then of
course add them together before
returning the results okay
so one important thing here is going to
be the export keyword so export means
other javascript files can then take
this function and include it you know
in their own file and basically use that
function okay
as an example here let's just say let
sum equal to zero then say for every
single number
of the numbers array that's being passed
in let's say sum plus equals n to add it
to the list or add it to the total
and then return the sum so that is our
function complete you guys can make many
of these functions all right it's up to
you and once you're happy with the mana
functions you have
going back inside the directory
structure here let's make a new file
called main.js so this file right here
is going to be where all of your website
logic is going to sit so you guys may
already have an existing main.js file or
a similar file and you can simply reuse
that one if you like but i want to make
a new one here the important thing to do
is though is going back in the
index.html when you include your main.js
file make sure you have so i'm going to
include this here
make sure you have the type of module so
this type of module here is going to
ensure that we can now use the import
export syntax to of course include the
util library inside main.js okay so i'll
save this right here
go back in main.js then we're going to
simply include those functions or
whatever we want to include now of
course i need to remove the duplicate
function so let's do that but going back
in the main.js now let's import that add
function so we can simply say import
then using curly braces here we can say
add
from
dot forward slash util dot js so now
add is going to be this function right
here okay
we can now say
console.log
at
pass in something like one two and three
and of course now we should get six in
the console i'll go in the browser here
do a refresh and we get six right there
so as we can see the function is being
used okay
that's basically it so you can you know
if you got multiple functions here you
could simply put a comma and you can
import some more functions whatever you
might have inside there you can do so
using commas to you know include
multiple
um and one thing to mention before i go
is that
it's probably better if you guys can
you know store this utility file
somewhere else so maybe if you've got a
web server you can store it on your
website in some sort of directory that
way anytime you want to use your
function or use your library you can
simply include it from that one place
it's up to you guys but you know that
just sort of prevents you from having to
obviously copy this file
you know every time you make a new
project but that's how to create your
own javascript utility library using
modules and the import export syntax
hope you guys enjoyed this one if you
did drop a like and subscribe and i'll
see you in the next one
