automation QA engineers and aets sof for
developer engineers and test play a
crucial role in ensuring that software
functions as expected and works
efficiently today we're going to walk
through a self-taught guide to learning
both skill sets meaning you can learn
both of these for
free I don't want any excuses for why
you can't learn them now and this is
coming from somebody who sells courses
and partners with boot camps all the
time courses and boot camps are there to
help you and to make the learning
process more
efficient but if you don't have the
means or finances for a course or a boot
camp you can still learn it on your own
so I don't want any excuses for why you
can't learn it and if anybody tells you
that you must buy their course or you
must go to their boot camp because it's
the only way to learn it they're
misleading you and lying to you and you
probably should stay away from
them now that all that is out of the way
let's jump into the video I previously
made a guide for self taught manual QA
Engineers that you can watch after this
and I will leave links in the comment
section
below if you're new here my name is the
test lead I make content to help you on
your software testing Journey today's
topic a guide and crash course for
automation QA engineers and
aets let's get
started first off we probably should
Define any roles of an automation QA
engineer and
aets higher level they're pretty much
the same most companies and job
descriptions will use them
interchangeably but for the sake of this
video we're going to touch the slight
differences in both roles you're
creating and running automated test
scripts you want to automate anything
that's redundant in a testing process
including things like regression testing
instead of having your manual QA
engineer run all the regression test
after each testing cycle automated
create some automated test scripts that
way you press a button and get the
results these slight differences between
automation QA engineer and an estet or a
software developer engineer in test is
in a title for estet
the team sees you as more of a software
developer who happens to specialize in
testing so with that role they expect
you to have more coding and Technical
knowledge you're going to create custom
tools and Frameworks to help with the
testing process so just how the regular
developers on your team are developing
and writing their code they're going to
see you in the same way we are
developing and writing code what happens
just to be for
testing now that we Define the roles
let's talk about the actual guide and
crash course
part before you jump into any automation
you should first learn the manual or
human QA engineer skill set like I said
I have a video covering that that I'll
link below but you should understand the
core
principles the software development life
cycle understand the different stages of
software development from planning and
design to implementation and
maintenance learn about models such as
agile waterfall and devops which impact
how testing is integrated into
development process testing
documentation test plans
these are documents that outline the
scope Approach Resources and schedule
for testing
activities test
cases detailed descriptions of test
scenarios including the test inputs
execution steps and expected
outcomes bug
reports records of defects found during
testing including steps to reproduce the
issue
severity and screenshots or logs if
available types of
testing functional
testing ensures that software functions
as expected based on
requirements regression testing checks
that new changes haven't introduced new
bugs and previously tested
features exploratory testing
involves exploring the application to
identify defects that may not be covered
by predefined test cases so all of that
is prerequisites for learning the
automated part of
testing don't just skip to coding and
automation no make sure your fundamental
knowledge of software testing is intact
First Once you have a good understanding
of all of that
next we're going to pick your coding
language coding skills are essential for
writing automated tests and
scripts choosing the right language
allows you to leverage various testing
Frameworks and tools
effectively the most popular choices are
python Java and
JavaScript python is known for
Simplicity and readability
Java widely used Enterprise environments
were powerful testing
Frameworks and
JavaScript ideal for web
applications personally I suggest python
it's the easiest to learn and it's very
versatile next you're going to choose
your IDE or the place where you're going
to write your code then run your program
the program is then changed into
computer language that way your computer
understands what you're trying to do so
we have py charm which is specifically
designed for python development intellig
is for Java and visual studio code it's
a lightweight versatile IDE that
supports various programming
languages so now you have your coding
language and your IDE where right
writing a code at next you have to learn
a testing tool and framework so there's
two sides to testing we have the front
end or the UI or the customer sees we
then have the back end which involves
API testing first let's talk about the
front end UI testing or testing the
customer sees when they access your
website or
application some popular you I testing
tools include selenium which has been
around forever Cyprus and playright to
start I'll probably focus on selenium
because it's the most commonly used in
different companies and
industries the other two are newer and
some companies do use it but it's just
less companies that have that option
next we have mobile application test
testing so any application on your phone
can be tested with mobile testing tools
and Frameworks example tools and
Frameworks for mobile testing include
appium and
espresso apium is the one that I will go
with because it's the most well-known
one and you can test both Android and
iOS mobile
applications mobile testing is not a
requirement more more of an extra
usually we focus more on the frontend UI
testing and a backend API testing so it
won't hurt to learn but just don't
prioritize it before the other
two quick break if you need help on your
software testing Journey check out my
website the testing lead.com
there I have content other information
to help you on your software testing
Journey now back to the video now we
have automated API testing remember apis
are way for two different programs to
communicate with each other and share
information Postman is a free tool you
can go to their website create a free
account and start testing apis today
it's very user friendly you can also
create things like test for apis and
Postman
so first learn about Postman and test
their practice
apis then we're going to talk about
actually automating API testing where
you're testing apis in your code for
python here's an
example we're going to import test
API then do a give request for some
example
API with then asserting the status code
you'll use Python's request library to
make HTTP request and validate the API
responses next we have
JavaScript with JavaScript you can use
axios for making the
request next we have databases and
SQL databases are a place for your
company to store information
it could be customer data it could be
product information and so on this
information is compartmentalized into
storage units called tables that way
it's more organized and easily
accessible we then interact with this
data by using
SQL use SQL commands like select to
retrieve data and insert update and
delete to modify data
here's an example select star from users
where ID is one this retrieves user data
with a specific ID equal to
one so another optional one along with
mobile testing is performance
testing neither one is a requirement but
is a good add-on for your resume and
your skill set performance testing
assesses how application performs under
various conditions helping to identify
bottlenecks and ensuring that the
application meets performance
requirements the top two tools for
performance testing are J meter and load
Runner let's talk about practicing and
building your
portfolio once you have basic knowledge
and understanding of everything we
previously discussed make sure you
actually get repetitions practicing it
writing code for API testing or for UI
testing using
selenium create your own repositories
locally and actually run these
tests then once you're confident with it
start to create your portfolio that way
you can showcase what you know to
potential employees or your friends if
they like that type of stuff a well
documented portfolio shows your ability
to apply what you've learned and
provides evidence of your
expertise how to
practice create personal projects work
on your own testing projects to apply
your knowledge and skills in real world
context showcase these projects include
detailed examples of your test cases
test scripts and automation Frameworks
create your own personal website to
Showcase all your portfolio information
create screenshots of your test cases
and your test scripts and even leave a
link to your GitHub account that way you
can store or your code for your test
scripts in a central
place link this portfolio and GitHub
account to your resume and Linkedin Prof
profiles next join some QA
communities I know I mentioned this in a
previous video but the more emerged you
are in a QA space the easier it is to
network and to find other people who are
like-minded try to find communities on
LinkedIn
Reddit other places Twitter wherever you
can to reach out and talk to people in
the
space one of my goals is to create a
essential place for people in the QA
space to connect that's still in the
making maybe sometime next year
everybody's favorite part creating your
resume and applying to
jobs a well-crafted resume highlights
your skills and experience making you
stand out to potential
employers apply applying for jobs is the
final step and launching your career and
automation testing and estet
roles when creating your resume make
sure you're highlighting your
skills now for applying to
jobs tell your resume to job
descriptions if they're asking for
specific tools and Frameworks and coding
languages make sure those are in the
beginning of your resume so they see
you're fit right
away also whenever required have a cover
letter A lot of people skip this part
missing out on
opportunities so you should take
advantage of that and you apply for
those
positions seek entrylevel roles or
internships you may have to even get a
manual QA engineer role and then
transition in that company to an
automated one because sometimes the job
market is hard so instead of you being
jobless at least make some money and get
some real experience and then transition
to the automated or ex that roll from
there but that's why having the core
manual skill set is still
required because honestly might be a
hybrid doing both manual and automated
testing if you're struggling to gaining
experience you can seek freelance work
you can volunteer once again try to get
internships the hardest thing is getting
that initial experience so try to get it
any way possible because once you have
experience get that next job it's a lot
easier from there just continue to build
your resume and portfolio if this video
was helpful next you should check out my
guide to being a manual QA engineer or
my library here about automation
