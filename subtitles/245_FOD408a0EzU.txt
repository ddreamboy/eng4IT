functions are arguably one of the most
important Concepts in the entirety of
JavaScript you'll use them literally
everywhere and the one of the core
building blocks of JavaScript but
learning functions can be quite
difficult especially if you're just
getting started with JavaScript so in
this video I'm going to break down
exactly how functions work what they can
do the different ways you can use them
and why you would even want to use them
in the first place also this entire
video is based on a similar video that I
have in my JavaScript simplified course
this course is perfect if you're a
beginner JavaScript developer because it
takes you from knowing absolutely
nothing about JavaScript all the way up
to being an intermediate JavaScript
developer with things like testing
security and clean code I highly
recommend checking out this course it's
going to be linked down in the
description for you
foreign welcome back to web dev
simplified my name is Kyle and my job is
to simplify the web for you so you can
start building your dream project sooner
and today we're going to be talking
about functions so let's say I have some
code that just console logs out the text
high and then I have a bunch of other
code somewhere in the middle and then
finally somewhere else I'm console
logging out hi again you can see my code
works fine it says hi says hi again and
all the code in the middle is running
just fine if I had some code there to
run what happens if I want to change
this console log High to say hello well
I need to change it to hello here okay
now we need to change it to hello down
here so I had to change my code in two
different places essentially I know for
a fact that this console log that says
hello and this one on the bottom are
always going to be exactly the same and
I want them to do the exact same thing
every single time I call them but right
now they're copied between different
places and every time I change one I
need to make sure I update the other one
this is the perfect use case for a
function because a function in
JavaScript all it does is it takes some
type of logic so console logging hello
too and it just puts that inside of a
particular piece of code that you can
run whenever you want and it's always
going to do the same thing every single
time so let me show you really quickly
how you would create a function to do
this little bit of a log so to create a
function you just need to type the
keyword function and you'll know you've
done this correctly if in your editor
it'll probably turn a different color in
my example it turns blue but it could be
any color for your particular editor
then you need to give your function a
name so just hit space give it a name
we'll call this one say hi now the final
step you need to do is you need to close
this off with parentheses so you put an
open and a closing parenthesis and then
finally some open and closing curly
braces so what we have here again is we
have the keyword function we have a name
for a function and then functions can
actually take arguments and parameters
inside of them so you can like pass code
to a function in our case we're not
dealing with that and that's why our
parentheses here are completely blank
and for now that's perfectly okay then
the final thing we have is these open
and closing curly braces everything
between these curly braces is going to
be the code that gets executed in your
function so everything we put inside of
here all of this gets executed every
time we call our say hi function I want
to do in here is machine a console log
hi and if I save my code you'll notice
nothing gets printed on the right hand
side of my screen but we also have no
errors at all so this code is working
but it's not doing anything and that's
because by default when you create a
function which is what we've done here
the function just stores some code to
execute later it doesn't do anything it
doesn't run any code it's just saying
hey I have this function called say hi
and when you call it I'm going to run
all the code inside these curly brackets
but for now I'm not going to do anything
until you tell me to do something so
let's talk about how we actually call a
function to call a function all you do
is you type out the name of the function
in our case say Hi and then you again
use parentheses so open and close the
parentheses that's how you tell your
function you want to call it so we're
saying call to say hi function and pass
absolutely nothing to it because we
didn't put anything inside of our
parentheses here now if I run this you
can see it prints out High because
what's happening is it creates our
function right here then later in our
code we're calling that function and
when you call the function it just goes
into these curly brackets and runs all
the code inside of them and that's all
that happens if we run this function a
second time you'll see it prints out
High twice and if I changes to hello I
only have to change it in one place and
it updates both of the functions that
are being called that's again one of the
huge benefits for functions because you
can take logic and code that you're
using all over the place put it in one
place and then you can reuse it and
change it easily all in one place now up
until this point all we've done is
create a very basic function that
doesn't take any arguments and just does
whatever we tell it to we can if we want
make this have multiple lines so this
could say hello
and buy and now you can see when we
called this it's going to say hello and
then it's going to say bye so you can
have as many lines of code as you want
in here as long as they're between these
curly braces what happens if you want to
pass code to a function what's in our
case try to create a sum function so
we're going to say the function and
we're going to call it sum we're going
to do those opening and closing
parentheses and opening and closing
curly brackets but I want to pass some
code to our sum function all you need to
do is just give it a name whatever you
want you could call it anything you want
in our case we'll call it a and we'll
call it B because we want to add the
numbers A and B together when you pass
different variables inside of a function
like this you just need to separate them
by a comma that's all it takes you don't
even need the space I just put it for
readability purposes and now we're
passing in a variable called a and a
variable called B and I just want to log
out adding those two variables together
so I'm just going to log out whatever A
plus b is and you'll notice before I
added a plus b these were kind of dark
gray color in my editor I want to add a
plus b they become a more bright color
that's just my editor telling me that
before I wasn't using these variables
and now I am using these variables so
now to call this function we just type
sum and we put the opening and closing
brackets here opening closing
parentheses but now we also need to pass
it a value so let's pass to the values
one and two again separated by a comma
if I save you can see it logs out 3
because it's just adding 1 and 2 which
is what I pass into here so when you
have parameters and arguments inside of
a function that you can pass between
them you'll notice that whatever the
first thing you pass to the function is
is just defined as this first variable
here so that is a you can see if I
console DOT log a
and I save this you can see it prints
out one if I change this to console log
B you can see it prints out too because
whatever your second value is here
corresponds to the second value here so
they directly map to each other one to
one into wherever they're going so
whatever you put here gets put into this
variable whatever you put here gets put
into this variable B here it's almost
exactly the same thing as if you just
said like const a equals one cons to b
equals two and then you copy whatever
code is inside this function and paste
it down below that's the exact same
thing that happens when we run sum 1 and
2.
so let's get rid of all that code bring
it back to what we had here now what
happens though if we don't pass a
variable for B so I'm just going to
console log A and B so you can see it
prints out one and two but what happens
if I don't pass anything for our second
value if I save you notice it prints out
undefined and it doesn't actually throw
any errors JavaScript is a bit unique
when it comes to functions and that it
doesn't throw any errors if you don't
pass enough arguments it just sets all
the arguments you don't pass to
undefined so if I pass nothing you'll
then just both A and B are set to
undefined because I didn't pass anything
at all for them so anytime you leave off
some variables that you're trying to
pass to your function it'll always just
set them to undefined so it's really
important to understand now the final
thing I want to talk about with
functions is how you actually get data
out of a function because up until this
point all we've been doing is logging
out some information to the screen but
we haven't been returning any data to be
used so instead of just logging out a
plus b i want to return a plus b so I
can use it later and to do that you use
the return keyword so you just type in
the return keyword if you've done it
correctly it'll turn a color in your
editor and then you pass whatever you
want to return so I could just say here
sum equals
a plus b and then I can return our sum
down here and that's going to work just
fine or I can have what I had before
which is in line a plus b so now
whatever A plus b is is going to be
returned from my function so again let's
pass in one and two and when we say if
you'll notice nothing's logged out which
is great but our sum is being printed
out here so we have our actual sum value
which is right here we'll just call it
value make it a little bit easier to
read and I can console.log our value and
now you'll notice it prints out three so
when you use the return keyword what
essentially happens is it takes whatever
that value is you're returning and it
puts it inside the variable of that
function so it just comes out of the
function this is really powerful on one
of the main use cases for a function is
getting some other data from that
function it's going to do a bunch of
stuff and then spit out some data for
you so all the time you're going to see
code like this where you set a value
based on the result of a specific
function another interesting thing about
this return keyword is it makes sure no
code runs after it so we can just say
console.log
never will run and we save you'll notice
this never gets printed out it's even
kind of grayed out inside of my editor
and that's because every single time
whenever you run return the function
immediately exits out nothing else
afterwards is ever going to be run this
is actually really useful and people
will use this to exit out of functions
early if there's like an error of some
form now something really neat that you
may have actually picked up on this
video is that console.log is actually a
function on its own we just change this
back here to high you'll notice that
this works just like a normal function
we're calling this log function with our
parentheses and we're passing it a
specific value and console.log is really
cool because that's what it is it's just
a function that takes in some values and
there's lots of functions built into
JavaScript that you've probably already
used before but this is probably the one
you've used the most and you may not
have even realized that this itself is a
specific function so that's why it's
really important in JavaScript to make
sure you understand the fundamentals of
what is going on because if you do it
makes all these magical seeming things
like console.log much simpler to
understand because it really is just a
function that's all it is so if you're
interested in actually learning those
building blocks in JavaScript and making
sure you understand the Core Concepts so
you can really truly understand
JavaScript I highly recommend my
JavaScript simplified course it's going
to be linked in the description this
video and it takes you from knowing
absolutely nothing about JavaScript all
the way to being an intermediate
developer with skills far past what I
knew when I landed my first Dev job so
with that said thank you very much for
watching and have a good day
