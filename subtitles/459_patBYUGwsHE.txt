[Music]
let me go ahead and start the recording
you should be able to see my screen
right now you should be looking at
um
designing a data warehouse from the
ground up you see that okay liz
yes you're good
okay great i'm gonna go ahead and uh
we'll get started here
okay so
welcome everybody i'm very happy that
you guys are joining us here for this
session this session is designing a data
warehouse from the ground up
myself dustin ryan i'm
joined here by mitchell pearson
we're two business intelligence
consultants here at pragmatic works and
so we're going to be taking you through
designing a data warehouse from the
ground up which includes the steps that
we're going to use some things to
consider
and then we're also going to
specifically point out some things
regarding
um
an analysis services some considerations
that you just want to keep in the back
of your head when you're designing your
data warehouse for analysis services
now if you're not um if you're not going
to be using analysis services for your
data warehouse that's okay you're still
in the right place we're just going to
point out some extra things along the
way for those of you in the audience
that will be
looking to leverage
the really the strengths the reporting
strengths of analysis services
okay
all right so my co-presenter today is
sequel dusty.com or dustin's sequel or
dustin ryan there we go he's been at
pragmatic works for eight years now now
what you might not know is he spent the
first six and a half years
as the janitor but fortunately for him
he's learned a lot in the last year and
a half and he is a bi consultant here at
pragmatic works he's also a trainer he
teaches our ssas master's class our own
dx class he's a wealth of knowledge if
you go to his blog you'll see he has
over 100 blogs on just those two topics
he is an author a blogger and a speaker
he's written two books you'll see them
on your screen here and he is also a
trainer of miniature ponies i can't make
this stuff up they're so cute they're so
precious
um and this here to my left here is
mitchell pearson he's also a bi
consultant and trainer of pragmatic
works
he teaches the intro to ssis class he
also teaches the ssis master's class so
he knows a lot more about me than ssis
great resource there so if you have any
questions about ssis you definitely need
to look up mitch
he's a blogger speaker um and he's
really has this you know very
uncomfortable and natural passion about
model trains um
uh he's got costumes and everything so i
don't want to go too much detail into it
but
throw that out there and you can find
his blog mitchellsql.wordpress.com
all right
so
we're going to get started with talking
about um before we get into designing a
data warehouse why do we want a data
house so mitch can you think of any good
reasons why we might want a data
warehouse
actually i'll give you a little story i
like stories i like stories too once
upon a time there was a little bank
and this bank wanted to build these
really awesome reports but unfortunately
they
hey you guys can hear me you just lost
sound
guys
hey
we're having some audio
yeah
can you hear us okay
there you go
all right i'm not sure what the issue is
excellent so we were telling a little
story i'll start over from the beginning
here once upon a time there was little
bank and this bank wanted to have these
awesome reports for analysis but
unfortunately they didn't have a data
warehouse and this is a true story we
won't name the bank and this bank built
these reports off of their transactional
system and unfortunately when they built
these reports off their transactional
system their transactional system
crashed and it took down all of the atms
for the bank the end
okay so what you're telling me is that
somebody went home early that day
permanently permanently okay so that
that is one really good reason why a
data warehouse is something that you
want right for reporting right
historical reporting you know there's
certain reports that you definitely
don't want to be running off of your
data warehouse
um now
so that's a kind of a scary story but
those kinds of things happen
and so that's that's one of the really
good reasons why we want to consider
using a data warehouse
now when we're talking about data data
really boils down to two different types
you have data that supports the
execution of the business and then you
have data that supports the analysis of
the business so when we're talking about
data that supports the execution of the
business
it can be you know a retail business it
can be a banking it can be
transportation energy manufacturing it
can be any type of business and we have
data that supports the business so
somebody is buying products somebody is
logging inventory somebody's doing
something that helps the business run
helps the business make money so that's
the execution side of the business then
we have the analysis of the business how
many cheese balls did we sell last
quarter what are the account balances
that we're looking at right now how much
freight did we ship or how much freight
are we going to ship so that's the
analysis side of the business and so
that's two of the main differences
between the oltp or your transactional
system and your data warehouse your
dimensional model your star schema
whatever you want to call it
that's the analysis side of the business
so
huge differences there between the
transactional system and the data
warehouse
also um you have how does the user
interact with that with those two
different systems that that's another
big difference between the systems
so when you have a transactional system
primarily the interaction is going to be
at a very atomic level or a very
granular level somebody's going to
insert a new transaction a customer
walks into a store
they buy a product they say give me a
cheese ball
we insert a record into the database
into the transactional database because
some a new customer has bought another
cheeseball
okay that's the transactional side now
with the data warehouse side
the transactions are going to be a lot
different right we want to be able to
upload
all of yesterday's transactions which
could be 50 million 100 million whatever
the number might be we want to insert
all 50 million transactions from
yesterday up into the data warehouse so
that way we can begin reporting for
reporting on it
um now it could also be we want to read
a 50 million record so i can figure out
how many cheese balls did i sell
yesterday
so the user interaction is going to be
different now the the method of
interaction or the types of queries that
are going to be run are also going to
look a lot different when we're talking
about a transactional system
you're going to have
atomic inserts atomic updates deletes
we're going to insert one record at a
time update one record at a time delete
one record at a time and the primary
method of interaction with the data
warehouse is going to be is going to be
select you're gonna have yes you're
gonna have inserts bulk inserts right
we're gonna insert 100 million records
at one time from you know whatever
happened yesterday in the business or
we're going to select 100 million
records at a time because our users are
running queries that are going to that
they're asking um show me how many sales
i have show me how many how many sales
transactions i had yesterday or how many
cheese balls i i sold yesterday those
types of queries
another difference between your
transactional system and your data
warehouse is going to be the temporal
focus right usually in a transactional
system the temporal focus is going to be
what's happening now currently in the
business we're not tracking a lot of
history in the business um outside of
what's necessary just to keep the
business running
with the data warehouse
we're going to have what's going on
currently right and there may be a
little bit of latency there maybe we're
only keeping
maybe there's like a day latency we
update the data warehouse daily and so
it takes a little time
for the the current data to make its way
into the data warehouse
but we also keep history right you maybe
you want to keep three five ten years
history you know i don't know whatever
your business determines is appropriate
you wanna keep that history in your data
warehouse as well so that way we can do
analysis over over time so are we
selling more cheese balls this year than
we sold three years ago
now
also the difference between the
transactional system and the data
warehouse is going to be the design
optimization right
typically with a transactional system
you use a third normal form type of
design because we want to be able to
optimize
lots of inserts happening at one time so
we may have you know 10 000
10 000 uh purchase orders coming in
in a given hour and so we want to be
able to you know insert and update those
all at the same time
that's how we'll optimize our
transactional system now with the data
warehouse
we want to optimize for high performance
queries and that's really
the main purpose of designing the data
warehouse the way that we're going to
talk about is we want to be able to get
the data out of the data warehouse as
fast as humanly possible
so that way our users queries don't have
to run very very long
this is also important for analysis
services processing we'll talk about
that a little in a little bit here later
okay
now the four steps that we're going to
talk about are um
identifying the business process
identifying the grain choosing the
dimensions and choosing the measures so
these are the kind of the four can steps
that you can use
when you start approaching either
building a data warehouse from scratch
or enhancing a data warehouse maybe you
want to bring in a new business process
into your existing data warehouse maybe
in your data warehouse you've got retail
stuff already and you want to bring in
some marketing um marketing facts so you
can use these four steps to kind of
um approach enhancing a data warehouse
as well um and and as we're going
through these steps um i want you to
think about and remember that the the
purpose of a dimensional model a
well-designed dimensional model or star
schema is we want it to be simple right
we want it to be easy to use
we want the etl to load these tables to
be as simple as possible
we want our queries to perform well and
we want this to
perform also perform well with ssas um
so let's start walking through these
these four steps here
and and as mitch and i go through these
steps together
one thing we're going to we're going to
do is we're actually going to design a
data warehouse together so we've got
this kind of imaginary business um
a very successful business model you've
probably heard of this company buster
block they said they sell uh rentals to
vhs movies um very successful in the
past and so that's kind of our imaginary
scenario we're going with here we're
going to design a simple star schema for
this business okay and so we're going to
walk through these four steps together
um keeping in mind that we're designing
a star schema for a buster block
all right so remember that and so we're
going to kind of approach it from that
standpoint so that way
we can talk about these four steps but
you can also kind of see it in practice
and you kind of have a good example of
you know using this
in your particular environment
now
the the reason we're going with a retail
example here is that
we don't want to be complicated
everybody understands how kind of how
retail works somebody's buying a product
right
and so we don't want to get lost in the
minutia of you know how the business
actually works or um you know the the
technology or from that kind of
standpoint so we want to go with
something simple so it's easy to
understand and we can focus on actually
learning the concepts here
so we're going to start with
identifying the business process
all right thank you dustin
so identifying the business process is
going to be the first step in designing
our data warehouse and the question we
want to ask there is what is a business
process
a business process is a natural business
activity performed in your organization
that is supported by some form of data
collection
it's important to focus on the business
process as opposed to the business
departments
because
this will allow us to deliver
information across the business in a
more consistent manner
otherwise we may duplicate data if you
think about having a data warehouse in
multiple locations in your business for
example having a retail data warehouse
and marketing and then a retail data
warehouse in sales we may have
duplication of data that's not necessary
and we want to have one centralized
location for that information so what
you're really talking about here is
having that one source of the truth
right we want to focus on business
process
not business department what we don't
want to happen
is to have marketing have their own data
warehouse manufacturing have their own
data warehouse and then everybody
showing up to the same meeting saying
well this is what our profit should be
for this past quarter and everybody's
got different numbers so we're talking
about focusing on the business process
that may span across business
departments
exactly
good job dustin all right so we must
first decide what business process we
want to model there's two steps that we
want to identify when we're modeling our
business process we want to look at the
impact that this business process is
going to have in our data warehouse and
we also want to look at the risk that's
associated with this business process
so the impact is going to be reports
that your business want on a daily basis
very common everyday
impact high availability reports the
risk associated with this business
process are going to be things like data
availability can we have access to the
data or is it going to be difficult to
get do we have data quality problems you
might want something in your data
warehouse but when you look at the data
it's very unclean and it's going to take
a lot of work to get that cleaned for
your data warehouse the third thing
there is you might have very complex
business logic that has to be applied to
actually get that data warehouse up and
running and it might be difficult to get
that information from all the different
departments so we need to assess the
impact and the risk and both of those
have to take place as part of choosing
the proper
choosing the proper business process
all right and the other thing we want to
do is we want to make sure we choose the
business process that has the most
impact from the beginning we want to get
that low hanging fruit so when we start
our data warehouse project chances are
we're going to have multiple business
processes that we identify we're going
to have more than one
we're not going to have you know just
one process we're going to see three or
four or five different processes that
we're interested in
all right
so
chances are we're not going to be able
to fit all of those business processes
into our data warehouse we're going to
have to choose one or two or three or a
couple of those but we won't be able to
fit all of them in there so this is
where i mean what's that what's the best
way to
decide
what is the business process we start
with if we're if we've got people out
there that are starting a data warehouse
from scratch how do they pick
what business process do we start with
it's a great question so a lot of times
what you're going to find out especially
when you're at a client so chances are
the business is already going to be
telling you what those high impact items
are if you're working in a bi
environment now then you probably have a
user or a group of users that come to
you on a regular basis and they say hey
can you send me that report again that
shows me my profit margins by category
or hey can you give me that report that
shows me my freight that was delivered
today
and what they're really asking me for
what they're really telling me is that
these are high impact business processes
that i need a lot of visibility into so
chances are if you don't have a data
warehouse in your environment now then
you're probably going to have users that
are already telling you that they need
lots of visibility into these specific
processes and their high impact for the
business so a lot of times the business
is already going to have reports they
want that they're asking you for and
it's going to be kind of obvious what
you want there now you're going to have
to do a little bit of additional
research to figure out is this a high
risk item or is this low risk is the
data going to be readily available is it
going to be dirty data um is are we
going to be able to get the business
calculations and the business logic that
we need so that's going to have to take
place as part of that process
and so that's good
another thing that we want to consider
dustin that we previously touched on is
that when we say identify the business
process we're talking about business
processes for the company not for an
individual department in the company and
what we mean by that is you might have a
retail data warehouse in your marketing
department
and the marketing department is going to
come to that meeting that dustin was
talking about with their own set of
numbers and then you have another retail
data warehouse in your sales department
and they come to that same meeting and
they say well we've had this much in
sales and marketing says no we've had
this much in sales and we have
conflicting numbers in our company so we
want to have one centralized data
warehouse one version of the truth for
marketing manufacturing sales and retail
we want to have all that in one data
warehouse so that's something that we
want to consider there
another way we might determine our
business process
is
by listening to the questions that our
business users are asking us so a lot of
times we're going to hear a question
they're going to say what are the gross
profit margins for our product
categories for the previous month
what are what's our average account
balance
what is the average rental quantity
we're talking about uh buster block so
what is our current rental quantity and
those are questions the business is
going to ask us when they're asking us
those questions if we pay attention and
we listen closely then we're going to
know exactly what those business
processes are that they're looking for
that are going to have high impact
immediately kind of that low hanging
fruit in the company right so if you've
got if you have you know everybody's got
that one user that always comes from and
says hey can you give me that report hey
i need that report again hey i need that
report you probably all have users like
that
the ones that they're coming and asking
me for the most are probably the
processes that have the most impact on
the business because they're the ones
that are going to know what's going to
be high impact so
what i hear you saying mitch is we want
to look for that low hanging fruit we
want to look for
those business processes that are going
to have high impact for the business
either make a lot of money for the
business save the business a lot of
money make the business more efficient
whatever but it's going to be low risk
we can get the data we have people who
can help us figure out the logic um
that those kinds of things absolutely
exactly
okay so in this case
we've already identified our business
process our example in this case is
buster block right our our video rental
store
and so we're going kind of with a retail
business process here for this example
okay now the next step here is we want
to be able to um identify the grain of
the fat table okay
now
this is the most important decision that
you will make in your design process
it's we need to identify what is going
to be the grain in our factory table now
if you're if you're new to data
warehousing you may not know what a fact
table is
a fact table is a table that's going to
be at the center of our star schema
and it's the table that contains all of
the facts about the business how
successful the business is how many
sales do we have how much quantity do we
move
those types of things so facts are
measurements regarding the success or
failure of the business depending on
what type of business process that we
could be modeling
now when we when we identify the grain
we want to determine what does one row
in the fact table represent okay so if
we're working in some type of retail um
scenario here where
um
we want to identify uh you know what
does one row and our sales fact table
represent um in the case of buster block
it might be um a line item in a
transaction so for this business process
we're going to decide you know what one
row in this fact table represents a line
item in a single transaction so that
could be an example in a retail scenario
and that's what we're going to go with
for this example
now
for um if you're working in some type of
um you know business process where you
want to track inventory
maybe you're deciding that you know what
one row in this fact table represents a
record of inventory
um on a particular day so every day we
go out to our data warehouse we figure
out or not our data warehouse our
physical warehouse and we determine okay
we've got you know what we've got 500
cheese balls sitting on the shelf we've
got you know a thousand a thousand uh
boxes of cereal or we've got you know
whatever is in our warehouse and we want
to log that every day into our fact
table so maybe in an inventory example
one row would represent a
a um you know a record of inventory on a
given day
um but when when you determine what one
row represents in your fact table it's
important to
determine to go with the most granular
level you want to design your
dimensional model to support
the most atomic or granular level that
you have with your data
um now when we're talking about atomic
the most atomic level we're talking
about data that cannot be
subdivided anymore we can't break it
down anymore this is as low as the data
goes we can't subdivide this anymore and
the reason we do this is because
data that is at the most atomic level
can be rolled up it can be aggregated it
can be sliced it can be diced and pretty
much any way that the users want
okay
um and this is really good for app talk
queries because the bottom line here is
that we can't predict
how the users are going to query the
data warehouse they might tell us that
look we want a report that does xyz or
shows xyz right
but the moment they realize that okay
well we can ask other questions of the
data warehouse or we can ask other
questions of the cube
they're going to start
firing all kinds of other queries
they're going to connect to the cube
with excel they're going to slice and
dice in ways that
you didn't really expect and so that's
one of the reasons that we want to store
this level data at the at a at the most
atomic level
um
if we if we decide you know what
you know i've worked in situations where
clients said we really only want the
data at the month level we don't care
about it at the day level um
you usually still always want to go with
um
a granular level because eventually
they're going to ask you hey can we look
at this what happened you know we see
it's something we see an anomaly at the
month level right it's okay we want to
figure out where this happened at well
we can't right because we've aggregated
our data warehouse up to the month level
so we can't we can't roll it down
and so that's that's always something to
be aware of
so i got a question for you how much
work would it take to rework that i mean
if you build your entire data warehouse
on a monthly level or maybe a weekly
level or a daily level and you want to
go more granular how much work would
that take i mean if you designed your
whole data warehouse to be at the day
level or i mean at the month level and
you and then later on down the road you
know what we want we want to take this
fact table and we want to roll it um we
really want to change it to the day
level if you don't have that history
somewhere else you're not going to be
able to get it okay so that's that's a
problem for one
but if you can
it's gonna be a lot of work because then
you're gonna have to rework the fact
table you're gonna have to rework
dimensions um you're gonna have to
rework etl you're gonna have to do a lot
of rework there so um that's kind of why
i said at the start of this that you
want to focus on getting this step right
because if you mess this step up it's
going to cause problems for you on later
on down the road
okay so the bottom line here is we can't
predict what queries the users are going
to run against our data warehouse so we
want to store it at the most granular
level so that way they can ask any
questions they want
all right so in this particular case let
me uh bring my
virtual machine over here so we can kind
of do this together here all right so
we're going to stuff out here
a data warehouse designed together
and so what was our what was our brain
statement
one row represents a line item in a
transaction at a
buster block store okay and so we're
going to start here with the
with a new table
and we're going to call this fact sales
because we're going to give it the fact
moniker because this is a table that is
going to contain our fat data those
measurements that the business has
identified that they can use to
tell how much success they're having in
the execution of their business
okay oops already created that one so
we'll call it um
in fact video sales how about that
okay
all right and so
when we when we determine the grain of
our fact table
um based on that grain
we can determine what kinds of
dimensions which we're going to move
into here in a minute we can determine
which kinds of dimensions um
that are going to be
related to this fact so
if we know it's a line item on a
transaction in a store so we know that
that there's going to be a product
related to this right somebody's renting
a movie
maybe they're renting you know
gone with the wind dances with the wolf
saving private ryan in mitch's case all
about miniature trains
so we know that we're going to have a
product dimension that's going to be
related to this
we also know that a transaction is going
to occur on a given day right so we know
that there's going to be a date
associated with this
and a customer is going to be associated
with a transaction so that we know we're
going to have a customer
um sk there for that
and we're going to discuss what an sk is
here in a second
and then also we've got product we've
got date we've got customer and what was
the other one we said we're gonna do and
we've got store right this is gonna be
happening in a store
okay
and so
this this fact table here kind of
embodies what our grain is right this is
a transaction that's occurring with a
product on a day with a customer
at a store and so based on this we can
do analysis on how many products are we
going to sell in us how do we how many
products we sell in a store last month
how many products do we sell on this day
how many products are bought by our top
ten percent of customers how many
products are our sale are our stores
selling by store so we can do all kinds
of different analysis based on uh this
particular grain
so
now that we've kind of identified what
is going to be the grain of our
of our business process that we're
modeling here
now it's time to move into identifying
the dimensions what are the dimensions
that are going to be related to this
particular brain
all right thank you dustin
so what is a dimension a dimension is
going to contain descriptive information
regarding our data if i told you that we
had five million dollars in sales you're
probably going to have some questions
about that you might be excited that we
have five million dollars in sales but
it's not very descriptive it doesn't
tell you anything about our data so what
we want to do with our dimensions we
want our dimensions to answer those
questions that we might have questions
like what is the breakdown by product
category which one of our stores had the
highest amount of cells
how much did we sell last month
and we can break that information down
by using those dimensions
now these are questions that we answer
with dimensions and if you've correctly
identified the grain this step is
actually going to be very easy as dustin
just showed you the related dimensions
will be easily identified
for instance our grain statement once
again is going to be one row represents
a line item on a transaction uh in that
fact table
all right so we have product
dustin's already showed you that one
we're going to have customer we're going
to have date and we're going to have
store cut dustin's going to go ahead and
throw those dimensions up there on our
our diagram for you and then we'll start
talking about those attributes that are
related to that but we can get that from
the grain statement one row represents a
line item on a transaction we know the
transaction had a product that was
rented we know there was a customer
involved we know that it happened on a
specific date and at a specific store so
the grain is very important and
everything else that we're going to do
in and i do and working actually working
through this data warehouse
however if you're going through this and
you identify a dimension if you're
looking at your brain statement and you
identify a dimension that is not
correctly represented in our screen
statement
then step two in the process identifying
the grain must be revisited we have to
go back to step two so dustin this is
actually a good little segue here to ask
you do you see any chance that our
granularity identified can actually be
subdivided further because it's pretty
low right now
that's a good question and it's
something that you have to take into
consideration as you're going through
the design of your data warehouse so in
this particular case we've determined
that one row in our fact table
represents a line item on a transaction
right
but if we get into the if we get into
identifying the dimensions and our
business our business users come to us
and say hey
we want to be able to tie a particular
transaction to
a special that's going on a coupon that
the customer used um what some kind of
promotion whatever might be going on in
business
so that way we can analyze a promotion
effectiveness
now if we do that and say okay well a
customer could there could be one
promotion or more than one promotion
associated with
a single transaction so maybe there was
a deal going on rent one movie get one
free kind of thing but they also had a
coupon for vaga skittles or something
like that okay so there's you've got
you've got a customer using a coupon and
then you've also got store promotion
going on and so each of those promotions
has an effect on that sale and so we may
determine that you know what the grain
of this fact table isn't really one line
item
it's a coupon one coupon per line item
so we could have multiple coupons
associated with the line item so if that
kind of happens where you decide that
you know what the grain of our fact
table is not correct we've got to go
back and revisit this and it's important
that at this stage you go back to step
two because we've got to get the grain
nailed down this is the most important
step because like i said earlier if you
mess up the grain
and um and you
and you find that out later
it's going to cause a lot of rework so
if you get to identifying the dimensions
or if we get this step forward
identifying the measures and you
determine that you know what our brain
statement is not completely correct we
need to go back and go back to step two
and revisit that so that way we can get
that correctly because this is really
gonna lay the foundation work for the
rest of the data warehouse
um
and and and the cube as well this is
gonna play an impact on the cube so if
you if you find out you've done the
grain wrong and you're already into the
cube part of it then you've really got a
lot of work to do
all right good job thank you dustin all
right we actually have a couple
questions here a lot of people in the
webinar noticed that we did not add the
employee dimension
and they're letting us know about that
so if you want to throw that in there
you can and then also
the next thing that we have a lot of
questions on is what is a surrogate key
so i'm coming to that point in just a
second man it's like they're reading
your mind i know they're ahead of me
here we're going to talk faster okay so
in my product dimension the first thing
we're going to do here in this
dimensions we're going to add a database
key for the table the database key is an
identity key on the column and this is
called a surrogate key this is going to
help us with modeling the relationships
between the dimensions and the fact
tables now the reason we don't use the
business key is if we use the business
key then we're going to be vulnerable to
things like source changes in the
transactional system and that might not
mean a whole lot to you right now
and we don't have time to get deep into
detail on that but if something changes
in your source system like a metadata
change the data type of that changes
it's going to affect all the
relationships between your dimensions
and your fact tables so we want to
insulate ourselves from those kind of
changes
and that's what the surrogate key is
going to give us
so as we import data out of the
transactional system and into our data
warehouse if there are any changes in
the sources that could definitely cause
a lot of problems for us
so
aside from just insulating ourselves
from any of those issues in our source
system with our data warehouse
we're also going to create a database
key um
i'm sorry we're going to prove we're
going to go ahead and create our product
key or our product id on our product
dimension as well i'll let dustin kind
of catch up here so the product id is
going to be the business key we just
moved from our surrogate key which is
that primary key in our data warehouse
but that business key that's critical to
our business is going to be the product
id
the product id is going to be how we can
essentially go from our data warehouse
back to the transactional system and we
can kind of track and trace exactly
where that product came from and we can
see exactly what that product is any of
the transactions around that product so
the business key relates back to the
transactional system but that surrogate
key does not that that unique identifier
in our data warehouse does not relate
back to the transactional system and
there's also a couple other reasons why
we want to have that surrogate key other
than just insulating ourselves from
changes in the source system one good
example is it's going to actually
optimize the joins in our fact tables
and our dimensions
so now we're going to be joining our
fact tables and our dimensions on single
integer columns on these simple integer
columns instead of strings or any of
those other data types which is going to
simplify our model and improve our join
conditions
surrogate keys are also going to allow
us to keep historical information in our
dimensions over time so if you're
building a very robust data warehouse
and you want to be able to track
sales when you were selling a product at
five dollars and when you were selling a
product is six dollars and how much did
we sell did sales increase or did they
decrease we can keep that kind of
information our data warehouse by
keeping a history of the price that we
sold that item at or that we rented
those rentals at so that's what
surrogate keys give us we can't build a
slowly changing dimension that changes
over time using business keys
the other reason that we might want to
use uh
or not use the business key is that we
might have
two different departments in our
business that have different product ids
for the same product so you might have
marketing that simply calls all baseball
bats just baseball bats but then our
manufacturing department might have a
product id like abc123
so those ids don't necessarily relate
between those two departments but by
creating that surrogate key now we can
have
that one consistency in our data
warehouse so those are three other
reasons why you might want to have
circuit keys
or why we you should absolutely have
circuit keys in your data warehouse
right so dustin is filling out your
dimensional model right here on the
board here so in our product let's see
what we have here we have product id
that's that business key we have product
name product type to keep this a little
bit simpler for a one hour webinar we're
not putting everything in there but just
imagine what else you could have in your
product dimension you might have product
size you might have the date that you
started selling the product you might
have the list price of the product how
much do we sell this product for
these are all things that we can track
over time that's related to our product
that's a good one list for at this price
this price
especially for historical slowly
changing dimensions right i'm going to
track over time
all right so you have the sell date you
have the customer
are we going to put the store in here
all right all right so in the customer
dimension we have our customer first
name customer last name the address is
very important where are our rentals
coming from what zip code are we getting
our rentals from and we can break that
down that can be information that we
give to our marketing department that's
very important we might do some other
things in customer as well though right
we might do gender
we might want to know if they're married
or not
we might want to know their date of
birth so we can kind of get a an age of
our average customer and the genres that
they might be coming in there and
renting from us so that would be very
good information to have
all right all right and now you've
thrown the store in there so in the
store we're going to have some good
information in there as well we're going
to have the store name we're going to
have the store
address we're probably going to have
some stuff like maybe the store manager
now as you get into a little bit more
advanced data warehousing concepts you
might break the store manager out into a
separate table but we want to keep this
as close to a star scheme as we can so
you can you can add the store manager in
there absolutely
and dustin's also going to add the
employee dimension
now i was actually interested in the
date dimension that you added over here
dustin you got some
we could add a holiday in there friday
information will be pretty interesting
yeah exactly um now one thing that i'll
mention here with um
attribute selection
is that the best kinds of attributes
that you're going to have in your data
warehouse are going to be those
attributes that are most descriptive
right
so what you don't want to happen is you
don't want to have a
a a dimension like a store right that
only that is just full of ids right so
you've got like the store id maybe
you've got the um the you know geography
id or you've got like all these
different types of ids um that are just
all these integer values so the best
kinds of attributes are going to be
very descriptive um types of attributes
that the users can look at and they
don't have to ask a lot of questions
about that what you don't want is you
don't want your user to
have to have sticky notes all over his
monitor
because he's trying to figure out okay
uh store id number 12 is the one that
i've been watching lately so i need to
have that written down somewhere
so you want them to be able to look at
the attributes and to have a very clear
understanding of
you know what the data is
what it what is what's included in there
and they don't have to come to you with
a lot of questions about asking you know
what does this mean right you want it to
be kind of
intuitive from that kind of standpoint
now
i want to point out now that we've kind
of we've identified our dimensions here
based on our grain statement right and
so we've determined that on at a
transaction item level we can we can
we can
basically understand there's a product
associated with that there's a date
associated with the sale an employee
you know
um
worked with the sale worked with a
customer on that sale that it happened
in a store and a customer bought that
product right so we've we've been able
to identify our dimensions there
um and i want to point out a few things
to be aware of um when regarding ssas
okay um
you'll notice here that i included a
date dimension this is very important
for analysis services and so you want to
make sure that you always include a date
dimension in your data warehouse and you
and and some of you out there may be
thinking okay well that's silly yeah duh
we want a date to mention our day where
else
but i have i have seen data warehouse
and i have seen cubes before that didn't
have a date dimension and so it was
always it was always
just kind of known by the users that
okay this is just a point in time right
there's the date is going to be whatever
is the last current date available
which is not exactly all that useful
because if you don't have a date
dimension you can't track things that um
you know that aren't uh aren't included
with you know basic t-sql functions like
company holidays
or um fiscal calendars those types of
things so we need a date dimension to
track those kinds of attributes
but
also in analysis services if you want to
do any types of time calculations like
last year last year
how many cheese balls we sell last year
or or how many movies did we rent last
year or if we want to do any type of
year over year growth analysis or if we
want to build any trend reports or
anything like that we're going to need a
date dimension and analysis services to
do that
now
as i've kind of gone through the
dimensional model here our star schema
here
and i've i've put in the attributes into
the tables i've just kind of used
generic data types and so this is just
from a purely you know exercise
standpoint and so the data types here
aren't that important but in your
environment they are very important you
want to make sure that you use the
smallest data types possible because
this is this is going to play ripple
effects into analysis services so if if
you don't set your data types up
correctly and you just set everything in
your data warehouse to a string we're
saying you know what everything is
varchar 50 and that's what we're going
to go with
this is going to this is going to
negatively affect the performance of
ssas and the reason for this is because
in analysis services your string data is
actually stored in a separate file and
so anytime analysis services has to
access
a string data whether it's a customer
name a store name an address
a month name anything like that it has
to go to this other file look up that
data and then return it to the results
so there's going to be a performance
impact to
to your queries and processing
processing of your cubes when you use
string data so it's important to use the
smallest data type possible if you can
store something in an integer or a big
end you want to do that because that's
gonna that's going to um
improve the performance of your queue
also um it's important to just just kind
of remember that a single field
non-nullable integer key is the is the
best data type we can use so if you can
do that do it
but like i said the best data is going
to be the descriptive data so um you
don't want to go overboard you want to
strike a balance there if you can store
a customer
a customer name and use the i customer
id that's an integer as the key value
for that column that's something good to
do there as well
also one thing that you want to keep in
mind as you're going through the design
of your star screen here is use user
friendly naming conventions don't go
with um you know don't expose things
like fact video sales to the users you
want to expose it as maybe just video
sales in your cube um you know den
employee they're not going to understand
that dim is short for dimension so you
want to expose the the objects here in a
user friendly way
and the last thing i'll say about this
is about dimension optimization is look
for opportunities to build in natural
hierarchies
into into your
into your dimension design
and so we're talking about hierarchies
we're talking about you know arranging
the relationships between the data in a
in a natural way such as you have
calendar year at the top you have
month under that then you have um date
right so you have this kind of natural
hierarchy these natural relationships
that exist between the data
because you can build those kinds of
relationships into analysis services and
those relation and when you have those
those attribute hierarchies or or
user-defined hierarchies correctly built
into analysis services it gives you a
performance bonus so that's something
you want to consider as well
all right so i think i don't think i'm
going to go any farther with this i
think you guys get kind of the point
here
of what we're doing with the dimensional
model here and so once we've um
identified the business process as step
one
then we've identified the grain and then
based on the grain we're able to
correctly determine
the uh dimensions and the attributes
that are going to make those dimensions
it's time to move on to the last step
and that's
identify the measures that we want to
include in our fact table
okay so the measures
are going to be
how does the business measure success
okay so this is going to be
um you know say things like sales amount
um you know what was the what was the
sale what was that line item sale amount
what is the product cost associated with
that sale how many videos were on that
line item did they rent you know a dvd
copy of uh you know dances with wolves
and then a vhs copy they said well you
know whatever the case may be or did
they get you know ten bags of skills for
their fat little kids
um you know so
you're going to have a a quantity
associated with that too that we
probably want to track
now i'll say the same thing here that i
said when we were discussing designing
or when mitch was discussing designing
the dimensions
if we identify a measure that violates
our grain what do we have to do guys we
gotta go back to step two right we gotta
go back to step two because we've come
up we've identified something in our
model um that that violates our grain so
we gotta go back to step two
let's um revisit the grain statement
make sure that we actually have that
correct and then we can come back and go
back to step three make sure our
dimensions are squared away that's all
correct and then we can come back to
step four where we're gonna identify our
measures identify the facts
um so in this particular case
let me pull back up my uh dimensional
model here now we're ready to get
started with the step where we're going
to build in the measures into our cube
so um we consult with the business say
hey you know what are the measures you
guys want to track what are those high
impact low risk metrics that we want to
track here in our in our um
in our cube or in our data warehouse so
they may say okay well we want a
sales dollar amount right that's
important and i'm just going to put
these as in but you know you probably do
like decimal or something
there's going to be a quantity
associated with that right
and maybe there's also going to be a a a
cost a cost amount right
and that would be important to track if
we wanted to you know figure out any
type of um
you know profit or do any profit margin
type calculations
okay
now and i'll just go ahead and put those
three and we'll just stick with that
because those are three pretty common um
measures that you probably have if you
have a retail um business process
modeled in your data warehouse you
probably have those types of measures as
well
but you might have other things like a
shipping amount or tax amount or you
know whatever whatever the case may be
now when you're identifying measures for
your your star schema
the best measures that you can put in
your star schema are going to be
measures that are fully aggregateable
are are fully additive and what i mean
by that is measures that can be rolled
up they can be sliced and diced
in any way shape or form and the number
always makes sense so
for example
if we roll up our sales for all
geographies i can see what are my sales
across all of my geography regions right
that number makes sense if i want to see
my sales for
customers that number still makes sense
if i want to see my sales by month i can
slice it by month that number always
makes sense okay because it's a fully
additive fully aggregateable measure
those are going to be the best kinds of
measures to include in your queue
because your user really can't slice
that wrong
they can't there's a they have to work
pretty hard to mess that up right
so measures that are fully added fully
aggregateable are go and that are always
valid no matter how they slice and dice
it those are going to be the best
measures to include in your data
warehouse in your cube
now you may have a requirement for some
measures that are not additive at all
you can't add them up and have them make
sense so an example of something like
that would be not a
profit margin right so we can't put
profit margin in the table
and then have the user add that up
because that number would be nonsensical
right it's not going to make sense to
the business or the users if they add up
profit margins for all geographies and
they'll end up with some crazy number
that won't make any sense right
so
measures that are non-additive
those are measures that are going to be
better handled
in the um in the data access tool so it
may not be ssas you know you may not be
in ssa shop
right you may be using some type of
other reporting technology like tableau
or something more
maybe you're you're even doing it in
power bi or you've got something else
power pivot or something else going on
there right those types of calculations
like profit margin are going to be
better handled in the data access tool
and certainly ssas can handle those
types of calculations
also if you want to do any type of time
calculations like
sales amount for last year
sales amount or your year-to-date
quantity or my year-to-date um
or my last year year-to-date um so that
way we can see are our sales growing
this year compared to last year are they
actually increasing
unit price those types of measures are
going to be measured that you want to
handle in the report in the data access
tool or ssas
also if you have any kind of type of you
know kpi metrics that you used you know
kind of the red light green light yellow
light type of indicators that's
something that's better handled than
ssas
and so
when you're
when you're planning your data warehouse
and if ssas is in the picture you want
to keep in mind that a lot of a lot of
measures can be better handled with ssas
those measures that are non-additive
like relative ratios
or kpis or time calculations that those
are better to be handled with ssas than
in your data
house
if ssas is not in the picture then um
you know you're going to have to jump
through a lot of hoops to build in some
of these dynamic type time calculations
that ssas
can spit out in no time
also at this point it's also good to
begin estimating how many numbers what
what's the number of rows that are going
to be in this fact table right and so it
may be a small fact table you may have
you know you may determine that you know
we're only going to have 300 000 rows in
the stack table so that's not very big
right it's not that's not a lot of data
um and so maybe uh you know a a clever
partitioning scheme isn't appropriate in
that scenario but if you're a big
company like amazon i can i can't even
imagine how many transactions a day
amazon has a walmart something like that
you're going to have a ton of data in
here and so you want to start thinking
about okay what's my partitioning scheme
going to look like right can we
partition this table down at it
you know if you're big like walmart
you may even partition down at the
hourly level so that um you know you may
have 50 million transactions at an hour
um if you're something if you're a
company like walmart
um and if you're going to be
partitioning your table your your table
in your data warehouse you can align
those partitions with partitions in the
measure group in your queue and that
will give you a performance bonus so
aligning your ssas partitions with your
table your sql server table partitions
will also give you an a
performance improvement there
okay
and so at that point
we
identified the dimensions
the uh the measures um and so we've got
a very basic um star scheme in here that
we're ready to start i'm kind of playing
with and massaging and developing and
moving on from here so
um mitch did you want to say something
no but we do have a lot of questions
okay
we'll get to the questions here in a few
minutes here so um what i want to kind
of do now is i just want to kind of
recap really quickly
and i want to make sure that we have
plenty of time for the question so we've
got about 10 minutes left in the session
here
all right
so let's recap real quick so the four
basic steps to designing your your star
schema are
identify the business process we want to
we want to
when we say business process we're
specifically talking about business
process
not business department we want to
identify the grain what does one row in
the fact table represent
we want to identify the dimensions and
if we get to this step and we decide oh
we we need a dimension that isn't
represented by our grain statement we
need to go back to step two here and
talk about the grain
and then and then if we we make a change
to the grain then we'll come back to
step three choose the dimensions and the
attributes and and continue development
from there
and then we want to um
go to step four which is choose the
measures that we want to represent in
our fact table
now i i have i've been consulting for
eight years here at pragmatic works so
i've done a lot of data warehouse design
i've done a lot of cube design done a
lot of etl development
and one of the things we do at pragmatic
works is we do what's called kind of a
quick start if you're not familiar with
that is we go and we design a poc we go
from zero to cube in about a week so we
design the data warehouse we do etl we
do cube and we do reports in a week and
so it's pretty crazy week
but i will say that this part here
designing the data warehouse we usually
spend about three days on it can be two
to three days depending on the kind of
questions we have and
and so this and the reason we spend that
much time even though we still have etl
cubes and reports to do is because this
is by far the most important step
getting the data warehouse right if you
don't get the data warehouse right
you're going to have lots of problems
down the road so this is the most
important step and that's why we spend
two to three days uh discussing that
now
um resources if you're new to data
warehouse design um these two resources
here are killer these are the best
resources in my opinion that you can
find the data warehouse toolkit you'll
find a lot of the material for this
session came from the data warehouse
toolkit because it's an excellent book
um written by ralph campbell margie ross
chances are many of you out there have
read this this is a great book and it
talks about these four steps and it goes
into a lot more detail than what we can
do here in a one-hour session so i
highly recommend this book the data
warehouse toolkit also the star schema
star schema the complete reference
excellent book as well these both of
these books in my opinion should be in
every professional bi um person's
library they're that great um and in my
opinion the data warehouse toolkit is a
little more instructional um and the
star schema is a better reference book
because if you have special scenarios
that you're you want to research well
how do i handle a
fact dimension or a degenerate dimension
or a junk dimension those types of
things star scheme is going to be your
go-to resource for that so i highly
recommend
both of these as as resources for you so
look those up i i have both of these
books in pdf and in paper format
um mitch does as well so i agree i like
the star scheme of the best if you're an
intro to
to data warehousing i just think it's
easier to read i think it's an easier
read it's not heavy on the technology
the data warehouse toolkit though
you will probably just read the first
five chapters and really get everything
that we talked about here and a lot more
and then the rest of that book goes
department by department so it has
retail human resources finance and how
you would model each of those different
businesses so it's an awesome book an
incredible book but i highly recommend
both of those books yeah they're great
books and and one thing i'll say last
thing i'll say about those books is that
um the really nice thing about those
books is for the most part they're
technology agnostic so you don't have to
know a lot about sql server you don't
have to know a lot about oracle um
whatever your database technology is um
because they're they don't approach it
from a technology standpoint they're
talking about it from a modeling
conceptual standpoint so that's really
nice
um so thank you everybody for attending
our webinar i hope that you learned a
lot i hope you um i hope that you got a
lot out of the session and if you have
questions you can now's the time to
start asking your questions i know we've
got questions piling up now
um so and we've got about 500 people in
this webinar so it's going to be
impossible for us to answer every single
question but we'll get to as many as
possible
i put up on the screen mine and mitch's
contact information you can email us at
those email addresses
if you're a tweeter you can tweet us
there at sqldusty is my twitter handle
at mitchell sql is mitch's and then
there's our websites there we blog about
all kinds of different microsoft bi
related things sql server scripts that
we think are useful
ssis design patterns analysis services
stuff mdx power bi
um all kinds of stuff there so check out
those blogs you can ask us questions
there as well
if you have a question and and you can't
get through on the webinar there's the
twitter handle at pw question i'm sorry
pw question you can use that um for your
um
and you can log on to twitter and you
can tag your question with that hashtag
and we'll we'll go and take a look and
we're going to answer questions here in
the webinar for now but then when the
webinar is over um we're going to take
the remaining questions on twitter so
check that out as well um so mitch
do we have questions we have more
questions than i've ever seen oh my
goodness i cannot keep up all right well
we'll handle these as best we can let's
try this one right here all right easy
question how did you get to the database
design window how did you get to the
data okay database design window so this
is in sql server management studio so
that's a good question i'll just pull
that up real quick
all right so there's my database design
window
whatever and i went into my database
i've just got a database here setup
that's called demo and i went to my
database diagrams folder and i just
right clicked and set selected new
database diagram and so if you have
tables that are already in your database
that you want to add you can select
those here and click add or you can just
right click and start naming new tables
and creating them from scratch so
pretty pretty simple all right so
another question we had was
about using the surrogate using an
integer value for the date
why do we do that why would you
recommend that over using the date one
person i believe said that they think
that the kimbel book actually the one
you recommended actually recommends
using a date
well the reason that we go with the
integer and and um i can't remember
specifically why the kindle book said to
to go with a date data type but and and
i i i'm going to guess here and say that
it's because it's a more user-friendly
value um but this the circuit keys are
important um in an integer type format
is because they're going to perform the
best right and and they're the way that
we create relationships between the
dimensions and the fact tables and
remember the whole goal of the data
warehouse is high performance high
performance and so a single field
non-nullable integer key is going to
perform the best okay and so that's the
reason we go with a date a a an integer
field for our date key and our date
dimension
um now
i'll also mention here that the state
key is a little bit different than our
other instead of being than our in our
other keys in our other dimensions
because instead of going with just an
identity column where we're just gonna
you know auto increment it one at a time
we're gonna go with our date dimension
with what's called a smart key and
basically the format looks like um
it'll look like something like this
right if you're looking at my screen
the format for
january 1st 2012
it's going to be an integer value but
it's going to be formatted to look like
a year
a month and a day so it's still going to
be user friendly but then at the same
time we're going to get the performance
benefits of having a non-nullable single
field integer key in the data dimension
so that's why we typically go with the
um the date plus if you're trying to
find a record in your in your day
dimension or in your fact table um you
don't actually have to join to the date
dimension to get it because your fact
table already has the date stored in the
data sk and so you can read that and so
that's kind of nice too
but that's a good question as well
if you want to try to take one more this
one's a little tough but there's a lot
of questions around this one it's
something that dustin will have a blog
out there with a lot of these questions
answered for you but they wanted to know
when you would
have a dimension with a dimension when
would you break off for a snowflake and
there's a lot of questions around that
yeah so and and
there's there's a that's kind of a big
hot debate topic because some people
will say
um well you might want to snowflake
right if you um if you if you want to
maybe you want it for instance something
like product and product category right
maybe you want to break product category
out because we might have another fact
table that doesn't relate to product but
it relates to product category maybe
we've got a forecast fact table right
that we don't forecast at the individual
product level we forecast at a product
category level and so we might have a
forecast fact table and so
that may be a case where you'll see some
people say hey
we want to um snowflake that out
um
now that that's fine and you can
convince me that you may want to do that
but one thing that i'll mention in
regards to analysis services that when
you begin snowflaking
in your data warehouse
there's going to be an impact on the
design of your cube so what analysis is
you have a
a um what's called a reference dimension
right where you use an intermediate
dimension to relate that product
category to our fact sales table and so
that's gonna there's there's some impact
there with having a reference dimension
which you can find on my blog on
sqldusty.wordpress.com if you do a quick
search
um let's see i've got it up here pull it
up real quick
so there's my blog sqldusty.com so if
you go to sql dusting you search
research reference to me
there's a lot of reasons why you might
consider going with a star schema and
typically you see that with people who
are um more um come from a transaction
or an oltp development side because they
want they tend to want to kind of
normalize things a little bit because
that's what they've always done it's
kind of leaning towards that more third
normal form kind of way
of doing things um but you'll you'll get
better performance
um and you and you'll get better
performance with your data warehouse
loading your data warehouse and querying
your data warehouse um if you if you try
not if you try not to normalize things
if you stick with a more denormalized
design because remember the bottom line
is we want good performance right we're
willing to sacrifice some storage or
will if we're willing to sacrifice some
redundancy
um or or some duplication of data rather
um for better performance that's really
the the end goal here is query
performance query performance query
performance
um that's a good question as well
all right i think that's all we have
time for today but we're going to be
doing some questions afterwards is that
correct yep yep so if you have further
questions
uh we'll take questions for about 15 20
minutes or so on twitter depending on
how crazy it gets we'll try to get to
all the questions on twitter there's the
hashtag hashtag pw question if you have
further questions that we just didn't
have time to get to here in the webinar
um log on the twitter hashtag pw
question you can hashtag your question
with that and then we'll try to get to
those as many as possible but thank you
so much everybody for coming to our
webinar we hope that you found it useful
um we enjoy doing these kinds of
webinars so um if you have further
questions about any of this kind of
stuff log on to twitter check out our
blogs go to pragmaticworks.com
lots of great resources at
pragmatworks.com and that is where the
recording will be posted on
pragmaticworks.com
[Music]
you
