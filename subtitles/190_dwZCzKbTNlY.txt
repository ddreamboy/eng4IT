Bonjour allo I am t'shan Canada and in
this course you will learn to implement
machine translation models using the
popular deep learning library Kara's
ability to communicate in foreign
languages helps us in many instances
such as when traveling overseas machine
translation services such as Google
translation service can help you to
understand hundreds of languages at the
press of a button in this course you
will be learning the inner workings of
the models that are empowering these
services
in Chapter one you will be introduced to
machine translation and the
encoder/decoder architecture which is
common deep learning architecture useful
machine translation models next in
Chapter two you will be implementing an
encoder decoder model using the Kara's
functional API in Chapter three you will
learn how to train a model and generate
translations using the Train model
finally you will learn and implement
several techniques that improve the
performance of machine translation
models such as teacher forcing
the data set that you'll be using in
this course consists of two text files
one file contains a set of English
sentences where each line in the file
contains a single sentence
and the other file contains the
corresponding French translations of the
English sentences here you can see an
example of a machine translation task we
want to translate the English sentence I
like cats to French in machine
translation terminology the English
language the language of the sentence to
be translated is called the source
language the French language the
language of the translated sentence is
called the target language
let's now see how a machine learning
model can be used to translate a
sentence first the words of the sauce
sentence are fed to the model one-by-one
sequentially then the model outputs the
predicted translation word by word in a
sequential manner when feeding words to
a machine translation model words need
to be converted to a numerical
representation one Hunton coding is one
of the commonly used transformations in
one hot encoding a word is represented
as a vector of zeros and ones
for example in the sentence I like cats
the word I can be represented with a
vector of length five and the first
element being one
the length of the vector is determined
by the size of the vocabulary the
vocabulary is the collection of unique
words used in the data set
for a specific language
in Cara's you can use the convenient to
categorical function to convert words to
one horton coded vectors however in
order to use this function you will
first need to convert individual words
to integers or IDs
to do that you define a Python
dictionary that map's words to integers
then you create a list called
word IDs that either a tilde Maps each
word to an ID by passing these word IDs
to the two categorical function you can
obtain the 100's if you don't pass in
the number of classes or the length of
the vector Chara's will automatically
detected from the data that you pass but
you can fix the length of the vector by
passing the num classes argument to the
function it is usually a good practice
to fix a length
in situations we are training and
testing data have different words
leaving the lengths unfixed can lead to
errors and unexpected behaviors great
now let's have some fun with 100
